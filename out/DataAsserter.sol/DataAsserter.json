{
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_defaultCurrency",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_optimisticOracleV3",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "dataId",
          "type": "bytes32"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "dataPath",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "description",
          "type": "string"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "asserter",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "assertionId",
          "type": "bytes32"
        }
      ],
      "name": "DataAsserted",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "dataId",
          "type": "bytes32"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "dataPath",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "description",
          "type": "string"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "asserter",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "assertionId",
          "type": "bytes32"
        }
      ],
      "name": "DataAssertionResolved",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "dataId",
          "type": "bytes32"
        },
        {
          "internalType": "string",
          "name": "dataPath",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "description",
          "type": "string"
        }
      ],
      "name": "assertDataFor",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "assertionId",
          "type": "bytes32"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "assertionId",
          "type": "bytes32"
        }
      ],
      "name": "assertionDisputedCallback",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "assertionLiveness",
      "outputs": [
        {
          "internalType": "uint64",
          "name": "",
          "type": "uint64"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "assertionId",
          "type": "bytes32"
        },
        {
          "internalType": "bool",
          "name": "assertedTruthfully",
          "type": "bool"
        }
      ],
      "name": "assertionResolvedCallback",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "name": "assertionsData",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "dataId",
          "type": "bytes32"
        },
        {
          "internalType": "string",
          "name": "dataPath",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "description",
          "type": "string"
        },
        {
          "internalType": "address",
          "name": "asserter",
          "type": "address"
        },
        {
          "internalType": "bool",
          "name": "resolved",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "burnToken",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "checkTokenBalance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "defaultCurrency",
      "outputs": [
        {
          "internalType": "contract IERC20",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "defaultIdentifier",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "assertionId",
          "type": "bytes32"
        }
      ],
      "name": "getData",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        },
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "oo",
      "outputs": [
        {
          "internalType": "contract OptimisticOracleV3Interface",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "validatorToken",
      "outputs": [
        {
          "internalType": "contract ExpandedERC20",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "bytecode": {
    "object": "",
    "sourceMap": "1191:5757:1:-:0;;;2285:519;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;2362:42:1;;;;;2414:53;;;;;;2497:22;;;-1:-1:-1;;;2497:22:1;;;;:20;;:22;;;;;;;;;;;;;;;2414:53;2497:22;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2477:42;;2546:106;;2641:1;;2546:106;;;:::i;:::-;1020:2:73;1002:21;;;1059:2;1039:18;;;1032:30;1099;1093:3;1078:19;;1071:59;1168:3;1161:4;1146:20;;1139:33;;;1209:1;1188:19;;;1181:30;-1:-1:-1;;;1242:3:73;1227:19;;1220:35;1339:4;1327:17;;;-1:-1:-1;1307:18:73;;1300:45;1287:3;1272:19;2546:106:1;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;2529:14:1;:123;;-1:-1:-1;;;;;;2529:123:1;-1:-1:-1;;;;;2529:123:1;;;;;;;;;2662:39;;-1:-1:-1;;;2662:39:1;;2695:4;2662:39;;;1502:51:73;2662:24:1;;1475:18:73;;2662:39:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;2711:14:1;;:39;;-1:-1:-1;;;2711:39:1;;2744:4;2711:39;;;1502:51:73;-1:-1:-1;;;;;2711:14:1;;;;-1:-1:-1;2711:24:1;;-1:-1:-1;1475:18:73;;2711:39:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;2760:14:1;;2793:2;;2760:37;;-1:-1:-1;;;2760:37:1;;-1:-1:-1;;;;;1520:32:73;;;2760:37:1;;;1502:51:73;2760:14:1;;;-1:-1:-1;2760:24:1;;-1:-1:-1;1475:18:73;;2760:37:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2285:519;;1191:5757;;;;;;;;;;:::o;14:177:73:-;93:13;;-1:-1:-1;;;;;135:31:73;;125:42;;115:70;;181:1;178;171:12;115:70;14:177;;;:::o;196:293::-;275:6;283;336:2;324:9;315:7;311:23;307:32;304:52;;;352:1;349;342:12;304:52;375:40;405:9;375:40;:::i;:::-;365:50;;434:49;479:2;468:9;464:18;434:49;:::i;:::-;424:59;;196:293;;;;;:::o;494:184::-;564:6;617:2;605:9;596:7;592:23;588:32;585:52;;;633:1;630;623:12;585:52;-1:-1:-1;656:16:73;;494:184;-1:-1:-1;494:184:73:o;1356:203::-;1191:5757:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "",
    "sourceMap": "1191:5757:1:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1296:35;;;;;-1:-1:-1;;;;;1296:35:1;;;;;;-1:-1:-1;;;;;201:32:73;;;183:51;;171:2;156:18;1296:35:1;;;;;;;;1251:39;;;;;5542:119;;;:::i;:::-;;;615:25:73;;;603:2;588:18;5542:119:1;469:177:73;2923:303:1;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;:::i;1337:47::-;;;;;1840:55;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;;;:::i;1390:47::-;;1433:4;1390:47;;;;;2950:18:73;2938:31;;;2920:50;;2908:2;2893:18;1390:47:1;2776:200:73;6881:65:1;;;;;;:::i;:::-;;;;;1443:42;;;;;3429:2107;;;;;;:::i;:::-;;:::i;5835:849::-;;;;;;:::i;:::-;;:::i;5667:118::-;;;:::i;5542:119::-;5592:7;5618:14;;:36;;-1:-1:-1;;;5618:36:1;;5643:10;5618:36;;;183:51:73;-1:-1:-1;;;;;5618:14:1;;;;:24;;156:18:73;;5618:36:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;5611:43;;5542:119;:::o;2923:303::-;2982:4;3033:27;;;:14;:27;;;;;:36;;;2988:13;;;;-1:-1:-1;;;3033:36:1;;;;3028:89;;3079:5;3071:46;;;;;;;;;;;;;-1:-1:-1;;;3071:46:1;;;;;;;;;;;;;;;;-1:-1:-1;;;3071:46:1;;;;;;;;;;;3028:89;3141:27;;;;3135:4;3141:27;;;;;;;;:36;;;3127:92;;3141:36;;3179:39;;;3141:36;;3127:92;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2923:303;;;;;;:::o;1840:55::-;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;1840:55:1;;;;;;;-1:-1:-1;;;;;;;1840:55:1;;;;-1:-1:-1;;;1840:55:1;;;;;:::o;3429:2107::-;3620:43;;-1:-1:-1;;;3620:43:1;;-1:-1:-1;;;;;3646:15:1;201:32:73;;3620:43:1;;;183:51:73;-1:-1:-1;;;;3620:2:1;:17;;;;156:18:73;;3620:43:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;3605:58;-1:-1:-1;3673:65:1;-1:-1:-1;;;;;3673:15:1;:32;3706:10;3726:4;3605:58;3673:32;:65::i;:::-;3748:46;-1:-1:-1;;;;;3748:15:1;:27;3784:2;3789:4;3748:27;:46::i;:::-;4408:2;-1:-1:-1;;;;;4408:14:1;;4508:8;4572:11;4636:29;4658:6;4636:21;:29::i;:::-;4720:40;4749:10;4720:28;:40::i;:::-;4813:42;4839:15;4813:25;:42::i;:::-;4928:43;4965:4;4928:28;:43::i;:::-;4436:579;;;;;;;;;;;;;:::i;:::-;;;;-1:-1:-1;;4436:579:1;;;;;;;;;;-1:-1:-1;;;;;;4408:865:1;;;;;;;;;5029:10;;5061:4;;5088:1;;1433:4;;5161:15;;5190:4;;5208:17;;5088:1;;4408:865;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;5313:133;;;;;;;;;;;;;;;;;;;;;;;;5407:10;5313:133;;;;-1:-1:-1;5313:133:1;;;;;;5283:27;;;5313:133;5283:27;;;;;;;;:163;;;;;;4394:879;;-1:-1:-1;5313:133:1;;5283:163;;;;;;;;:::i;:::-;-1:-1:-1;5283:163:1;;;;;;;;;;;;:::i;:::-;-1:-1:-1;5283:163:1;;;;;;;;;;;;;;;;;-1:-1:-1;;;5283:163:1;-1:-1:-1;;;;;;5283:163:1;;;-1:-1:-1;;;;;5283:163:1;;;;;;;;;;;;;5461:68;;5517:11;;5505:10;;5474:6;;5461:68;;;;5482:8;;5492:11;;5461:68;:::i;:::-;;;;;;;;3586:1950;3429:2107;;;;;:::o;5835:849::-;5963:10;-1:-1:-1;;;;;5985:2:1;5963:25;;5955:34;;;;;;6078:18;6074:603;;;6112:27;;;;6151:4;6112:27;;;;;;;;:36;;:43;;-1:-1:-1;;;;;;;6112:43:1;;;;;;6169:14;;:60;;-1:-1:-1;;;6169:60:1;;-1:-1:-1;;;;;6189:36:1;;;6169:60;;;12510:51:73;12577:18;;;12570:34;;;;6169:14:1;;;;;:19;;12483:18:73;;6169:60:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;6243:34:1;6280:27;;;:14;:27;;;;;;;;6243:64;;;;;;;;;;;;;;;;;;;6280:27;6243:64;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;6243:64:1;;;-1:-1:-1;;6243:64:1;;;;;;-1:-1:-1;;;;;6243:64:1;;;;;;;;;;;-1:-1:-1;;;6243:64:1;;;;;;;;;;;;6486:22;;;;6365:20;;6403:22;;;;6443:25;;;;6326:225;;6486:22;;-1:-1:-1;6526:11:1;;6326:225;;;;;;;;;6403:22;;6443:25;6326:225;:::i;:::-;;;;;;;;6098:539;5835:849;;:::o;6074:603::-;6650:27;;;;:14;:27;;;;;;;6643:34;;;6650:27;;6643:34;;;;6650:27;6643:34;:::i;:::-;;;;;;;:::i;:::-;-1:-1:-1;6643:34:1;;;;-1:-1:-1;;;;;;6643:34:1;;;5835:849;;:::o;5667:118::-;5705:14;;5741:36;;-1:-1:-1;;;5741:36:1;;5729:10;5741:36;;;183:51:73;;;-1:-1:-1;;;;;5705:14:1;;;;:23;;:14;;5741:24;;156:18:73;;5741:36:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;5705:73;;-1:-1:-1;;;;;;5705:73:1;;;;;;;-1:-1:-1;;;;;12528:32:73;;;5705:73:1;;;12510:51:73;12577:18;;;12570:34;12483:18;;5705:73:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;912:241:24:-;1077:68;;-1:-1:-1;;;;;13402:15:73;;;1077:68:24;;;13384:34:73;13454:15;;13434:18;;;13427:43;13486:18;;;13479:34;;;1050:96:24;;1070:5;;-1:-1:-1;;;1100:27:24;13319:18:73;;1077:68:24;;;;-1:-1:-1;;1077:68:24;;;;;;;;;;;;;;-1:-1:-1;;;;;1077:68:24;-1:-1:-1;;;;;;1077:68:24;;;;;;;;;;1050:19;:96::i;:::-;912:241;;;;:::o;1413:603::-;1768:10;;;1767:62;;-1:-1:-1;1784:39:24;;-1:-1:-1;;;1784:39:24;;1808:4;1784:39;;;13736:34:73;-1:-1:-1;;;;;13806:15:73;;;13786:18;;;13779:43;1784:15:24;;;;;13671:18:73;;1784:39:24;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:44;1767:62;1746:163;;;;-1:-1:-1;;;1746:163:24;;14035:2:73;1746:163:24;;;14017:21:73;14074:2;14054:18;;;14047:30;14113:34;14093:18;;;14086:62;-1:-1:-1;;;14164:18:73;;;14157:52;14226:19;;1746:163:24;;;;;;;;;1946:62;;-1:-1:-1;;;;;12528:32:73;;1946:62:24;;;12510:51:73;12577:18;;;12570:34;;;1919:90:24;;1939:5;;-1:-1:-1;;;1969:22:24;12483:18:73;;1946:62:24;12328:282:73;1919:90:24;1413:603;;;:::o;2586:182:31:-;2647:12;2695:35;2726:3;2715:7;:14;;2695:19;:35::i;:::-;2732:28;2752:7;2732:19;:28::i;:::-;2678:83;;;;;;14413:19:73;;;;14448:12;;14441:28;14485:12;;2678:83:31;;;;;;;;;;;;;2671:90;;2586:182;;;:::o;3145:218::-;3207:12;3267:47;-1:-1:-1;;;;;3287:26:31;;;;;3267:19;:47::i;:::-;3323:31;3351:1;3343:10;;3323:31;;;:19;:31::i;:::-;3250:106;;;;;;;;14663:19:73;;;-1:-1:-1;;;;;;14712:41:73;14707:2;14698:12;;14691:63;14779:2;14770:12;;14508:280;3569:546:31;3628:12;3656:1;3661;3656:6;3652:47;;-1:-1:-1;;3678:10:31;;;;;;;;;;;;-1:-1:-1;;;3678:10:31;;;;;3569:546::o;3652:47::-;3720:1;3708:9;3752:66;3759:6;;3752:66;;3781:5;;;;:::i;:::-;;-1:-1:-1;3800:7:31;;-1:-1:-1;3805:2:31;3800:7;;:::i;:::-;;;3752:66;;;3827:17;3857:3;3847:14;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;3847:14:31;-1:-1:-1;3827:34:31;-1:-1:-1;3883:3:31;3896:192;3903:6;;3896:192;;3929:5;3933:1;3929;:5;:::i;:::-;3925:9;-1:-1:-1;3948:10:31;3978:6;3982:2;3978:1;:6;:::i;:::-;3977:13;;3988:2;3977:13;:::i;:::-;3973:17;;:1;:17;:::i;:::-;3962:29;;:2;:29;:::i;:::-;3948:44;;4006:9;4025:4;4018:12;;4006:24;;4054:2;4044:4;4049:1;4044:7;;;;;;;;:::i;:::-;;;;:12;-1:-1:-1;;;;;4044:12:31;;;;;;;;-1:-1:-1;4070:7:31;4075:2;4070:7;;:::i;:::-;;;3911:177;;3896:192;;;-1:-1:-1;4104:4:31;3569:546;-1:-1:-1;;;;3569:546:31:o;3207:706:24:-;3626:23;3652:69;3680:4;3652:69;;;;;;;;;;;;;;;;;3660:5;-1:-1:-1;;;;;3652:27:24;;;:69;;;;;:::i;:::-;3735:17;;3626:95;;-1:-1:-1;3735:21:24;3731:176;;3830:10;3819:30;;;;;;;;;;;;:::i;:::-;3811:85;;;;-1:-1:-1;;;3811:85:24;;16212:2:73;3811:85:24;;;16194:21:73;16251:2;16231:18;;;16224:30;16290:34;16270:18;;;16263:62;-1:-1:-1;;;16341:18:73;;;16334:40;16391:19;;3811:85:24;16010:406:73;897:1306:31;965:7;1008:9;1028:7;1020:16;;1008:28;;1088:1;-1:-1:-1;;;;;1088:70:31;1084:74;;1182:1;1186:5;1182:9;1177:1;:15;1196:66;1176:86;1172:90;;1286:1;1290:5;1286:9;1281:1;:15;1300:66;1280:86;1276:90;;1390:1;1394:5;1390:9;1385:1;:15;1404:66;1384:86;1380:90;;1494:1;1498:4;1494:8;1489:1;:14;1507:66;1488:85;1484:89;;1597:1;1601:4;1597:8;1592:1;:14;1610:66;1591:85;1587:89;;1717:9;1804:1;1730;1734:66;1730:70;1729:76;;;;;:::i;:::-;;1906:1;1836:66;1832:70;;1831:76;2008:1;1938:66;1934:70;;1933:76;2037:5;2032:11;2047:4;2031:20;2027:24;;;2054:66;2027:93;;;-1:-1:-1;;;897:1306:31:o;3861:223:25:-;3994:12;4025:52;4047:6;4055:4;4061:1;4064:12;4025:21;:52::i;:::-;4018:59;;3861:223;;;;;;:::o;4948:499::-;5113:12;5170:5;5145:21;:30;;5137:81;;;;-1:-1:-1;;;5137:81:25;;16623:2:73;5137:81:25;;;16605:21:73;16662:2;16642:18;;;16635:30;16701:34;16681:18;;;16674:62;-1:-1:-1;;;16752:18:73;;;16745:36;16798:19;;5137:81:25;16421:402:73;5137:81:25;-1:-1:-1;;;;;1465:19:25;;;5228:60;;;;-1:-1:-1;;;5228:60:25;;17030:2:73;5228:60:25;;;17012:21:73;17069:2;17049:18;;;17042:30;17108:31;17088:18;;;17081:59;17157:18;;5228:60:25;16828:353:73;5228:60:25;5300:12;5314:23;5341:6;-1:-1:-1;;;;;5341:11:25;5360:5;5367:4;5341:31;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5299:73;;;;5389:51;5406:7;5415:10;5427:12;5389:16;:51::i;:::-;5382:58;4948:499;-1:-1:-1;;;;;;;4948:499:25:o;7561:692::-;7707:12;7735:7;7731:516;;;-1:-1:-1;7765:10:25;7758:17;;7731:516;7876:17;;:21;7872:365;;8070:10;8064:17;8130:15;8117:10;8113:2;8109:19;8102:44;7872:365;8209:12;8202:20;;-1:-1:-1;;;8202:20:25;;;;;;;;:::i;-1:-1:-1:-;;;;;;;:::i;:::-;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;651:180:73:-;710:6;763:2;751:9;742:7;738:23;734:32;731:52;;;779:1;776;769:12;731:52;-1:-1:-1;802:23:73;;651:180;-1:-1:-1;651:180:73:o;836:250::-;921:1;931:113;945:6;942:1;939:13;931:113;;;1021:11;;;1015:18;1002:11;;;995:39;967:2;960:10;931:113;;;-1:-1:-1;;1078:1:73;1060:16;;1053:27;836:250::o;1091:282::-;1144:3;1182:5;1176:12;1209:6;1204:3;1197:19;1225:76;1294:6;1287:4;1282:3;1278:14;1271:4;1264:5;1260:16;1225:76;:::i;:::-;1355:2;1334:15;-1:-1:-1;;1330:29:73;1321:39;;;;1362:4;1317:50;;1091:282;-1:-1:-1;;1091:282:73:o;1378:486::-;1611:6;1604:14;1597:22;1586:9;1579:41;1656:2;1651;1640:9;1636:18;1629:30;1560:4;1682:56;1734:2;1723:9;1719:18;1711:6;1682:56;:::i;:::-;1786:9;1778:6;1774:22;1769:2;1758:9;1754:18;1747:50;1814:44;1851:6;1843;1814:44;:::i;:::-;1806:52;1378:486;-1:-1:-1;;;;;;1378:486:73:o;2114:657::-;2389:6;2378:9;2371:25;2432:3;2427:2;2416:9;2412:18;2405:31;2352:4;2459:57;2511:3;2500:9;2496:19;2488:6;2459:57;:::i;:::-;2564:9;2556:6;2552:22;2547:2;2536:9;2532:18;2525:50;2592:44;2629:6;2621;2592:44;:::i;:::-;-1:-1:-1;;;;;2672:32:73;;;;2667:2;2652:18;;2645:60;-1:-1:-1;;2749:14:73;;2742:22;2736:3;2721:19;;;2714:51;2584:52;2114:657;-1:-1:-1;;;2114:657:73:o;3163:127::-;3224:10;3219:3;3215:20;3212:1;3205:31;3255:4;3252:1;3245:15;3279:4;3276:1;3269:15;3295:719;3338:5;3391:3;3384:4;3376:6;3372:17;3368:27;3358:55;;3409:1;3406;3399:12;3358:55;3445:6;3432:20;3471:18;3508:2;3504;3501:10;3498:36;;;3514:18;;:::i;:::-;3589:2;3583:9;3557:2;3643:13;;-1:-1:-1;;3639:22:73;;;3663:2;3635:31;3631:40;3619:53;;;3687:18;;;3707:22;;;3684:46;3681:72;;;3733:18;;:::i;:::-;3773:10;3769:2;3762:22;3808:2;3800:6;3793:18;3854:3;3847:4;3842:2;3834:6;3830:15;3826:26;3823:35;3820:55;;;3871:1;3868;3861:12;3820:55;3935:2;3928:4;3920:6;3916:17;3909:4;3901:6;3897:17;3884:54;3982:1;3975:4;3970:2;3962:6;3958:15;3954:26;3947:37;4002:6;3993:15;;;;;;3295:719;;;;:::o;4019:611::-;4116:6;4124;4132;4185:2;4173:9;4164:7;4160:23;4156:32;4153:52;;;4201:1;4198;4191:12;4153:52;4237:9;4224:23;4214:33;;4298:2;4287:9;4283:18;4270:32;4321:18;4362:2;4354:6;4351:14;4348:34;;;4378:1;4375;4368:12;4348:34;4401:50;4443:7;4434:6;4423:9;4419:22;4401:50;:::i;:::-;4391:60;;4504:2;4493:9;4489:18;4476:32;4460:48;;4533:2;4523:8;4520:16;4517:36;;;4549:1;4546;4539:12;4517:36;;4572:52;4616:7;4605:8;4594:9;4590:24;4572:52;:::i;:::-;4562:62;;;4019:611;;;;;:::o;4635:118::-;4721:5;4714:13;4707:21;4700:5;4697:32;4687:60;;4743:1;4740;4733:12;4758:309;4823:6;4831;4884:2;4872:9;4863:7;4859:23;4855:32;4852:52;;;4900:1;4897;4890:12;4852:52;4936:9;4923:23;4913:33;;4996:2;4985:9;4981:18;4968:32;5009:28;5031:5;5009:28;:::i;:::-;5056:5;5046:15;;;4758:309;;;;;:::o;5280:184::-;5350:6;5403:2;5391:9;5382:7;5378:23;5374:32;5371:52;;;5419:1;5416;5409:12;5371:52;-1:-1:-1;5442:16:73;;5280:184;-1:-1:-1;5280:184:73:o;5469:380::-;5548:1;5544:12;;;;5591;;;5612:61;;5666:4;5658:6;5654:17;5644:27;;5612:61;5719:2;5711:6;5708:14;5688:18;5685:38;5682:161;;5765:10;5760:3;5756:20;5753:1;5746:31;5800:4;5797:1;5790:15;5828:4;5825:1;5818:15;5682:161;;5469:380;;;:::o;5854:198::-;5896:3;5934:5;5928:12;5949:65;6007:6;6002:3;5995:4;5988:5;5984:16;5949:65;:::i;:::-;6030:16;;;;;5854:198;-1:-1:-1;;5854:198:73:o;6373:2205::-;-1:-1:-1;;;7468:3:73;7461:32;7443:3;7522:6;7516:13;7538:75;7606:6;7601:2;7596:3;7592:12;7585:4;7577:6;7573:17;7538:75;:::i;:::-;-1:-1:-1;;;7672:2:73;7632:16;;;7664:11;;;7657:41;7723:13;;7745:76;7723:13;7807:2;7799:11;;7792:4;7780:17;;7745:76;:::i;:::-;-1:-1:-1;;;7881:2:73;7840:17;;;;7873:11;;;7866:38;7929:13;;7951:76;7929:13;8013:2;8005:11;;7998:4;7986:17;;7951:76;:::i;:::-;-1:-1:-1;;;8087:2:73;8046:17;;;;8079:11;;;8072:40;8137:13;;8159:76;8137:13;8221:2;8213:11;;8206:4;8194:17;;8159:76;:::i;:::-;-1:-1:-1;;;8295:2:73;8254:17;;;;8287:11;;;8280:38;8343:13;;8365:76;8343:13;8427:2;8419:11;;8412:4;8400:17;;8365:76;:::i;:::-;8457:115;8487:84;8513:57;8566:2;8555:8;8551:2;8547:17;8543:26;6134:34;6122:47;;-1:-1:-1;;;6194:2:73;6185:12;;6178:27;6230:2;6221:12;;6057:182;8513:57;8505:6;8487:84;:::i;:::-;-1:-1:-1;;;6309:25:73;;6359:2;6350:12;;6244:124;8457:115;8450:122;6373:2205;-1:-1:-1;;;;;;;;;;6373:2205:73:o;8583:937::-;8931:4;8960:3;8990:2;8979:9;8972:21;9010:56;9062:2;9051:9;9047:18;9039:6;9010:56;:::i;:::-;-1:-1:-1;;;;;9140:15:73;;;9135:2;9120:18;;9113:43;9192:15;;;9187:2;9172:18;;9165:43;-1:-1:-1;;9244:15:73;;;9239:2;9224:18;;9217:43;9309:18;9297:31;;;;9291:3;9276:19;;9269:60;9366:15;;;;9093:3;9345:19;;9338:44;9413:3;9398:19;;9391:35;;;;9457:3;9442:19;;9435:35;;;;9501:3;9486:19;9479:35;;;;9002:64;8583:937;-1:-1:-1;8583:937:73:o;9840:545::-;9942:2;9937:3;9934:11;9931:448;;;9978:1;10003:5;9999:2;9992:17;10048:4;10044:2;10034:19;10118:2;10106:10;10102:19;10099:1;10095:27;10089:4;10085:38;10154:4;10142:10;10139:20;10136:47;;;-1:-1:-1;10177:4:73;10136:47;10232:2;10227:3;10223:12;10220:1;10216:20;10210:4;10206:31;10196:41;;10287:82;10305:2;10298:5;10295:13;10287:82;;;10350:17;;;10331:1;10320:13;10287:82;;;10291:3;;;9840:545;;;:::o;10561:1352::-;10687:3;10681:10;10714:18;10706:6;10703:30;10700:56;;;10736:18;;:::i;:::-;10765:97;10855:6;10815:38;10847:4;10841:11;10815:38;:::i;:::-;10809:4;10765:97;:::i;:::-;10917:4;;10981:2;10970:14;;10998:1;10993:663;;;;11700:1;11717:6;11714:89;;;-1:-1:-1;11769:19:73;;;11763:26;11714:89;-1:-1:-1;;10518:1:73;10514:11;;;10510:24;10506:29;10496:40;10542:1;10538:11;;;10493:57;11816:81;;10963:944;;10993:663;9787:1;9780:14;;;9824:4;9811:18;;-1:-1:-1;;11029:20:73;;;11147:236;11161:7;11158:1;11155:14;11147:236;;;11250:19;;;11244:26;11229:42;;11342:27;;;;11310:1;11298:14;;;;11177:19;;11147:236;;;11151:3;11411:6;11402:7;11399:19;11396:201;;;11472:19;;;11466:26;-1:-1:-1;;11555:1:73;11551:14;;;11567:3;11547:24;11543:37;11539:42;11524:58;11509:74;;11396:201;-1:-1:-1;;;;;11643:1:73;11627:14;;;11623:22;11610:36;;-1:-1:-1;10561:1352:73:o;11918:405::-;12115:2;12104:9;12097:21;12078:4;12141:56;12193:2;12182:9;12178:18;12170:6;12141:56;:::i;:::-;12245:9;12237:6;12233:22;12228:2;12217:9;12213:18;12206:50;12273:44;12310:6;12302;12273:44;:::i;:::-;12265:52;11918:405;-1:-1:-1;;;;;11918:405:73:o;12615:245::-;12682:6;12735:2;12723:9;12714:7;12710:23;12706:32;12703:52;;;12751:1;12748;12741:12;12703:52;12783:9;12777:16;12802:28;12824:5;12802:28;:::i;14793:127::-;14854:10;14849:3;14845:20;14842:1;14835:31;14885:4;14882:1;14875:15;14909:4;14906:1;14899:15;14925:135;14964:3;14985:17;;;14982:43;;15005:18;;:::i;:::-;-1:-1:-1;15052:1:73;15041:13;;14925:135::o;15065:127::-;15126:10;15121:3;15117:20;15114:1;15107:31;15157:4;15154:1;15147:15;15181:4;15178:1;15171:15;15197:217;15237:1;15263;15253:132;;15307:10;15302:3;15298:20;15295:1;15288:31;15342:4;15339:1;15332:15;15370:4;15367:1;15360:15;15253:132;-1:-1:-1;15399:9:73;;15197:217::o;15419:128::-;15486:9;;;15507:11;;;15504:37;;;15521:18;;:::i;:::-;15419:128;;;;:::o;15552:168::-;15592:7;15658:1;15654;15650:6;15646:14;15643:1;15640:21;15635:1;15628:9;15621:17;15617:45;15614:71;;;15665:18;;:::i;:::-;-1:-1:-1;15705:9:73;;15552:168::o;15725:148::-;15813:4;15792:12;;;15806;;;15788:31;;15831:13;;15828:39;;;15847:18;;:::i;15878:127::-;15939:10;15934:3;15930:20;15927:1;15920:31;15970:4;15967:1;15960:15;15994:4;15991:1;15984:15;17186:287;17315:3;17353:6;17347:13;17369:66;17428:6;17423:3;17416:4;17408:6;17404:17;17369:66;:::i;:::-;17451:16;;;;;17186:287;-1:-1:-1;;17186:287:73:o;17478:231::-;17627:2;17616:9;17609:21;17590:4;17647:56;17699:2;17688:9;17684:18;17676:6;17647:56;:::i",
    "linkReferences": {},
    "immutableReferences": {
      "1361": [
        {
          "start": 238,
          "length": 32
        },
        {
          "start": 1457,
          "length": 32
        },
        {
          "start": 1624,
          "length": 32
        },
        {
          "start": 1677,
          "length": 32
        },
        {
          "start": 1905,
          "length": 32
        }
      ],
      "1367": [
        {
          "start": 333,
          "length": 32
        },
        {
          "start": 1502,
          "length": 32
        },
        {
          "start": 1711,
          "length": 32
        },
        {
          "start": 1750,
          "length": 32
        },
        {
          "start": 2294,
          "length": 32
        }
      ],
      "1372": [
        {
          "start": 461,
          "length": 32
        },
        {
          "start": 1941,
          "length": 32
        }
      ]
    }
  },
  "methodIdentifiers": {
    "assertDataFor(bytes32,string,string)": "de810e96",
    "assertionDisputedCallback(bytes32)": "d448a4ec",
    "assertionLiveness()": "b75d4e24",
    "assertionResolvedCallback(bytes32,bool)": "f1b156b2",
    "assertionsData(bytes32)": "b33893da",
    "burnToken()": "faa0a264",
    "checkTokenBalance()": "4f731087",
    "defaultCurrency()": "20402e1d",
    "defaultIdentifier()": "d509b017",
    "getData(bytes32)": "54f6127f",
    "oo()": "8921a614",
    "validatorToken()": "18e557aa"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.16+commit.07a7930e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_defaultCurrency\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_optimisticOracleV3\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"dataId\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"dataPath\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"description\",\"type\":\"string\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"asserter\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"assertionId\",\"type\":\"bytes32\"}],\"name\":\"DataAsserted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"dataId\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"dataPath\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"description\",\"type\":\"string\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"asserter\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"assertionId\",\"type\":\"bytes32\"}],\"name\":\"DataAssertionResolved\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"dataId\",\"type\":\"bytes32\"},{\"internalType\":\"string\",\"name\":\"dataPath\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"description\",\"type\":\"string\"}],\"name\":\"assertDataFor\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"assertionId\",\"type\":\"bytes32\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"assertionId\",\"type\":\"bytes32\"}],\"name\":\"assertionDisputedCallback\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"assertionLiveness\",\"outputs\":[{\"internalType\":\"uint64\",\"name\":\"\",\"type\":\"uint64\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"assertionId\",\"type\":\"bytes32\"},{\"internalType\":\"bool\",\"name\":\"assertedTruthfully\",\"type\":\"bool\"}],\"name\":\"assertionResolvedCallback\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"name\":\"assertionsData\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"dataId\",\"type\":\"bytes32\"},{\"internalType\":\"string\",\"name\":\"dataPath\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"description\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"asserter\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"resolved\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"burnToken\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"checkTokenBalance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"defaultCurrency\",\"outputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"defaultIdentifier\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"assertionId\",\"type\":\"bytes32\"}],\"name\":\"getData\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"},{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"oo\",\"outputs\":[{\"internalType\":\"contract OptimisticOracleV3Interface\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"validatorToken\",\"outputs\":[{\"internalType\":\"contract ExpandedERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/DataAsserter.sol\":\"DataAsserter\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@across-protocol/=node_modules/@across-protocol/\",\":@ensdomains/=node_modules/@ensdomains/\",\":@eth-optimism/=node_modules/@across-protocol/contracts/node_modules/@eth-optimism/\",\":@gnosis.pm/=node_modules/@gnosis.pm/\",\":@maticnetwork/=node_modules/@maticnetwork/\",\":@openzeppelin/=node_modules/@openzeppelin/\",\":@uma/=node_modules/@uma/\",\":@uniswap/=node_modules/@uniswap/\",\":base64-sol/=node_modules/base64-sol/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":eth-gas-reporter/=node_modules/eth-gas-reporter/\",\":forge-std/=lib/forge-std/src/\",\":hardhat-deploy/=node_modules/hardhat-deploy/\",\":hardhat/=node_modules/hardhat/\"]},\"sources\":{\"contracts/DataAsserter.sol\":{\"keccak256\":\"0xd59e29ecdc9bcf1c689067ff20eb0d8ff6da313e9e9c6b3f5222e1a0c3049f4f\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://f477d11db1e86ee259d603261540d22a6798a5d58acfea68261e908096b8a697\",\"dweb:/ipfs/QmXVUx7PZDhzj4NJ57V5HaFjD2RbWKtA6q6Yrt1zgFMGUQ\"]},\"node_modules/@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0x24e0364e503a9bbde94c715d26573a76f14cd2a202d45f96f52134ab806b67b9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e12cbaa7378fd9b62280e4e1d164bedcb4399ce238f5f98fc0eefb7e50577981\",\"dweb:/ipfs/QmXRoFGUgfsaRkoPT5bxNMtSayKTQ8GZATLPXf69HcRA51\"]},\"node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0xdadd41acb749920eccf40aeaa8d291adf9751399a7343561bad13e7a8d99be0b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://12af4ac016f9fdf3be5d15824f4292272aa11f6b2e0192a0f7320f5ad49bbbf0\",\"dweb:/ipfs/QmRXMpdqCgA3TYuYxBodqs5p9jGbnMW6xa2gvjppvq4TWk\"]},\"node_modules/@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xbbc8ac883ac3c0078ce5ad3e288fbb3ffcc8a30c3a98c0fda0114d64fc44fca2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87a7a5d2f6f63f84598af02b8c50ca2df2631cb8ba2453e8d95fcb17e4be9824\",\"dweb:/ipfs/QmR76hqtAcRqoFj33tmNjcWTLrgNsAaakYwnKZ8zoJtKei\"]},\"node_modules/@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x8de418a5503946cabe331f35fe242d3201a73f67f77aaeb7110acb1f30423aca\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a376d3dda2cb70536c0a45c208b29b34ac560c4cb4f513a42079f96ba47d2dd\",\"dweb:/ipfs/QmZQg6gn1sUpM8wHzwNvSnihumUCAhxD119MpXeKp8B9s8\"]},\"node_modules/@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0xc3d946432c0ddbb1f846a0d3985be71299df331b91d06732152117f62f0be2b5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4632c341a06ba5c079b51ca5a915efab4e6ab57735b37839b3e8365ff806a43e\",\"dweb:/ipfs/QmTHT3xHYed2wajEoA5qu7ii2BxLpPhQZHwAhtLK5Z7ANK\"]},\"node_modules/@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0x2ccf9d2313a313d41a791505f2b5abfdc62191b5d4334f7f7a82691c088a1c87\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b3a57d0854b2fdce6ebff933a48dca2445643d1eccfc27f00292e937f26c6a58\",\"dweb:/ipfs/QmW45rZooS9TqR4YXUbjRbtf2Bpb5ouSarBvfW1LdGprvV\"]},\"node_modules/@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"node_modules/@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x32c202bd28995dd20c4347b7c6467a6d3241c74c8ad3edcbb610cd9205916c45\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8179c356adb19e70d6b31a1eedc8c5c7f0c00e669e2540f4099e3844c6074d30\",\"dweb:/ipfs/QmWFbivarEobbqhS1go64ootVuHfVohBseerYy9FTEd1W2\"]},\"node_modules/@uma/core/contracts/common/implementation/AddressWhitelist.sol\":{\"keccak256\":\"0xc1f20b925f9d37230aaf7bbee536f9a9b08e4772864f0a243ff1b69b54710fee\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://55bc6782bd269463214dbafa8702b2ff33910fd4a51ab24d775aabb15e278bcc\",\"dweb:/ipfs/QmV41DnGByGBtg8gk7MG6Nr3xYo5R5varZ8cewywdKNATQ\"]},\"node_modules/@uma/core/contracts/common/implementation/AncillaryData.sol\":{\"keccak256\":\"0x8ff33ac32d3e6de25de9e0ac2c0ff9a621f187fa97e9ee84092b327471baa3ce\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://0bbaed49756e8cf7ef405e132f441cd7a735ac6186a200b0179147e7d137b74a\",\"dweb:/ipfs/QmeSBJX5a61LZPxbkUKS2NF4LSxemgDwjD65fCAmyP7PX2\"]},\"node_modules/@uma/core/contracts/common/implementation/ExpandedERC20.sol\":{\"keccak256\":\"0x8201459d3f78a1f97da7c421f2fbb859924d4facfc5fc235ba65d85bf12b2229\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://990c055523abe059c0e3e9dc0d631b17db960899dbfcfb2c562bc1ed9de8f140\",\"dweb:/ipfs/QmNgQP68bBrZvP2Rs4TdpESS3LFxqGgtTELZ1wm5mZqh4K\"]},\"node_modules/@uma/core/contracts/common/implementation/Lockable.sol\":{\"keccak256\":\"0x41d78fcce54598ad5f26bc0b778c0f4fedbd836401625e49e736979f69a87ef0\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://4ce111bb50441ef5125e7d42284f6debbc17fd589515d7b8cede7e9d1d5f0ede\",\"dweb:/ipfs/QmaXiXACWVEDDHoCHNXdVBoNpf8QNHkUZ1kf5MfbxfL6jj\"]},\"node_modules/@uma/core/contracts/common/implementation/MultiRole.sol\":{\"keccak256\":\"0x134c5a2f847832705be631f2b4eb2a3e23a91a2f0e63560abb481e85eeebfae6\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://f1267c6ad560d1eb896575919ecca13759bf50bb82d1215e03fc1f0424ec37a6\",\"dweb:/ipfs/QmXewGxpSmSMGYmT6ZUyxCVzy2cybxicbnyCn8w87m5mo3\"]},\"node_modules/@uma/core/contracts/common/interfaces/AddressWhitelistInterface.sol\":{\"keccak256\":\"0x22fb8588dff1d5cff76a28111d6c9b190765d99facd93c8ff3b54771f245c0d8\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://5ecd993f00de290a3c7bf21da23a9439cf2ccb22028316df92b79780ac8aa533\",\"dweb:/ipfs/QmTZ7x7U4EEzTacqapzSdFs2np5WNsqm4XeUBqzQxxDJei\"]},\"node_modules/@uma/core/contracts/common/interfaces/ExpandedIERC20.sol\":{\"keccak256\":\"0xb8252039cba45f1c19cd677f150a9823a5d6e1845cad90e3041d97c96f273c26\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://95106656c95e12c30a2a4c482a859df6df55c3b56bb9f7835eb5c685ca3175d3\",\"dweb:/ipfs/QmcuJoX7T53vTCDcQK8WcCJdT1LzHS35vPmSVfg1DG32cd\"]},\"node_modules/@uma/core/contracts/data-verification-mechanism/implementation/Constants.sol\":{\"keccak256\":\"0xe40957105a9240c6bcb9753fd0011fe9f382c437cd6771c57bf7a96f8ceb9c84\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://cbf0d25e841b1f5c4022d09fb29220cb428139443cb29c4ab8dbfff71dffcc05\",\"dweb:/ipfs/QmSVVr5wH1tZi6WmKyuy1K8yS6JN4DeK5kWaZpPKtXiqkK\"]},\"node_modules/@uma/core/contracts/data-verification-mechanism/interfaces/FinderInterface.sol\":{\"keccak256\":\"0x9166fbfe08e954eb86d33c114fcde7ce4fd0dda5d9d28b31210582bfc769fa86\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://e611e12bcaaebfdf65b67c566ff1d34708e757f01a445bd87c55862e89383b81\",\"dweb:/ipfs/QmYNSq5oopTShdS6j4VWKqoLxmQSRKmWebCxw6K4LfmKrf\"]},\"node_modules/@uma/core/contracts/optimistic-oracle-v3/implementation/ClaimData.sol\":{\"keccak256\":\"0x6e887a70326e5ede4a8c5002d4123a8c77b477ce58cf92533c38cd3dc6142cb5\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://bdafa7c59d0825da944c46664bddb1203bb4158dd0e1ddd6bbdeb276e66be0f8\",\"dweb:/ipfs/QmVb496JWqBib55HX6G3iPkAMv64Bj2UDegeVEYiNcYuDZ\"]},\"node_modules/@uma/core/contracts/optimistic-oracle-v3/interfaces/OptimisticOracleV3CallbackRecipientInterface.sol\":{\"keccak256\":\"0x79f90bc84ed5d394380e99f0a5d1b219abd9016bc3a02fad0099014af08af03e\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://dc1b7b847eb711750bc76ab45a13294b05fc09e361294a6bdffb90cb15f50b63\",\"dweb:/ipfs/QmQSs2R7mmGojGdNkqP75Vf7LajRkfJ1oGuYAUCHYGmPEQ\"]},\"node_modules/@uma/core/contracts/optimistic-oracle-v3/interfaces/OptimisticOracleV3Interface.sol\":{\"keccak256\":\"0xf31322bfd64854f0bfa92051d6ec711c1eed15d8042f394f5c24c05378218367\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://535bc2a6060e86a49524fd3c0062afcf83077530cefb3c1b8179b832f03ca81e\",\"dweb:/ipfs/QmQZhqn6oUiebSWEKbqcmiMGkqAb8B59WsRAyFU8WY84ct\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.16+commit.07a7930e"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_defaultCurrency",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "_optimisticOracleV3",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "constructor"
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "dataId",
              "type": "bytes32",
              "indexed": true
            },
            {
              "internalType": "string",
              "name": "dataPath",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "string",
              "name": "description",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "address",
              "name": "asserter",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "bytes32",
              "name": "assertionId",
              "type": "bytes32",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "DataAsserted",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "dataId",
              "type": "bytes32",
              "indexed": true
            },
            {
              "internalType": "string",
              "name": "dataPath",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "string",
              "name": "description",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "address",
              "name": "asserter",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "bytes32",
              "name": "assertionId",
              "type": "bytes32",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "DataAssertionResolved",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "dataId",
              "type": "bytes32"
            },
            {
              "internalType": "string",
              "name": "dataPath",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "description",
              "type": "string"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "assertDataFor",
          "outputs": [
            {
              "internalType": "bytes32",
              "name": "assertionId",
              "type": "bytes32"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "assertionId",
              "type": "bytes32"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "assertionDisputedCallback"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "assertionLiveness",
          "outputs": [
            {
              "internalType": "uint64",
              "name": "",
              "type": "uint64"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "assertionId",
              "type": "bytes32"
            },
            {
              "internalType": "bool",
              "name": "assertedTruthfully",
              "type": "bool"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "assertionResolvedCallback"
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "",
              "type": "bytes32"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "assertionsData",
          "outputs": [
            {
              "internalType": "bytes32",
              "name": "dataId",
              "type": "bytes32"
            },
            {
              "internalType": "string",
              "name": "dataPath",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "description",
              "type": "string"
            },
            {
              "internalType": "address",
              "name": "asserter",
              "type": "address"
            },
            {
              "internalType": "bool",
              "name": "resolved",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "burnToken"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "checkTokenBalance",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "defaultCurrency",
          "outputs": [
            {
              "internalType": "contract IERC20",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "defaultIdentifier",
          "outputs": [
            {
              "internalType": "bytes32",
              "name": "",
              "type": "bytes32"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "assertionId",
              "type": "bytes32"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getData",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            },
            {
              "internalType": "string",
              "name": "",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "",
              "type": "string"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "oo",
          "outputs": [
            {
              "internalType": "contract OptimisticOracleV3Interface",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "validatorToken",
          "outputs": [
            {
              "internalType": "contract ExpandedERC20",
              "name": "",
              "type": "address"
            }
          ]
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {},
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {},
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        "@across-protocol/=node_modules/@across-protocol/",
        "@ensdomains/=node_modules/@ensdomains/",
        "@eth-optimism/=node_modules/@across-protocol/contracts/node_modules/@eth-optimism/",
        "@gnosis.pm/=node_modules/@gnosis.pm/",
        "@maticnetwork/=node_modules/@maticnetwork/",
        "@openzeppelin/=node_modules/@openzeppelin/",
        "@uma/=node_modules/@uma/",
        "@uniswap/=node_modules/@uniswap/",
        "base64-sol/=node_modules/base64-sol/",
        "ds-test/=lib/forge-std/lib/ds-test/src/",
        "eth-gas-reporter/=node_modules/eth-gas-reporter/",
        "forge-std/=lib/forge-std/src/",
        "hardhat-deploy/=node_modules/hardhat-deploy/",
        "hardhat/=node_modules/hardhat/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 200
      },
      "metadata": {
        "bytecodeHash": "ipfs"
      },
      "compilationTarget": {
        "contracts/DataAsserter.sol": "DataAsserter"
      },
      "libraries": {}
    },
    "sources": {
      "contracts/DataAsserter.sol": {
        "keccak256": "0xd59e29ecdc9bcf1c689067ff20eb0d8ff6da313e9e9c6b3f5222e1a0c3049f4f",
        "urls": [
          "bzz-raw://f477d11db1e86ee259d603261540d22a6798a5d58acfea68261e908096b8a697",
          "dweb:/ipfs/QmXVUx7PZDhzj4NJ57V5HaFjD2RbWKtA6q6Yrt1zgFMGUQ"
        ],
        "license": "AGPL-3.0-only"
      },
      "node_modules/@openzeppelin/contracts/access/Ownable.sol": {
        "keccak256": "0x24e0364e503a9bbde94c715d26573a76f14cd2a202d45f96f52134ab806b67b9",
        "urls": [
          "bzz-raw://e12cbaa7378fd9b62280e4e1d164bedcb4399ce238f5f98fc0eefb7e50577981",
          "dweb:/ipfs/QmXRoFGUgfsaRkoPT5bxNMtSayKTQ8GZATLPXf69HcRA51"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol": {
        "keccak256": "0xdadd41acb749920eccf40aeaa8d291adf9751399a7343561bad13e7a8d99be0b",
        "urls": [
          "bzz-raw://12af4ac016f9fdf3be5d15824f4292272aa11f6b2e0192a0f7320f5ad49bbbf0",
          "dweb:/ipfs/QmRXMpdqCgA3TYuYxBodqs5p9jGbnMW6xa2gvjppvq4TWk"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/token/ERC20/IERC20.sol": {
        "keccak256": "0xbbc8ac883ac3c0078ce5ad3e288fbb3ffcc8a30c3a98c0fda0114d64fc44fca2",
        "urls": [
          "bzz-raw://87a7a5d2f6f63f84598af02b8c50ca2df2631cb8ba2453e8d95fcb17e4be9824",
          "dweb:/ipfs/QmR76hqtAcRqoFj33tmNjcWTLrgNsAaakYwnKZ8zoJtKei"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
        "keccak256": "0x8de418a5503946cabe331f35fe242d3201a73f67f77aaeb7110acb1f30423aca",
        "urls": [
          "bzz-raw://5a376d3dda2cb70536c0a45c208b29b34ac560c4cb4f513a42079f96ba47d2dd",
          "dweb:/ipfs/QmZQg6gn1sUpM8wHzwNvSnihumUCAhxD119MpXeKp8B9s8"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol": {
        "keccak256": "0xc3d946432c0ddbb1f846a0d3985be71299df331b91d06732152117f62f0be2b5",
        "urls": [
          "bzz-raw://4632c341a06ba5c079b51ca5a915efab4e6ab57735b37839b3e8365ff806a43e",
          "dweb:/ipfs/QmTHT3xHYed2wajEoA5qu7ii2BxLpPhQZHwAhtLK5Z7ANK"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/utils/Address.sol": {
        "keccak256": "0x2ccf9d2313a313d41a791505f2b5abfdc62191b5d4334f7f7a82691c088a1c87",
        "urls": [
          "bzz-raw://b3a57d0854b2fdce6ebff933a48dca2445643d1eccfc27f00292e937f26c6a58",
          "dweb:/ipfs/QmW45rZooS9TqR4YXUbjRbtf2Bpb5ouSarBvfW1LdGprvV"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/utils/Context.sol": {
        "keccak256": "0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7",
        "urls": [
          "bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92",
          "dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/utils/Strings.sol": {
        "keccak256": "0x32c202bd28995dd20c4347b7c6467a6d3241c74c8ad3edcbb610cd9205916c45",
        "urls": [
          "bzz-raw://8179c356adb19e70d6b31a1eedc8c5c7f0c00e669e2540f4099e3844c6074d30",
          "dweb:/ipfs/QmWFbivarEobbqhS1go64ootVuHfVohBseerYy9FTEd1W2"
        ],
        "license": "MIT"
      },
      "node_modules/@uma/core/contracts/common/implementation/AddressWhitelist.sol": {
        "keccak256": "0xc1f20b925f9d37230aaf7bbee536f9a9b08e4772864f0a243ff1b69b54710fee",
        "urls": [
          "bzz-raw://55bc6782bd269463214dbafa8702b2ff33910fd4a51ab24d775aabb15e278bcc",
          "dweb:/ipfs/QmV41DnGByGBtg8gk7MG6Nr3xYo5R5varZ8cewywdKNATQ"
        ],
        "license": "AGPL-3.0-only"
      },
      "node_modules/@uma/core/contracts/common/implementation/AncillaryData.sol": {
        "keccak256": "0x8ff33ac32d3e6de25de9e0ac2c0ff9a621f187fa97e9ee84092b327471baa3ce",
        "urls": [
          "bzz-raw://0bbaed49756e8cf7ef405e132f441cd7a735ac6186a200b0179147e7d137b74a",
          "dweb:/ipfs/QmeSBJX5a61LZPxbkUKS2NF4LSxemgDwjD65fCAmyP7PX2"
        ],
        "license": "AGPL-3.0-only"
      },
      "node_modules/@uma/core/contracts/common/implementation/ExpandedERC20.sol": {
        "keccak256": "0x8201459d3f78a1f97da7c421f2fbb859924d4facfc5fc235ba65d85bf12b2229",
        "urls": [
          "bzz-raw://990c055523abe059c0e3e9dc0d631b17db960899dbfcfb2c562bc1ed9de8f140",
          "dweb:/ipfs/QmNgQP68bBrZvP2Rs4TdpESS3LFxqGgtTELZ1wm5mZqh4K"
        ],
        "license": "AGPL-3.0-only"
      },
      "node_modules/@uma/core/contracts/common/implementation/Lockable.sol": {
        "keccak256": "0x41d78fcce54598ad5f26bc0b778c0f4fedbd836401625e49e736979f69a87ef0",
        "urls": [
          "bzz-raw://4ce111bb50441ef5125e7d42284f6debbc17fd589515d7b8cede7e9d1d5f0ede",
          "dweb:/ipfs/QmaXiXACWVEDDHoCHNXdVBoNpf8QNHkUZ1kf5MfbxfL6jj"
        ],
        "license": "AGPL-3.0-only"
      },
      "node_modules/@uma/core/contracts/common/implementation/MultiRole.sol": {
        "keccak256": "0x134c5a2f847832705be631f2b4eb2a3e23a91a2f0e63560abb481e85eeebfae6",
        "urls": [
          "bzz-raw://f1267c6ad560d1eb896575919ecca13759bf50bb82d1215e03fc1f0424ec37a6",
          "dweb:/ipfs/QmXewGxpSmSMGYmT6ZUyxCVzy2cybxicbnyCn8w87m5mo3"
        ],
        "license": "AGPL-3.0-only"
      },
      "node_modules/@uma/core/contracts/common/interfaces/AddressWhitelistInterface.sol": {
        "keccak256": "0x22fb8588dff1d5cff76a28111d6c9b190765d99facd93c8ff3b54771f245c0d8",
        "urls": [
          "bzz-raw://5ecd993f00de290a3c7bf21da23a9439cf2ccb22028316df92b79780ac8aa533",
          "dweb:/ipfs/QmTZ7x7U4EEzTacqapzSdFs2np5WNsqm4XeUBqzQxxDJei"
        ],
        "license": "AGPL-3.0-only"
      },
      "node_modules/@uma/core/contracts/common/interfaces/ExpandedIERC20.sol": {
        "keccak256": "0xb8252039cba45f1c19cd677f150a9823a5d6e1845cad90e3041d97c96f273c26",
        "urls": [
          "bzz-raw://95106656c95e12c30a2a4c482a859df6df55c3b56bb9f7835eb5c685ca3175d3",
          "dweb:/ipfs/QmcuJoX7T53vTCDcQK8WcCJdT1LzHS35vPmSVfg1DG32cd"
        ],
        "license": "AGPL-3.0-only"
      },
      "node_modules/@uma/core/contracts/data-verification-mechanism/implementation/Constants.sol": {
        "keccak256": "0xe40957105a9240c6bcb9753fd0011fe9f382c437cd6771c57bf7a96f8ceb9c84",
        "urls": [
          "bzz-raw://cbf0d25e841b1f5c4022d09fb29220cb428139443cb29c4ab8dbfff71dffcc05",
          "dweb:/ipfs/QmSVVr5wH1tZi6WmKyuy1K8yS6JN4DeK5kWaZpPKtXiqkK"
        ],
        "license": "AGPL-3.0-only"
      },
      "node_modules/@uma/core/contracts/data-verification-mechanism/interfaces/FinderInterface.sol": {
        "keccak256": "0x9166fbfe08e954eb86d33c114fcde7ce4fd0dda5d9d28b31210582bfc769fa86",
        "urls": [
          "bzz-raw://e611e12bcaaebfdf65b67c566ff1d34708e757f01a445bd87c55862e89383b81",
          "dweb:/ipfs/QmYNSq5oopTShdS6j4VWKqoLxmQSRKmWebCxw6K4LfmKrf"
        ],
        "license": "AGPL-3.0-only"
      },
      "node_modules/@uma/core/contracts/optimistic-oracle-v3/implementation/ClaimData.sol": {
        "keccak256": "0x6e887a70326e5ede4a8c5002d4123a8c77b477ce58cf92533c38cd3dc6142cb5",
        "urls": [
          "bzz-raw://bdafa7c59d0825da944c46664bddb1203bb4158dd0e1ddd6bbdeb276e66be0f8",
          "dweb:/ipfs/QmVb496JWqBib55HX6G3iPkAMv64Bj2UDegeVEYiNcYuDZ"
        ],
        "license": "AGPL-3.0-only"
      },
      "node_modules/@uma/core/contracts/optimistic-oracle-v3/interfaces/OptimisticOracleV3CallbackRecipientInterface.sol": {
        "keccak256": "0x79f90bc84ed5d394380e99f0a5d1b219abd9016bc3a02fad0099014af08af03e",
        "urls": [
          "bzz-raw://dc1b7b847eb711750bc76ab45a13294b05fc09e361294a6bdffb90cb15f50b63",
          "dweb:/ipfs/QmQSs2R7mmGojGdNkqP75Vf7LajRkfJ1oGuYAUCHYGmPEQ"
        ],
        "license": "AGPL-3.0-only"
      },
      "node_modules/@uma/core/contracts/optimistic-oracle-v3/interfaces/OptimisticOracleV3Interface.sol": {
        "keccak256": "0xf31322bfd64854f0bfa92051d6ec711c1eed15d8042f394f5c24c05378218367",
        "urls": [
          "bzz-raw://535bc2a6060e86a49524fd3c0062afcf83077530cefb3c1b8179b832f03ca81e",
          "dweb:/ipfs/QmQZhqn6oUiebSWEKbqcmiMGkqAb8B59WsRAyFU8WY84ct"
        ],
        "license": "AGPL-3.0-only"
      }
    },
    "version": 1
  },
  "ast": {
    "absolutePath": "contracts/DataAsserter.sol",
    "id": 1730,
    "exportedSymbols": {
      "Address": [
        46393
      ],
      "AddressWhitelist": [
        47212
      ],
      "AddressWhitelistInterface": [
        50542
      ],
      "ClaimData": [
        47620
      ],
      "Context": [
        46415
      ],
      "DataAsserter": [
        1729
      ],
      "ERC20": [
        45771
      ],
      "Exclusive": [
        49705
      ],
      "ExpandedERC20": [
        47843
      ],
      "ExpandedIERC20": [
        50590
      ],
      "FinderInterface": [
        51164
      ],
      "IERC20": [
        45849
      ],
      "IERC20Metadata": [
        45874
      ],
      "Lockable": [
        49553
      ],
      "MultiRole": [
        50257
      ],
      "OptimisticOracleConstraints": [
        50644
      ],
      "OptimisticOracleV3CallbackRecipientInterface": [
        53207
      ],
      "OptimisticOracleV3Interface": [
        53397
      ],
      "OracleInterfaces": [
        50639
      ],
      "Ownable": [
        45183
      ],
      "SafeERC20": [
        46098
      ],
      "Shared": [
        49801
      ],
      "Strings": [
        46618
      ]
    },
    "nodeType": "SourceUnit",
    "src": "42:6906:1",
    "nodes": [
      {
        "id": 1345,
        "nodeType": "PragmaDirective",
        "src": "42:23:1",
        "nodes": [],
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ]
      },
      {
        "id": 1346,
        "nodeType": "ImportDirective",
        "src": "67:72:1",
        "nodes": [],
        "absolutePath": "node_modules/@uma/core/contracts/common/implementation/AddressWhitelist.sol",
        "file": "@uma/core/contracts/common/implementation/AddressWhitelist.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 1730,
        "sourceUnit": 47213,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 1347,
        "nodeType": "ImportDirective",
        "src": "140:69:1",
        "nodes": [],
        "absolutePath": "node_modules/@uma/core/contracts/common/implementation/ExpandedERC20.sol",
        "file": "@uma/core/contracts/common/implementation/ExpandedERC20.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 1730,
        "sourceUnit": 47844,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 1348,
        "nodeType": "ImportDirective",
        "src": "210:86:1",
        "nodes": [],
        "absolutePath": "node_modules/@uma/core/contracts/data-verification-mechanism/implementation/Constants.sol",
        "file": "@uma/core/contracts/data-verification-mechanism/implementation/Constants.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 1730,
        "sourceUnit": 50645,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 1349,
        "nodeType": "ImportDirective",
        "src": "297:88:1",
        "nodes": [],
        "absolutePath": "node_modules/@uma/core/contracts/data-verification-mechanism/interfaces/FinderInterface.sol",
        "file": "@uma/core/contracts/data-verification-mechanism/interfaces/FinderInterface.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 1730,
        "sourceUnit": 51165,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 1350,
        "nodeType": "ImportDirective",
        "src": "386:79:1",
        "nodes": [],
        "absolutePath": "node_modules/@uma/core/contracts/optimistic-oracle-v3/implementation/ClaimData.sol",
        "file": "@uma/core/contracts/optimistic-oracle-v3/implementation/ClaimData.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 1730,
        "sourceUnit": 51706,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 1351,
        "nodeType": "ImportDirective",
        "src": "466:93:1",
        "nodes": [],
        "absolutePath": "node_modules/@uma/core/contracts/optimistic-oracle-v3/interfaces/OptimisticOracleV3Interface.sol",
        "file": "@uma/core/contracts/optimistic-oracle-v3/interfaces/OptimisticOracleV3Interface.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 1730,
        "sourceUnit": 53398,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 1352,
        "nodeType": "ImportDirective",
        "src": "560:110:1",
        "nodes": [],
        "absolutePath": "node_modules/@uma/core/contracts/optimistic-oracle-v3/interfaces/OptimisticOracleV3CallbackRecipientInterface.sol",
        "file": "@uma/core/contracts/optimistic-oracle-v3/interfaces/OptimisticOracleV3CallbackRecipientInterface.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 1730,
        "sourceUnit": 53208,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 1353,
        "nodeType": "ImportDirective",
        "src": "671:65:1",
        "nodes": [],
        "absolutePath": "node_modules/@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
        "file": "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 1730,
        "sourceUnit": 46099,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 1354,
        "nodeType": "ImportDirective",
        "src": "737:51:1",
        "nodes": [],
        "absolutePath": "node_modules/@openzeppelin/contracts/utils/Strings.sol",
        "file": "@openzeppelin/contracts/utils/Strings.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 1730,
        "sourceUnit": 46619,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 1729,
        "nodeType": "ContractDefinition",
        "src": "1191:5757:1",
        "nodes": [
          {
            "id": 1358,
            "nodeType": "UsingForDirective",
            "src": "1219:27:1",
            "nodes": [],
            "global": false,
            "libraryName": {
              "id": 1355,
              "name": "SafeERC20",
              "nameLocations": [
                "1225:9:1"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 46098,
              "src": "1225:9:1"
            },
            "typeName": {
              "id": 1357,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 1356,
                "name": "IERC20",
                "nameLocations": [
                  "1239:6:1"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 45849,
                "src": "1239:6:1"
              },
              "referencedDeclaration": 45849,
              "src": "1239:6:1",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IERC20_$45849",
                "typeString": "contract IERC20"
              }
            }
          },
          {
            "id": 1361,
            "nodeType": "VariableDeclaration",
            "src": "1251:39:1",
            "nodes": [],
            "constant": false,
            "functionSelector": "20402e1d",
            "mutability": "immutable",
            "name": "defaultCurrency",
            "nameLocation": "1275:15:1",
            "scope": 1729,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_IERC20_$45849",
              "typeString": "contract IERC20"
            },
            "typeName": {
              "id": 1360,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 1359,
                "name": "IERC20",
                "nameLocations": [
                  "1251:6:1"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 45849,
                "src": "1251:6:1"
              },
              "referencedDeclaration": 45849,
              "src": "1251:6:1",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IERC20_$45849",
                "typeString": "contract IERC20"
              }
            },
            "visibility": "public"
          },
          {
            "id": 1364,
            "nodeType": "VariableDeclaration",
            "src": "1296:35:1",
            "nodes": [],
            "constant": false,
            "functionSelector": "18e557aa",
            "mutability": "mutable",
            "name": "validatorToken",
            "nameLocation": "1317:14:1",
            "scope": 1729,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_ExpandedERC20_$47843",
              "typeString": "contract ExpandedERC20"
            },
            "typeName": {
              "id": 1363,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 1362,
                "name": "ExpandedERC20",
                "nameLocations": [
                  "1296:13:1"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 47843,
                "src": "1296:13:1"
              },
              "referencedDeclaration": 47843,
              "src": "1296:13:1",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ExpandedERC20_$47843",
                "typeString": "contract ExpandedERC20"
              }
            },
            "visibility": "public"
          },
          {
            "id": 1367,
            "nodeType": "VariableDeclaration",
            "src": "1337:47:1",
            "nodes": [],
            "constant": false,
            "functionSelector": "8921a614",
            "mutability": "immutable",
            "name": "oo",
            "nameLocation": "1382:2:1",
            "scope": 1729,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_OptimisticOracleV3Interface_$53397",
              "typeString": "contract OptimisticOracleV3Interface"
            },
            "typeName": {
              "id": 1366,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 1365,
                "name": "OptimisticOracleV3Interface",
                "nameLocations": [
                  "1337:27:1"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 53397,
                "src": "1337:27:1"
              },
              "referencedDeclaration": 53397,
              "src": "1337:27:1",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_OptimisticOracleV3Interface_$53397",
                "typeString": "contract OptimisticOracleV3Interface"
              }
            },
            "visibility": "public"
          },
          {
            "id": 1370,
            "nodeType": "VariableDeclaration",
            "src": "1390:47:1",
            "nodes": [],
            "constant": true,
            "functionSelector": "b75d4e24",
            "mutability": "constant",
            "name": "assertionLiveness",
            "nameLocation": "1413:17:1",
            "scope": 1729,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint64",
              "typeString": "uint64"
            },
            "typeName": {
              "id": 1368,
              "name": "uint64",
              "nodeType": "ElementaryTypeName",
              "src": "1390:6:1",
              "typeDescriptions": {
                "typeIdentifier": "t_uint64",
                "typeString": "uint64"
              }
            },
            "value": {
              "hexValue": "37323030",
              "id": 1369,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "1433:4:1",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_7200_by_1",
                "typeString": "int_const 7200"
              },
              "value": "7200"
            },
            "visibility": "public"
          },
          {
            "id": 1372,
            "nodeType": "VariableDeclaration",
            "src": "1443:42:1",
            "nodes": [],
            "constant": false,
            "functionSelector": "d509b017",
            "mutability": "immutable",
            "name": "defaultIdentifier",
            "nameLocation": "1468:17:1",
            "scope": 1729,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bytes32",
              "typeString": "bytes32"
            },
            "typeName": {
              "id": 1371,
              "name": "bytes32",
              "nodeType": "ElementaryTypeName",
              "src": "1443:7:1",
              "typeDescriptions": {
                "typeIdentifier": "t_bytes32",
                "typeString": "bytes32"
              }
            },
            "visibility": "public"
          },
          {
            "id": 1383,
            "nodeType": "StructDefinition",
            "src": "1492:342:1",
            "nodes": [],
            "canonicalName": "DataAsserter.DataAssertion",
            "members": [
              {
                "constant": false,
                "id": 1374,
                "mutability": "mutable",
                "name": "dataId",
                "nameLocation": "1531:6:1",
                "nodeType": "VariableDeclaration",
                "scope": 1383,
                "src": "1523:14:1",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_bytes32",
                  "typeString": "bytes32"
                },
                "typeName": {
                  "id": 1373,
                  "name": "bytes32",
                  "nodeType": "ElementaryTypeName",
                  "src": "1523:7:1",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 1376,
                "mutability": "mutable",
                "name": "dataPath",
                "nameLocation": "1587:8:1",
                "nodeType": "VariableDeclaration",
                "scope": 1383,
                "src": "1580:15:1",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage_ptr",
                  "typeString": "string"
                },
                "typeName": {
                  "id": 1375,
                  "name": "string",
                  "nodeType": "ElementaryTypeName",
                  "src": "1580:6:1",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_storage_ptr",
                    "typeString": "string"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 1378,
                "mutability": "mutable",
                "name": "description",
                "nameLocation": "1653:11:1",
                "nodeType": "VariableDeclaration",
                "scope": 1383,
                "src": "1646:18:1",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage_ptr",
                  "typeString": "string"
                },
                "typeName": {
                  "id": 1377,
                  "name": "string",
                  "nodeType": "ElementaryTypeName",
                  "src": "1646:6:1",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_storage_ptr",
                    "typeString": "string"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 1380,
                "mutability": "mutable",
                "name": "asserter",
                "nameLocation": "1712:8:1",
                "nodeType": "VariableDeclaration",
                "scope": 1383,
                "src": "1704:16:1",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                },
                "typeName": {
                  "id": 1379,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "1704:7:1",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 1382,
                "mutability": "mutable",
                "name": "resolved",
                "nameLocation": "1775:8:1",
                "nodeType": "VariableDeclaration",
                "scope": 1383,
                "src": "1770:13:1",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                },
                "typeName": {
                  "id": 1381,
                  "name": "bool",
                  "nodeType": "ElementaryTypeName",
                  "src": "1770:4:1",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  }
                },
                "visibility": "internal"
              }
            ],
            "name": "DataAssertion",
            "nameLocation": "1499:13:1",
            "scope": 1729,
            "visibility": "public"
          },
          {
            "id": 1388,
            "nodeType": "VariableDeclaration",
            "src": "1840:55:1",
            "nodes": [],
            "constant": false,
            "functionSelector": "b33893da",
            "mutability": "mutable",
            "name": "assertionsData",
            "nameLocation": "1881:14:1",
            "scope": 1729,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_DataAssertion_$1383_storage_$",
              "typeString": "mapping(bytes32 => struct DataAsserter.DataAssertion)"
            },
            "typeName": {
              "id": 1387,
              "keyType": {
                "id": 1384,
                "name": "bytes32",
                "nodeType": "ElementaryTypeName",
                "src": "1848:7:1",
                "typeDescriptions": {
                  "typeIdentifier": "t_bytes32",
                  "typeString": "bytes32"
                }
              },
              "nodeType": "Mapping",
              "src": "1840:33:1",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_DataAssertion_$1383_storage_$",
                "typeString": "mapping(bytes32 => struct DataAsserter.DataAssertion)"
              },
              "valueType": {
                "id": 1386,
                "nodeType": "UserDefinedTypeName",
                "pathNode": {
                  "id": 1385,
                  "name": "DataAssertion",
                  "nameLocations": [
                    "1859:13:1"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 1383,
                  "src": "1859:13:1"
                },
                "referencedDeclaration": 1383,
                "src": "1859:13:1",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_DataAssertion_$1383_storage_ptr",
                  "typeString": "struct DataAsserter.DataAssertion"
                }
              }
            },
            "visibility": "public"
          },
          {
            "id": 1400,
            "nodeType": "EventDefinition",
            "src": "1902:181:1",
            "nodes": [],
            "anonymous": false,
            "eventSelector": "657936090f7950624cc4d0e1efd75ff2392aea9d1aaf742ac689d3db7cb20e72",
            "name": "DataAsserted",
            "nameLocation": "1908:12:1",
            "parameters": {
              "id": 1399,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1390,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "dataId",
                  "nameLocation": "1946:6:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1400,
                  "src": "1930:22:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 1389,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "1930:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1392,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "dataPath",
                  "nameLocation": "1969:8:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1400,
                  "src": "1962:15:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 1391,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1962:6:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1394,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "description",
                  "nameLocation": "1994:11:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1400,
                  "src": "1987:18:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 1393,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1987:6:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1396,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "asserter",
                  "nameLocation": "2031:8:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1400,
                  "src": "2015:24:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1395,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2015:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1398,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "assertionId",
                  "nameLocation": "2065:11:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1400,
                  "src": "2049:27:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 1397,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "2049:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1920:162:1"
            }
          },
          {
            "id": 1412,
            "nodeType": "EventDefinition",
            "src": "2089:190:1",
            "nodes": [],
            "anonymous": false,
            "eventSelector": "36a2ca3a13b47a72af0f9bf95abd3c906882059e42e6c1c6b5b312e9da2064d7",
            "name": "DataAssertionResolved",
            "nameLocation": "2095:21:1",
            "parameters": {
              "id": 1411,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1402,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "dataId",
                  "nameLocation": "2142:6:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1412,
                  "src": "2126:22:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 1401,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "2126:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1404,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "dataPath",
                  "nameLocation": "2165:8:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1412,
                  "src": "2158:15:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 1403,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "2158:6:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1406,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "description",
                  "nameLocation": "2190:11:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1412,
                  "src": "2183:18:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 1405,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "2183:6:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1408,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "asserter",
                  "nameLocation": "2227:8:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1412,
                  "src": "2211:24:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1407,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2211:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1410,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "assertionId",
                  "nameLocation": "2261:11:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1412,
                  "src": "2245:27:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 1409,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "2245:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2116:162:1"
            }
          },
          {
            "id": 1475,
            "nodeType": "FunctionDefinition",
            "src": "2285:519:1",
            "nodes": [],
            "body": {
              "id": 1474,
              "nodeType": "Block",
              "src": "2352:452:1",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 1423,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 1419,
                      "name": "defaultCurrency",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1361,
                      "src": "2362:15:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20_$45849",
                        "typeString": "contract IERC20"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 1421,
                          "name": "_defaultCurrency",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1414,
                          "src": "2387:16:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 1420,
                        "name": "IERC20",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 45849,
                        "src": "2380:6:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_IERC20_$45849_$",
                          "typeString": "type(contract IERC20)"
                        }
                      },
                      "id": 1422,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2380:24:1",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20_$45849",
                        "typeString": "contract IERC20"
                      }
                    },
                    "src": "2362:42:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$45849",
                      "typeString": "contract IERC20"
                    }
                  },
                  "id": 1424,
                  "nodeType": "ExpressionStatement",
                  "src": "2362:42:1"
                },
                {
                  "expression": {
                    "id": 1429,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 1425,
                      "name": "oo",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1367,
                      "src": "2414:2:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_OptimisticOracleV3Interface_$53397",
                        "typeString": "contract OptimisticOracleV3Interface"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 1427,
                          "name": "_optimisticOracleV3",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1416,
                          "src": "2447:19:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 1426,
                        "name": "OptimisticOracleV3Interface",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 53397,
                        "src": "2419:27:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_OptimisticOracleV3Interface_$53397_$",
                          "typeString": "type(contract OptimisticOracleV3Interface)"
                        }
                      },
                      "id": 1428,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2419:48:1",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_OptimisticOracleV3Interface_$53397",
                        "typeString": "contract OptimisticOracleV3Interface"
                      }
                    },
                    "src": "2414:53:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_OptimisticOracleV3Interface_$53397",
                      "typeString": "contract OptimisticOracleV3Interface"
                    }
                  },
                  "id": 1430,
                  "nodeType": "ExpressionStatement",
                  "src": "2414:53:1"
                },
                {
                  "expression": {
                    "id": 1435,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 1431,
                      "name": "defaultIdentifier",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1372,
                      "src": "2477:17:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "expression": {
                          "id": 1432,
                          "name": "oo",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1367,
                          "src": "2497:2:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_OptimisticOracleV3Interface_$53397",
                            "typeString": "contract OptimisticOracleV3Interface"
                          }
                        },
                        "id": 1433,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "2500:17:1",
                        "memberName": "defaultIdentifier",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 53260,
                        "src": "2497:20:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_view$__$returns$_t_bytes32_$",
                          "typeString": "function () view external returns (bytes32)"
                        }
                      },
                      "id": 1434,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2497:22:1",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "src": "2477:42:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "id": 1436,
                  "nodeType": "ExpressionStatement",
                  "src": "2477:42:1"
                },
                {
                  "expression": {
                    "id": 1445,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 1437,
                      "name": "validatorToken",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1364,
                      "src": "2529:14:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ExpandedERC20_$47843",
                        "typeString": "contract ExpandedERC20"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "hexValue": "4461746141737365727465722056616c696461746f7220546f6b656e",
                          "id": 1441,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "string",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2577:30:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_stringliteral_12cd73d3c81ffeef9820dc4f8f82b0dbdf555c84df5bf758436d5a67f8834ac3",
                            "typeString": "literal_string \"DataAsserter Validator Token\""
                          },
                          "value": "DataAsserter Validator Token"
                        },
                        {
                          "hexValue": "44415654",
                          "id": 1442,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "string",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2621:6:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_stringliteral_0df65f7dd90ad09c89a323be953d798c4077bc4b05dcf787238a7953e3ca1897",
                            "typeString": "literal_string \"DAVT\""
                          },
                          "value": "DAVT"
                        },
                        {
                          "hexValue": "31",
                          "id": 1443,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2641:1:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          },
                          "value": "1"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_stringliteral_12cd73d3c81ffeef9820dc4f8f82b0dbdf555c84df5bf758436d5a67f8834ac3",
                            "typeString": "literal_string \"DataAsserter Validator Token\""
                          },
                          {
                            "typeIdentifier": "t_stringliteral_0df65f7dd90ad09c89a323be953d798c4077bc4b05dcf787238a7953e3ca1897",
                            "typeString": "literal_string \"DAVT\""
                          },
                          {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          }
                        ],
                        "id": 1440,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "NewExpression",
                        "src": "2546:17:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_creation_nonpayable$_t_string_memory_ptr_$_t_string_memory_ptr_$_t_uint8_$returns$_t_contract$_ExpandedERC20_$47843_$",
                          "typeString": "function (string memory,string memory,uint8) returns (contract ExpandedERC20)"
                        },
                        "typeName": {
                          "id": 1439,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 1438,
                            "name": "ExpandedERC20",
                            "nameLocations": [
                              "2550:13:1"
                            ],
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 47843,
                            "src": "2550:13:1"
                          },
                          "referencedDeclaration": 47843,
                          "src": "2550:13:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_ExpandedERC20_$47843",
                            "typeString": "contract ExpandedERC20"
                          }
                        }
                      },
                      "id": 1444,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2546:106:1",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ExpandedERC20_$47843",
                        "typeString": "contract ExpandedERC20"
                      }
                    },
                    "src": "2529:123:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ExpandedERC20_$47843",
                      "typeString": "contract ExpandedERC20"
                    }
                  },
                  "id": 1446,
                  "nodeType": "ExpressionStatement",
                  "src": "2529:123:1"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 1452,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "2695:4:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_DataAsserter_$1729",
                              "typeString": "contract DataAsserter"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_DataAsserter_$1729",
                              "typeString": "contract DataAsserter"
                            }
                          ],
                          "id": 1451,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "2687:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 1450,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "2687:7:1",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 1453,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2687:13:1",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 1447,
                        "name": "validatorToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1364,
                        "src": "2662:14:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ExpandedERC20_$47843",
                          "typeString": "contract ExpandedERC20"
                        }
                      },
                      "id": 1449,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "2677:9:1",
                      "memberName": "addMinter",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 47808,
                      "src": "2662:24:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 1454,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2662:39:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1455,
                  "nodeType": "ExpressionStatement",
                  "src": "2662:39:1"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 1461,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "2744:4:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_DataAsserter_$1729",
                              "typeString": "contract DataAsserter"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_DataAsserter_$1729",
                              "typeString": "contract DataAsserter"
                            }
                          ],
                          "id": 1460,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "2736:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 1459,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "2736:7:1",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 1462,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2736:13:1",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 1456,
                        "name": "validatorToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1364,
                        "src": "2711:14:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ExpandedERC20_$47843",
                          "typeString": "contract ExpandedERC20"
                        }
                      },
                      "id": 1458,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "2726:9:1",
                      "memberName": "addBurner",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 47825,
                      "src": "2711:24:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 1463,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2711:39:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1464,
                  "nodeType": "ExpressionStatement",
                  "src": "2711:39:1"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 1470,
                            "name": "oo",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1367,
                            "src": "2793:2:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_OptimisticOracleV3Interface_$53397",
                              "typeString": "contract OptimisticOracleV3Interface"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_OptimisticOracleV3Interface_$53397",
                              "typeString": "contract OptimisticOracleV3Interface"
                            }
                          ],
                          "id": 1469,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "2785:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 1468,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "2785:7:1",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 1471,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2785:11:1",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 1465,
                        "name": "validatorToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1364,
                        "src": "2760:14:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ExpandedERC20_$47843",
                          "typeString": "contract ExpandedERC20"
                        }
                      },
                      "id": 1467,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "2775:9:1",
                      "memberName": "addMinter",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 47808,
                      "src": "2760:24:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 1472,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2760:37:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1473,
                  "nodeType": "ExpressionStatement",
                  "src": "2760:37:1"
                }
              ]
            },
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "parameters": {
              "id": 1417,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1414,
                  "mutability": "mutable",
                  "name": "_defaultCurrency",
                  "nameLocation": "2305:16:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1475,
                  "src": "2297:24:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1413,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2297:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1416,
                  "mutability": "mutable",
                  "name": "_optimisticOracleV3",
                  "nameLocation": "2331:19:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1475,
                  "src": "2323:27:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1415,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2323:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2296:55:1"
            },
            "returnParameters": {
              "id": 1418,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2352:0:1"
            },
            "scope": 1729,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 1509,
            "nodeType": "FunctionDefinition",
            "src": "2923:303:1",
            "nodes": [],
            "body": {
              "id": 1508,
              "nodeType": "Block",
              "src": "3018:208:1",
              "nodes": [],
              "statements": [
                {
                  "condition": {
                    "id": 1490,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "!",
                    "prefix": true,
                    "src": "3032:37:1",
                    "subExpression": {
                      "expression": {
                        "baseExpression": {
                          "id": 1486,
                          "name": "assertionsData",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1388,
                          "src": "3033:14:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_DataAssertion_$1383_storage_$",
                            "typeString": "mapping(bytes32 => struct DataAsserter.DataAssertion storage ref)"
                          }
                        },
                        "id": 1488,
                        "indexExpression": {
                          "id": 1487,
                          "name": "assertionId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1477,
                          "src": "3048:11:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "3033:27:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_DataAssertion_$1383_storage",
                          "typeString": "struct DataAsserter.DataAssertion storage ref"
                        }
                      },
                      "id": 1489,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "3061:8:1",
                      "memberName": "resolved",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1382,
                      "src": "3033:36:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1496,
                  "nodeType": "IfStatement",
                  "src": "3028:89:1",
                  "trueBody": {
                    "expression": {
                      "components": [
                        {
                          "hexValue": "66616c7365",
                          "id": 1491,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "3079:5:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "false"
                        },
                        {
                          "hexValue": "2a626c616e6b2a",
                          "id": 1492,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "string",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "3086:9:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_stringliteral_12061f682b6a42b4913f7c1714dac045493c936fbc12560f0ed4730cd51475ce",
                            "typeString": "literal_string \"*blank*\""
                          },
                          "value": "*blank*"
                        },
                        {
                          "hexValue": "44617461206e6f74207265736f6c766564",
                          "id": 1493,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "string",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "3097:19:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_stringliteral_1eb97423fed31d45b4f5596cdbd9f40383c53dea50a728f4623504a5f90092f1",
                            "typeString": "literal_string \"Data not resolved\""
                          },
                          "value": "Data not resolved"
                        }
                      ],
                      "id": 1494,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "TupleExpression",
                      "src": "3078:39:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$_t_bool_$_t_stringliteral_12061f682b6a42b4913f7c1714dac045493c936fbc12560f0ed4730cd51475ce_$_t_stringliteral_1eb97423fed31d45b4f5596cdbd9f40383c53dea50a728f4623504a5f90092f1_$",
                        "typeString": "tuple(bool,literal_string \"*blank*\",literal_string \"Data not resolved\")"
                      }
                    },
                    "functionReturnParameters": 1485,
                    "id": 1495,
                    "nodeType": "Return",
                    "src": "3071:46:1"
                  }
                },
                {
                  "expression": {
                    "components": [
                      {
                        "hexValue": "74727565",
                        "id": 1497,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3135:4:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "true"
                      },
                      {
                        "expression": {
                          "baseExpression": {
                            "id": 1498,
                            "name": "assertionsData",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1388,
                            "src": "3141:14:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_DataAssertion_$1383_storage_$",
                              "typeString": "mapping(bytes32 => struct DataAsserter.DataAssertion storage ref)"
                            }
                          },
                          "id": 1500,
                          "indexExpression": {
                            "id": 1499,
                            "name": "assertionId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1477,
                            "src": "3156:11:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "3141:27:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_DataAssertion_$1383_storage",
                            "typeString": "struct DataAsserter.DataAssertion storage ref"
                          }
                        },
                        "id": 1501,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "3169:8:1",
                        "memberName": "dataPath",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 1376,
                        "src": "3141:36:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_storage",
                          "typeString": "string storage ref"
                        }
                      },
                      {
                        "expression": {
                          "baseExpression": {
                            "id": 1502,
                            "name": "assertionsData",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1388,
                            "src": "3179:14:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_DataAssertion_$1383_storage_$",
                              "typeString": "mapping(bytes32 => struct DataAsserter.DataAssertion storage ref)"
                            }
                          },
                          "id": 1504,
                          "indexExpression": {
                            "id": 1503,
                            "name": "assertionId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1477,
                            "src": "3194:11:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "3179:27:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_DataAssertion_$1383_storage",
                            "typeString": "struct DataAsserter.DataAssertion storage ref"
                          }
                        },
                        "id": 1505,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "3207:11:1",
                        "memberName": "description",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 1378,
                        "src": "3179:39:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_storage",
                          "typeString": "string storage ref"
                        }
                      }
                    ],
                    "id": 1506,
                    "isConstant": false,
                    "isInlineArray": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "TupleExpression",
                    "src": "3134:85:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_bool_$_t_string_storage_$_t_string_storage_$",
                      "typeString": "tuple(bool,string storage ref,string storage ref)"
                    }
                  },
                  "functionReturnParameters": 1485,
                  "id": 1507,
                  "nodeType": "Return",
                  "src": "3127:92:1"
                }
              ]
            },
            "functionSelector": "54f6127f",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getData",
            "nameLocation": "2932:7:1",
            "parameters": {
              "id": 1478,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1477,
                  "mutability": "mutable",
                  "name": "assertionId",
                  "nameLocation": "2948:11:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1509,
                  "src": "2940:19:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 1476,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "2940:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2939:21:1"
            },
            "returnParameters": {
              "id": 1485,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1480,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1509,
                  "src": "2982:4:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 1479,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "2982:4:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1482,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1509,
                  "src": "2988:13:1",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 1481,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "2988:6:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1484,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1509,
                  "src": "3003:13:1",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 1483,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "3003:6:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2981:36:1"
            },
            "scope": 1729,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 1632,
            "nodeType": "FunctionDefinition",
            "src": "3429:2107:1",
            "nodes": [],
            "body": {
              "id": 1631,
              "nodeType": "Block",
              "src": "3586:1950:1",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    1521
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1521,
                      "mutability": "mutable",
                      "name": "bond",
                      "nameLocation": "3613:4:1",
                      "nodeType": "VariableDeclaration",
                      "scope": 1631,
                      "src": "3605:12:1",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1520,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "3605:7:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1529,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 1526,
                            "name": "defaultCurrency",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1361,
                            "src": "3646:15:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IERC20_$45849",
                              "typeString": "contract IERC20"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_IERC20_$45849",
                              "typeString": "contract IERC20"
                            }
                          ],
                          "id": 1525,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "3638:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 1524,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "3638:7:1",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 1527,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3638:24:1",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 1522,
                        "name": "oo",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1367,
                        "src": "3620:2:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_OptimisticOracleV3Interface_$53397",
                          "typeString": "contract OptimisticOracleV3Interface"
                        }
                      },
                      "id": 1523,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "3623:14:1",
                      "memberName": "getMinimumBond",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 53342,
                      "src": "3620:17:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) view external returns (uint256)"
                      }
                    },
                    "id": 1528,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3620:43:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3605:58:1"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 1533,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "3706:3:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 1534,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "3710:6:1",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "3706:10:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 1537,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "3726:4:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_DataAsserter_$1729",
                              "typeString": "contract DataAsserter"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_DataAsserter_$1729",
                              "typeString": "contract DataAsserter"
                            }
                          ],
                          "id": 1536,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "3718:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 1535,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "3718:7:1",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 1538,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3718:13:1",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 1539,
                        "name": "bond",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1521,
                        "src": "3733:4:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 1530,
                        "name": "defaultCurrency",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1361,
                        "src": "3673:15:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$45849",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 1532,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "3689:16:1",
                      "memberName": "safeTransferFrom",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 45931,
                      "src": "3673:32:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$45849_$_t_address_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20_$45849_$",
                        "typeString": "function (contract IERC20,address,address,uint256)"
                      }
                    },
                    "id": 1540,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3673:65:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1541,
                  "nodeType": "ExpressionStatement",
                  "src": "3673:65:1"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 1547,
                            "name": "oo",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1367,
                            "src": "3784:2:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_OptimisticOracleV3Interface_$53397",
                              "typeString": "contract OptimisticOracleV3Interface"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_OptimisticOracleV3Interface_$53397",
                              "typeString": "contract OptimisticOracleV3Interface"
                            }
                          ],
                          "id": 1546,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "3776:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 1545,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "3776:7:1",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 1548,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3776:11:1",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 1549,
                        "name": "bond",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1521,
                        "src": "3789:4:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 1542,
                        "name": "defaultCurrency",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1361,
                        "src": "3748:15:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$45849",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 1544,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "3764:11:1",
                      "memberName": "safeApprove",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 45975,
                      "src": "3748:27:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$45849_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20_$45849_$",
                        "typeString": "function (contract IERC20,address,uint256)"
                      }
                    },
                    "id": 1550,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3748:46:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1551,
                  "nodeType": "ExpressionStatement",
                  "src": "3748:46:1"
                },
                {
                  "expression": {
                    "id": 1607,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 1552,
                      "name": "assertionId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1518,
                      "src": "4394:11:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "hexValue": "4461746120617373657274656420617420",
                              "id": 1557,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "4470:19:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_32f20ff4e00bdbc5872ffbd85c8b6e9511a326fe0c3add0fea3796c59f81c0d4",
                                "typeString": "literal_string \"Data asserted at \""
                              },
                              "value": "Data asserted at "
                            },
                            {
                              "id": 1558,
                              "name": "dataPath",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1513,
                              "src": "4508:8:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              }
                            },
                            {
                              "hexValue": "2077697468206465736372697074696f6e20",
                              "id": 1559,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "4534:20:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_24bdc7e3b9e6fdb80e01578cb311555f14a6bd13701a170dba64183482d83d1a",
                                "typeString": "literal_string \" with description \""
                              },
                              "value": " with description "
                            },
                            {
                              "id": 1560,
                              "name": "description",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1515,
                              "src": "4572:11:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              }
                            },
                            {
                              "hexValue": "20666f72206461746149643a203078",
                              "id": 1561,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "4601:17:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_638fd457175c192537aad87792f9f955f696ff6a04cd4ef012ec52d324a42afc",
                                "typeString": "literal_string \" for dataId: 0x\""
                              },
                              "value": " for dataId: 0x"
                            },
                            {
                              "arguments": [
                                {
                                  "id": 1564,
                                  "name": "dataId",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1511,
                                  "src": "4658:6:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes32",
                                    "typeString": "bytes32"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_bytes32",
                                    "typeString": "bytes32"
                                  }
                                ],
                                "expression": {
                                  "id": 1562,
                                  "name": "ClaimData",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 47620,
                                  "src": "4636:9:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_contract$_AncillaryData_$47620_$",
                                    "typeString": "type(library AncillaryData)"
                                  }
                                },
                                "id": 1563,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "4646:11:1",
                                "memberName": "toUtf8Bytes",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 47376,
                                "src": "4636:21:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_pure$_t_bytes32_$returns$_t_bytes_memory_ptr_$",
                                  "typeString": "function (bytes32) pure returns (bytes memory)"
                                }
                              },
                              "id": 1565,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "4636:29:1",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            },
                            {
                              "hexValue": "20616e642061737365727465723a203078",
                              "id": 1566,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "4683:19:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_c77a658518de669f0fa22457f32e31788885c7b0e4a4f4dc1fa539e8ef29dedf",
                                "typeString": "literal_string \" and asserter: 0x\""
                              },
                              "value": " and asserter: 0x"
                            },
                            {
                              "arguments": [
                                {
                                  "expression": {
                                    "id": 1569,
                                    "name": "msg",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": -15,
                                    "src": "4749:3:1",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_magic_message",
                                      "typeString": "msg"
                                    }
                                  },
                                  "id": 1570,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberLocation": "4753:6:1",
                                  "memberName": "sender",
                                  "nodeType": "MemberAccess",
                                  "src": "4749:10:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "expression": {
                                  "id": 1567,
                                  "name": "ClaimData",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 47620,
                                  "src": "4720:9:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_contract$_AncillaryData_$47620_$",
                                    "typeString": "type(library AncillaryData)"
                                  }
                                },
                                "id": 1568,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "4730:18:1",
                                "memberName": "toUtf8BytesAddress",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 47409,
                                "src": "4720:28:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_pure$_t_address_$returns$_t_bytes_memory_ptr_$",
                                  "typeString": "function (address) pure returns (bytes memory)"
                                }
                              },
                              "id": 1571,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "4720:40:1",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            },
                            {
                              "hexValue": "2061742074696d657374616d703a20",
                              "id": 1572,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "4778:17:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_0b443ca68139ec97c71a0472cd1c95aa0b393309e576d65ab97caf7affa69a49",
                                "typeString": "literal_string \" at timestamp: \""
                              },
                              "value": " at timestamp: "
                            },
                            {
                              "arguments": [
                                {
                                  "expression": {
                                    "id": 1575,
                                    "name": "block",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": -4,
                                    "src": "4839:5:1",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_magic_block",
                                      "typeString": "block"
                                    }
                                  },
                                  "id": 1576,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberLocation": "4845:9:1",
                                  "memberName": "timestamp",
                                  "nodeType": "MemberAccess",
                                  "src": "4839:15:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                ],
                                "expression": {
                                  "id": 1573,
                                  "name": "ClaimData",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 47620,
                                  "src": "4813:9:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_contract$_AncillaryData_$47620_$",
                                    "typeString": "type(library AncillaryData)"
                                  }
                                },
                                "id": 1574,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "4823:15:1",
                                "memberName": "toUtf8BytesUint",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 47502,
                                "src": "4813:25:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$",
                                  "typeString": "function (uint256) pure returns (bytes memory)"
                                }
                              },
                              "id": 1577,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "4813:42:1",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            },
                            {
                              "hexValue": "20696e207468652044617461417373657274657220636f6e7472616374206174203078",
                              "id": 1578,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "4873:37:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_ca440c0140d48ac69e555e32fbe16eceb8ce3061228f28ba3b8559a881e5e9a8",
                                "typeString": "literal_string \" in the DataAsserter contract at 0x\""
                              },
                              "value": " in the DataAsserter contract at 0x"
                            },
                            {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "id": 1583,
                                      "name": "this",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": -28,
                                      "src": "4965:4:1",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_contract$_DataAsserter_$1729",
                                        "typeString": "contract DataAsserter"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_contract$_DataAsserter_$1729",
                                        "typeString": "contract DataAsserter"
                                      }
                                    ],
                                    "id": 1582,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "nodeType": "ElementaryTypeNameExpression",
                                    "src": "4957:7:1",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_address_$",
                                      "typeString": "type(address)"
                                    },
                                    "typeName": {
                                      "id": 1581,
                                      "name": "address",
                                      "nodeType": "ElementaryTypeName",
                                      "src": "4957:7:1",
                                      "typeDescriptions": {}
                                    }
                                  },
                                  "id": 1584,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "typeConversion",
                                  "lValueRequested": false,
                                  "nameLocations": [],
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "4957:13:1",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "expression": {
                                  "id": 1579,
                                  "name": "ClaimData",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 47620,
                                  "src": "4928:9:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_contract$_AncillaryData_$47620_$",
                                    "typeString": "type(library AncillaryData)"
                                  }
                                },
                                "id": 1580,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "4938:18:1",
                                "memberName": "toUtf8BytesAddress",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 47409,
                                "src": "4928:28:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_pure$_t_address_$returns$_t_bytes_memory_ptr_$",
                                  "typeString": "function (address) pure returns (bytes memory)"
                                }
                              },
                              "id": 1585,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "4928:43:1",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            },
                            {
                              "hexValue": "2069732076616c69642e",
                              "id": 1586,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "4989:12:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_20bfd04ae1bee43451119cb1b01a54a4c3a07e53130737b515dfe8a851c01b90",
                                "typeString": "literal_string \" is valid.\""
                              },
                              "value": " is valid."
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_stringliteral_32f20ff4e00bdbc5872ffbd85c8b6e9511a326fe0c3add0fea3796c59f81c0d4",
                                "typeString": "literal_string \"Data asserted at \""
                              },
                              {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_24bdc7e3b9e6fdb80e01578cb311555f14a6bd13701a170dba64183482d83d1a",
                                "typeString": "literal_string \" with description \""
                              },
                              {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_638fd457175c192537aad87792f9f955f696ff6a04cd4ef012ec52d324a42afc",
                                "typeString": "literal_string \" for dataId: 0x\""
                              },
                              {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_c77a658518de669f0fa22457f32e31788885c7b0e4a4f4dc1fa539e8ef29dedf",
                                "typeString": "literal_string \" and asserter: 0x\""
                              },
                              {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_0b443ca68139ec97c71a0472cd1c95aa0b393309e576d65ab97caf7affa69a49",
                                "typeString": "literal_string \" at timestamp: \""
                              },
                              {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_ca440c0140d48ac69e555e32fbe16eceb8ce3061228f28ba3b8559a881e5e9a8",
                                "typeString": "literal_string \" in the DataAsserter contract at 0x\""
                              },
                              {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_20bfd04ae1bee43451119cb1b01a54a4c3a07e53130737b515dfe8a851c01b90",
                                "typeString": "literal_string \" is valid.\""
                              }
                            ],
                            "expression": {
                              "id": 1555,
                              "name": "abi",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -1,
                              "src": "4436:3:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_abi",
                                "typeString": "abi"
                              }
                            },
                            "id": 1556,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberLocation": "4440:12:1",
                            "memberName": "encodePacked",
                            "nodeType": "MemberAccess",
                            "src": "4436:16:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                              "typeString": "function () pure returns (bytes memory)"
                            }
                          },
                          "id": 1587,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4436:579:1",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_memory_ptr",
                            "typeString": "bytes memory"
                          }
                        },
                        {
                          "expression": {
                            "id": 1588,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "5029:3:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 1589,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "5033:6:1",
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "5029:10:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        {
                          "arguments": [
                            {
                              "id": 1592,
                              "name": "this",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -28,
                              "src": "5061:4:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_DataAsserter_$1729",
                                "typeString": "contract DataAsserter"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_DataAsserter_$1729",
                                "typeString": "contract DataAsserter"
                              }
                            ],
                            "id": 1591,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "5053:7:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 1590,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "5053:7:1",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 1593,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5053:13:1",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 1596,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "5088:1:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 1595,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "5080:7:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 1594,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "5080:7:1",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 1597,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5080:10:1",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        {
                          "id": 1598,
                          "name": "assertionLiveness",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1370,
                          "src": "5130:17:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint64",
                            "typeString": "uint64"
                          }
                        },
                        {
                          "id": 1599,
                          "name": "defaultCurrency",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1361,
                          "src": "5161:15:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IERC20_$45849",
                            "typeString": "contract IERC20"
                          }
                        },
                        {
                          "id": 1600,
                          "name": "bond",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1521,
                          "src": "5190:4:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "id": 1601,
                          "name": "defaultIdentifier",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1372,
                          "src": "5208:17:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 1604,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "5247:1:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 1603,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "5239:7:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_bytes32_$",
                              "typeString": "type(bytes32)"
                            },
                            "typeName": {
                              "id": 1602,
                              "name": "bytes32",
                              "nodeType": "ElementaryTypeName",
                              "src": "5239:7:1",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 1605,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5239:10:1",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_bytes_memory_ptr",
                            "typeString": "bytes memory"
                          },
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          {
                            "typeIdentifier": "t_uint64",
                            "typeString": "uint64"
                          },
                          {
                            "typeIdentifier": "t_contract$_IERC20_$45849",
                            "typeString": "contract IERC20"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          },
                          {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        ],
                        "expression": {
                          "id": 1553,
                          "name": "oo",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1367,
                          "src": "4408:2:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_OptimisticOracleV3Interface_$53397",
                            "typeString": "contract OptimisticOracleV3Interface"
                          }
                        },
                        "id": 1554,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "4411:11:1",
                        "memberName": "assertTruth",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 53304,
                        "src": "4408:14:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_nonpayable$_t_bytes_memory_ptr_$_t_address_$_t_address_$_t_address_$_t_uint64_$_t_contract$_IERC20_$45849_$_t_uint256_$_t_bytes32_$_t_bytes32_$returns$_t_bytes32_$",
                          "typeString": "function (bytes memory,address,address,address,uint64,contract IERC20,uint256,bytes32,bytes32) external returns (bytes32)"
                        }
                      },
                      "id": 1606,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "4408:865:1",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "src": "4394:879:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "id": 1608,
                  "nodeType": "ExpressionStatement",
                  "src": "4394:879:1"
                },
                {
                  "expression": {
                    "id": 1620,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 1609,
                        "name": "assertionsData",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1388,
                        "src": "5283:14:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_DataAssertion_$1383_storage_$",
                          "typeString": "mapping(bytes32 => struct DataAsserter.DataAssertion storage ref)"
                        }
                      },
                      "id": 1611,
                      "indexExpression": {
                        "id": 1610,
                        "name": "assertionId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1518,
                        "src": "5298:11:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "5283:27:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_DataAssertion_$1383_storage",
                        "typeString": "struct DataAsserter.DataAssertion storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 1613,
                          "name": "dataId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1511,
                          "src": "5340:6:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        {
                          "id": 1614,
                          "name": "dataPath",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1513,
                          "src": "5360:8:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_memory_ptr",
                            "typeString": "string memory"
                          }
                        },
                        {
                          "id": 1615,
                          "name": "description",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1515,
                          "src": "5382:11:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_memory_ptr",
                            "typeString": "string memory"
                          }
                        },
                        {
                          "expression": {
                            "id": 1616,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "5407:3:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 1617,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "5411:6:1",
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "5407:10:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        {
                          "hexValue": "66616c7365",
                          "id": 1618,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "5431:5:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "false"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          },
                          {
                            "typeIdentifier": "t_string_memory_ptr",
                            "typeString": "string memory"
                          },
                          {
                            "typeIdentifier": "t_string_memory_ptr",
                            "typeString": "string memory"
                          },
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        ],
                        "id": 1612,
                        "name": "DataAssertion",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1383,
                        "src": "5313:13:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_struct$_DataAssertion_$1383_storage_ptr_$",
                          "typeString": "type(struct DataAsserter.DataAssertion storage pointer)"
                        }
                      },
                      "id": 1619,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "structConstructorCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "5313:133:1",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_DataAssertion_$1383_memory_ptr",
                        "typeString": "struct DataAsserter.DataAssertion memory"
                      }
                    },
                    "src": "5283:163:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_DataAssertion_$1383_storage",
                      "typeString": "struct DataAsserter.DataAssertion storage ref"
                    }
                  },
                  "id": 1621,
                  "nodeType": "ExpressionStatement",
                  "src": "5283:163:1"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 1623,
                        "name": "dataId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1511,
                        "src": "5474:6:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "id": 1624,
                        "name": "dataPath",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1513,
                        "src": "5482:8:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      {
                        "id": 1625,
                        "name": "description",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1515,
                        "src": "5492:11:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      {
                        "expression": {
                          "id": 1626,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "5505:3:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 1627,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "5509:6:1",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "5505:10:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 1628,
                        "name": "assertionId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1518,
                        "src": "5517:11:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        },
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      ],
                      "id": 1622,
                      "name": "DataAsserted",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1400,
                      "src": "5461:12:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_bytes32_$_t_string_memory_ptr_$_t_string_memory_ptr_$_t_address_$_t_bytes32_$returns$__$",
                        "typeString": "function (bytes32,string memory,string memory,address,bytes32)"
                      }
                    },
                    "id": 1629,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5461:68:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1630,
                  "nodeType": "EmitStatement",
                  "src": "5456:73:1"
                }
              ]
            },
            "functionSelector": "de810e96",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "assertDataFor",
            "nameLocation": "3438:13:1",
            "parameters": {
              "id": 1516,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1511,
                  "mutability": "mutable",
                  "name": "dataId",
                  "nameLocation": "3469:6:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1632,
                  "src": "3461:14:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 1510,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "3461:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1513,
                  "mutability": "mutable",
                  "name": "dataPath",
                  "nameLocation": "3499:8:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1632,
                  "src": "3485:22:1",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 1512,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "3485:6:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1515,
                  "mutability": "mutable",
                  "name": "description",
                  "nameLocation": "3531:11:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1632,
                  "src": "3517:25:1",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 1514,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "3517:6:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3451:97:1"
            },
            "returnParameters": {
              "id": 1519,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1518,
                  "mutability": "mutable",
                  "name": "assertionId",
                  "nameLocation": "3573:11:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1632,
                  "src": "3565:19:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 1517,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "3565:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3564:21:1"
            },
            "scope": 1729,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 1644,
            "nodeType": "FunctionDefinition",
            "src": "5542:119:1",
            "nodes": [],
            "body": {
              "id": 1643,
              "nodeType": "Block",
              "src": "5601:60:1",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 1639,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "5643:3:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 1640,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "5647:6:1",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "5643:10:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 1637,
                        "name": "validatorToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1364,
                        "src": "5618:14:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ExpandedERC20_$47843",
                          "typeString": "contract ExpandedERC20"
                        }
                      },
                      "id": 1638,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "5633:9:1",
                      "memberName": "balanceOf",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 45282,
                      "src": "5618:24:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) view external returns (uint256)"
                      }
                    },
                    "id": 1641,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5618:36:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 1636,
                  "id": 1642,
                  "nodeType": "Return",
                  "src": "5611:43:1"
                }
              ]
            },
            "functionSelector": "4f731087",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "checkTokenBalance",
            "nameLocation": "5551:17:1",
            "parameters": {
              "id": 1633,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5568:2:1"
            },
            "returnParameters": {
              "id": 1636,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1635,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1644,
                  "src": "5592:7:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1634,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5592:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5591:9:1"
            },
            "scope": 1729,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 1660,
            "nodeType": "FunctionDefinition",
            "src": "5667:118:1",
            "nodes": [],
            "body": {
              "id": 1659,
              "nodeType": "Block",
              "src": "5695:90:1",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 1650,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "5729:3:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 1651,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "5733:6:1",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "5729:10:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "expression": {
                              "id": 1654,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "5766:3:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 1655,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "5770:6:1",
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "5766:10:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 1652,
                            "name": "validatorToken",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1364,
                            "src": "5741:14:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ExpandedERC20_$47843",
                              "typeString": "contract ExpandedERC20"
                            }
                          },
                          "id": 1653,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "5756:9:1",
                          "memberName": "balanceOf",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 45282,
                          "src": "5741:24:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (address) view external returns (uint256)"
                          }
                        },
                        "id": 1656,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5741:36:1",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 1647,
                        "name": "validatorToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1364,
                        "src": "5705:14:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ExpandedERC20_$47843",
                          "typeString": "contract ExpandedERC20"
                        }
                      },
                      "id": 1649,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "5720:8:1",
                      "memberName": "burnFrom",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 47791,
                      "src": "5705:23:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,uint256) external returns (bool)"
                      }
                    },
                    "id": 1657,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5705:73:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1658,
                  "nodeType": "ExpressionStatement",
                  "src": "5705:73:1"
                }
              ]
            },
            "functionSelector": "faa0a264",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "burnToken",
            "nameLocation": "5676:9:1",
            "parameters": {
              "id": 1645,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5685:2:1"
            },
            "returnParameters": {
              "id": 1646,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5695:0:1"
            },
            "scope": 1729,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 1722,
            "nodeType": "FunctionDefinition",
            "src": "5835:849:1",
            "nodes": [],
            "body": {
              "id": 1721,
              "nodeType": "Block",
              "src": "5945:739:1",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 1674,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 1668,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "5963:3:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 1669,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "5967:6:1",
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "5963:10:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "arguments": [
                            {
                              "id": 1672,
                              "name": "oo",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1367,
                              "src": "5985:2:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_OptimisticOracleV3Interface_$53397",
                                "typeString": "contract OptimisticOracleV3Interface"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_OptimisticOracleV3Interface_$53397",
                                "typeString": "contract OptimisticOracleV3Interface"
                              }
                            ],
                            "id": 1671,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "5977:7:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 1670,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "5977:7:1",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 1673,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5977:11:1",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "5963:25:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 1667,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "5955:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 1675,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5955:34:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1676,
                  "nodeType": "ExpressionStatement",
                  "src": "5955:34:1"
                },
                {
                  "condition": {
                    "id": 1677,
                    "name": "assertedTruthfully",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1664,
                    "src": "6078:18:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "expression": {
                      "id": 1718,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "delete",
                      "prefix": true,
                      "src": "6643:34:1",
                      "subExpression": {
                        "baseExpression": {
                          "id": 1715,
                          "name": "assertionsData",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1388,
                          "src": "6650:14:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_DataAssertion_$1383_storage_$",
                            "typeString": "mapping(bytes32 => struct DataAsserter.DataAssertion storage ref)"
                          }
                        },
                        "id": 1717,
                        "indexExpression": {
                          "id": 1716,
                          "name": "assertionId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1662,
                          "src": "6665:11:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": true,
                        "nodeType": "IndexAccess",
                        "src": "6650:27:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_DataAssertion_$1383_storage",
                          "typeString": "struct DataAsserter.DataAssertion storage ref"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$__$",
                        "typeString": "tuple()"
                      }
                    },
                    "id": 1719,
                    "nodeType": "ExpressionStatement",
                    "src": "6643:34:1"
                  },
                  "id": 1720,
                  "nodeType": "IfStatement",
                  "src": "6074:603:1",
                  "trueBody": {
                    "id": 1714,
                    "nodeType": "Block",
                    "src": "6098:539:1",
                    "statements": [
                      {
                        "expression": {
                          "id": 1683,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "expression": {
                              "baseExpression": {
                                "id": 1678,
                                "name": "assertionsData",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1388,
                                "src": "6112:14:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_DataAssertion_$1383_storage_$",
                                  "typeString": "mapping(bytes32 => struct DataAsserter.DataAssertion storage ref)"
                                }
                              },
                              "id": 1680,
                              "indexExpression": {
                                "id": 1679,
                                "name": "assertionId",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1662,
                                "src": "6127:11:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes32",
                                  "typeString": "bytes32"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "6112:27:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_DataAssertion_$1383_storage",
                                "typeString": "struct DataAsserter.DataAssertion storage ref"
                              }
                            },
                            "id": 1681,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberLocation": "6140:8:1",
                            "memberName": "resolved",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1382,
                            "src": "6112:36:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "hexValue": "74727565",
                            "id": 1682,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "bool",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "6151:4:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "value": "true"
                          },
                          "src": "6112:43:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 1684,
                        "nodeType": "ExpressionStatement",
                        "src": "6112:43:1"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "expression": {
                                "baseExpression": {
                                  "id": 1688,
                                  "name": "assertionsData",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1388,
                                  "src": "6189:14:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_DataAssertion_$1383_storage_$",
                                    "typeString": "mapping(bytes32 => struct DataAsserter.DataAssertion storage ref)"
                                  }
                                },
                                "id": 1690,
                                "indexExpression": {
                                  "id": 1689,
                                  "name": "assertionId",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1662,
                                  "src": "6204:11:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes32",
                                    "typeString": "bytes32"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "6189:27:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_DataAssertion_$1383_storage",
                                  "typeString": "struct DataAsserter.DataAssertion storage ref"
                                }
                              },
                              "id": 1691,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "6217:8:1",
                              "memberName": "asserter",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 1380,
                              "src": "6189:36:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "hexValue": "31",
                              "id": 1692,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "6227:1:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_1_by_1",
                                "typeString": "int_const 1"
                              },
                              "value": "1"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_rational_1_by_1",
                                "typeString": "int_const 1"
                              }
                            ],
                            "expression": {
                              "id": 1685,
                              "name": "validatorToken",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1364,
                              "src": "6169:14:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_ExpandedERC20_$47843",
                                "typeString": "contract ExpandedERC20"
                              }
                            },
                            "id": 1687,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "6184:4:1",
                            "memberName": "mint",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 47744,
                            "src": "6169:19:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                              "typeString": "function (address,uint256) external returns (bool)"
                            }
                          },
                          "id": 1693,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6169:60:1",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 1694,
                        "nodeType": "ExpressionStatement",
                        "src": "6169:60:1"
                      },
                      {
                        "assignments": [
                          1697
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 1697,
                            "mutability": "mutable",
                            "name": "dataAssertion",
                            "nameLocation": "6264:13:1",
                            "nodeType": "VariableDeclaration",
                            "scope": 1714,
                            "src": "6243:34:1",
                            "stateVariable": false,
                            "storageLocation": "memory",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_DataAssertion_$1383_memory_ptr",
                              "typeString": "struct DataAsserter.DataAssertion"
                            },
                            "typeName": {
                              "id": 1696,
                              "nodeType": "UserDefinedTypeName",
                              "pathNode": {
                                "id": 1695,
                                "name": "DataAssertion",
                                "nameLocations": [
                                  "6243:13:1"
                                ],
                                "nodeType": "IdentifierPath",
                                "referencedDeclaration": 1383,
                                "src": "6243:13:1"
                              },
                              "referencedDeclaration": 1383,
                              "src": "6243:13:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_DataAssertion_$1383_storage_ptr",
                                "typeString": "struct DataAsserter.DataAssertion"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 1701,
                        "initialValue": {
                          "baseExpression": {
                            "id": 1698,
                            "name": "assertionsData",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1388,
                            "src": "6280:14:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_DataAssertion_$1383_storage_$",
                              "typeString": "mapping(bytes32 => struct DataAsserter.DataAssertion storage ref)"
                            }
                          },
                          "id": 1700,
                          "indexExpression": {
                            "id": 1699,
                            "name": "assertionId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1662,
                            "src": "6295:11:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "6280:27:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_DataAssertion_$1383_storage",
                            "typeString": "struct DataAsserter.DataAssertion storage ref"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "6243:64:1"
                      },
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 1703,
                                "name": "dataAssertion",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1697,
                                "src": "6365:13:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_DataAssertion_$1383_memory_ptr",
                                  "typeString": "struct DataAsserter.DataAssertion memory"
                                }
                              },
                              "id": 1704,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "6379:6:1",
                              "memberName": "dataId",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 1374,
                              "src": "6365:20:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            {
                              "expression": {
                                "id": 1705,
                                "name": "dataAssertion",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1697,
                                "src": "6403:13:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_DataAssertion_$1383_memory_ptr",
                                  "typeString": "struct DataAsserter.DataAssertion memory"
                                }
                              },
                              "id": 1706,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "6417:8:1",
                              "memberName": "dataPath",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 1376,
                              "src": "6403:22:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              }
                            },
                            {
                              "expression": {
                                "id": 1707,
                                "name": "dataAssertion",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1697,
                                "src": "6443:13:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_DataAssertion_$1383_memory_ptr",
                                  "typeString": "struct DataAsserter.DataAssertion memory"
                                }
                              },
                              "id": 1708,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "6457:11:1",
                              "memberName": "description",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 1378,
                              "src": "6443:25:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              }
                            },
                            {
                              "expression": {
                                "id": 1709,
                                "name": "dataAssertion",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1697,
                                "src": "6486:13:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_DataAssertion_$1383_memory_ptr",
                                  "typeString": "struct DataAsserter.DataAssertion memory"
                                }
                              },
                              "id": 1710,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "6500:8:1",
                              "memberName": "asserter",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 1380,
                              "src": "6486:22:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 1711,
                              "name": "assertionId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1662,
                              "src": "6526:11:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              },
                              {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              },
                              {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            ],
                            "id": 1702,
                            "name": "DataAssertionResolved",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1412,
                            "src": "6326:21:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_bytes32_$_t_string_memory_ptr_$_t_string_memory_ptr_$_t_address_$_t_bytes32_$returns$__$",
                              "typeString": "function (bytes32,string memory,string memory,address,bytes32)"
                            }
                          },
                          "id": 1712,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6326:225:1",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1713,
                        "nodeType": "EmitStatement",
                        "src": "6321:230:1"
                      }
                    ]
                  }
                }
              ]
            },
            "functionSelector": "f1b156b2",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "assertionResolvedCallback",
            "nameLocation": "5844:25:1",
            "parameters": {
              "id": 1665,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1662,
                  "mutability": "mutable",
                  "name": "assertionId",
                  "nameLocation": "5887:11:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1722,
                  "src": "5879:19:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 1661,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "5879:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1664,
                  "mutability": "mutable",
                  "name": "assertedTruthfully",
                  "nameLocation": "5913:18:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1722,
                  "src": "5908:23:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 1663,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "5908:4:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5869:68:1"
            },
            "returnParameters": {
              "id": 1666,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5945:0:1"
            },
            "scope": 1729,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 1728,
            "nodeType": "FunctionDefinition",
            "src": "6881:65:1",
            "nodes": [],
            "body": {
              "id": 1727,
              "nodeType": "Block",
              "src": "6944:2:1",
              "nodes": [],
              "statements": []
            },
            "functionSelector": "d448a4ec",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "assertionDisputedCallback",
            "nameLocation": "6890:25:1",
            "parameters": {
              "id": 1725,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1724,
                  "mutability": "mutable",
                  "name": "assertionId",
                  "nameLocation": "6924:11:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1728,
                  "src": "6916:19:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 1723,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "6916:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6915:21:1"
            },
            "returnParameters": {
              "id": 1726,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6944:0:1"
            },
            "scope": 1729,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "abstract": false,
        "baseContracts": [],
        "canonicalName": "DataAsserter",
        "contractDependencies": [
          47843
        ],
        "contractKind": "contract",
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          1729
        ],
        "name": "DataAsserter",
        "nameLocation": "1200:12:1",
        "scope": 1730,
        "usedErrors": []
      }
    ],
    "license": "AGPL-3.0-only"
  },
  "id": 1
}