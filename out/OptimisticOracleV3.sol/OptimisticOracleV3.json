{
  "abi": [
    {
      "inputs": [
        {
          "internalType": "contract FinderInterface",
          "name": "_finder",
          "type": "address"
        },
        {
          "internalType": "contract IERC20",
          "name": "_defaultCurrency",
          "type": "address"
        },
        {
          "internalType": "uint64",
          "name": "_defaultLiveness",
          "type": "uint64"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "contract IERC20",
          "name": "defaultCurrency",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint64",
          "name": "defaultLiveness",
          "type": "uint64"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "burnedBondPercentage",
          "type": "uint256"
        }
      ],
      "name": "AdminPropertiesSet",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "assertionId",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "caller",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "disputer",
          "type": "address"
        }
      ],
      "name": "AssertionDisputed",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "assertionId",
          "type": "bytes32"
        },
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "domainId",
          "type": "bytes32"
        },
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "claim",
          "type": "bytes"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "asserter",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "callbackRecipient",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "escalationManager",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "caller",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint64",
          "name": "expirationTime",
          "type": "uint64"
        },
        {
          "indexed": false,
          "internalType": "contract IERC20",
          "name": "currency",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "bond",
          "type": "uint256"
        },
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "identifier",
          "type": "bytes32"
        }
      ],
      "name": "AssertionMade",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "assertionId",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "bondRecipient",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "bool",
          "name": "disputed",
          "type": "bool"
        },
        {
          "indexed": false,
          "internalType": "bool",
          "name": "settlementResolution",
          "type": "bool"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "settleCaller",
          "type": "address"
        }
      ],
      "name": "AssertionSettled",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "bytes",
          "name": "claim",
          "type": "bytes"
        },
        {
          "internalType": "address",
          "name": "asserter",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "callbackRecipient",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "escalationManager",
          "type": "address"
        },
        {
          "internalType": "uint64",
          "name": "liveness",
          "type": "uint64"
        },
        {
          "internalType": "contract IERC20",
          "name": "currency",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "bond",
          "type": "uint256"
        },
        {
          "internalType": "bytes32",
          "name": "identifier",
          "type": "bytes32"
        },
        {
          "internalType": "bytes32",
          "name": "domainId",
          "type": "bytes32"
        }
      ],
      "name": "assertTruth",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "assertionId",
          "type": "bytes32"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes",
          "name": "claim",
          "type": "bytes"
        },
        {
          "internalType": "address",
          "name": "asserter",
          "type": "address"
        }
      ],
      "name": "assertTruthWithDefaults",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "name": "assertions",
      "outputs": [
        {
          "components": [
            {
              "internalType": "bool",
              "name": "arbitrateViaEscalationManager",
              "type": "bool"
            },
            {
              "internalType": "bool",
              "name": "discardOracle",
              "type": "bool"
            },
            {
              "internalType": "bool",
              "name": "validateDisputers",
              "type": "bool"
            },
            {
              "internalType": "address",
              "name": "assertingCaller",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "escalationManager",
              "type": "address"
            }
          ],
          "internalType": "struct OptimisticOracleV3Interface.EscalationManagerSettings",
          "name": "escalationManagerSettings",
          "type": "tuple"
        },
        {
          "internalType": "address",
          "name": "asserter",
          "type": "address"
        },
        {
          "internalType": "uint64",
          "name": "assertionTime",
          "type": "uint64"
        },
        {
          "internalType": "bool",
          "name": "settled",
          "type": "bool"
        },
        {
          "internalType": "contract IERC20",
          "name": "currency",
          "type": "address"
        },
        {
          "internalType": "uint64",
          "name": "expirationTime",
          "type": "uint64"
        },
        {
          "internalType": "bool",
          "name": "settlementResolution",
          "type": "bool"
        },
        {
          "internalType": "bytes32",
          "name": "domainId",
          "type": "bytes32"
        },
        {
          "internalType": "bytes32",
          "name": "identifier",
          "type": "bytes32"
        },
        {
          "internalType": "uint256",
          "name": "bond",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "callbackRecipient",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "disputer",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "burnedBondPercentage",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "cachedCurrencies",
      "outputs": [
        {
          "internalType": "bool",
          "name": "isWhitelisted",
          "type": "bool"
        },
        {
          "internalType": "uint256",
          "name": "finalFee",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "name": "cachedIdentifiers",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "cachedOracle",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "defaultCurrency",
      "outputs": [
        {
          "internalType": "contract IERC20",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "defaultIdentifier",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "defaultLiveness",
      "outputs": [
        {
          "internalType": "uint64",
          "name": "",
          "type": "uint64"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "assertionId",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "disputer",
          "type": "address"
        }
      ],
      "name": "disputeAssertion",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "finder",
      "outputs": [
        {
          "internalType": "contract FinderInterface",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "assertionId",
          "type": "bytes32"
        }
      ],
      "name": "getAssertion",
      "outputs": [
        {
          "components": [
            {
              "components": [
                {
                  "internalType": "bool",
                  "name": "arbitrateViaEscalationManager",
                  "type": "bool"
                },
                {
                  "internalType": "bool",
                  "name": "discardOracle",
                  "type": "bool"
                },
                {
                  "internalType": "bool",
                  "name": "validateDisputers",
                  "type": "bool"
                },
                {
                  "internalType": "address",
                  "name": "assertingCaller",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "escalationManager",
                  "type": "address"
                }
              ],
              "internalType": "struct OptimisticOracleV3Interface.EscalationManagerSettings",
              "name": "escalationManagerSettings",
              "type": "tuple"
            },
            {
              "internalType": "address",
              "name": "asserter",
              "type": "address"
            },
            {
              "internalType": "uint64",
              "name": "assertionTime",
              "type": "uint64"
            },
            {
              "internalType": "bool",
              "name": "settled",
              "type": "bool"
            },
            {
              "internalType": "contract IERC20",
              "name": "currency",
              "type": "address"
            },
            {
              "internalType": "uint64",
              "name": "expirationTime",
              "type": "uint64"
            },
            {
              "internalType": "bool",
              "name": "settlementResolution",
              "type": "bool"
            },
            {
              "internalType": "bytes32",
              "name": "domainId",
              "type": "bytes32"
            },
            {
              "internalType": "bytes32",
              "name": "identifier",
              "type": "bytes32"
            },
            {
              "internalType": "uint256",
              "name": "bond",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "callbackRecipient",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "disputer",
              "type": "address"
            }
          ],
          "internalType": "struct OptimisticOracleV3Interface.Assertion",
          "name": "",
          "type": "tuple"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "assertionId",
          "type": "bytes32"
        }
      ],
      "name": "getAssertionResult",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getCurrentTime",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "currency",
          "type": "address"
        }
      ],
      "name": "getMinimumBond",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes[]",
          "name": "data",
          "type": "bytes[]"
        }
      ],
      "name": "multicall",
      "outputs": [
        {
          "internalType": "bytes[]",
          "name": "results",
          "type": "bytes[]"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "numericalTrue",
      "outputs": [
        {
          "internalType": "int256",
          "name": "",
          "type": "int256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract IERC20",
          "name": "_defaultCurrency",
          "type": "address"
        },
        {
          "internalType": "uint64",
          "name": "_defaultLiveness",
          "type": "uint64"
        },
        {
          "internalType": "uint256",
          "name": "_burnedBondPercentage",
          "type": "uint256"
        }
      ],
      "name": "setAdminProperties",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "assertionId",
          "type": "bytes32"
        }
      ],
      "name": "settleAndGetAssertionResult",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "assertionId",
          "type": "bytes32"
        }
      ],
      "name": "settleAssertion",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "assertionId",
          "type": "bytes32"
        }
      ],
      "name": "stampAssertion",
      "outputs": [
        {
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "identifier",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "currency",
          "type": "address"
        }
      ],
      "name": "syncUmaParams",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "bytecode": {
    "object": "0x60a06040523480156200001157600080fd5b5060405162003cd138038062003cd1833981016040819052620000349162000634565b6000805460ff19166001179055620000536200004d3390565b6200007e565b6001600160a01b0383166080526200007582826706f05b59d3b20000620000d7565b5050506200072f565b600080546001600160a01b03838116610100818102610100600160a81b0319851617855560405193049190911692909183917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a35050565b6000546001600160a01b036101009091041633146200013d5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064015b60405180910390fd5b670de0b6b3a7640000811115620001975760405162461bcd60e51b815260206004820152601c60248201527f4275726e656420626f6e642070657263656e74616765203e2031303000000000604482015260640162000134565b60008111620001e95760405162461bcd60e51b815260206004820152601b60248201527f4275726e656420626f6e642070657263656e7461676520697320300000000000604482015260640162000134565b6005819055600680546001600160401b038416600160a01b026001600160e01b03199091166001600160a01b03861617179055620002376b082a6a68aa4a8bea8a4aaa8960a31b846200028e565b604080516001600160a01b03851681526001600160401b03841660208201529081018290527fd0f09246d369018534c67fec6a6c3259c6f962ef82c5521c337ae0ccc104e4bd9060600160405180910390a1505050565b6080516040516302abf57960e61b8152654f7261636c6560d01b60048201526001600160a01b039091169063aafd5e4090602401602060405180830381865afa158015620002e0573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062000306919062000693565b600180546001600160a01b0319166001600160a01b039290921691909117905562000330620004f9565b6001600160a01b03166390978d1b836040518263ffffffff1660e01b81526004016200035e91815260200190565b602060405180830381865afa1580156200037c573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620003a29190620006ba565b6000838152600360205260409020805460ff1916911515919091179055620003c96200058f565b604051631d1d5b3960e11b81526001600160a01b0383811660048301529190911690633a3ab67290602401602060405180830381865afa15801562000412573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620004389190620006ba565b6001600160a01b0382166000908152600260205260409020805460ff191691151591909117905562000469620005e1565b604051635b97aadd60e01b81526001600160a01b0383811660048301529190911690635b97aadd90602401602060405180830381865afa158015620004b2573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620004d89190620006de565b516001600160a01b0390911660009081526002602052604090206001015550565b6080516040516302abf57960e61b81527f4964656e74696669657257686974656c6973740000000000000000000000000060048201526000916001600160a01b03169063aafd5e40906024015b602060405180830381865afa15801562000564573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200058a919062000693565b905090565b6080516040516302abf57960e61b81527f436f6c6c61746572616c57686974656c6973740000000000000000000000000060048201526000916001600160a01b03169063aafd5e409060240162000546565b6080516040516302abf57960e61b81526453746f726560d81b60048201526000916001600160a01b03169063aafd5e409060240162000546565b6001600160a01b03811681146200063157600080fd5b50565b6000806000606084860312156200064a57600080fd5b835162000657816200061b565b60208501519093506200066a816200061b565b60408501519092506001600160401b03811681146200068857600080fd5b809150509250925092565b600060208284031215620006a657600080fd5b8151620006b3816200061b565b9392505050565b600060208284031215620006cd57600080fd5b81518015158114620006b357600080fd5b600060208284031215620006f157600080fd5b604051602081016001600160401b03811182821017156200072257634e487b7160e01b600052604160045260246000fd5b6040529151825250919050565b60805161356a620007676000396000818161051a015281816115e301528181611e1b0152818161248001526124e5015261356a6000f3fe608060405234801561001057600080fd5b506004361061018e5760003560e01c80638ea2f2ab116100de578063b9a3c84c11610097578063da03b36e11610071578063da03b36e14610646578063e39dfd7f14610655578063f2fde38b14610668578063fe4e19831461067b57600080fd5b8063b9a3c84c14610515578063d509b0171461053c578063d60715b51461055257600080fd5b80638ea2f2ab14610489578063a6a22b431461049c578063a7af2d0f146104af578063a8655785146104c2578063ac9650d8146104d5578063afedba4f146104f557600080fd5b8063530dd3921161014b578063715018a611610125578063715018a6146102a557806382762520146102ad57806388302884146102c05780638da5cb5b1461047357600080fd5b8063530dd3921461021b5780636457c9791461024e578063707621571461026157600080fd5b806308e7c3e61461019357806320402e1d146101af57806329cb924d146101da57806336b13af4146101e05780634124beef146101f35780634360af3d14610208575b600080fd5b61019c60055481565b6040519081526020015b60405180910390f35b6006546101c2906001600160a01b031681565b6040516001600160a01b0390911681526020016101a6565b4261019c565b61019c6101ee366004612b2e565b6106ad565b610206610201366004612bb0565b610734565b005b61019c610216366004612bc9565b610af7565b61023e610229366004612bb0565b60036020526000908152604090205460ff1681565b60405190151581526020016101a6565b61019c61025c366004612c6a565b610b32565b61028e61026f366004612bc9565b6002602052600090815260409020805460019091015460ff9091169082565b6040805192151583526020830191909152016101a6565b61020661113e565b6102066102bb366004612d5a565b61117a565b6104666102ce366004612bb0565b6040805161022081018252600061018082018181526101a083018290526101c083018290526101e083018290526102008301829052825260208201819052918101829052606081018290526080810182905260a0810182905260c0810182905260e0810182905261010081018290526101208101829052610140810182905261016081019190915250600090815260046020818152604092839020835161022081018552815460ff80821615156101808401908152610100808404831615156101a0860152620100008404831615156101c08601526001600160a01b03630100000090940484166101e0860152600186015484166102008601529084526002850154808416968501969096526001600160401b03600160a01b808804821699860199909952600160e01b96879004831615156060860152600386015480851660808701529889041660a085015294909604909516151560c08201529281015460e08401526005810154918301919091526006810154610120830152600781015483166101408301526008015490911661016082015290565b6040516101a69190612dda565b60005461010090046001600160a01b03166101c2565b61023e610497366004612bb0565b6112f5565b6102066104aa366004612eb4565b61132d565b6001546101c2906001600160a01b031681565b6102066104d0366004612eb4565b6115c5565b6104e86104e3366004612ee4565b611839565b6040516101a69190612fa8565b610508610503366004612bb0565b611990565b6040516101a6919061300a565b6101c27f000000000000000000000000000000000000000000000000000000000000000081565b61019c6b082a6a68aa4a8bea8a4aaa8960a31b81565b61062e610560366004612bb0565b600460208181526000928352604092839020835160a081018552815460ff808216151583526101008204811615159483019490945262010000810484161515958201959095526001600160a01b0363010000009095048516606082015260018201548516608082015260028201546003830154948301546005840154600685015460078601546008909601549498848116986001600160401b03600160a01b80880482169a600160e01b9889900481169a8486169a928504909316989093049092169594939290811691168c565b6040516101a69c9b9a9998979695949392919061301d565b61019c670de0b6b3a764000081565b61023e610663366004612bb0565b61199b565b610206610676366004612bc9565b611b19565b60065461069590600160a01b90046001600160401b031681565b6040516001600160401b0390911681526020016101a6565b600061072a84848080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201829052506006548894509092508291506001600160401b03600160a01b820416906001600160a01b031661071381610af7565b6b082a6a68aa4a8bea8a4aaa8960a31b6000610b32565b90505b9392505050565b61073c611bb7565b61074b6000805460ff19169055565b600081815260046020526040902060028101546001600160a01b03166107b35760405162461bcd60e51b8152602060048201526018602482015277105cdcd95c9d1a5bdb88191bd95cc81b9bdd08195e1a5cdd60421b60448201526064015b60405180910390fd5b6002810154600160e01b900460ff161561080f5760405162461bcd60e51b815260206004820152601960248201527f417373657274696f6e20616c726561647920736574746c65640000000000000060448201526064016107aa565b60028101805460ff60e01b1916600160e01b17905560088101546001600160a01b031661092e57426003820154600160a01b90046001600160401b031611156108925760405162461bcd60e51b8152602060048201526015602482015274105cdcd95c9d1a5bdb881b9bdd08195e1c1a5c9959605a1b60448201526064016107aa565b60038101805460ff60e01b198116600160e01b17909155600282015460068301546108ca926001600160a01b03908116921690611c09565b6108d5826001611c71565b6002810154604080516000815260016020820152338183015290516001600160a01b039092169184917ff4fa324b13daeb4e1aae736c2553632ae0fb16fb31f2d4da8ac99fd056313a13919081900360600190a3610ae1565b6005810154600282015460009161095791859190600160a01b90046001600160401b0316611d78565b8254909150610100900460ff161561097d5760038201805460ff60e01b1916905561099f565b60038201805460ff60e01b1916670de0b6b3a76400008314600160e01b021790555b6000670de0b6b3a764000082146109c35760088301546001600160a01b03166109d2565b60028301546001600160a01b03165b90506000670de0b6b3a764000084600601546005546109f191906130b4565b6109fb91906130e9565b905060008185600601546002610a1191906130b4565b610a1b919061310b565b9050610a3d610a28611dfb565b60038701546001600160a01b03169084611c09565b6003850154610a56906001600160a01b03168483611c09565b8454610100900460ff16610a7e576003850154610a7e908790600160e01b900460ff16611c71565b60038501546040805160018152600160e01b90920460ff161515602083015233908201526001600160a01b0384169087907ff4fa324b13daeb4e1aae736c2553632ae0fb16fb31f2d4da8ac99fd056313a139060600160405180910390a3505050505b50610af46000805460ff19166001179055565b50565b6001600160a01b038116600090815260026020526040812060010154600554610b2882670de0b6b3a76400006130b4565b61072d91906130e9565b6000610b3c611bb7565b610b4b6000805460ff19169055565b42610b658b866001600160401b0384168a8a8e8e8b611e94565b91506001600160a01b038a16610bb25760405162461bcd60e51b8152602060048201526012602482015271041737365727465722063616e7420626520360741b60448201526064016107aa565b6000828152600460205260409020600201546001600160a01b031615610c1a5760405162461bcd60e51b815260206004820152601860248201527f417373657274696f6e20616c726561647920657869737473000000000000000060448201526064016107aa565b610c2384611edb565b610c685760405162461bcd60e51b81526020600482015260166024820152752ab739bab83837b93a32b21034b232b73a34b334b2b960511b60448201526064016107aa565b610c7186611f94565b610cb45760405162461bcd60e51b8152602060048201526014602482015273556e737570706f727465642063757272656e637960601b60448201526064016107aa565b610cbd86610af7565b851015610d025760405162461bcd60e51b8152602060048201526013602482015272426f6e6420616d6f756e7420746f6f206c6f7760681b60448201526064016107aa565b6040805161022081018252600061018082018181526101a083018290526101c08301829052336101e08401526001600160a01b038c81166102008501529083528d811660208401526001600160401b038516938301939093526060820152908716608082015260a08101610d76898461311e565b6001600160401b031681526020016000151581526020018481526020018581526020018681526020018a6001600160a01b0316815260200160006001600160a01b03168152506004600084815260200190815260200160002060008201518160000160008201518160000160006101000a81548160ff02191690831515021790555060208201518160000160016101000a81548160ff02191690831515021790555060408201518160000160026101000a81548160ff02191690831515021790555060608201518160000160036101000a8154816001600160a01b0302191690836001600160a01b0316021790555060808201518160010160006101000a8154816001600160a01b0302191690836001600160a01b03160217905550505060208201518160020160006101000a8154816001600160a01b0302191690836001600160a01b0316021790555060408201518160020160146101000a8154816001600160401b0302191690836001600160401b03160217905550606082015181600201601c6101000a81548160ff02191690831515021790555060808201518160030160006101000a8154816001600160a01b0302191690836001600160a01b0316021790555060a08201518160030160146101000a8154816001600160401b0302191690836001600160401b0316021790555060c082015181600301601c6101000a81548160ff02191690831515021790555060e08201518160040155610100820151816005015561012082015181600601556101408201518160070160006101000a8154816001600160a01b0302191690836001600160a01b031602179055506101608201518160080160006101000a8154816001600160a01b0302191690836001600160a01b031602179055509050506000611012836120f6565b80519091501561105c5760405162461bcd60e51b8152602060048201526015602482015274105cdcd95c9d1a5bdb881b9bdd08185b1b1bddd959605a1b60448201526064016107aa565b6000838152600460209081526040918290209083015191830151606090930151815462ffff001916620100009115159190910261ff00191617610100931515939093029290921760ff19169015151790556110c26001600160a01b0387163330886121cb565b838a6001600160a01b0316837fdb1513f0abeb57a364db56aa3eb52015cca5268f00fd67bc73aaf22bccab02b7868f8e8e338f8a611100919061311e565b8f8f60405161111698979695949392919061313e565b60405180910390a4506111316000805460ff19166001179055565b9998505050505050505050565b6000546001600160a01b0361010090910416331461116e5760405162461bcd60e51b81526004016107aa906131a0565b6111786000612203565b565b6000546001600160a01b036101009091041633146111aa5760405162461bcd60e51b81526004016107aa906131a0565b670de0b6b3a76400008111156112025760405162461bcd60e51b815260206004820152601c60248201527f4275726e656420626f6e642070657263656e74616765203e203130300000000060448201526064016107aa565b600081116112525760405162461bcd60e51b815260206004820152601b60248201527f4275726e656420626f6e642070657263656e746167652069732030000000000060448201526064016107aa565b6005819055600680546001600160401b038416600160a01b026001600160e01b03199091166001600160a01b0386161717905561129e6b082a6a68aa4a8bea8a4aaa8960a31b846115c5565b604080516001600160a01b03851681526001600160401b03841660208201529081018290527fd0f09246d369018534c67fec6a6c3259c6f962ef82c5521c337ae0ccc104e4bd9060600160405180910390a1505050565b600081815260046020526040812060020154600160e01b900460ff1661131e5761131e82610734565b6113278261199b565b92915050565b611335611bb7565b6113446000805460ff19169055565b6001600160a01b0381166113905760405162461bcd60e51b8152602060048201526013602482015272044697370757465722063616e2774206265203606c1b60448201526064016107aa565b600082815260046020526040902060028101546001600160a01b03166113f35760405162461bcd60e51b8152602060048201526018602482015277105cdcd95c9d1a5bdb88191bd95cc81b9bdd08195e1a5cdd60421b60448201526064016107aa565b60088101546001600160a01b03161561144e5760405162461bcd60e51b815260206004820152601a60248201527f417373657274696f6e20616c726561647920646973707574656400000000000060448201526064016107aa565b426003820154600160a01b90046001600160401b0316116114a85760405162461bcd60e51b8152602060048201526014602482015273105cdcd95c9d1a5bdb881a5cc8195e1c1a5c995960621b60448201526064016107aa565b6114b18361225c565b6114f35760405162461bcd60e51b8152602060048201526013602482015272111a5cdc1d5d19481b9bdd08185b1b1bddd959606a1b60448201526064016107aa565b6008810180546001600160a01b0319166001600160a01b03848116919091179091556006820154600383015461152e921690339030906121cb565b60058101546002820154611553918591600160a01b90046001600160401b0316612318565b61155c8361238f565b8054610100900460ff161561157657611576836000611c71565b6040516001600160a01b03831690339085907f60133788b013c89f2a3756dbc47e3484997b87bd7e0af98a7d70232032c1ce2b90600090a4506115c16000805460ff19166001179055565b5050565b6040516302abf57960e61b8152654f7261636c6560d01b60048201527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03169063aafd5e4090602401602060405180830381865afa158015611632573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061165691906131d5565b600180546001600160a01b0319166001600160a01b039290921691909117905561167e612452565b6001600160a01b03166390978d1b836040518263ffffffff1660e01b81526004016116ab91815260200190565b602060405180830381865afa1580156116c8573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906116ec9190613202565b6000838152600360205260409020805460ff19169115159190911790556117116124b7565b604051631d1d5b3960e11b81526001600160a01b0383811660048301529190911690633a3ab67290602401602060405180830381865afa158015611759573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061177d9190613202565b6001600160a01b0382166000908152600260205260409020805460ff19169115159190911790556117ac611dfb565b604051635b97aadd60e01b81526001600160a01b0383811660048301529190911690635b97aadd90602401602060405180830381865afa1580156117f4573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611818919061321d565b516001600160a01b0390911660009081526002602052604090206001015550565b6060816001600160401b0381111561185357611853612be6565b60405190808252806020026020018201604052801561188657816020015b60608152602001906001900390816118715790505b50905060005b8281101561198957600080308686858181106118aa576118aa61325e565b90506020028101906118bc9190613274565b6040516118ca9291906132c1565b600060405180830381855af49150503d8060008114611905576040519150601f19603f3d011682016040523d82523d6000602084013e61190a565b606091505b5091509150816119565760448151101561192357600080fd5b6004810190508080602001905181019061193d91906132d1565b60405162461bcd60e51b81526004016107aa919061300a565b808484815181106119695761196961325e565b60200260200101819052505050808061198190613347565b91505061188c565b5092915050565b60606113278261251c565b6000818152600460208181526040808420815161022081018352815460ff80821615156101808401908152610100808404831615156101a0860152620100008404831615156101c08601526001600160a01b03630100000090940484166101e0860152600186015484166102008601529084526002850154808416978501979097526001600160401b03600160a01b808904821697860197909752600160e01b97889004831615156060860152600386015480851660808701529687041660a085015295909404909316151560c08201529381015460e085015260058101549284019290925260068201546101208401526007820154811661014084015260089091015416610160820181905215801590611ab857508051602001515b15611ac65750600092915050565b8060600151611b0f5760405162461bcd60e51b8152602060048201526015602482015274105cdcd95c9d1a5bdb881b9bdd081cd95d1d1b1959605a1b60448201526064016107aa565b60c0015192915050565b6000546001600160a01b03610100909104163314611b495760405162461bcd60e51b81526004016107aa906131a0565b6001600160a01b038116611bae5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084016107aa565b610af481612203565b60005460ff166111785760405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c0060448201526064016107aa565b6040516001600160a01b038316602482015260448101829052611c6c90849063a9059cbb60e01b906064015b60408051601f198184030181529190526020810180516001600160e01b03166001600160e01b0319909316929092179091526125a2565b505050565b600082815260046020526040902060078101546001909101546001600160a01b0391821691168115611d00576040516378d8ab5960e11b81526004810185905283151560248201526001600160a01b0383169063f1b156b290604401600060405180830381600087803b158015611ce757600080fd5b505af1158015611cfb573d6000803e3d6000fd5b505050505b6001600160a01b03811615611d72576040516378d8ab5960e11b81526004810185905283151560248201526001600160a01b0382169063f1b156b290604401600060405180830381600087803b158015611d5957600080fd5b505af1158015611d6d573d6000803e3d6000fd5b505050505b50505050565b6000611d8384612674565b6001600160a01b031663719c6d568484611d9c8861251c565b6040518463ffffffff1660e01b8152600401611dba93929190613360565b602060405180830381865afa158015611dd7573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061072a919061337f565b6040516302abf57960e61b81526453746f726560d81b60048201526000907f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03169063aafd5e40906024015b602060405180830381865afa158015611e6b573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611e8f91906131d5565b905090565b6000888888888888888833604051602001611eb799989796959493929190613398565b60405160208183030381529060405280519060200120905098975050505050505050565b60008181526003602052604081205460ff1615611efa57506001919050565b611f02612452565b6001600160a01b03166390978d1b836040518263ffffffff1660e01b8152600401611f2f91815260200190565b602060405180830381865afa158015611f4c573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611f709190613202565b600092835260036020526040909220805460ff191692151592831790555060ff1690565b6001600160a01b03811660009081526002602052604081205460ff1615611fbd57506001919050565b611fc56124b7565b604051631d1d5b3960e11b81526001600160a01b0384811660048301529190911690633a3ab67290602401602060405180830381865afa15801561200d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906120319190613202565b6001600160a01b0383166000908152600260205260409020805460ff1916911515919091179055612060611dfb565b604051635b97aadd60e01b81526001600160a01b0384811660048301529190911690635b97aadd90602401602060405180830381865afa1580156120a8573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906120cc919061321d565b516001600160a01b0390921660009081526002602052604090206001810192909255505460ff1690565b6040805160808101825260008082526020808301829052828401829052606083018290528482526004905291909120600101546001600160a01b031680612162575050604080516080810182526000808252602082018190529181018290526060810191909152919050565b60405163a6b011a760e01b8152600481018490526001600160a01b0382169063a6b011a790602401608060405180830381865afa1580156121a7573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061072d9190613400565b6040516001600160a01b0380851660248301528316604482015260648101829052611d729085906323b872dd60e01b90608401611c35565b600080546001600160a01b03838116610100818102610100600160a81b0319851617855560405193049190911692909183917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a35050565b60008181526004602052604081205462010000900460ff1661228057506001919050565b6000828152600460205260409020600101546001600160a01b0316806122a95750600192915050565b604051636b915d9160e01b8152600481018490523360248201526001600160a01b03821690636b915d9190604401602060405180830381865afa1580156122f4573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061072d9190613202565b61232183612674565b6001600160a01b031663216666a4838361233a8761251c565b6040518463ffffffff1660e01b815260040161235893929190613360565b600060405180830381600087803b15801561237257600080fd5b505af1158015612386573d6000803e3d6000fd5b50505050505050565b600081815260046020526040902060078101546001909101546001600160a01b039182169116811561241657604051633512293b60e21b8152600481018490526001600160a01b0383169063d448a4ec90602401600060405180830381600087803b1580156123fd57600080fd5b505af1158015612411573d6000803e3d6000fd5b505050505b6001600160a01b03811615611c6c57604051633512293b60e21b8152600481018490526001600160a01b0382169063d448a4ec90602401612358565b6040516302abf57960e61b8152721259195b9d1a599a595c95da1a5d195b1a5cdd606a1b60048201526000907f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03169063aafd5e4090602401611e4e565b6040516302abf57960e61b81527210dbdb1b185d195c985b15da1a5d195b1a5cdd606a1b60048201526000907f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03169063aafd5e4090602401611e4e565b606061132761255e604051806020016040528060008152506040518060400160405280600b81526020016a185cdcd95c9d1a5bdb925960aa1b815250856126bc565b604080518082018252600a81526937b7a0b9b9b2b93a32b960b11b6020808301919091526000878152600490915291909120600201546001600160a01b0316612702565b60006125f7826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b031661271d9092919063ffffffff16565b805190915015611c6c57808060200190518101906126159190613202565b611c6c5760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b60648201526084016107aa565b60008181526004602052604081205460ff16156126ab576000828152600460205260409020600101546001600160a01b0316611327565b50506001546001600160a01b031690565b606060006126ca858561272c565b905084816126d78561276e565b6040516020016126e99392919061347c565b6040516020818303038152906040529150509392505050565b60606000612710858561272c565b905084816126d7856127af565b606061072a8484600085612806565b81516060901561275d578160405160200161274791906134bf565b6040516020818303038152906040529050611327565b8160405160200161274791906134f3565b606061277d608083901c612937565b61278683612937565b6040805160208101939093528201526060015b6040516020818303038152906040529050919050565b60606127c76001600160801b03602084901c16612937565b6127e28360601b6bffffffffffffffffffffffff1916612937565b6040516020016127999291909182526001600160c01b031916602082015260280190565b6060824710156128675760405162461bcd60e51b815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f6044820152651c8818d85b1b60d21b60648201526084016107aa565b6001600160a01b0385163b6128be5760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e747261637400000060448201526064016107aa565b600080866001600160a01b031685876040516128da9190613518565b60006040518083038185875af1925050503d8060008114612917576040519150601f19603f3d011682016040523d82523d6000602084013e61291c565b606091505b509150915061292c828286612ad0565b979650505050505050565b6000808260001c9050806001600160801b03169050806801000000000000000002811777ffffffffffffffff0000000000000000ffffffffffffffff169050806401000000000281177bffffffff00000000ffffffff00000000ffffffff00000000ffffffff16905080620100000281177dffff0000ffff0000ffff0000ffff0000ffff0000ffff0000ffff0000ffff169050806101000281177eff00ff00ff00ff00ff00ff00ff00ff00ff00ff00ff00ff00ff00ff00ff00ff1690508060100281177f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f16905060006008827f08080808080808080808080808080808080808080808080808080808080808081681612a5257612a526130d3565b0460047f040404040404040404040404040404040404040404040404040404040404040484160460027f020202020202020202020202020202020202020202020202020202020202020285160417166027029091017f3030303030303030303030303030303030303030303030303030303030303030019392505050565b60608315612adf57508161072d565b825115612aef5782518084602001fd5b8160405162461bcd60e51b81526004016107aa919061300a565b6001600160a01b0381168114610af457600080fd5b8035612b2981612b09565b919050565b600080600060408486031215612b4357600080fd5b83356001600160401b0380821115612b5a57600080fd5b818601915086601f830112612b6e57600080fd5b813581811115612b7d57600080fd5b876020828501011115612b8f57600080fd5b60209283019550935050840135612ba581612b09565b809150509250925092565b600060208284031215612bc257600080fd5b5035919050565b600060208284031215612bdb57600080fd5b813561072d81612b09565b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f191681016001600160401b0381118282101715612c2457612c24612be6565b604052919050565b60006001600160401b03821115612c4557612c45612be6565b50601f01601f191660200190565b80356001600160401b0381168114612b2957600080fd5b60008060008060008060008060006101208a8c031215612c8957600080fd5b89356001600160401b03811115612c9f57600080fd5b8a01601f81018c13612cb057600080fd5b8035612cc3612cbe82612c2c565b612bfc565b8181528d6020838501011115612cd857600080fd5b81602084016020830137600060208383010152809b50505050612cfd60208b01612b1e565b9750612d0b60408b01612b1e565b9650612d1960608b01612b1e565b9550612d2760808b01612c53565b9450612d3560a08b01612b1e565b935060c08a0135925060e08a013591506101008a013590509295985092959850929598565b600080600060608486031215612d6f57600080fd5b8335612d7a81612b09565b9250612d8860208501612c53565b9150604084013590509250925092565b8051151582526020808201511515908301526040808201511515908301526060808201516001600160a01b039081169184019190915260809182015116910152565b600061020082019050612dee828451612d98565b60208301516001600160a01b0390811660a084015260408401516001600160401b031660c08401526060840151151560e084015260808401519081166101008085019190915260a08501519150610120612e52818601846001600160401b03169052565b60c08601519250610140612e698187018515159052565b60e08701516101608781019190915292870151610180870152908601516101a08601528501516001600160a01b039081166101c0860152908501519081166101e08501529050611989565b60008060408385031215612ec757600080fd5b823591506020830135612ed981612b09565b809150509250929050565b60008060208385031215612ef757600080fd5b82356001600160401b0380821115612f0e57600080fd5b818501915085601f830112612f2257600080fd5b813581811115612f3157600080fd5b8660208260051b8501011115612f4657600080fd5b60209290920196919550909350505050565b60005b83811015612f73578181015183820152602001612f5b565b50506000910152565b60008151808452612f94816020860160208601612f58565b601f01601f19169290920160200192915050565b6000602080830181845280855180835260408601915060408160051b870101925083870160005b82811015612ffd57603f19888603018452612feb858351612f7c565b94509285019290850190600101612fcf565b5092979650505050505050565b60208152600061072d6020830184612f7c565b610200810161302c828f612d98565b6001600160a01b039c8d1660a08301526001600160401b039b8c1660c083015299151560e0820152978b16610100890152959098166101208701529215156101408601526101608501919091526101808401526101a08301529284166101c0820152919092166101e090910152919050565b634e487b7160e01b600052601160045260246000fd5b60008160001904831182151516156130ce576130ce61309e565b500290565b634e487b7160e01b600052601260045260246000fd5b60008261310657634e487b7160e01b600052601260045260246000fd5b500490565b818103818111156113275761132761309e565b6001600160401b038181168382160190808211156119895761198961309e565b60006101008a83528060208401526131588184018b612f7c565b6001600160a01b03998a1660408501529789166060840152505093861660808501526001600160401b039290921660a084015290931660c082015260e0019190915292915050565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b6000602082840312156131e757600080fd5b815161072d81612b09565b80518015158114612b2957600080fd5b60006020828403121561321457600080fd5b61072d826131f2565b60006020828403121561322f57600080fd5b604051602081018181106001600160401b038211171561325157613251612be6565b6040529151825250919050565b634e487b7160e01b600052603260045260246000fd5b6000808335601e1984360301811261328b57600080fd5b8301803591506001600160401b038211156132a557600080fd5b6020019150368190038213156132ba57600080fd5b9250929050565b8183823760009101908152919050565b6000602082840312156132e357600080fd5b81516001600160401b038111156132f957600080fd5b8201601f8101841361330a57600080fd5b8051613318612cbe82612c2c565b81815285602083850101111561332d57600080fd5b61333e826020830160208601612f58565b95945050505050565b6000600182016133595761335961309e565b5060010190565b83815282602082015260606040820152600061333e6060830184612f7c565b60006020828403121561339157600080fd5b5051919050565b60006101208083526133ac8184018d612f7c565b602084019b909b52505060408101979097526001600160401b039590951660608701526001600160a01b03938416608087015291831660a0860152821660c085015260e08401521661010090910152919050565b60006080828403121561341257600080fd5b604051608081018181106001600160401b038211171561343457613434612be6565b604052613440836131f2565b815261344e602084016131f2565b602082015261345f604084016131f2565b6040820152613470606084016131f2565b60608201529392505050565b6000845161348e818460208901612f58565b8451908301906134a2818360208901612f58565b84519101906134b5818360208801612f58565b0195945050505050565b600b60fa1b8152600082516134db816001850160208701612f58565b601d60f91b6001939091019283015250600201919050565b60008251613505818460208701612f58565b601d60f91b920191825250600101919050565b6000825161352a818460208701612f58565b919091019291505056fea2646970667358221220e69a97f9c013f92aee695edbe9683928f9b988d15a5ef80fcb6919b8a896228564736f6c63430008100033",
    "sourceMap": "1550:25031:51:-:0;;;2797:222;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;874:11:32;:18;;-1:-1:-1;;874:18:32;888:4;874:18;;;921:32:19;940:12;719:10:25;;640:96;940:12:19;921:18;:32::i;:::-;-1:-1:-1;;;;;2924:16:51;;;;2950:62;2969:16;2987;3005:6;2950:18;:62::i;:::-;2797:222;;;1550:25031;;2270:187:19;2343:16;2362:6;;-1:-1:-1;;;;;2378:17:19;;;2362:6;2378:17;;;-1:-1:-1;;;;;;2378:17:19;;;;;2410:40;;2362:6;;;;;;;2378:17;;2362:6;;2410:40;;;2333:124;2270:187;:::o;3496:622:51:-;1082:7:19;1108:6;-1:-1:-1;;;;;1108:6:19;;;;;719:10:25;1248:23:19;1240:68;;;;-1:-1:-1;;;1240:68:19;;1007:2:69;1240:68:19;;;989:21:69;;;1026:18;;;1019:30;1085:34;1065:18;;;1058:62;1137:18;;1240:68:19;;;;;;;;;3695:4:51::1;3670:21;:29;;3662:70;;;::::0;-1:-1:-1;;;3662:70:51;;1368:2:69;3662:70:51::1;::::0;::::1;1350:21:69::0;1407:2;1387:18;;;1380:30;1446;1426:18;;;1419:58;1494:18;;3662:70:51::1;1166:352:69::0;3662:70:51::1;3774:1;3750:21;:25;3742:65;;;::::0;-1:-1:-1;;;3742:65:51;;1725:2:69;3742:65:51::1;::::0;::::1;1707:21:69::0;1764:2;1744:18;;;1737:30;1803:29;1783:18;;;1776:57;1850:18;;3742:65:51::1;1523:351:69::0;3742:65:51::1;3817:20;:44:::0;;;3871:15:::1;:34:::0;;-1:-1:-1;;;;;3915:34:51;::::1;-1:-1:-1::0;;;3915:34:51::1;-1:-1:-1::0;;;;;;3915:34:51;;;-1:-1:-1;;;;;3871:34:51;::::1;3915::::0;::::1;::::0;;3959:59:::1;-1:-1:-1::0;;;3889:16:51;3959:13:::1;:59::i;:::-;4034:77;::::0;;-1:-1:-1;;;;;2113:32:69;;2095:51;;-1:-1:-1;;;;;2182:31:69;;2177:2;2162:18;;2155:59;2230:18;;;2223:34;;;4034:77:51::1;::::0;2083:2:69;2068:18;4034:77:51::1;;;;;;;3496:622:::0;;;:::o;16922:453::-;17015:6;;:56;;-1:-1:-1;;;17015:56:51;;-1:-1:-1;;;17015:56:51;;;2414:25:69;-1:-1:-1;;;;;17015:31:51;;;;;;2387:18:69;;17015:56:51;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;17000:12;:71;;-1:-1:-1;;;;;;17000:71:51;-1:-1:-1;;;;;17000:71:51;;;;;;;;;;17113:25;:23;:25::i;:::-;-1:-1:-1;;;;;17113:47:51;;17161:10;17113:59;;;;;;;;;;;;;2414:25:69;;2402:2;2387:18;;2268:177;17113:59:51;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;17081:29;;;;:17;:29;;;;;:91;;-1:-1:-1;;17081:91:51;;;;;;;;;;17225:25;:23;:25::i;:::-;:49;;-1:-1:-1;;;17225:49:51;;-1:-1:-1;;;;;3169:32:69;;;17225:49:51;;;3151:51:69;17225:39:51;;;;;;;3124:18:69;;17225:49:51;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;17182:26:51;;;;;;:16;:26;;;;;:92;;-1:-1:-1;;17182:92:51;;;;;;;;;;17322:11;:9;:11::i;:::-;:37;;-1:-1:-1;;;17322:37:51;;-1:-1:-1;;;;;3169:32:69;;;17322:37:51;;;3151:51:69;17322:27:51;;;;;;;3124:18:69;;17322:37:51;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:46;-1:-1:-1;;;;;17284:26:51;;;17322:46;17284:26;;;:16;:26;;;;;:35;;:84;-1:-1:-1;16922:453:51:o;21425:211::-;21559:6;;:69;;-1:-1:-1;;;21559:69:51;;21591:36;21559:69;;;2414:25:69;21483:28:51;;-1:-1:-1;;;;;21559:31:51;;;;2387:18:69;;21559:69:51;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;21523:106;;21425:211;:::o;21155:187::-;21265:6;;:69;;-1:-1:-1;;;21265:69:51;;21297:36;21265:69;;;2414:25:69;21213:16:51;;-1:-1:-1;;;;;21265:31:51;;;;2387:18:69;;21265:69:51;2268:177:69;21700:155:51;21792:6;;:55;;-1:-1:-1;;;21792:55:51;;-1:-1:-1;;;21792:55:51;;;2414:25:69;21744:14:51;;-1:-1:-1;;;;;21792:31:51;;;;2387:18:69;;21792:55:51;2268:177:69;14:148;-1:-1:-1;;;;;106:31:69;;96:42;;86:70;;152:1;149;142:12;86:70;14:148;:::o;167:633::-;295:6;303;311;364:2;352:9;343:7;339:23;335:32;332:52;;;380:1;377;370:12;332:52;412:9;406:16;431:48;473:5;431:48;:::i;:::-;548:2;533:18;;527:25;498:5;;-1:-1:-1;561:50:69;527:25;561:50;:::i;:::-;682:2;667:18;;661:25;630:7;;-1:-1:-1;;;;;;717:32:69;;705:45;;695:73;;764:1;761;754:12;695:73;787:7;777:17;;;167:633;;;;;:::o;2450:268::-;2520:6;2573:2;2561:9;2552:7;2548:23;2544:32;2541:52;;;2589:1;2586;2579:12;2541:52;2621:9;2615:16;2640:48;2682:5;2640:48;:::i;:::-;2707:5;2450:268;-1:-1:-1;;;2450:268:69:o;2723:277::-;2790:6;2843:2;2831:9;2822:7;2818:23;2814:32;2811:52;;;2859:1;2856;2849:12;2811:52;2891:9;2885:16;2944:5;2937:13;2930:21;2923:5;2920:32;2910:60;;2966:1;2963;2956:12;3213:541;3310:6;3363:2;3351:9;3342:7;3338:23;3334:32;3331:52;;;3379:1;3376;3369:12;3331:52;3412:2;3406:9;3454:2;3442:15;;-1:-1:-1;;;;;3472:34:69;;3508:22;;;3469:62;3466:185;;;3573:10;3568:3;3564:20;3561:1;3554:31;3608:4;3605:1;3598:15;3636:4;3633:1;3626:15;3466:185;3667:2;3660:22;3706:16;;3691:32;;-1:-1:-1;3698:6:69;3213:541;-1:-1:-1;3213:541:69:o;:::-;1550:25031:51;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x608060405234801561001057600080fd5b506004361061018e5760003560e01c80638ea2f2ab116100de578063b9a3c84c11610097578063da03b36e11610071578063da03b36e14610646578063e39dfd7f14610655578063f2fde38b14610668578063fe4e19831461067b57600080fd5b8063b9a3c84c14610515578063d509b0171461053c578063d60715b51461055257600080fd5b80638ea2f2ab14610489578063a6a22b431461049c578063a7af2d0f146104af578063a8655785146104c2578063ac9650d8146104d5578063afedba4f146104f557600080fd5b8063530dd3921161014b578063715018a611610125578063715018a6146102a557806382762520146102ad57806388302884146102c05780638da5cb5b1461047357600080fd5b8063530dd3921461021b5780636457c9791461024e578063707621571461026157600080fd5b806308e7c3e61461019357806320402e1d146101af57806329cb924d146101da57806336b13af4146101e05780634124beef146101f35780634360af3d14610208575b600080fd5b61019c60055481565b6040519081526020015b60405180910390f35b6006546101c2906001600160a01b031681565b6040516001600160a01b0390911681526020016101a6565b4261019c565b61019c6101ee366004612b2e565b6106ad565b610206610201366004612bb0565b610734565b005b61019c610216366004612bc9565b610af7565b61023e610229366004612bb0565b60036020526000908152604090205460ff1681565b60405190151581526020016101a6565b61019c61025c366004612c6a565b610b32565b61028e61026f366004612bc9565b6002602052600090815260409020805460019091015460ff9091169082565b6040805192151583526020830191909152016101a6565b61020661113e565b6102066102bb366004612d5a565b61117a565b6104666102ce366004612bb0565b6040805161022081018252600061018082018181526101a083018290526101c083018290526101e083018290526102008301829052825260208201819052918101829052606081018290526080810182905260a0810182905260c0810182905260e0810182905261010081018290526101208101829052610140810182905261016081019190915250600090815260046020818152604092839020835161022081018552815460ff80821615156101808401908152610100808404831615156101a0860152620100008404831615156101c08601526001600160a01b03630100000090940484166101e0860152600186015484166102008601529084526002850154808416968501969096526001600160401b03600160a01b808804821699860199909952600160e01b96879004831615156060860152600386015480851660808701529889041660a085015294909604909516151560c08201529281015460e08401526005810154918301919091526006810154610120830152600781015483166101408301526008015490911661016082015290565b6040516101a69190612dda565b60005461010090046001600160a01b03166101c2565b61023e610497366004612bb0565b6112f5565b6102066104aa366004612eb4565b61132d565b6001546101c2906001600160a01b031681565b6102066104d0366004612eb4565b6115c5565b6104e86104e3366004612ee4565b611839565b6040516101a69190612fa8565b610508610503366004612bb0565b611990565b6040516101a6919061300a565b6101c27f000000000000000000000000000000000000000000000000000000000000000081565b61019c6b082a6a68aa4a8bea8a4aaa8960a31b81565b61062e610560366004612bb0565b600460208181526000928352604092839020835160a081018552815460ff808216151583526101008204811615159483019490945262010000810484161515958201959095526001600160a01b0363010000009095048516606082015260018201548516608082015260028201546003830154948301546005840154600685015460078601546008909601549498848116986001600160401b03600160a01b80880482169a600160e01b9889900481169a8486169a928504909316989093049092169594939290811691168c565b6040516101a69c9b9a9998979695949392919061301d565b61019c670de0b6b3a764000081565b61023e610663366004612bb0565b61199b565b610206610676366004612bc9565b611b19565b60065461069590600160a01b90046001600160401b031681565b6040516001600160401b0390911681526020016101a6565b600061072a84848080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201829052506006548894509092508291506001600160401b03600160a01b820416906001600160a01b031661071381610af7565b6b082a6a68aa4a8bea8a4aaa8960a31b6000610b32565b90505b9392505050565b61073c611bb7565b61074b6000805460ff19169055565b600081815260046020526040902060028101546001600160a01b03166107b35760405162461bcd60e51b8152602060048201526018602482015277105cdcd95c9d1a5bdb88191bd95cc81b9bdd08195e1a5cdd60421b60448201526064015b60405180910390fd5b6002810154600160e01b900460ff161561080f5760405162461bcd60e51b815260206004820152601960248201527f417373657274696f6e20616c726561647920736574746c65640000000000000060448201526064016107aa565b60028101805460ff60e01b1916600160e01b17905560088101546001600160a01b031661092e57426003820154600160a01b90046001600160401b031611156108925760405162461bcd60e51b8152602060048201526015602482015274105cdcd95c9d1a5bdb881b9bdd08195e1c1a5c9959605a1b60448201526064016107aa565b60038101805460ff60e01b198116600160e01b17909155600282015460068301546108ca926001600160a01b03908116921690611c09565b6108d5826001611c71565b6002810154604080516000815260016020820152338183015290516001600160a01b039092169184917ff4fa324b13daeb4e1aae736c2553632ae0fb16fb31f2d4da8ac99fd056313a13919081900360600190a3610ae1565b6005810154600282015460009161095791859190600160a01b90046001600160401b0316611d78565b8254909150610100900460ff161561097d5760038201805460ff60e01b1916905561099f565b60038201805460ff60e01b1916670de0b6b3a76400008314600160e01b021790555b6000670de0b6b3a764000082146109c35760088301546001600160a01b03166109d2565b60028301546001600160a01b03165b90506000670de0b6b3a764000084600601546005546109f191906130b4565b6109fb91906130e9565b905060008185600601546002610a1191906130b4565b610a1b919061310b565b9050610a3d610a28611dfb565b60038701546001600160a01b03169084611c09565b6003850154610a56906001600160a01b03168483611c09565b8454610100900460ff16610a7e576003850154610a7e908790600160e01b900460ff16611c71565b60038501546040805160018152600160e01b90920460ff161515602083015233908201526001600160a01b0384169087907ff4fa324b13daeb4e1aae736c2553632ae0fb16fb31f2d4da8ac99fd056313a139060600160405180910390a3505050505b50610af46000805460ff19166001179055565b50565b6001600160a01b038116600090815260026020526040812060010154600554610b2882670de0b6b3a76400006130b4565b61072d91906130e9565b6000610b3c611bb7565b610b4b6000805460ff19169055565b42610b658b866001600160401b0384168a8a8e8e8b611e94565b91506001600160a01b038a16610bb25760405162461bcd60e51b8152602060048201526012602482015271041737365727465722063616e7420626520360741b60448201526064016107aa565b6000828152600460205260409020600201546001600160a01b031615610c1a5760405162461bcd60e51b815260206004820152601860248201527f417373657274696f6e20616c726561647920657869737473000000000000000060448201526064016107aa565b610c2384611edb565b610c685760405162461bcd60e51b81526020600482015260166024820152752ab739bab83837b93a32b21034b232b73a34b334b2b960511b60448201526064016107aa565b610c7186611f94565b610cb45760405162461bcd60e51b8152602060048201526014602482015273556e737570706f727465642063757272656e637960601b60448201526064016107aa565b610cbd86610af7565b851015610d025760405162461bcd60e51b8152602060048201526013602482015272426f6e6420616d6f756e7420746f6f206c6f7760681b60448201526064016107aa565b6040805161022081018252600061018082018181526101a083018290526101c08301829052336101e08401526001600160a01b038c81166102008501529083528d811660208401526001600160401b038516938301939093526060820152908716608082015260a08101610d76898461311e565b6001600160401b031681526020016000151581526020018481526020018581526020018681526020018a6001600160a01b0316815260200160006001600160a01b03168152506004600084815260200190815260200160002060008201518160000160008201518160000160006101000a81548160ff02191690831515021790555060208201518160000160016101000a81548160ff02191690831515021790555060408201518160000160026101000a81548160ff02191690831515021790555060608201518160000160036101000a8154816001600160a01b0302191690836001600160a01b0316021790555060808201518160010160006101000a8154816001600160a01b0302191690836001600160a01b03160217905550505060208201518160020160006101000a8154816001600160a01b0302191690836001600160a01b0316021790555060408201518160020160146101000a8154816001600160401b0302191690836001600160401b03160217905550606082015181600201601c6101000a81548160ff02191690831515021790555060808201518160030160006101000a8154816001600160a01b0302191690836001600160a01b0316021790555060a08201518160030160146101000a8154816001600160401b0302191690836001600160401b0316021790555060c082015181600301601c6101000a81548160ff02191690831515021790555060e08201518160040155610100820151816005015561012082015181600601556101408201518160070160006101000a8154816001600160a01b0302191690836001600160a01b031602179055506101608201518160080160006101000a8154816001600160a01b0302191690836001600160a01b031602179055509050506000611012836120f6565b80519091501561105c5760405162461bcd60e51b8152602060048201526015602482015274105cdcd95c9d1a5bdb881b9bdd08185b1b1bddd959605a1b60448201526064016107aa565b6000838152600460209081526040918290209083015191830151606090930151815462ffff001916620100009115159190910261ff00191617610100931515939093029290921760ff19169015151790556110c26001600160a01b0387163330886121cb565b838a6001600160a01b0316837fdb1513f0abeb57a364db56aa3eb52015cca5268f00fd67bc73aaf22bccab02b7868f8e8e338f8a611100919061311e565b8f8f60405161111698979695949392919061313e565b60405180910390a4506111316000805460ff19166001179055565b9998505050505050505050565b6000546001600160a01b0361010090910416331461116e5760405162461bcd60e51b81526004016107aa906131a0565b6111786000612203565b565b6000546001600160a01b036101009091041633146111aa5760405162461bcd60e51b81526004016107aa906131a0565b670de0b6b3a76400008111156112025760405162461bcd60e51b815260206004820152601c60248201527f4275726e656420626f6e642070657263656e74616765203e203130300000000060448201526064016107aa565b600081116112525760405162461bcd60e51b815260206004820152601b60248201527f4275726e656420626f6e642070657263656e746167652069732030000000000060448201526064016107aa565b6005819055600680546001600160401b038416600160a01b026001600160e01b03199091166001600160a01b0386161717905561129e6b082a6a68aa4a8bea8a4aaa8960a31b846115c5565b604080516001600160a01b03851681526001600160401b03841660208201529081018290527fd0f09246d369018534c67fec6a6c3259c6f962ef82c5521c337ae0ccc104e4bd9060600160405180910390a1505050565b600081815260046020526040812060020154600160e01b900460ff1661131e5761131e82610734565b6113278261199b565b92915050565b611335611bb7565b6113446000805460ff19169055565b6001600160a01b0381166113905760405162461bcd60e51b8152602060048201526013602482015272044697370757465722063616e2774206265203606c1b60448201526064016107aa565b600082815260046020526040902060028101546001600160a01b03166113f35760405162461bcd60e51b8152602060048201526018602482015277105cdcd95c9d1a5bdb88191bd95cc81b9bdd08195e1a5cdd60421b60448201526064016107aa565b60088101546001600160a01b03161561144e5760405162461bcd60e51b815260206004820152601a60248201527f417373657274696f6e20616c726561647920646973707574656400000000000060448201526064016107aa565b426003820154600160a01b90046001600160401b0316116114a85760405162461bcd60e51b8152602060048201526014602482015273105cdcd95c9d1a5bdb881a5cc8195e1c1a5c995960621b60448201526064016107aa565b6114b18361225c565b6114f35760405162461bcd60e51b8152602060048201526013602482015272111a5cdc1d5d19481b9bdd08185b1b1bddd959606a1b60448201526064016107aa565b6008810180546001600160a01b0319166001600160a01b03848116919091179091556006820154600383015461152e921690339030906121cb565b60058101546002820154611553918591600160a01b90046001600160401b0316612318565b61155c8361238f565b8054610100900460ff161561157657611576836000611c71565b6040516001600160a01b03831690339085907f60133788b013c89f2a3756dbc47e3484997b87bd7e0af98a7d70232032c1ce2b90600090a4506115c16000805460ff19166001179055565b5050565b6040516302abf57960e61b8152654f7261636c6560d01b60048201527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03169063aafd5e4090602401602060405180830381865afa158015611632573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061165691906131d5565b600180546001600160a01b0319166001600160a01b039290921691909117905561167e612452565b6001600160a01b03166390978d1b836040518263ffffffff1660e01b81526004016116ab91815260200190565b602060405180830381865afa1580156116c8573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906116ec9190613202565b6000838152600360205260409020805460ff19169115159190911790556117116124b7565b604051631d1d5b3960e11b81526001600160a01b0383811660048301529190911690633a3ab67290602401602060405180830381865afa158015611759573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061177d9190613202565b6001600160a01b0382166000908152600260205260409020805460ff19169115159190911790556117ac611dfb565b604051635b97aadd60e01b81526001600160a01b0383811660048301529190911690635b97aadd90602401602060405180830381865afa1580156117f4573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611818919061321d565b516001600160a01b0390911660009081526002602052604090206001015550565b6060816001600160401b0381111561185357611853612be6565b60405190808252806020026020018201604052801561188657816020015b60608152602001906001900390816118715790505b50905060005b8281101561198957600080308686858181106118aa576118aa61325e565b90506020028101906118bc9190613274565b6040516118ca9291906132c1565b600060405180830381855af49150503d8060008114611905576040519150601f19603f3d011682016040523d82523d6000602084013e61190a565b606091505b5091509150816119565760448151101561192357600080fd5b6004810190508080602001905181019061193d91906132d1565b60405162461bcd60e51b81526004016107aa919061300a565b808484815181106119695761196961325e565b60200260200101819052505050808061198190613347565b91505061188c565b5092915050565b60606113278261251c565b6000818152600460208181526040808420815161022081018352815460ff80821615156101808401908152610100808404831615156101a0860152620100008404831615156101c08601526001600160a01b03630100000090940484166101e0860152600186015484166102008601529084526002850154808416978501979097526001600160401b03600160a01b808904821697860197909752600160e01b97889004831615156060860152600386015480851660808701529687041660a085015295909404909316151560c08201529381015460e085015260058101549284019290925260068201546101208401526007820154811661014084015260089091015416610160820181905215801590611ab857508051602001515b15611ac65750600092915050565b8060600151611b0f5760405162461bcd60e51b8152602060048201526015602482015274105cdcd95c9d1a5bdb881b9bdd081cd95d1d1b1959605a1b60448201526064016107aa565b60c0015192915050565b6000546001600160a01b03610100909104163314611b495760405162461bcd60e51b81526004016107aa906131a0565b6001600160a01b038116611bae5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084016107aa565b610af481612203565b60005460ff166111785760405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c0060448201526064016107aa565b6040516001600160a01b038316602482015260448101829052611c6c90849063a9059cbb60e01b906064015b60408051601f198184030181529190526020810180516001600160e01b03166001600160e01b0319909316929092179091526125a2565b505050565b600082815260046020526040902060078101546001909101546001600160a01b0391821691168115611d00576040516378d8ab5960e11b81526004810185905283151560248201526001600160a01b0383169063f1b156b290604401600060405180830381600087803b158015611ce757600080fd5b505af1158015611cfb573d6000803e3d6000fd5b505050505b6001600160a01b03811615611d72576040516378d8ab5960e11b81526004810185905283151560248201526001600160a01b0382169063f1b156b290604401600060405180830381600087803b158015611d5957600080fd5b505af1158015611d6d573d6000803e3d6000fd5b505050505b50505050565b6000611d8384612674565b6001600160a01b031663719c6d568484611d9c8861251c565b6040518463ffffffff1660e01b8152600401611dba93929190613360565b602060405180830381865afa158015611dd7573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061072a919061337f565b6040516302abf57960e61b81526453746f726560d81b60048201526000907f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03169063aafd5e40906024015b602060405180830381865afa158015611e6b573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611e8f91906131d5565b905090565b6000888888888888888833604051602001611eb799989796959493929190613398565b60405160208183030381529060405280519060200120905098975050505050505050565b60008181526003602052604081205460ff1615611efa57506001919050565b611f02612452565b6001600160a01b03166390978d1b836040518263ffffffff1660e01b8152600401611f2f91815260200190565b602060405180830381865afa158015611f4c573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611f709190613202565b600092835260036020526040909220805460ff191692151592831790555060ff1690565b6001600160a01b03811660009081526002602052604081205460ff1615611fbd57506001919050565b611fc56124b7565b604051631d1d5b3960e11b81526001600160a01b0384811660048301529190911690633a3ab67290602401602060405180830381865afa15801561200d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906120319190613202565b6001600160a01b0383166000908152600260205260409020805460ff1916911515919091179055612060611dfb565b604051635b97aadd60e01b81526001600160a01b0384811660048301529190911690635b97aadd90602401602060405180830381865afa1580156120a8573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906120cc919061321d565b516001600160a01b0390921660009081526002602052604090206001810192909255505460ff1690565b6040805160808101825260008082526020808301829052828401829052606083018290528482526004905291909120600101546001600160a01b031680612162575050604080516080810182526000808252602082018190529181018290526060810191909152919050565b60405163a6b011a760e01b8152600481018490526001600160a01b0382169063a6b011a790602401608060405180830381865afa1580156121a7573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061072d9190613400565b6040516001600160a01b0380851660248301528316604482015260648101829052611d729085906323b872dd60e01b90608401611c35565b600080546001600160a01b03838116610100818102610100600160a81b0319851617855560405193049190911692909183917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a35050565b60008181526004602052604081205462010000900460ff1661228057506001919050565b6000828152600460205260409020600101546001600160a01b0316806122a95750600192915050565b604051636b915d9160e01b8152600481018490523360248201526001600160a01b03821690636b915d9190604401602060405180830381865afa1580156122f4573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061072d9190613202565b61232183612674565b6001600160a01b031663216666a4838361233a8761251c565b6040518463ffffffff1660e01b815260040161235893929190613360565b600060405180830381600087803b15801561237257600080fd5b505af1158015612386573d6000803e3d6000fd5b50505050505050565b600081815260046020526040902060078101546001909101546001600160a01b039182169116811561241657604051633512293b60e21b8152600481018490526001600160a01b0383169063d448a4ec90602401600060405180830381600087803b1580156123fd57600080fd5b505af1158015612411573d6000803e3d6000fd5b505050505b6001600160a01b03811615611c6c57604051633512293b60e21b8152600481018490526001600160a01b0382169063d448a4ec90602401612358565b6040516302abf57960e61b8152721259195b9d1a599a595c95da1a5d195b1a5cdd606a1b60048201526000907f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03169063aafd5e4090602401611e4e565b6040516302abf57960e61b81527210dbdb1b185d195c985b15da1a5d195b1a5cdd606a1b60048201526000907f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03169063aafd5e4090602401611e4e565b606061132761255e604051806020016040528060008152506040518060400160405280600b81526020016a185cdcd95c9d1a5bdb925960aa1b815250856126bc565b604080518082018252600a81526937b7a0b9b9b2b93a32b960b11b6020808301919091526000878152600490915291909120600201546001600160a01b0316612702565b60006125f7826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b031661271d9092919063ffffffff16565b805190915015611c6c57808060200190518101906126159190613202565b611c6c5760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b60648201526084016107aa565b60008181526004602052604081205460ff16156126ab576000828152600460205260409020600101546001600160a01b0316611327565b50506001546001600160a01b031690565b606060006126ca858561272c565b905084816126d78561276e565b6040516020016126e99392919061347c565b6040516020818303038152906040529150509392505050565b60606000612710858561272c565b905084816126d7856127af565b606061072a8484600085612806565b81516060901561275d578160405160200161274791906134bf565b6040516020818303038152906040529050611327565b8160405160200161274791906134f3565b606061277d608083901c612937565b61278683612937565b6040805160208101939093528201526060015b6040516020818303038152906040529050919050565b60606127c76001600160801b03602084901c16612937565b6127e28360601b6bffffffffffffffffffffffff1916612937565b6040516020016127999291909182526001600160c01b031916602082015260280190565b6060824710156128675760405162461bcd60e51b815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f6044820152651c8818d85b1b60d21b60648201526084016107aa565b6001600160a01b0385163b6128be5760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e747261637400000060448201526064016107aa565b600080866001600160a01b031685876040516128da9190613518565b60006040518083038185875af1925050503d8060008114612917576040519150601f19603f3d011682016040523d82523d6000602084013e61291c565b606091505b509150915061292c828286612ad0565b979650505050505050565b6000808260001c9050806001600160801b03169050806801000000000000000002811777ffffffffffffffff0000000000000000ffffffffffffffff169050806401000000000281177bffffffff00000000ffffffff00000000ffffffff00000000ffffffff16905080620100000281177dffff0000ffff0000ffff0000ffff0000ffff0000ffff0000ffff0000ffff169050806101000281177eff00ff00ff00ff00ff00ff00ff00ff00ff00ff00ff00ff00ff00ff00ff00ff1690508060100281177f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f16905060006008827f08080808080808080808080808080808080808080808080808080808080808081681612a5257612a526130d3565b0460047f040404040404040404040404040404040404040404040404040404040404040484160460027f020202020202020202020202020202020202020202020202020202020202020285160417166027029091017f3030303030303030303030303030303030303030303030303030303030303030019392505050565b60608315612adf57508161072d565b825115612aef5782518084602001fd5b8160405162461bcd60e51b81526004016107aa919061300a565b6001600160a01b0381168114610af457600080fd5b8035612b2981612b09565b919050565b600080600060408486031215612b4357600080fd5b83356001600160401b0380821115612b5a57600080fd5b818601915086601f830112612b6e57600080fd5b813581811115612b7d57600080fd5b876020828501011115612b8f57600080fd5b60209283019550935050840135612ba581612b09565b809150509250925092565b600060208284031215612bc257600080fd5b5035919050565b600060208284031215612bdb57600080fd5b813561072d81612b09565b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f191681016001600160401b0381118282101715612c2457612c24612be6565b604052919050565b60006001600160401b03821115612c4557612c45612be6565b50601f01601f191660200190565b80356001600160401b0381168114612b2957600080fd5b60008060008060008060008060006101208a8c031215612c8957600080fd5b89356001600160401b03811115612c9f57600080fd5b8a01601f81018c13612cb057600080fd5b8035612cc3612cbe82612c2c565b612bfc565b8181528d6020838501011115612cd857600080fd5b81602084016020830137600060208383010152809b50505050612cfd60208b01612b1e565b9750612d0b60408b01612b1e565b9650612d1960608b01612b1e565b9550612d2760808b01612c53565b9450612d3560a08b01612b1e565b935060c08a0135925060e08a013591506101008a013590509295985092959850929598565b600080600060608486031215612d6f57600080fd5b8335612d7a81612b09565b9250612d8860208501612c53565b9150604084013590509250925092565b8051151582526020808201511515908301526040808201511515908301526060808201516001600160a01b039081169184019190915260809182015116910152565b600061020082019050612dee828451612d98565b60208301516001600160a01b0390811660a084015260408401516001600160401b031660c08401526060840151151560e084015260808401519081166101008085019190915260a08501519150610120612e52818601846001600160401b03169052565b60c08601519250610140612e698187018515159052565b60e08701516101608781019190915292870151610180870152908601516101a08601528501516001600160a01b039081166101c0860152908501519081166101e08501529050611989565b60008060408385031215612ec757600080fd5b823591506020830135612ed981612b09565b809150509250929050565b60008060208385031215612ef757600080fd5b82356001600160401b0380821115612f0e57600080fd5b818501915085601f830112612f2257600080fd5b813581811115612f3157600080fd5b8660208260051b8501011115612f4657600080fd5b60209290920196919550909350505050565b60005b83811015612f73578181015183820152602001612f5b565b50506000910152565b60008151808452612f94816020860160208601612f58565b601f01601f19169290920160200192915050565b6000602080830181845280855180835260408601915060408160051b870101925083870160005b82811015612ffd57603f19888603018452612feb858351612f7c565b94509285019290850190600101612fcf565b5092979650505050505050565b60208152600061072d6020830184612f7c565b610200810161302c828f612d98565b6001600160a01b039c8d1660a08301526001600160401b039b8c1660c083015299151560e0820152978b16610100890152959098166101208701529215156101408601526101608501919091526101808401526101a08301529284166101c0820152919092166101e090910152919050565b634e487b7160e01b600052601160045260246000fd5b60008160001904831182151516156130ce576130ce61309e565b500290565b634e487b7160e01b600052601260045260246000fd5b60008261310657634e487b7160e01b600052601260045260246000fd5b500490565b818103818111156113275761132761309e565b6001600160401b038181168382160190808211156119895761198961309e565b60006101008a83528060208401526131588184018b612f7c565b6001600160a01b03998a1660408501529789166060840152505093861660808501526001600160401b039290921660a084015290931660c082015260e0019190915292915050565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b6000602082840312156131e757600080fd5b815161072d81612b09565b80518015158114612b2957600080fd5b60006020828403121561321457600080fd5b61072d826131f2565b60006020828403121561322f57600080fd5b604051602081018181106001600160401b038211171561325157613251612be6565b6040529151825250919050565b634e487b7160e01b600052603260045260246000fd5b6000808335601e1984360301811261328b57600080fd5b8301803591506001600160401b038211156132a557600080fd5b6020019150368190038213156132ba57600080fd5b9250929050565b8183823760009101908152919050565b6000602082840312156132e357600080fd5b81516001600160401b038111156132f957600080fd5b8201601f8101841361330a57600080fd5b8051613318612cbe82612c2c565b81815285602083850101111561332d57600080fd5b61333e826020830160208601612f58565b95945050505050565b6000600182016133595761335961309e565b5060010190565b83815282602082015260606040820152600061333e6060830184612f7c565b60006020828403121561339157600080fd5b5051919050565b60006101208083526133ac8184018d612f7c565b602084019b909b52505060408101979097526001600160401b039590951660608701526001600160a01b03938416608087015291831660a0860152821660c085015260e08401521661010090910152919050565b60006080828403121561341257600080fd5b604051608081018181106001600160401b038211171561343457613434612be6565b604052613440836131f2565b815261344e602084016131f2565b602082015261345f604084016131f2565b6040820152613470606084016131f2565b60608201529392505050565b6000845161348e818460208901612f58565b8451908301906134a2818360208901612f58565b84519101906134b5818360208801612f58565b0195945050505050565b600b60fa1b8152600082516134db816001850160208701612f58565b601d60f91b6001939091019283015250600201919050565b60008251613505818460208701612f58565b601d60f91b920191825250600101919050565b6000825161352a818460208701612f58565b919091019291505056fea2646970667358221220e69a97f9c013f92aee695edbe9683928f9b988d15a5ef80fcb6919b8a896228564736f6c63430008100033",
    "sourceMap": "1550:25031:51:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2078:35;;;;;;;;;160:25:69;;;148:2;133:18;2078:35:51;;;;;;;;2356:29;;;;;-1:-1:-1;;;;;2356:29:51;;;;;;-1:-1:-1;;;;;493:32:69;;;475:51;;463:2;448:18;2356:29:51;313:219:69;18786:103:51;18867:15;18786:103;;4950:569;;;;;;:::i;:::-;;:::i;13477:2449::-;;;;;;:::i;:::-;;:::i;:::-;;19674:200;;;;;;:::i;:::-;;:::i;1916:49::-;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;2429:14:69;;2422:22;2404:41;;2392:2;2377:18;1916:49:51;2264:187:69;7830:3495:51;;;;;;:::i;:::-;;:::i;1847:63::-;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4708:14:69;;4701:22;4683:41;;4755:2;4740:18;;4733:34;;;;4656:18;1847:63:51;4515:258:69;1668:101:19;;;:::i;3496:622:51:-;;;;;;:::i;:::-;;:::i;17621:131::-;;;;;;:::i;:::-;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;17722:23:51;;;;:10;:23;;;;;;;;;17715:30;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;17715:30:51;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;;;17715:30:51;;;;;;;;;;;;-1:-1:-1;;;17715:30:51;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;17715:30:51;;;;;;;;;;;;;;;;;;-1:-1:-1;17715:30:51;;;;;;;;;-1:-1:-1;17715:30:51;;;;;;;;;-1:-1:-1;17715:30:51;;;;17621:131;;;;;;;;:::i;1036:85:19:-;1082:7;1108:6;;;;-1:-1:-1;;;;;1108:6:19;1036:85;;16160:291:51;;;;;;:::i;:::-;;:::i;11787:1058::-;;;;;;:::i;:::-;;:::i;1814:27::-;;;;;-1:-1:-1;;;;;1814:27:51;;;16922:453;;;;;;:::i;:::-;;:::i;570:638:33:-;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;19178:132:51:-;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;1680:39::-;;;;;2206:58;;-1:-1:-1;;;2206:58:51;;1972:47;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;1972:47:51;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;;;1972:47:51;;;;;;-1:-1:-1;;;1972:47:51;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;2270:43::-;;2309:4;2270:43;;18147:469;;;;;;:::i;:::-;;:::i;1918:198:19:-;;;;;;:::i;:::-;;:::i;2391:29:51:-;;;;;-1:-1:-1;;;2391:29:51;;-1:-1:-1;;;;;2391:29:51;;;;;;-1:-1:-1;;;;;11920:31:69;;;11902:50;;11890:2;11875:18;2391:29:51;11758:200:69;4950:569:51;5041:7;5141:371;5170:5;;5141:371;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;5329:15:51;;5193:8;;-1:-1:-1;5141:371:51;;-1:-1:-1;5141:371:51;;-1:-1:-1;;;;;;;;;5329:15:51;;;;-1:-1:-1;;;;;5362:15:51;5395:40;5362:15;5395:14;:40::i;:::-;-1:-1:-1;;;5496:1:51;5141:11;:371::i;:::-;5122:390;;4950:569;;;;;;:::o;13477:2449::-;1317:19:32;:17;:19::i;:::-;1346:17;2459:5;2445:19;;-1:-1:-1;;2445:19:32;;;2335:136;1346:17;13553:27:51::1;13583:23:::0;;;:10:::1;:23;::::0;;;;13624:18:::1;::::0;::::1;::::0;-1:-1:-1;;;;;13624:18:51::1;13616:69;;;::::0;-1:-1:-1;;;13616:69:51;;12165:2:69;13616:69:51::1;::::0;::::1;12147:21:69::0;12204:2;12184:18;;;12177:30;-1:-1:-1;;;12223:18:69;;;12216:54;12287:18;;13616:69:51::1;;;;;;;;;13743:17;::::0;::::1;::::0;-1:-1:-1;;;13743:17:51;::::1;;;13742:18;13734:56;;;::::0;-1:-1:-1;;;13734:56:51;;12518:2:69;13734:56:51::1;::::0;::::1;12500:21:69::0;12557:2;12537:18;;;12530:30;12596:27;12576:18;;;12569:55;12641:18;;13734:56:51::1;12316:349:69::0;13734:56:51::1;13840:17;::::0;::::1;:24:::0;;-1:-1:-1;;;;13840:24:51::1;-1:-1:-1::0;;;13840:24:51::1;::::0;;13878:18:::1;::::0;::::1;::::0;-1:-1:-1;;;;;13878:18:51::1;13874:2046;;18867:15:::0;13986:24:::1;::::0;::::1;::::0;-1:-1:-1;;;13986:24:51;::::1;-1:-1:-1::0;;;;;13986:24:51::1;:44;;13978:78;;;::::0;-1:-1:-1;;;13978:78:51;;12872:2:69;13978:78:51::1;::::0;::::1;12854:21:69::0;12911:2;12891:18;;;12884:30;-1:-1:-1;;;12930:18:69;;;12923:51;12991:18;;13978:78:51::1;12670:345:69::0;13978:78:51::1;14096:30;::::0;::::1;:37:::0;;-1:-1:-1;;;;14096:37:51;::::1;-1:-1:-1::0;;;14096:37:51::1;::::0;;;14179:18:::1;::::0;::::1;::::0;14199:14:::1;::::0;::::1;::::0;14147:67:::1;::::0;-1:-1:-1;;;;;14147:18:51;;;;14179::::1;::::0;14147:31:::1;:67::i;:::-;14228:46;14256:11;14269:4;14228:27;:46::i;:::-;14324:18;::::0;::::1;::::0;14294:74:::1;::::0;;14324:18:::1;13210:41:69::0;;14324:18:51;13282:2:69;13267:18;;13260:50;14357:10:51::1;13326:18:69::0;;;13319:60;14294:74:51;;-1:-1:-1;;;;;14324:18:51;;::::1;::::0;14311:11;;14294:74:::1;::::0;;;;;13198:2:69;14294:74:51;;::::1;13874:2046;;;14532:20;::::0;::::1;::::0;14554:23:::1;::::0;::::1;::::0;14480:20:::1;::::0;14503:75:::1;::::0;14519:11;;14532:20;-1:-1:-1;;;14554:23:51;::::1;-1:-1:-1::0;;;;;14554:23:51::1;14503:15;:75::i;:::-;14707:49:::0;;14480:98;;-1:-1:-1;14707:49:51::1;::::0;::::1;;;14703:175;;;14758:30;::::0;::::1;:38:::0;;-1:-1:-1;;;;14758:38:51::1;::::0;;14703:175:::1;;;14815:30;::::0;::::1;:63:::0;;-1:-1:-1;;;;14815:63:51::1;2309:4;14848:30:::0;::::1;-1:-1:-1::0;;;14815:63:51::1;;::::0;;14703:175:::1;14893:21;2309:4;14917:13;:30;:72;;14971:18;::::0;::::1;::::0;-1:-1:-1;;;;;14971:18:51::1;14917:72;;;14950:18;::::0;::::1;::::0;-1:-1:-1;;;;;14950:18:51::1;14917:72;14893:96;;15127:17;15189:4;15171:9;:14;;;15148:20;;:37;;;;:::i;:::-;15147:46;;;;:::i;:::-;15127:66;;15207:27;15258:9;15237;:14;;;15254:1;15237:18;;;;:::i;:::-;:30;;;;:::i;:::-;15207:60;;15491:64;15531:11;:9;:11::i;:::-;15491:18;::::0;::::1;::::0;-1:-1:-1;;;;;15491:18:51::1;::::0;15545:9;15491:31:::1;:64::i;:::-;15569:18;::::0;::::1;::::0;:67:::1;::::0;-1:-1:-1;;;;;15569:18:51::1;15601:13:::0;15616:19;15569:31:::1;:67::i;:::-;15656:49:::0;;::::1;::::0;::::1;;;15651:144;;15764:30;::::0;::::1;::::0;15723:72:::1;::::0;15751:11;;-1:-1:-1;;;15764:30:51;::::1;;;15723:27;:72::i;:::-;15866:30;::::0;::::1;::::0;15815:94:::1;::::0;;15860:4:::1;13210:41:69::0;;-1:-1:-1;;;15866:30:51;;::::1;;;13294:14:69::0;13287:22;13282:2;13267:18;;13260:50;15898:10:51::1;13326:18:69::0;;;13319:60;-1:-1:-1;;;;;15815:94:51;::::1;::::0;15832:11;;15815:94:::1;::::0;13198:2:69;13183:18;15815:94:51::1;;;;;;;14385:1535;;;;13874:2046;13543:2383;1384:20:32::0;2658:11;:18;;-1:-1:-1;;2658:18:32;2672:4;2658:18;;;2477:206;1384:20;13477:2449:51;:::o;19674:200::-;-1:-1:-1;;;;;19775:26:51;;19737:7;19775:26;;;:16;:26;;;;;:35;;;19847:20;;19828:15;19775:35;19839:4;19828:15;:::i;:::-;19827:40;;;;:::i;7830:3495::-;8136:19;1317::32;:17;:19::i;:::-;1346:17;2459:5;2445:19;;-1:-1:-1;;2445:19:32;;;2335:136;1346:17;18867:15:51;8229:95:::1;8236:5:::0;8243:4;-1:-1:-1;;;;;8229:95:51;::::1;8255:8:::0;8265;8275:17;8294;8313:10;8229:6:::1;:95::i;:::-;8215:109:::0;-1:-1:-1;;;;;;8343:22:51;::::1;8335:53;;;::::0;-1:-1:-1;;;8335:53:51;;14384:2:69;8335:53:51::1;::::0;::::1;14366:21:69::0;14423:2;14403:18;;;14396:30;-1:-1:-1;;;14442:18:69;;;14435:48;14500:18;;8335:53:51::1;14182:342:69::0;8335:53:51::1;8450:1;8406:23:::0;;;:10:::1;:23;::::0;;;;:32:::1;;::::0;-1:-1:-1;;;;;8406:32:51::1;:46:::0;8398:83:::1;;;::::0;-1:-1:-1;;;8398:83:51;;14731:2:69;8398:83:51::1;::::0;::::1;14713:21:69::0;14770:2;14750:18;;;14743:30;14809:26;14789:18;;;14782:54;14853:18;;8398:83:51::1;14529:348:69::0;8398:83:51::1;8499:39;8527:10;8499:27;:39::i;:::-;8491:74;;;::::0;-1:-1:-1;;;8491:74:51;;15084:2:69;8491:74:51::1;::::0;::::1;15066:21:69::0;15123:2;15103:18;;;15096:30;-1:-1:-1;;;15142:18:69;;;15135:52;15204:18;;8491:74:51::1;14882:346:69::0;8491:74:51::1;8583:44;8617:8;8583:25;:44::i;:::-;8575:77;;;::::0;-1:-1:-1;;;8575:77:51;;15435:2:69;8575:77:51::1;::::0;::::1;15417:21:69::0;15474:2;15454:18;;;15447:30;-1:-1:-1;;;15493:18:69;;;15486:50;15553:18;;8575:77:51::1;15233:344:69::0;8575:77:51::1;8678:33;8701:8;8678:14;:33::i;:::-;8670:4;:41;;8662:73;;;::::0;-1:-1:-1;;;8662:73:51;;15784:2:69;8662:73:51::1;::::0;::::1;15766:21:69::0;15823:2;15803:18;;;15796:30;-1:-1:-1;;;15842:18:69;;;15835:49;15901:18;;8662:73:51::1;15582:343:69::0;8662:73:51::1;8772:871;::::0;;8823:422;;;;;-1:-1:-1;8772:871:51::1;::::0;::::1;8823:422:::0;;;;;;;;;;;;;;;9220:10:::1;8823:422:::0;;;;-1:-1:-1;;;;;8823:422:51;;::::1;::::0;;;;8772:871;;;;;::::1;8823:422;8772:871:::0;::::1;::::0;-1:-1:-1;;;;;8772:871:51;::::1;::::0;;;;;;;;;;;;;::::1;::::0;;;;8823:422:::1;8772:871:::0;;9617:15:::1;9624:8:::0;9583:4;9617:15:::1;:::i;:::-;-1:-1:-1::0;;;;;8772:871:51::1;;;;;9549:5;8772:871;;;;;;9417:8;8772:871;;;;9451:10;8772:871;;;;9481:4;8772:871;;;;9344:17;-1:-1:-1::0;;;;;8772:871:51::1;;;;;9309:1;-1:-1:-1::0;;;;;8772:871:51::1;;;::::0;8746:10:::1;:23;8757:11;8746:23;;;;;;;;;;;:897;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1::0;;;;;8746:897:51::1;;;;;-1:-1:-1::0;;;;;8746:897:51::1;;;;;;;;;;;;;;;;;;;-1:-1:-1::0;;;;;8746:897:51::1;;;;;-1:-1:-1::0;;;;;8746:897:51::1;;;;;;;;;;;;;;;;;;;;;-1:-1:-1::0;;;;;8746:897:51::1;;;;;-1:-1:-1::0;;;;;8746:897:51::1;;;;;;;;;;;;;;;;;;;-1:-1:-1::0;;;;;8746:897:51::1;;;;;-1:-1:-1::0;;;;;8746:897:51::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1::0;;;;;8746:897:51::1;;;;;-1:-1:-1::0;;;;;8746:897:51::1;;;;;;;;;;;;;;;;;;;-1:-1:-1::0;;;;;8746:897:51::1;;;;;-1:-1:-1::0;;;;;8746:897:51::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1::0;;;;;8746:897:51::1;;;;;-1:-1:-1::0;;;;;8746:897:51::1;;;;;;;;;;;;;;;;;;;-1:-1:-1::0;;;;;8746:897:51::1;;;;;-1:-1:-1::0;;;;;8746:897:51::1;;;;;;;;;9668:65;9736:32;9756:11;9736:19;:32::i;:::-;9791:30:::0;;9668:100;;-1:-1:-1;9790:31:51::1;9782:65;;;::::0;-1:-1:-1;;;9782:65:51;;16317:2:69;9782:65:51::1;::::0;::::1;16299:21:69::0;16356:2;16336:18;;;16329:30;-1:-1:-1;;;16375:18:69;;;16368:51;16436:18;;9782:65:51::1;16115:345:69::0;9782:65:51::1;9901:44;9948:23:::0;;;:10:::1;:23;::::0;;;;;;;;10359:45;;::::1;::::0;10618:29;;::::1;::::0;10852:33:::1;::::0;;::::1;::::0;10011:888;;-1:-1:-1;;10011:888:51;;;::::1;;::::0;;;::::1;-1:-1:-1::0;;10011:888:51;;::::1;::::0;::::1;;::::0;;;::::1;::::0;;;::::1;-1:-1:-1::0;;10011:888:51::1;::::0;::::1;;;::::0;;10920:58:::1;-1:-1:-1::0;;;;;10920:25:51;::::1;10946:10;10966:4;10973::::0;10920:25:::1;:58::i;:::-;11298:10;11121:8;-1:-1:-1::0;;;;;11028:290:51::1;11055:11;11028:290;11080:8;11102:5;11143:17;11174;11205:10;11236:8;11229:4;:15;;;;:::i;:::-;11258:8;11280:4;11028:290;;;;;;;;;;;;;:::i;:::-;;;;;;;;8157:3168;1384:20:32::0;2658:11;:18;;-1:-1:-1;;2658:18:32;2672:4;2658:18;;;2477:206;1384:20;7830:3495:51;;;;;;;;;;;:::o;1668:101:19:-;1082:7;1108:6;-1:-1:-1;;;;;1108:6:19;;;;;719:10:25;1248:23:19;1240:68;;;;-1:-1:-1;;;1240:68:19;;;;;;;:::i;:::-;1732:30:::1;1759:1;1732:18;:30::i;:::-;1668:101::o:0;3496:622:51:-;1082:7:19;1108:6;-1:-1:-1;;;;;1108:6:19;;;;;719:10:25;1248:23:19;1240:68;;;;-1:-1:-1;;;1240:68:19;;;;;;;:::i;:::-;3695:4:51::1;3670:21;:29;;3662:70;;;::::0;-1:-1:-1;;;3662:70:51;;17886:2:69;3662:70:51::1;::::0;::::1;17868:21:69::0;17925:2;17905:18;;;17898:30;17964;17944:18;;;17937:58;18012:18;;3662:70:51::1;17684:352:69::0;3662:70:51::1;3774:1;3750:21;:25;3742:65;;;::::0;-1:-1:-1;;;3742:65:51;;18243:2:69;3742:65:51::1;::::0;::::1;18225:21:69::0;18282:2;18262:18;;;18255:30;18321:29;18301:18;;;18294:57;18368:18;;3742:65:51::1;18041:351:69::0;3742:65:51::1;3817:20;:44:::0;;;3871:15:::1;:34:::0;;-1:-1:-1;;;;;3915:34:51;::::1;-1:-1:-1::0;;;3915:34:51::1;-1:-1:-1::0;;;;;;3915:34:51;;;-1:-1:-1;;;;;3871:34:51;::::1;3915::::0;::::1;::::0;;3959:59:::1;-1:-1:-1::0;;;3889:16:51;3959:13:::1;:59::i;:::-;4034:77;::::0;;-1:-1:-1;;;;;18631:32:69;;18613:51;;-1:-1:-1;;;;;18700:31:69;;18695:2;18680:18;;18673:59;18748:18;;;18741:34;;;4034:77:51::1;::::0;18601:2:69;18586:18;4034:77:51::1;;;;;;;3496:622:::0;;;:::o;16160:291::-;16236:4;16335:23;;;:10;:23;;;;;:31;;;-1:-1:-1;;;16335:31:51;;;;16330:66;;16368:28;16384:11;16368:15;:28::i;:::-;16413:31;16432:11;16413:18;:31::i;:::-;16406:38;16160:291;-1:-1:-1;;16160:291:51:o;11787:1058::-;1317:19:32;:17;:19::i;:::-;1346:17;2459:5;2445:19;;-1:-1:-1;;2445:19:32;;;2335:136;1346:17;-1:-1:-1;;;;;11892:22:51;::::1;11884:54;;;::::0;-1:-1:-1;;;11884:54:51;;18988:2:69;11884:54:51::1;::::0;::::1;18970:21:69::0;19027:2;19007:18;;;19000:30;-1:-1:-1;;;19046:18:69;;;19039:49;19105:18;;11884:54:51::1;18786:343:69::0;11884:54:51::1;11948:27;11978:23:::0;;;:10:::1;:23;::::0;;;;12019:18:::1;::::0;::::1;::::0;-1:-1:-1;;;;;12019:18:51::1;12011:69;;;::::0;-1:-1:-1;;;12011:69:51;;12165:2:69;12011:69:51::1;::::0;::::1;12147:21:69::0;12204:2;12184:18;;;12177:30;-1:-1:-1;;;12223:18:69;;;12216:54;12287:18;;12011:69:51::1;11963:348:69::0;12011:69:51::1;12098:18;::::0;::::1;::::0;-1:-1:-1;;;;;12098:18:51::1;:32:::0;12090:71:::1;;;::::0;-1:-1:-1;;;12090:71:51;;19336:2:69;12090:71:51::1;::::0;::::1;19318:21:69::0;19375:2;19355:18;;;19348:30;19414:28;19394:18;;;19387:56;19460:18;;12090:71:51::1;19134:350:69::0;12090:71:51::1;18867:15:::0;12179:24:::1;::::0;::::1;::::0;-1:-1:-1;;;12179:24:51;::::1;-1:-1:-1::0;;;;;12179:24:51::1;:43;12171:76;;;::::0;-1:-1:-1;;;12171:76:51;;19691:2:69;12171:76:51::1;::::0;::::1;19673:21:69::0;19730:2;19710:18;;;19703:30;-1:-1:-1;;;19749:18:69;;;19742:50;19809:18;;12171:76:51::1;19489:344:69::0;12171:76:51::1;12265:30;12283:11;12265:17;:30::i;:::-;12257:62;;;::::0;-1:-1:-1;;;12257:62:51;;20040:2:69;12257:62:51::1;::::0;::::1;20022:21:69::0;20079:2;20059:18;;;20052:30;-1:-1:-1;;;20098:18:69;;;20091:49;20157:18;;12257:62:51::1;19838:343:69::0;12257:62:51::1;12330:18;::::0;::::1;:29:::0;;-1:-1:-1;;;;;;12330:29:51::1;-1:-1:-1::0;;;;;12330:29:51;;::::1;::::0;;;::::1;::::0;;;12433:14:::1;::::0;::::1;::::0;12370:18:::1;::::0;::::1;::::0;:78:::1;::::0;:18:::1;::::0;12406:10:::1;::::0;12426:4:::1;::::0;12370:35:::1;:78::i;:::-;12492:20;::::0;::::1;::::0;12514:23:::1;::::0;::::1;::::0;12459:79:::1;::::0;12479:11;;-1:-1:-1;;;12514:23:51;::::1;-1:-1:-1::0;;;;;12514:23:51::1;12459:19;:79::i;:::-;12549:40;12577:11;12549:27;:40::i;:::-;12672:49:::0;;::::1;::::0;::::1;;;12668:102;;;12723:47;12751:11;12764:5;12723:27;:47::i;:::-;12786:52;::::0;-1:-1:-1;;;;;12786:52:51;::::1;::::0;12817:10:::1;::::0;12804:11;;12786:52:::1;::::0;;;::::1;11874:971;1384:20:32::0;2658:11;:18;;-1:-1:-1;;2658:18:32;2672:4;2658:18;;;2477:206;1384:20;11787:1058:51;;:::o;16922:453::-;17015:56;;-1:-1:-1;;;17015:56:51;;-1:-1:-1;;;17015:56:51;;;160:25:69;17015:6:51;-1:-1:-1;;;;;17015:31:51;;;;133:18:69;;17015:56:51;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;17000:12;:71;;-1:-1:-1;;;;;;17000:71:51;-1:-1:-1;;;;;17000:71:51;;;;;;;;;;17113:25;:23;:25::i;:::-;-1:-1:-1;;;;;17113:47:51;;17161:10;17113:59;;;;;;;;;;;;;160:25:69;;148:2;133:18;;14:177;17113:59:51;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;17081:29;;;;:17;:29;;;;;:91;;-1:-1:-1;;17081:91:51;;;;;;;;;;17225:25;:23;:25::i;:::-;:49;;-1:-1:-1;;;17225:49:51;;-1:-1:-1;;;;;493:32:69;;;17225:49:51;;;475:51:69;17225:39:51;;;;;;;448:18:69;;17225:49:51;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;17182:26:51;;;;;;:16;:26;;;;;:92;;-1:-1:-1;;17182:92:51;;;;;;;;;;17322:11;:9;:11::i;:::-;:37;;-1:-1:-1;;;17322:37:51;;-1:-1:-1;;;;;493:32:69;;;17322:37:51;;;475:51:69;17322:27:51;;;;;;;448:18:69;;17322:37:51;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:46;-1:-1:-1;;;;;17284:26:51;;;17322:46;17284:26;;;:16;:26;;;;;:35;;:84;-1:-1:-1;16922:453:51:o;570:638:33:-;630:22;686:4;-1:-1:-1;;;;;674:24:33;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;664:34;;713:9;708:494;728:15;;;708:494;;;765:12;;810:4;829;;834:1;829:7;;;;;;;:::i;:::-;;;;;;;;;;;;:::i;:::-;802:35;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;764:73;;;;857:7;852:306;;984:2;968:6;:13;:18;964:32;;;988:8;;;964:32;1067:4;1059:6;1055:17;1045:27;;1125:6;1114:28;;;;;;;;;;;;:::i;:::-;1107:36;;-1:-1:-1;;;1107:36:33;;;;;;;;:::i;852:306::-;1185:6;1172:7;1180:1;1172:10;;;;;;;;:::i;:::-;;;;;;:19;;;;750:452;;745:3;;;;;:::i;:::-;;;;708:494;;;;570:638;;;;:::o;19178:132:51:-;19244:12;19275:28;19291:11;19275:15;:28::i;18147:469::-;18217:4;18262:23;;;:10;:23;;;;;;;;18233:52;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;18233:52:51;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;;;18233:52:51;;;;;;;;;;;;-1:-1:-1;;;18233:52:51;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;18233:52:51;;;;;;;;;;;;;;;;;;-1:-1:-1;18233:52:51;;;;;;;;;-1:-1:-1;18233:52:51;;;;;;;;;-1:-1:-1;18233:52:51;;;;;18366:32;;;;:85;;-1:-1:-1;18402:35:51;;:49;;;18366:85;18362:103;;;-1:-1:-1;18460:5:51;;18147:469;-1:-1:-1;;18147:469:51:o;18362:103::-;18483:9;:17;;;18475:51;;;;-1:-1:-1;;;18475:51:51;;23420:2:69;18475:51:51;;;23402:21:69;23459:2;23439:18;;;23432:30;-1:-1:-1;;;23478:18:69;;;23471:51;23539:18;;18475:51:51;23218:345:69;18475:51:51;18579:30;;;;18147:469;-1:-1:-1;;18147:469:51:o;1918:198:19:-;1082:7;1108:6;-1:-1:-1;;;;;1108:6:19;;;;;719:10:25;1248:23:19;1240:68;;;;-1:-1:-1;;;1240:68:19;;;;;;;:::i;:::-;-1:-1:-1;;;;;2006:22:19;::::1;1998:73;;;::::0;-1:-1:-1;;;1998:73:19;;23770:2:69;1998:73:19::1;::::0;::::1;23752:21:69::0;23809:2;23789:18;;;23782:30;23848:34;23828:18;;;23821:62;-1:-1:-1;;;23899:18:69;;;23892:36;23945:19;;1998:73:19::1;23568:402:69::0;1998:73:19::1;2081:28;2100:8;2081:18;:28::i;2143:186:32:-:0;2275:11;;;;2267:55;;;;-1:-1:-1;;;2267:55:32;;24177:2:69;2267:55:32;;;24159:21:69;24216:2;24196:18;;;24189:30;24255:33;24235:18;;;24228:61;24306:18;;2267:55:32;23975:355:69;701:205:23;840:58;;-1:-1:-1;;;;;24527:32:69;;840:58:23;;;24509:51:69;24576:18;;;24569:34;;;813:86:23;;833:5;;-1:-1:-1;;;863:23:23;24482:18:69;;840:58:23;;;;-1:-1:-1;;840:58:23;;;;;;;;;;;;;;-1:-1:-1;;;;;840:58:23;-1:-1:-1;;;;;;840:58:23;;;;;;;;;;813:19;:86::i;:::-;701:205;;;:::o;25566:492:51:-;25668:10;25681:23;;;:10;:23;;;;;:41;;;;23119:67;;;;;-1:-1:-1;;;;;25681:41:51;;;;23119:67;25793:16;;25789:141;;25823:107;;-1:-1:-1;;;25823:107:51;;;;;24782:25:69;;;24850:14;;24843:22;24823:18;;;24816:50;-1:-1:-1;;;;;25823:74:51;;;;;24755:18:69;;25823:107:51;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;25789:141;-1:-1:-1;;;;;25944:16:51;;;25940:111;;25962:89;;-1:-1:-1;;;25962:89:51;;;;;24782:25:69;;;24850:14;;24843:22;24823:18;;;24816:50;-1:-1:-1;;;;;25962:56:51;;;;;24755:18:69;;25962:89:51;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;25940:111;25658:400;;25566:492;;:::o;22702:245::-;22835:6;22860:23;22871:11;22860:10;:23::i;:::-;-1:-1:-1;;;;;22860:32:51;;22893:10;22905:4;22911:28;22927:11;22911:15;:28::i;:::-;22860:80;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;21700:155::-;21792:55;;-1:-1:-1;;;21792:55:51;;-1:-1:-1;;;21792:55:51;;;160:25:69;21744:14:51;;21792:6;-1:-1:-1;;;;;21792:31:51;;;;133:18:69;;21792:55:51;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;21770:78;;21700:155;:::o;19988:660::-;20253:7;20350:5;20377:4;20403;20429:8;20459;20489:17;20528;20567:10;20599;20318:309;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;20291:350;;;;;;20272:369;;19988:660;;;;;;;;;;:::o;24546:291::-;24621:4;24641:29;;;:17;:29;;;;;;;;24637:46;;;-1:-1:-1;24679:4:51;;24546:291;-1:-1:-1;24546:291:51:o;24637:46::-;24725:25;:23;:25::i;:::-;-1:-1:-1;;;;;24725:47:51;;24773:10;24725:59;;;;;;;;;;;;;160:25:69;;148:2;133:18;;14:177;24725:59:51;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;24693:29;;;;:17;:29;;;;;;:91;;-1:-1:-1;;24693:91:51;;;;;;;;;-1:-1:-1;24693:91:51;24801:29;;24546:291::o;25056:404::-;-1:-1:-1;;;;;25147:26:51;;25127:4;25147:26;;;:16;:26;;;;;:40;;;25143:57;;;-1:-1:-1;25196:4:51;;25056:404;-1:-1:-1;25056:404:51:o;25143:57::-;25253:25;:23;:25::i;:::-;:49;;-1:-1:-1;;;25253:49:51;;-1:-1:-1;;;;;493:32:69;;;25253:49:51;;;475:51:69;25253:39:51;;;;;;;448:18:69;;25253:49:51;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;25210:26:51;;;;;;:16;:26;;;;;:92;;-1:-1:-1;;25210:92:51;;;;;;;;;;25350:11;:9;:11::i;:::-;:37;;-1:-1:-1;;;25350:37:51;;-1:-1:-1;;;;;493:32:69;;;25350:37:51;;;475:51:69;25350:27:51;;;;;;;448:18:69;;25350:37:51;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:46;-1:-1:-1;;;;;25312:26:51;;;25350:46;25312:26;;;:16;:26;;;;;:35;;;:84;;;;-1:-1:-1;25413:40:51;;;;25056:404::o;23342:::-;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23119:23:51;;;:10;:23;;;;;;:67;;;-1:-1:-1;;;;;23119:67:51;;23561:99;;-1:-1:-1;;23590:70:51;;;;;;;;-1:-1:-1;23590:70:51;;;;;;;;;;;;;;;;;;;;;;;23342:404;-1:-1:-1;23342:404:51:o;23561:99::-;23677:62;;-1:-1:-1;;;23677:62:51;;;;;160:25:69;;;-1:-1:-1;;;;;23677:49:51;;;;;133:18:69;;23677:62:51;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;912:241:23:-;1077:68;;-1:-1:-1;;;;;27336:15:69;;;1077:68:23;;;27318:34:69;27388:15;;27368:18;;;27361:43;27420:18;;;27413:34;;;1050:96:23;;1070:5;;-1:-1:-1;;;1100:27:23;27253:18:69;;1077:68:23;27078:375:69;2270:187:19;2343:16;2362:6;;-1:-1:-1;;;;;2378:17:19;;;2362:6;2378:17;;;-1:-1:-1;;;;;;2378:17:19;;;;;2410:40;;2362:6;;;;;;;2378:17;;2362:6;;2410:40;;;2333:124;2270:187;:::o;23948:401:51:-;24019:4;24040:23;;;:10;:23;;;;;:67;;;;;;24035:85;;-1:-1:-1;24116:4:51;;23948:401;-1:-1:-1;23948:401:51:o;24035:85::-;24130:10;24143:23;;;:10;:23;;;;;:67;;;-1:-1:-1;;;;;24143:67:51;;24220:33;;-1:-1:-1;24249:4:51;;23948:401;-1:-1:-1;;23948:401:51:o;24220:33::-;24270:72;;-1:-1:-1;;;24270:72:51;;;;;27632:25:69;;;24331:10:51;27673:18:69;;;27666:60;-1:-1:-1;;;;;24270:47:51;;;;;27605:18:69;;24270:72:51;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;22384:224::-;22517:23;22528:11;22517:10;:23::i;:::-;-1:-1:-1;;;;;22517:36:51;;22554:10;22566:4;22572:28;22588:11;22572:15;:28::i;:::-;22517:84;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;22384:224;;;:::o;26164:415::-;26241:10;26254:23;;;:10;:23;;;;;:41;;;;23119:67;;;;;-1:-1:-1;;;;;26254:41:51;;;;23119:67;26366:16;;26362:109;;26384:87;;-1:-1:-1;;;26384:87:51;;;;;160:25:69;;;-1:-1:-1;;;;;26384:74:51;;;;;133:18:69;;26384:87:51;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;26362:109;-1:-1:-1;;;;;26485:16:51;;;26481:91;;26503:69;;-1:-1:-1;;;26503:69:51;;;;;160:25:69;;;-1:-1:-1;;;;;26503:56:51;;;;;133:18:69;;26503:69:51;14:177:69;21425:211:51;21559:69;;-1:-1:-1;;;21559:69:51;;-1:-1:-1;;;21559:69:51;;;160:25:69;21483:28:51;;21559:6;-1:-1:-1;;;;;21559:31:51;;;;133:18:69;;21559:69:51;14:177:69;21155:187:51;21265:69;;-1:-1:-1;;;21265:69:51;;-1:-1:-1;;;21265:69:51;;;160:25:69;21213:16:51;;21265:6;-1:-1:-1;;;;;21265:31:51;;;;133:18:69;;21265:69:51;14:177:69;20744:333:51;20813:12;20856:214;20909:67;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;20909:67:51;;;20964:11;20909:35;:67::i;:::-;20856:214;;;;;;;;;;;-1:-1:-1;;;20856:214:51;;;;;;;;-1:-1:-1;21024:23:51;;;:10;:23;;;;;;;:32;;;-1:-1:-1;;;;;21024:32:51;20856:35;:214::i;3207:706:23:-;3626:23;3652:69;3680:4;3652:69;;;;;;;;;;;;;;;;;3660:5;-1:-1:-1;;;;;3652:27:23;;;:69;;;;;:::i;:::-;3735:17;;3626:95;;-1:-1:-1;3735:21:23;3731:176;;3830:10;3819:30;;;;;;;;;;;;:::i;:::-;3811:85;;;;-1:-1:-1;;;3811:85:23;;27939:2:69;3811:85:23;;;27921:21:69;27978:2;27958:18;;;27951:30;28017:34;27997:18;;;27990:62;-1:-1:-1;;;28068:18:69;;;28061:40;28118:19;;3811:85:23;27737:406:69;21969:326:51;22033:24;22073:23;;;:10;:23;;;;;:79;;;22069:164;;;23093:7;23119:23;;;:10;:23;;;;;:67;;;-1:-1:-1;;;;;23119:67:51;22198:34;23018:175;22069:164;-1:-1:-1;;22275:12:51;;-1:-1:-1;;;;;22275:12:51;;21969:326::o;4121:330:29:-;4273:12;4297:19;4319:42;4335:20;4357:3;4319:15;:42::i;:::-;4297:64;;4395:20;4417:6;4425:18;4437:5;4425:11;:18::i;:::-;4378:66;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;4371:73;;;4121:330;;;;;:::o;5184:337::-;5336:12;5360:19;5382:42;5398:20;5420:3;5382:15;:42::i;:::-;5360:64;;5458:20;5480:6;5488:25;5507:5;5488:18;:25::i;3861:223:24:-;3994:12;4025:52;4047:6;4055:4;4061:1;4064:12;4025:21;:52::i;6928:295:29:-;7057:27;;7029:12;;7057:31;7053:164;;7133:3;7111:31;;;;;;;;:::i;:::-;;;;;;;;;;;;;7104:38;;;;7053:164;7197:3;7180:26;;;;;;;;:::i;2586:182::-;2647:12;2695:35;2726:3;2715:7;:14;;2695:19;:35::i;:::-;2732:28;2752:7;2732:19;:28::i;:::-;2678:83;;;;;;30050:19:69;;;;30085:12;;30078:28;30122:12;;2678:83:29;;;;;;;;;;;;;2671:90;;2586:182;;;:::o;3145:218::-;3207:12;3267:47;-1:-1:-1;;;;;3287:26:29;;;;;3267:19;:47::i;:::-;3323:31;3351:1;3343:10;;3323:31;;;:19;:31::i;:::-;3250:106;;;;;;;;30300:19:69;;;-1:-1:-1;;;;;;30349:41:69;30344:2;30335:12;;30328:63;30416:2;30407:12;;30145:280;4948:499:24;5113:12;5170:5;5145:21;:30;;5137:81;;;;-1:-1:-1;;;5137:81:24;;30632:2:69;5137:81:24;;;30614:21:69;30671:2;30651:18;;;30644:30;30710:34;30690:18;;;30683:62;-1:-1:-1;;;30761:18:69;;;30754:36;30807:19;;5137:81:24;30430:402:69;5137:81:24;-1:-1:-1;;;;;1465:19:24;;;5228:60;;;;-1:-1:-1;;;5228:60:24;;31039:2:69;5228:60:24;;;31021:21:69;31078:2;31058:18;;;31051:30;31117:31;31097:18;;;31090:59;31166:18;;5228:60:24;30837:353:69;5228:60:24;5300:12;5314:23;5341:6;-1:-1:-1;;;;;5341:11:24;5360:5;5367:4;5341:31;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5299:73;;;;5389:51;5406:7;5415:10;5427:12;5389:16;:51::i;:::-;5382:58;4948:499;-1:-1:-1;;;;;;;4948:499:24:o;897:1306:29:-;965:7;1008:9;1028:7;1020:16;;1008:28;;1088:1;-1:-1:-1;;;;;1088:70:29;1084:74;;1182:1;1186:5;1182:9;1177:1;:15;1196:66;1176:86;1172:90;;1286:1;1290:5;1286:9;1281:1;:15;1300:66;1280:86;1276:90;;1390:1;1394:5;1390:9;1385:1;:15;1404:66;1384:86;1380:90;;1494:1;1498:4;1494:8;1489:1;:14;1507:66;1488:85;1484:89;;1597:1;1601:4;1597:8;1592:1;:14;1610:66;1591:85;1587:89;;1717:9;1804:1;1730;1734:66;1730:70;1729:76;;;;;:::i;:::-;;1906:1;1836:66;1832:70;;1831:76;2008:1;1938:66;1934:70;;1933:76;2037:5;2032:11;2047:4;2031:20;2027:24;;;2054:66;2027:93;;;-1:-1:-1;;;897:1306:29:o;7561:692:24:-;7707:12;7735:7;7731:516;;;-1:-1:-1;7765:10:24;7758:17;;7731:516;7876:17;;:21;7872:365;;8070:10;8064:17;8130:15;8117:10;8113:2;8109:19;8102:44;7872:365;8209:12;8202:20;;-1:-1:-1;;;8202:20:24;;;;;;;;:::i;537:131:69:-;-1:-1:-1;;;;;612:31:69;;602:42;;592:70;;658:1;655;648:12;673:134;741:20;;770:31;741:20;770:31;:::i;:::-;673:134;;;:::o;812:732::-;891:6;899;907;960:2;948:9;939:7;935:23;931:32;928:52;;;976:1;973;966:12;928:52;1016:9;1003:23;-1:-1:-1;;;;;1086:2:69;1078:6;1075:14;1072:34;;;1102:1;1099;1092:12;1072:34;1140:6;1129:9;1125:22;1115:32;;1185:7;1178:4;1174:2;1170:13;1166:27;1156:55;;1207:1;1204;1197:12;1156:55;1247:2;1234:16;1273:2;1265:6;1262:14;1259:34;;;1289:1;1286;1279:12;1259:34;1336:7;1329:4;1320:6;1316:2;1312:15;1308:26;1305:39;1302:59;;;1357:1;1354;1347:12;1302:59;1388:4;1380:13;;;;-1:-1:-1;1412:6:69;-1:-1:-1;;1453:20:69;;1440:34;1483:31;1440:34;1483:31;:::i;:::-;1533:5;1523:15;;;812:732;;;;;:::o;1731:180::-;1790:6;1843:2;1831:9;1822:7;1818:23;1814:32;1811:52;;;1859:1;1856;1849:12;1811:52;-1:-1:-1;1882:23:69;;1731:180;-1:-1:-1;1731:180:69:o;1916:247::-;1975:6;2028:2;2016:9;2007:7;2003:23;1999:32;1996:52;;;2044:1;2041;2034:12;1996:52;2083:9;2070:23;2102:31;2127:5;2102:31;:::i;2456:127::-;2517:10;2512:3;2508:20;2505:1;2498:31;2548:4;2545:1;2538:15;2572:4;2569:1;2562:15;2588:275;2659:2;2653:9;2724:2;2705:13;;-1:-1:-1;;2701:27:69;2689:40;;-1:-1:-1;;;;;2744:34:69;;2780:22;;;2741:62;2738:88;;;2806:18;;:::i;:::-;2842:2;2835:22;2588:275;;-1:-1:-1;2588:275:69:o;2868:186::-;2916:4;-1:-1:-1;;;;;2941:6:69;2938:30;2935:56;;;2971:18;;:::i;:::-;-1:-1:-1;3037:2:69;3016:15;-1:-1:-1;;3012:29:69;3043:4;3008:40;;2868:186::o;3059:171::-;3126:20;;-1:-1:-1;;;;;3175:30:69;;3165:41;;3155:69;;3220:1;3217;3210:12;3235:1275;3390:6;3398;3406;3414;3422;3430;3438;3446;3454;3507:3;3495:9;3486:7;3482:23;3478:33;3475:53;;;3524:1;3521;3514:12;3475:53;3564:9;3551:23;-1:-1:-1;;;;;3589:6:69;3586:30;3583:50;;;3629:1;3626;3619:12;3583:50;3652:22;;3705:4;3697:13;;3693:27;-1:-1:-1;3683:55:69;;3734:1;3731;3724:12;3683:55;3770:2;3757:16;3795:48;3811:31;3839:2;3811:31;:::i;:::-;3795:48;:::i;:::-;3866:2;3859:5;3852:17;3908:7;3901:4;3896:2;3892;3888:11;3884:22;3881:35;3878:55;;;3929:1;3926;3919:12;3878:55;3988:2;3981:4;3977:2;3973:13;3966:4;3959:5;3955:16;3942:49;4034:1;4027:4;4022:2;4015:5;4011:14;4007:25;4000:36;4055:5;4045:15;;;;;4079:40;4113:4;4102:9;4098:20;4079:40;:::i;:::-;4069:50;;4138:38;4172:2;4161:9;4157:18;4138:38;:::i;:::-;4128:48;;4195:38;4229:2;4218:9;4214:18;4195:38;:::i;:::-;4185:48;;4252:38;4285:3;4274:9;4270:19;4252:38;:::i;:::-;4242:48;;4309:39;4343:3;4332:9;4328:19;4309:39;:::i;:::-;4299:49;;4395:3;4384:9;4380:19;4367:33;4357:43;;4447:3;4436:9;4432:19;4419:33;4409:43;;4499:3;4488:9;4484:19;4471:33;4461:43;;3235:1275;;;;;;;;;;;:::o;4778:403::-;4870:6;4878;4886;4939:2;4927:9;4918:7;4914:23;4910:32;4907:52;;;4955:1;4952;4945:12;4907:52;4994:9;4981:23;5013:31;5038:5;5013:31;:::i;:::-;5063:5;-1:-1:-1;5087:37:69;5120:2;5105:18;;5087:37;:::i;:::-;5077:47;;5171:2;5160:9;5156:18;5143:32;5133:42;;4778:403;;;;;:::o;5186:479::-;5291:12;;5284:20;5277:28;5265:41;;5369:4;5358:16;;;5352:23;5345:31;5338:39;5322:14;;;5315:63;5441:4;5430:16;;;5424:23;5417:31;5410:39;5394:14;;;5387:63;5496:4;5485:16;;;5479:23;-1:-1:-1;;;;;5572:21:69;;;5556:14;;;5549:45;;;;5647:4;5636:16;;;5630:23;5626:32;5610:14;;5603:56;5186:479::o;5777:1560::-;5925:4;5967:3;5956:9;5952:19;5944:27;;5980:69;6039:9;6030:6;6024:13;5980:69;:::i;:::-;6096:4;6084:17;;6078:24;-1:-1:-1;;;;;270:31:69;;;6167:4;6152:20;;258:44;6222:4;6210:17;;6204:24;-1:-1:-1;;;;;5735:30:69;6286:4;6271:20;;5723:43;6341:4;6329:17;;6323:24;2238:13;2231:21;6403:4;6388:20;;2219:34;6458:4;6446:17;;6440:24;270:31;;;6483:6;6541:18;;;258:44;;;;6609:4;6601:6;6597:17;6591:24;6569:46;;6634:6;6649:53;6698:2;6687:9;6683:18;6667:14;-1:-1:-1;;;;;5735:30:69;5723:43;;5670:102;6649:53;6751:4;6743:6;6739:17;6733:24;6711:46;;6776:6;6791:51;6838:2;6827:9;6823:18;6807:14;2238:13;2231:21;2219:34;;2168:91;6791:51;6879:4;6867:17;;6861:24;6904:6;6926:18;;;6919:30;;;;6995:15;;;6989:22;6980:6;6965:22;;6958:54;7058:15;;;7052:22;7043:6;7028:22;;7021:54;7112:15;;7106:22;-1:-1:-1;;;;;270:31:69;;;7195:6;7180:22;;258:44;7240:15;;;7234:22;270:31;;;7323:6;7308:22;;258:44;7234:22;-1:-1:-1;7265:66:69;196:112;7550:315;7618:6;7626;7679:2;7667:9;7658:7;7654:23;7650:32;7647:52;;;7695:1;7692;7685:12;7647:52;7731:9;7718:23;7708:33;;7791:2;7780:9;7776:18;7763:32;7804:31;7829:5;7804:31;:::i;:::-;7854:5;7844:15;;;7550:315;;;;;:::o;7870:626::-;7967:6;7975;8028:2;8016:9;8007:7;8003:23;7999:32;7996:52;;;8044:1;8041;8034:12;7996:52;8084:9;8071:23;-1:-1:-1;;;;;8154:2:69;8146:6;8143:14;8140:34;;;8170:1;8167;8160:12;8140:34;8208:6;8197:9;8193:22;8183:32;;8253:7;8246:4;8242:2;8238:13;8234:27;8224:55;;8275:1;8272;8265:12;8224:55;8315:2;8302:16;8341:2;8333:6;8330:14;8327:34;;;8357:1;8354;8347:12;8327:34;8410:7;8405:2;8395:6;8392:1;8388:14;8384:2;8380:23;8376:32;8373:45;8370:65;;;8431:1;8428;8421:12;8370:65;8462:2;8454:11;;;;;8484:6;;-1:-1:-1;7870:626:69;;-1:-1:-1;;;;7870:626:69:o;8501:250::-;8586:1;8596:113;8610:6;8607:1;8604:13;8596:113;;;8686:11;;;8680:18;8667:11;;;8660:39;8632:2;8625:10;8596:113;;;-1:-1:-1;;8743:1:69;8725:16;;8718:27;8501:250::o;8756:270::-;8797:3;8835:5;8829:12;8862:6;8857:3;8850:19;8878:76;8947:6;8940:4;8935:3;8931:14;8924:4;8917:5;8913:16;8878:76;:::i;:::-;9008:2;8987:15;-1:-1:-1;;8983:29:69;8974:39;;;;9015:4;8970:50;;8756:270;-1:-1:-1;;8756:270:69:o;9031:800::-;9191:4;9220:2;9260;9249:9;9245:18;9290:2;9279:9;9272:21;9313:6;9348;9342:13;9379:6;9371;9364:22;9417:2;9406:9;9402:18;9395:25;;9479:2;9469:6;9466:1;9462:14;9451:9;9447:30;9443:39;9429:53;;9517:2;9509:6;9505:15;9538:1;9548:254;9562:6;9559:1;9556:13;9548:254;;;9655:2;9651:7;9639:9;9631:6;9627:22;9623:36;9618:3;9611:49;9683:39;9715:6;9706;9700:13;9683:39;:::i;:::-;9673:49;-1:-1:-1;9780:12:69;;;;9745:15;;;;9584:1;9577:9;9548:254;;;-1:-1:-1;9819:6:69;;9031:800;-1:-1:-1;;;;;;;9031:800:69:o;9836:217::-;9983:2;9972:9;9965:21;9946:4;10003:44;10043:2;10032:9;10028:18;10020:6;10003:44;:::i;10291:1282::-;10823:3;10808:19;;10836:62;10812:9;10880:6;10836:62;:::i;:::-;-1:-1:-1;;;;;10973:15:69;;;10925:3;10952:19;;10945:44;-1:-1:-1;;;;;11063:15:69;;;11057:3;11042:19;;11035:44;11123:14;;11116:22;11110:3;11095:19;;11088:51;11176:15;;;11170:3;11155:19;;11148:44;11229:15;;;;11223:3;11208:19;;11201:44;11289:14;;11282:22;11276:3;11261:19;;11254:51;11336:3;11321:19;;11314:35;;;;11380:3;11365:19;;11358:35;11424:3;11409:19;;11402:35;270:31;;;11497:3;11482:19;;258:44;270:31;;;;11562:3;11547:19;;;258:44;10291:1282;;-1:-1:-1;10291:1282:69:o;13390:127::-;13451:10;13446:3;13442:20;13439:1;13432:31;13482:4;13479:1;13472:15;13506:4;13503:1;13496:15;13522:168;13562:7;13628:1;13624;13620:6;13616:14;13613:1;13610:21;13605:1;13598:9;13591:17;13587:45;13584:71;;;13635:18;;:::i;:::-;-1:-1:-1;13675:9:69;;13522:168::o;13695:127::-;13756:10;13751:3;13747:20;13744:1;13737:31;13787:4;13784:1;13777:15;13811:4;13808:1;13801:15;13827:217;13867:1;13893;13883:132;;13937:10;13932:3;13928:20;13925:1;13918:31;13972:4;13969:1;13962:15;14000:4;13997:1;13990:15;13883:132;-1:-1:-1;14029:9:69;;13827:217::o;14049:128::-;14116:9;;;14137:11;;;14134:37;;;14151:18;;:::i;15930:180::-;-1:-1:-1;;;;;16035:10:69;;;16047;;;16031:27;;16070:11;;;16067:37;;;16084:18;;:::i;16465:853::-;16785:4;16814:3;16844:6;16833:9;16826:25;16887:2;16882;16871:9;16867:18;16860:30;16907:44;16947:2;16936:9;16932:18;16924:6;16907:44;:::i;:::-;-1:-1:-1;;;;;17025:15:69;;;17020:2;17005:18;;16998:43;17077:15;;;17072:2;17057:18;;17050:43;-1:-1:-1;;17130:15:69;;;17124:3;17109:19;;17102:44;-1:-1:-1;;;;;17183:31:69;;;;16978:3;17162:19;;17155:60;17252:15;;;17246:3;17231:19;;17224:44;17299:3;17284:19;17277:35;;;;16899:52;16465:853;-1:-1:-1;;16465:853:69:o;17323:356::-;17525:2;17507:21;;;17544:18;;;17537:30;17603:34;17598:2;17583:18;;17576:62;17670:2;17655:18;;17323:356::o;20186:251::-;20256:6;20309:2;20297:9;20288:7;20284:23;20280:32;20277:52;;;20325:1;20322;20315:12;20277:52;20357:9;20351:16;20376:31;20401:5;20376:31;:::i;20442:164::-;20518:13;;20567;;20560:21;20550:32;;20540:60;;20596:1;20593;20586:12;20611:202;20678:6;20731:2;20719:9;20710:7;20706:23;20702:32;20699:52;;;20747:1;20744;20737:12;20699:52;20770:37;20797:9;20770:37;:::i;20818:444::-;20915:6;20968:2;20956:9;20947:7;20943:23;20939:32;20936:52;;;20984:1;20981;20974:12;20936:52;21017:2;21011:9;21059:2;21051:6;21047:15;21128:6;21116:10;21113:22;-1:-1:-1;;;;;21080:10:69;21077:34;21074:62;21071:88;;;21139:18;;:::i;:::-;21175:2;21168:22;21214:16;;21199:32;;-1:-1:-1;21206:6:69;20818:444;-1:-1:-1;20818:444:69:o;21267:127::-;21328:10;21323:3;21319:20;21316:1;21309:31;21359:4;21356:1;21349:15;21383:4;21380:1;21373:15;21399:521;21476:4;21482:6;21542:11;21529:25;21636:2;21632:7;21621:8;21605:14;21601:29;21597:43;21577:18;21573:68;21563:96;;21655:1;21652;21645:12;21563:96;21682:33;;21734:20;;;-1:-1:-1;;;;;;21766:30:69;;21763:50;;;21809:1;21806;21799:12;21763:50;21842:4;21830:17;;-1:-1:-1;21873:14:69;21869:27;;;21859:38;;21856:58;;;21910:1;21907;21900:12;21856:58;21399:521;;;;;:::o;21925:271::-;22108:6;22100;22095:3;22082:33;22064:3;22134:16;;22159:13;;;22134:16;21925:271;-1:-1:-1;21925:271:69:o;22201:648::-;22281:6;22334:2;22322:9;22313:7;22309:23;22305:32;22302:52;;;22350:1;22347;22340:12;22302:52;22383:9;22377:16;-1:-1:-1;;;;;22408:6:69;22405:30;22402:50;;;22448:1;22445;22438:12;22402:50;22471:22;;22524:4;22516:13;;22512:27;-1:-1:-1;22502:55:69;;22553:1;22550;22543:12;22502:55;22582:2;22576:9;22607:48;22623:31;22651:2;22623:31;:::i;22607:48::-;22678:2;22671:5;22664:17;22718:7;22713:2;22708;22704;22700:11;22696:20;22693:33;22690:53;;;22739:1;22736;22729:12;22690:53;22752:67;22816:2;22811;22804:5;22800:14;22795:2;22791;22787:11;22752:67;:::i;:::-;22838:5;22201:648;-1:-1:-1;;;;;22201:648:69:o;23078:135::-;23117:3;23138:17;;;23135:43;;23158:18;;:::i;:::-;-1:-1:-1;23205:1:69;23194:13;;23078:135::o;24877:359::-;25080:6;25069:9;25062:25;25123:6;25118:2;25107:9;25103:18;25096:34;25166:2;25161;25150:9;25146:18;25139:30;25043:4;25186:44;25226:2;25215:9;25211:18;25203:6;25186:44;:::i;25241:183::-;25310:6;25363:2;25351:9;25342:7;25338:23;25334:32;25331:52;;;25379:1;25376;25369:12;25331:52;-1:-1:-1;25402:16:69;;25241:183;-1:-1:-1;25241:183:69:o;25429:925::-;25777:4;25806:3;25836:2;25825:9;25818:21;25856:44;25896:2;25885:9;25881:18;25873:6;25856:44;:::i;:::-;25931:2;25916:18;;25909:34;;;;-1:-1:-1;;25974:2:69;25959:18;;25952:34;;;;-1:-1:-1;;;;;26022:31:69;;;;26017:2;26002:18;;25995:59;-1:-1:-1;;;;;26129:15:69;;;26123:3;26108:19;;26101:44;26182:15;;;26081:3;26161:19;;26154:44;26235:15;;26229:3;26214:19;;26207:44;26282:3;26267:19;;26260:35;26332:15;26326:3;26311:19;;;26304:44;25848:52;25429:925;-1:-1:-1;25429:925:69:o;26359:714::-;26463:6;26516:3;26504:9;26495:7;26491:23;26487:33;26484:53;;;26533:1;26530;26523:12;26484:53;26566:2;26560:9;26608:3;26600:6;26596:16;26678:6;26666:10;26663:22;-1:-1:-1;;;;;26630:10:69;26627:34;26624:62;26621:88;;;26689:18;;:::i;:::-;26725:2;26718:22;26764:37;26791:9;26764:37;:::i;:::-;26756:6;26749:53;26835:46;26877:2;26866:9;26862:18;26835:46;:::i;:::-;26830:2;26822:6;26818:15;26811:71;26915:46;26957:2;26946:9;26942:18;26915:46;:::i;:::-;26910:2;26902:6;26898:15;26891:71;26995:46;27037:2;27026:9;27022:18;26995:46;:::i;:::-;26990:2;26978:15;;26971:71;26982:6;26359:714;-1:-1:-1;;;26359:714:69:o;28148:697::-;28369:3;28407:6;28401:13;28423:66;28482:6;28477:3;28470:4;28462:6;28458:17;28423:66;:::i;:::-;28552:13;;28511:16;;;;28574:70;28552:13;28511:16;28621:4;28609:17;;28574:70;:::i;:::-;28711:13;;28666:20;;;28733:70;28711:13;28666:20;28780:4;28768:17;;28733:70;:::i;:::-;28819:20;;28148:697;-1:-1:-1;;;;;28148:697:69:o;28850:583::-;-1:-1:-1;;;29206:3:69;29199:16;29181:3;29244:6;29238:13;29260:74;29327:6;29323:1;29318:3;29314:11;29307:4;29299:6;29295:17;29260:74;:::i;:::-;-1:-1:-1;;;29393:1:69;29353:16;;;;29385:10;;;29378:23;-1:-1:-1;29425:1:69;29417:10;;28850:583;-1:-1:-1;28850:583:69:o;29438:450::-;29668:3;29706:6;29700:13;29722:66;29781:6;29776:3;29769:4;29761:6;29757:17;29722:66;:::i;:::-;-1:-1:-1;;;29810:16:69;;29835:18;;;-1:-1:-1;29880:1:69;29869:13;;29438:450;-1:-1:-1;29438:450:69:o;31195:287::-;31324:3;31362:6;31356:13;31378:66;31437:6;31432:3;31425:4;31417:6;31413:17;31378:66;:::i;:::-;31460:16;;;;;31195:287;-1:-1:-1;;31195:287:69:o",
    "linkReferences": {},
    "immutableReferences": {
      "50760": [
        {
          "start": 1306,
          "length": 32
        },
        {
          "start": 5603,
          "length": 32
        },
        {
          "start": 7707,
          "length": 32
        },
        {
          "start": 9344,
          "length": 32
        },
        {
          "start": 9445,
          "length": 32
        }
      ]
    }
  },
  "methodIdentifiers": {
    "assertTruth(bytes,address,address,address,uint64,address,uint256,bytes32,bytes32)": "6457c979",
    "assertTruthWithDefaults(bytes,address)": "36b13af4",
    "assertions(bytes32)": "d60715b5",
    "burnedBondPercentage()": "08e7c3e6",
    "cachedCurrencies(address)": "70762157",
    "cachedIdentifiers(bytes32)": "530dd392",
    "cachedOracle()": "a7af2d0f",
    "defaultCurrency()": "20402e1d",
    "defaultIdentifier()": "d509b017",
    "defaultLiveness()": "fe4e1983",
    "disputeAssertion(bytes32,address)": "a6a22b43",
    "finder()": "b9a3c84c",
    "getAssertion(bytes32)": "88302884",
    "getAssertionResult(bytes32)": "e39dfd7f",
    "getCurrentTime()": "29cb924d",
    "getMinimumBond(address)": "4360af3d",
    "multicall(bytes[])": "ac9650d8",
    "numericalTrue()": "da03b36e",
    "owner()": "8da5cb5b",
    "renounceOwnership()": "715018a6",
    "setAdminProperties(address,uint64,uint256)": "82762520",
    "settleAndGetAssertionResult(bytes32)": "8ea2f2ab",
    "settleAssertion(bytes32)": "4124beef",
    "stampAssertion(bytes32)": "afedba4f",
    "syncUmaParams(bytes32,address)": "a8655785",
    "transferOwnership(address)": "f2fde38b"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.16+commit.07a7930e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"contract FinderInterface\",\"name\":\"_finder\",\"type\":\"address\"},{\"internalType\":\"contract IERC20\",\"name\":\"_defaultCurrency\",\"type\":\"address\"},{\"internalType\":\"uint64\",\"name\":\"_defaultLiveness\",\"type\":\"uint64\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"contract IERC20\",\"name\":\"defaultCurrency\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"defaultLiveness\",\"type\":\"uint64\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"burnedBondPercentage\",\"type\":\"uint256\"}],\"name\":\"AdminPropertiesSet\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"assertionId\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"caller\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"disputer\",\"type\":\"address\"}],\"name\":\"AssertionDisputed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"assertionId\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"domainId\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"claim\",\"type\":\"bytes\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"asserter\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"callbackRecipient\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"escalationManager\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"caller\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"expirationTime\",\"type\":\"uint64\"},{\"indexed\":false,\"internalType\":\"contract IERC20\",\"name\":\"currency\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"bond\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"identifier\",\"type\":\"bytes32\"}],\"name\":\"AssertionMade\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"assertionId\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"bondRecipient\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"disputed\",\"type\":\"bool\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"settlementResolution\",\"type\":\"bool\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"settleCaller\",\"type\":\"address\"}],\"name\":\"AssertionSettled\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"claim\",\"type\":\"bytes\"},{\"internalType\":\"address\",\"name\":\"asserter\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"callbackRecipient\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"escalationManager\",\"type\":\"address\"},{\"internalType\":\"uint64\",\"name\":\"liveness\",\"type\":\"uint64\"},{\"internalType\":\"contract IERC20\",\"name\":\"currency\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"bond\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"identifier\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"domainId\",\"type\":\"bytes32\"}],\"name\":\"assertTruth\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"assertionId\",\"type\":\"bytes32\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"claim\",\"type\":\"bytes\"},{\"internalType\":\"address\",\"name\":\"asserter\",\"type\":\"address\"}],\"name\":\"assertTruthWithDefaults\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"name\":\"assertions\",\"outputs\":[{\"components\":[{\"internalType\":\"bool\",\"name\":\"arbitrateViaEscalationManager\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"discardOracle\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"validateDisputers\",\"type\":\"bool\"},{\"internalType\":\"address\",\"name\":\"assertingCaller\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"escalationManager\",\"type\":\"address\"}],\"internalType\":\"struct OptimisticOracleV3Interface.EscalationManagerSettings\",\"name\":\"escalationManagerSettings\",\"type\":\"tuple\"},{\"internalType\":\"address\",\"name\":\"asserter\",\"type\":\"address\"},{\"internalType\":\"uint64\",\"name\":\"assertionTime\",\"type\":\"uint64\"},{\"internalType\":\"bool\",\"name\":\"settled\",\"type\":\"bool\"},{\"internalType\":\"contract IERC20\",\"name\":\"currency\",\"type\":\"address\"},{\"internalType\":\"uint64\",\"name\":\"expirationTime\",\"type\":\"uint64\"},{\"internalType\":\"bool\",\"name\":\"settlementResolution\",\"type\":\"bool\"},{\"internalType\":\"bytes32\",\"name\":\"domainId\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"identifier\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"bond\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"callbackRecipient\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"disputer\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"burnedBondPercentage\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"cachedCurrencies\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"isWhitelisted\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"finalFee\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"name\":\"cachedIdentifiers\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"cachedOracle\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"defaultCurrency\",\"outputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"defaultIdentifier\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"defaultLiveness\",\"outputs\":[{\"internalType\":\"uint64\",\"name\":\"\",\"type\":\"uint64\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"assertionId\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"disputer\",\"type\":\"address\"}],\"name\":\"disputeAssertion\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"finder\",\"outputs\":[{\"internalType\":\"contract FinderInterface\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"assertionId\",\"type\":\"bytes32\"}],\"name\":\"getAssertion\",\"outputs\":[{\"components\":[{\"components\":[{\"internalType\":\"bool\",\"name\":\"arbitrateViaEscalationManager\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"discardOracle\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"validateDisputers\",\"type\":\"bool\"},{\"internalType\":\"address\",\"name\":\"assertingCaller\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"escalationManager\",\"type\":\"address\"}],\"internalType\":\"struct OptimisticOracleV3Interface.EscalationManagerSettings\",\"name\":\"escalationManagerSettings\",\"type\":\"tuple\"},{\"internalType\":\"address\",\"name\":\"asserter\",\"type\":\"address\"},{\"internalType\":\"uint64\",\"name\":\"assertionTime\",\"type\":\"uint64\"},{\"internalType\":\"bool\",\"name\":\"settled\",\"type\":\"bool\"},{\"internalType\":\"contract IERC20\",\"name\":\"currency\",\"type\":\"address\"},{\"internalType\":\"uint64\",\"name\":\"expirationTime\",\"type\":\"uint64\"},{\"internalType\":\"bool\",\"name\":\"settlementResolution\",\"type\":\"bool\"},{\"internalType\":\"bytes32\",\"name\":\"domainId\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"identifier\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"bond\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"callbackRecipient\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"disputer\",\"type\":\"address\"}],\"internalType\":\"struct OptimisticOracleV3Interface.Assertion\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"assertionId\",\"type\":\"bytes32\"}],\"name\":\"getAssertionResult\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getCurrentTime\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"currency\",\"type\":\"address\"}],\"name\":\"getMinimumBond\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes[]\",\"name\":\"data\",\"type\":\"bytes[]\"}],\"name\":\"multicall\",\"outputs\":[{\"internalType\":\"bytes[]\",\"name\":\"results\",\"type\":\"bytes[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"numericalTrue\",\"outputs\":[{\"internalType\":\"int256\",\"name\":\"\",\"type\":\"int256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"_defaultCurrency\",\"type\":\"address\"},{\"internalType\":\"uint64\",\"name\":\"_defaultLiveness\",\"type\":\"uint64\"},{\"internalType\":\"uint256\",\"name\":\"_burnedBondPercentage\",\"type\":\"uint256\"}],\"name\":\"setAdminProperties\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"assertionId\",\"type\":\"bytes32\"}],\"name\":\"settleAndGetAssertionResult\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"assertionId\",\"type\":\"bytes32\"}],\"name\":\"settleAssertion\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"assertionId\",\"type\":\"bytes32\"}],\"name\":\"stampAssertion\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"identifier\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"currency\",\"type\":\"address\"}],\"name\":\"syncUmaParams\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Core idea: an asserter makes a statement about a truth, calling \\\"assertTruth\\\". If this statement is not challenged, it is taken as the state of the world. If challenged, it is arbitrated using the UMA DVM, or if configured, an escalation manager. Escalation managers enable integrations to define their own security properties and tradeoffs, enabling the notion of \\\"sovereign security\\\".\",\"kind\":\"dev\",\"methods\":{\"assertTruth(bytes,address,address,address,uint64,address,uint256,bytes32,bytes32)\":{\"details\":\"The caller must approve this contract to spend at least bond amount of currency.\",\"params\":{\"asserter\":\"account that receives bonds back at settlement. This could be msg.sender or any other account that the caller wants to receive the bond at settlement time.\",\"bond\":\"amount of currency to pull from the caller and hold in escrow until the assertion is resolved. This must be >= getMinimumBond(address(currency)).\",\"callbackRecipient\":\"if configured, this address will receive a function call assertionResolvedCallback and assertionDisputedCallback at resolution or dispute respectively. Enables dynamic responses to these events. The recipient _must_ implement these callbacks and not revert or the assertion resolution will be blocked.\",\"claim\":\"the truth claim being asserted. This is an assertion about the world, and is verified by disputers.\",\"currency\":\"bond currency pulled from the caller and held in escrow until the assertion is resolved.\",\"domainId\":\"optional domain that can be used to relate this assertion to others in the escalationManager and can be used by the configured escalationManager to define custom behavior for groups of assertions. This is typically used for \\\"escalation games\\\" by changing bonds or other assertion properties based on the other assertions that have come before. If not needed this value should be 0 to save gas.\",\"escalationManager\":\"if configured, this address will control escalation properties of the assertion. This means a) choosing to arbitrate via the UMA DVM, b) choosing to discard assertions on dispute, or choosing to validate disputes. Combining these, the asserter can define their own security properties for the assertion. escalationManager also _must_ implement the same callbacks as callbackRecipient.\",\"identifier\":\"UMA DVM identifier to use for price requests in the event of a dispute. Must be pre-approved.\",\"liveness\":\"time to wait before the assertion can be resolved. Assertion can be disputed in this time.\"},\"returns\":{\"assertionId\":\"unique identifier for this assertion.\"}},\"assertTruthWithDefaults(bytes,address)\":{\"details\":\"The caller must approve this contract to spend at least the result of getMinimumBond(defaultCurrency).\",\"params\":{\"asserter\":\"account that receives bonds back at settlement. This could be msg.sender or any other account that the caller wants to receive the bond at settlement time.\",\"claim\":\"the truth claim being asserted. This is an assertion about the world, and is verified by disputers.\"},\"returns\":{\"_0\":\"assertionId unique identifier for this assertion.\"}},\"constructor\":{\"params\":{\"_defaultCurrency\":\"the default currency to bond asserters in assertTruthWithDefaults.\",\"_defaultLiveness\":\"the default liveness for assertions in assertTruthWithDefaults.\",\"_finder\":\"keeps track of all contracts within the UMA system based on their interfaceName.\"}},\"disputeAssertion(bytes32,address)\":{\"details\":\"The caller must approve this contract to spend at least bond amount of currency for the associated assertion.\",\"params\":{\"assertionId\":\"unique identifier for the assertion to dispute.\",\"disputer\":\"receives bonds back at settlement.\"}},\"getAssertion(bytes32)\":{\"params\":{\"assertionId\":\"unique identifier for the assertion to fetch information for.\"},\"returns\":{\"_0\":\"assertion information about the assertion.\"}},\"getAssertionResult(bytes32)\":{\"params\":{\"assertionId\":\"unique identifier for the assertion to fetch the resolution for.\"},\"returns\":{\"_0\":\"resolution of the assertion.\"}},\"getCurrentTime()\":{\"details\":\"Can be overridden to control contract time.\",\"returns\":{\"_0\":\"current block timestamp.\"}},\"getMinimumBond(address)\":{\"params\":{\"currency\":\"currency to calculate the minimum bond for.\"},\"returns\":{\"_0\":\"minimum bond amount.\"}},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"setAdminProperties(address,uint64,uint256)\":{\"details\":\"Only callable by the contract owner (UMA governor).\",\"params\":{\"_burnedBondPercentage\":\"the percentage of the bond that is sent as fee to UMA Store contract on disputes.\",\"_defaultCurrency\":\"the default currency to bond asserters in assertTruthWithDefaults.\",\"_defaultLiveness\":\"the default liveness for assertions in assertTruthWithDefaults.\"}},\"settleAndGetAssertionResult(bytes32)\":{\"params\":{\"assertionId\":\"unique identifier for the assertion to resolve and return the resolution for.\"},\"returns\":{\"_0\":\"resolution of the assertion.\"}},\"settleAssertion(bytes32)\":{\"params\":{\"assertionId\":\"unique identifier for the assertion to resolve.\"}},\"stampAssertion(bytes32)\":{\"params\":{\"assertionId\":\"unique identifier for the assertion to construct ancillary data for.\"},\"returns\":{\"_0\":\"ancillaryData stamped assertion information.\"}},\"syncUmaParams(bytes32,address)\":{\"params\":{\"currency\":\"currency to fetch information for and store locally.\",\"identifier\":\"identifier to fetch information for and store locally.\"}},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"stateVariables\":{\"defaultIdentifier\":{\"return\":\"The default identifier.\",\"returns\":{\"_0\":\"The default identifier.\"}}},\"title\":\"Optimistic Oracle V3.\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"assertTruth(bytes,address,address,address,uint64,address,uint256,bytes32,bytes32)\":{\"notice\":\"Asserts a truth about the world, using a fully custom configuration.\"},\"assertTruthWithDefaults(bytes,address)\":{\"notice\":\"Asserts a truth about the world, using the default currency and liveness. No callback recipient or escalation manager is enabled. The caller is expected to provide a bond of finalFee/burnedBondPercentage (with burnedBondPercentage set to 50%, the bond is 2x final fee) of the default currency.\"},\"constructor\":{\"notice\":\"Construct the OptimisticOracleV3 contract.\"},\"defaultIdentifier()\":{\"notice\":\"Returns the default identifier used by the Optimistic Oracle V3.\"},\"disputeAssertion(bytes32,address)\":{\"notice\":\"Disputes an assertion. Depending on how the assertion was configured, this may either escalate to the UMA DVM or the configured escalation manager for arbitration.\"},\"getAssertion(bytes32)\":{\"notice\":\"Fetches information about a specific assertion and returns it.\"},\"getAssertionResult(bytes32)\":{\"notice\":\"Fetches the resolution of a specific assertion and returns it. If the assertion has not been settled then this will revert. If the assertion was disputed and configured to discard the oracle resolution return false.\"},\"getCurrentTime()\":{\"notice\":\"Returns the current block timestamp.\"},\"getMinimumBond(address)\":{\"notice\":\"Returns the minimum bond amount required to make an assertion. This is calculated as the final fee of the currency divided by the burnedBondPercentage. If burn percentage is 50% then the min bond is 2x the final fee.\"},\"setAdminProperties(address,uint64,uint256)\":{\"notice\":\"Sets the default currency, liveness, and burned bond percentage.\"},\"settleAndGetAssertionResult(bytes32)\":{\"notice\":\"Settles an assertion and returns the resolution.\"},\"settleAssertion(bytes32)\":{\"notice\":\"Resolves an assertion. If the assertion has not been disputed, the assertion is resolved as true and the asserter receives the bond. If the assertion has been disputed, the assertion is resolved depending on the oracle result. Based on the result, the asserter or disputer receives the bond. If the assertion was disputed then an amount of the bond is sent to the UMA Store as an oracle fee based on the burnedBondPercentage. The remainder of the bond is returned to the asserter or disputer.\"},\"stampAssertion(bytes32)\":{\"notice\":\"Appends information onto an assertionId to construct ancillary data used for dispute resolution.\"},\"syncUmaParams(bytes32,address)\":{\"notice\":\"Fetches information about a specific identifier & currency from the UMA contracts and stores a local copy of the information within this contract. This is used to save gas when making assertions as we can avoid an external call to the UMA contracts to fetch this.\"}},\"notice\":\"The OOv3 is used to assert truths about the world which are verified using an optimistic escalation game.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"node_modules/@uma/core/contracts/optimistic-oracle-v3/implementation/OptimisticOracleV3.sol\":\"OptimisticOracleV3\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@across-protocol/=node_modules/@across-protocol/\",\":@ensdomains/=node_modules/@ensdomains/\",\":@eth-optimism/=node_modules/@across-protocol/contracts/node_modules/@eth-optimism/\",\":@gnosis.pm/=node_modules/@gnosis.pm/\",\":@maticnetwork/=node_modules/@maticnetwork/\",\":@openzeppelin/=node_modules/@openzeppelin/\",\":@uma/=node_modules/@uma/\",\":@uniswap/=node_modules/@uniswap/\",\":base64-sol/=node_modules/base64-sol/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":eth-gas-reporter/=node_modules/eth-gas-reporter/\",\":forge-std/=lib/forge-std/src/\",\":hardhat-deploy/=node_modules/hardhat-deploy/\",\":hardhat/=node_modules/hardhat/\"]},\"sources\":{\"node_modules/@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0x24e0364e503a9bbde94c715d26573a76f14cd2a202d45f96f52134ab806b67b9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e12cbaa7378fd9b62280e4e1d164bedcb4399ce238f5f98fc0eefb7e50577981\",\"dweb:/ipfs/QmXRoFGUgfsaRkoPT5bxNMtSayKTQ8GZATLPXf69HcRA51\"]},\"node_modules/@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xbbc8ac883ac3c0078ce5ad3e288fbb3ffcc8a30c3a98c0fda0114d64fc44fca2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87a7a5d2f6f63f84598af02b8c50ca2df2631cb8ba2453e8d95fcb17e4be9824\",\"dweb:/ipfs/QmR76hqtAcRqoFj33tmNjcWTLrgNsAaakYwnKZ8zoJtKei\"]},\"node_modules/@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0xc3d946432c0ddbb1f846a0d3985be71299df331b91d06732152117f62f0be2b5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4632c341a06ba5c079b51ca5a915efab4e6ab57735b37839b3e8365ff806a43e\",\"dweb:/ipfs/QmTHT3xHYed2wajEoA5qu7ii2BxLpPhQZHwAhtLK5Z7ANK\"]},\"node_modules/@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0x2ccf9d2313a313d41a791505f2b5abfdc62191b5d4334f7f7a82691c088a1c87\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b3a57d0854b2fdce6ebff933a48dca2445643d1eccfc27f00292e937f26c6a58\",\"dweb:/ipfs/QmW45rZooS9TqR4YXUbjRbtf2Bpb5ouSarBvfW1LdGprvV\"]},\"node_modules/@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"node_modules/@openzeppelin/contracts/utils/math/SafeMath.sol\":{\"keccak256\":\"0xa2f576be637946f767aa56601c26d717f48a0aff44f82e46f13807eea1009a21\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://973868f808e88e21a1a0a01d4839314515ee337ad096286c88e41b74dcc11fc2\",\"dweb:/ipfs/QmfYuZxRfx2J2xdk4EXN7jKg4bUYEMTaYk9BAw9Bqn4o2Y\"]},\"node_modules/@openzeppelin/contracts/utils/math/SignedSafeMath.sol\":{\"keccak256\":\"0x62f53f262fabbbc6d8ab49488d8fce36370351aff2b8d3898d499d68995a71c2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://efd599513c2f313a3f5e9536beb2b80a0d2b3dd34202c174a707d81b7dc751ce\",\"dweb:/ipfs/QmdDiENVFSyWjfFskNLnViMH77DHg3oDthkSZk7dMzNNKB\"]},\"node_modules/@uma/core/contracts/common/implementation/AddressWhitelist.sol\":{\"keccak256\":\"0xc1f20b925f9d37230aaf7bbee536f9a9b08e4772864f0a243ff1b69b54710fee\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://55bc6782bd269463214dbafa8702b2ff33910fd4a51ab24d775aabb15e278bcc\",\"dweb:/ipfs/QmV41DnGByGBtg8gk7MG6Nr3xYo5R5varZ8cewywdKNATQ\"]},\"node_modules/@uma/core/contracts/common/implementation/AncillaryData.sol\":{\"keccak256\":\"0x8ff33ac32d3e6de25de9e0ac2c0ff9a621f187fa97e9ee84092b327471baa3ce\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://0bbaed49756e8cf7ef405e132f441cd7a735ac6186a200b0179147e7d137b74a\",\"dweb:/ipfs/QmeSBJX5a61LZPxbkUKS2NF4LSxemgDwjD65fCAmyP7PX2\"]},\"node_modules/@uma/core/contracts/common/implementation/FixedPoint.sol\":{\"keccak256\":\"0x996b97cc4fa5da4064e3aee500edc6972485d59a9334ceec81155e2c2f484dae\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://8d7c028926dc2b27e7dc103363dca8a43f60b3351f4a14bcb702660f95c68663\",\"dweb:/ipfs/QmXz4ieFjP5RxJ35F8GbPryYEGvFmxc4Gqx8EK7N57ixzT\"]},\"node_modules/@uma/core/contracts/common/implementation/Lockable.sol\":{\"keccak256\":\"0x41d78fcce54598ad5f26bc0b778c0f4fedbd836401625e49e736979f69a87ef0\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://4ce111bb50441ef5125e7d42284f6debbc17fd589515d7b8cede7e9d1d5f0ede\",\"dweb:/ipfs/QmaXiXACWVEDDHoCHNXdVBoNpf8QNHkUZ1kf5MfbxfL6jj\"]},\"node_modules/@uma/core/contracts/common/implementation/MultiCaller.sol\":{\"keccak256\":\"0x9f6afe5bafc5e16fe8d63010a740ec3a88a9f00a7236ea7e5b039a2f50eb346e\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://a971572a4a9ed32e5ec15ac384af593d9499778f6ec593dbdba67d44ced4c7d8\",\"dweb:/ipfs/QmbdpfhhnUyoHWe7TPFBZxT6R6zyxJEDcGBNwDt5ncweRv\"]},\"node_modules/@uma/core/contracts/common/interfaces/AddressWhitelistInterface.sol\":{\"keccak256\":\"0x22fb8588dff1d5cff76a28111d6c9b190765d99facd93c8ff3b54771f245c0d8\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://5ecd993f00de290a3c7bf21da23a9439cf2ccb22028316df92b79780ac8aa533\",\"dweb:/ipfs/QmTZ7x7U4EEzTacqapzSdFs2np5WNsqm4XeUBqzQxxDJei\"]},\"node_modules/@uma/core/contracts/data-verification-mechanism/implementation/Constants.sol\":{\"keccak256\":\"0xe40957105a9240c6bcb9753fd0011fe9f382c437cd6771c57bf7a96f8ceb9c84\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://cbf0d25e841b1f5c4022d09fb29220cb428139443cb29c4ab8dbfff71dffcc05\",\"dweb:/ipfs/QmSVVr5wH1tZi6WmKyuy1K8yS6JN4DeK5kWaZpPKtXiqkK\"]},\"node_modules/@uma/core/contracts/data-verification-mechanism/interfaces/FinderInterface.sol\":{\"keccak256\":\"0x9166fbfe08e954eb86d33c114fcde7ce4fd0dda5d9d28b31210582bfc769fa86\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://e611e12bcaaebfdf65b67c566ff1d34708e757f01a445bd87c55862e89383b81\",\"dweb:/ipfs/QmYNSq5oopTShdS6j4VWKqoLxmQSRKmWebCxw6K4LfmKrf\"]},\"node_modules/@uma/core/contracts/data-verification-mechanism/interfaces/IdentifierWhitelistInterface.sol\":{\"keccak256\":\"0x9ae86a30dd1a8c03fb2c6d27be570bb30c4c0b13ac63cde8620b7e4b51d88dc9\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://a71d2aff48e075ecab56a9c9767775d1d77e04ec9191fed124e71003220549e3\",\"dweb:/ipfs/QmYPWsZXro6fzqpZY6UxQ5X8znEXfLp2sun8oXzdz8bTyc\"]},\"node_modules/@uma/core/contracts/data-verification-mechanism/interfaces/OracleAncillaryInterface.sol\":{\"keccak256\":\"0xd58b41fe1e389f7871db7c04f2c05c1aac1d0455bbc521534da81fd657016a1f\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://cc532e9c550bb1bba0daa33fda748590cd06ce94a9566fe65dac04e7d40977bc\",\"dweb:/ipfs/QmZKvfRW2LJFt5MWZbKuU9ujkXnS2hkPUJVj8wwJWcuZGX\"]},\"node_modules/@uma/core/contracts/data-verification-mechanism/interfaces/StoreInterface.sol\":{\"keccak256\":\"0xbb73671684309c91ad5ef3da1474051d03f2e7d5882bed7f5c4317e5d4c768df\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://32386544d3119fd0187a8c4e8b01c739f508ab863faa04345cabc2544081f9e8\",\"dweb:/ipfs/QmYszDURs1x75rsejZkGt9zCkASXnJtufbNsL3XHe2eJPQ\"]},\"node_modules/@uma/core/contracts/optimistic-oracle-v3/implementation/OptimisticOracleV3.sol\":{\"keccak256\":\"0xeba5082c48c3d891f2422b8c0d1d5d6552ab47b5d538db7ff05ffb2f3db25ffc\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://d818630e1c094792613a0539aa0a7677ca8fa92a5308eaf4ff7cf8ea8a4c547e\",\"dweb:/ipfs/QmSM78A3afY6osh4VAmyJX2E4Qyg4qcY1KwY5uFnSK4Yia\"]},\"node_modules/@uma/core/contracts/optimistic-oracle-v3/interfaces/EscalationManagerInterface.sol\":{\"keccak256\":\"0xce31adf62ae47468bab181bf1137b05e8ac0a003f019c343ac137a76ea32efc7\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://eb1b93b648adf4130fdfe7a62d817cda0519e7760a50b90f16a3c46cee4c0967\",\"dweb:/ipfs/QmNPD4TRAm9kqqQDKQabqZgaorkJNov96iLgxsm5HRTSZN\"]},\"node_modules/@uma/core/contracts/optimistic-oracle-v3/interfaces/OptimisticOracleV3CallbackRecipientInterface.sol\":{\"keccak256\":\"0x79f90bc84ed5d394380e99f0a5d1b219abd9016bc3a02fad0099014af08af03e\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://dc1b7b847eb711750bc76ab45a13294b05fc09e361294a6bdffb90cb15f50b63\",\"dweb:/ipfs/QmQSs2R7mmGojGdNkqP75Vf7LajRkfJ1oGuYAUCHYGmPEQ\"]},\"node_modules/@uma/core/contracts/optimistic-oracle-v3/interfaces/OptimisticOracleV3Interface.sol\":{\"keccak256\":\"0xf31322bfd64854f0bfa92051d6ec711c1eed15d8042f394f5c24c05378218367\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://535bc2a6060e86a49524fd3c0062afcf83077530cefb3c1b8179b832f03ca81e\",\"dweb:/ipfs/QmQZhqn6oUiebSWEKbqcmiMGkqAb8B59WsRAyFU8WY84ct\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.16+commit.07a7930e"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [
            {
              "internalType": "contract FinderInterface",
              "name": "_finder",
              "type": "address"
            },
            {
              "internalType": "contract IERC20",
              "name": "_defaultCurrency",
              "type": "address"
            },
            {
              "internalType": "uint64",
              "name": "_defaultLiveness",
              "type": "uint64"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "constructor"
        },
        {
          "inputs": [
            {
              "internalType": "contract IERC20",
              "name": "defaultCurrency",
              "type": "address",
              "indexed": false
            },
            {
              "internalType": "uint64",
              "name": "defaultLiveness",
              "type": "uint64",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "burnedBondPercentage",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "AdminPropertiesSet",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "assertionId",
              "type": "bytes32",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "caller",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "disputer",
              "type": "address",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "AssertionDisputed",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "assertionId",
              "type": "bytes32",
              "indexed": true
            },
            {
              "internalType": "bytes32",
              "name": "domainId",
              "type": "bytes32",
              "indexed": false
            },
            {
              "internalType": "bytes",
              "name": "claim",
              "type": "bytes",
              "indexed": false
            },
            {
              "internalType": "address",
              "name": "asserter",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "callbackRecipient",
              "type": "address",
              "indexed": false
            },
            {
              "internalType": "address",
              "name": "escalationManager",
              "type": "address",
              "indexed": false
            },
            {
              "internalType": "address",
              "name": "caller",
              "type": "address",
              "indexed": false
            },
            {
              "internalType": "uint64",
              "name": "expirationTime",
              "type": "uint64",
              "indexed": false
            },
            {
              "internalType": "contract IERC20",
              "name": "currency",
              "type": "address",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "bond",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "bytes32",
              "name": "identifier",
              "type": "bytes32",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "AssertionMade",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "assertionId",
              "type": "bytes32",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "bondRecipient",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "bool",
              "name": "disputed",
              "type": "bool",
              "indexed": false
            },
            {
              "internalType": "bool",
              "name": "settlementResolution",
              "type": "bool",
              "indexed": false
            },
            {
              "internalType": "address",
              "name": "settleCaller",
              "type": "address",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "AssertionSettled",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "previousOwner",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "newOwner",
              "type": "address",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "OwnershipTransferred",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes",
              "name": "claim",
              "type": "bytes"
            },
            {
              "internalType": "address",
              "name": "asserter",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "callbackRecipient",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "escalationManager",
              "type": "address"
            },
            {
              "internalType": "uint64",
              "name": "liveness",
              "type": "uint64"
            },
            {
              "internalType": "contract IERC20",
              "name": "currency",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "bond",
              "type": "uint256"
            },
            {
              "internalType": "bytes32",
              "name": "identifier",
              "type": "bytes32"
            },
            {
              "internalType": "bytes32",
              "name": "domainId",
              "type": "bytes32"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "assertTruth",
          "outputs": [
            {
              "internalType": "bytes32",
              "name": "assertionId",
              "type": "bytes32"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bytes",
              "name": "claim",
              "type": "bytes"
            },
            {
              "internalType": "address",
              "name": "asserter",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "assertTruthWithDefaults",
          "outputs": [
            {
              "internalType": "bytes32",
              "name": "",
              "type": "bytes32"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "",
              "type": "bytes32"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "assertions",
          "outputs": [
            {
              "internalType": "struct OptimisticOracleV3Interface.EscalationManagerSettings",
              "name": "escalationManagerSettings",
              "type": "tuple",
              "components": [
                {
                  "internalType": "bool",
                  "name": "arbitrateViaEscalationManager",
                  "type": "bool"
                },
                {
                  "internalType": "bool",
                  "name": "discardOracle",
                  "type": "bool"
                },
                {
                  "internalType": "bool",
                  "name": "validateDisputers",
                  "type": "bool"
                },
                {
                  "internalType": "address",
                  "name": "assertingCaller",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "escalationManager",
                  "type": "address"
                }
              ]
            },
            {
              "internalType": "address",
              "name": "asserter",
              "type": "address"
            },
            {
              "internalType": "uint64",
              "name": "assertionTime",
              "type": "uint64"
            },
            {
              "internalType": "bool",
              "name": "settled",
              "type": "bool"
            },
            {
              "internalType": "contract IERC20",
              "name": "currency",
              "type": "address"
            },
            {
              "internalType": "uint64",
              "name": "expirationTime",
              "type": "uint64"
            },
            {
              "internalType": "bool",
              "name": "settlementResolution",
              "type": "bool"
            },
            {
              "internalType": "bytes32",
              "name": "domainId",
              "type": "bytes32"
            },
            {
              "internalType": "bytes32",
              "name": "identifier",
              "type": "bytes32"
            },
            {
              "internalType": "uint256",
              "name": "bond",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "callbackRecipient",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "disputer",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "burnedBondPercentage",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "cachedCurrencies",
          "outputs": [
            {
              "internalType": "bool",
              "name": "isWhitelisted",
              "type": "bool"
            },
            {
              "internalType": "uint256",
              "name": "finalFee",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "",
              "type": "bytes32"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "cachedIdentifiers",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "cachedOracle",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "defaultCurrency",
          "outputs": [
            {
              "internalType": "contract IERC20",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "defaultIdentifier",
          "outputs": [
            {
              "internalType": "bytes32",
              "name": "",
              "type": "bytes32"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "defaultLiveness",
          "outputs": [
            {
              "internalType": "uint64",
              "name": "",
              "type": "uint64"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "assertionId",
              "type": "bytes32"
            },
            {
              "internalType": "address",
              "name": "disputer",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "disputeAssertion"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "finder",
          "outputs": [
            {
              "internalType": "contract FinderInterface",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "assertionId",
              "type": "bytes32"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getAssertion",
          "outputs": [
            {
              "internalType": "struct OptimisticOracleV3Interface.Assertion",
              "name": "",
              "type": "tuple",
              "components": [
                {
                  "internalType": "struct OptimisticOracleV3Interface.EscalationManagerSettings",
                  "name": "escalationManagerSettings",
                  "type": "tuple",
                  "components": [
                    {
                      "internalType": "bool",
                      "name": "arbitrateViaEscalationManager",
                      "type": "bool"
                    },
                    {
                      "internalType": "bool",
                      "name": "discardOracle",
                      "type": "bool"
                    },
                    {
                      "internalType": "bool",
                      "name": "validateDisputers",
                      "type": "bool"
                    },
                    {
                      "internalType": "address",
                      "name": "assertingCaller",
                      "type": "address"
                    },
                    {
                      "internalType": "address",
                      "name": "escalationManager",
                      "type": "address"
                    }
                  ]
                },
                {
                  "internalType": "address",
                  "name": "asserter",
                  "type": "address"
                },
                {
                  "internalType": "uint64",
                  "name": "assertionTime",
                  "type": "uint64"
                },
                {
                  "internalType": "bool",
                  "name": "settled",
                  "type": "bool"
                },
                {
                  "internalType": "contract IERC20",
                  "name": "currency",
                  "type": "address"
                },
                {
                  "internalType": "uint64",
                  "name": "expirationTime",
                  "type": "uint64"
                },
                {
                  "internalType": "bool",
                  "name": "settlementResolution",
                  "type": "bool"
                },
                {
                  "internalType": "bytes32",
                  "name": "domainId",
                  "type": "bytes32"
                },
                {
                  "internalType": "bytes32",
                  "name": "identifier",
                  "type": "bytes32"
                },
                {
                  "internalType": "uint256",
                  "name": "bond",
                  "type": "uint256"
                },
                {
                  "internalType": "address",
                  "name": "callbackRecipient",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "disputer",
                  "type": "address"
                }
              ]
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "assertionId",
              "type": "bytes32"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getAssertionResult",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "getCurrentTime",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "currency",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getMinimumBond",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bytes[]",
              "name": "data",
              "type": "bytes[]"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "multicall",
          "outputs": [
            {
              "internalType": "bytes[]",
              "name": "results",
              "type": "bytes[]"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "numericalTrue",
          "outputs": [
            {
              "internalType": "int256",
              "name": "",
              "type": "int256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "owner",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "renounceOwnership"
        },
        {
          "inputs": [
            {
              "internalType": "contract IERC20",
              "name": "_defaultCurrency",
              "type": "address"
            },
            {
              "internalType": "uint64",
              "name": "_defaultLiveness",
              "type": "uint64"
            },
            {
              "internalType": "uint256",
              "name": "_burnedBondPercentage",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setAdminProperties"
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "assertionId",
              "type": "bytes32"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "settleAndGetAssertionResult",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "assertionId",
              "type": "bytes32"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "settleAssertion"
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "assertionId",
              "type": "bytes32"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "stampAssertion",
          "outputs": [
            {
              "internalType": "bytes",
              "name": "",
              "type": "bytes"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "identifier",
              "type": "bytes32"
            },
            {
              "internalType": "address",
              "name": "currency",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "syncUmaParams"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "newOwner",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "transferOwnership"
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {
          "assertTruth(bytes,address,address,address,uint64,address,uint256,bytes32,bytes32)": {
            "details": "The caller must approve this contract to spend at least bond amount of currency.",
            "params": {
              "asserter": "account that receives bonds back at settlement. This could be msg.sender or any other account that the caller wants to receive the bond at settlement time.",
              "bond": "amount of currency to pull from the caller and hold in escrow until the assertion is resolved. This must be >= getMinimumBond(address(currency)).",
              "callbackRecipient": "if configured, this address will receive a function call assertionResolvedCallback and assertionDisputedCallback at resolution or dispute respectively. Enables dynamic responses to these events. The recipient _must_ implement these callbacks and not revert or the assertion resolution will be blocked.",
              "claim": "the truth claim being asserted. This is an assertion about the world, and is verified by disputers.",
              "currency": "bond currency pulled from the caller and held in escrow until the assertion is resolved.",
              "domainId": "optional domain that can be used to relate this assertion to others in the escalationManager and can be used by the configured escalationManager to define custom behavior for groups of assertions. This is typically used for \"escalation games\" by changing bonds or other assertion properties based on the other assertions that have come before. If not needed this value should be 0 to save gas.",
              "escalationManager": "if configured, this address will control escalation properties of the assertion. This means a) choosing to arbitrate via the UMA DVM, b) choosing to discard assertions on dispute, or choosing to validate disputes. Combining these, the asserter can define their own security properties for the assertion. escalationManager also _must_ implement the same callbacks as callbackRecipient.",
              "identifier": "UMA DVM identifier to use for price requests in the event of a dispute. Must be pre-approved.",
              "liveness": "time to wait before the assertion can be resolved. Assertion can be disputed in this time."
            },
            "returns": {
              "assertionId": "unique identifier for this assertion."
            }
          },
          "assertTruthWithDefaults(bytes,address)": {
            "details": "The caller must approve this contract to spend at least the result of getMinimumBond(defaultCurrency).",
            "params": {
              "asserter": "account that receives bonds back at settlement. This could be msg.sender or any other account that the caller wants to receive the bond at settlement time.",
              "claim": "the truth claim being asserted. This is an assertion about the world, and is verified by disputers."
            },
            "returns": {
              "_0": "assertionId unique identifier for this assertion."
            }
          },
          "constructor": {
            "params": {
              "_defaultCurrency": "the default currency to bond asserters in assertTruthWithDefaults.",
              "_defaultLiveness": "the default liveness for assertions in assertTruthWithDefaults.",
              "_finder": "keeps track of all contracts within the UMA system based on their interfaceName."
            }
          },
          "disputeAssertion(bytes32,address)": {
            "details": "The caller must approve this contract to spend at least bond amount of currency for the associated assertion.",
            "params": {
              "assertionId": "unique identifier for the assertion to dispute.",
              "disputer": "receives bonds back at settlement."
            }
          },
          "getAssertion(bytes32)": {
            "params": {
              "assertionId": "unique identifier for the assertion to fetch information for."
            },
            "returns": {
              "_0": "assertion information about the assertion."
            }
          },
          "getAssertionResult(bytes32)": {
            "params": {
              "assertionId": "unique identifier for the assertion to fetch the resolution for."
            },
            "returns": {
              "_0": "resolution of the assertion."
            }
          },
          "getCurrentTime()": {
            "details": "Can be overridden to control contract time.",
            "returns": {
              "_0": "current block timestamp."
            }
          },
          "getMinimumBond(address)": {
            "params": {
              "currency": "currency to calculate the minimum bond for."
            },
            "returns": {
              "_0": "minimum bond amount."
            }
          },
          "owner()": {
            "details": "Returns the address of the current owner."
          },
          "renounceOwnership()": {
            "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
          },
          "setAdminProperties(address,uint64,uint256)": {
            "details": "Only callable by the contract owner (UMA governor).",
            "params": {
              "_burnedBondPercentage": "the percentage of the bond that is sent as fee to UMA Store contract on disputes.",
              "_defaultCurrency": "the default currency to bond asserters in assertTruthWithDefaults.",
              "_defaultLiveness": "the default liveness for assertions in assertTruthWithDefaults."
            }
          },
          "settleAndGetAssertionResult(bytes32)": {
            "params": {
              "assertionId": "unique identifier for the assertion to resolve and return the resolution for."
            },
            "returns": {
              "_0": "resolution of the assertion."
            }
          },
          "settleAssertion(bytes32)": {
            "params": {
              "assertionId": "unique identifier for the assertion to resolve."
            }
          },
          "stampAssertion(bytes32)": {
            "params": {
              "assertionId": "unique identifier for the assertion to construct ancillary data for."
            },
            "returns": {
              "_0": "ancillaryData stamped assertion information."
            }
          },
          "syncUmaParams(bytes32,address)": {
            "params": {
              "currency": "currency to fetch information for and store locally.",
              "identifier": "identifier to fetch information for and store locally."
            }
          },
          "transferOwnership(address)": {
            "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
          }
        },
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {
          "assertTruth(bytes,address,address,address,uint64,address,uint256,bytes32,bytes32)": {
            "notice": "Asserts a truth about the world, using a fully custom configuration."
          },
          "assertTruthWithDefaults(bytes,address)": {
            "notice": "Asserts a truth about the world, using the default currency and liveness. No callback recipient or escalation manager is enabled. The caller is expected to provide a bond of finalFee/burnedBondPercentage (with burnedBondPercentage set to 50%, the bond is 2x final fee) of the default currency."
          },
          "constructor": {
            "notice": "Construct the OptimisticOracleV3 contract."
          },
          "defaultIdentifier()": {
            "notice": "Returns the default identifier used by the Optimistic Oracle V3."
          },
          "disputeAssertion(bytes32,address)": {
            "notice": "Disputes an assertion. Depending on how the assertion was configured, this may either escalate to the UMA DVM or the configured escalation manager for arbitration."
          },
          "getAssertion(bytes32)": {
            "notice": "Fetches information about a specific assertion and returns it."
          },
          "getAssertionResult(bytes32)": {
            "notice": "Fetches the resolution of a specific assertion and returns it. If the assertion has not been settled then this will revert. If the assertion was disputed and configured to discard the oracle resolution return false."
          },
          "getCurrentTime()": {
            "notice": "Returns the current block timestamp."
          },
          "getMinimumBond(address)": {
            "notice": "Returns the minimum bond amount required to make an assertion. This is calculated as the final fee of the currency divided by the burnedBondPercentage. If burn percentage is 50% then the min bond is 2x the final fee."
          },
          "setAdminProperties(address,uint64,uint256)": {
            "notice": "Sets the default currency, liveness, and burned bond percentage."
          },
          "settleAndGetAssertionResult(bytes32)": {
            "notice": "Settles an assertion and returns the resolution."
          },
          "settleAssertion(bytes32)": {
            "notice": "Resolves an assertion. If the assertion has not been disputed, the assertion is resolved as true and the asserter receives the bond. If the assertion has been disputed, the assertion is resolved depending on the oracle result. Based on the result, the asserter or disputer receives the bond. If the assertion was disputed then an amount of the bond is sent to the UMA Store as an oracle fee based on the burnedBondPercentage. The remainder of the bond is returned to the asserter or disputer."
          },
          "stampAssertion(bytes32)": {
            "notice": "Appends information onto an assertionId to construct ancillary data used for dispute resolution."
          },
          "syncUmaParams(bytes32,address)": {
            "notice": "Fetches information about a specific identifier & currency from the UMA contracts and stores a local copy of the information within this contract. This is used to save gas when making assertions as we can avoid an external call to the UMA contracts to fetch this."
          }
        },
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        "@across-protocol/=node_modules/@across-protocol/",
        "@ensdomains/=node_modules/@ensdomains/",
        "@eth-optimism/=node_modules/@across-protocol/contracts/node_modules/@eth-optimism/",
        "@gnosis.pm/=node_modules/@gnosis.pm/",
        "@maticnetwork/=node_modules/@maticnetwork/",
        "@openzeppelin/=node_modules/@openzeppelin/",
        "@uma/=node_modules/@uma/",
        "@uniswap/=node_modules/@uniswap/",
        "base64-sol/=node_modules/base64-sol/",
        "ds-test/=lib/forge-std/lib/ds-test/src/",
        "eth-gas-reporter/=node_modules/eth-gas-reporter/",
        "forge-std/=lib/forge-std/src/",
        "hardhat-deploy/=node_modules/hardhat-deploy/",
        "hardhat/=node_modules/hardhat/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 200
      },
      "metadata": {
        "bytecodeHash": "ipfs"
      },
      "compilationTarget": {
        "node_modules/@uma/core/contracts/optimistic-oracle-v3/implementation/OptimisticOracleV3.sol": "OptimisticOracleV3"
      },
      "libraries": {}
    },
    "sources": {
      "node_modules/@openzeppelin/contracts/access/Ownable.sol": {
        "keccak256": "0x24e0364e503a9bbde94c715d26573a76f14cd2a202d45f96f52134ab806b67b9",
        "urls": [
          "bzz-raw://e12cbaa7378fd9b62280e4e1d164bedcb4399ce238f5f98fc0eefb7e50577981",
          "dweb:/ipfs/QmXRoFGUgfsaRkoPT5bxNMtSayKTQ8GZATLPXf69HcRA51"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/token/ERC20/IERC20.sol": {
        "keccak256": "0xbbc8ac883ac3c0078ce5ad3e288fbb3ffcc8a30c3a98c0fda0114d64fc44fca2",
        "urls": [
          "bzz-raw://87a7a5d2f6f63f84598af02b8c50ca2df2631cb8ba2453e8d95fcb17e4be9824",
          "dweb:/ipfs/QmR76hqtAcRqoFj33tmNjcWTLrgNsAaakYwnKZ8zoJtKei"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol": {
        "keccak256": "0xc3d946432c0ddbb1f846a0d3985be71299df331b91d06732152117f62f0be2b5",
        "urls": [
          "bzz-raw://4632c341a06ba5c079b51ca5a915efab4e6ab57735b37839b3e8365ff806a43e",
          "dweb:/ipfs/QmTHT3xHYed2wajEoA5qu7ii2BxLpPhQZHwAhtLK5Z7ANK"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/utils/Address.sol": {
        "keccak256": "0x2ccf9d2313a313d41a791505f2b5abfdc62191b5d4334f7f7a82691c088a1c87",
        "urls": [
          "bzz-raw://b3a57d0854b2fdce6ebff933a48dca2445643d1eccfc27f00292e937f26c6a58",
          "dweb:/ipfs/QmW45rZooS9TqR4YXUbjRbtf2Bpb5ouSarBvfW1LdGprvV"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/utils/Context.sol": {
        "keccak256": "0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7",
        "urls": [
          "bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92",
          "dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/utils/math/SafeMath.sol": {
        "keccak256": "0xa2f576be637946f767aa56601c26d717f48a0aff44f82e46f13807eea1009a21",
        "urls": [
          "bzz-raw://973868f808e88e21a1a0a01d4839314515ee337ad096286c88e41b74dcc11fc2",
          "dweb:/ipfs/QmfYuZxRfx2J2xdk4EXN7jKg4bUYEMTaYk9BAw9Bqn4o2Y"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/utils/math/SignedSafeMath.sol": {
        "keccak256": "0x62f53f262fabbbc6d8ab49488d8fce36370351aff2b8d3898d499d68995a71c2",
        "urls": [
          "bzz-raw://efd599513c2f313a3f5e9536beb2b80a0d2b3dd34202c174a707d81b7dc751ce",
          "dweb:/ipfs/QmdDiENVFSyWjfFskNLnViMH77DHg3oDthkSZk7dMzNNKB"
        ],
        "license": "MIT"
      },
      "node_modules/@uma/core/contracts/common/implementation/AddressWhitelist.sol": {
        "keccak256": "0xc1f20b925f9d37230aaf7bbee536f9a9b08e4772864f0a243ff1b69b54710fee",
        "urls": [
          "bzz-raw://55bc6782bd269463214dbafa8702b2ff33910fd4a51ab24d775aabb15e278bcc",
          "dweb:/ipfs/QmV41DnGByGBtg8gk7MG6Nr3xYo5R5varZ8cewywdKNATQ"
        ],
        "license": "AGPL-3.0-only"
      },
      "node_modules/@uma/core/contracts/common/implementation/AncillaryData.sol": {
        "keccak256": "0x8ff33ac32d3e6de25de9e0ac2c0ff9a621f187fa97e9ee84092b327471baa3ce",
        "urls": [
          "bzz-raw://0bbaed49756e8cf7ef405e132f441cd7a735ac6186a200b0179147e7d137b74a",
          "dweb:/ipfs/QmeSBJX5a61LZPxbkUKS2NF4LSxemgDwjD65fCAmyP7PX2"
        ],
        "license": "AGPL-3.0-only"
      },
      "node_modules/@uma/core/contracts/common/implementation/FixedPoint.sol": {
        "keccak256": "0x996b97cc4fa5da4064e3aee500edc6972485d59a9334ceec81155e2c2f484dae",
        "urls": [
          "bzz-raw://8d7c028926dc2b27e7dc103363dca8a43f60b3351f4a14bcb702660f95c68663",
          "dweb:/ipfs/QmXz4ieFjP5RxJ35F8GbPryYEGvFmxc4Gqx8EK7N57ixzT"
        ],
        "license": "AGPL-3.0-only"
      },
      "node_modules/@uma/core/contracts/common/implementation/Lockable.sol": {
        "keccak256": "0x41d78fcce54598ad5f26bc0b778c0f4fedbd836401625e49e736979f69a87ef0",
        "urls": [
          "bzz-raw://4ce111bb50441ef5125e7d42284f6debbc17fd589515d7b8cede7e9d1d5f0ede",
          "dweb:/ipfs/QmaXiXACWVEDDHoCHNXdVBoNpf8QNHkUZ1kf5MfbxfL6jj"
        ],
        "license": "AGPL-3.0-only"
      },
      "node_modules/@uma/core/contracts/common/implementation/MultiCaller.sol": {
        "keccak256": "0x9f6afe5bafc5e16fe8d63010a740ec3a88a9f00a7236ea7e5b039a2f50eb346e",
        "urls": [
          "bzz-raw://a971572a4a9ed32e5ec15ac384af593d9499778f6ec593dbdba67d44ced4c7d8",
          "dweb:/ipfs/QmbdpfhhnUyoHWe7TPFBZxT6R6zyxJEDcGBNwDt5ncweRv"
        ],
        "license": "AGPL-3.0-only"
      },
      "node_modules/@uma/core/contracts/common/interfaces/AddressWhitelistInterface.sol": {
        "keccak256": "0x22fb8588dff1d5cff76a28111d6c9b190765d99facd93c8ff3b54771f245c0d8",
        "urls": [
          "bzz-raw://5ecd993f00de290a3c7bf21da23a9439cf2ccb22028316df92b79780ac8aa533",
          "dweb:/ipfs/QmTZ7x7U4EEzTacqapzSdFs2np5WNsqm4XeUBqzQxxDJei"
        ],
        "license": "AGPL-3.0-only"
      },
      "node_modules/@uma/core/contracts/data-verification-mechanism/implementation/Constants.sol": {
        "keccak256": "0xe40957105a9240c6bcb9753fd0011fe9f382c437cd6771c57bf7a96f8ceb9c84",
        "urls": [
          "bzz-raw://cbf0d25e841b1f5c4022d09fb29220cb428139443cb29c4ab8dbfff71dffcc05",
          "dweb:/ipfs/QmSVVr5wH1tZi6WmKyuy1K8yS6JN4DeK5kWaZpPKtXiqkK"
        ],
        "license": "AGPL-3.0-only"
      },
      "node_modules/@uma/core/contracts/data-verification-mechanism/interfaces/FinderInterface.sol": {
        "keccak256": "0x9166fbfe08e954eb86d33c114fcde7ce4fd0dda5d9d28b31210582bfc769fa86",
        "urls": [
          "bzz-raw://e611e12bcaaebfdf65b67c566ff1d34708e757f01a445bd87c55862e89383b81",
          "dweb:/ipfs/QmYNSq5oopTShdS6j4VWKqoLxmQSRKmWebCxw6K4LfmKrf"
        ],
        "license": "AGPL-3.0-only"
      },
      "node_modules/@uma/core/contracts/data-verification-mechanism/interfaces/IdentifierWhitelistInterface.sol": {
        "keccak256": "0x9ae86a30dd1a8c03fb2c6d27be570bb30c4c0b13ac63cde8620b7e4b51d88dc9",
        "urls": [
          "bzz-raw://a71d2aff48e075ecab56a9c9767775d1d77e04ec9191fed124e71003220549e3",
          "dweb:/ipfs/QmYPWsZXro6fzqpZY6UxQ5X8znEXfLp2sun8oXzdz8bTyc"
        ],
        "license": "AGPL-3.0-only"
      },
      "node_modules/@uma/core/contracts/data-verification-mechanism/interfaces/OracleAncillaryInterface.sol": {
        "keccak256": "0xd58b41fe1e389f7871db7c04f2c05c1aac1d0455bbc521534da81fd657016a1f",
        "urls": [
          "bzz-raw://cc532e9c550bb1bba0daa33fda748590cd06ce94a9566fe65dac04e7d40977bc",
          "dweb:/ipfs/QmZKvfRW2LJFt5MWZbKuU9ujkXnS2hkPUJVj8wwJWcuZGX"
        ],
        "license": "AGPL-3.0-only"
      },
      "node_modules/@uma/core/contracts/data-verification-mechanism/interfaces/StoreInterface.sol": {
        "keccak256": "0xbb73671684309c91ad5ef3da1474051d03f2e7d5882bed7f5c4317e5d4c768df",
        "urls": [
          "bzz-raw://32386544d3119fd0187a8c4e8b01c739f508ab863faa04345cabc2544081f9e8",
          "dweb:/ipfs/QmYszDURs1x75rsejZkGt9zCkASXnJtufbNsL3XHe2eJPQ"
        ],
        "license": "AGPL-3.0-only"
      },
      "node_modules/@uma/core/contracts/optimistic-oracle-v3/implementation/OptimisticOracleV3.sol": {
        "keccak256": "0xeba5082c48c3d891f2422b8c0d1d5d6552ab47b5d538db7ff05ffb2f3db25ffc",
        "urls": [
          "bzz-raw://d818630e1c094792613a0539aa0a7677ca8fa92a5308eaf4ff7cf8ea8a4c547e",
          "dweb:/ipfs/QmSM78A3afY6osh4VAmyJX2E4Qyg4qcY1KwY5uFnSK4Yia"
        ],
        "license": "AGPL-3.0-only"
      },
      "node_modules/@uma/core/contracts/optimistic-oracle-v3/interfaces/EscalationManagerInterface.sol": {
        "keccak256": "0xce31adf62ae47468bab181bf1137b05e8ac0a003f019c343ac137a76ea32efc7",
        "urls": [
          "bzz-raw://eb1b93b648adf4130fdfe7a62d817cda0519e7760a50b90f16a3c46cee4c0967",
          "dweb:/ipfs/QmNPD4TRAm9kqqQDKQabqZgaorkJNov96iLgxsm5HRTSZN"
        ],
        "license": "AGPL-3.0-only"
      },
      "node_modules/@uma/core/contracts/optimistic-oracle-v3/interfaces/OptimisticOracleV3CallbackRecipientInterface.sol": {
        "keccak256": "0x79f90bc84ed5d394380e99f0a5d1b219abd9016bc3a02fad0099014af08af03e",
        "urls": [
          "bzz-raw://dc1b7b847eb711750bc76ab45a13294b05fc09e361294a6bdffb90cb15f50b63",
          "dweb:/ipfs/QmQSs2R7mmGojGdNkqP75Vf7LajRkfJ1oGuYAUCHYGmPEQ"
        ],
        "license": "AGPL-3.0-only"
      },
      "node_modules/@uma/core/contracts/optimistic-oracle-v3/interfaces/OptimisticOracleV3Interface.sol": {
        "keccak256": "0xf31322bfd64854f0bfa92051d6ec711c1eed15d8042f394f5c24c05378218367",
        "urls": [
          "bzz-raw://535bc2a6060e86a49524fd3c0062afcf83077530cefb3c1b8179b832f03ca81e",
          "dweb:/ipfs/QmQZhqn6oUiebSWEKbqcmiMGkqAb8B59WsRAyFU8WY84ct"
        ],
        "license": "AGPL-3.0-only"
      }
    },
    "version": 1
  },
  "ast": {
    "absolutePath": "node_modules/@uma/core/contracts/optimistic-oracle-v3/implementation/OptimisticOracleV3.sol",
    "id": 52026,
    "exportedSymbols": {
      "Address": [
        45619
      ],
      "AddressWhitelist": [
        46235
      ],
      "AddressWhitelistInterface": [
        49565
      ],
      "AncillaryData": [
        46643
      ],
      "Context": [
        45641
      ],
      "EscalationManagerInterface": [
        52212
      ],
      "FinderInterface": [
        50187
      ],
      "FixedPoint": [
        48499
      ],
      "IERC20": [
        45075
      ],
      "IdentifierWhitelistInterface": [
        50211
      ],
      "Lockable": [
        48576
      ],
      "MultiCaller": [
        48655
      ],
      "OptimisticOracleConstraints": [
        49667
      ],
      "OptimisticOracleV3": [
        52025
      ],
      "OptimisticOracleV3CallbackRecipientInterface": [
        52230
      ],
      "OptimisticOracleV3Interface": [
        52420
      ],
      "OracleAncillaryInterface": [
        50249
      ],
      "OracleInterfaces": [
        49662
      ],
      "Ownable": [
        44409
      ],
      "SafeERC20": [
        45324
      ],
      "SafeMath": [
        45953
      ],
      "SignedSafeMath": [
        46017
      ],
      "StoreInterface": [
        50294
      ]
    },
    "nodeType": "SourceUnit",
    "src": "42:26540:51",
    "nodes": [
      {
        "id": 50730,
        "nodeType": "PragmaDirective",
        "src": "42:23:51",
        "nodes": [],
        "literals": [
          "solidity",
          "0.8",
          ".16"
        ]
      },
      {
        "id": 50731,
        "nodeType": "ImportDirective",
        "src": "67:52:51",
        "nodes": [],
        "absolutePath": "node_modules/@openzeppelin/contracts/access/Ownable.sol",
        "file": "@openzeppelin/contracts/access/Ownable.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 52026,
        "sourceUnit": 44410,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 50732,
        "nodeType": "ImportDirective",
        "src": "120:65:51",
        "nodes": [],
        "absolutePath": "node_modules/@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
        "file": "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 52026,
        "sourceUnit": 45325,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 50733,
        "nodeType": "ImportDirective",
        "src": "187:72:51",
        "nodes": [],
        "absolutePath": "node_modules/@uma/core/contracts/optimistic-oracle-v3/interfaces/OptimisticOracleV3CallbackRecipientInterface.sol",
        "file": "../interfaces/OptimisticOracleV3CallbackRecipientInterface.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 52026,
        "sourceUnit": 52231,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 50734,
        "nodeType": "ImportDirective",
        "src": "260:55:51",
        "nodes": [],
        "absolutePath": "node_modules/@uma/core/contracts/optimistic-oracle-v3/interfaces/OptimisticOracleV3Interface.sol",
        "file": "../interfaces/OptimisticOracleV3Interface.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 52026,
        "sourceUnit": 52421,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 50735,
        "nodeType": "ImportDirective",
        "src": "316:54:51",
        "nodes": [],
        "absolutePath": "node_modules/@uma/core/contracts/optimistic-oracle-v3/interfaces/EscalationManagerInterface.sol",
        "file": "../interfaces/EscalationManagerInterface.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 52026,
        "sourceUnit": 52213,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 50736,
        "nodeType": "ImportDirective",
        "src": "372:72:51",
        "nodes": [],
        "absolutePath": "node_modules/@uma/core/contracts/data-verification-mechanism/implementation/Constants.sol",
        "file": "../../data-verification-mechanism/implementation/Constants.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 52026,
        "sourceUnit": 49668,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 50737,
        "nodeType": "ImportDirective",
        "src": "445:74:51",
        "nodes": [],
        "absolutePath": "node_modules/@uma/core/contracts/data-verification-mechanism/interfaces/FinderInterface.sol",
        "file": "../../data-verification-mechanism/interfaces/FinderInterface.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 52026,
        "sourceUnit": 50188,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 50738,
        "nodeType": "ImportDirective",
        "src": "520:87:51",
        "nodes": [],
        "absolutePath": "node_modules/@uma/core/contracts/data-verification-mechanism/interfaces/IdentifierWhitelistInterface.sol",
        "file": "../../data-verification-mechanism/interfaces/IdentifierWhitelistInterface.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 52026,
        "sourceUnit": 50212,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 50739,
        "nodeType": "ImportDirective",
        "src": "608:83:51",
        "nodes": [],
        "absolutePath": "node_modules/@uma/core/contracts/data-verification-mechanism/interfaces/OracleAncillaryInterface.sol",
        "file": "../../data-verification-mechanism/interfaces/OracleAncillaryInterface.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 52026,
        "sourceUnit": 50250,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 50740,
        "nodeType": "ImportDirective",
        "src": "692:73:51",
        "nodes": [],
        "absolutePath": "node_modules/@uma/core/contracts/data-verification-mechanism/interfaces/StoreInterface.sol",
        "file": "../../data-verification-mechanism/interfaces/StoreInterface.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 52026,
        "sourceUnit": 50295,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 50741,
        "nodeType": "ImportDirective",
        "src": "767:58:51",
        "nodes": [],
        "absolutePath": "node_modules/@uma/core/contracts/common/implementation/AddressWhitelist.sol",
        "file": "../../common/implementation/AddressWhitelist.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 52026,
        "sourceUnit": 46236,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 50742,
        "nodeType": "ImportDirective",
        "src": "826:55:51",
        "nodes": [],
        "absolutePath": "node_modules/@uma/core/contracts/common/implementation/AncillaryData.sol",
        "file": "../../common/implementation/AncillaryData.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 52026,
        "sourceUnit": 46644,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 50743,
        "nodeType": "ImportDirective",
        "src": "882:50:51",
        "nodes": [],
        "absolutePath": "node_modules/@uma/core/contracts/common/implementation/Lockable.sol",
        "file": "../../common/implementation/Lockable.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 52026,
        "sourceUnit": 48577,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 50744,
        "nodeType": "ImportDirective",
        "src": "933:53:51",
        "nodes": [],
        "absolutePath": "node_modules/@uma/core/contracts/common/implementation/MultiCaller.sol",
        "file": "../../common/implementation/MultiCaller.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 52026,
        "sourceUnit": 48656,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 52025,
        "nodeType": "ContractDefinition",
        "src": "1550:25031:51",
        "nodes": [
          {
            "id": 50757,
            "nodeType": "UsingForDirective",
            "src": "1647:27:51",
            "nodes": [],
            "global": false,
            "libraryName": {
              "id": 50754,
              "name": "SafeERC20",
              "nameLocations": [
                "1653:9:51"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 45324,
              "src": "1653:9:51"
            },
            "typeName": {
              "id": 50756,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 50755,
                "name": "IERC20",
                "nameLocations": [
                  "1667:6:51"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 45075,
                "src": "1667:6:51"
              },
              "referencedDeclaration": 45075,
              "src": "1667:6:51",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IERC20_$45075",
                "typeString": "contract IERC20"
              }
            }
          },
          {
            "id": 50760,
            "nodeType": "VariableDeclaration",
            "src": "1680:39:51",
            "nodes": [],
            "constant": false,
            "functionSelector": "b9a3c84c",
            "mutability": "immutable",
            "name": "finder",
            "nameLocation": "1713:6:51",
            "scope": 52025,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_FinderInterface_$50187",
              "typeString": "contract FinderInterface"
            },
            "typeName": {
              "id": 50759,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 50758,
                "name": "FinderInterface",
                "nameLocations": [
                  "1680:15:51"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 50187,
                "src": "1680:15:51"
              },
              "referencedDeclaration": 50187,
              "src": "1680:15:51",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_FinderInterface_$50187",
                "typeString": "contract FinderInterface"
              }
            },
            "visibility": "public"
          },
          {
            "id": 50762,
            "nodeType": "VariableDeclaration",
            "src": "1814:27:51",
            "nodes": [],
            "constant": false,
            "functionSelector": "a7af2d0f",
            "mutability": "mutable",
            "name": "cachedOracle",
            "nameLocation": "1829:12:51",
            "scope": 52025,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 50761,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "1814:7:51",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "id": 50767,
            "nodeType": "VariableDeclaration",
            "src": "1847:63:51",
            "nodes": [],
            "constant": false,
            "functionSelector": "70762157",
            "mutability": "mutable",
            "name": "cachedCurrencies",
            "nameLocation": "1894:16:51",
            "scope": 52025,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_struct$_WhitelistedCurrency_$52277_storage_$",
              "typeString": "mapping(address => struct OptimisticOracleV3Interface.WhitelistedCurrency)"
            },
            "typeName": {
              "id": 50766,
              "keyType": {
                "id": 50763,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "1855:7:51",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "1847:39:51",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_struct$_WhitelistedCurrency_$52277_storage_$",
                "typeString": "mapping(address => struct OptimisticOracleV3Interface.WhitelistedCurrency)"
              },
              "valueType": {
                "id": 50765,
                "nodeType": "UserDefinedTypeName",
                "pathNode": {
                  "id": 50764,
                  "name": "WhitelistedCurrency",
                  "nameLocations": [
                    "1866:19:51"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 52277,
                  "src": "1866:19:51"
                },
                "referencedDeclaration": 52277,
                "src": "1866:19:51",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_WhitelistedCurrency_$52277_storage_ptr",
                  "typeString": "struct OptimisticOracleV3Interface.WhitelistedCurrency"
                }
              }
            },
            "visibility": "public"
          },
          {
            "id": 50771,
            "nodeType": "VariableDeclaration",
            "src": "1916:49:51",
            "nodes": [],
            "constant": false,
            "functionSelector": "530dd392",
            "mutability": "mutable",
            "name": "cachedIdentifiers",
            "nameLocation": "1948:17:51",
            "scope": 52025,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_bytes32_$_t_bool_$",
              "typeString": "mapping(bytes32 => bool)"
            },
            "typeName": {
              "id": 50770,
              "keyType": {
                "id": 50768,
                "name": "bytes32",
                "nodeType": "ElementaryTypeName",
                "src": "1924:7:51",
                "typeDescriptions": {
                  "typeIdentifier": "t_bytes32",
                  "typeString": "bytes32"
                }
              },
              "nodeType": "Mapping",
              "src": "1916:24:51",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_bytes32_$_t_bool_$",
                "typeString": "mapping(bytes32 => bool)"
              },
              "valueType": {
                "id": 50769,
                "name": "bool",
                "nodeType": "ElementaryTypeName",
                "src": "1935:4:51",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                }
              }
            },
            "visibility": "public"
          },
          {
            "id": 50776,
            "nodeType": "VariableDeclaration",
            "src": "1972:47:51",
            "nodes": [],
            "constant": false,
            "functionSelector": "d60715b5",
            "mutability": "mutable",
            "name": "assertions",
            "nameLocation": "2009:10:51",
            "scope": 52025,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_Assertion_$52272_storage_$",
              "typeString": "mapping(bytes32 => struct OptimisticOracleV3Interface.Assertion)"
            },
            "typeName": {
              "id": 50775,
              "keyType": {
                "id": 50772,
                "name": "bytes32",
                "nodeType": "ElementaryTypeName",
                "src": "1980:7:51",
                "typeDescriptions": {
                  "typeIdentifier": "t_bytes32",
                  "typeString": "bytes32"
                }
              },
              "nodeType": "Mapping",
              "src": "1972:29:51",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_Assertion_$52272_storage_$",
                "typeString": "mapping(bytes32 => struct OptimisticOracleV3Interface.Assertion)"
              },
              "valueType": {
                "id": 50774,
                "nodeType": "UserDefinedTypeName",
                "pathNode": {
                  "id": 50773,
                  "name": "Assertion",
                  "nameLocations": [
                    "1991:9:51"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 52272,
                  "src": "1991:9:51"
                },
                "referencedDeclaration": 52272,
                "src": "1991:9:51",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_Assertion_$52272_storage_ptr",
                  "typeString": "struct OptimisticOracleV3Interface.Assertion"
                }
              }
            },
            "visibility": "public"
          },
          {
            "id": 50778,
            "nodeType": "VariableDeclaration",
            "src": "2078:35:51",
            "nodes": [],
            "constant": false,
            "functionSelector": "08e7c3e6",
            "mutability": "mutable",
            "name": "burnedBondPercentage",
            "nameLocation": "2093:20:51",
            "scope": 52025,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 50777,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "2078:7:51",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "id": 50781,
            "nodeType": "VariableDeclaration",
            "src": "2206:58:51",
            "nodes": [],
            "baseFunctions": [
              52283
            ],
            "constant": true,
            "functionSelector": "d509b017",
            "mutability": "constant",
            "name": "defaultIdentifier",
            "nameLocation": "2230:17:51",
            "scope": 52025,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bytes32",
              "typeString": "bytes32"
            },
            "typeName": {
              "id": 50779,
              "name": "bytes32",
              "nodeType": "ElementaryTypeName",
              "src": "2206:7:51",
              "typeDescriptions": {
                "typeIdentifier": "t_bytes32",
                "typeString": "bytes32"
              }
            },
            "value": {
              "hexValue": "4153534552545f5452555448",
              "id": 50780,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "string",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "2250:14:51",
              "typeDescriptions": {
                "typeIdentifier": "t_stringliteral_269e5819b5f3de6f4d8e3feca7553924310a9b68d3029a8b150499d5fb3ebaf5",
                "typeString": "literal_string \"ASSERT_TRUTH\""
              },
              "value": "ASSERT_TRUTH"
            },
            "visibility": "public"
          },
          {
            "id": 50784,
            "nodeType": "VariableDeclaration",
            "src": "2270:43:51",
            "nodes": [],
            "constant": true,
            "functionSelector": "da03b36e",
            "mutability": "constant",
            "name": "numericalTrue",
            "nameLocation": "2293:13:51",
            "scope": 52025,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_int256",
              "typeString": "int256"
            },
            "typeName": {
              "id": 50782,
              "name": "int256",
              "nodeType": "ElementaryTypeName",
              "src": "2270:6:51",
              "typeDescriptions": {
                "typeIdentifier": "t_int256",
                "typeString": "int256"
              }
            },
            "value": {
              "hexValue": "31653138",
              "id": 50783,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "2309:4:51",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_1000000000000000000_by_1",
                "typeString": "int_const 1000000000000000000"
              },
              "value": "1e18"
            },
            "visibility": "public"
          },
          {
            "id": 50787,
            "nodeType": "VariableDeclaration",
            "src": "2356:29:51",
            "nodes": [],
            "constant": false,
            "functionSelector": "20402e1d",
            "mutability": "mutable",
            "name": "defaultCurrency",
            "nameLocation": "2370:15:51",
            "scope": 52025,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_IERC20_$45075",
              "typeString": "contract IERC20"
            },
            "typeName": {
              "id": 50786,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 50785,
                "name": "IERC20",
                "nameLocations": [
                  "2356:6:51"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 45075,
                "src": "2356:6:51"
              },
              "referencedDeclaration": 45075,
              "src": "2356:6:51",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IERC20_$45075",
                "typeString": "contract IERC20"
              }
            },
            "visibility": "public"
          },
          {
            "id": 50789,
            "nodeType": "VariableDeclaration",
            "src": "2391:29:51",
            "nodes": [],
            "constant": false,
            "functionSelector": "fe4e1983",
            "mutability": "mutable",
            "name": "defaultLiveness",
            "nameLocation": "2405:15:51",
            "scope": 52025,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint64",
              "typeString": "uint64"
            },
            "typeName": {
              "id": 50788,
              "name": "uint64",
              "nodeType": "ElementaryTypeName",
              "src": "2391:6:51",
              "typeDescriptions": {
                "typeIdentifier": "t_uint64",
                "typeString": "uint64"
              }
            },
            "visibility": "public"
          },
          {
            "id": 50812,
            "nodeType": "FunctionDefinition",
            "src": "2797:222:51",
            "nodes": [],
            "body": {
              "id": 50811,
              "nodeType": "Block",
              "src": "2914:105:51",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 50803,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 50801,
                      "name": "finder",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 50760,
                      "src": "2924:6:51",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_FinderInterface_$50187",
                        "typeString": "contract FinderInterface"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 50802,
                      "name": "_finder",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 50793,
                      "src": "2933:7:51",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_FinderInterface_$50187",
                        "typeString": "contract FinderInterface"
                      }
                    },
                    "src": "2924:16:51",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_FinderInterface_$50187",
                      "typeString": "contract FinderInterface"
                    }
                  },
                  "id": 50804,
                  "nodeType": "ExpressionStatement",
                  "src": "2924:16:51"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 50806,
                        "name": "_defaultCurrency",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 50796,
                        "src": "2969:16:51",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$45075",
                          "typeString": "contract IERC20"
                        }
                      },
                      {
                        "id": 50807,
                        "name": "_defaultLiveness",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 50798,
                        "src": "2987:16:51",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint64",
                          "typeString": "uint64"
                        }
                      },
                      {
                        "hexValue": "302e35653138",
                        "id": 50808,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3005:6:51",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_500000000000000000_by_1",
                          "typeString": "int_const 500000000000000000"
                        },
                        "value": "0.5e18"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_IERC20_$45075",
                          "typeString": "contract IERC20"
                        },
                        {
                          "typeIdentifier": "t_uint64",
                          "typeString": "uint64"
                        },
                        {
                          "typeIdentifier": "t_rational_500000000000000000_by_1",
                          "typeString": "int_const 500000000000000000"
                        }
                      ],
                      "id": 50805,
                      "name": "setAdminProperties",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 50866,
                      "src": "2950:18:51",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$45075_$_t_uint64_$_t_uint256_$returns$__$",
                        "typeString": "function (contract IERC20,uint64,uint256)"
                      }
                    },
                    "id": 50809,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2950:62:51",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 50810,
                  "nodeType": "ExpressionStatement",
                  "src": "2950:62:51"
                }
              ]
            },
            "documentation": {
              "id": 50790,
              "nodeType": "StructuredDocumentation",
              "src": "2427:365:51",
              "text": " @notice Construct the OptimisticOracleV3 contract.\n @param _finder keeps track of all contracts within the UMA system based on their interfaceName.\n @param _defaultCurrency the default currency to bond asserters in assertTruthWithDefaults.\n @param _defaultLiveness the default liveness for assertions in assertTruthWithDefaults."
            },
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "parameters": {
              "id": 50799,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 50793,
                  "mutability": "mutable",
                  "name": "_finder",
                  "nameLocation": "2834:7:51",
                  "nodeType": "VariableDeclaration",
                  "scope": 50812,
                  "src": "2818:23:51",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_FinderInterface_$50187",
                    "typeString": "contract FinderInterface"
                  },
                  "typeName": {
                    "id": 50792,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 50791,
                      "name": "FinderInterface",
                      "nameLocations": [
                        "2818:15:51"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 50187,
                      "src": "2818:15:51"
                    },
                    "referencedDeclaration": 50187,
                    "src": "2818:15:51",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_FinderInterface_$50187",
                      "typeString": "contract FinderInterface"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 50796,
                  "mutability": "mutable",
                  "name": "_defaultCurrency",
                  "nameLocation": "2858:16:51",
                  "nodeType": "VariableDeclaration",
                  "scope": 50812,
                  "src": "2851:23:51",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IERC20_$45075",
                    "typeString": "contract IERC20"
                  },
                  "typeName": {
                    "id": 50795,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 50794,
                      "name": "IERC20",
                      "nameLocations": [
                        "2851:6:51"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 45075,
                      "src": "2851:6:51"
                    },
                    "referencedDeclaration": 45075,
                    "src": "2851:6:51",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$45075",
                      "typeString": "contract IERC20"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 50798,
                  "mutability": "mutable",
                  "name": "_defaultLiveness",
                  "nameLocation": "2891:16:51",
                  "nodeType": "VariableDeclaration",
                  "scope": 50812,
                  "src": "2884:23:51",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint64",
                    "typeString": "uint64"
                  },
                  "typeName": {
                    "id": 50797,
                    "name": "uint64",
                    "nodeType": "ElementaryTypeName",
                    "src": "2884:6:51",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint64",
                      "typeString": "uint64"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2808:105:51"
            },
            "returnParameters": {
              "id": 50800,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2914:0:51"
            },
            "scope": 52025,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 50866,
            "nodeType": "FunctionDefinition",
            "src": "3496:622:51",
            "nodes": [],
            "body": {
              "id": 50865,
              "nodeType": "Block",
              "src": "3652:466:51",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 50828,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 50826,
                          "name": "_burnedBondPercentage",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 50820,
                          "src": "3670:21:51",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<=",
                        "rightExpression": {
                          "hexValue": "31653138",
                          "id": 50827,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "3695:4:51",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1000000000000000000_by_1",
                            "typeString": "int_const 1000000000000000000"
                          },
                          "value": "1e18"
                        },
                        "src": "3670:29:51",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4275726e656420626f6e642070657263656e74616765203e20313030",
                        "id": 50829,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3701:30:51",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_1f6520715bfc21a83ea874c96105412f4ba76e98bfb9e357c8c354b6dec32a2c",
                          "typeString": "literal_string \"Burned bond percentage > 100\""
                        },
                        "value": "Burned bond percentage > 100"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_1f6520715bfc21a83ea874c96105412f4ba76e98bfb9e357c8c354b6dec32a2c",
                          "typeString": "literal_string \"Burned bond percentage > 100\""
                        }
                      ],
                      "id": 50825,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "3662:7:51",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 50830,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3662:70:51",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 50831,
                  "nodeType": "ExpressionStatement",
                  "src": "3662:70:51"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 50835,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 50833,
                          "name": "_burnedBondPercentage",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 50820,
                          "src": "3750:21:51",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 50834,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "3774:1:51",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "3750:25:51",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4275726e656420626f6e642070657263656e746167652069732030",
                        "id": 50836,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3777:29:51",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_66d19cc73d041b0b5f257705ca882a93ae3f1b04e574c2663314b4f519eb2a40",
                          "typeString": "literal_string \"Burned bond percentage is 0\""
                        },
                        "value": "Burned bond percentage is 0"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_66d19cc73d041b0b5f257705ca882a93ae3f1b04e574c2663314b4f519eb2a40",
                          "typeString": "literal_string \"Burned bond percentage is 0\""
                        }
                      ],
                      "id": 50832,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "3742:7:51",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 50837,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3742:65:51",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 50838,
                  "nodeType": "ExpressionStatement",
                  "src": "3742:65:51"
                },
                {
                  "expression": {
                    "id": 50841,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 50839,
                      "name": "burnedBondPercentage",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 50778,
                      "src": "3817:20:51",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 50840,
                      "name": "_burnedBondPercentage",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 50820,
                      "src": "3840:21:51",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "3817:44:51",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 50842,
                  "nodeType": "ExpressionStatement",
                  "src": "3817:44:51"
                },
                {
                  "expression": {
                    "id": 50845,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 50843,
                      "name": "defaultCurrency",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 50787,
                      "src": "3871:15:51",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20_$45075",
                        "typeString": "contract IERC20"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 50844,
                      "name": "_defaultCurrency",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 50816,
                      "src": "3889:16:51",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20_$45075",
                        "typeString": "contract IERC20"
                      }
                    },
                    "src": "3871:34:51",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$45075",
                      "typeString": "contract IERC20"
                    }
                  },
                  "id": 50846,
                  "nodeType": "ExpressionStatement",
                  "src": "3871:34:51"
                },
                {
                  "expression": {
                    "id": 50849,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 50847,
                      "name": "defaultLiveness",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 50789,
                      "src": "3915:15:51",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint64",
                        "typeString": "uint64"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 50848,
                      "name": "_defaultLiveness",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 50818,
                      "src": "3933:16:51",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint64",
                        "typeString": "uint64"
                      }
                    },
                    "src": "3915:34:51",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint64",
                      "typeString": "uint64"
                    }
                  },
                  "id": 50850,
                  "nodeType": "ExpressionStatement",
                  "src": "3915:34:51"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 50852,
                        "name": "defaultIdentifier",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 50781,
                        "src": "3973:17:51",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 50855,
                            "name": "_defaultCurrency",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 50816,
                            "src": "4000:16:51",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IERC20_$45075",
                              "typeString": "contract IERC20"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_IERC20_$45075",
                              "typeString": "contract IERC20"
                            }
                          ],
                          "id": 50854,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "3992:7:51",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 50853,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "3992:7:51",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 50856,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3992:25:51",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 50851,
                      "name": "syncUmaParams",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 51486,
                      "src": "3959:13:51",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$__$",
                        "typeString": "function (bytes32,address)"
                      }
                    },
                    "id": 50857,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3959:59:51",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 50858,
                  "nodeType": "ExpressionStatement",
                  "src": "3959:59:51"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 50860,
                        "name": "_defaultCurrency",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 50816,
                        "src": "4053:16:51",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$45075",
                          "typeString": "contract IERC20"
                        }
                      },
                      {
                        "id": 50861,
                        "name": "_defaultLiveness",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 50818,
                        "src": "4071:16:51",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint64",
                          "typeString": "uint64"
                        }
                      },
                      {
                        "id": 50862,
                        "name": "_burnedBondPercentage",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 50820,
                        "src": "4089:21:51",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_IERC20_$45075",
                          "typeString": "contract IERC20"
                        },
                        {
                          "typeIdentifier": "t_uint64",
                          "typeString": "uint64"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 50859,
                      "name": "AdminPropertiesSet",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 52419,
                      "src": "4034:18:51",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_contract$_IERC20_$45075_$_t_uint64_$_t_uint256_$returns$__$",
                        "typeString": "function (contract IERC20,uint64,uint256)"
                      }
                    },
                    "id": 50863,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4034:77:51",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 50864,
                  "nodeType": "EmitStatement",
                  "src": "4029:82:51"
                }
              ]
            },
            "documentation": {
              "id": 50813,
              "nodeType": "StructuredDocumentation",
              "src": "3025:466:51",
              "text": " @notice Sets the default currency, liveness, and burned bond percentage.\n @dev Only callable by the contract owner (UMA governor).\n @param _defaultCurrency the default currency to bond asserters in assertTruthWithDefaults.\n @param _defaultLiveness the default liveness for assertions in assertTruthWithDefaults.\n @param _burnedBondPercentage the percentage of the bond that is sent as fee to UMA Store contract on disputes."
            },
            "functionSelector": "82762520",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 50823,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 50822,
                  "name": "onlyOwner",
                  "nameLocations": [
                    "3642:9:51"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 44351,
                  "src": "3642:9:51"
                },
                "nodeType": "ModifierInvocation",
                "src": "3642:9:51"
              }
            ],
            "name": "setAdminProperties",
            "nameLocation": "3505:18:51",
            "parameters": {
              "id": 50821,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 50816,
                  "mutability": "mutable",
                  "name": "_defaultCurrency",
                  "nameLocation": "3540:16:51",
                  "nodeType": "VariableDeclaration",
                  "scope": 50866,
                  "src": "3533:23:51",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IERC20_$45075",
                    "typeString": "contract IERC20"
                  },
                  "typeName": {
                    "id": 50815,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 50814,
                      "name": "IERC20",
                      "nameLocations": [
                        "3533:6:51"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 45075,
                      "src": "3533:6:51"
                    },
                    "referencedDeclaration": 45075,
                    "src": "3533:6:51",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$45075",
                      "typeString": "contract IERC20"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 50818,
                  "mutability": "mutable",
                  "name": "_defaultLiveness",
                  "nameLocation": "3573:16:51",
                  "nodeType": "VariableDeclaration",
                  "scope": 50866,
                  "src": "3566:23:51",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint64",
                    "typeString": "uint64"
                  },
                  "typeName": {
                    "id": 50817,
                    "name": "uint64",
                    "nodeType": "ElementaryTypeName",
                    "src": "3566:6:51",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint64",
                      "typeString": "uint64"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 50820,
                  "mutability": "mutable",
                  "name": "_burnedBondPercentage",
                  "nameLocation": "3607:21:51",
                  "nodeType": "VariableDeclaration",
                  "scope": 50866,
                  "src": "3599:29:51",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 50819,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3599:7:51",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3523:111:51"
            },
            "returnParameters": {
              "id": 50824,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3652:0:51"
            },
            "scope": 52025,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 50903,
            "nodeType": "FunctionDefinition",
            "src": "4950:569:51",
            "nodes": [],
            "body": {
              "id": 50902,
              "nodeType": "Block",
              "src": "5050:469:51",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 50877,
                        "name": "claim",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 50869,
                        "src": "5170:5:51",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes calldata"
                        }
                      },
                      {
                        "id": 50878,
                        "name": "asserter",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 50871,
                        "src": "5193:8:51",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "hexValue": "30",
                            "id": 50881,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "5239:1:51",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 50880,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "5231:7:51",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 50879,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "5231:7:51",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 50882,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5231:10:51",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "hexValue": "30",
                            "id": 50885,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "5288:1:51",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 50884,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "5280:7:51",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 50883,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "5280:7:51",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 50886,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5280:10:51",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 50887,
                        "name": "defaultLiveness",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 50789,
                        "src": "5329:15:51",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint64",
                          "typeString": "uint64"
                        }
                      },
                      {
                        "id": 50888,
                        "name": "defaultCurrency",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 50787,
                        "src": "5362:15:51",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$45075",
                          "typeString": "contract IERC20"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "id": 50892,
                                "name": "defaultCurrency",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 50787,
                                "src": "5418:15:51",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_IERC20_$45075",
                                  "typeString": "contract IERC20"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_IERC20_$45075",
                                  "typeString": "contract IERC20"
                                }
                              ],
                              "id": 50891,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "5410:7:51",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 50890,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "5410:7:51",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 50893,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "5410:24:51",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 50889,
                          "name": "getMinimumBond",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 51585,
                          "src": "5395:14:51",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (address) view returns (uint256)"
                          }
                        },
                        "id": 50894,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5395:40:51",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 50895,
                        "name": "defaultIdentifier",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 50781,
                        "src": "5453:17:51",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "hexValue": "30",
                            "id": 50898,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "5496:1:51",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 50897,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "5488:7:51",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_bytes32_$",
                            "typeString": "type(bytes32)"
                          },
                          "typeName": {
                            "id": 50896,
                            "name": "bytes32",
                            "nodeType": "ElementaryTypeName",
                            "src": "5488:7:51",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 50899,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5488:10:51",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes calldata"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint64",
                          "typeString": "uint64"
                        },
                        {
                          "typeIdentifier": "t_contract$_IERC20_$45075",
                          "typeString": "contract IERC20"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      ],
                      "id": 50876,
                      "name": "assertTruth",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 51106,
                      "src": "5141:11:51",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bytes_memory_ptr_$_t_address_$_t_address_$_t_address_$_t_uint64_$_t_contract$_IERC20_$45075_$_t_uint256_$_t_bytes32_$_t_bytes32_$returns$_t_bytes32_$",
                        "typeString": "function (bytes memory,address,address,address,uint64,contract IERC20,uint256,bytes32,bytes32) returns (bytes32)"
                      }
                    },
                    "id": 50900,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5141:371:51",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "functionReturnParameters": 50875,
                  "id": 50901,
                  "nodeType": "Return",
                  "src": "5122:390:51"
                }
              ]
            },
            "baseFunctions": [
              52302
            ],
            "documentation": {
              "id": 50867,
              "nodeType": "StructuredDocumentation",
              "src": "4124:820:51",
              "text": " @notice Asserts a truth about the world, using the default currency and liveness. No callback recipient or\n escalation manager is enabled. The caller is expected to provide a bond of finalFee/burnedBondPercentage\n (with burnedBondPercentage set to 50%, the bond is 2x final fee) of the default currency.\n @dev The caller must approve this contract to spend at least the result of getMinimumBond(defaultCurrency).\n @param claim the truth claim being asserted. This is an assertion about the world, and is verified by disputers.\n @param asserter account that receives bonds back at settlement. This could be msg.sender or\n any other account that the caller wants to receive the bond at settlement time.\n @return assertionId unique identifier for this assertion."
            },
            "functionSelector": "36b13af4",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "assertTruthWithDefaults",
            "nameLocation": "4959:23:51",
            "parameters": {
              "id": 50872,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 50869,
                  "mutability": "mutable",
                  "name": "claim",
                  "nameLocation": "4998:5:51",
                  "nodeType": "VariableDeclaration",
                  "scope": 50903,
                  "src": "4983:20:51",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_calldata_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 50868,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "4983:5:51",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 50871,
                  "mutability": "mutable",
                  "name": "asserter",
                  "nameLocation": "5013:8:51",
                  "nodeType": "VariableDeclaration",
                  "scope": 50903,
                  "src": "5005:16:51",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 50870,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5005:7:51",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4982:40:51"
            },
            "returnParameters": {
              "id": 50875,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 50874,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 50903,
                  "src": "5041:7:51",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 50873,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "5041:7:51",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5040:9:51"
            },
            "scope": 52025,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 51106,
            "nodeType": "FunctionDefinition",
            "src": "7830:3495:51",
            "nodes": [],
            "body": {
              "id": 51105,
              "nodeType": "Block",
              "src": "8157:3168:51",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    50931
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 50931,
                      "mutability": "mutable",
                      "name": "time",
                      "nameLocation": "8174:4:51",
                      "nodeType": "VariableDeclaration",
                      "scope": 51105,
                      "src": "8167:11:51",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint64",
                        "typeString": "uint64"
                      },
                      "typeName": {
                        "id": 50930,
                        "name": "uint64",
                        "nodeType": "ElementaryTypeName",
                        "src": "8167:6:51",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint64",
                          "typeString": "uint64"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 50937,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 50934,
                          "name": "getCurrentTime",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 51549,
                          "src": "8188:14:51",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                            "typeString": "function () view returns (uint256)"
                          }
                        },
                        "id": 50935,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "8188:16:51",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 50933,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "ElementaryTypeNameExpression",
                      "src": "8181:6:51",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_uint64_$",
                        "typeString": "type(uint64)"
                      },
                      "typeName": {
                        "id": 50932,
                        "name": "uint64",
                        "nodeType": "ElementaryTypeName",
                        "src": "8181:6:51",
                        "typeDescriptions": {}
                      }
                    },
                    "id": 50936,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8181:24:51",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint64",
                      "typeString": "uint64"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "8167:38:51"
                },
                {
                  "expression": {
                    "id": 50949,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 50938,
                      "name": "assertionId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 50928,
                      "src": "8215:11:51",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 50940,
                          "name": "claim",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 50906,
                          "src": "8236:5:51",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_memory_ptr",
                            "typeString": "bytes memory"
                          }
                        },
                        {
                          "id": 50941,
                          "name": "bond",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 50919,
                          "src": "8243:4:51",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "id": 50942,
                          "name": "time",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 50931,
                          "src": "8249:4:51",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint64",
                            "typeString": "uint64"
                          }
                        },
                        {
                          "id": 50943,
                          "name": "liveness",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 50914,
                          "src": "8255:8:51",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint64",
                            "typeString": "uint64"
                          }
                        },
                        {
                          "id": 50944,
                          "name": "currency",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 50917,
                          "src": "8265:8:51",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IERC20_$45075",
                            "typeString": "contract IERC20"
                          }
                        },
                        {
                          "id": 50945,
                          "name": "callbackRecipient",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 50910,
                          "src": "8275:17:51",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        {
                          "id": 50946,
                          "name": "escalationManager",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 50912,
                          "src": "8294:17:51",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        {
                          "id": 50947,
                          "name": "identifier",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 50921,
                          "src": "8313:10:51",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_bytes_memory_ptr",
                            "typeString": "bytes memory"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_uint64",
                            "typeString": "uint64"
                          },
                          {
                            "typeIdentifier": "t_uint64",
                            "typeString": "uint64"
                          },
                          {
                            "typeIdentifier": "t_contract$_IERC20_$45075",
                            "typeString": "contract IERC20"
                          },
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        ],
                        "id": 50939,
                        "name": "_getId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 51624,
                        "src": "8229:6:51",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$_t_bytes_memory_ptr_$_t_uint256_$_t_uint256_$_t_uint64_$_t_contract$_IERC20_$45075_$_t_address_$_t_address_$_t_bytes32_$returns$_t_bytes32_$",
                          "typeString": "function (bytes memory,uint256,uint256,uint64,contract IERC20,address,address,bytes32) view returns (bytes32)"
                        }
                      },
                      "id": 50948,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "8229:95:51",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "src": "8215:109:51",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "id": 50950,
                  "nodeType": "ExpressionStatement",
                  "src": "8215:109:51"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 50957,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 50952,
                          "name": "asserter",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 50908,
                          "src": "8343:8:51",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 50955,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "8363:1:51",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 50954,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "8355:7:51",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 50953,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "8355:7:51",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 50956,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "8355:10:51",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "8343:22:51",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "41737365727465722063616e742062652030",
                        "id": 50958,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "8367:20:51",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_f0234c135012fb3755def154bb30104da7ebfac4a11585b6f026b2c56a11be8d",
                          "typeString": "literal_string \"Asserter cant be 0\""
                        },
                        "value": "Asserter cant be 0"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_f0234c135012fb3755def154bb30104da7ebfac4a11585b6f026b2c56a11be8d",
                          "typeString": "literal_string \"Asserter cant be 0\""
                        }
                      ],
                      "id": 50951,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "8335:7:51",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 50959,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8335:53:51",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 50960,
                  "nodeType": "ExpressionStatement",
                  "src": "8335:53:51"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 50970,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "baseExpression": {
                              "id": 50962,
                              "name": "assertions",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 50776,
                              "src": "8406:10:51",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_Assertion_$52272_storage_$",
                                "typeString": "mapping(bytes32 => struct OptimisticOracleV3Interface.Assertion storage ref)"
                              }
                            },
                            "id": 50964,
                            "indexExpression": {
                              "id": 50963,
                              "name": "assertionId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 50928,
                              "src": "8417:11:51",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "8406:23:51",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Assertion_$52272_storage",
                              "typeString": "struct OptimisticOracleV3Interface.Assertion storage ref"
                            }
                          },
                          "id": 50965,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "8430:8:51",
                          "memberName": "asserter",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 52250,
                          "src": "8406:32:51",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 50968,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "8450:1:51",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 50967,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "8442:7:51",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 50966,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "8442:7:51",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 50969,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "8442:10:51",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "8406:46:51",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "417373657274696f6e20616c726561647920657869737473",
                        "id": 50971,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "8454:26:51",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_284a64410f240e2d7a43cb03ed4a0bfa8cde125b8a3fe1c73a581caeabc5857b",
                          "typeString": "literal_string \"Assertion already exists\""
                        },
                        "value": "Assertion already exists"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_284a64410f240e2d7a43cb03ed4a0bfa8cde125b8a3fe1c73a581caeabc5857b",
                          "typeString": "literal_string \"Assertion already exists\""
                        }
                      ],
                      "id": 50961,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "8398:7:51",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 50972,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8398:83:51",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 50973,
                  "nodeType": "ExpressionStatement",
                  "src": "8398:83:51"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 50976,
                            "name": "identifier",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 50921,
                            "src": "8527:10:51",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          ],
                          "id": 50975,
                          "name": "_validateAndCacheIdentifier",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 51883,
                          "src": "8499:27:51",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$returns$_t_bool_$",
                            "typeString": "function (bytes32) returns (bool)"
                          }
                        },
                        "id": 50977,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "8499:39:51",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "556e737570706f72746564206964656e746966696572",
                        "id": 50978,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "8540:24:51",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_da31e40595e58a270828c17cf5922a7cdf3f87cc205bb7ed884ae9ef249b2323",
                          "typeString": "literal_string \"Unsupported identifier\""
                        },
                        "value": "Unsupported identifier"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_da31e40595e58a270828c17cf5922a7cdf3f87cc205bb7ed884ae9ef249b2323",
                          "typeString": "literal_string \"Unsupported identifier\""
                        }
                      ],
                      "id": 50974,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "8491:7:51",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 50979,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8491:74:51",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 50980,
                  "nodeType": "ExpressionStatement",
                  "src": "8491:74:51"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "id": 50985,
                                "name": "currency",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 50917,
                                "src": "8617:8:51",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_IERC20_$45075",
                                  "typeString": "contract IERC20"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_IERC20_$45075",
                                  "typeString": "contract IERC20"
                                }
                              ],
                              "id": 50984,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "8609:7:51",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 50983,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "8609:7:51",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 50986,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "8609:17:51",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 50982,
                          "name": "_validateAndCacheCurrency",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 51926,
                          "src": "8583:25:51",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$_t_bool_$",
                            "typeString": "function (address) returns (bool)"
                          }
                        },
                        "id": 50987,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "8583:44:51",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "556e737570706f727465642063757272656e6379",
                        "id": 50988,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "8629:22:51",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_80ce5fa19698d94f2a822de02b7b66afaa53e69346874f7ea710d3e70d87e1b5",
                          "typeString": "literal_string \"Unsupported currency\""
                        },
                        "value": "Unsupported currency"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_80ce5fa19698d94f2a822de02b7b66afaa53e69346874f7ea710d3e70d87e1b5",
                          "typeString": "literal_string \"Unsupported currency\""
                        }
                      ],
                      "id": 50981,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "8575:7:51",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 50989,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8575:77:51",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 50990,
                  "nodeType": "ExpressionStatement",
                  "src": "8575:77:51"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 50999,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 50992,
                          "name": "bond",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 50919,
                          "src": "8670:4:51",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "id": 50996,
                                  "name": "currency",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 50917,
                                  "src": "8701:8:51",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_IERC20_$45075",
                                    "typeString": "contract IERC20"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_IERC20_$45075",
                                    "typeString": "contract IERC20"
                                  }
                                ],
                                "id": 50995,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "8693:7:51",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 50994,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "8693:7:51",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 50997,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "8693:17:51",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 50993,
                            "name": "getMinimumBond",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 51585,
                            "src": "8678:14:51",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
                              "typeString": "function (address) view returns (uint256)"
                            }
                          },
                          "id": 50998,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "8678:33:51",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "8670:41:51",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "426f6e6420616d6f756e7420746f6f206c6f77",
                        "id": 51000,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "8713:21:51",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_98c3dd34cdd2cbf80a44938b826d2bd39190a9d72c587d44c2b731a12c01a858",
                          "typeString": "literal_string \"Bond amount too low\""
                        },
                        "value": "Bond amount too low"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_98c3dd34cdd2cbf80a44938b826d2bd39190a9d72c587d44c2b731a12c01a858",
                          "typeString": "literal_string \"Bond amount too low\""
                        }
                      ],
                      "id": 50991,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "8662:7:51",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 51001,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8662:73:51",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 51002,
                  "nodeType": "ExpressionStatement",
                  "src": "8662:73:51"
                },
                {
                  "expression": {
                    "id": 51032,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 51003,
                        "name": "assertions",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 50776,
                        "src": "8746:10:51",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_Assertion_$52272_storage_$",
                          "typeString": "mapping(bytes32 => struct OptimisticOracleV3Interface.Assertion storage ref)"
                        }
                      },
                      "id": 51005,
                      "indexExpression": {
                        "id": 51004,
                        "name": "assertionId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 50928,
                        "src": "8757:11:51",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "8746:23:51",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Assertion_$52272_storage",
                        "typeString": "struct OptimisticOracleV3Interface.Assertion storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "hexValue": "66616c7365",
                              "id": 51008,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "bool",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "8898:5:51",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              "value": "false"
                            },
                            {
                              "hexValue": "66616c7365",
                              "id": 51009,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "bool",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "8983:5:51",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              "value": "false"
                            },
                            {
                              "hexValue": "66616c7365",
                              "id": 51010,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "bool",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "9073:5:51",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              "value": "false"
                            },
                            {
                              "id": 51011,
                              "name": "escalationManager",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 50912,
                              "src": "9168:17:51",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "expression": {
                                "id": 51012,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "9220:3:51",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 51013,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "9224:6:51",
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "9220:10:51",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 51007,
                            "name": "EscalationManagerSettings",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 52245,
                            "src": "8823:25:51",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_struct$_EscalationManagerSettings_$52245_storage_ptr_$",
                              "typeString": "type(struct OptimisticOracleV3Interface.EscalationManagerSettings storage pointer)"
                            }
                          },
                          "id": 51014,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "structConstructorCall",
                          "lValueRequested": false,
                          "nameLocations": [
                            "8867:29:51",
                            "8968:13:51",
                            "9054:17:51",
                            "9149:17:51",
                            "9203:15:51"
                          ],
                          "names": [
                            "arbitrateViaEscalationManager",
                            "discardOracle",
                            "validateDisputers",
                            "escalationManager",
                            "assertingCaller"
                          ],
                          "nodeType": "FunctionCall",
                          "src": "8823:422:51",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_EscalationManagerSettings_$52245_memory_ptr",
                            "typeString": "struct OptimisticOracleV3Interface.EscalationManagerSettings memory"
                          }
                        },
                        {
                          "id": 51015,
                          "name": "asserter",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 50908,
                          "src": "9269:8:51",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 51018,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "9309:1:51",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 51017,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "9301:7:51",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 51016,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "9301:7:51",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 51019,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "9301:10:51",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        {
                          "id": 51020,
                          "name": "callbackRecipient",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 50910,
                          "src": "9344:17:51",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        {
                          "id": 51021,
                          "name": "currency",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 50917,
                          "src": "9385:8:51",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IERC20_$45075",
                            "typeString": "contract IERC20"
                          }
                        },
                        {
                          "id": 51022,
                          "name": "domainId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 50923,
                          "src": "9417:8:51",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        {
                          "id": 51023,
                          "name": "identifier",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 50921,
                          "src": "9451:10:51",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        {
                          "id": 51024,
                          "name": "bond",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 50919,
                          "src": "9481:4:51",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "hexValue": "66616c7365",
                          "id": 51025,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "9508:5:51",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "false"
                        },
                        {
                          "hexValue": "66616c7365",
                          "id": 51026,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "9549:5:51",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "false"
                        },
                        {
                          "id": 51027,
                          "name": "time",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 50931,
                          "src": "9583:4:51",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint64",
                            "typeString": "uint64"
                          }
                        },
                        {
                          "commonType": {
                            "typeIdentifier": "t_uint64",
                            "typeString": "uint64"
                          },
                          "id": 51030,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 51028,
                            "name": "time",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 50931,
                            "src": "9617:4:51",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint64",
                              "typeString": "uint64"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "+",
                          "rightExpression": {
                            "id": 51029,
                            "name": "liveness",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 50914,
                            "src": "9624:8:51",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint64",
                              "typeString": "uint64"
                            }
                          },
                          "src": "9617:15:51",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint64",
                            "typeString": "uint64"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_struct$_EscalationManagerSettings_$52245_memory_ptr",
                            "typeString": "struct OptimisticOracleV3Interface.EscalationManagerSettings memory"
                          },
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          {
                            "typeIdentifier": "t_contract$_IERC20_$45075",
                            "typeString": "contract IERC20"
                          },
                          {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          },
                          {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          {
                            "typeIdentifier": "t_uint64",
                            "typeString": "uint64"
                          },
                          {
                            "typeIdentifier": "t_uint64",
                            "typeString": "uint64"
                          }
                        ],
                        "id": 51006,
                        "name": "Assertion",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 52272,
                        "src": "8772:9:51",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_struct$_Assertion_$52272_storage_ptr_$",
                          "typeString": "type(struct OptimisticOracleV3Interface.Assertion storage pointer)"
                        }
                      },
                      "id": 51031,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "structConstructorCall",
                      "lValueRequested": false,
                      "nameLocations": [
                        "8796:25:51",
                        "9259:8:51",
                        "9291:8:51",
                        "9325:17:51",
                        "9375:8:51",
                        "9407:8:51",
                        "9439:10:51",
                        "9475:4:51",
                        "9499:7:51",
                        "9527:20:51",
                        "9568:13:51",
                        "9601:14:51"
                      ],
                      "names": [
                        "escalationManagerSettings",
                        "asserter",
                        "disputer",
                        "callbackRecipient",
                        "currency",
                        "domainId",
                        "identifier",
                        "bond",
                        "settled",
                        "settlementResolution",
                        "assertionTime",
                        "expirationTime"
                      ],
                      "nodeType": "FunctionCall",
                      "src": "8772:871:51",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Assertion_$52272_memory_ptr",
                        "typeString": "struct OptimisticOracleV3Interface.Assertion memory"
                      }
                    },
                    "src": "8746:897:51",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Assertion_$52272_storage",
                      "typeString": "struct OptimisticOracleV3Interface.Assertion storage ref"
                    }
                  },
                  "id": 51033,
                  "nodeType": "ExpressionStatement",
                  "src": "8746:897:51"
                },
                {
                  "id": 51075,
                  "nodeType": "Block",
                  "src": "9654:1256:51",
                  "statements": [
                    {
                      "assignments": [
                        51038
                      ],
                      "declarations": [
                        {
                          "constant": false,
                          "id": 51038,
                          "mutability": "mutable",
                          "name": "assertionPolicy",
                          "nameLocation": "9718:15:51",
                          "nodeType": "VariableDeclaration",
                          "scope": 51075,
                          "src": "9668:65:51",
                          "stateVariable": false,
                          "storageLocation": "memory",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_AssertionPolicy_$52170_memory_ptr",
                            "typeString": "struct EscalationManagerInterface.AssertionPolicy"
                          },
                          "typeName": {
                            "id": 51037,
                            "nodeType": "UserDefinedTypeName",
                            "pathNode": {
                              "id": 51036,
                              "name": "EscalationManagerInterface.AssertionPolicy",
                              "nameLocations": [
                                "9668:26:51",
                                "9695:15:51"
                              ],
                              "nodeType": "IdentifierPath",
                              "referencedDeclaration": 52170,
                              "src": "9668:42:51"
                            },
                            "referencedDeclaration": 52170,
                            "src": "9668:42:51",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_AssertionPolicy_$52170_storage_ptr",
                              "typeString": "struct EscalationManagerInterface.AssertionPolicy"
                            }
                          },
                          "visibility": "internal"
                        }
                      ],
                      "id": 51042,
                      "initialValue": {
                        "arguments": [
                          {
                            "id": 51040,
                            "name": "assertionId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 50928,
                            "src": "9756:11:51",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          ],
                          "id": 51039,
                          "name": "_getAssertionPolicy",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 51812,
                          "src": "9736:19:51",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_bytes32_$returns$_t_struct$_AssertionPolicy_$52170_memory_ptr_$",
                            "typeString": "function (bytes32) view returns (struct EscalationManagerInterface.AssertionPolicy memory)"
                          }
                        },
                        "id": 51041,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "9736:32:51",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_AssertionPolicy_$52170_memory_ptr",
                          "typeString": "struct EscalationManagerInterface.AssertionPolicy memory"
                        }
                      },
                      "nodeType": "VariableDeclarationStatement",
                      "src": "9668:100:51"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "id": 51046,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "UnaryOperation",
                            "operator": "!",
                            "prefix": true,
                            "src": "9790:31:51",
                            "subExpression": {
                              "expression": {
                                "id": 51044,
                                "name": "assertionPolicy",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 51038,
                                "src": "9791:15:51",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_AssertionPolicy_$52170_memory_ptr",
                                  "typeString": "struct EscalationManagerInterface.AssertionPolicy memory"
                                }
                              },
                              "id": 51045,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "9807:14:51",
                              "memberName": "blockAssertion",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 52163,
                              "src": "9791:30:51",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          {
                            "hexValue": "417373657274696f6e206e6f7420616c6c6f776564",
                            "id": 51047,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "string",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "9823:23:51",
                            "typeDescriptions": {
                              "typeIdentifier": "t_stringliteral_67cae8afe3a26970afe461cd427d6cfe1f4388125865d7d236dc4a5b3b23aa35",
                              "typeString": "literal_string \"Assertion not allowed\""
                            },
                            "value": "Assertion not allowed"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            {
                              "typeIdentifier": "t_stringliteral_67cae8afe3a26970afe461cd427d6cfe1f4388125865d7d236dc4a5b3b23aa35",
                              "typeString": "literal_string \"Assertion not allowed\""
                            }
                          ],
                          "id": 51043,
                          "name": "require",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            -18,
                            -18
                          ],
                          "referencedDeclaration": -18,
                          "src": "9782:7:51",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                            "typeString": "function (bool,string memory) pure"
                          }
                        },
                        "id": 51048,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "9782:65:51",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_tuple$__$",
                          "typeString": "tuple()"
                        }
                      },
                      "id": 51049,
                      "nodeType": "ExpressionStatement",
                      "src": "9782:65:51"
                    },
                    {
                      "assignments": [
                        51052
                      ],
                      "declarations": [
                        {
                          "constant": false,
                          "id": 51052,
                          "mutability": "mutable",
                          "name": "emSettings",
                          "nameLocation": "9935:10:51",
                          "nodeType": "VariableDeclaration",
                          "scope": 51075,
                          "src": "9901:44:51",
                          "stateVariable": false,
                          "storageLocation": "storage",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_EscalationManagerSettings_$52245_storage_ptr",
                            "typeString": "struct OptimisticOracleV3Interface.EscalationManagerSettings"
                          },
                          "typeName": {
                            "id": 51051,
                            "nodeType": "UserDefinedTypeName",
                            "pathNode": {
                              "id": 51050,
                              "name": "EscalationManagerSettings",
                              "nameLocations": [
                                "9901:25:51"
                              ],
                              "nodeType": "IdentifierPath",
                              "referencedDeclaration": 52245,
                              "src": "9901:25:51"
                            },
                            "referencedDeclaration": 52245,
                            "src": "9901:25:51",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_EscalationManagerSettings_$52245_storage_ptr",
                              "typeString": "struct OptimisticOracleV3Interface.EscalationManagerSettings"
                            }
                          },
                          "visibility": "internal"
                        }
                      ],
                      "id": 51057,
                      "initialValue": {
                        "expression": {
                          "baseExpression": {
                            "id": 51053,
                            "name": "assertions",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 50776,
                            "src": "9948:10:51",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_Assertion_$52272_storage_$",
                              "typeString": "mapping(bytes32 => struct OptimisticOracleV3Interface.Assertion storage ref)"
                            }
                          },
                          "id": 51055,
                          "indexExpression": {
                            "id": 51054,
                            "name": "assertionId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 50928,
                            "src": "9959:11:51",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "9948:23:51",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Assertion_$52272_storage",
                            "typeString": "struct OptimisticOracleV3Interface.Assertion storage ref"
                          }
                        },
                        "id": 51056,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "9972:25:51",
                        "memberName": "escalationManagerSettings",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 52248,
                        "src": "9948:49:51",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_EscalationManagerSettings_$52245_storage",
                          "typeString": "struct OptimisticOracleV3Interface.EscalationManagerSettings storage ref"
                        }
                      },
                      "nodeType": "VariableDeclarationStatement",
                      "src": "9901:96:51"
                    },
                    {
                      "expression": {
                        "id": 51073,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftHandSide": {
                          "components": [
                            {
                              "expression": {
                                "id": 51058,
                                "name": "emSettings",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 51052,
                                "src": "10012:10:51",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_EscalationManagerSettings_$52245_storage_ptr",
                                  "typeString": "struct OptimisticOracleV3Interface.EscalationManagerSettings storage pointer"
                                }
                              },
                              "id": 51060,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": true,
                              "memberLocation": "10023:29:51",
                              "memberName": "arbitrateViaEscalationManager",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 52236,
                              "src": "10012:40:51",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "expression": {
                                "id": 51061,
                                "name": "emSettings",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 51052,
                                "src": "10054:10:51",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_EscalationManagerSettings_$52245_storage_ptr",
                                  "typeString": "struct OptimisticOracleV3Interface.EscalationManagerSettings storage pointer"
                                }
                              },
                              "id": 51062,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": true,
                              "memberLocation": "10065:13:51",
                              "memberName": "discardOracle",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 52238,
                              "src": "10054:24:51",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "expression": {
                                "id": 51063,
                                "name": "emSettings",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 51052,
                                "src": "10080:10:51",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_EscalationManagerSettings_$52245_storage_ptr",
                                  "typeString": "struct OptimisticOracleV3Interface.EscalationManagerSettings storage pointer"
                                }
                              },
                              "id": 51064,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": true,
                              "memberLocation": "10091:17:51",
                              "memberName": "validateDisputers",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 52240,
                              "src": "10080:28:51",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            }
                          ],
                          "id": 51065,
                          "isConstant": false,
                          "isInlineArray": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": true,
                          "nodeType": "TupleExpression",
                          "src": "10011:98:51",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$_t_bool_$_t_bool_$_t_bool_$",
                            "typeString": "tuple(bool,bool,bool)"
                          }
                        },
                        "nodeType": "Assignment",
                        "operator": "=",
                        "rightHandSide": {
                          "components": [
                            {
                              "expression": {
                                "id": 51066,
                                "name": "assertionPolicy",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 51038,
                                "src": "10359:15:51",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_AssertionPolicy_$52170_memory_ptr",
                                  "typeString": "struct EscalationManagerInterface.AssertionPolicy memory"
                                }
                              },
                              "id": 51067,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "10375:29:51",
                              "memberName": "arbitrateViaEscalationManager",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 52165,
                              "src": "10359:45:51",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "expression": {
                                "id": 51068,
                                "name": "assertionPolicy",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 51038,
                                "src": "10618:15:51",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_AssertionPolicy_$52170_memory_ptr",
                                  "typeString": "struct EscalationManagerInterface.AssertionPolicy memory"
                                }
                              },
                              "id": 51069,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "10634:13:51",
                              "memberName": "discardOracle",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 52167,
                              "src": "10618:29:51",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "expression": {
                                "id": 51070,
                                "name": "assertionPolicy",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 51038,
                                "src": "10852:15:51",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_AssertionPolicy_$52170_memory_ptr",
                                  "typeString": "struct EscalationManagerInterface.AssertionPolicy memory"
                                }
                              },
                              "id": 51071,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "10868:17:51",
                              "memberName": "validateDisputers",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 52169,
                              "src": "10852:33:51",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            }
                          ],
                          "id": 51072,
                          "isConstant": false,
                          "isInlineArray": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "TupleExpression",
                          "src": "10112:787:51",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$_t_bool_$_t_bool_$_t_bool_$",
                            "typeString": "tuple(bool,bool,bool)"
                          }
                        },
                        "src": "10011:888:51",
                        "typeDescriptions": {
                          "typeIdentifier": "t_tuple$__$",
                          "typeString": "tuple()"
                        }
                      },
                      "id": 51074,
                      "nodeType": "ExpressionStatement",
                      "src": "10011:888:51"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 51079,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "10946:3:51",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 51080,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "10950:6:51",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "10946:10:51",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 51083,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "10966:4:51",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_OptimisticOracleV3_$52025",
                              "typeString": "contract OptimisticOracleV3"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_OptimisticOracleV3_$52025",
                              "typeString": "contract OptimisticOracleV3"
                            }
                          ],
                          "id": 51082,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "10958:7:51",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 51081,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "10958:7:51",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 51084,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "10958:13:51",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 51085,
                        "name": "bond",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 50919,
                        "src": "10973:4:51",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 51076,
                        "name": "currency",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 50917,
                        "src": "10920:8:51",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$45075",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 51078,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "10929:16:51",
                      "memberName": "safeTransferFrom",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 45157,
                      "src": "10920:25:51",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$45075_$_t_address_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20_$45075_$",
                        "typeString": "function (contract IERC20,address,address,uint256)"
                      }
                    },
                    "id": 51086,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10920:58:51",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 51087,
                  "nodeType": "ExpressionStatement",
                  "src": "10920:58:51"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 51089,
                        "name": "assertionId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 50928,
                        "src": "11055:11:51",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "id": 51090,
                        "name": "domainId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 50923,
                        "src": "11080:8:51",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "id": 51091,
                        "name": "claim",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 50906,
                        "src": "11102:5:51",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      },
                      {
                        "id": 51092,
                        "name": "asserter",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 50908,
                        "src": "11121:8:51",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 51093,
                        "name": "callbackRecipient",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 50910,
                        "src": "11143:17:51",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 51094,
                        "name": "escalationManager",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 50912,
                        "src": "11174:17:51",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "id": 51095,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "11205:3:51",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 51096,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "11209:6:51",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "11205:10:51",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint64",
                          "typeString": "uint64"
                        },
                        "id": 51099,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 51097,
                          "name": "time",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 50931,
                          "src": "11229:4:51",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint64",
                            "typeString": "uint64"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "+",
                        "rightExpression": {
                          "id": 51098,
                          "name": "liveness",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 50914,
                          "src": "11236:8:51",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint64",
                            "typeString": "uint64"
                          }
                        },
                        "src": "11229:15:51",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint64",
                          "typeString": "uint64"
                        }
                      },
                      {
                        "id": 51100,
                        "name": "currency",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 50917,
                        "src": "11258:8:51",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$45075",
                          "typeString": "contract IERC20"
                        }
                      },
                      {
                        "id": 51101,
                        "name": "bond",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 50919,
                        "src": "11280:4:51",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 51102,
                        "name": "identifier",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 50921,
                        "src": "11298:10:51",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint64",
                          "typeString": "uint64"
                        },
                        {
                          "typeIdentifier": "t_contract$_IERC20_$45075",
                          "typeString": "contract IERC20"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      ],
                      "id": 51088,
                      "name": "AssertionMade",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 52390,
                      "src": "11028:13:51",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_bytes32_$_t_bytes32_$_t_bytes_memory_ptr_$_t_address_$_t_address_$_t_address_$_t_address_$_t_uint64_$_t_contract$_IERC20_$45075_$_t_uint256_$_t_bytes32_$returns$__$",
                        "typeString": "function (bytes32,bytes32,bytes memory,address,address,address,address,uint64,contract IERC20,uint256,bytes32)"
                      }
                    },
                    "id": 51103,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11028:290:51",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 51104,
                  "nodeType": "EmitStatement",
                  "src": "11023:295:51"
                }
              ]
            },
            "baseFunctions": [
              52327
            ],
            "documentation": {
              "id": 50904,
              "nodeType": "StructuredDocumentation",
              "src": "5525:2300:51",
              "text": " @notice Asserts a truth about the world, using a fully custom configuration.\n @dev The caller must approve this contract to spend at least bond amount of currency.\n @param claim the truth claim being asserted. This is an assertion about the world, and is verified by disputers.\n @param asserter account that receives bonds back at settlement. This could be msg.sender or\n any other account that the caller wants to receive the bond at settlement time.\n @param callbackRecipient if configured, this address will receive a function call assertionResolvedCallback and\n assertionDisputedCallback at resolution or dispute respectively. Enables dynamic responses to these events. The\n recipient _must_ implement these callbacks and not revert or the assertion resolution will be blocked.\n @param escalationManager if configured, this address will control escalation properties of the assertion. This\n means a) choosing to arbitrate via the UMA DVM, b) choosing to discard assertions on dispute, or choosing to\n validate disputes. Combining these, the asserter can define their own security properties for the assertion.\n escalationManager also _must_ implement the same callbacks as callbackRecipient.\n @param liveness time to wait before the assertion can be resolved. Assertion can be disputed in this time.\n @param currency bond currency pulled from the caller and held in escrow until the assertion is resolved.\n @param bond amount of currency to pull from the caller and hold in escrow until the assertion is resolved. This\n must be >= getMinimumBond(address(currency)).\n @param identifier UMA DVM identifier to use for price requests in the event of a dispute. Must be pre-approved.\n @param domainId optional domain that can be used to relate this assertion to others in the escalationManager and\n can be used by the configured escalationManager to define custom behavior for groups of assertions. This is\n typically used for \"escalation games\" by changing bonds or other assertion properties based on the other\n assertions that have come before. If not needed this value should be 0 to save gas.\n @return assertionId unique identifier for this assertion."
            },
            "functionSelector": "6457c979",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 50926,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 50925,
                  "name": "nonReentrant",
                  "nameLocations": [
                    "8114:12:51"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 48526,
                  "src": "8114:12:51"
                },
                "nodeType": "ModifierInvocation",
                "src": "8114:12:51"
              }
            ],
            "name": "assertTruth",
            "nameLocation": "7839:11:51",
            "parameters": {
              "id": 50924,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 50906,
                  "mutability": "mutable",
                  "name": "claim",
                  "nameLocation": "7873:5:51",
                  "nodeType": "VariableDeclaration",
                  "scope": 51106,
                  "src": "7860:18:51",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 50905,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "7860:5:51",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 50908,
                  "mutability": "mutable",
                  "name": "asserter",
                  "nameLocation": "7896:8:51",
                  "nodeType": "VariableDeclaration",
                  "scope": 51106,
                  "src": "7888:16:51",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 50907,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "7888:7:51",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 50910,
                  "mutability": "mutable",
                  "name": "callbackRecipient",
                  "nameLocation": "7922:17:51",
                  "nodeType": "VariableDeclaration",
                  "scope": 51106,
                  "src": "7914:25:51",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 50909,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "7914:7:51",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 50912,
                  "mutability": "mutable",
                  "name": "escalationManager",
                  "nameLocation": "7957:17:51",
                  "nodeType": "VariableDeclaration",
                  "scope": 51106,
                  "src": "7949:25:51",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 50911,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "7949:7:51",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 50914,
                  "mutability": "mutable",
                  "name": "liveness",
                  "nameLocation": "7991:8:51",
                  "nodeType": "VariableDeclaration",
                  "scope": 51106,
                  "src": "7984:15:51",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint64",
                    "typeString": "uint64"
                  },
                  "typeName": {
                    "id": 50913,
                    "name": "uint64",
                    "nodeType": "ElementaryTypeName",
                    "src": "7984:6:51",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint64",
                      "typeString": "uint64"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 50917,
                  "mutability": "mutable",
                  "name": "currency",
                  "nameLocation": "8016:8:51",
                  "nodeType": "VariableDeclaration",
                  "scope": 51106,
                  "src": "8009:15:51",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IERC20_$45075",
                    "typeString": "contract IERC20"
                  },
                  "typeName": {
                    "id": 50916,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 50915,
                      "name": "IERC20",
                      "nameLocations": [
                        "8009:6:51"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 45075,
                      "src": "8009:6:51"
                    },
                    "referencedDeclaration": 45075,
                    "src": "8009:6:51",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$45075",
                      "typeString": "contract IERC20"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 50919,
                  "mutability": "mutable",
                  "name": "bond",
                  "nameLocation": "8042:4:51",
                  "nodeType": "VariableDeclaration",
                  "scope": 51106,
                  "src": "8034:12:51",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 50918,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "8034:7:51",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 50921,
                  "mutability": "mutable",
                  "name": "identifier",
                  "nameLocation": "8064:10:51",
                  "nodeType": "VariableDeclaration",
                  "scope": 51106,
                  "src": "8056:18:51",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 50920,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "8056:7:51",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 50923,
                  "mutability": "mutable",
                  "name": "domainId",
                  "nameLocation": "8092:8:51",
                  "nodeType": "VariableDeclaration",
                  "scope": 51106,
                  "src": "8084:16:51",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 50922,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "8084:7:51",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7850:256:51"
            },
            "returnParameters": {
              "id": 50929,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 50928,
                  "mutability": "mutable",
                  "name": "assertionId",
                  "nameLocation": "8144:11:51",
                  "nodeType": "VariableDeclaration",
                  "scope": 51106,
                  "src": "8136:19:51",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 50927,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "8136:7:51",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8135:21:51"
            },
            "scope": 52025,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 51221,
            "nodeType": "FunctionDefinition",
            "src": "11787:1058:51",
            "nodes": [],
            "body": {
              "id": 51220,
              "nodeType": "Block",
              "src": "11874:971:51",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 51122,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 51117,
                          "name": "disputer",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 51111,
                          "src": "11892:8:51",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 51120,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "11912:1:51",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 51119,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "11904:7:51",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 51118,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "11904:7:51",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 51121,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "11904:10:51",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "11892:22:51",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "44697370757465722063616e27742062652030",
                        "id": 51123,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "11916:21:51",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_b1987bde94e9230c1d030be9ab544e72fae1cb7695824bc9848b9d3c3933b5c8",
                          "typeString": "literal_string \"Disputer can't be 0\""
                        },
                        "value": "Disputer can't be 0"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_b1987bde94e9230c1d030be9ab544e72fae1cb7695824bc9848b9d3c3933b5c8",
                          "typeString": "literal_string \"Disputer can't be 0\""
                        }
                      ],
                      "id": 51116,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "11884:7:51",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 51124,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11884:54:51",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 51125,
                  "nodeType": "ExpressionStatement",
                  "src": "11884:54:51"
                },
                {
                  "assignments": [
                    51128
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 51128,
                      "mutability": "mutable",
                      "name": "assertion",
                      "nameLocation": "11966:9:51",
                      "nodeType": "VariableDeclaration",
                      "scope": 51220,
                      "src": "11948:27:51",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Assertion_$52272_storage_ptr",
                        "typeString": "struct OptimisticOracleV3Interface.Assertion"
                      },
                      "typeName": {
                        "id": 51127,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 51126,
                          "name": "Assertion",
                          "nameLocations": [
                            "11948:9:51"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 52272,
                          "src": "11948:9:51"
                        },
                        "referencedDeclaration": 52272,
                        "src": "11948:9:51",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Assertion_$52272_storage_ptr",
                          "typeString": "struct OptimisticOracleV3Interface.Assertion"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 51132,
                  "initialValue": {
                    "baseExpression": {
                      "id": 51129,
                      "name": "assertions",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 50776,
                      "src": "11978:10:51",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_Assertion_$52272_storage_$",
                        "typeString": "mapping(bytes32 => struct OptimisticOracleV3Interface.Assertion storage ref)"
                      }
                    },
                    "id": 51131,
                    "indexExpression": {
                      "id": 51130,
                      "name": "assertionId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 51109,
                      "src": "11989:11:51",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "11978:23:51",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Assertion_$52272_storage",
                      "typeString": "struct OptimisticOracleV3Interface.Assertion storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "11948:53:51"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 51140,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 51134,
                            "name": "assertion",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 51128,
                            "src": "12019:9:51",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Assertion_$52272_storage_ptr",
                              "typeString": "struct OptimisticOracleV3Interface.Assertion storage pointer"
                            }
                          },
                          "id": 51135,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "12029:8:51",
                          "memberName": "asserter",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 52250,
                          "src": "12019:18:51",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 51138,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "12049:1:51",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 51137,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "12041:7:51",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 51136,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "12041:7:51",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 51139,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "12041:10:51",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "12019:32:51",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "417373657274696f6e20646f6573206e6f74206578697374",
                        "id": 51141,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "12053:26:51",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_7f54d907407dcd7c4579621d4948bc84ba3a2e0d10e71cf8bd20da70bac08816",
                          "typeString": "literal_string \"Assertion does not exist\""
                        },
                        "value": "Assertion does not exist"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_7f54d907407dcd7c4579621d4948bc84ba3a2e0d10e71cf8bd20da70bac08816",
                          "typeString": "literal_string \"Assertion does not exist\""
                        }
                      ],
                      "id": 51133,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "12011:7:51",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 51142,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12011:69:51",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 51143,
                  "nodeType": "ExpressionStatement",
                  "src": "12011:69:51"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 51151,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 51145,
                            "name": "assertion",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 51128,
                            "src": "12098:9:51",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Assertion_$52272_storage_ptr",
                              "typeString": "struct OptimisticOracleV3Interface.Assertion storage pointer"
                            }
                          },
                          "id": 51146,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "12108:8:51",
                          "memberName": "disputer",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 52271,
                          "src": "12098:18:51",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 51149,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "12128:1:51",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 51148,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "12120:7:51",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 51147,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "12120:7:51",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 51150,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "12120:10:51",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "12098:32:51",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "417373657274696f6e20616c7265616479206469737075746564",
                        "id": 51152,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "12132:28:51",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_9bf33f3a274f84175cacd422f11bfa11d326bbc2610e6d123b6ddb9d32a3e3a9",
                          "typeString": "literal_string \"Assertion already disputed\""
                        },
                        "value": "Assertion already disputed"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_9bf33f3a274f84175cacd422f11bfa11d326bbc2610e6d123b6ddb9d32a3e3a9",
                          "typeString": "literal_string \"Assertion already disputed\""
                        }
                      ],
                      "id": 51144,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "12090:7:51",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 51153,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12090:71:51",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 51154,
                  "nodeType": "ExpressionStatement",
                  "src": "12090:71:51"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 51160,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 51156,
                            "name": "assertion",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 51128,
                            "src": "12179:9:51",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Assertion_$52272_storage_ptr",
                              "typeString": "struct OptimisticOracleV3Interface.Assertion storage pointer"
                            }
                          },
                          "id": 51157,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "12189:14:51",
                          "memberName": "expirationTime",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 52259,
                          "src": "12179:24:51",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint64",
                            "typeString": "uint64"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 51158,
                            "name": "getCurrentTime",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 51549,
                            "src": "12206:14:51",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                              "typeString": "function () view returns (uint256)"
                            }
                          },
                          "id": 51159,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "12206:16:51",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "12179:43:51",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "417373657274696f6e2069732065787069726564",
                        "id": 51161,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "12224:22:51",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_43493127d84372e8eb1d3ed0764d26f77e6258907b4c30833f5804d09487408a",
                          "typeString": "literal_string \"Assertion is expired\""
                        },
                        "value": "Assertion is expired"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_43493127d84372e8eb1d3ed0764d26f77e6258907b4c30833f5804d09487408a",
                          "typeString": "literal_string \"Assertion is expired\""
                        }
                      ],
                      "id": 51155,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "12171:7:51",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 51162,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12171:76:51",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 51163,
                  "nodeType": "ExpressionStatement",
                  "src": "12171:76:51"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 51166,
                            "name": "assertionId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 51109,
                            "src": "12283:11:51",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          ],
                          "id": 51165,
                          "name": "_isDisputeAllowed",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 51855,
                          "src": "12265:17:51",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_bytes32_$returns$_t_bool_$",
                            "typeString": "function (bytes32) view returns (bool)"
                          }
                        },
                        "id": 51167,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "12265:30:51",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "44697370757465206e6f7420616c6c6f776564",
                        "id": 51168,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "12297:21:51",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_f43a5e3d636ffe5d2de0897219b047d3459e48009c73908451af57b81b75d885",
                          "typeString": "literal_string \"Dispute not allowed\""
                        },
                        "value": "Dispute not allowed"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_f43a5e3d636ffe5d2de0897219b047d3459e48009c73908451af57b81b75d885",
                          "typeString": "literal_string \"Dispute not allowed\""
                        }
                      ],
                      "id": 51164,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "12257:7:51",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 51169,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12257:62:51",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 51170,
                  "nodeType": "ExpressionStatement",
                  "src": "12257:62:51"
                },
                {
                  "expression": {
                    "id": 51175,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 51171,
                        "name": "assertion",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 51128,
                        "src": "12330:9:51",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Assertion_$52272_storage_ptr",
                          "typeString": "struct OptimisticOracleV3Interface.Assertion storage pointer"
                        }
                      },
                      "id": 51173,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberLocation": "12340:8:51",
                      "memberName": "disputer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 52271,
                      "src": "12330:18:51",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 51174,
                      "name": "disputer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 51111,
                      "src": "12351:8:51",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "12330:29:51",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 51176,
                  "nodeType": "ExpressionStatement",
                  "src": "12330:29:51"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 51182,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "12406:3:51",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 51183,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "12410:6:51",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "12406:10:51",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 51186,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "12426:4:51",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_OptimisticOracleV3_$52025",
                              "typeString": "contract OptimisticOracleV3"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_OptimisticOracleV3_$52025",
                              "typeString": "contract OptimisticOracleV3"
                            }
                          ],
                          "id": 51185,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "12418:7:51",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 51184,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "12418:7:51",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 51187,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "12418:13:51",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "id": 51188,
                          "name": "assertion",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 51128,
                          "src": "12433:9:51",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Assertion_$52272_storage_ptr",
                            "typeString": "struct OptimisticOracleV3Interface.Assertion storage pointer"
                          }
                        },
                        "id": 51189,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "12443:4:51",
                        "memberName": "bond",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 52267,
                        "src": "12433:14:51",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "expression": {
                          "id": 51177,
                          "name": "assertion",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 51128,
                          "src": "12370:9:51",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Assertion_$52272_storage_ptr",
                            "typeString": "struct OptimisticOracleV3Interface.Assertion storage pointer"
                          }
                        },
                        "id": 51180,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "12380:8:51",
                        "memberName": "currency",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 52257,
                        "src": "12370:18:51",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$45075",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 51181,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "12389:16:51",
                      "memberName": "safeTransferFrom",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 45157,
                      "src": "12370:35:51",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$45075_$_t_address_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20_$45075_$",
                        "typeString": "function (contract IERC20,address,address,uint256)"
                      }
                    },
                    "id": 51190,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12370:78:51",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 51191,
                  "nodeType": "ExpressionStatement",
                  "src": "12370:78:51"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 51193,
                        "name": "assertionId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 51109,
                        "src": "12479:11:51",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "expression": {
                          "id": 51194,
                          "name": "assertion",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 51128,
                          "src": "12492:9:51",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Assertion_$52272_storage_ptr",
                            "typeString": "struct OptimisticOracleV3Interface.Assertion storage pointer"
                          }
                        },
                        "id": 51195,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "12502:10:51",
                        "memberName": "identifier",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 52265,
                        "src": "12492:20:51",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "expression": {
                          "id": 51196,
                          "name": "assertion",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 51128,
                          "src": "12514:9:51",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Assertion_$52272_storage_ptr",
                            "typeString": "struct OptimisticOracleV3Interface.Assertion storage pointer"
                          }
                        },
                        "id": 51197,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "12524:13:51",
                        "memberName": "assertionTime",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 52252,
                        "src": "12514:23:51",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint64",
                          "typeString": "uint64"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_uint64",
                          "typeString": "uint64"
                        }
                      ],
                      "id": 51192,
                      "name": "_oracleRequestPrice",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 51738,
                      "src": "12459:19:51",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_bytes32_$_t_uint256_$returns$__$",
                        "typeString": "function (bytes32,bytes32,uint256)"
                      }
                    },
                    "id": 51198,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12459:79:51",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 51199,
                  "nodeType": "ExpressionStatement",
                  "src": "12459:79:51"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 51201,
                        "name": "assertionId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 51109,
                        "src": "12577:11:51",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      ],
                      "id": 51200,
                      "name": "_callbackOnAssertionDispute",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 52024,
                      "src": "12549:27:51",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$returns$__$",
                        "typeString": "function (bytes32)"
                      }
                    },
                    "id": 51202,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12549:40:51",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 51203,
                  "nodeType": "ExpressionStatement",
                  "src": "12549:40:51"
                },
                {
                  "condition": {
                    "expression": {
                      "expression": {
                        "id": 51204,
                        "name": "assertion",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 51128,
                        "src": "12672:9:51",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Assertion_$52272_storage_ptr",
                          "typeString": "struct OptimisticOracleV3Interface.Assertion storage pointer"
                        }
                      },
                      "id": 51205,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "12682:25:51",
                      "memberName": "escalationManagerSettings",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 52248,
                      "src": "12672:35:51",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_EscalationManagerSettings_$52245_storage",
                        "typeString": "struct OptimisticOracleV3Interface.EscalationManagerSettings storage ref"
                      }
                    },
                    "id": 51206,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberLocation": "12708:13:51",
                    "memberName": "discardOracle",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 52238,
                    "src": "12672:49:51",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 51212,
                  "nodeType": "IfStatement",
                  "src": "12668:102:51",
                  "trueBody": {
                    "expression": {
                      "arguments": [
                        {
                          "id": 51208,
                          "name": "assertionId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 51109,
                          "src": "12751:11:51",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        {
                          "hexValue": "66616c7365",
                          "id": 51209,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "12764:5:51",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "false"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          },
                          {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        ],
                        "id": 51207,
                        "name": "_callbackOnAssertionResolve",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 51977,
                        "src": "12723:27:51",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_bool_$returns$__$",
                          "typeString": "function (bytes32,bool)"
                        }
                      },
                      "id": 51210,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "12723:47:51",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$__$",
                        "typeString": "tuple()"
                      }
                    },
                    "id": 51211,
                    "nodeType": "ExpressionStatement",
                    "src": "12723:47:51"
                  }
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 51214,
                        "name": "assertionId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 51109,
                        "src": "12804:11:51",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "expression": {
                          "id": 51215,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "12817:3:51",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 51216,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "12821:6:51",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "12817:10:51",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 51217,
                        "name": "disputer",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 51111,
                        "src": "12829:8:51",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 51213,
                      "name": "AssertionDisputed",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 52398,
                      "src": "12786:17:51",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_bytes32_$_t_address_$_t_address_$returns$__$",
                        "typeString": "function (bytes32,address,address)"
                      }
                    },
                    "id": 51218,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12786:52:51",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 51219,
                  "nodeType": "EmitStatement",
                  "src": "12781:57:51"
                }
              ]
            },
            "documentation": {
              "id": 51107,
              "nodeType": "StructuredDocumentation",
              "src": "11331:451:51",
              "text": " @notice Disputes an assertion. Depending on how the assertion was configured, this may either escalate to the UMA\n DVM or the configured escalation manager for arbitration.\n @dev The caller must approve this contract to spend at least bond amount of currency for the associated assertion.\n @param assertionId unique identifier for the assertion to dispute.\n @param disputer receives bonds back at settlement."
            },
            "functionSelector": "a6a22b43",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 51114,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 51113,
                  "name": "nonReentrant",
                  "nameLocations": [
                    "11861:12:51"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 48526,
                  "src": "11861:12:51"
                },
                "nodeType": "ModifierInvocation",
                "src": "11861:12:51"
              }
            ],
            "name": "disputeAssertion",
            "nameLocation": "11796:16:51",
            "parameters": {
              "id": 51112,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 51109,
                  "mutability": "mutable",
                  "name": "assertionId",
                  "nameLocation": "11821:11:51",
                  "nodeType": "VariableDeclaration",
                  "scope": 51221,
                  "src": "11813:19:51",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 51108,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "11813:7:51",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 51111,
                  "mutability": "mutable",
                  "name": "disputer",
                  "nameLocation": "11842:8:51",
                  "nodeType": "VariableDeclaration",
                  "scope": 51221,
                  "src": "11834:16:51",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 51110,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "11834:7:51",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "11812:39:51"
            },
            "returnParameters": {
              "id": 51115,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "11874:0:51"
            },
            "scope": 52025,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 51413,
            "nodeType": "FunctionDefinition",
            "src": "13477:2449:51",
            "nodes": [],
            "body": {
              "id": 51412,
              "nodeType": "Block",
              "src": "13543:2383:51",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    51231
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 51231,
                      "mutability": "mutable",
                      "name": "assertion",
                      "nameLocation": "13571:9:51",
                      "nodeType": "VariableDeclaration",
                      "scope": 51412,
                      "src": "13553:27:51",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Assertion_$52272_storage_ptr",
                        "typeString": "struct OptimisticOracleV3Interface.Assertion"
                      },
                      "typeName": {
                        "id": 51230,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 51229,
                          "name": "Assertion",
                          "nameLocations": [
                            "13553:9:51"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 52272,
                          "src": "13553:9:51"
                        },
                        "referencedDeclaration": 52272,
                        "src": "13553:9:51",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Assertion_$52272_storage_ptr",
                          "typeString": "struct OptimisticOracleV3Interface.Assertion"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 51235,
                  "initialValue": {
                    "baseExpression": {
                      "id": 51232,
                      "name": "assertions",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 50776,
                      "src": "13583:10:51",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_Assertion_$52272_storage_$",
                        "typeString": "mapping(bytes32 => struct OptimisticOracleV3Interface.Assertion storage ref)"
                      }
                    },
                    "id": 51234,
                    "indexExpression": {
                      "id": 51233,
                      "name": "assertionId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 51224,
                      "src": "13594:11:51",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "13583:23:51",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Assertion_$52272_storage",
                      "typeString": "struct OptimisticOracleV3Interface.Assertion storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "13553:53:51"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 51243,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 51237,
                            "name": "assertion",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 51231,
                            "src": "13624:9:51",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Assertion_$52272_storage_ptr",
                              "typeString": "struct OptimisticOracleV3Interface.Assertion storage pointer"
                            }
                          },
                          "id": 51238,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "13634:8:51",
                          "memberName": "asserter",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 52250,
                          "src": "13624:18:51",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 51241,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "13654:1:51",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 51240,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "13646:7:51",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 51239,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "13646:7:51",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 51242,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "13646:10:51",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "13624:32:51",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "417373657274696f6e20646f6573206e6f74206578697374",
                        "id": 51244,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "13658:26:51",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_7f54d907407dcd7c4579621d4948bc84ba3a2e0d10e71cf8bd20da70bac08816",
                          "typeString": "literal_string \"Assertion does not exist\""
                        },
                        "value": "Assertion does not exist"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_7f54d907407dcd7c4579621d4948bc84ba3a2e0d10e71cf8bd20da70bac08816",
                          "typeString": "literal_string \"Assertion does not exist\""
                        }
                      ],
                      "id": 51236,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "13616:7:51",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 51245,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "13616:69:51",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 51246,
                  "nodeType": "ExpressionStatement",
                  "src": "13616:69:51"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 51250,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "UnaryOperation",
                        "operator": "!",
                        "prefix": true,
                        "src": "13742:18:51",
                        "subExpression": {
                          "expression": {
                            "id": 51248,
                            "name": "assertion",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 51231,
                            "src": "13743:9:51",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Assertion_$52272_storage_ptr",
                              "typeString": "struct OptimisticOracleV3Interface.Assertion storage pointer"
                            }
                          },
                          "id": 51249,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "13753:7:51",
                          "memberName": "settled",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 52254,
                          "src": "13743:17:51",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "417373657274696f6e20616c726561647920736574746c6564",
                        "id": 51251,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "13762:27:51",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_bc3eeab377b6fc7c565178c54f47db2d9434a15b18ecd700a307a51a961d9204",
                          "typeString": "literal_string \"Assertion already settled\""
                        },
                        "value": "Assertion already settled"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_bc3eeab377b6fc7c565178c54f47db2d9434a15b18ecd700a307a51a961d9204",
                          "typeString": "literal_string \"Assertion already settled\""
                        }
                      ],
                      "id": 51247,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "13734:7:51",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 51252,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "13734:56:51",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 51253,
                  "nodeType": "ExpressionStatement",
                  "src": "13734:56:51"
                },
                {
                  "expression": {
                    "id": 51258,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 51254,
                        "name": "assertion",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 51231,
                        "src": "13840:9:51",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Assertion_$52272_storage_ptr",
                          "typeString": "struct OptimisticOracleV3Interface.Assertion storage pointer"
                        }
                      },
                      "id": 51256,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberLocation": "13850:7:51",
                      "memberName": "settled",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 52254,
                      "src": "13840:17:51",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "74727565",
                      "id": 51257,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "13860:4:51",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "13840:24:51",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 51259,
                  "nodeType": "ExpressionStatement",
                  "src": "13840:24:51"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 51266,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "id": 51260,
                        "name": "assertion",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 51231,
                        "src": "13878:9:51",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Assertion_$52272_storage_ptr",
                          "typeString": "struct OptimisticOracleV3Interface.Assertion storage pointer"
                        }
                      },
                      "id": 51261,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "13888:8:51",
                      "memberName": "disputer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 52271,
                      "src": "13878:18:51",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "arguments": [
                        {
                          "hexValue": "30",
                          "id": 51264,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "13908:1:51",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          }
                        ],
                        "id": 51263,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "13900:7:51",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 51262,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "13900:7:51",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 51265,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "13900:10:51",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "13878:32:51",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 51410,
                    "nodeType": "Block",
                    "src": "14385:1535:51",
                    "statements": [
                      {
                        "assignments": [
                          51310
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 51310,
                            "mutability": "mutable",
                            "name": "resolvedPrice",
                            "nameLocation": "14487:13:51",
                            "nodeType": "VariableDeclaration",
                            "scope": 51410,
                            "src": "14480:20:51",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_int256",
                              "typeString": "int256"
                            },
                            "typeName": {
                              "id": 51309,
                              "name": "int256",
                              "nodeType": "ElementaryTypeName",
                              "src": "14480:6:51",
                              "typeDescriptions": {
                                "typeIdentifier": "t_int256",
                                "typeString": "int256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 51318,
                        "initialValue": {
                          "arguments": [
                            {
                              "id": 51312,
                              "name": "assertionId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 51224,
                              "src": "14519:11:51",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            {
                              "expression": {
                                "id": 51313,
                                "name": "assertion",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 51231,
                                "src": "14532:9:51",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Assertion_$52272_storage_ptr",
                                  "typeString": "struct OptimisticOracleV3Interface.Assertion storage pointer"
                                }
                              },
                              "id": 51314,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "14542:10:51",
                              "memberName": "identifier",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 52265,
                              "src": "14532:20:51",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            {
                              "expression": {
                                "id": 51315,
                                "name": "assertion",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 51231,
                                "src": "14554:9:51",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Assertion_$52272_storage_ptr",
                                  "typeString": "struct OptimisticOracleV3Interface.Assertion storage pointer"
                                }
                              },
                              "id": 51316,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "14564:13:51",
                              "memberName": "assertionTime",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 52252,
                              "src": "14554:23:51",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint64",
                                "typeString": "uint64"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              },
                              {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              },
                              {
                                "typeIdentifier": "t_uint64",
                                "typeString": "uint64"
                              }
                            ],
                            "id": 51311,
                            "name": "_oracleGetPrice",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 51761,
                            "src": "14503:15:51",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_bytes32_$_t_uint256_$returns$_t_int256_$",
                              "typeString": "function (bytes32,bytes32,uint256) view returns (int256)"
                            }
                          },
                          "id": 51317,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "14503:75:51",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_int256",
                            "typeString": "int256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "14480:98:51"
                      },
                      {
                        "condition": {
                          "expression": {
                            "expression": {
                              "id": 51319,
                              "name": "assertion",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 51231,
                              "src": "14707:9:51",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Assertion_$52272_storage_ptr",
                                "typeString": "struct OptimisticOracleV3Interface.Assertion storage pointer"
                              }
                            },
                            "id": 51320,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "14717:25:51",
                            "memberName": "escalationManagerSettings",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 52248,
                            "src": "14707:35:51",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_EscalationManagerSettings_$52245_storage",
                              "typeString": "struct OptimisticOracleV3Interface.EscalationManagerSettings storage ref"
                            }
                          },
                          "id": 51321,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "14743:13:51",
                          "memberName": "discardOracle",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 52238,
                          "src": "14707:49:51",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "falseBody": {
                          "expression": {
                            "id": 51334,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftHandSide": {
                              "expression": {
                                "id": 51328,
                                "name": "assertion",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 51231,
                                "src": "14815:9:51",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Assertion_$52272_storage_ptr",
                                  "typeString": "struct OptimisticOracleV3Interface.Assertion storage pointer"
                                }
                              },
                              "id": 51330,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": true,
                              "memberLocation": "14825:20:51",
                              "memberName": "settlementResolution",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 52261,
                              "src": "14815:30:51",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "nodeType": "Assignment",
                            "operator": "=",
                            "rightHandSide": {
                              "commonType": {
                                "typeIdentifier": "t_int256",
                                "typeString": "int256"
                              },
                              "id": 51333,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 51331,
                                "name": "resolvedPrice",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 51310,
                                "src": "14848:13:51",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_int256",
                                  "typeString": "int256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "==",
                              "rightExpression": {
                                "id": 51332,
                                "name": "numericalTrue",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 50784,
                                "src": "14865:13:51",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_int256",
                                  "typeString": "int256"
                                }
                              },
                              "src": "14848:30:51",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "src": "14815:63:51",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "id": 51335,
                          "nodeType": "ExpressionStatement",
                          "src": "14815:63:51"
                        },
                        "id": 51336,
                        "nodeType": "IfStatement",
                        "src": "14703:175:51",
                        "trueBody": {
                          "expression": {
                            "id": 51326,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftHandSide": {
                              "expression": {
                                "id": 51322,
                                "name": "assertion",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 51231,
                                "src": "14758:9:51",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Assertion_$52272_storage_ptr",
                                  "typeString": "struct OptimisticOracleV3Interface.Assertion storage pointer"
                                }
                              },
                              "id": 51324,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": true,
                              "memberLocation": "14768:20:51",
                              "memberName": "settlementResolution",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 52261,
                              "src": "14758:30:51",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "nodeType": "Assignment",
                            "operator": "=",
                            "rightHandSide": {
                              "hexValue": "66616c7365",
                              "id": 51325,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "bool",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "14791:5:51",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              "value": "false"
                            },
                            "src": "14758:38:51",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "id": 51327,
                          "nodeType": "ExpressionStatement",
                          "src": "14758:38:51"
                        }
                      },
                      {
                        "assignments": [
                          51338
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 51338,
                            "mutability": "mutable",
                            "name": "bondRecipient",
                            "nameLocation": "14901:13:51",
                            "nodeType": "VariableDeclaration",
                            "scope": 51410,
                            "src": "14893:21:51",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            "typeName": {
                              "id": 51337,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "14893:7:51",
                              "stateMutability": "nonpayable",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 51347,
                        "initialValue": {
                          "condition": {
                            "commonType": {
                              "typeIdentifier": "t_int256",
                              "typeString": "int256"
                            },
                            "id": 51341,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "id": 51339,
                              "name": "resolvedPrice",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 51310,
                              "src": "14917:13:51",
                              "typeDescriptions": {
                                "typeIdentifier": "t_int256",
                                "typeString": "int256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "==",
                            "rightExpression": {
                              "id": 51340,
                              "name": "numericalTrue",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 50784,
                              "src": "14934:13:51",
                              "typeDescriptions": {
                                "typeIdentifier": "t_int256",
                                "typeString": "int256"
                              }
                            },
                            "src": "14917:30:51",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "falseExpression": {
                            "expression": {
                              "id": 51344,
                              "name": "assertion",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 51231,
                              "src": "14971:9:51",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Assertion_$52272_storage_ptr",
                                "typeString": "struct OptimisticOracleV3Interface.Assertion storage pointer"
                              }
                            },
                            "id": 51345,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "14981:8:51",
                            "memberName": "disputer",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 52271,
                            "src": "14971:18:51",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "id": 51346,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "Conditional",
                          "src": "14917:72:51",
                          "trueExpression": {
                            "expression": {
                              "id": 51342,
                              "name": "assertion",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 51231,
                              "src": "14950:9:51",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Assertion_$52272_storage_ptr",
                                "typeString": "struct OptimisticOracleV3Interface.Assertion storage pointer"
                              }
                            },
                            "id": 51343,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "14960:8:51",
                            "memberName": "asserter",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 52250,
                            "src": "14950:18:51",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "14893:96:51"
                      },
                      {
                        "assignments": [
                          51349
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 51349,
                            "mutability": "mutable",
                            "name": "oracleFee",
                            "nameLocation": "15135:9:51",
                            "nodeType": "VariableDeclaration",
                            "scope": 51410,
                            "src": "15127:17:51",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 51348,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "15127:7:51",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 51357,
                        "initialValue": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 51356,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "components": [
                              {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 51353,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "id": 51350,
                                  "name": "burnedBondPercentage",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 50778,
                                  "src": "15148:20:51",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "*",
                                "rightExpression": {
                                  "expression": {
                                    "id": 51351,
                                    "name": "assertion",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 51231,
                                    "src": "15171:9:51",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_Assertion_$52272_storage_ptr",
                                      "typeString": "struct OptimisticOracleV3Interface.Assertion storage pointer"
                                    }
                                  },
                                  "id": 51352,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberLocation": "15181:4:51",
                                  "memberName": "bond",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 52267,
                                  "src": "15171:14:51",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "15148:37:51",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "id": 51354,
                            "isConstant": false,
                            "isInlineArray": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "TupleExpression",
                            "src": "15147:39:51",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "/",
                          "rightExpression": {
                            "hexValue": "31653138",
                            "id": 51355,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "15189:4:51",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_1000000000000000000_by_1",
                              "typeString": "int_const 1000000000000000000"
                            },
                            "value": "1e18"
                          },
                          "src": "15147:46:51",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "15127:66:51"
                      },
                      {
                        "assignments": [
                          51359
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 51359,
                            "mutability": "mutable",
                            "name": "bondRecipientAmount",
                            "nameLocation": "15215:19:51",
                            "nodeType": "VariableDeclaration",
                            "scope": 51410,
                            "src": "15207:27:51",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 51358,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "15207:7:51",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 51366,
                        "initialValue": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 51365,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 51363,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "expression": {
                                "id": 51360,
                                "name": "assertion",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 51231,
                                "src": "15237:9:51",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Assertion_$52272_storage_ptr",
                                  "typeString": "struct OptimisticOracleV3Interface.Assertion storage pointer"
                                }
                              },
                              "id": 51361,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "15247:4:51",
                              "memberName": "bond",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 52267,
                              "src": "15237:14:51",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "*",
                            "rightExpression": {
                              "hexValue": "32",
                              "id": 51362,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "15254:1:51",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_2_by_1",
                                "typeString": "int_const 2"
                              },
                              "value": "2"
                            },
                            "src": "15237:18:51",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "-",
                          "rightExpression": {
                            "id": 51364,
                            "name": "oracleFee",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 51349,
                            "src": "15258:9:51",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "15237:30:51",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "15207:60:51"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "arguments": [],
                                  "expression": {
                                    "argumentTypes": [],
                                    "id": 51374,
                                    "name": "_getStore",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 51692,
                                    "src": "15531:9:51",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_internal_view$__$returns$_t_contract$_StoreInterface_$50294_$",
                                      "typeString": "function () view returns (contract StoreInterface)"
                                    }
                                  },
                                  "id": 51375,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "nameLocations": [],
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "15531:11:51",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_StoreInterface_$50294",
                                    "typeString": "contract StoreInterface"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_StoreInterface_$50294",
                                    "typeString": "contract StoreInterface"
                                  }
                                ],
                                "id": 51373,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "15523:7:51",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 51372,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "15523:7:51",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 51376,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "15523:20:51",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 51377,
                              "name": "oracleFee",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 51349,
                              "src": "15545:9:51",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "expression": {
                                "id": 51367,
                                "name": "assertion",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 51231,
                                "src": "15491:9:51",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Assertion_$52272_storage_ptr",
                                  "typeString": "struct OptimisticOracleV3Interface.Assertion storage pointer"
                                }
                              },
                              "id": 51370,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "15501:8:51",
                              "memberName": "currency",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 52257,
                              "src": "15491:18:51",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC20_$45075",
                                "typeString": "contract IERC20"
                              }
                            },
                            "id": 51371,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "15510:12:51",
                            "memberName": "safeTransfer",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 45131,
                            "src": "15491:31:51",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$45075_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20_$45075_$",
                              "typeString": "function (contract IERC20,address,uint256)"
                            }
                          },
                          "id": 51378,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "15491:64:51",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 51379,
                        "nodeType": "ExpressionStatement",
                        "src": "15491:64:51"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 51385,
                              "name": "bondRecipient",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 51338,
                              "src": "15601:13:51",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 51386,
                              "name": "bondRecipientAmount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 51359,
                              "src": "15616:19:51",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "expression": {
                                "id": 51380,
                                "name": "assertion",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 51231,
                                "src": "15569:9:51",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Assertion_$52272_storage_ptr",
                                  "typeString": "struct OptimisticOracleV3Interface.Assertion storage pointer"
                                }
                              },
                              "id": 51383,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "15579:8:51",
                              "memberName": "currency",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 52257,
                              "src": "15569:18:51",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC20_$45075",
                                "typeString": "contract IERC20"
                              }
                            },
                            "id": 51384,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "15588:12:51",
                            "memberName": "safeTransfer",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 45131,
                            "src": "15569:31:51",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$45075_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20_$45075_$",
                              "typeString": "function (contract IERC20,address,uint256)"
                            }
                          },
                          "id": 51387,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "15569:67:51",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 51388,
                        "nodeType": "ExpressionStatement",
                        "src": "15569:67:51"
                      },
                      {
                        "condition": {
                          "id": 51392,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "UnaryOperation",
                          "operator": "!",
                          "prefix": true,
                          "src": "15655:50:51",
                          "subExpression": {
                            "expression": {
                              "expression": {
                                "id": 51389,
                                "name": "assertion",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 51231,
                                "src": "15656:9:51",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Assertion_$52272_storage_ptr",
                                  "typeString": "struct OptimisticOracleV3Interface.Assertion storage pointer"
                                }
                              },
                              "id": 51390,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "15666:25:51",
                              "memberName": "escalationManagerSettings",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 52248,
                              "src": "15656:35:51",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_EscalationManagerSettings_$52245_storage",
                                "typeString": "struct OptimisticOracleV3Interface.EscalationManagerSettings storage ref"
                              }
                            },
                            "id": 51391,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "15692:13:51",
                            "memberName": "discardOracle",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 52238,
                            "src": "15656:49:51",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 51399,
                        "nodeType": "IfStatement",
                        "src": "15651:144:51",
                        "trueBody": {
                          "expression": {
                            "arguments": [
                              {
                                "id": 51394,
                                "name": "assertionId",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 51224,
                                "src": "15751:11:51",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes32",
                                  "typeString": "bytes32"
                                }
                              },
                              {
                                "expression": {
                                  "id": 51395,
                                  "name": "assertion",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 51231,
                                  "src": "15764:9:51",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_Assertion_$52272_storage_ptr",
                                    "typeString": "struct OptimisticOracleV3Interface.Assertion storage pointer"
                                  }
                                },
                                "id": 51396,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "15774:20:51",
                                "memberName": "settlementResolution",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 52261,
                                "src": "15764:30:51",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bytes32",
                                  "typeString": "bytes32"
                                },
                                {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              ],
                              "id": 51393,
                              "name": "_callbackOnAssertionResolve",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 51977,
                              "src": "15723:27:51",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_bool_$returns$__$",
                                "typeString": "function (bytes32,bool)"
                              }
                            },
                            "id": 51397,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "15723:72:51",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_tuple$__$",
                              "typeString": "tuple()"
                            }
                          },
                          "id": 51398,
                          "nodeType": "ExpressionStatement",
                          "src": "15723:72:51"
                        }
                      },
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "id": 51401,
                              "name": "assertionId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 51224,
                              "src": "15832:11:51",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            {
                              "id": 51402,
                              "name": "bondRecipient",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 51338,
                              "src": "15845:13:51",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "hexValue": "74727565",
                              "id": 51403,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "bool",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "15860:4:51",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              "value": "true"
                            },
                            {
                              "expression": {
                                "id": 51404,
                                "name": "assertion",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 51231,
                                "src": "15866:9:51",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Assertion_$52272_storage_ptr",
                                  "typeString": "struct OptimisticOracleV3Interface.Assertion storage pointer"
                                }
                              },
                              "id": 51405,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "15876:20:51",
                              "memberName": "settlementResolution",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 52261,
                              "src": "15866:30:51",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "expression": {
                                "id": 51406,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "15898:3:51",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 51407,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "15902:6:51",
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "15898:10:51",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 51400,
                            "name": "AssertionSettled",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 52410,
                            "src": "15815:16:51",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_bytes32_$_t_address_$_t_bool_$_t_bool_$_t_address_$returns$__$",
                              "typeString": "function (bytes32,address,bool,bool,address)"
                            }
                          },
                          "id": 51408,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "15815:94:51",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 51409,
                        "nodeType": "EmitStatement",
                        "src": "15810:99:51"
                      }
                    ]
                  },
                  "id": 51411,
                  "nodeType": "IfStatement",
                  "src": "13874:2046:51",
                  "trueBody": {
                    "id": 51308,
                    "nodeType": "Block",
                    "src": "13912:467:51",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 51272,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "expression": {
                                  "id": 51268,
                                  "name": "assertion",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 51231,
                                  "src": "13986:9:51",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_Assertion_$52272_storage_ptr",
                                    "typeString": "struct OptimisticOracleV3Interface.Assertion storage pointer"
                                  }
                                },
                                "id": 51269,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "13996:14:51",
                                "memberName": "expirationTime",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 52259,
                                "src": "13986:24:51",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint64",
                                  "typeString": "uint64"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "<=",
                              "rightExpression": {
                                "arguments": [],
                                "expression": {
                                  "argumentTypes": [],
                                  "id": 51270,
                                  "name": "getCurrentTime",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 51549,
                                  "src": "14014:14:51",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                                    "typeString": "function () view returns (uint256)"
                                  }
                                },
                                "id": 51271,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "14014:16:51",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "13986:44:51",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "417373657274696f6e206e6f742065787069726564",
                              "id": 51273,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "14032:23:51",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_b583f5c702dc3aa382abb1202239775a4e2b379d1efc665cb9f9ef16a2319c54",
                                "typeString": "literal_string \"Assertion not expired\""
                              },
                              "value": "Assertion not expired"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_b583f5c702dc3aa382abb1202239775a4e2b379d1efc665cb9f9ef16a2319c54",
                                "typeString": "literal_string \"Assertion not expired\""
                              }
                            ],
                            "id": 51267,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "13978:7:51",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 51274,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "13978:78:51",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 51275,
                        "nodeType": "ExpressionStatement",
                        "src": "13978:78:51"
                      },
                      {
                        "expression": {
                          "id": 51280,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "expression": {
                              "id": 51276,
                              "name": "assertion",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 51231,
                              "src": "14096:9:51",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Assertion_$52272_storage_ptr",
                                "typeString": "struct OptimisticOracleV3Interface.Assertion storage pointer"
                              }
                            },
                            "id": 51278,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberLocation": "14106:20:51",
                            "memberName": "settlementResolution",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 52261,
                            "src": "14096:30:51",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "hexValue": "74727565",
                            "id": 51279,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "bool",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "14129:4:51",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "value": "true"
                          },
                          "src": "14096:37:51",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 51281,
                        "nodeType": "ExpressionStatement",
                        "src": "14096:37:51"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 51287,
                                "name": "assertion",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 51231,
                                "src": "14179:9:51",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Assertion_$52272_storage_ptr",
                                  "typeString": "struct OptimisticOracleV3Interface.Assertion storage pointer"
                                }
                              },
                              "id": 51288,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "14189:8:51",
                              "memberName": "asserter",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 52250,
                              "src": "14179:18:51",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "expression": {
                                "id": 51289,
                                "name": "assertion",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 51231,
                                "src": "14199:9:51",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Assertion_$52272_storage_ptr",
                                  "typeString": "struct OptimisticOracleV3Interface.Assertion storage pointer"
                                }
                              },
                              "id": 51290,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "14209:4:51",
                              "memberName": "bond",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 52267,
                              "src": "14199:14:51",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "expression": {
                                "id": 51282,
                                "name": "assertion",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 51231,
                                "src": "14147:9:51",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Assertion_$52272_storage_ptr",
                                  "typeString": "struct OptimisticOracleV3Interface.Assertion storage pointer"
                                }
                              },
                              "id": 51285,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "14157:8:51",
                              "memberName": "currency",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 52257,
                              "src": "14147:18:51",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC20_$45075",
                                "typeString": "contract IERC20"
                              }
                            },
                            "id": 51286,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "14166:12:51",
                            "memberName": "safeTransfer",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 45131,
                            "src": "14147:31:51",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$45075_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20_$45075_$",
                              "typeString": "function (contract IERC20,address,uint256)"
                            }
                          },
                          "id": 51291,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "14147:67:51",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 51292,
                        "nodeType": "ExpressionStatement",
                        "src": "14147:67:51"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 51294,
                              "name": "assertionId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 51224,
                              "src": "14256:11:51",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            {
                              "hexValue": "74727565",
                              "id": 51295,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "bool",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "14269:4:51",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              "value": "true"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              },
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            ],
                            "id": 51293,
                            "name": "_callbackOnAssertionResolve",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 51977,
                            "src": "14228:27:51",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_bool_$returns$__$",
                              "typeString": "function (bytes32,bool)"
                            }
                          },
                          "id": 51296,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "14228:46:51",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 51297,
                        "nodeType": "ExpressionStatement",
                        "src": "14228:46:51"
                      },
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "id": 51299,
                              "name": "assertionId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 51224,
                              "src": "14311:11:51",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            {
                              "expression": {
                                "id": 51300,
                                "name": "assertion",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 51231,
                                "src": "14324:9:51",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Assertion_$52272_storage_ptr",
                                  "typeString": "struct OptimisticOracleV3Interface.Assertion storage pointer"
                                }
                              },
                              "id": 51301,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "14334:8:51",
                              "memberName": "asserter",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 52250,
                              "src": "14324:18:51",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "hexValue": "66616c7365",
                              "id": 51302,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "bool",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "14344:5:51",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              "value": "false"
                            },
                            {
                              "hexValue": "74727565",
                              "id": 51303,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "bool",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "14351:4:51",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              "value": "true"
                            },
                            {
                              "expression": {
                                "id": 51304,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "14357:3:51",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 51305,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "14361:6:51",
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "14357:10:51",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 51298,
                            "name": "AssertionSettled",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 52410,
                            "src": "14294:16:51",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_bytes32_$_t_address_$_t_bool_$_t_bool_$_t_address_$returns$__$",
                              "typeString": "function (bytes32,address,bool,bool,address)"
                            }
                          },
                          "id": 51306,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "14294:74:51",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 51307,
                        "nodeType": "EmitStatement",
                        "src": "14289:79:51"
                      }
                    ]
                  }
                }
              ]
            },
            "baseFunctions": [
              52341
            ],
            "documentation": {
              "id": 51222,
              "nodeType": "StructuredDocumentation",
              "src": "12851:621:51",
              "text": " @notice Resolves an assertion. If the assertion has not been disputed, the assertion is resolved as true and the\n asserter receives the bond. If the assertion has been disputed, the assertion is resolved depending on the oracle\n result. Based on the result, the asserter or disputer receives the bond. If the assertion was disputed then an\n amount of the bond is sent to the UMA Store as an oracle fee based on the burnedBondPercentage. The remainder of\n the bond is returned to the asserter or disputer.\n @param assertionId unique identifier for the assertion to resolve."
            },
            "functionSelector": "4124beef",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 51227,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 51226,
                  "name": "nonReentrant",
                  "nameLocations": [
                    "13530:12:51"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 48526,
                  "src": "13530:12:51"
                },
                "nodeType": "ModifierInvocation",
                "src": "13530:12:51"
              }
            ],
            "name": "settleAssertion",
            "nameLocation": "13486:15:51",
            "parameters": {
              "id": 51225,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 51224,
                  "mutability": "mutable",
                  "name": "assertionId",
                  "nameLocation": "13510:11:51",
                  "nodeType": "VariableDeclaration",
                  "scope": 51413,
                  "src": "13502:19:51",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 51223,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "13502:7:51",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "13501:21:51"
            },
            "returnParameters": {
              "id": 51228,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "13543:0:51"
            },
            "scope": 52025,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 51436,
            "nodeType": "FunctionDefinition",
            "src": "16160:291:51",
            "nodes": [],
            "body": {
              "id": 51435,
              "nodeType": "Block",
              "src": "16242:209:51",
              "nodes": [],
              "statements": [
                {
                  "condition": {
                    "id": 51425,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "!",
                    "prefix": true,
                    "src": "16334:32:51",
                    "subExpression": {
                      "expression": {
                        "baseExpression": {
                          "id": 51421,
                          "name": "assertions",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 50776,
                          "src": "16335:10:51",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_Assertion_$52272_storage_$",
                            "typeString": "mapping(bytes32 => struct OptimisticOracleV3Interface.Assertion storage ref)"
                          }
                        },
                        "id": 51423,
                        "indexExpression": {
                          "id": 51422,
                          "name": "assertionId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 51416,
                          "src": "16346:11:51",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "16335:23:51",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Assertion_$52272_storage",
                          "typeString": "struct OptimisticOracleV3Interface.Assertion storage ref"
                        }
                      },
                      "id": 51424,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "16359:7:51",
                      "memberName": "settled",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 52254,
                      "src": "16335:31:51",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 51430,
                  "nodeType": "IfStatement",
                  "src": "16330:66:51",
                  "trueBody": {
                    "expression": {
                      "arguments": [
                        {
                          "id": 51427,
                          "name": "assertionId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 51416,
                          "src": "16384:11:51",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        ],
                        "id": 51426,
                        "name": "settleAssertion",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 51413,
                        "src": "16368:15:51",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$returns$__$",
                          "typeString": "function (bytes32)"
                        }
                      },
                      "id": 51428,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "16368:28:51",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$__$",
                        "typeString": "tuple()"
                      }
                    },
                    "id": 51429,
                    "nodeType": "ExpressionStatement",
                    "src": "16368:28:51"
                  }
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 51432,
                        "name": "assertionId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 51416,
                        "src": "16432:11:51",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      ],
                      "id": 51431,
                      "name": "getAssertionResult",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 51539,
                      "src": "16413:18:51",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_bytes32_$returns$_t_bool_$",
                        "typeString": "function (bytes32) view returns (bool)"
                      }
                    },
                    "id": 51433,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "16413:31:51",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 51420,
                  "id": 51434,
                  "nodeType": "Return",
                  "src": "16406:38:51"
                }
              ]
            },
            "baseFunctions": [
              52349
            ],
            "documentation": {
              "id": 51414,
              "nodeType": "StructuredDocumentation",
              "src": "15932:223:51",
              "text": " @notice Settles an assertion and returns the resolution.\n @param assertionId unique identifier for the assertion to resolve and return the resolution for.\n @return resolution of the assertion."
            },
            "functionSelector": "8ea2f2ab",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "settleAndGetAssertionResult",
            "nameLocation": "16169:27:51",
            "parameters": {
              "id": 51417,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 51416,
                  "mutability": "mutable",
                  "name": "assertionId",
                  "nameLocation": "16205:11:51",
                  "nodeType": "VariableDeclaration",
                  "scope": 51436,
                  "src": "16197:19:51",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 51415,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "16197:7:51",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "16196:21:51"
            },
            "returnParameters": {
              "id": 51420,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 51419,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 51436,
                  "src": "16236:4:51",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 51418,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "16236:4:51",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "16235:6:51"
            },
            "scope": 52025,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 51486,
            "nodeType": "FunctionDefinition",
            "src": "16922:453:51",
            "nodes": [],
            "body": {
              "id": 51485,
              "nodeType": "Block",
              "src": "16990:385:51",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 51450,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 51444,
                      "name": "cachedOracle",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 50762,
                      "src": "17000:12:51",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "expression": {
                            "id": 51447,
                            "name": "OracleInterfaces",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 49662,
                            "src": "17047:16:51",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_contract$_OracleInterfaces_$49662_$",
                              "typeString": "type(library OracleInterfaces)"
                            }
                          },
                          "id": 51448,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberLocation": "17064:6:51",
                          "memberName": "Oracle",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 49619,
                          "src": "17047:23:51",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        ],
                        "expression": {
                          "id": 51445,
                          "name": "finder",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 50760,
                          "src": "17015:6:51",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_FinderInterface_$50187",
                            "typeString": "contract FinderInterface"
                          }
                        },
                        "id": 51446,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "17022:24:51",
                        "memberName": "getImplementationAddress",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 50186,
                        "src": "17015:31:51",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_view$_t_bytes32_$returns$_t_address_$",
                          "typeString": "function (bytes32) view external returns (address)"
                        }
                      },
                      "id": 51449,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "17015:56:51",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "17000:71:51",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 51451,
                  "nodeType": "ExpressionStatement",
                  "src": "17000:71:51"
                },
                {
                  "expression": {
                    "id": 51460,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 51452,
                        "name": "cachedIdentifiers",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 50771,
                        "src": "17081:17:51",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_bytes32_$_t_bool_$",
                          "typeString": "mapping(bytes32 => bool)"
                        }
                      },
                      "id": 51454,
                      "indexExpression": {
                        "id": 51453,
                        "name": "identifier",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 51439,
                        "src": "17099:10:51",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "17081:29:51",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 51458,
                          "name": "identifier",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 51439,
                          "src": "17161:10:51",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        ],
                        "expression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 51455,
                            "name": "_getIdentifierWhitelist",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 51677,
                            "src": "17113:23:51",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$__$returns$_t_contract$_IdentifierWhitelistInterface_$50211_$",
                              "typeString": "function () view returns (contract IdentifierWhitelistInterface)"
                            }
                          },
                          "id": 51456,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "17113:25:51",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IdentifierWhitelistInterface_$50211",
                            "typeString": "contract IdentifierWhitelistInterface"
                          }
                        },
                        "id": 51457,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "17139:21:51",
                        "memberName": "isIdentifierSupported",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 50210,
                        "src": "17113:47:51",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_view$_t_bytes32_$returns$_t_bool_$",
                          "typeString": "function (bytes32) view external returns (bool)"
                        }
                      },
                      "id": 51459,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "17113:59:51",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "17081:91:51",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 51461,
                  "nodeType": "ExpressionStatement",
                  "src": "17081:91:51"
                },
                {
                  "expression": {
                    "id": 51471,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "baseExpression": {
                          "id": 51462,
                          "name": "cachedCurrencies",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 50767,
                          "src": "17182:16:51",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_WhitelistedCurrency_$52277_storage_$",
                            "typeString": "mapping(address => struct OptimisticOracleV3Interface.WhitelistedCurrency storage ref)"
                          }
                        },
                        "id": 51464,
                        "indexExpression": {
                          "id": 51463,
                          "name": "currency",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 51441,
                          "src": "17199:8:51",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "17182:26:51",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_WhitelistedCurrency_$52277_storage",
                          "typeString": "struct OptimisticOracleV3Interface.WhitelistedCurrency storage ref"
                        }
                      },
                      "id": 51465,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberLocation": "17209:13:51",
                      "memberName": "isWhitelisted",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 52274,
                      "src": "17182:40:51",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 51469,
                          "name": "currency",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 51441,
                          "src": "17265:8:51",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "expression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 51466,
                            "name": "_getCollateralWhitelist",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 51662,
                            "src": "17225:23:51",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$__$returns$_t_contract$_AddressWhitelist_$46235_$",
                              "typeString": "function () view returns (contract AddressWhitelist)"
                            }
                          },
                          "id": 51467,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "17225:25:51",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_AddressWhitelist_$46235",
                            "typeString": "contract AddressWhitelist"
                          }
                        },
                        "id": 51468,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "17251:13:51",
                        "memberName": "isOnWhitelist",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 46145,
                        "src": "17225:39:51",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_bool_$",
                          "typeString": "function (address) view external returns (bool)"
                        }
                      },
                      "id": 51470,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "17225:49:51",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "17182:92:51",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 51472,
                  "nodeType": "ExpressionStatement",
                  "src": "17182:92:51"
                },
                {
                  "expression": {
                    "id": 51483,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "baseExpression": {
                          "id": 51473,
                          "name": "cachedCurrencies",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 50767,
                          "src": "17284:16:51",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_WhitelistedCurrency_$52277_storage_$",
                            "typeString": "mapping(address => struct OptimisticOracleV3Interface.WhitelistedCurrency storage ref)"
                          }
                        },
                        "id": 51475,
                        "indexExpression": {
                          "id": 51474,
                          "name": "currency",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 51441,
                          "src": "17301:8:51",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "17284:26:51",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_WhitelistedCurrency_$52277_storage",
                          "typeString": "struct OptimisticOracleV3Interface.WhitelistedCurrency storage ref"
                        }
                      },
                      "id": 51476,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberLocation": "17311:8:51",
                      "memberName": "finalFee",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 52276,
                      "src": "17284:35:51",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "arguments": [
                          {
                            "id": 51480,
                            "name": "currency",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 51441,
                            "src": "17350:8:51",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "id": 51477,
                              "name": "_getStore",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 51692,
                              "src": "17322:9:51",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$__$returns$_t_contract$_StoreInterface_$50294_$",
                                "typeString": "function () view returns (contract StoreInterface)"
                              }
                            },
                            "id": 51478,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "17322:11:51",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_StoreInterface_$50294",
                              "typeString": "contract StoreInterface"
                            }
                          },
                          "id": 51479,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "17334:15:51",
                          "memberName": "computeFinalFee",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 50293,
                          "src": "17322:27:51",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_struct$_Unsigned_$46885_memory_ptr_$",
                            "typeString": "function (address) view external returns (struct FixedPoint.Unsigned memory)"
                          }
                        },
                        "id": 51481,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "17322:37:51",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Unsigned_$46885_memory_ptr",
                          "typeString": "struct FixedPoint.Unsigned memory"
                        }
                      },
                      "id": 51482,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "17360:8:51",
                      "memberName": "rawValue",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 46884,
                      "src": "17322:46:51",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "17284:84:51",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 51484,
                  "nodeType": "ExpressionStatement",
                  "src": "17284:84:51"
                }
              ]
            },
            "baseFunctions": [
              52335
            ],
            "documentation": {
              "id": 51437,
              "nodeType": "StructuredDocumentation",
              "src": "16457:460:51",
              "text": " @notice Fetches information about a specific identifier & currency from the UMA contracts and stores a local copy\n of the information within this contract. This is used to save gas when making assertions as we can avoid an\n external call to the UMA contracts to fetch this.\n @param identifier identifier to fetch information for and store locally.\n @param currency currency to fetch information for and store locally."
            },
            "functionSelector": "a8655785",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "syncUmaParams",
            "nameLocation": "16931:13:51",
            "parameters": {
              "id": 51442,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 51439,
                  "mutability": "mutable",
                  "name": "identifier",
                  "nameLocation": "16953:10:51",
                  "nodeType": "VariableDeclaration",
                  "scope": 51486,
                  "src": "16945:18:51",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 51438,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "16945:7:51",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 51441,
                  "mutability": "mutable",
                  "name": "currency",
                  "nameLocation": "16973:8:51",
                  "nodeType": "VariableDeclaration",
                  "scope": 51486,
                  "src": "16965:16:51",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 51440,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "16965:7:51",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "16944:38:51"
            },
            "returnParameters": {
              "id": 51443,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "16990:0:51"
            },
            "scope": 52025,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 51500,
            "nodeType": "FunctionDefinition",
            "src": "17621:131:51",
            "nodes": [],
            "body": {
              "id": 51499,
              "nodeType": "Block",
              "src": "17705:47:51",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "baseExpression": {
                      "id": 51495,
                      "name": "assertions",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 50776,
                      "src": "17722:10:51",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_Assertion_$52272_storage_$",
                        "typeString": "mapping(bytes32 => struct OptimisticOracleV3Interface.Assertion storage ref)"
                      }
                    },
                    "id": 51497,
                    "indexExpression": {
                      "id": 51496,
                      "name": "assertionId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 51489,
                      "src": "17733:11:51",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "17722:23:51",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Assertion_$52272_storage",
                      "typeString": "struct OptimisticOracleV3Interface.Assertion storage ref"
                    }
                  },
                  "functionReturnParameters": 51494,
                  "id": 51498,
                  "nodeType": "Return",
                  "src": "17715:30:51"
                }
              ]
            },
            "baseFunctions": [
              52292
            ],
            "documentation": {
              "id": 51487,
              "nodeType": "StructuredDocumentation",
              "src": "17381:235:51",
              "text": " @notice Fetches information about a specific assertion and returns it.\n @param assertionId unique identifier for the assertion to fetch information for.\n @return assertion information about the assertion."
            },
            "functionSelector": "88302884",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getAssertion",
            "nameLocation": "17630:12:51",
            "parameters": {
              "id": 51490,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 51489,
                  "mutability": "mutable",
                  "name": "assertionId",
                  "nameLocation": "17651:11:51",
                  "nodeType": "VariableDeclaration",
                  "scope": 51500,
                  "src": "17643:19:51",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 51488,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "17643:7:51",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "17642:21:51"
            },
            "returnParameters": {
              "id": 51494,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 51493,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 51500,
                  "src": "17687:16:51",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Assertion_$52272_memory_ptr",
                    "typeString": "struct OptimisticOracleV3Interface.Assertion"
                  },
                  "typeName": {
                    "id": 51492,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 51491,
                      "name": "Assertion",
                      "nameLocations": [
                        "17687:9:51"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 52272,
                      "src": "17687:9:51"
                    },
                    "referencedDeclaration": 52272,
                    "src": "17687:9:51",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Assertion_$52272_storage_ptr",
                      "typeString": "struct OptimisticOracleV3Interface.Assertion"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "17686:18:51"
            },
            "scope": 52025,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 51539,
            "nodeType": "FunctionDefinition",
            "src": "18147:469:51",
            "nodes": [],
            "body": {
              "id": 51538,
              "nodeType": "Block",
              "src": "18223:393:51",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    51510
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 51510,
                      "mutability": "mutable",
                      "name": "assertion",
                      "nameLocation": "18250:9:51",
                      "nodeType": "VariableDeclaration",
                      "scope": 51538,
                      "src": "18233:26:51",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Assertion_$52272_memory_ptr",
                        "typeString": "struct OptimisticOracleV3Interface.Assertion"
                      },
                      "typeName": {
                        "id": 51509,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 51508,
                          "name": "Assertion",
                          "nameLocations": [
                            "18233:9:51"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 52272,
                          "src": "18233:9:51"
                        },
                        "referencedDeclaration": 52272,
                        "src": "18233:9:51",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Assertion_$52272_storage_ptr",
                          "typeString": "struct OptimisticOracleV3Interface.Assertion"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 51514,
                  "initialValue": {
                    "baseExpression": {
                      "id": 51511,
                      "name": "assertions",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 50776,
                      "src": "18262:10:51",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_Assertion_$52272_storage_$",
                        "typeString": "mapping(bytes32 => struct OptimisticOracleV3Interface.Assertion storage ref)"
                      }
                    },
                    "id": 51513,
                    "indexExpression": {
                      "id": 51512,
                      "name": "assertionId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 51503,
                      "src": "18273:11:51",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "18262:23:51",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Assertion_$52272_storage",
                      "typeString": "struct OptimisticOracleV3Interface.Assertion storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "18233:52:51"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "id": 51525,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "commonType": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "id": 51521,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "expression": {
                          "id": 51515,
                          "name": "assertion",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 51510,
                          "src": "18366:9:51",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Assertion_$52272_memory_ptr",
                            "typeString": "struct OptimisticOracleV3Interface.Assertion memory"
                          }
                        },
                        "id": 51516,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "18376:8:51",
                        "memberName": "disputer",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 52271,
                        "src": "18366:18:51",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "!=",
                      "rightExpression": {
                        "arguments": [
                          {
                            "hexValue": "30",
                            "id": 51519,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "18396:1:51",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 51518,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "18388:7:51",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 51517,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "18388:7:51",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 51520,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "18388:10:51",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "src": "18366:32:51",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "&&",
                    "rightExpression": {
                      "expression": {
                        "expression": {
                          "id": 51522,
                          "name": "assertion",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 51510,
                          "src": "18402:9:51",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Assertion_$52272_memory_ptr",
                            "typeString": "struct OptimisticOracleV3Interface.Assertion memory"
                          }
                        },
                        "id": 51523,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "18412:25:51",
                        "memberName": "escalationManagerSettings",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 52248,
                        "src": "18402:35:51",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_EscalationManagerSettings_$52245_memory_ptr",
                          "typeString": "struct OptimisticOracleV3Interface.EscalationManagerSettings memory"
                        }
                      },
                      "id": 51524,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "18438:13:51",
                      "memberName": "discardOracle",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 52238,
                      "src": "18402:49:51",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "18366:85:51",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 51528,
                  "nodeType": "IfStatement",
                  "src": "18362:103:51",
                  "trueBody": {
                    "expression": {
                      "hexValue": "66616c7365",
                      "id": 51526,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "18460:5:51",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "false"
                    },
                    "functionReturnParameters": 51507,
                    "id": 51527,
                    "nodeType": "Return",
                    "src": "18453:12:51"
                  }
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 51530,
                          "name": "assertion",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 51510,
                          "src": "18483:9:51",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Assertion_$52272_memory_ptr",
                            "typeString": "struct OptimisticOracleV3Interface.Assertion memory"
                          }
                        },
                        "id": 51531,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "18493:7:51",
                        "memberName": "settled",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 52254,
                        "src": "18483:17:51",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "417373657274696f6e206e6f7420736574746c6564",
                        "id": 51532,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "18502:23:51",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_a4a0cb4660ec6172813798000be6ed9bb3cfab408acdacd65c62f67e41f8069e",
                          "typeString": "literal_string \"Assertion not settled\""
                        },
                        "value": "Assertion not settled"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_a4a0cb4660ec6172813798000be6ed9bb3cfab408acdacd65c62f67e41f8069e",
                          "typeString": "literal_string \"Assertion not settled\""
                        }
                      ],
                      "id": 51529,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "18475:7:51",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 51533,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "18475:51:51",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 51534,
                  "nodeType": "ExpressionStatement",
                  "src": "18475:51:51"
                },
                {
                  "expression": {
                    "expression": {
                      "id": 51535,
                      "name": "assertion",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 51510,
                      "src": "18579:9:51",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Assertion_$52272_memory_ptr",
                        "typeString": "struct OptimisticOracleV3Interface.Assertion memory"
                      }
                    },
                    "id": 51536,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberLocation": "18589:20:51",
                    "memberName": "settlementResolution",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 52261,
                    "src": "18579:30:51",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 51507,
                  "id": 51537,
                  "nodeType": "Return",
                  "src": "18572:37:51"
                }
              ]
            },
            "baseFunctions": [
              52357
            ],
            "documentation": {
              "id": 51501,
              "nodeType": "StructuredDocumentation",
              "src": "17758:384:51",
              "text": " @notice Fetches the resolution of a specific assertion and returns it. If the assertion has not been settled then\n this will revert. If the assertion was disputed and configured to discard the oracle resolution return false.\n @param assertionId unique identifier for the assertion to fetch the resolution for.\n @return resolution of the assertion."
            },
            "functionSelector": "e39dfd7f",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getAssertionResult",
            "nameLocation": "18156:18:51",
            "parameters": {
              "id": 51504,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 51503,
                  "mutability": "mutable",
                  "name": "assertionId",
                  "nameLocation": "18183:11:51",
                  "nodeType": "VariableDeclaration",
                  "scope": 51539,
                  "src": "18175:19:51",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 51502,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "18175:7:51",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "18174:21:51"
            },
            "returnParameters": {
              "id": 51507,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 51506,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 51539,
                  "src": "18217:4:51",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 51505,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "18217:4:51",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "18216:6:51"
            },
            "scope": 52025,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 51549,
            "nodeType": "FunctionDefinition",
            "src": "18786:103:51",
            "nodes": [],
            "body": {
              "id": 51548,
              "nodeType": "Block",
              "src": "18850:39:51",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "expression": {
                      "id": 51545,
                      "name": "block",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": -4,
                      "src": "18867:5:51",
                      "typeDescriptions": {
                        "typeIdentifier": "t_magic_block",
                        "typeString": "block"
                      }
                    },
                    "id": 51546,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberLocation": "18873:9:51",
                    "memberName": "timestamp",
                    "nodeType": "MemberAccess",
                    "src": "18867:15:51",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 51544,
                  "id": 51547,
                  "nodeType": "Return",
                  "src": "18860:22:51"
                }
              ]
            },
            "documentation": {
              "id": 51540,
              "nodeType": "StructuredDocumentation",
              "src": "18622:159:51",
              "text": " @notice Returns the current block timestamp.\n @dev Can be overridden to control contract time.\n @return current block timestamp."
            },
            "functionSelector": "29cb924d",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getCurrentTime",
            "nameLocation": "18795:14:51",
            "parameters": {
              "id": 51541,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "18809:2:51"
            },
            "returnParameters": {
              "id": 51544,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 51543,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 51549,
                  "src": "18841:7:51",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 51542,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "18841:7:51",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "18840:9:51"
            },
            "scope": 52025,
            "stateMutability": "view",
            "virtual": true,
            "visibility": "public"
          },
          {
            "id": 51562,
            "nodeType": "FunctionDefinition",
            "src": "19178:132:51",
            "nodes": [],
            "body": {
              "id": 51561,
              "nodeType": "Block",
              "src": "19258:52:51",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 51558,
                        "name": "assertionId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 51552,
                        "src": "19291:11:51",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      ],
                      "id": 51557,
                      "name": "_stampAssertion",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 51647,
                      "src": "19275:15:51",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_bytes32_$returns$_t_bytes_memory_ptr_$",
                        "typeString": "function (bytes32) view returns (bytes memory)"
                      }
                    },
                    "id": 51559,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "19275:28:51",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_memory_ptr",
                      "typeString": "bytes memory"
                    }
                  },
                  "functionReturnParameters": 51556,
                  "id": 51560,
                  "nodeType": "Return",
                  "src": "19268:35:51"
                }
              ]
            },
            "documentation": {
              "id": 51550,
              "nodeType": "StructuredDocumentation",
              "src": "18895:278:51",
              "text": " @notice Appends information onto an assertionId to construct ancillary data used for dispute resolution.\n @param assertionId unique identifier for the assertion to construct ancillary data for.\n @return ancillaryData stamped assertion information."
            },
            "functionSelector": "afedba4f",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "stampAssertion",
            "nameLocation": "19187:14:51",
            "parameters": {
              "id": 51553,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 51552,
                  "mutability": "mutable",
                  "name": "assertionId",
                  "nameLocation": "19210:11:51",
                  "nodeType": "VariableDeclaration",
                  "scope": 51562,
                  "src": "19202:19:51",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 51551,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "19202:7:51",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "19201:21:51"
            },
            "returnParameters": {
              "id": 51556,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 51555,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 51562,
                  "src": "19244:12:51",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 51554,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "19244:5:51",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "19243:14:51"
            },
            "scope": 52025,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 51585,
            "nodeType": "FunctionDefinition",
            "src": "19674:200:51",
            "nodes": [],
            "body": {
              "id": 51584,
              "nodeType": "Block",
              "src": "19746:128:51",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    51571
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 51571,
                      "mutability": "mutable",
                      "name": "finalFee",
                      "nameLocation": "19764:8:51",
                      "nodeType": "VariableDeclaration",
                      "scope": 51584,
                      "src": "19756:16:51",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 51570,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "19756:7:51",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 51576,
                  "initialValue": {
                    "expression": {
                      "baseExpression": {
                        "id": 51572,
                        "name": "cachedCurrencies",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 50767,
                        "src": "19775:16:51",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_struct$_WhitelistedCurrency_$52277_storage_$",
                          "typeString": "mapping(address => struct OptimisticOracleV3Interface.WhitelistedCurrency storage ref)"
                        }
                      },
                      "id": 51574,
                      "indexExpression": {
                        "id": 51573,
                        "name": "currency",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 51565,
                        "src": "19792:8:51",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "19775:26:51",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_WhitelistedCurrency_$52277_storage",
                        "typeString": "struct OptimisticOracleV3Interface.WhitelistedCurrency storage ref"
                      }
                    },
                    "id": 51575,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberLocation": "19802:8:51",
                    "memberName": "finalFee",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 52276,
                    "src": "19775:35:51",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "19756:54:51"
                },
                {
                  "expression": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 51582,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "components": [
                        {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 51579,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 51577,
                            "name": "finalFee",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 51571,
                            "src": "19828:8:51",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "*",
                          "rightExpression": {
                            "hexValue": "31653138",
                            "id": 51578,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "19839:4:51",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_1000000000000000000_by_1",
                              "typeString": "int_const 1000000000000000000"
                            },
                            "value": "1e18"
                          },
                          "src": "19828:15:51",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "id": 51580,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "TupleExpression",
                      "src": "19827:17:51",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "/",
                    "rightExpression": {
                      "id": 51581,
                      "name": "burnedBondPercentage",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 50778,
                      "src": "19847:20:51",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "19827:40:51",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 51569,
                  "id": 51583,
                  "nodeType": "Return",
                  "src": "19820:47:51"
                }
              ]
            },
            "baseFunctions": [
              52365
            ],
            "documentation": {
              "id": 51563,
              "nodeType": "StructuredDocumentation",
              "src": "19316:353:51",
              "text": " @notice Returns the minimum bond amount required to make an assertion. This is calculated as the final fee of the\n currency divided by the burnedBondPercentage. If burn percentage is 50% then the min bond is 2x the final fee.\n @param currency currency to calculate the minimum bond for.\n @return minimum bond amount."
            },
            "functionSelector": "4360af3d",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getMinimumBond",
            "nameLocation": "19683:14:51",
            "parameters": {
              "id": 51566,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 51565,
                  "mutability": "mutable",
                  "name": "currency",
                  "nameLocation": "19706:8:51",
                  "nodeType": "VariableDeclaration",
                  "scope": 51585,
                  "src": "19698:16:51",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 51564,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "19698:7:51",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "19697:18:51"
            },
            "returnParameters": {
              "id": 51569,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 51568,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 51585,
                  "src": "19737:7:51",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 51567,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "19737:7:51",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "19736:9:51"
            },
            "scope": 52025,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 51624,
            "nodeType": "FunctionDefinition",
            "src": "19988:660:51",
            "nodes": [],
            "body": {
              "id": 51623,
              "nodeType": "Block",
              "src": "20262:386:51",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 51610,
                            "name": "claim",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 51587,
                            "src": "20350:5:51",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          },
                          {
                            "id": 51611,
                            "name": "bond",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 51589,
                            "src": "20377:4:51",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          {
                            "id": 51612,
                            "name": "time",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 51591,
                            "src": "20403:4:51",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          {
                            "id": 51613,
                            "name": "liveness",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 51593,
                            "src": "20429:8:51",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint64",
                              "typeString": "uint64"
                            }
                          },
                          {
                            "id": 51614,
                            "name": "currency",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 51596,
                            "src": "20459:8:51",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IERC20_$45075",
                              "typeString": "contract IERC20"
                            }
                          },
                          {
                            "id": 51615,
                            "name": "callbackRecipient",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 51598,
                            "src": "20489:17:51",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "id": 51616,
                            "name": "escalationManager",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 51600,
                            "src": "20528:17:51",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "id": 51617,
                            "name": "identifier",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 51602,
                            "src": "20567:10:51",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          {
                            "expression": {
                              "id": 51618,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "20599:3:51",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 51619,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "20603:6:51",
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "20599:10:51",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            {
                              "typeIdentifier": "t_uint64",
                              "typeString": "uint64"
                            },
                            {
                              "typeIdentifier": "t_contract$_IERC20_$45075",
                              "typeString": "contract IERC20"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 51608,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -1,
                            "src": "20318:3:51",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 51609,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberLocation": "20322:6:51",
                          "memberName": "encode",
                          "nodeType": "MemberAccess",
                          "src": "20318:10:51",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function () pure returns (bytes memory)"
                          }
                        },
                        "id": 51620,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "20318:309:51",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 51607,
                      "name": "keccak256",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": -8,
                      "src": "20291:9:51",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                        "typeString": "function (bytes memory) pure returns (bytes32)"
                      }
                    },
                    "id": 51621,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "20291:350:51",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "functionReturnParameters": 51606,
                  "id": 51622,
                  "nodeType": "Return",
                  "src": "20272:369:51"
                }
              ]
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_getId",
            "nameLocation": "19997:6:51",
            "parameters": {
              "id": 51603,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 51587,
                  "mutability": "mutable",
                  "name": "claim",
                  "nameLocation": "20026:5:51",
                  "nodeType": "VariableDeclaration",
                  "scope": 51624,
                  "src": "20013:18:51",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 51586,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "20013:5:51",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 51589,
                  "mutability": "mutable",
                  "name": "bond",
                  "nameLocation": "20049:4:51",
                  "nodeType": "VariableDeclaration",
                  "scope": 51624,
                  "src": "20041:12:51",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 51588,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "20041:7:51",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 51591,
                  "mutability": "mutable",
                  "name": "time",
                  "nameLocation": "20071:4:51",
                  "nodeType": "VariableDeclaration",
                  "scope": 51624,
                  "src": "20063:12:51",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 51590,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "20063:7:51",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 51593,
                  "mutability": "mutable",
                  "name": "liveness",
                  "nameLocation": "20092:8:51",
                  "nodeType": "VariableDeclaration",
                  "scope": 51624,
                  "src": "20085:15:51",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint64",
                    "typeString": "uint64"
                  },
                  "typeName": {
                    "id": 51592,
                    "name": "uint64",
                    "nodeType": "ElementaryTypeName",
                    "src": "20085:6:51",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint64",
                      "typeString": "uint64"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 51596,
                  "mutability": "mutable",
                  "name": "currency",
                  "nameLocation": "20117:8:51",
                  "nodeType": "VariableDeclaration",
                  "scope": 51624,
                  "src": "20110:15:51",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IERC20_$45075",
                    "typeString": "contract IERC20"
                  },
                  "typeName": {
                    "id": 51595,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 51594,
                      "name": "IERC20",
                      "nameLocations": [
                        "20110:6:51"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 45075,
                      "src": "20110:6:51"
                    },
                    "referencedDeclaration": 45075,
                    "src": "20110:6:51",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$45075",
                      "typeString": "contract IERC20"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 51598,
                  "mutability": "mutable",
                  "name": "callbackRecipient",
                  "nameLocation": "20143:17:51",
                  "nodeType": "VariableDeclaration",
                  "scope": 51624,
                  "src": "20135:25:51",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 51597,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "20135:7:51",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 51600,
                  "mutability": "mutable",
                  "name": "escalationManager",
                  "nameLocation": "20178:17:51",
                  "nodeType": "VariableDeclaration",
                  "scope": 51624,
                  "src": "20170:25:51",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 51599,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "20170:7:51",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 51602,
                  "mutability": "mutable",
                  "name": "identifier",
                  "nameLocation": "20213:10:51",
                  "nodeType": "VariableDeclaration",
                  "scope": 51624,
                  "src": "20205:18:51",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 51601,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "20205:7:51",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "20003:226:51"
            },
            "returnParameters": {
              "id": 51606,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 51605,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 51624,
                  "src": "20253:7:51",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 51604,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "20253:7:51",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "20252:9:51"
            },
            "scope": 52025,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 51647,
            "nodeType": "FunctionDefinition",
            "src": "20744:333:51",
            "nodes": [],
            "body": {
              "id": 51646,
              "nodeType": "Block",
              "src": "20827:250:51",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "hexValue": "",
                            "id": 51635,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "string",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "20945:2:51",
                            "typeDescriptions": {
                              "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                              "typeString": "literal_string \"\""
                            },
                            "value": ""
                          },
                          {
                            "hexValue": "617373657274696f6e4964",
                            "id": 51636,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "string",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "20949:13:51",
                            "typeDescriptions": {
                              "typeIdentifier": "t_stringliteral_bd75d8d88c1c3670179d7f2a362f6095a5b4bbceaae7bab320c056741977e694",
                              "typeString": "literal_string \"assertionId\""
                            },
                            "value": "assertionId"
                          },
                          {
                            "id": 51637,
                            "name": "assertionId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 51626,
                            "src": "20964:11:51",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                              "typeString": "literal_string \"\""
                            },
                            {
                              "typeIdentifier": "t_stringliteral_bd75d8d88c1c3670179d7f2a362f6095a5b4bbceaae7bab320c056741977e694",
                              "typeString": "literal_string \"assertionId\""
                            },
                            {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          ],
                          "expression": {
                            "id": 51633,
                            "name": "AncillaryData",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 46643,
                            "src": "20909:13:51",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_contract$_AncillaryData_$46643_$",
                              "typeString": "type(library AncillaryData)"
                            }
                          },
                          "id": 51634,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "20923:21:51",
                          "memberName": "appendKeyValueBytes32",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 46553,
                          "src": "20909:35:51",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_bytes_memory_ptr_$_t_bytes_memory_ptr_$_t_bytes32_$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function (bytes memory,bytes memory,bytes32) pure returns (bytes memory)"
                          }
                        },
                        "id": 51638,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "20909:67:51",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      },
                      {
                        "hexValue": "6f6f4173736572746572",
                        "id": 51639,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "20994:12:51",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_e03e3695f0195ee3b1ff04b32021f8f30a57bcb0ca126b3fc7b152d532bac87c",
                          "typeString": "literal_string \"ooAsserter\""
                        },
                        "value": "ooAsserter"
                      },
                      {
                        "expression": {
                          "baseExpression": {
                            "id": 51640,
                            "name": "assertions",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 50776,
                            "src": "21024:10:51",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_Assertion_$52272_storage_$",
                              "typeString": "mapping(bytes32 => struct OptimisticOracleV3Interface.Assertion storage ref)"
                            }
                          },
                          "id": 51642,
                          "indexExpression": {
                            "id": 51641,
                            "name": "assertionId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 51626,
                            "src": "21035:11:51",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "21024:23:51",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Assertion_$52272_storage",
                            "typeString": "struct OptimisticOracleV3Interface.Assertion storage ref"
                          }
                        },
                        "id": 51643,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "21048:8:51",
                        "memberName": "asserter",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 52250,
                        "src": "21024:32:51",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_e03e3695f0195ee3b1ff04b32021f8f30a57bcb0ca126b3fc7b152d532bac87c",
                          "typeString": "literal_string \"ooAsserter\""
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 51631,
                        "name": "AncillaryData",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 46643,
                        "src": "20856:13:51",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_AncillaryData_$46643_$",
                          "typeString": "type(library AncillaryData)"
                        }
                      },
                      "id": 51632,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "20870:21:51",
                      "memberName": "appendKeyValueAddress",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 46582,
                      "src": "20856:35:51",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_bytes_memory_ptr_$_t_bytes_memory_ptr_$_t_address_$returns$_t_bytes_memory_ptr_$",
                        "typeString": "function (bytes memory,bytes memory,address) pure returns (bytes memory)"
                      }
                    },
                    "id": 51644,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "20856:214:51",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_memory_ptr",
                      "typeString": "bytes memory"
                    }
                  },
                  "functionReturnParameters": 51630,
                  "id": 51645,
                  "nodeType": "Return",
                  "src": "20837:233:51"
                }
              ]
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_stampAssertion",
            "nameLocation": "20753:15:51",
            "parameters": {
              "id": 51627,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 51626,
                  "mutability": "mutable",
                  "name": "assertionId",
                  "nameLocation": "20777:11:51",
                  "nodeType": "VariableDeclaration",
                  "scope": 51647,
                  "src": "20769:19:51",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 51625,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "20769:7:51",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "20768:21:51"
            },
            "returnParameters": {
              "id": 51630,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 51629,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 51647,
                  "src": "20813:12:51",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 51628,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "20813:5:51",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "20812:14:51"
            },
            "scope": 52025,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 51662,
            "nodeType": "FunctionDefinition",
            "src": "21155:187:51",
            "nodes": [],
            "body": {
              "id": 51661,
              "nodeType": "Block",
              "src": "21231:111:51",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "expression": {
                              "id": 51656,
                              "name": "OracleInterfaces",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 49662,
                              "src": "21297:16:51",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_OracleInterfaces_$49662_$",
                                "typeString": "type(library OracleInterfaces)"
                              }
                            },
                            "id": 51657,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberLocation": "21314:19:51",
                            "memberName": "CollateralWhitelist",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 49634,
                            "src": "21297:36:51",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          ],
                          "expression": {
                            "id": 51654,
                            "name": "finder",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 50760,
                            "src": "21265:6:51",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_FinderInterface_$50187",
                              "typeString": "contract FinderInterface"
                            }
                          },
                          "id": 51655,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "21272:24:51",
                          "memberName": "getImplementationAddress",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 50186,
                          "src": "21265:31:51",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_bytes32_$returns$_t_address_$",
                            "typeString": "function (bytes32) view external returns (address)"
                          }
                        },
                        "id": 51658,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "21265:69:51",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 51653,
                      "name": "AddressWhitelist",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 46235,
                      "src": "21248:16:51",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_contract$_AddressWhitelist_$46235_$",
                        "typeString": "type(contract AddressWhitelist)"
                      }
                    },
                    "id": 51659,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "21248:87:51",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_AddressWhitelist_$46235",
                      "typeString": "contract AddressWhitelist"
                    }
                  },
                  "functionReturnParameters": 51652,
                  "id": 51660,
                  "nodeType": "Return",
                  "src": "21241:94:51"
                }
              ]
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_getCollateralWhitelist",
            "nameLocation": "21164:23:51",
            "parameters": {
              "id": 51648,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "21187:2:51"
            },
            "returnParameters": {
              "id": 51652,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 51651,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 51662,
                  "src": "21213:16:51",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_AddressWhitelist_$46235",
                    "typeString": "contract AddressWhitelist"
                  },
                  "typeName": {
                    "id": 51650,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 51649,
                      "name": "AddressWhitelist",
                      "nameLocations": [
                        "21213:16:51"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 46235,
                      "src": "21213:16:51"
                    },
                    "referencedDeclaration": 46235,
                    "src": "21213:16:51",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_AddressWhitelist_$46235",
                      "typeString": "contract AddressWhitelist"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "21212:18:51"
            },
            "scope": 52025,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 51677,
            "nodeType": "FunctionDefinition",
            "src": "21425:211:51",
            "nodes": [],
            "body": {
              "id": 51676,
              "nodeType": "Block",
              "src": "21513:123:51",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "expression": {
                              "id": 51671,
                              "name": "OracleInterfaces",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 49662,
                              "src": "21591:16:51",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_OracleInterfaces_$49662_$",
                                "typeString": "type(library OracleInterfaces)"
                              }
                            },
                            "id": 51672,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberLocation": "21608:19:51",
                            "memberName": "IdentifierWhitelist",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 49622,
                            "src": "21591:36:51",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          ],
                          "expression": {
                            "id": 51669,
                            "name": "finder",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 50760,
                            "src": "21559:6:51",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_FinderInterface_$50187",
                              "typeString": "contract FinderInterface"
                            }
                          },
                          "id": 51670,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "21566:24:51",
                          "memberName": "getImplementationAddress",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 50186,
                          "src": "21559:31:51",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_bytes32_$returns$_t_address_$",
                            "typeString": "function (bytes32) view external returns (address)"
                          }
                        },
                        "id": 51673,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "21559:69:51",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 51668,
                      "name": "IdentifierWhitelistInterface",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 50211,
                      "src": "21530:28:51",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_contract$_IdentifierWhitelistInterface_$50211_$",
                        "typeString": "type(contract IdentifierWhitelistInterface)"
                      }
                    },
                    "id": 51674,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "21530:99:51",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IdentifierWhitelistInterface_$50211",
                      "typeString": "contract IdentifierWhitelistInterface"
                    }
                  },
                  "functionReturnParameters": 51667,
                  "id": 51675,
                  "nodeType": "Return",
                  "src": "21523:106:51"
                }
              ]
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_getIdentifierWhitelist",
            "nameLocation": "21434:23:51",
            "parameters": {
              "id": 51663,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "21457:2:51"
            },
            "returnParameters": {
              "id": 51667,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 51666,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 51677,
                  "src": "21483:28:51",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IdentifierWhitelistInterface_$50211",
                    "typeString": "contract IdentifierWhitelistInterface"
                  },
                  "typeName": {
                    "id": 51665,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 51664,
                      "name": "IdentifierWhitelistInterface",
                      "nameLocations": [
                        "21483:28:51"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 50211,
                      "src": "21483:28:51"
                    },
                    "referencedDeclaration": 50211,
                    "src": "21483:28:51",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IdentifierWhitelistInterface_$50211",
                      "typeString": "contract IdentifierWhitelistInterface"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "21482:30:51"
            },
            "scope": 52025,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 51692,
            "nodeType": "FunctionDefinition",
            "src": "21700:155:51",
            "nodes": [],
            "body": {
              "id": 51691,
              "nodeType": "Block",
              "src": "21760:95:51",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "expression": {
                              "id": 51686,
                              "name": "OracleInterfaces",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 49662,
                              "src": "21824:16:51",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_OracleInterfaces_$49662_$",
                                "typeString": "type(library OracleInterfaces)"
                              }
                            },
                            "id": 51687,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberLocation": "21841:5:51",
                            "memberName": "Store",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 49625,
                            "src": "21824:22:51",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          ],
                          "expression": {
                            "id": 51684,
                            "name": "finder",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 50760,
                            "src": "21792:6:51",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_FinderInterface_$50187",
                              "typeString": "contract FinderInterface"
                            }
                          },
                          "id": 51685,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "21799:24:51",
                          "memberName": "getImplementationAddress",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 50186,
                          "src": "21792:31:51",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_bytes32_$returns$_t_address_$",
                            "typeString": "function (bytes32) view external returns (address)"
                          }
                        },
                        "id": 51688,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "21792:55:51",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 51683,
                      "name": "StoreInterface",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 50294,
                      "src": "21777:14:51",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_contract$_StoreInterface_$50294_$",
                        "typeString": "type(contract StoreInterface)"
                      }
                    },
                    "id": 51689,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "21777:71:51",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_StoreInterface_$50294",
                      "typeString": "contract StoreInterface"
                    }
                  },
                  "functionReturnParameters": 51682,
                  "id": 51690,
                  "nodeType": "Return",
                  "src": "21770:78:51"
                }
              ]
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_getStore",
            "nameLocation": "21709:9:51",
            "parameters": {
              "id": 51678,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "21718:2:51"
            },
            "returnParameters": {
              "id": 51682,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 51681,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 51692,
                  "src": "21744:14:51",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_StoreInterface_$50294",
                    "typeString": "contract StoreInterface"
                  },
                  "typeName": {
                    "id": 51680,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 51679,
                      "name": "StoreInterface",
                      "nameLocations": [
                        "21744:14:51"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 50294,
                      "src": "21744:14:51"
                    },
                    "referencedDeclaration": 50294,
                    "src": "21744:14:51",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_StoreInterface_$50294",
                      "typeString": "contract StoreInterface"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "21743:16:51"
            },
            "scope": 52025,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 51717,
            "nodeType": "FunctionDefinition",
            "src": "21969:326:51",
            "nodes": [],
            "body": {
              "id": 51716,
              "nodeType": "Block",
              "src": "22059:236:51",
              "nodes": [],
              "statements": [
                {
                  "condition": {
                    "expression": {
                      "expression": {
                        "baseExpression": {
                          "id": 51700,
                          "name": "assertions",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 50776,
                          "src": "22073:10:51",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_Assertion_$52272_storage_$",
                            "typeString": "mapping(bytes32 => struct OptimisticOracleV3Interface.Assertion storage ref)"
                          }
                        },
                        "id": 51702,
                        "indexExpression": {
                          "id": 51701,
                          "name": "assertionId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 51694,
                          "src": "22084:11:51",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "22073:23:51",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Assertion_$52272_storage",
                          "typeString": "struct OptimisticOracleV3Interface.Assertion storage ref"
                        }
                      },
                      "id": 51703,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "22097:25:51",
                      "memberName": "escalationManagerSettings",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 52248,
                      "src": "22073:49:51",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_EscalationManagerSettings_$52245_storage",
                        "typeString": "struct OptimisticOracleV3Interface.EscalationManagerSettings storage ref"
                      }
                    },
                    "id": 51704,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberLocation": "22123:29:51",
                    "memberName": "arbitrateViaEscalationManager",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 52236,
                    "src": "22073:79:51",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 51711,
                  "nodeType": "IfStatement",
                  "src": "22069:164:51",
                  "trueBody": {
                    "expression": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "id": 51707,
                              "name": "assertionId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 51694,
                              "src": "22220:11:51",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            ],
                            "id": 51706,
                            "name": "_getEscalationManager",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 51775,
                            "src": "22198:21:51",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_bytes32_$returns$_t_address_$",
                              "typeString": "function (bytes32) view returns (address)"
                            }
                          },
                          "id": 51708,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "22198:34:51",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 51705,
                        "name": "OracleAncillaryInterface",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 50249,
                        "src": "22173:24:51",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_OracleAncillaryInterface_$50249_$",
                          "typeString": "type(contract OracleAncillaryInterface)"
                        }
                      },
                      "id": 51709,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "22173:60:51",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_OracleAncillaryInterface_$50249",
                        "typeString": "contract OracleAncillaryInterface"
                      }
                    },
                    "functionReturnParameters": 51699,
                    "id": 51710,
                    "nodeType": "Return",
                    "src": "22166:67:51"
                  }
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 51713,
                        "name": "cachedOracle",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 50762,
                        "src": "22275:12:51",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 51712,
                      "name": "OracleAncillaryInterface",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 50249,
                      "src": "22250:24:51",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_contract$_OracleAncillaryInterface_$50249_$",
                        "typeString": "type(contract OracleAncillaryInterface)"
                      }
                    },
                    "id": 51714,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "22250:38:51",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_OracleAncillaryInterface_$50249",
                      "typeString": "contract OracleAncillaryInterface"
                    }
                  },
                  "functionReturnParameters": 51699,
                  "id": 51715,
                  "nodeType": "Return",
                  "src": "22243:45:51"
                }
              ]
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_getOracle",
            "nameLocation": "21978:10:51",
            "parameters": {
              "id": 51695,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 51694,
                  "mutability": "mutable",
                  "name": "assertionId",
                  "nameLocation": "21997:11:51",
                  "nodeType": "VariableDeclaration",
                  "scope": 51717,
                  "src": "21989:19:51",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 51693,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "21989:7:51",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "21988:21:51"
            },
            "returnParameters": {
              "id": 51699,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 51698,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 51717,
                  "src": "22033:24:51",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_OracleAncillaryInterface_$50249",
                    "typeString": "contract OracleAncillaryInterface"
                  },
                  "typeName": {
                    "id": 51697,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 51696,
                      "name": "OracleAncillaryInterface",
                      "nameLocations": [
                        "22033:24:51"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 50249,
                      "src": "22033:24:51"
                    },
                    "referencedDeclaration": 50249,
                    "src": "22033:24:51",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_OracleAncillaryInterface_$50249",
                      "typeString": "contract OracleAncillaryInterface"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "22032:26:51"
            },
            "scope": 52025,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 51738,
            "nodeType": "FunctionDefinition",
            "src": "22384:224:51",
            "nodes": [],
            "body": {
              "id": 51737,
              "nodeType": "Block",
              "src": "22507:101:51",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 51730,
                        "name": "identifier",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 51721,
                        "src": "22554:10:51",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "id": 51731,
                        "name": "time",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 51723,
                        "src": "22566:4:51",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 51733,
                            "name": "assertionId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 51719,
                            "src": "22588:11:51",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          ],
                          "id": 51732,
                          "name": "_stampAssertion",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 51647,
                          "src": "22572:15:51",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_bytes32_$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function (bytes32) view returns (bytes memory)"
                          }
                        },
                        "id": 51734,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "22572:28:51",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "id": 51727,
                            "name": "assertionId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 51719,
                            "src": "22528:11:51",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          ],
                          "id": 51726,
                          "name": "_getOracle",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 51717,
                          "src": "22517:10:51",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_bytes32_$returns$_t_contract$_OracleAncillaryInterface_$50249_$",
                            "typeString": "function (bytes32) view returns (contract OracleAncillaryInterface)"
                          }
                        },
                        "id": 51728,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "22517:23:51",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_OracleAncillaryInterface_$50249",
                          "typeString": "contract OracleAncillaryInterface"
                        }
                      },
                      "id": 51729,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "22541:12:51",
                      "memberName": "requestPrice",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 50224,
                      "src": "22517:36:51",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_bytes32_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (bytes32,uint256,bytes memory) external"
                      }
                    },
                    "id": 51735,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "22517:84:51",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 51736,
                  "nodeType": "ExpressionStatement",
                  "src": "22517:84:51"
                }
              ]
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_oracleRequestPrice",
            "nameLocation": "22393:19:51",
            "parameters": {
              "id": 51724,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 51719,
                  "mutability": "mutable",
                  "name": "assertionId",
                  "nameLocation": "22430:11:51",
                  "nodeType": "VariableDeclaration",
                  "scope": 51738,
                  "src": "22422:19:51",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 51718,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "22422:7:51",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 51721,
                  "mutability": "mutable",
                  "name": "identifier",
                  "nameLocation": "22459:10:51",
                  "nodeType": "VariableDeclaration",
                  "scope": 51738,
                  "src": "22451:18:51",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 51720,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "22451:7:51",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 51723,
                  "mutability": "mutable",
                  "name": "time",
                  "nameLocation": "22487:4:51",
                  "nodeType": "VariableDeclaration",
                  "scope": 51738,
                  "src": "22479:12:51",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 51722,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "22479:7:51",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "22412:85:51"
            },
            "returnParameters": {
              "id": 51725,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "22507:0:51"
            },
            "scope": 52025,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 51761,
            "nodeType": "FunctionDefinition",
            "src": "22702:245:51",
            "nodes": [],
            "body": {
              "id": 51760,
              "nodeType": "Block",
              "src": "22843:104:51",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 51753,
                        "name": "identifier",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 51742,
                        "src": "22893:10:51",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "id": 51754,
                        "name": "time",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 51744,
                        "src": "22905:4:51",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 51756,
                            "name": "assertionId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 51740,
                            "src": "22927:11:51",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          ],
                          "id": 51755,
                          "name": "_stampAssertion",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 51647,
                          "src": "22911:15:51",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_bytes32_$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function (bytes32) view returns (bytes memory)"
                          }
                        },
                        "id": 51757,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "22911:28:51",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "id": 51750,
                            "name": "assertionId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 51740,
                            "src": "22871:11:51",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          ],
                          "id": 51749,
                          "name": "_getOracle",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 51717,
                          "src": "22860:10:51",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_bytes32_$returns$_t_contract$_OracleAncillaryInterface_$50249_$",
                            "typeString": "function (bytes32) view returns (contract OracleAncillaryInterface)"
                          }
                        },
                        "id": 51751,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "22860:23:51",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_OracleAncillaryInterface_$50249",
                          "typeString": "contract OracleAncillaryInterface"
                        }
                      },
                      "id": 51752,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "22884:8:51",
                      "memberName": "getPrice",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 50248,
                      "src": "22860:32:51",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_bytes32_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_int256_$",
                        "typeString": "function (bytes32,uint256,bytes memory) view external returns (int256)"
                      }
                    },
                    "id": 51758,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "22860:80:51",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_int256",
                      "typeString": "int256"
                    }
                  },
                  "functionReturnParameters": 51748,
                  "id": 51759,
                  "nodeType": "Return",
                  "src": "22853:87:51"
                }
              ]
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_oracleGetPrice",
            "nameLocation": "22711:15:51",
            "parameters": {
              "id": 51745,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 51740,
                  "mutability": "mutable",
                  "name": "assertionId",
                  "nameLocation": "22744:11:51",
                  "nodeType": "VariableDeclaration",
                  "scope": 51761,
                  "src": "22736:19:51",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 51739,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "22736:7:51",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 51742,
                  "mutability": "mutable",
                  "name": "identifier",
                  "nameLocation": "22773:10:51",
                  "nodeType": "VariableDeclaration",
                  "scope": 51761,
                  "src": "22765:18:51",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 51741,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "22765:7:51",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 51744,
                  "mutability": "mutable",
                  "name": "time",
                  "nameLocation": "22801:4:51",
                  "nodeType": "VariableDeclaration",
                  "scope": 51761,
                  "src": "22793:12:51",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 51743,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "22793:7:51",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "22726:85:51"
            },
            "returnParameters": {
              "id": 51748,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 51747,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 51761,
                  "src": "22835:6:51",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_int256",
                    "typeString": "int256"
                  },
                  "typeName": {
                    "id": 51746,
                    "name": "int256",
                    "nodeType": "ElementaryTypeName",
                    "src": "22835:6:51",
                    "typeDescriptions": {
                      "typeIdentifier": "t_int256",
                      "typeString": "int256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "22834:8:51"
            },
            "scope": 52025,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 51775,
            "nodeType": "FunctionDefinition",
            "src": "23018:175:51",
            "nodes": [],
            "body": {
              "id": 51774,
              "nodeType": "Block",
              "src": "23102:91:51",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "expression": {
                      "expression": {
                        "baseExpression": {
                          "id": 51768,
                          "name": "assertions",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 50776,
                          "src": "23119:10:51",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_Assertion_$52272_storage_$",
                            "typeString": "mapping(bytes32 => struct OptimisticOracleV3Interface.Assertion storage ref)"
                          }
                        },
                        "id": 51770,
                        "indexExpression": {
                          "id": 51769,
                          "name": "assertionId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 51763,
                          "src": "23130:11:51",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "23119:23:51",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Assertion_$52272_storage",
                          "typeString": "struct OptimisticOracleV3Interface.Assertion storage ref"
                        }
                      },
                      "id": 51771,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "23143:25:51",
                      "memberName": "escalationManagerSettings",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 52248,
                      "src": "23119:49:51",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_EscalationManagerSettings_$52245_storage",
                        "typeString": "struct OptimisticOracleV3Interface.EscalationManagerSettings storage ref"
                      }
                    },
                    "id": 51772,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberLocation": "23169:17:51",
                    "memberName": "escalationManager",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 52244,
                    "src": "23119:67:51",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "functionReturnParameters": 51767,
                  "id": 51773,
                  "nodeType": "Return",
                  "src": "23112:74:51"
                }
              ]
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_getEscalationManager",
            "nameLocation": "23027:21:51",
            "parameters": {
              "id": 51764,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 51763,
                  "mutability": "mutable",
                  "name": "assertionId",
                  "nameLocation": "23057:11:51",
                  "nodeType": "VariableDeclaration",
                  "scope": 51775,
                  "src": "23049:19:51",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 51762,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "23049:7:51",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "23048:21:51"
            },
            "returnParameters": {
              "id": 51767,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 51766,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 51775,
                  "src": "23093:7:51",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 51765,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "23093:7:51",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "23092:9:51"
            },
            "scope": 52025,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 51812,
            "nodeType": "FunctionDefinition",
            "src": "23342:404:51",
            "nodes": [],
            "body": {
              "id": 51811,
              "nodeType": "Block",
              "src": "23494:252:51",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    51784
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 51784,
                      "mutability": "mutable",
                      "name": "em",
                      "nameLocation": "23512:2:51",
                      "nodeType": "VariableDeclaration",
                      "scope": 51811,
                      "src": "23504:10:51",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 51783,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "23504:7:51",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 51788,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 51786,
                        "name": "assertionId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 51777,
                        "src": "23539:11:51",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      ],
                      "id": 51785,
                      "name": "_getEscalationManager",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 51775,
                      "src": "23517:21:51",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_bytes32_$returns$_t_address_$",
                        "typeString": "function (bytes32) view returns (address)"
                      }
                    },
                    "id": 51787,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "23517:34:51",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "23504:47:51"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 51794,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 51789,
                      "name": "em",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 51784,
                      "src": "23565:2:51",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "arguments": [
                        {
                          "hexValue": "30",
                          "id": 51792,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "23579:1:51",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          }
                        ],
                        "id": 51791,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "23571:7:51",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 51790,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "23571:7:51",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 51793,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "23571:10:51",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "23565:16:51",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 51803,
                  "nodeType": "IfStatement",
                  "src": "23561:99:51",
                  "trueBody": {
                    "expression": {
                      "arguments": [
                        {
                          "hexValue": "66616c7365",
                          "id": 51797,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "23633:5:51",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "false"
                        },
                        {
                          "hexValue": "66616c7365",
                          "id": 51798,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "23640:5:51",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "false"
                        },
                        {
                          "hexValue": "66616c7365",
                          "id": 51799,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "23647:5:51",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "false"
                        },
                        {
                          "hexValue": "66616c7365",
                          "id": 51800,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "23654:5:51",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "false"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        ],
                        "expression": {
                          "id": 51795,
                          "name": "EscalationManagerInterface",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 52212,
                          "src": "23590:26:51",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_EscalationManagerInterface_$52212_$",
                            "typeString": "type(contract EscalationManagerInterface)"
                          }
                        },
                        "id": 51796,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "23617:15:51",
                        "memberName": "AssertionPolicy",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 52170,
                        "src": "23590:42:51",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_struct$_AssertionPolicy_$52170_storage_ptr_$",
                          "typeString": "type(struct EscalationManagerInterface.AssertionPolicy storage pointer)"
                        }
                      },
                      "id": 51801,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "structConstructorCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "23590:70:51",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_AssertionPolicy_$52170_memory_ptr",
                        "typeString": "struct EscalationManagerInterface.AssertionPolicy memory"
                      }
                    },
                    "functionReturnParameters": 51782,
                    "id": 51802,
                    "nodeType": "Return",
                    "src": "23583:77:51"
                  }
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 51808,
                        "name": "assertionId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 51777,
                        "src": "23727:11:51",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "id": 51805,
                            "name": "em",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 51784,
                            "src": "23704:2:51",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 51804,
                          "name": "EscalationManagerInterface",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 52212,
                          "src": "23677:26:51",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_EscalationManagerInterface_$52212_$",
                            "typeString": "type(contract EscalationManagerInterface)"
                          }
                        },
                        "id": 51806,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "23677:30:51",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_EscalationManagerInterface_$52212",
                          "typeString": "contract EscalationManagerInterface"
                        }
                      },
                      "id": 51807,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "23708:18:51",
                      "memberName": "getAssertionPolicy",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 52179,
                      "src": "23677:49:51",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_bytes32_$returns$_t_struct$_AssertionPolicy_$52170_memory_ptr_$",
                        "typeString": "function (bytes32) view external returns (struct EscalationManagerInterface.AssertionPolicy memory)"
                      }
                    },
                    "id": 51809,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "23677:62:51",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_AssertionPolicy_$52170_memory_ptr",
                      "typeString": "struct EscalationManagerInterface.AssertionPolicy memory"
                    }
                  },
                  "functionReturnParameters": 51782,
                  "id": 51810,
                  "nodeType": "Return",
                  "src": "23670:69:51"
                }
              ]
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_getAssertionPolicy",
            "nameLocation": "23351:19:51",
            "parameters": {
              "id": 51778,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 51777,
                  "mutability": "mutable",
                  "name": "assertionId",
                  "nameLocation": "23379:11:51",
                  "nodeType": "VariableDeclaration",
                  "scope": 51812,
                  "src": "23371:19:51",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 51776,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "23371:7:51",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "23370:21:51"
            },
            "returnParameters": {
              "id": 51782,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 51781,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 51812,
                  "src": "23439:49:51",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_AssertionPolicy_$52170_memory_ptr",
                    "typeString": "struct EscalationManagerInterface.AssertionPolicy"
                  },
                  "typeName": {
                    "id": 51780,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 51779,
                      "name": "EscalationManagerInterface.AssertionPolicy",
                      "nameLocations": [
                        "23439:26:51",
                        "23466:15:51"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 52170,
                      "src": "23439:42:51"
                    },
                    "referencedDeclaration": 52170,
                    "src": "23439:42:51",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_AssertionPolicy_$52170_storage_ptr",
                      "typeString": "struct EscalationManagerInterface.AssertionPolicy"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "23438:51:51"
            },
            "scope": 52025,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 51855,
            "nodeType": "FunctionDefinition",
            "src": "23948:401:51",
            "nodes": [],
            "body": {
              "id": 51854,
              "nodeType": "Block",
              "src": "24025:324:51",
              "nodes": [],
              "statements": [
                {
                  "condition": {
                    "id": 51824,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "!",
                    "prefix": true,
                    "src": "24039:68:51",
                    "subExpression": {
                      "expression": {
                        "expression": {
                          "baseExpression": {
                            "id": 51819,
                            "name": "assertions",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 50776,
                            "src": "24040:10:51",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_Assertion_$52272_storage_$",
                              "typeString": "mapping(bytes32 => struct OptimisticOracleV3Interface.Assertion storage ref)"
                            }
                          },
                          "id": 51821,
                          "indexExpression": {
                            "id": 51820,
                            "name": "assertionId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 51814,
                            "src": "24051:11:51",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "24040:23:51",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Assertion_$52272_storage",
                            "typeString": "struct OptimisticOracleV3Interface.Assertion storage ref"
                          }
                        },
                        "id": 51822,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "24064:25:51",
                        "memberName": "escalationManagerSettings",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 52248,
                        "src": "24040:49:51",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_EscalationManagerSettings_$52245_storage",
                          "typeString": "struct OptimisticOracleV3Interface.EscalationManagerSettings storage ref"
                        }
                      },
                      "id": 51823,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "24090:17:51",
                      "memberName": "validateDisputers",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 52240,
                      "src": "24040:67:51",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 51827,
                  "nodeType": "IfStatement",
                  "src": "24035:85:51",
                  "trueBody": {
                    "expression": {
                      "hexValue": "74727565",
                      "id": 51825,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "24116:4:51",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "functionReturnParameters": 51818,
                    "id": 51826,
                    "nodeType": "Return",
                    "src": "24109:11:51"
                  }
                },
                {
                  "assignments": [
                    51829
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 51829,
                      "mutability": "mutable",
                      "name": "em",
                      "nameLocation": "24138:2:51",
                      "nodeType": "VariableDeclaration",
                      "scope": 51854,
                      "src": "24130:10:51",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 51828,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "24130:7:51",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 51835,
                  "initialValue": {
                    "expression": {
                      "expression": {
                        "baseExpression": {
                          "id": 51830,
                          "name": "assertions",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 50776,
                          "src": "24143:10:51",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_Assertion_$52272_storage_$",
                            "typeString": "mapping(bytes32 => struct OptimisticOracleV3Interface.Assertion storage ref)"
                          }
                        },
                        "id": 51832,
                        "indexExpression": {
                          "id": 51831,
                          "name": "assertionId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 51814,
                          "src": "24154:11:51",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "24143:23:51",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Assertion_$52272_storage",
                          "typeString": "struct OptimisticOracleV3Interface.Assertion storage ref"
                        }
                      },
                      "id": 51833,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "24167:25:51",
                      "memberName": "escalationManagerSettings",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 52248,
                      "src": "24143:49:51",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_EscalationManagerSettings_$52245_storage",
                        "typeString": "struct OptimisticOracleV3Interface.EscalationManagerSettings storage ref"
                      }
                    },
                    "id": 51834,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberLocation": "24193:17:51",
                    "memberName": "escalationManager",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 52244,
                    "src": "24143:67:51",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "24130:80:51"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 51841,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 51836,
                      "name": "em",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 51829,
                      "src": "24224:2:51",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "arguments": [
                        {
                          "hexValue": "30",
                          "id": 51839,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "24238:1:51",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          }
                        ],
                        "id": 51838,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "24230:7:51",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 51837,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "24230:7:51",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 51840,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "24230:10:51",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "24224:16:51",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 51844,
                  "nodeType": "IfStatement",
                  "src": "24220:33:51",
                  "trueBody": {
                    "expression": {
                      "hexValue": "74727565",
                      "id": 51842,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "24249:4:51",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "functionReturnParameters": 51818,
                    "id": 51843,
                    "nodeType": "Return",
                    "src": "24242:11:51"
                  }
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 51849,
                        "name": "assertionId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 51814,
                        "src": "24318:11:51",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "expression": {
                          "id": 51850,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "24331:3:51",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 51851,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "24335:6:51",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "24331:10:51",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "id": 51846,
                            "name": "em",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 51829,
                            "src": "24297:2:51",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 51845,
                          "name": "EscalationManagerInterface",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 52212,
                          "src": "24270:26:51",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_EscalationManagerInterface_$52212_$",
                            "typeString": "type(contract EscalationManagerInterface)"
                          }
                        },
                        "id": 51847,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "24270:30:51",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_EscalationManagerInterface_$52212",
                          "typeString": "contract EscalationManagerInterface"
                        }
                      },
                      "id": 51848,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "24301:16:51",
                      "memberName": "isDisputeAllowed",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 52189,
                      "src": "24270:47:51",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
                        "typeString": "function (bytes32,address) view external returns (bool)"
                      }
                    },
                    "id": 51852,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "24270:72:51",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 51818,
                  "id": 51853,
                  "nodeType": "Return",
                  "src": "24263:79:51"
                }
              ]
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_isDisputeAllowed",
            "nameLocation": "23957:17:51",
            "parameters": {
              "id": 51815,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 51814,
                  "mutability": "mutable",
                  "name": "assertionId",
                  "nameLocation": "23983:11:51",
                  "nodeType": "VariableDeclaration",
                  "scope": 51855,
                  "src": "23975:19:51",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 51813,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "23975:7:51",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "23974:21:51"
            },
            "returnParameters": {
              "id": 51818,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 51817,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 51855,
                  "src": "24019:4:51",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 51816,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "24019:4:51",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "24018:6:51"
            },
            "scope": 52025,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 51883,
            "nodeType": "FunctionDefinition",
            "src": "24546:291:51",
            "nodes": [],
            "body": {
              "id": 51882,
              "nodeType": "Block",
              "src": "24627:210:51",
              "nodes": [],
              "statements": [
                {
                  "condition": {
                    "baseExpression": {
                      "id": 51862,
                      "name": "cachedIdentifiers",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 50771,
                      "src": "24641:17:51",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_bytes32_$_t_bool_$",
                        "typeString": "mapping(bytes32 => bool)"
                      }
                    },
                    "id": 51864,
                    "indexExpression": {
                      "id": 51863,
                      "name": "identifier",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 51857,
                      "src": "24659:10:51",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "24641:29:51",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 51867,
                  "nodeType": "IfStatement",
                  "src": "24637:46:51",
                  "trueBody": {
                    "expression": {
                      "hexValue": "74727565",
                      "id": 51865,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "24679:4:51",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "functionReturnParameters": 51861,
                    "id": 51866,
                    "nodeType": "Return",
                    "src": "24672:11:51"
                  }
                },
                {
                  "expression": {
                    "id": 51876,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 51868,
                        "name": "cachedIdentifiers",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 50771,
                        "src": "24693:17:51",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_bytes32_$_t_bool_$",
                          "typeString": "mapping(bytes32 => bool)"
                        }
                      },
                      "id": 51870,
                      "indexExpression": {
                        "id": 51869,
                        "name": "identifier",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 51857,
                        "src": "24711:10:51",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "24693:29:51",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 51874,
                          "name": "identifier",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 51857,
                          "src": "24773:10:51",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        ],
                        "expression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 51871,
                            "name": "_getIdentifierWhitelist",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 51677,
                            "src": "24725:23:51",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$__$returns$_t_contract$_IdentifierWhitelistInterface_$50211_$",
                              "typeString": "function () view returns (contract IdentifierWhitelistInterface)"
                            }
                          },
                          "id": 51872,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "24725:25:51",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IdentifierWhitelistInterface_$50211",
                            "typeString": "contract IdentifierWhitelistInterface"
                          }
                        },
                        "id": 51873,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "24751:21:51",
                        "memberName": "isIdentifierSupported",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 50210,
                        "src": "24725:47:51",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_view$_t_bytes32_$returns$_t_bool_$",
                          "typeString": "function (bytes32) view external returns (bool)"
                        }
                      },
                      "id": 51875,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "24725:59:51",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "24693:91:51",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 51877,
                  "nodeType": "ExpressionStatement",
                  "src": "24693:91:51"
                },
                {
                  "expression": {
                    "baseExpression": {
                      "id": 51878,
                      "name": "cachedIdentifiers",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 50771,
                      "src": "24801:17:51",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_bytes32_$_t_bool_$",
                        "typeString": "mapping(bytes32 => bool)"
                      }
                    },
                    "id": 51880,
                    "indexExpression": {
                      "id": 51879,
                      "name": "identifier",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 51857,
                      "src": "24819:10:51",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "24801:29:51",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 51861,
                  "id": 51881,
                  "nodeType": "Return",
                  "src": "24794:36:51"
                }
              ]
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_validateAndCacheIdentifier",
            "nameLocation": "24555:27:51",
            "parameters": {
              "id": 51858,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 51857,
                  "mutability": "mutable",
                  "name": "identifier",
                  "nameLocation": "24591:10:51",
                  "nodeType": "VariableDeclaration",
                  "scope": 51883,
                  "src": "24583:18:51",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 51856,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "24583:7:51",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "24582:20:51"
            },
            "returnParameters": {
              "id": 51861,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 51860,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 51883,
                  "src": "24621:4:51",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 51859,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "24621:4:51",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "24620:6:51"
            },
            "scope": 52025,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 51926,
            "nodeType": "FunctionDefinition",
            "src": "25056:404:51",
            "nodes": [],
            "body": {
              "id": 51925,
              "nodeType": "Block",
              "src": "25133:327:51",
              "nodes": [],
              "statements": [
                {
                  "condition": {
                    "expression": {
                      "baseExpression": {
                        "id": 51890,
                        "name": "cachedCurrencies",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 50767,
                        "src": "25147:16:51",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_struct$_WhitelistedCurrency_$52277_storage_$",
                          "typeString": "mapping(address => struct OptimisticOracleV3Interface.WhitelistedCurrency storage ref)"
                        }
                      },
                      "id": 51892,
                      "indexExpression": {
                        "id": 51891,
                        "name": "currency",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 51885,
                        "src": "25164:8:51",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "25147:26:51",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_WhitelistedCurrency_$52277_storage",
                        "typeString": "struct OptimisticOracleV3Interface.WhitelistedCurrency storage ref"
                      }
                    },
                    "id": 51893,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberLocation": "25174:13:51",
                    "memberName": "isWhitelisted",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 52274,
                    "src": "25147:40:51",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 51896,
                  "nodeType": "IfStatement",
                  "src": "25143:57:51",
                  "trueBody": {
                    "expression": {
                      "hexValue": "74727565",
                      "id": 51894,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "25196:4:51",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "functionReturnParameters": 51889,
                    "id": 51895,
                    "nodeType": "Return",
                    "src": "25189:11:51"
                  }
                },
                {
                  "expression": {
                    "id": 51906,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "baseExpression": {
                          "id": 51897,
                          "name": "cachedCurrencies",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 50767,
                          "src": "25210:16:51",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_WhitelistedCurrency_$52277_storage_$",
                            "typeString": "mapping(address => struct OptimisticOracleV3Interface.WhitelistedCurrency storage ref)"
                          }
                        },
                        "id": 51899,
                        "indexExpression": {
                          "id": 51898,
                          "name": "currency",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 51885,
                          "src": "25227:8:51",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "25210:26:51",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_WhitelistedCurrency_$52277_storage",
                          "typeString": "struct OptimisticOracleV3Interface.WhitelistedCurrency storage ref"
                        }
                      },
                      "id": 51900,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberLocation": "25237:13:51",
                      "memberName": "isWhitelisted",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 52274,
                      "src": "25210:40:51",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 51904,
                          "name": "currency",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 51885,
                          "src": "25293:8:51",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "expression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 51901,
                            "name": "_getCollateralWhitelist",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 51662,
                            "src": "25253:23:51",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$__$returns$_t_contract$_AddressWhitelist_$46235_$",
                              "typeString": "function () view returns (contract AddressWhitelist)"
                            }
                          },
                          "id": 51902,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "25253:25:51",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_AddressWhitelist_$46235",
                            "typeString": "contract AddressWhitelist"
                          }
                        },
                        "id": 51903,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "25279:13:51",
                        "memberName": "isOnWhitelist",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 46145,
                        "src": "25253:39:51",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_bool_$",
                          "typeString": "function (address) view external returns (bool)"
                        }
                      },
                      "id": 51905,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "25253:49:51",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "25210:92:51",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 51907,
                  "nodeType": "ExpressionStatement",
                  "src": "25210:92:51"
                },
                {
                  "expression": {
                    "id": 51918,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "baseExpression": {
                          "id": 51908,
                          "name": "cachedCurrencies",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 50767,
                          "src": "25312:16:51",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_WhitelistedCurrency_$52277_storage_$",
                            "typeString": "mapping(address => struct OptimisticOracleV3Interface.WhitelistedCurrency storage ref)"
                          }
                        },
                        "id": 51910,
                        "indexExpression": {
                          "id": 51909,
                          "name": "currency",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 51885,
                          "src": "25329:8:51",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "25312:26:51",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_WhitelistedCurrency_$52277_storage",
                          "typeString": "struct OptimisticOracleV3Interface.WhitelistedCurrency storage ref"
                        }
                      },
                      "id": 51911,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberLocation": "25339:8:51",
                      "memberName": "finalFee",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 52276,
                      "src": "25312:35:51",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "arguments": [
                          {
                            "id": 51915,
                            "name": "currency",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 51885,
                            "src": "25378:8:51",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "id": 51912,
                              "name": "_getStore",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 51692,
                              "src": "25350:9:51",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$__$returns$_t_contract$_StoreInterface_$50294_$",
                                "typeString": "function () view returns (contract StoreInterface)"
                              }
                            },
                            "id": 51913,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "25350:11:51",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_StoreInterface_$50294",
                              "typeString": "contract StoreInterface"
                            }
                          },
                          "id": 51914,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "25362:15:51",
                          "memberName": "computeFinalFee",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 50293,
                          "src": "25350:27:51",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_struct$_Unsigned_$46885_memory_ptr_$",
                            "typeString": "function (address) view external returns (struct FixedPoint.Unsigned memory)"
                          }
                        },
                        "id": 51916,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "25350:37:51",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Unsigned_$46885_memory_ptr",
                          "typeString": "struct FixedPoint.Unsigned memory"
                        }
                      },
                      "id": 51917,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "25388:8:51",
                      "memberName": "rawValue",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 46884,
                      "src": "25350:46:51",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "25312:84:51",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 51919,
                  "nodeType": "ExpressionStatement",
                  "src": "25312:84:51"
                },
                {
                  "expression": {
                    "expression": {
                      "baseExpression": {
                        "id": 51920,
                        "name": "cachedCurrencies",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 50767,
                        "src": "25413:16:51",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_struct$_WhitelistedCurrency_$52277_storage_$",
                          "typeString": "mapping(address => struct OptimisticOracleV3Interface.WhitelistedCurrency storage ref)"
                        }
                      },
                      "id": 51922,
                      "indexExpression": {
                        "id": 51921,
                        "name": "currency",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 51885,
                        "src": "25430:8:51",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "25413:26:51",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_WhitelistedCurrency_$52277_storage",
                        "typeString": "struct OptimisticOracleV3Interface.WhitelistedCurrency storage ref"
                      }
                    },
                    "id": 51923,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberLocation": "25440:13:51",
                    "memberName": "isWhitelisted",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 52274,
                    "src": "25413:40:51",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 51889,
                  "id": 51924,
                  "nodeType": "Return",
                  "src": "25406:47:51"
                }
              ]
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_validateAndCacheCurrency",
            "nameLocation": "25065:25:51",
            "parameters": {
              "id": 51886,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 51885,
                  "mutability": "mutable",
                  "name": "currency",
                  "nameLocation": "25099:8:51",
                  "nodeType": "VariableDeclaration",
                  "scope": 51926,
                  "src": "25091:16:51",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 51884,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "25091:7:51",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "25090:18:51"
            },
            "returnParameters": {
              "id": 51889,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 51888,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 51926,
                  "src": "25127:4:51",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 51887,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "25127:4:51",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "25126:6:51"
            },
            "scope": 52025,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 51977,
            "nodeType": "FunctionDefinition",
            "src": "25566:492:51",
            "nodes": [],
            "body": {
              "id": 51976,
              "nodeType": "Block",
              "src": "25658:400:51",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    51934
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 51934,
                      "mutability": "mutable",
                      "name": "cr",
                      "nameLocation": "25676:2:51",
                      "nodeType": "VariableDeclaration",
                      "scope": 51976,
                      "src": "25668:10:51",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 51933,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "25668:7:51",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 51939,
                  "initialValue": {
                    "expression": {
                      "baseExpression": {
                        "id": 51935,
                        "name": "assertions",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 50776,
                        "src": "25681:10:51",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_Assertion_$52272_storage_$",
                          "typeString": "mapping(bytes32 => struct OptimisticOracleV3Interface.Assertion storage ref)"
                        }
                      },
                      "id": 51937,
                      "indexExpression": {
                        "id": 51936,
                        "name": "assertionId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 51928,
                        "src": "25692:11:51",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "25681:23:51",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Assertion_$52272_storage",
                        "typeString": "struct OptimisticOracleV3Interface.Assertion storage ref"
                      }
                    },
                    "id": 51938,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberLocation": "25705:17:51",
                    "memberName": "callbackRecipient",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 52269,
                    "src": "25681:41:51",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "25668:54:51"
                },
                {
                  "assignments": [
                    51941
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 51941,
                      "mutability": "mutable",
                      "name": "em",
                      "nameLocation": "25740:2:51",
                      "nodeType": "VariableDeclaration",
                      "scope": 51976,
                      "src": "25732:10:51",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 51940,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "25732:7:51",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 51945,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 51943,
                        "name": "assertionId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 51928,
                        "src": "25767:11:51",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      ],
                      "id": 51942,
                      "name": "_getEscalationManager",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 51775,
                      "src": "25745:21:51",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_bytes32_$returns$_t_address_$",
                        "typeString": "function (bytes32) view returns (address)"
                      }
                    },
                    "id": 51944,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "25745:34:51",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "25732:47:51"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 51951,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 51946,
                      "name": "cr",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 51934,
                      "src": "25793:2:51",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "!=",
                    "rightExpression": {
                      "arguments": [
                        {
                          "hexValue": "30",
                          "id": 51949,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "25807:1:51",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          }
                        ],
                        "id": 51948,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "25799:7:51",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 51947,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "25799:7:51",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 51950,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "25799:10:51",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "25793:16:51",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 51960,
                  "nodeType": "IfStatement",
                  "src": "25789:141:51",
                  "trueBody": {
                    "expression": {
                      "arguments": [
                        {
                          "id": 51956,
                          "name": "assertionId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 51928,
                          "src": "25898:11:51",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        {
                          "id": 51957,
                          "name": "assertedTruthfully",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 51930,
                          "src": "25911:18:51",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          },
                          {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        ],
                        "expression": {
                          "arguments": [
                            {
                              "id": 51953,
                              "name": "cr",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 51934,
                              "src": "25868:2:51",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 51952,
                            "name": "OptimisticOracleV3CallbackRecipientInterface",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 52230,
                            "src": "25823:44:51",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_contract$_OptimisticOracleV3CallbackRecipientInterface_$52230_$",
                              "typeString": "type(contract OptimisticOracleV3CallbackRecipientInterface)"
                            }
                          },
                          "id": 51954,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "25823:48:51",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_OptimisticOracleV3CallbackRecipientInterface_$52230",
                            "typeString": "contract OptimisticOracleV3CallbackRecipientInterface"
                          }
                        },
                        "id": 51955,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "25872:25:51",
                        "memberName": "assertionResolvedCallback",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 52223,
                        "src": "25823:74:51",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_nonpayable$_t_bytes32_$_t_bool_$returns$__$",
                          "typeString": "function (bytes32,bool) external"
                        }
                      },
                      "id": 51958,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "25823:107:51",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$__$",
                        "typeString": "tuple()"
                      }
                    },
                    "id": 51959,
                    "nodeType": "ExpressionStatement",
                    "src": "25823:107:51"
                  }
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 51966,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 51961,
                      "name": "em",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 51941,
                      "src": "25944:2:51",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "!=",
                    "rightExpression": {
                      "arguments": [
                        {
                          "hexValue": "30",
                          "id": 51964,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "25958:1:51",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          }
                        ],
                        "id": 51963,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "25950:7:51",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 51962,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "25950:7:51",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 51965,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "25950:10:51",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "25944:16:51",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 51975,
                  "nodeType": "IfStatement",
                  "src": "25940:111:51",
                  "trueBody": {
                    "expression": {
                      "arguments": [
                        {
                          "id": 51971,
                          "name": "assertionId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 51928,
                          "src": "26019:11:51",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        {
                          "id": 51972,
                          "name": "assertedTruthfully",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 51930,
                          "src": "26032:18:51",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          },
                          {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        ],
                        "expression": {
                          "arguments": [
                            {
                              "id": 51968,
                              "name": "em",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 51941,
                              "src": "25989:2:51",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 51967,
                            "name": "EscalationManagerInterface",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 52212,
                            "src": "25962:26:51",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_contract$_EscalationManagerInterface_$52212_$",
                              "typeString": "type(contract EscalationManagerInterface)"
                            }
                          },
                          "id": 51969,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "25962:30:51",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_EscalationManagerInterface_$52212",
                            "typeString": "contract EscalationManagerInterface"
                          }
                        },
                        "id": 51970,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "25993:25:51",
                        "memberName": "assertionResolvedCallback",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 52223,
                        "src": "25962:56:51",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_nonpayable$_t_bytes32_$_t_bool_$returns$__$",
                          "typeString": "function (bytes32,bool) external"
                        }
                      },
                      "id": 51973,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "25962:89:51",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$__$",
                        "typeString": "tuple()"
                      }
                    },
                    "id": 51974,
                    "nodeType": "ExpressionStatement",
                    "src": "25962:89:51"
                  }
                }
              ]
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_callbackOnAssertionResolve",
            "nameLocation": "25575:27:51",
            "parameters": {
              "id": 51931,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 51928,
                  "mutability": "mutable",
                  "name": "assertionId",
                  "nameLocation": "25611:11:51",
                  "nodeType": "VariableDeclaration",
                  "scope": 51977,
                  "src": "25603:19:51",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 51927,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "25603:7:51",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 51930,
                  "mutability": "mutable",
                  "name": "assertedTruthfully",
                  "nameLocation": "25629:18:51",
                  "nodeType": "VariableDeclaration",
                  "scope": 51977,
                  "src": "25624:23:51",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 51929,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "25624:4:51",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "25602:46:51"
            },
            "returnParameters": {
              "id": 51932,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "25658:0:51"
            },
            "scope": 52025,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 52024,
            "nodeType": "FunctionDefinition",
            "src": "26164:415:51",
            "nodes": [],
            "body": {
              "id": 52023,
              "nodeType": "Block",
              "src": "26231:348:51",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    51983
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 51983,
                      "mutability": "mutable",
                      "name": "cr",
                      "nameLocation": "26249:2:51",
                      "nodeType": "VariableDeclaration",
                      "scope": 52023,
                      "src": "26241:10:51",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 51982,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "26241:7:51",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 51988,
                  "initialValue": {
                    "expression": {
                      "baseExpression": {
                        "id": 51984,
                        "name": "assertions",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 50776,
                        "src": "26254:10:51",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_Assertion_$52272_storage_$",
                          "typeString": "mapping(bytes32 => struct OptimisticOracleV3Interface.Assertion storage ref)"
                        }
                      },
                      "id": 51986,
                      "indexExpression": {
                        "id": 51985,
                        "name": "assertionId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 51979,
                        "src": "26265:11:51",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "26254:23:51",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Assertion_$52272_storage",
                        "typeString": "struct OptimisticOracleV3Interface.Assertion storage ref"
                      }
                    },
                    "id": 51987,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberLocation": "26278:17:51",
                    "memberName": "callbackRecipient",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 52269,
                    "src": "26254:41:51",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "26241:54:51"
                },
                {
                  "assignments": [
                    51990
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 51990,
                      "mutability": "mutable",
                      "name": "em",
                      "nameLocation": "26313:2:51",
                      "nodeType": "VariableDeclaration",
                      "scope": 52023,
                      "src": "26305:10:51",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 51989,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "26305:7:51",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 51994,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 51992,
                        "name": "assertionId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 51979,
                        "src": "26340:11:51",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      ],
                      "id": 51991,
                      "name": "_getEscalationManager",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 51775,
                      "src": "26318:21:51",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_bytes32_$returns$_t_address_$",
                        "typeString": "function (bytes32) view returns (address)"
                      }
                    },
                    "id": 51993,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "26318:34:51",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "26305:47:51"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 52000,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 51995,
                      "name": "cr",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 51983,
                      "src": "26366:2:51",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "!=",
                    "rightExpression": {
                      "arguments": [
                        {
                          "hexValue": "30",
                          "id": 51998,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "26380:1:51",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          }
                        ],
                        "id": 51997,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "26372:7:51",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 51996,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "26372:7:51",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 51999,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "26372:10:51",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "26366:16:51",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 52008,
                  "nodeType": "IfStatement",
                  "src": "26362:109:51",
                  "trueBody": {
                    "expression": {
                      "arguments": [
                        {
                          "id": 52005,
                          "name": "assertionId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 51979,
                          "src": "26459:11:51",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        ],
                        "expression": {
                          "arguments": [
                            {
                              "id": 52002,
                              "name": "cr",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 51983,
                              "src": "26429:2:51",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 52001,
                            "name": "OptimisticOracleV3CallbackRecipientInterface",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 52230,
                            "src": "26384:44:51",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_contract$_OptimisticOracleV3CallbackRecipientInterface_$52230_$",
                              "typeString": "type(contract OptimisticOracleV3CallbackRecipientInterface)"
                            }
                          },
                          "id": 52003,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "26384:48:51",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_OptimisticOracleV3CallbackRecipientInterface_$52230",
                            "typeString": "contract OptimisticOracleV3CallbackRecipientInterface"
                          }
                        },
                        "id": 52004,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "26433:25:51",
                        "memberName": "assertionDisputedCallback",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 52229,
                        "src": "26384:74:51",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_nonpayable$_t_bytes32_$returns$__$",
                          "typeString": "function (bytes32) external"
                        }
                      },
                      "id": 52006,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "26384:87:51",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$__$",
                        "typeString": "tuple()"
                      }
                    },
                    "id": 52007,
                    "nodeType": "ExpressionStatement",
                    "src": "26384:87:51"
                  }
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 52014,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 52009,
                      "name": "em",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 51990,
                      "src": "26485:2:51",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "!=",
                    "rightExpression": {
                      "arguments": [
                        {
                          "hexValue": "30",
                          "id": 52012,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "26499:1:51",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          }
                        ],
                        "id": 52011,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "26491:7:51",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 52010,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "26491:7:51",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 52013,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "26491:10:51",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "26485:16:51",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 52022,
                  "nodeType": "IfStatement",
                  "src": "26481:91:51",
                  "trueBody": {
                    "expression": {
                      "arguments": [
                        {
                          "id": 52019,
                          "name": "assertionId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 51979,
                          "src": "26560:11:51",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        ],
                        "expression": {
                          "arguments": [
                            {
                              "id": 52016,
                              "name": "em",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 51990,
                              "src": "26530:2:51",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 52015,
                            "name": "EscalationManagerInterface",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 52212,
                            "src": "26503:26:51",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_contract$_EscalationManagerInterface_$52212_$",
                              "typeString": "type(contract EscalationManagerInterface)"
                            }
                          },
                          "id": 52017,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "26503:30:51",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_EscalationManagerInterface_$52212",
                            "typeString": "contract EscalationManagerInterface"
                          }
                        },
                        "id": 52018,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "26534:25:51",
                        "memberName": "assertionDisputedCallback",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 52229,
                        "src": "26503:56:51",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_nonpayable$_t_bytes32_$returns$__$",
                          "typeString": "function (bytes32) external"
                        }
                      },
                      "id": 52020,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "26503:69:51",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$__$",
                        "typeString": "tuple()"
                      }
                    },
                    "id": 52021,
                    "nodeType": "ExpressionStatement",
                    "src": "26503:69:51"
                  }
                }
              ]
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_callbackOnAssertionDispute",
            "nameLocation": "26173:27:51",
            "parameters": {
              "id": 51980,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 51979,
                  "mutability": "mutable",
                  "name": "assertionId",
                  "nameLocation": "26209:11:51",
                  "nodeType": "VariableDeclaration",
                  "scope": 52024,
                  "src": "26201:19:51",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 51978,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "26201:7:51",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "26200:21:51"
            },
            "returnParameters": {
              "id": 51981,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "26231:0:51"
            },
            "scope": 52025,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          }
        ],
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 50746,
              "name": "OptimisticOracleV3Interface",
              "nameLocations": [
                "1581:27:51"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 52420,
              "src": "1581:27:51"
            },
            "id": 50747,
            "nodeType": "InheritanceSpecifier",
            "src": "1581:27:51"
          },
          {
            "baseName": {
              "id": 50748,
              "name": "Lockable",
              "nameLocations": [
                "1610:8:51"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 48576,
              "src": "1610:8:51"
            },
            "id": 50749,
            "nodeType": "InheritanceSpecifier",
            "src": "1610:8:51"
          },
          {
            "baseName": {
              "id": 50750,
              "name": "Ownable",
              "nameLocations": [
                "1620:7:51"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 44409,
              "src": "1620:7:51"
            },
            "id": 50751,
            "nodeType": "InheritanceSpecifier",
            "src": "1620:7:51"
          },
          {
            "baseName": {
              "id": 50752,
              "name": "MultiCaller",
              "nameLocations": [
                "1629:11:51"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 48655,
              "src": "1629:11:51"
            },
            "id": 50753,
            "nodeType": "InheritanceSpecifier",
            "src": "1629:11:51"
          }
        ],
        "canonicalName": "OptimisticOracleV3",
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 50745,
          "nodeType": "StructuredDocumentation",
          "src": "988:560:51",
          "text": " @title Optimistic Oracle V3.\n @notice The OOv3 is used to assert truths about the world which are verified using an optimistic escalation game.\n @dev Core idea: an asserter makes a statement about a truth, calling \"assertTruth\". If this statement is not\n challenged, it is taken as the state of the world. If challenged, it is arbitrated using the UMA DVM, or if\n configured, an escalation manager. Escalation managers enable integrations to define their own security properties and\n tradeoffs, enabling the notion of \"sovereign security\"."
        },
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          52025,
          48655,
          44409,
          45641,
          48576,
          52420
        ],
        "name": "OptimisticOracleV3",
        "nameLocation": "1559:18:51",
        "scope": 52026,
        "usedErrors": []
      }
    ],
    "license": "AGPL-3.0-only"
  },
  "id": 51
}