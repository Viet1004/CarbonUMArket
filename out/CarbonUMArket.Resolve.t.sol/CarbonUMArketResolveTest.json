{
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "assertingCaller",
          "type": "address"
        }
      ],
      "name": "AssertingCallerSet",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "assertionId",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "caller",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "disputer",
          "type": "address"
        }
      ],
      "name": "AssertionDisputed",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "assertionId",
          "type": "bytes32"
        },
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "domainId",
          "type": "bytes32"
        },
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "claim",
          "type": "bytes"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "asserter",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "callbackRecipient",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "escalationManager",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "caller",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint64",
          "name": "expirationTime",
          "type": "uint64"
        },
        {
          "indexed": false,
          "internalType": "contract IERC20",
          "name": "currency",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "bond",
          "type": "uint256"
        },
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "identifier",
          "type": "bytes32"
        }
      ],
      "name": "AssertionMade",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "assertionId",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "bondRecipient",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "bool",
          "name": "disputed",
          "type": "bool"
        },
        {
          "indexed": false,
          "internalType": "bool",
          "name": "settlementResolution",
          "type": "bool"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "settleCaller",
          "type": "address"
        }
      ],
      "name": "AssertionSettled",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "requester",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "identifier",
          "type": "bytes32"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "time",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "ancillaryData",
          "type": "bytes"
        }
      ],
      "name": "PriceRequestAdded",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "name": "log",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "log_address",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256[]",
          "name": "val",
          "type": "uint256[]"
        }
      ],
      "name": "log_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "int256[]",
          "name": "val",
          "type": "int256[]"
        }
      ],
      "name": "log_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address[]",
          "name": "val",
          "type": "address[]"
        }
      ],
      "name": "log_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "name": "log_bytes",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "name": "log_bytes32",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "int256",
          "name": "",
          "type": "int256"
        }
      ],
      "name": "log_int",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "val",
          "type": "address"
        }
      ],
      "name": "log_named_address",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "uint256[]",
          "name": "val",
          "type": "uint256[]"
        }
      ],
      "name": "log_named_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "int256[]",
          "name": "val",
          "type": "int256[]"
        }
      ],
      "name": "log_named_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "address[]",
          "name": "val",
          "type": "address[]"
        }
      ],
      "name": "log_named_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "val",
          "type": "bytes"
        }
      ],
      "name": "log_named_bytes",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "val",
          "type": "bytes32"
        }
      ],
      "name": "log_named_bytes32",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "int256",
          "name": "val",
          "type": "int256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "decimals",
          "type": "uint256"
        }
      ],
      "name": "log_named_decimal_int",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "val",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "decimals",
          "type": "uint256"
        }
      ],
      "name": "log_named_decimal_uint",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "int256",
          "name": "val",
          "type": "int256"
        }
      ],
      "name": "log_named_int",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "val",
          "type": "string"
        }
      ],
      "name": "log_named_string",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "val",
          "type": "uint256"
        }
      ],
      "name": "log_named_uint",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "name": "log_string",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "log_uint",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "name": "logs",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "IS_TEST",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "asserter",
          "type": "address"
        },
        {
          "internalType": "bytes",
          "name": "claim",
          "type": "bytes"
        }
      ],
      "name": "_allocateBondAndAssertTruth",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "assertionId",
          "type": "bytes32"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "_commonCarbonUMArketSetUp",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "_commonSetup",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "mockAssertingCaller",
          "type": "address"
        },
        {
          "internalType": "bytes32",
          "name": "assertionId",
          "type": "bytes32"
        }
      ],
      "name": "_mockGetAssertionAssertingCaller",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "carbonUMArket",
      "outputs": [
        {
          "internalType": "contract CarbonUMArket",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "excludeArtifacts",
      "outputs": [
        {
          "internalType": "string[]",
          "name": "excludedArtifacts_",
          "type": "string[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "excludeContracts",
      "outputs": [
        {
          "internalType": "address[]",
          "name": "excludedContracts_",
          "type": "address[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "excludeSenders",
      "outputs": [
        {
          "internalType": "address[]",
          "name": "excludedSenders_",
          "type": "address[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "failed",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "setUp",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "targetArtifactSelectors",
      "outputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "addr",
              "type": "address"
            },
            {
              "internalType": "bytes4[]",
              "name": "selectors",
              "type": "bytes4[]"
            }
          ],
          "internalType": "struct StdInvariant.FuzzSelector[]",
          "name": "targetedArtifactSelectors_",
          "type": "tuple[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "targetArtifacts",
      "outputs": [
        {
          "internalType": "string[]",
          "name": "targetedArtifacts_",
          "type": "string[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "targetContracts",
      "outputs": [
        {
          "internalType": "address[]",
          "name": "targetedContracts_",
          "type": "address[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "targetInterfaces",
      "outputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "addr",
              "type": "address"
            },
            {
              "internalType": "string[]",
              "name": "artifacts",
              "type": "string[]"
            }
          ],
          "internalType": "struct StdInvariant.FuzzInterface[]",
          "name": "targetedInterfaces_",
          "type": "tuple[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "targetSelectors",
      "outputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "addr",
              "type": "address"
            },
            {
              "internalType": "bytes4[]",
              "name": "selectors",
              "type": "bytes4[]"
            }
          ],
          "internalType": "struct StdInvariant.FuzzSelector[]",
          "name": "targetedSelectors_",
          "type": "tuple[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "targetSenders",
      "outputs": [
        {
          "internalType": "address[]",
          "name": "targetedSenders_",
          "type": "address[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "test_AssertionWithCorrectDispute",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "test_ResolveMarketNoDispute",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "test_ResolveMarketWithWrongDispute",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "bytecode": {
    "object": "0x60078054600160ff199182168117909255600b8054909116909117905560c0604052601b60809081527f5468697320697320612070726f6a65637420696e204272617a696c000000000060a052602b906200005b908262000126565b5066038d7ea4c68000602c55612710602e553480156200007a57600080fd5b50620001f2565b634e487b7160e01b600052604160045260246000fd5b600181811c90821680620000ac57607f821691505b602082108103620000cd57634e487b7160e01b600052602260045260246000fd5b50919050565b601f8211156200012157600081815260208120601f850160051c81016020861015620000fc5750805b601f850160051c820191505b818110156200011d5782815560010162000108565b5050505b505050565b81516001600160401b0381111562000142576200014262000081565b6200015a8162000153845462000097565b84620000d3565b602080601f831160018114620001925760008415620001795750858301515b600019600386901b1c1916600185901b1785556200011d565b600085815260208120601f198616915b82811015620001c357888601518255948401946001909101908401620001a2565b5085821015620001e25787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b62015e8580620002036000396000f3fe60806040523480156200001157600080fd5b5060043610620001455760003560e01c8063916a17c611620000bb578063ba414fa6116200007a578063ba414fa61462000257578063dbd07b771462000272578063e20c9f71146200027c578063f40966711462000286578063fa7626d414620002ac57600080fd5b8063916a17c614620001f55780639472963b14620001ff578063a7969d071462000209578063ab30d35a1462000236578063b5508aa9146200024d57600080fd5b80633f7286f411620001085780633f7286f414620001a5578063635e611514620001af57806366d9a9a014620001b95780636906f5f514620001d257806385226c8114620001dc57600080fd5b80630a9254e4146200014a5780631ed7831c1462000156578063217356c614620001785780632ade388014620001825780633e5e3c23146200019b575b600080fd5b62000154620002ba565b005b62000160620002ed565b6040516200016f9190620035b3565b60405180910390f35b6200015462000351565b6200018c620008e4565b6040516200016f919062003656565b6200016062000a32565b6200016062000a94565b6200015462000af6565b620001c362001198565b6040516200016f91906200371c565b6200015462001282565b620001e6620015e3565b6040516200016f9190620037d3565b620001c3620016bd565b62000154620017a7565b602a546200021d906001600160a01b031681565b6040516001600160a01b0390911681526020016200016f565b620001546200024736600462003842565b620018c7565b620001e662001a21565b6200026162001afb565b60405190151581526020016200016f565b6200015462001c2e565b62000160620021b2565b6200029d6200029736600462003936565b62002214565b6040519081526020016200016f565b600754620002619060ff1681565b620002c4620017a7565b620002ce62002531565b602f819055620002de9062002626565b620002eb602f546200271e565b565b606060148054806020026020016040519081016040528092919081815260200182805480156200034757602002820191906000526020600020905b81546001600160a01b0316815260019091019060200180831162000328575b5050505050905090565b602a54602f5460405163c3c95c7b60e01b815260048101919091526000916001600160a01b03169063c3c95c7b90602401600060405180830381865afa158015620003a0573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052620003ca919081019062003a68565b90506000620003db602f54620027ca565b6020546040516370a0823160e01b8152600260048201529192506000916001600160a01b03909116906370a0823190602401602060405180830381865afa1580156200042b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062000451919062003b75565b602154602854604080516329cb924d60e01b815290519394506001600160a01b03909216926322f8e566926001600160401b039092169184916329cb924d916004808201926020929091908290030181865afa158015620004b6573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620004dc919062003b75565b620004e8919062003ba5565b6040518263ffffffff1660e01b81526004016200050791815260200190565b600060405180830381600087803b1580156200052257600080fd5b505af115801562000537573d6000803e3d6000fd5b5050602a546040805160248101879052600160448083019190915282518083039091018152606490910182526020810180516001600160e01b03166378d8ab5960e11b1790529051632f5abd0d60e21b815260008051602062015e30833981519152945063bd6af4349350620005bb926001600160a01b0316919060040162003bbb565b600060405180830381600087803b158015620005d657600080fd5b505af1158015620005eb573d6000803e3d6000fd5b5050601f54604051638ea2f2ab60e01b8152600481018690526200066d93506001600160a01b039091169150638ea2f2ab906024015b6020604051808303816000875af115801562000641573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062000667919062003be9565b620028bd565b6020546040516370a0823160e01b81526002600482015262000702916001600160a01b0316906370a0823190602401602060405180830381865afa158015620006ba573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620006e0919062003b75565b602d54620006f090600262003c07565b620006fc908462003ba5565b62002935565b602a54602f5460405163c3c95c7b60e01b8152600481019190915262000794916001600160a01b03169063c3c95c7b90602401600060405180830381865afa15801562000753573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526200077d919081019062003a68565b61012001516001600160401b0316600214620028bd565b60405163ca669fa760e01b81526003600482015260008051602062015e308339815191529063ca669fa790602401600060405180830381600087803b158015620007dd57600080fd5b505af1158015620007f2573d6000803e3d6000fd5b5050602a54602f54604051632d3414c360e11b81526004810191909152600060248201526001600160a01b039091169250635a6829869150604401600060405180830381600087803b1580156200084857600080fd5b505af11580156200085d573d6000803e3d6000fd5b5050505060808301516040516370a0823160e01b815260036004820152620008df916001600160a01b0316906370a08231906024015b602060405180830381865afa158015620008b1573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620008d7919062003b75565b600062002935565b505050565b6060601b805480602002602001604051908101604052809291908181526020016000905b8282101562000a2957600084815260208082206040805180820182526002870290920180546001600160a01b03168352600181018054835181870281018701909452808452939591948681019491929084015b8282101562000a115783829060005260206000200180546200097d9062003c29565b80601f0160208091040260200160405190810160405280929190818152602001828054620009ab9062003c29565b8015620009fc5780601f10620009d057610100808354040283529160200191620009fc565b820191906000526020600020905b815481529060010190602001808311620009de57829003601f168201915b5050505050815260200190600101906200095b565b50505050815250508152602001906001019062000908565b50505050905090565b6060601680548060200260200160405190810160405280929190818152602001828054801562000347576020028201919060005260206000209081546001600160a01b0316815260019091019060200180831162000328575050505050905090565b6060601580548060200260200160405190810160405280929190818152602001828054801562000347576020028201919060005260206000209081546001600160a01b0316815260019091019060200180831162000328575050505050905090565b602a54602f5460405163c3c95c7b60e01b815260048101919091526000916001600160a01b03169063c3c95c7b90602401600060405180830381865afa15801562000b45573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405262000b6f919081019062003a68565b9050600062000b80602f54620027ca565b6020546040516370a0823160e01b8152600260048201529192506000916001600160a01b03909116906370a0823190602401602060405180830381865afa15801562000bd0573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062000bf6919062003b75565b6020546040516370a0823160e01b81526004808201529192506000916001600160a01b03909116906370a0823190602401602060405180830381865afa15801562000c45573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062000c6b919062003b75565b9050600062000c7d84602d5462002a64565b60235490915062000c9a906001600160a01b031682600062002e3f565b602a546040805160248101879052600060448083019190915282518083039091018152606490910182526020810180516001600160e01b03166378d8ab5960e11b1790529051632f5abd0d60e21b815260008051602062015e308339815191529263bd6af4349262000d1b926001600160a01b039092169160040162003bbb565b600060405180830381600087803b15801562000d3657600080fd5b505af115801562000d4b573d6000803e3d6000fd5b5050601f54604051638ea2f2ab60e01b81526004810188905262000dcc93506001600160a01b039091169150638ea2f2ab906024016020604051808303816000875af115801562000da0573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062000dc6919062003be9565b62002ede565b6020546040516370a0823160e01b81526002600482015262000e46916001600160a01b0316906370a0823190602401602060405180830381865afa15801562000e19573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062000e3f919062003b75565b8462002935565b60405163ca669fa760e01b81526003600482015260008051602062015e308339815191529063ca669fa790602401600060405180830381600087803b15801562000e8f57600080fd5b505af115801562000ea4573d6000803e3d6000fd5b5050602a54602f54604051632d3414c360e11b81526004810191909152600060248201526001600160a01b039091169250635a6829869150604401600060405180830381600087803b15801562000efa57600080fd5b505af115801562000f0f573d6000803e3d6000fd5b5050505060808501516040516370a0823160e01b81526003600482015262000f99916001600160a01b0316906370a0823190602401602060405180830381865afa15801562000f62573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062000f88919062003b75565b6002602e54620006fc919062003c65565b60405163ca669fa760e01b815260048082015260008051602062015e308339815191529063ca669fa790602401600060405180830381600087803b15801562000fe157600080fd5b505af115801562000ff6573d6000803e3d6000fd5b5050602a54602f54604051632d3414c360e11b8152600481019190915261271060248201526001600160a01b039091169250635a6829869150604401600060405180830381600087803b1580156200104d57600080fd5b505af115801562001062573d6000803e3d6000fd5b50505050620010a06040518060400160405280601681526020017576616c696461746f7242616c616e63654265666f726560501b8152508362002eea565b6020546040516370a0823160e01b815260048082015262001118916001600160a01b0316906370a0823190602401602060405180830381865afa158015620010ec573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062001112919062003b75565b62002f33565b6020546040516370a0823160e01b815260048082015262001191916001600160a01b0316906370a0823190602401602060405180830381865afa15801562001164573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200118a919062003b75565b8362002935565b5050505050565b60606019805480602002602001604051908101604052809291908181526020016000905b8282101562000a295760008481526020908190206040805180820182526002860290920180546001600160a01b031683526001810180548351818702810187019094528084529394919385830193928301828280156200126957602002820191906000526020600020906000905b82829054906101000a900460e01b6001600160e01b031916815260200190600401906020826003010492830192600103820291508084116200122a5790505b50505050508152505081526020019060010190620011bc565b6000604051620012929062003589565b604051809103906000f080158015620012af573d6000803e3d6000fd5b506001600160a01b0316630a9254e46040518163ffffffff1660e01b8152600401610100604051808303816000875af1158015620012f1573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062001317919062003c88565b60e0810151601f80546001600160a01b03199081166001600160a01b0393841690811790925560c084015160208054831691851691909117815560a08501516023805484169186169190911790558451602180548416918616919091179055840151602280548316918516919091179055604080850151602480549093169416939093179055905191925090620013ae9062003597565b6001600160a01b039091168152602001604051809103906000f080158015620013db573d6000803e3d6000fd5b50602580546001600160a01b0319166001600160a01b03928316179055601f5460408051630473e1f360e11b8152905191909216916308e7c3e69160048083019260209291908290030181865afa1580156200143b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062001461919062003b75565b602655601f54602054604051634360af3d60e01b81526001600160a01b039182166004820152911690634360af3d90602401602060405180830381865afa158015620014b1573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620014d7919062003b75565b602755601f546040805163fe4e198360e01b815290516001600160a01b039092169163fe4e1983916004808201926020929091908290030181865afa15801562001525573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200154b919062003d65565b6028805467ffffffffffffffff19166001600160401b0392909216919091179055601f546040805163d509b01760e01b815290516001600160a01b039092169163d509b017916004808201926020929091908290030181865afa158015620015b7573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620015dd919062003b75565b60295550565b60606018805480602002602001604051908101604052809291908181526020016000905b8282101562000a29578382906000526020600020018054620016299062003c29565b80601f0160208091040260200160405190810160405280929190818152602001828054620016579062003c29565b8015620016a85780601f106200167c57610100808354040283529160200191620016a8565b820191906000526020600020905b8154815290600101906020018083116200168a57829003601f168201915b50505050508152602001906001019062001607565b6060601a805480602002602001604051908101604052809291908181526020016000905b8282101562000a295760008481526020908190206040805180820182526002860290920180546001600160a01b031683526001810180548351818702810187019094528084529394919385830193928301828280156200178e57602002820191906000526020600020906000905b82829054906101000a900460e01b6001600160e01b031916815260200190600401906020826003010492830192600103820291508084116200174f5790505b50505050508152505081526020019060010190620016e1565b620017b162001282565b602054601f546040516001600160a01b039283169290911690620017d590620035a5565b6001600160a01b03928316815291166020820152604001604051809103906000f08015801562001809573d6000803e3d6000fd5b50602a80546001600160a01b0319166001600160a01b03928316179055601f54602054604051634360af3d60e01b815290831660048201526000929190911690634360af3d90602401602060405180830381865afa15801562001870573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062001896919062003b75565b905066038d7ea4c680008110620018ae5780620018b7565b66038d7ea4c680005b602d55620018c462002f7b565b50565b6040805161022081018252600061018082018181526101a083018290526101c08301829052610200830182905282526020808301829052828401829052606083018290526080830182905260a0830182905260c0830182905260e083018290526101008301829052610120830182905261014083018290526101608301919091526001600160a01b0385166101e083015282516024808201869052845180830390910181526044909101845280820180516001600160e01b031663220c0a2160e21b1790529251919260008051602062015e308339815191529263b96213e49260fa9291620019b99187910162003d83565b6040516020818303038152906040526040518463ffffffff1660e01b8152600401620019e89392919062003e86565b600060405180830381600087803b15801562001a0357600080fd5b505af115801562001a18573d6000803e3d6000fd5b50505050505050565b60606017805480602002602001604051908101604052809291908181526020016000905b8282101562000a2957838290600052602060002001805462001a679062003c29565b80601f016020809104026020016040519081016040528092919081815260200182805462001a959062003c29565b801562001ae65780601f1062001aba5761010080835404028352916020019162001ae6565b820191906000526020600020905b81548152906001019060200180831162001ac857829003601f168201915b50505050508152602001906001019062001a45565b600754600090610100900460ff161562001b1e5750600754610100900460ff1690565b600060008051602062015e308339815191523b1562001c295760405160009060008051602062015e30833981519152907f667f9d70ca411d70ead50d8d5c22070dafc36ad75f3dcf5e7237b22ade9aecc49062001b8b9083906519985a5b195960d21b9060200162003eca565b60408051601f198184030181529082905262001bab929160200162003ee3565b60408051601f198184030181529082905262001bc79162003f16565b6000604051808303816000865af19150503d806000811462001c06576040519150601f19603f3d011682016040523d82523d6000602084013e62001c0b565b606091505b509150508080602001905181019062001c25919062003be9565b9150505b919050565b602a54602f5460405163c3c95c7b60e01b815260048101919091526000916001600160a01b03169063c3c95c7b90602401600060405180830381865afa15801562001c7d573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405262001ca7919081019062003a68565b9050600062001cb8602f54620027ca565b6020546040516370a0823160e01b8152600260048201529192506000916001600160a01b03909116906370a0823190602401602060405180830381865afa15801562001d08573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062001d2e919062003b75565b6020546040516370a0823160e01b81526004808201529192506000916001600160a01b03909116906370a0823190602401602060405180830381865afa15801562001d7d573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062001da3919062003b75565b9050600062001db584602d5462002a64565b60235490915062001dd2906001600160a01b031682600162002e3f565b602a546040805160248101879052600160448083019190915282518083039091018152606490910182526020810180516001600160e01b03166378d8ab5960e11b1790529051632f5abd0d60e21b815260008051602062015e308339815191529263bd6af4349262001e53926001600160a01b039092169160040162003bbb565b600060405180830381600087803b15801562001e6e57600080fd5b505af115801562001e83573d6000803e3d6000fd5b5050601f54604051638ea2f2ab60e01b81526004810188905262001ebe93506001600160a01b039091169150638ea2f2ab9060240162000621565b6020546040516370a0823160e01b81526002600482015262001f5c916001600160a01b0316906370a0823190602401602060405180830381865afa15801562001f0b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062001f31919062003b75565b6002602d54600562001f44919062003c07565b62001f50919062003c65565b620006fc908662003ba5565b60405163ca669fa760e01b81526003600482015260008051602062015e308339815191529063ca669fa790602401600060405180830381600087803b15801562001fa557600080fd5b505af115801562001fba573d6000803e3d6000fd5b5050602a54602f54604051632d3414c360e11b81526004810191909152600060248201526001600160a01b039091169250635a6829869150604401600060405180830381600087803b1580156200201057600080fd5b505af115801562002025573d6000803e3d6000fd5b5050505060808501516040516370a0823160e01b81526003600482015262002060916001600160a01b0316906370a082319060240162000893565b60405163ca669fa760e01b815260048082015260008051602062015e308339815191529063ca669fa790602401600060405180830381600087803b158015620020a857600080fd5b505af1158015620020bd573d6000803e3d6000fd5b5050602a54602f54604051632d3414c360e11b8152600481019190915261271060248201526001600160a01b039091169250635a6829869150604401600060405180830381600087803b1580156200211457600080fd5b505af115801562002129573d6000803e3d6000fd5b50506020546040516370a0823160e01b81526004808201526200119193506001600160a01b0390911691506370a0823190602401602060405180830381865afa1580156200217b573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620021a1919062003b75565b6040870151620006fc908562003ba5565b6060601380548060200260200160405190810160405280929190818152602001828054801562000347576020028201919060005260206000209081546001600160a01b0316815260019091019060200180831162000328575050505050905090565b6040516303223eab60e11b81526001600160a01b038316600482015260009060008051602062015e30833981519152906306447d5690602401600060405180830381600087803b1580156200226857600080fd5b505af11580156200227d573d6000803e3d6000fd5b5050602054601f54604051634360af3d60e01b81526001600160a01b039283166004820181905294506308bca5669350879290911690634360af3d90602401602060405180830381865afa158015620022da573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062002300919062003b75565b6040518363ffffffff1660e01b81526004016200231f92919062003eca565b600060405180830381600087803b1580156200233a57600080fd5b505af11580156200234f573d6000803e3d6000fd5b5050602054601f54604051634360af3d60e01b81526001600160a01b0392831660048201819052945063095ea7b393509116908190634360af3d90602401602060405180830381865afa158015620023ab573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620023d1919062003b75565b6040518363ffffffff1660e01b8152600401620023f092919062003eca565b6020604051808303816000875af115801562002410573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062002436919062003be9565b50601f54604051630dac4ebd60e21b81526001600160a01b03909116906336b13af4906200246b908590879060040162003f34565b6020604051808303816000875af11580156200248b573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620024b1919062003b75565b90507f885cb69240a935d632d79c317109709ecfa91a80626ff3989d68f67f5b1dd12d60001c6001600160a01b03166390c5013b6040518163ffffffff1660e01b8152600401600060405180830381600087803b1580156200251257600080fd5b505af115801562002527573d6000803e3d6000fd5b5050505092915050565b60006200253d62002f7b565b60405163ca669fa760e01b81526001600482015260008051602062015e308339815191529063ca669fa790602401600060405180830381600087803b1580156200258657600080fd5b505af11580156200259b573d6000803e3d6000fd5b5050602a54602c54602d54602e54604051632a98b03d60e01b81526001600160a01b039094169550632a98b03d9450620025db93602b9060040162003f60565b6020604051808303816000875af1158015620025fb573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062002621919062003b75565b905090565b620026326003620030ed565b6200263f81600062003283565b60405163ca669fa760e01b81526003600482015260008051602062015e308339815191529063ca669fa790602401600060405180830381600087803b1580156200268857600080fd5b505af11580156200269d573d6000803e3d6000fd5b5050602a54602e546001600160a01b03909116925063a7f0de8191508390620026c99060029062003c65565b6040516001600160e01b031960e085901b168152600481019290925260248201526044015b600060405180830381600087803b1580156200270957600080fd5b505af115801562001191573d6000803e3d6000fd5b6200272a6004620030ed565b6200273781600162003283565b60405163ca669fa760e01b815260048082015260008051602062015e308339815191529063ca669fa790602401600060405180830381600087803b1580156200277f57600080fd5b505af115801562002794573d6000803e3d6000fd5b5050602a54604051630c0e093b60e31b8152600481018590526001600160a01b03909116925063607049d89150602401620026ee565b6000620027d662003358565b620027e382600162003283565b60405163ca669fa760e01b81526002600482015260008051602062015e308339815191529063ca669fa790602401600060405180830381600087803b1580156200282c57600080fd5b505af115801562002841573d6000803e3d6000fd5b5050602a54604051631122cca360e01b8152600481018690526001600160a01b039091169250631122cca391506024016020604051808303816000875af115801562002891573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620028b7919062003b75565b92915050565b80620018c4577f41304facd9323d75b11bcdd609cb38effffdb05710f7caf0e9b16c6d9d709f50604051620029239060208082526017908201527f4572726f723a20417373657274696f6e204661696c6564000000000000000000604082015260600190565b60405180910390a1620018c46200345f565b80821462002a60577f41304facd9323d75b11bcdd609cb38effffdb05710f7caf0e9b16c6d9d709f50604051620029a89060208082526022908201527f4572726f723a2061203d3d2062206e6f7420736174697366696564205b75696e604082015261745d60f01b606082015260800190565b60405180910390a160408051818152600a81830152690808080808081319599d60b21b60608201526020810184905290517fb2de2fbe801a0df6c0cbddfd448ba3c41d48a040ca35c56c8196ef0fcae721a89181900360800190a160408051818152600a81830152690808080808149a59da1d60b21b60608201526020810183905290517fb2de2fbe801a0df6c0cbddfd448ba3c41d48a040ca35c56c8196ef0fcae721a89181900360800190a162002a606200345f565b5050565b60408051606080820183526000808352602083015291810191909152601f5460405163220c0a2160e21b8152600481018590526000916001600160a01b03169063883028849060240161020060405180830381865afa15801562002acc573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062002af29190620040ce565b905060006040518060600160405280601f60009054906101000a90046001600160a01b03166001600160a01b031663d509b0176040518163ffffffff1660e01b8152600401602060405180830381865afa15801562002b55573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062002b7b919062003b75565b81526040848101516001600160401b03166020830152601f54815163afedba4f60e01b8152600481018a905291909201916001600160a01b03169063afedba4f90602401600060405180830381865afa15801562002bdd573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405262002c079190810190620041c3565b90526040516303223eab60e11b81526003600482015290915060008051602062015e30833981519152906306447d5690602401600060405180830381600087803b15801562002c5557600080fd5b505af115801562002c6a573d6000803e3d6000fd5b505060205460405163045e52b360e11b81526001600160a01b0390911692506308bca566915062002ca390600390889060040162003eca565b600060405180830381600087803b15801562002cbe57600080fd5b505af115801562002cd3573d6000803e3d6000fd5b5050602054601f5460405163095ea7b360e01b81526001600160a01b03928316945063095ea7b3935062002d109290911690889060040162003eca565b6020604051808303816000875af115801562002d30573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062002d56919062003be9565b50601f5460405163a6a22b4360e01b815260048101879052600360248201526001600160a01b039091169063a6a22b4390604401600060405180830381600087803b15801562002da557600080fd5b505af115801562002dba573d6000803e3d6000fd5b505050507f885cb69240a935d632d79c317109709ecfa91a80626ff3989d68f67f5b1dd12d60001c6001600160a01b03166390c5013b6040518163ffffffff1660e01b8152600401600060405180830381600087803b15801562002e1d57600080fd5b505af115801562002e32573d6000803e3d6000fd5b5092979650505050505050565b81516020830151604080850151905160008051602062015e308339815191529363b96213e49388936338ce36ab60e11b9362002e819392919060240162004210565b60408051601f198184030181529190526020810180516001600160e01b03166001600160e01b0319909316929092179091528462002ec157600062002ecb565b670de0b6b3a76400005b604051602001620019b991815260200190565b620018c48115620028bd565b62002a60828260405160240162002f039291906200423a565b60408051601f198184030181529190526020810180516001600160e01b03166309710a9d60e41b17905262003568565b620018c48160405160240162002f4b91815260200190565b60408051601f198184030181529190526020810180516001600160e01b031663f5b1bba960e01b17905262003568565b602054602c54602d546001600160a01b03909216916308bca5669160019162002fa5919062003ba5565b6040518363ffffffff1660e01b815260040162002fc492919062003eca565b600060405180830381600087803b15801562002fdf57600080fd5b505af115801562002ff4573d6000803e3d6000fd5b505060405163ca669fa760e01b81526001600482015260008051602062015e30833981519152925063ca669fa79150602401600060405180830381600087803b1580156200304157600080fd5b505af115801562003056573d6000803e3d6000fd5b5050602054602a54602c54602d546001600160a01b03938416955063095ea7b394509190921691620030889162003ba5565b6040518363ffffffff1660e01b8152600401620030a792919062003eca565b6020604051808303816000875af1158015620030c7573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620018c4919062003be9565b602054602e546001600160a01b03909116906308bca5669083906200311490600262003c07565b620031259064e8d4a5100062003c07565b6040518363ffffffff1660e01b81526004016200314492919062003eca565b600060405180830381600087803b1580156200315f57600080fd5b505af115801562003174573d6000803e3d6000fd5b505060405163ca669fa760e01b81526001600160a01b038416600482015260008051602062015e30833981519152925063ca669fa79150602401600060405180830381600087803b158015620031c957600080fd5b505af1158015620031de573d6000803e3d6000fd5b5050602054602a54602e546001600160a01b03928316945063095ea7b393509116906200320d90600262003c07565b6200321e9064e8d4a5100062003c07565b6040518363ffffffff1660e01b81526004016200323d92919062003eca565b6020604051808303816000875af11580156200325d573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062002a60919062003be9565b60405163ca669fa760e01b81526001600482015260008051602062015e308339815191529063ca669fa790602401600060405180830381600087803b158015620032cc57600080fd5b505af1158015620032e1573d6000803e3d6000fd5b5050602a5460405163481e9c6b60e01b8152600481018690526001600160401b03851660248201526001600160a01b03909116925063481e9c6b9150604401600060405180830381600087803b1580156200333b57600080fd5b505af115801562003350573d6000803e3d6000fd5b505050505050565b602054602d5460405163045e52b360e11b81526001600160a01b03909216916308bca566916200338f916002919060040162003eca565b600060405180830381600087803b158015620033aa57600080fd5b505af1158015620033bf573d6000803e3d6000fd5b505060405163ca669fa760e01b81526002600482015260008051602062015e30833981519152925063ca669fa79150602401600060405180830381600087803b1580156200340c57600080fd5b505af115801562003421573d6000803e3d6000fd5b5050602054602a54602d5460405163095ea7b360e01b81526001600160a01b03938416955063095ea7b39450620030a7939092169160040162003eca565b60008051602062015e308339815191523b1562003557576040805160008051602062015e30833981519152602082018190526519985a5b195960d21b9282019290925260016060820152600091907f70ca10bbd0dbfd9020a9f4b13402c16cb120705e0d1c0aeab10fa353ae586fc49060800160408051601f1981840301815290829052620034f2929160200162003ee3565b60408051601f19818403018152908290526200350e9162003f16565b6000604051808303816000865af19150503d80600081146200354d576040519150601f19603f3d011682016040523d82523d6000602084013e62003552565b606091505b505050505b6007805461ff001916610100179055565b80516a636f6e736f6c652e6c6f67602083016000808483855afa5050505050565b61c640806200425f83390190565b610878806201089f83390190565b614d19806201111783390190565b6020808252825182820181905260009190848201906040850190845b81811015620035f65783516001600160a01b031683529284019291840191600101620035cf565b50909695505050505050565b60005b838110156200361f57818101518382015260200162003605565b50506000910152565b600081518084526200364281602086016020860162003602565b601f01601f19169290920160200192915050565b602080825282518282018190526000919060409081850190600581811b8701840188860187805b858110156200370c57603f198b8503018752825180516001600160a01b031685528901518985018990528051898601819052908a0190606081881b870181019190870190855b81811015620036f557605f19898503018352620036e284865162003628565b948e01949350918d0191600101620036c3565b505050978a0197945050918801916001016200367d565b50919a9950505050505050505050565b60006020808301818452808551808352604092508286019150828160051b8701018488016000805b84811015620037c457898403603f19018652825180516001600160a01b03168552880151888501889052805188860181905290890190839060608701905b80831015620037ae5783516001600160e01b0319168252928b019260019290920191908b019062003782565b50978a0197955050509187019160010162003744565b50919998505050505050505050565b6000602080830181845280855180835260408601915060408160051b870101925083870160005b8281101562002e3257603f198886030184526200381985835162003628565b94509285019290850190600101620037fa565b6001600160a01b0381168114620018c457600080fd5b600080604083850312156200385657600080fd5b823562003863816200382c565b946020939093013593505050565b634e487b7160e01b600052604160045260246000fd5b60405161014081016001600160401b0381118282101715620038ad57620038ad62003871565b60405290565b60405161018081016001600160401b0381118282101715620038ad57620038ad62003871565b604051601f8201601f191681016001600160401b038111828210171562003904576200390462003871565b604052919050565b60006001600160401b0382111562003928576200392862003871565b50601f01601f191660200190565b600080604083850312156200394a57600080fd5b823562003957816200382c565b915060208301356001600160401b038111156200397357600080fd5b8301601f810185136200398557600080fd5b80356200399c62003996826200390c565b620038d9565b818152866020838501011115620039b257600080fd5b816020840160208301376000602083830101528093505050509250929050565b805162001c29816200382c565b6000620039f062003996846200390c565b905082815283838301111562003a0557600080fd5b62003a1583602083018462003602565b9392505050565b600082601f83011262003a2e57600080fd5b62003a1583835160208501620039df565b8051801515811462001c2957600080fd5b80516001600160401b038116811462001c2957600080fd5b60006020828403121562003a7b57600080fd5b81516001600160401b038082111562003a9357600080fd5b90830190610140828603121562003aa957600080fd5b62003ab362003887565b62003abe83620039d2565b815260208301516020820152604083015160408201526060830151606082015262003aec60808401620039d2565b608082015262003aff60a08401620039d2565b60a082015262003b1260c08401620039d2565b60c082015260e08301518281111562003b2a57600080fd5b62003b388782860162003a1c565b60e083015250610100915062003b5082840162003a3f565b82820152610120915062003b6682840162003a50565b91810191909152949350505050565b60006020828403121562003b8857600080fd5b5051919050565b634e487b7160e01b600052601160045260246000fd5b80820180821115620028b757620028b762003b8f565b6001600160a01b038316815260406020820181905260009062003be19083018462003628565b949350505050565b60006020828403121562003bfc57600080fd5b62003a158262003a3f565b600081600019048311821515161562003c245762003c2462003b8f565b500290565b600181811c9082168062003c3e57607f821691505b60208210810362003c5f57634e487b7160e01b600052602260045260246000fd5b50919050565b60008262003c8357634e487b7160e01b600052601260045260246000fd5b500490565b600061010080838503121562003c9d57600080fd5b604051908101906001600160401b038211818310171562003cc25762003cc262003871565b816040528351915062003cd5826200382c565b81815262003ce660208501620039d2565b602082015262003cf960408501620039d2565b604082015262003d0c60608501620039d2565b606082015262003d1f60808501620039d2565b608082015262003d3260a08501620039d2565b60a082015262003d4560c08501620039d2565b60c082015262003d5860e08501620039d2565b60e0820152949350505050565b60006020828403121562003d7857600080fd5b62003a158262003a50565b81518051151582526020808201511515818401526040808301511515818501526060808401516001600160a01b039081168287015260809485015181168587015292860151831660a0860152908501516001600160401b031660c0850152840151151560e084015290830151908116610100808401919091526102008301919060a0850151915061012062003e22818601846001600160401b03169052565b60c0860151925061014062003e3a8187018515159052565b60e08701516101608781019190915292870151610180870152908601516101a08601528501516001600160a01b039081166101c08601529401519093166101e090920191909152919050565b6001600160a01b038416815260606020820181905260009062003eac9083018562003628565b828103604084015262003ec0818562003628565b9695505050505050565b6001600160a01b03929092168252602082015260400190565b6001600160e01b031983168152815160009062003f0881600485016020870162003602565b919091016004019392505050565b6000825162003f2a81846020870162003602565b9190910192915050565b60408152600062003f49604083018562003628565b905060018060a01b03831660208301529392505050565b848152600060208581840152846040840152608060608401526000845481600182811c91508083168062003f9557607f831692505b858310810362003fb357634e487b7160e01b85526022600452602485fd5b6080880183905260a0880181801562003fd5576001811462003fec5762004019565b60ff198616825284151560051b8201965062004019565b60008b81526020902060005b86811015620040135781548482015290850190890162003ff8565b83019750505b50949c9b505050505050505050505050565b600060a082840312156200403e57600080fd5b60405160a081018181106001600160401b038211171562004063576200406362003871565b604052905080620040748362003a3f565b8152620040846020840162003a3f565b6020820152620040976040840162003a3f565b60408201526060830151620040ac816200382c565b60608201526080830151620040c1816200382c565b6080919091015292915050565b60006102008284031215620040e257600080fd5b620040ec620038b3565b620040f884846200402b565b81526200410860a08401620039d2565b60208201526200411b60c0840162003a50565b60408201526200412e60e0840162003a3f565b606082015261010062004143818501620039d2565b60808301526101206200415881860162003a50565b60a08401526101406200416d81870162003a3f565b60c08501526101608087015160e0860152610180870151848601526101a087015183860152620041a16101c08801620039d2565b82860152620041b46101e08801620039d2565b90850152509195945050505050565b600060208284031215620041d657600080fd5b81516001600160401b03811115620041ed57600080fd5b8201601f81018413620041ff57600080fd5b62003be184825160208401620039df565b83815282602082015260606040820152600062004231606083018462003628565b95945050505050565b6040815260006200424f604083018562003628565b9050826020830152939250505056fe608060405260078054600160ff199182168117909255600b8054909116909117905534801561002d57600080fd5b5061c6038061003d6000396000f3fe60806040523480156200001157600080fd5b5060043610620000c35760003560e01c806385226c81116200007a57806385226c8114620001af578063916a17c614620001c8578063b5508aa914620001d2578063ba414fa614620001dc578063e20c9f7114620001f7578063fa7626d4146200020157600080fd5b80630a9254e414620000c85780631ed7831c14620001505780632ade388014620001695780633e5e3c2314620001825780633f7286f4146200018c57806366d9a9a01462000196575b600080fd5b620000d26200020f565b60405162000147919081516001600160a01b03908116825260208084015182169083015260408084015182169083015260608084015182169083015260808084015182169083015260a08084015182169083015260c08084015182169083015260e09283015116918101919091526101000190565b60405180910390f35b6200015a620006af565b60405162000147919062000e70565b6200017362000713565b60405162000147919062000ee5565b6200015a62000861565b6200015a620008c3565b620001a062000925565b60405162000147919062000fc6565b620001b962000a0f565b6040516200014791906200107d565b620001a062000ae9565b620001b962000bd3565b620001e662000cad565b604051901515815260200162000147565b6200015a62000de4565b600754620001e69060ff1681565b6040805161010081018252600080825260208201819052918101829052606081018290526080810182905260a0810182905260c0810182905260e08101919091526000604051620002609062000e46565b604051809103906000f0801580156200027d573d6000803e3d6000fd5b506001600160a01b0316630a9254e46040518163ffffffff1660e01b815260040160c0604051808303816000875af1158015620002be573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620002e4919062001106565b905060006012604051620002f89062000e54565b6060808252601290820152712232b330bab63a102137b732102a37b5b2b760711b608082015260a0602082018190526003908201526211109560ea1b60c082015260ff909116604082015260e001604051809103906000f08015801562000363573d6000803e3d6000fd5b506040516303223eab60e11b815260016004820152909150737109709ecfa91a80626ff3989d68f67f5b1dd12d906306447d5690602401600060405180830381600087803b158015620003b557600080fd5b505af1158015620003ca573d6000803e3d6000fd5b505050606083015160405163e43252d760e01b81526001600160a01b038481166004830152909116915063e43252d790602401600060405180830381600087803b1580156200041857600080fd5b505af11580156200042d573d6000803e3d6000fd5b50505060808301516040516310a7e20160e01b81526b082a6a68aa4a8bea8a4aaa8960a31b60048201526001600160a01b0390911691506310a7e20190602401600060405180830381600087803b1580156200048857600080fd5b505af11580156200049d573d6000803e3d6000fd5b5050505060408281015181516020810183526802b5e3af16b18800008082529251637e7e591d60e01b81526001600160a01b03858116600483015291516024820152611c20929190911690637e7e591d90604401600060405180830381600087803b1580156200050c57600080fd5b505af115801562000521573d6000803e3d6000fd5b505050506000846020015184838760000151604051620005419062000e62565b6001600160a01b039485168152928416602084015267ffffffffffffffff9091166040830152919091166060820152608001604051809103906000f08015801562000590573d6000803e3d6000fd5b5090507f885cb69240a935d632d79c317109709ecfa91a80626ff3989d68f67f5b1dd12d60001c6001600160a01b03166390c5013b6040518163ffffffff1660e01b8152600401600060405180830381600087803b158015620005f257600080fd5b505af115801562000607573d6000803e3d6000fd5b5050505060405180610100016040528086600001516001600160a01b0316815260200186602001516001600160a01b0316815260200186604001516001600160a01b0316815260200186606001516001600160a01b0316815260200186608001516001600160a01b031681526020018660a001516001600160a01b03168152602001856001600160a01b03168152602001826001600160a01b03168152509550505050505090565b606060148054806020026020016040519081016040528092919081815260200182805480156200070957602002820191906000526020600020905b81546001600160a01b03168152600190910190602001808311620006ea575b5050505050905090565b6060601b805480602002602001604051908101604052809291908181526020016000905b828210156200085857600084815260208082206040805180820182526002870290920180546001600160a01b03168352600181018054835181870281018701909452808452939591948681019491929084015b8282101562000840578382906000526020600020018054620007ac90620011c1565b80601f0160208091040260200160405190810160405280929190818152602001828054620007da90620011c1565b80156200082b5780601f10620007ff576101008083540402835291602001916200082b565b820191906000526020600020905b8154815290600101906020018083116200080d57829003601f168201915b5050505050815260200190600101906200078a565b50505050815250508152602001906001019062000737565b50505050905090565b6060601680548060200260200160405190810160405280929190818152602001828054801562000709576020028201919060005260206000209081546001600160a01b03168152600190910190602001808311620006ea575050505050905090565b6060601580548060200260200160405190810160405280929190818152602001828054801562000709576020028201919060005260206000209081546001600160a01b03168152600190910190602001808311620006ea575050505050905090565b60606019805480602002602001604051908101604052809291908181526020016000905b82821015620008585760008481526020908190206040805180820182526002860290920180546001600160a01b03168352600181018054835181870281018701909452808452939491938583019392830182828015620009f657602002820191906000526020600020906000905b82829054906101000a900460e01b6001600160e01b03191681526020019060040190602082600301049283019260010382029150808411620009b75790505b5050505050815250508152602001906001019062000949565b60606018805480602002602001604051908101604052809291908181526020016000905b828210156200085857838290600052602060002001805462000a5590620011c1565b80601f016020809104026020016040519081016040528092919081815260200182805462000a8390620011c1565b801562000ad45780601f1062000aa85761010080835404028352916020019162000ad4565b820191906000526020600020905b81548152906001019060200180831162000ab657829003601f168201915b50505050508152602001906001019062000a33565b6060601a805480602002602001604051908101604052809291908181526020016000905b82821015620008585760008481526020908190206040805180820182526002860290920180546001600160a01b0316835260018101805483518187028101870190945280845293949193858301939283018282801562000bba57602002820191906000526020600020906000905b82829054906101000a900460e01b6001600160e01b0319168152602001906004019060208260030104928301926001038202915080841162000b7b5790505b5050505050815250508152602001906001019062000b0d565b60606017805480602002602001604051908101604052809291908181526020016000905b828210156200085857838290600052602060002001805462000c1990620011c1565b80601f016020809104026020016040519081016040528092919081815260200182805462000c4790620011c1565b801562000c985780601f1062000c6c5761010080835404028352916020019162000c98565b820191906000526020600020905b81548152906001019060200180831162000c7a57829003601f168201915b50505050508152602001906001019062000bf7565b600754600090610100900460ff161562000cd05750600754610100900460ff1690565b6000737109709ecfa91a80626ff3989d68f67f5b1dd12d3b1562000ddf5760408051737109709ecfa91a80626ff3989d68f67f5b1dd12d602082018190526519985a5b195960d21b8284015282518083038401815260608301909352600092909162000d61917f667f9d70ca411d70ead50d8d5c22070dafc36ad75f3dcf5e7237b22ade9aecc491608001620011fd565b60408051601f198184030181529082905262000d7d9162001230565b6000604051808303816000865af19150503d806000811462000dbc576040519150601f19603f3d011682016040523d82523d6000602084013e62000dc1565b606091505b509150508080602001905181019062000ddb91906200124e565b9150505b919050565b6060601380548060200260200160405190810160405280929190818152602001828054801562000709576020028201919060005260206000209081546001600160a01b03168152600190910190602001808311620006ea575050505050905090565b6167bf806200127a83390190565b610cff8062007a3983390190565b613e96806200873883390190565b6020808252825182820181905260009190848201906040850190845b8181101562000eb35783516001600160a01b03168352928401929184019160010162000e8c565b50909695505050505050565b60005b8381101562000edc57818101518382015260200162000ec2565b50506000910152565b6000602080830181845280855180835260408601915060408160051b870101925083870160005b8281101562000fb957603f19888603018452815180516001600160a01b0316865286015160408787018190528151908701819052908701906060600582901b88018101919088019060005b8181101562000fa157898403605f190183528451805180865262000f81818e88018f850162000ebf565b958c0195601f01601f1916949094018b019350918a019160010162000f57565b50919750505093860193509085019060010162000f0c565b5092979650505050505050565b60006020808301818452808551808352604092508286019150828160051b8701018488016000805b848110156200106e57898403603f19018652825180516001600160a01b03168552880151888501889052805188860181905290890190839060608701905b80831015620010585783516001600160e01b0319168252928b019260019290920191908b01906200102c565b50978a0197955050509187019160010162000fee565b50919998505050505050505050565b6000602080830181845280855180835260408601915060408160051b870101925083870160005b8281101562000fb957878503603f1901845281518051808752620010ce818989018a850162000ebf565b601f01601f191695909501860194509285019290850190600101620010a4565b80516001600160a01b038116811462000ddf57600080fd5b600060c082840312156200111957600080fd5b60405160c0810181811067ffffffffffffffff821117156200114b57634e487b7160e01b600052604160045260246000fd5b6040526200115983620010ee565b81526200116960208401620010ee565b60208201526200117c60408401620010ee565b60408201526200118f60608401620010ee565b6060820152620011a260808401620010ee565b6080820152620011b560a08401620010ee565b60a08201529392505050565b600181811c90821680620011d657607f821691505b602082108103620011f757634e487b7160e01b600052602260045260246000fd5b50919050565b6001600160e01b03198316815281516000906200122281600485016020870162000ebf565b919091016004019392505050565b600082516200124481846020870162000ebf565b9190910192915050565b6000602082840312156200126157600080fd5b815180151581146200127257600080fd5b939250505056fe608060405260078054600160ff199182168117909255600b8054909116909117905534801561002d57600080fd5b506167828061003d6000396000f3fe608060405234801561001057600080fd5b50600436106100b45760003560e01c806385226c811161007157806385226c8114610174578063916a17c614610189578063b5508aa914610191578063ba414fa614610199578063e20c9f71146101b1578063fa7626d4146101b957600080fd5b80630a9254e4146100b95780631ed7831c146101255780632ade38801461013a5780633e5e3c231461014f5780633f7286f41461015757806366d9a9a01461015f575b600080fd5b6100c16101c6565b60405161011c919081516001600160a01b03908116825260208084015182169083015260408084015182169083015260608084015182169083015260808084015182169083015260a092830151169181019190915260c00190565b60405180910390f35b61012d61042a565b60405161011c9190610ba1565b61014261048c565b60405161011c9190610c12565b61012d6105ce565b61012d61062e565b61016761068e565b60405161011c9190610ced565b61017c610774565b60405161011c9190610da0565b610167610844565b61017c61092a565b6101a16109fa565b604051901515815260200161011c565b61012d610b27565b6007546101a19060ff1681565b6040805160c081018252600080825260208201819052918101829052606081018290526080810182905260a0810191909152600060405161020690610b87565b604051809103906000f080158015610222573d6000803e3d6000fd5b506001600160a01b0316630a9254e46040518163ffffffff1660e01b815260040160a0604051808303816000875af1158015610262573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102869190610e30565b90506000816020015182600001516040516102a090610b94565b6001600160a01b03928316815291166020820152604001604051809103906000f0801580156102d3573d6000803e3d6000fd5b5060405163ca669fa760e01b815260016004820152909150737109709ecfa91a80626ff3989d68f67f5b1dd12d9063ca669fa790602401600060405180830381600087803b15801561032457600080fd5b505af1158015610338573d6000803e3d6000fd5b50505060208301516040516318fcb32f60e11b8152654f7261636c6560d01b60048201526001600160a01b03848116602483015290911691506331f9665e90604401600060405180830381600087803b15801561039457600080fd5b505af11580156103a8573d6000803e3d6000fd5b505050506040518060c0016040528083600001516001600160a01b0316815260200183602001516001600160a01b0316815260200183604001516001600160a01b0316815260200183606001516001600160a01b0316815260200183608001516001600160a01b03168152602001826001600160a01b03168152509250505090565b6060601480548060200260200160405190810160405280929190818152602001828054801561048257602002820191906000526020600020905b81546001600160a01b03168152600190910190602001808311610464575b5050505050905090565b6060601b805480602002602001604051908101604052809291908181526020016000905b828210156105c557600084815260208082206040805180820182526002870290920180546001600160a01b03168352600181018054835181870281018701909452808452939591948681019491929084015b828210156105ae57838290600052602060002001805461052190610ed0565b80601f016020809104026020016040519081016040528092919081815260200182805461054d90610ed0565b801561059a5780601f1061056f5761010080835404028352916020019161059a565b820191906000526020600020905b81548152906001019060200180831161057d57829003601f168201915b505050505081526020019060010190610502565b5050505081525050815260200190600101906104b0565b50505050905090565b60606016805480602002602001604051908101604052809291908181526020018280548015610482576020028201919060005260206000209081546001600160a01b03168152600190910190602001808311610464575050505050905090565b60606015805480602002602001604051908101604052809291908181526020018280548015610482576020028201919060005260206000209081546001600160a01b03168152600190910190602001808311610464575050505050905090565b60606019805480602002602001604051908101604052809291908181526020016000905b828210156105c55760008481526020908190206040805180820182526002860290920180546001600160a01b0316835260018101805483518187028101870190945280845293949193858301939283018282801561075c57602002820191906000526020600020906000905b82829054906101000a900460e01b6001600160e01b0319168152602001906004019060208260030104928301926001038202915080841161071e5790505b505050505081525050815260200190600101906106b2565b60606018805480602002602001604051908101604052809291908181526020016000905b828210156105c55783829060005260206000200180546107b790610ed0565b80601f01602080910402602001604051908101604052809291908181526020018280546107e390610ed0565b80156108305780601f1061080557610100808354040283529160200191610830565b820191906000526020600020905b81548152906001019060200180831161081357829003601f168201915b505050505081526020019060010190610798565b6060601a805480602002602001604051908101604052809291908181526020016000905b828210156105c55760008481526020908190206040805180820182526002860290920180546001600160a01b0316835260018101805483518187028101870190945280845293949193858301939283018282801561091257602002820191906000526020600020906000905b82829054906101000a900460e01b6001600160e01b031916815260200190600401906020826003010492830192600103820291508084116108d45790505b50505050508152505081526020019060010190610868565b60606017805480602002602001604051908101604052809291908181526020016000905b828210156105c557838290600052602060002001805461096d90610ed0565b80601f016020809104026020016040519081016040528092919081815260200182805461099990610ed0565b80156109e65780601f106109bb576101008083540402835291602001916109e6565b820191906000526020600020905b8154815290600101906020018083116109c957829003601f168201915b50505050508152602001906001019061094e565b600754600090610100900460ff1615610a1c5750600754610100900460ff1690565b6000737109709ecfa91a80626ff3989d68f67f5b1dd12d3b15610b225760408051737109709ecfa91a80626ff3989d68f67f5b1dd12d602082018190526519985a5b195960d21b82840152825180830384018152606083019093526000929091610aaa917f667f9d70ca411d70ead50d8d5c22070dafc36ad75f3dcf5e7237b22ade9aecc491608001610f0a565b60408051601f1981840301815290829052610ac491610f3b565b6000604051808303816000865af19150503d8060008114610b01576040519150601f19603f3d011682016040523d82523d6000602084013e610b06565b606091505b5091505080806020019051810190610b1e9190610f57565b9150505b919050565b60606013805480602002602001604051908101604052809291908181526020018280548015610482576020028201919060005260206000209081546001600160a01b03168152600190910190602001808311610464575050505050905090565b6145b480610f8183390190565b6112188061553583390190565b6020808252825182820181905260009190848201906040850190845b81811015610be25783516001600160a01b031683529284019291840191600101610bbd565b50909695505050505050565b60005b83811015610c09578181015183820152602001610bf1565b50506000910152565b6000602080830181845280855180835260408601915060408160051b870101925083870160005b82811015610ce057603f19888603018452815180516001600160a01b0316865286015160408787018190528151908701819052908701906060600582901b88018101919088019060005b81811015610cc957898403605f1901835284518051808652610caa818e88018f8501610bee565b958c0195601f01601f1916949094018b019350918a0191600101610c83565b509197505050938601935090850190600101610c39565b5092979650505050505050565b60006020808301818452808551808352604092508286019150828160051b8701018488016000805b84811015610d9157898403603f19018652825180516001600160a01b03168552880151888501889052805188860181905290890190839060608701905b80831015610d7c5783516001600160e01b0319168252928b019260019290920191908b0190610d52565b50978a01979550505091870191600101610d15565b50919998505050505050505050565b6000602080830181845280855180835260408601915060408160051b870101925083870160005b82811015610ce057878503603f1901845281518051808752610dee818989018a8501610bee565b601f01601f191695909501860194509285019290850190600101610dc7565b6001600160a01b0381168114610e2257600080fd5b50565b8051610b2281610e0d565b600060a08284031215610e4257600080fd5b60405160a0810181811067ffffffffffffffff82111715610e7357634e487b7160e01b600052604160045260246000fd5b6040528251610e8181610e0d565b81526020830151610e9181610e0d565b6020820152610ea260408401610e25565b6040820152610eb360608401610e25565b6060820152610ec460808401610e25565b60808201529392505050565b600181811c90821680610ee457607f821691505b602082108103610f0457634e487b7160e01b600052602260045260246000fd5b50919050565b6001600160e01b0319831681528151600090610f2d816004850160208701610bee565b919091016004019392505050565b60008251610f4d818460208701610bee565b9190910192915050565b600060208284031215610f6957600080fd5b81518015158114610f7957600080fd5b939250505056fe608060405260078054600160ff199182168117909255600b8054909116909117905534801561002d57600080fd5b506145778061003d6000396000f3fe60806040523480156200001157600080fd5b5060043610620000c35760003560e01c806385226c81116200007a57806385226c81146200018a578063916a17c614620001a3578063b5508aa914620001ad578063ba414fa614620001b7578063e20c9f7114620001d2578063fa7626d414620001dc57600080fd5b80630a9254e414620000c85780631ed7831c146200012b5780632ade388014620001445780633e5e3c23146200015d5780633f7286f4146200016757806366d9a9a01462000171575b600080fd5b620000d2620001ea565b60405162000122919081516001600160a01b039081168252602080840151821690830152604080840151821690830152606080840151821690830152608092830151169181019190915260a00190565b60405180910390f35b6200013562000618565b60405162000122919062000e41565b6200014e6200067c565b60405162000122919062000eb6565b62000135620007ca565b620001356200082c565b6200017b6200088e565b60405162000122919062000f97565b6200019462000978565b6040516200012291906200104e565b6200017b62000a52565b6200019462000b3c565b620001c162000c16565b604051901515815260200162000122565b6200013562000d4d565b600754620001c19060ff1681565b6040805160a08101825260008082526020820181905281830181905260608201819052608082015290516303223eab60e11b815260016004820152737109709ecfa91a80626ff3989d68f67f5b1dd12d906306447d5690602401600060405180830381600087803b1580156200025f57600080fd5b505af115801562000274573d6000803e3d6000fd5b505050506000604051620002889062000dfb565b604051809103906000f080158015620002a5573d6000803e3d6000fd5b506001600160a01b0316630a9254e46040518163ffffffff1660e01b81526004016020604051808303816000875af1158015620002e6573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200030c9190620010bf565b905060006040516200031e9062000e09565b604051809103906000f0801580156200033b573d6000803e3d6000fd5b50905060006200034c600062000daf565b62000358600062000daf565b84604051620003679062000e17565b92518352905160208301526001600160a01b03166040820152606001604051809103906000f080158015620003a0573d6000803e3d6000fd5b5090506000604051620003b39062000e25565b604051809103906000f080158015620003d0573d6000803e3d6000fd5b5090506000604051620003e39062000e33565b604051809103906000f08015801562000400573d6000803e3d6000fd5b506040516318fcb32f60e11b81526453746f726560d81b60048201526001600160a01b038581166024830152919250908516906331f9665e90604401600060405180830381600087803b1580156200045757600080fd5b505af11580156200046c573d6000803e3d6000fd5b50506040516318fcb32f60e11b81527210dbdb1b185d195c985b15da1a5d195b1a5cdd606a1b60048201526001600160a01b038581166024830152871692506331f9665e9150604401600060405180830381600087803b158015620004d057600080fd5b505af1158015620004e5573d6000803e3d6000fd5b50506040516318fcb32f60e11b8152721259195b9d1a599a595c95da1a5d195b1a5cdd606a1b60048201526001600160a01b038481166024830152871692506331f9665e9150604401600060405180830381600087803b1580156200054957600080fd5b505af11580156200055e573d6000803e3d6000fd5b505050507f885cb69240a935d632d79c317109709ecfa91a80626ff3989d68f67f5b1dd12d60001c6001600160a01b03166390c5013b6040518163ffffffff1660e01b8152600401600060405180830381600087803b158015620005c157600080fd5b505af1158015620005d6573d6000803e3d6000fd5b50506040805160a0810182526001600160a01b039889168152968816602088015294871694860194909452509084166060840152909216608082015292915050565b606060148054806020026020016040519081016040528092919081815260200182805480156200067257602002820191906000526020600020905b81546001600160a01b0316815260019091019060200180831162000653575b5050505050905090565b6060601b805480602002602001604051908101604052809291908181526020016000905b82821015620007c157600084815260208082206040805180820182526002870290920180546001600160a01b03168352600181018054835181870281018701909452808452939591948681019491929084015b82821015620007a95783829060005260206000200180546200071590620010ea565b80601f01602080910402602001604051908101604052809291908181526020018280546200074390620010ea565b8015620007945780601f10620007685761010080835404028352916020019162000794565b820191906000526020600020905b8154815290600101906020018083116200077657829003601f168201915b505050505081526020019060010190620006f3565b505050508152505081526020019060010190620006a0565b50505050905090565b6060601680548060200260200160405190810160405280929190818152602001828054801562000672576020028201919060005260206000209081546001600160a01b0316815260019091019060200180831162000653575050505050905090565b6060601580548060200260200160405190810160405280929190818152602001828054801562000672576020028201919060005260206000209081546001600160a01b0316815260019091019060200180831162000653575050505050905090565b60606019805480602002602001604051908101604052809291908181526020016000905b82821015620007c15760008481526020908190206040805180820182526002860290920180546001600160a01b031683526001810180548351818702810187019094528084529394919385830193928301828280156200095f57602002820191906000526020600020906000905b82829054906101000a900460e01b6001600160e01b03191681526020019060040190602082600301049283019260010382029150808411620009205790505b50505050508152505081526020019060010190620008b2565b60606018805480602002602001604051908101604052809291908181526020016000905b82821015620007c1578382906000526020600020018054620009be90620010ea565b80601f0160208091040260200160405190810160405280929190818152602001828054620009ec90620010ea565b801562000a3d5780601f1062000a115761010080835404028352916020019162000a3d565b820191906000526020600020905b81548152906001019060200180831162000a1f57829003601f168201915b5050505050815260200190600101906200099c565b6060601a805480602002602001604051908101604052809291908181526020016000905b82821015620007c15760008481526020908190206040805180820182526002860290920180546001600160a01b0316835260018101805483518187028101870190945280845293949193858301939283018282801562000b2357602002820191906000526020600020906000905b82829054906101000a900460e01b6001600160e01b0319168152602001906004019060208260030104928301926001038202915080841162000ae45790505b5050505050815250508152602001906001019062000a76565b60606017805480602002602001604051908101604052809291908181526020016000905b82821015620007c157838290600052602060002001805462000b8290620010ea565b80601f016020809104026020016040519081016040528092919081815260200182805462000bb090620010ea565b801562000c015780601f1062000bd55761010080835404028352916020019162000c01565b820191906000526020600020905b81548152906001019060200180831162000be357829003601f168201915b50505050508152602001906001019062000b60565b600754600090610100900460ff161562000c395750600754610100900460ff1690565b6000737109709ecfa91a80626ff3989d68f67f5b1dd12d3b1562000d485760408051737109709ecfa91a80626ff3989d68f67f5b1dd12d602082018190526519985a5b195960d21b8284015282518083038401815260608301909352600092909162000cca917f667f9d70ca411d70ead50d8d5c22070dafc36ad75f3dcf5e7237b22ade9aecc49160800162001126565b60408051601f198184030181529082905262000ce69162001159565b6000604051808303816000865af19150503d806000811462000d25576040519150601f19603f3d011682016040523d82523d6000602084013e62000d2a565b606091505b509150508080602001905181019062000d44919062001177565b9150505b919050565b6060601380548060200260200160405190810160405280929190818152602001828054801562000672576020028201919060005260206000209081546001600160a01b0316815260019091019060200180831162000653575050505050905090565b60408051602081019091526000815260408051602081019091528062000dde84670de0b6b3a764000062000de6565b905292915050565b600062000df482846200119b565b9392505050565b6101b580620011ca83390190565b610480806200137f83390190565b611f8b80620017ff83390190565b61095e806200378a83390190565b61045a80620040e883390190565b6020808252825182820181905260009190848201906040850190845b8181101562000e845783516001600160a01b03168352928401929184019160010162000e5d565b50909695505050505050565b60005b8381101562000ead57818101518382015260200162000e93565b50506000910152565b6000602080830181845280855180835260408601915060408160051b870101925083870160005b8281101562000f8a57603f19888603018452815180516001600160a01b0316865286015160408787018190528151908701819052908701906060600582901b88018101919088019060005b8181101562000f7257898403605f190183528451805180865262000f52818e88018f850162000e90565b958c0195601f01601f1916949094018b019350918a019160010162000f28565b50919750505093860193509085019060010162000edd565b5092979650505050505050565b60006020808301818452808551808352604092508286019150828160051b8701018488016000805b848110156200103f57898403603f19018652825180516001600160a01b03168552880151888501889052805188860181905290890190839060608701905b80831015620010295783516001600160e01b0319168252928b019260019290920191908b019062000ffd565b50978a0197955050509187019160010162000fbf565b50919998505050505050505050565b6000602080830181845280855180835260408601915060408160051b870101925083870160005b8281101562000f8a57878503603f19018452815180518087526200109f818989018a850162000e90565b601f01601f19169590950186019450928501929085019060010162001075565b600060208284031215620010d257600080fd5b81516001600160a01b038116811462000df457600080fd5b600181811c90821680620010ff57607f821691505b6020821081036200112057634e487b7160e01b600052602260045260246000fd5b50919050565b6001600160e01b03198316815281516000906200114b81600485016020870162000e90565b919091016004019392505050565b600082516200116d81846020870162000e90565b9190910192915050565b6000602082840312156200118a57600080fd5b8151801515811462000df457600080fd5b6000816000190483118215151615620011c457634e487b7160e01b600052601160045260246000fd5b50029056fe608060405234801561001057600080fd5b50610195806100206000396000f3fe608060405234801561001057600080fd5b506004361061002b5760003560e01c80630a9254e414610030575b600080fd5b610038610054565b6040516001600160a01b03909116815260200160405180910390f35b600060405161006290610084565b604051809103906000f08015801561007e573d6000803e3d6000fd5b50905090565b60cf806100918339019056fe608060405234801561001057600080fd5b504260005560ac806100236000396000f3fe6080604052348015600f57600080fd5b506004361060325760003560e01c806322f8e56614603757806329cb924d146049575b600080fd5b60476042366004605e565b600055565b005b60005460405190815260200160405180910390f35b600060208284031215606f57600080fd5b503591905056fea2646970667358221220ac5277a6d951fefada8e9d179a43cc6317941f75cad69224364e3024cf39f58e64736f6c63430008100033a26469706673582212207d8871378c623a5dea15cfb24a39319d130f503849e860fc71f867f1c69297ba64736f6c63430008100033608060405234801561001057600080fd5b5061001a3361001f565b61006f565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6104028061007e6000396000f3fe608060405234801561001057600080fd5b50600436106100625760003560e01c806331f9665e14610067578063715018a61461007c5780638da5cb5b14610084578063aafd5e40146100ad578063cc48f4db146100c0578063f2fde38b146100e9575b600080fd5b61007a610075366004610330565b6100fc565b005b61007a610188565b6000546001600160a01b03165b6040516001600160a01b03909116815260200160405180910390f35b6100916100bb36600461035c565b6101be565b6100916100ce36600461035c565b6001602052600090815260409020546001600160a01b031681565b61007a6100f7366004610375565b610229565b6000546001600160a01b0316331461012f5760405162461bcd60e51b815260040161012690610397565b60405180910390fd5b60008281526001602052604080822080546001600160a01b0319166001600160a01b0385169081179091559051909184917fb29aa13e555039289e0513962835b00fcc6e4a265ae8f99e68e5b90d5406fe489190a35050565b6000546001600160a01b031633146101b25760405162461bcd60e51b815260040161012690610397565b6101bc60006102c4565b565b6000818152600160205260408120546001600160a01b0316806102235760405162461bcd60e51b815260206004820152601860248201527f496d706c656d656e746174696f6e206e6f7420666f756e6400000000000000006044820152606401610126565b92915050565b6000546001600160a01b031633146102535760405162461bcd60e51b815260040161012690610397565b6001600160a01b0381166102b85760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608401610126565b6102c1816102c4565b50565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b80356001600160a01b038116811461032b57600080fd5b919050565b6000806040838503121561034357600080fd5b8235915061035360208401610314565b90509250929050565b60006020828403121561036e57600080fd5b5035919050565b60006020828403121561038757600080fd5b61039082610314565b9392505050565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260408201526060019056fea26469706673582212200252ff2d138f6d885f918d0a2b22e867dd71bd3438f512cd1d4016487f70090264736f6c6343000810003360806040523480156200001157600080fd5b5060405162001f8b38038062001f8b833981016040819052620000349162000655565b600280546001600160a01b0319166001600160a01b0383161790556200005d600080336200008b565b6200006c6001600033620001ec565b620000778362000203565b620000828262000300565b505050620006f5565b826000808281526020819052604090206001015460ff166002811115620000b657620000b6620006b1565b14620001095760405162461bcd60e51b815260206004820152601e60248201527f43616e6e6f74207573652061207072652d6578697374696e6720726f6c65000060448201526064015b60405180910390fd5b60008481526020819052604090206001808201805460ff191682800217905550838155620001476002820184620003f7602090811b62000dd717901c565b60008481526020819052604081206001015460ff166002811115620001705762000170620006b1565b03620001e55760405162461bcd60e51b815260206004820152603c60248201527f417474656d7074656420746f2075736520616e20696e76616c696420726f6c6560448201527f20746f206d616e61676520616e206578636c757369766520726f6c6500000000606482015260840162000100565b5050505050565b6001839055620001fe8383836200008b565b505050565b600062000211813362000407565b620002595760405162461bcd60e51b8152602060048201526022602482015260008051602062001f6b8339815191526044820152616c6560f01b606482015260840162000100565b62000274600183620004df60201b62000de11790919060201c565b620002c25760405162461bcd60e51b815260206004820152601e60248201527f466565206d757374206265203c203130302520706572207365636f6e642e0000604482015260640162000100565b815160038190556040519081527e41cf46cedaae9927def5c0647b190fd958c8ab8cde4219dad74319bc05d3d9906020015b60405180910390a15050565b60006200030e813362000407565b620003565760405162461bcd60e51b8152602060048201526022602482015260008051602062001f6b8339815191526044820152616c6560f01b606482015260840162000100565b62000371600183620004df60201b62000de11790919060201c565b620003bf5760405162461bcd60e51b815260206004820152601f60248201527f7765656b6c792064656c617920666565206d757374206265203c203130302500604482015260640162000100565b815160048190556040519081527f2e6cd3e6f7808568620c647ac0e652b0e95bef2494692adbc118fbbd02a8e82e90602001620002f4565b620004038282620004f8565b5050565b600082815260208190526040812060018082015460ff166002811115620004325762000432620006b1565b036200045e576200045583826002016200057960201b62000df81790919060201c565b915050620004d9565b6002600182015460ff1660028111156200047c576200047c620006b1565b036200049f576200045583826003016200058c60201b62000e0b1790919060201c565b60405162461bcd60e51b815260206004820152600e60248201526d125b9d985b1a59081c9bdb19525960921b604482015260640162000100565b92915050565b6000620004ec82620005ab565b51835110905092915050565b6001600160a01b0381166200055c5760405162461bcd60e51b815260206004820152602360248201527f43616e6e6f742073657420616e206578636c757369766520726f6c6520746f2060448201526203078360ec1b606482015260840162000100565b81546001600160a01b0319166001600160a01b0391909116179055565b90546001600160a01b0391821691161490565b6001600160a01b03166000908152602091909152604090205460ff1690565b6040805160208101909152600081526040518060200160405280620005e7670de0b6b3a764000085620005ef60201b62000e2a1790919060201c565b905292915050565b6000620005fd8284620006c7565b9392505050565b6000602082840312156200061757600080fd5b604051602081016001600160401b03811182821017156200064857634e487b7160e01b600052604160045260246000fd5b6040529151825250919050565b6000806000606084860312156200066b57600080fd5b62000677858562000604565b925062000688856020860162000604565b60408501519092506001600160a01b0381168114620006a657600080fd5b809150509250925092565b634e487b7160e01b600052602160045260246000fd5b6000816000190483118215151615620006f057634e487b7160e01b600052601160045260246000fd5b500290565b61186680620007056000396000f3fe6080604052600436106101355760003560e01c80637d69dfdb116100ab578063ab3545e51161006f578063ab3545e5146103b1578063acb6f6cb146103d1578063b187487d146103f1578063bd1f4b5214610411578063cd3a9b2414610431578063d97c05be1461043957600080fd5b80637d69dfdb146103235780637e7e591d1461033a57806384ae2a741461035a5780638659d23214610371578063aaa14ca31461039157600080fd5b80635b97aadd116100fd5780635b97aadd146101f35780636be7658b146102515780636f356f4a1461027157806374201feb1461029e57806374d0a676146102d35780637cdc1cb9146102f357600080fd5b80631c39c38d1461013a57806322f8e5661461017757806329cb924d146101995780632e1a7d4d146101bc5780632fee2098146101dc575b600080fd5b34801561014657600080fd5b5060025461015a906001600160a01b031681565b6040516001600160a01b0390911681526020015b60405180910390f35b34801561018357600080fd5b5061019761019236600461142b565b610459565b005b3480156101a557600080fd5b506101ae6104cf565b60405190815260200161016e565b3480156101c857600080fd5b506101976101d736600461142b565b610564565b3480156101e857600080fd5b506003546101ae9081565b3480156101ff57600080fd5b5061024261020e366004611460565b60408051602080820183526000918290526001600160a01b0393909316815260058352819020815192830190915254815290565b6040519051815260200161016e565b34801561025d57600080fd5b5061019761026c36600461147b565b6105a4565b34801561027d57600080fd5b506101ae61028c366004611460565b60056020526000908152604090205481565b3480156102aa57600080fd5b506102be6102b93660046114bf565b61067a565b6040805192518352905160208301520161016e565b3480156102df57600080fd5b506101976102ee36600461147b565b610740565b3480156102ff57600080fd5b5061031361030e36600461147b565b610816565b604051901515815260200161016e565b34801561032f57600080fd5b506004546101ae9081565b34801561034657600080fd5b50610197610355366004611545565b6108cb565b34801561036657600080fd5b506101ae62093a8081565b34801561037d57600080fd5b5061019761038c366004611570565b61094f565b34801561039d57600080fd5b506101976103ac36600461142b565b6109d1565b3480156103bd57600080fd5b5061015a6103cc36600461142b565b610a8d565b3480156103dd57600080fd5b506101976103ec36600461159b565b610af8565b3480156103fd57600080fd5b5061019761040c36600461159b565b610bb5565b34801561041d57600080fd5b5061019761042c3660046115b7565b610c6b565b610197610caf565b34801561044557600080fd5b5061019761045436600461147b565b610d01565b6002546001600160a01b031661046e57600080fd5b60025460405163117c72b360e11b8152600481018390526001600160a01b03909116906322f8e56690602401600060405180830381600087803b1580156104b457600080fd5b505af11580156104c8573d6000803e3d6000fd5b5050505050565b6002546000906001600160a01b03161561055f57600260009054906101000a90046001600160a01b03166001600160a01b03166329cb924d6040518163ffffffff1660e01b8152600401602060405180830381865afa158015610536573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061055a91906115e1565b905090565b504290565b6001546105718133610816565b6105965760405162461bcd60e51b815260040161058d906115fa565b60405180910390fd5b6105a03383610e36565b5050565b81600260008281526020819052604090206001015460ff1660028111156105cd576105cd61163c565b146105ea5760405162461bcd60e51b815260040161058d90611652565b60008381526020819052604090205483906106059033610816565b6106215760405162461bcd60e51b815260040161058d9061169e565b600084815260208190526040902061063c9060030184610f4f565b60405133906001600160a01b0385169086907feb3e33034c392e69263b04ec0fa376dc12784a41b6676c7f31b936cbc0fbb5af90600090a450505050565b60408051602081019091526000815260408051602081019091526000815260006106a48587610f71565b604080516020810190915260035481529091506106da906106d4836106ce3689900389018961159b565b90610f7d565b90610fae565b925060006106f0876106ea6104cf565b90610f71565b9050600061071a6107048362093a80610feb565b6040805160208101909152600454815290610f7d565b9050610733816106d4856106ce368b90038b018b61159b565b9350505050935093915050565b81600260008281526020819052604090206001015460ff1660028111156107695761076961163c565b146107865760405162461bcd60e51b815260040161058d90611652565b60008381526020819052604090205483906107a19033610816565b6107bd5760405162461bcd60e51b815260040161058d9061169e565b60008481526020819052604090206107d89060030184610ff7565b60405133906001600160a01b0385169086907f63502af7324ff6db91ab38f8236a648727d9385ea6c782073dd4882d8a61a48f90600090a450505050565b600082815260208190526040812060018082015460ff16600281111561083e5761083e61163c565b0361085f5760028101546001600160a01b038481169116145b9150506108c5565b6002600182015460ff16600281111561087a5761087a61163c565b0361088c576108576003820184610e0b565b60405162461bcd60e51b815260206004820152600e60248201526d125b9d985b1a59081c9bdb19525960921b604482015260640161058d565b92915050565b60006108d78133610816565b6108f35760405162461bcd60e51b815260040161058d906115fa565b6001600160a01b0383166000908152600560205260409081902083519055517f98c807f575ae6584ff8200eaf3205f3f20abf9c954fff030c152f5e7c5446d6e90610942908451815260200190565b60405180910390a1505050565b8161096a60006109643685900385018561159b565b90611072565b6109b65760405162461bcd60e51b815260206004820152601960248201527f416d6f756e742073656e742063616e2774206265207a65726f00000000000000604482015260640161058d565b6109cc6001600160a01b03821633308535611089565b505050565b80600260008281526020819052604090206001015460ff1660028111156109fa576109fa61163c565b14610a175760405162461bcd60e51b815260040161058d90611652565b81610a228133610816565b610a3e5760405162461bcd60e51b815260040161058d906115fa565b6000838152602081905260409020610a599060030133610f4f565b6040513390819085907feb3e33034c392e69263b04ec0fa376dc12784a41b6676c7f31b936cbc0fbb5af90600090a4505050565b600081600160008281526020819052604090206001015460ff166002811115610ab857610ab861163c565b14610ad55760405162461bcd60e51b815260040161058d906116e2565b6000838152602081905260409020600201546001600160a01b03165b9392505050565b6000610b048133610816565b610b205760405162461bcd60e51b815260040161058d906115fa565b610b2b826001610de1565b610b775760405162461bcd60e51b815260206004820152601e60248201527f466565206d757374206265203c203130302520706572207365636f6e642e0000604482015260640161058d565b815160038190556040519081527e41cf46cedaae9927def5c0647b190fd958c8ab8cde4219dad74319bc05d3d9906020015b60405180910390a15050565b6000610bc18133610816565b610bdd5760405162461bcd60e51b815260040161058d906115fa565b610be8826001610de1565b610c345760405162461bcd60e51b815260206004820152601f60248201527f7765656b6c792064656c617920666565206d757374206265203c203130302500604482015260640161058d565b815160048190556040519081527f2e6cd3e6f7808568620c647ac0e652b0e95bef2494692adbc118fbbd02a8e82e90602001610ba9565b600154610c788133610816565b610c945760405162461bcd60e51b815260040161058d906115fa565b82610ca96001600160a01b03821633856110f4565b50505050565b60003411610cff5760405162461bcd60e51b815260206004820152601860248201527f56616c75652073656e742063616e2774206265207a65726f0000000000000000604482015260640161058d565b565b81600160008281526020819052604090206001015460ff166002811115610d2a57610d2a61163c565b14610d475760405162461bcd60e51b815260040161058d906116e2565b6000838152602081905260409020548390610d629033610816565b610d7e5760405162461bcd60e51b815260040161058d9061169e565b6000848152602081905260409020610d999060020184611124565b60405133906001600160a01b0385169086907f3b855c56b409b671c7112789d022675eb639d0bcb8896f1b6197c132f799e74690600090a450505050565b6105a08282611124565b6000610dec826111a3565b51835110905092915050565b90546001600160a01b0391821691161490565b6001600160a01b03166000908152602091909152604090205460ff1690565b6000610af18284611747565b80471015610e865760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a20696e73756666696369656e742062616c616e6365000000604482015260640161058d565b6000826001600160a01b03168260405160006040518083038185875af1925050503d8060008114610ed3576040519150601f19603f3d011682016040523d82523d6000602084013e610ed8565b606091505b50509050806109cc5760405162461bcd60e51b815260206004820152603a60248201527f416464726573733a20756e61626c6520746f2073656e642076616c75652c207260448201527f6563697069656e74206d61792068617665207265766572746564000000000000606482015260840161058d565b6001600160a01b0316600090815260209190915260409020805460ff19169055565b6000610af18284611766565b604080516020810190915260008152604080516020810190915283518190610fa59085610e2a565b90529392505050565b6040805160208101909152600081526040805160208101909152825184518291670de0b6b3a764000091610fe191610e2a565b610fa59190611779565b6000610af18284611779565b6001600160a01b03811661104d5760405162461bcd60e51b815260206004820152601f60248201527f43616e6e6f74206164642030783020746f20612073686172656420726f6c6500604482015260640161058d565b6001600160a01b0316600090815260209190915260409020805460ff19166001179055565b600061107d826111a3565b51835111905092915050565b6040516001600160a01b0380851660248301528316604482015260648101829052610ca99085906323b872dd60e01b906084015b60408051601f198184030181529190526020810180516001600160e01b03166001600160e01b0319909316929092179091526111d8565b6040516001600160a01b0383166024820152604481018290526109cc90849063a9059cbb60e01b906064016110bd565b6001600160a01b0381166111865760405162461bcd60e51b815260206004820152602360248201527f43616e6e6f742073657420616e206578636c757369766520726f6c6520746f2060448201526203078360ec1b606482015260840161058d565b81546001600160a01b0319166001600160a01b0391909116179055565b6040805160208101909152600081526040805160208101909152806111d084670de0b6b3a7640000610e2a565b905292915050565b600061122d826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b03166112aa9092919063ffffffff16565b8051909150156109cc578080602001905181019061124b919061179b565b6109cc5760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b606482015260840161058d565b60606112b984846000856112c1565b949350505050565b6060824710156113225760405162461bcd60e51b815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f6044820152651c8818d85b1b60d21b606482015260840161058d565b6001600160a01b0385163b6113795760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000604482015260640161058d565b600080866001600160a01b0316858760405161139591906117e1565b60006040518083038185875af1925050503d80600081146113d2576040519150601f19603f3d011682016040523d82523d6000602084013e6113d7565b606091505b50915091506113e78282866113f2565b979650505050505050565b60608315611401575081610af1565b8251156114115782518084602001fd5b8160405162461bcd60e51b815260040161058d91906117fd565b60006020828403121561143d57600080fd5b5035919050565b80356001600160a01b038116811461145b57600080fd5b919050565b60006020828403121561147257600080fd5b610af182611444565b6000806040838503121561148e57600080fd5b8235915061149e60208401611444565b90509250929050565b6000602082840312156114b957600080fd5b50919050565b6000806000606084860312156114d457600080fd5b83359250602084013591506114ec85604086016114a7565b90509250925092565b60006020828403121561150757600080fd5b6040516020810181811067ffffffffffffffff8211171561153857634e487b7160e01b600052604160045260246000fd5b6040529135825250919050565b6000806040838503121561155857600080fd5b61156183611444565b915061149e84602085016114f5565b6000806040838503121561158357600080fd5b61158c83611444565b915061149e84602085016114a7565b6000602082840312156115ad57600080fd5b610af183836114f5565b600080604083850312156115ca57600080fd5b6115d383611444565b946020939093013593505050565b6000602082840312156115f357600080fd5b5051919050565b60208082526022908201527f53656e64657220646f6573206e6f7420686f6c6420726571756972656420726f6040820152616c6560f01b606082015260800190565b634e487b7160e01b600052602160045260246000fd5b6020808252602c908201527f4d7573742062652063616c6c6564206f6e20616e20696e697469616c697a656460408201526b2053686172656420726f6c6560a01b606082015260800190565b60208082526024908201527f43616e206f6e6c792062652063616c6c6564206279206120726f6c65206d616e60408201526330b3b2b960e11b606082015260800190565b6020808252602f908201527f4d7573742062652063616c6c6564206f6e20616e20696e697469616c697a656460408201526e204578636c757369766520726f6c6560881b606082015260800190565b634e487b7160e01b600052601160045260246000fd5b600081600019048311821515161561176157611761611731565b500290565b818103818111156108c5576108c5611731565b60008261179657634e487b7160e01b600052601260045260246000fd5b500490565b6000602082840312156117ad57600080fd5b81518015158114610af157600080fd5b60005b838110156117d85781810151838201526020016117c0565b50506000910152565b600082516117f38184602087016117bd565b9190910192915050565b602081526000825180602084015261181c8160408501602087016117bd565b601f01601f1916919091016040019291505056fea26469706673582212200e1fb084c8982e7255d560e846cc4c6ad74c5f9a9b38149bdde7bb884a481b1b64736f6c6343000810003353656e64657220646f6573206e6f7420686f6c6420726571756972656420726f608060405234801561001057600080fd5b5061001a33610032565b6000805460ff60a01b1916600160a01b179055610082565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6108cd806100916000396000f3fe608060405234801561001057600080fd5b50600436106100935760003560e01c80638da5cb5b116100665780638da5cb5b146101085780639b19251a14610119578063d01f63f514610149578063e43252d71461015e578063f2fde38b1461017157600080fd5b806337797c08146100985780633a3ab672146100c8578063715018a6146100eb5780638ab1d681146100f5575b600080fd5b6100ab6100a636600461073b565b610184565b6040516001600160a01b0390911681526020015b60405180910390f35b6100db6100d6366004610754565b6101ae565b60405190151581526020016100bf565b6100f36101ee565b005b6100f3610103366004610754565b61022d565b6000546001600160a01b03166100ab565b61013c610127366004610754565b60016020526000908152604090205460ff1681565b6040516100bf919061079a565b61015161030a565b6040516100bf91906107c2565b6100f361016c366004610754565b6104a0565b6100f361017f366004610754565b6105fa565b6002818154811061019457600080fd5b6000918252602090912001546001600160a01b0316905081565b60006101b8610692565b60016001600160a01b03831660009081526001602052604090205460ff1660028111156101e7576101e7610784565b1492915050565b6000546001600160a01b031633146102215760405162461bcd60e51b81526004016102189061080f565b60405180910390fd5b61022b60006106eb565b565b610235610692565b6102476000805460ff60a01b19169055565b6000546001600160a01b031633146102715760405162461bcd60e51b81526004016102189061080f565b60026001600160a01b03821660009081526001602052604090205460ff1660028111156102a0576102a0610784565b146102ef576001600160a01b038116600081815260016020526040808220805460ff19166002179055517fcdd2e9b91a56913d370075169cefa1602ba36be5301664f752192bb1709df7579190a25b6103076000805460ff60a01b1916600160a01b179055565b50565b6060610314610692565b6000805b6002548110156103985760018060006002848154811061033a5761033a610844565b60009182526020808320909101546001600160a01b0316835282019290925260400190205460ff16600281111561037357610373610784565b0361038657816103828161085a565b9250505b806103908161085a565b915050610318565b508067ffffffffffffffff8111156103b2576103b2610881565b6040519080825280602002602001820160405280156103db578160200160208202803683370190505b5091506000905060005b60025481101561049b5760006002828154811061040457610404610844565b6000918252602090912001546001600160a01b0316905060016001600160a01b03821660009081526001602052604090205460ff16600281111561044a5761044a610784565b03610488578084848151811061046257610462610844565b6001600160a01b0390921660209283029190910190910152826104848161085a565b9350505b50806104938161085a565b9150506103e5565b505090565b6104a8610692565b6104ba6000805460ff60a01b19169055565b6000546001600160a01b031633146104e45760405162461bcd60e51b81526004016102189061080f565b60016001600160a01b03821660009081526001602052604090205460ff16600281111561051357610513610784565b146102ef576001600160a01b03811660009081526001602052604081205460ff16600281111561054557610545610784565b0361059657600280546001810182556000919091527f405787fa12a823e0f2b7631cc41b3ba8828b3321ca811111fa75cd3aa3bb5ace0180546001600160a01b0319166001600160a01b0383161790555b6001600160a01b0381166000818152600160208190526040808320805460ff1916909217909155517fa850ae9193f515cbae8d35e8925bd2be26627fc91bce650b8652ed254e9cab039190a26103076000805460ff60a01b1916600160a01b179055565b6000546001600160a01b031633146106245760405162461bcd60e51b81526004016102189061080f565b6001600160a01b0381166106895760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608401610218565b610307816106eb565b600054600160a01b900460ff1661022b5760405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c006044820152606401610218565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b60006020828403121561074d57600080fd5b5035919050565b60006020828403121561076657600080fd5b81356001600160a01b038116811461077d57600080fd5b9392505050565b634e487b7160e01b600052602160045260246000fd5b60208101600383106107bc57634e487b7160e01b600052602160045260246000fd5b91905290565b6020808252825182820181905260009190848201906040850190845b818110156108035783516001600160a01b0316835292840192918401916001016107de565b50909695505050505050565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b634e487b7160e01b600052603260045260246000fd5b60006001820161087a57634e487b7160e01b600052601160045260246000fd5b5060010190565b634e487b7160e01b600052604160045260246000fdfea264697066735822122012579754682d9ca0b43a16b3094418ed8aa5ee7031d0fb774b381905d2c9cf5e64736f6c63430008100033608060405234801561001057600080fd5b5061001a3361001f565b61006f565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6103dc8061007e6000396000f3fe608060405234801561001057600080fd5b50600436106100625760003560e01c806310a7e20114610067578063715018a61461007c5780638da5cb5b146100845780638e0d3ca7146100a457806390978d1b146100b7578063f2fde38b146100ea575b600080fd5b61007a610075366004610328565b6100fd565b005b61007a61018d565b6000546040516001600160a01b0390911681526020015b60405180910390f35b61007a6100b2366004610328565b6101c3565b6100da6100c5366004610328565b60009081526001602052604090205460ff1690565b604051901515815260200161009b565b61007a6100f8366004610341565b610244565b6000546001600160a01b031633146101305760405162461bcd60e51b815260040161012790610371565b60405180910390fd5b60008181526001602052604090205460ff1661018a576000818152600160208190526040808320805460ff19169092179091555182917fa0ca1076d765c13772089a90b5121cf6ddf63c9f7891c4e5031adbc85936b27691a25b50565b6000546001600160a01b031633146101b75760405162461bcd60e51b815260040161012790610371565b6101c160006102d8565b565b6000546001600160a01b031633146101ed5760405162461bcd60e51b815260040161012790610371565b60008181526001602052604090205460ff161561018a57600081815260016020526040808220805460ff191690555182917fefdf15ca0f9402bd4e933b0edb0db65b23cc50d27cb010d8abcadaae4fa944e591a250565b6000546001600160a01b0316331461026e5760405162461bcd60e51b815260040161012790610371565b6001600160a01b0381166102d35760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608401610127565b61018a815b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b60006020828403121561033a57600080fd5b5035919050565b60006020828403121561035357600080fd5b81356001600160a01b038116811461036a57600080fd5b9392505050565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260408201526060019056fea26469706673582212200420ad640ea5d694ea28017924c73d0062ff64bd9ac631618e6fb3c5d0ca8aeb64736f6c63430008100033a2646970667358221220c74f5ca068d51d49125bff8669b3874b1237cd8193f4156aba9d1b2e7b22cab564736f6c63430008100033608060405234801561001057600080fd5b5060405161121838038061121883398101604081905261002f9161007f565b600080546001600160a01b039283166001600160a01b031991821617909155600180549390921692169190911790556100b2565b80516001600160a01b038116811461007a57600080fd5b919050565b6000806040838503121561009257600080fd5b61009b83610063565b91506100a960208401610063565b90509250929050565b611157806100c16000396000f3fe608060405234801561001057600080fd5b506004361061009e5760003560e01c8063719c6d5611610066578063719c6d5614610131578063b551cd5014610144578063b555d60814610167578063d7d6f43d1461017c578063f76177cf1461018f57600080fd5b80631c39c38d146100a3578063216666a4146100d357806322f8e566146100e857806329cb924d146100fb5780636a5ef50614610111575b600080fd5b6000546100b6906001600160a01b031681565b6040516001600160a01b0390911681526020015b60405180910390f35b6100e66100e1366004610c0f565b6101a2565b005b6100e66100f6366004610c5f565b61039c565b61010361040b565b6040519081526020016100ca565b61012461011f366004610c5f565b61049c565b6040516100ca9190610cef565b61010361013f366004610c0f565b6105f1565b610157610152366004610c0f565b610630565b60405190151581526020016100ca565b61016f61065f565b6040516100ca9190610d09565b6100e661018a366004610d6b565b610764565b6100e661019d366004610dc3565b610a33565b6101aa610a5d565b6001600160a01b03166390978d1b846040518263ffffffff1660e01b81526004016101d791815260200190565b602060405180830381865afa1580156101f4573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102189190610de5565b61022157600080fd5b600061022e848484610ae0565b600081815260026020526040902080549192509060ff16158015610261575060008281526003602052604090205460ff16155b15610395576040805180820182526001808252600480546020808501918252600088815260038083528782209651875490151560ff1990911617875592519585019590955585516060810187528b81529081018a81529581018981528354948501845592909452835192027f8a35acfbc15ff81a39ae7d344fd709f28e8600b4aa8c65c6b64bfe7fe36bd19b810192835593517f8a35acfbc15ff81a39ae7d344fd709f28e8600b4aa8c65c6b64bfe7fe36bd19c85015551919290917f8a35acfbc15ff81a39ae7d344fd709f28e8600b4aa8c65c6b64bfe7fe36bd19d9091019061034c9082610e8f565b5050508185336001600160a01b03167f5b89fcc758ee4d9d8841986019cd2bb83213389a619b54baff9ec2ec9944e7a7878760405161038c929190610f4f565b60405180910390a45b5050505050565b6000546001600160a01b03166103b157600080fd5b60005460405163117c72b360e11b8152600481018390526001600160a01b03909116906322f8e56690602401600060405180830381600087803b1580156103f757600080fd5b505af1158015610395573d6000803e3d6000fd5b600080546001600160a01b0316156104975760008054906101000a90046001600160a01b03166001600160a01b03166329cb924d6040518163ffffffff1660e01b8152600401602060405180830381865afa15801561046e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104929190610f68565b905090565b504290565b604080516060808201835260008083526020830152918101919091526000828152600360205260409020805460ff166105135760405162461bcd60e51b815260206004820152601460248201527314995c5d595cdd081251081b9bdd08199bdd5b9960621b60448201526064015b60405180910390fd5b600481600101548154811061052a5761052a610f81565b9060005260206000209060030201604051806060016040529081600082015481526020016001820154815260200160028201805461056790610e07565b80601f016020809104026020016040519081016040528092919081815260200182805461059390610e07565b80156105e05780601f106105b5576101008083540402835291602001916105e0565b820191906000526020600020905b8154815290600101906020018083116105c357829003601f168201915b505050505081525050915050919050565b60008060026000610603878787610ae0565b81526020810191909152604001600020805490915060ff1661062457600080fd5b60010154949350505050565b60008060026000610642878787610ae0565b815260208101919091526040016000205460ff1695945050505050565b60606004805480602002602001604051908101604052809291908181526020016000905b8282101561075b578382906000526020600020906003020160405180606001604052908160008201548152602001600182015481526020016002820180546106ca90610e07565b80601f01602080910402602001604051908101604052809291908181526020018280546106f690610e07565b80156107435780601f1061071857610100808354040283529160200191610743565b820191906000526020600020905b81548152906001019060200180831161072657829003601f168201915b50505050508152505081526020019060010190610683565b50505050905090565b6000610771858585610ae0565b9050604051806060016040528060011515815260200183815260200161079561040b565b905260008281526002602081815260408084208551815460ff1916901515178155858301516001820155948101519490920193909355600390925220805460ff166108385760405162461bcd60e51b815260206004820152602d60248201527f43616e2774207075736820707269636573207468617420686176656e2774206260448201526c19595b881c995c5d595cdd1959609a1b606482015260840161050a565b6001808201546000848152600360205260408120805460ff1916815583018190556004549192909161086a9190610f97565b90508181146109a05760006004828154811061088857610888610f81565b90600052602060002090600302019050826003600061093c846000015485600101548660020180546108b990610e07565b80601f01602080910402602001604051908101604052809291908181526020018280546108e590610e07565b80156109325780601f1061090757610100808354040283529160200191610932565b820191906000526020600020905b81548152906001019060200180831161091557829003601f168201915b5050505050610ae0565b815260200190815260200160002060010181905550806004848154811061096557610965610f81565b906000526020600020906003020160008201548160000155600182015481600101556002820181600201908161099b9190610fbe565b505050505b60048054806109b1576109b1611091565b60008281526020812060036000199093019283020181815560018101829055906109de6002830182610b16565b505090558388336001600160a01b03167f01aba42f88d71f240ed63f6e0b37e62ba65f3d4bc0f11228ef9163cdc56c64b58a8a8a604051610a21939291906110a7565b60405180910390a45050505050505050565b6000610a3e8361049c565b9050610a5881600001518260200151836040015185610764565b505050565b6001546040516302abf57960e61b8152721259195b9d1a599a595c95da1a5d195b1a5cdd606a1b60048201526000916001600160a01b03169063aafd5e4090602401602060405180830381865afa158015610abc573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061049291906110d0565b6000838383604051602001610af7939291906110f9565b6040516020818303038152906040528051906020012090509392505050565b508054610b2290610e07565b6000825580601f10610b32575050565b601f016020900490600052602060002090810190610b509190610b53565b50565b5b80821115610b685760008155600101610b54565b5090565b634e487b7160e01b600052604160045260246000fd5b600082601f830112610b9357600080fd5b813567ffffffffffffffff80821115610bae57610bae610b6c565b604051601f8301601f19908116603f01168101908282118183101715610bd657610bd6610b6c565b81604052838152866020858801011115610bef57600080fd5b836020870160208301376000602085830101528094505050505092915050565b600080600060608486031215610c2457600080fd5b8335925060208401359150604084013567ffffffffffffffff811115610c4957600080fd5b610c5586828701610b82565b9150509250925092565b600060208284031215610c7157600080fd5b5035919050565b6000815180845260005b81811015610c9e57602081850181015186830182015201610c82565b506000602082860101526020601f19601f83011685010191505092915050565b80518252602081015160208301526000604082015160606040850152610ce76060850182610c78565b949350505050565b602081526000610d026020830184610cbe565b9392505050565b6000602080830181845280855180835260408601915060408160051b870101925083870160005b82811015610d5e57603f19888603018452610d4c858351610cbe565b94509285019290850190600101610d30565b5092979650505050505050565b60008060008060808587031215610d8157600080fd5b8435935060208501359250604085013567ffffffffffffffff811115610da657600080fd5b610db287828801610b82565b949793965093946060013593505050565b60008060408385031215610dd657600080fd5b50508035926020909101359150565b600060208284031215610df757600080fd5b81518015158114610d0257600080fd5b600181811c90821680610e1b57607f821691505b602082108103610e3b57634e487b7160e01b600052602260045260246000fd5b50919050565b601f821115610a5857600081815260208120601f850160051c81016020861015610e685750805b601f850160051c820191505b81811015610e8757828155600101610e74565b505050505050565b815167ffffffffffffffff811115610ea957610ea9610b6c565b610ebd81610eb78454610e07565b84610e41565b602080601f831160018114610ef25760008415610eda5750858301515b600019600386901b1c1916600185901b178555610e87565b600085815260208120601f198616915b82811015610f2157888601518255948401946001909101908401610f02565b5085821015610f3f5787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b828152604060208201526000610ce76040830184610c78565b600060208284031215610f7a57600080fd5b5051919050565b634e487b7160e01b600052603260045260246000fd5b81810381811115610fb857634e487b7160e01b600052601160045260246000fd5b92915050565b818103610fc9575050565b610fd38254610e07565b67ffffffffffffffff811115610feb57610feb610b6c565b610ff981610eb78454610e07565b6000601f82116001811461102d57600083156110155750848201545b600019600385901b1c1916600184901b178455610395565b600085815260209020601f19841690600086815260209020845b838110156110675782860154825560019586019590910190602001611047565b5085831015610f3f5793015460001960f8600387901b161c19169092555050600190811b01905550565b634e487b7160e01b600052603160045260246000fd5b8381526060602082015260006110c06060830185610c78565b9050826040830152949350505050565b6000602082840312156110e257600080fd5b81516001600160a01b0381168114610d0257600080fd5b8381528260208201526060604082015260006111186060830184610c78565b9594505050505056fea2646970667358221220f4b1e35f6eb1f5816327034316343d8b6a7a59647aab0193187ab03600ae070964736f6c63430008100033a264697066735822122055db8847a4d7601c142031cd5c9ebcf936788623236ed26aff77f30c70420aeb64736f6c6343000810003360806040523480156200001157600080fd5b5060405162000cff38038062000cff833981016040819052620000349162000139565b828260036200004483826200024d565b5060046200005382826200024d565b50506005805460ff191660ff93909316929092179091555062000319915050565b634e487b7160e01b600052604160045260246000fd5b600082601f8301126200009c57600080fd5b81516001600160401b0380821115620000b957620000b962000074565b604051601f8301601f19908116603f01168101908282118183101715620000e457620000e462000074565b816040528381526020925086838588010111156200010157600080fd5b600091505b8382101562000125578582018301518183018401529082019062000106565b600093810190920192909252949350505050565b6000806000606084860312156200014f57600080fd5b83516001600160401b03808211156200016757600080fd5b62000175878388016200008a565b945060208601519150808211156200018c57600080fd5b506200019b868287016200008a565b925050604084015160ff81168114620001b357600080fd5b809150509250925092565b600181811c90821680620001d357607f821691505b602082108103620001f457634e487b7160e01b600052602260045260246000fd5b50919050565b601f8211156200024857600081815260208120601f850160051c81016020861015620002235750805b601f850160051c820191505b8181101562000244578281556001016200022f565b5050505b505050565b81516001600160401b0381111562000269576200026962000074565b62000281816200027a8454620001be565b84620001fa565b602080601f831160018114620002b95760008415620002a05750858301515b600019600386901b1c1916600185901b17855562000244565b600085815260208120601f198616915b82811015620002ea57888601518255948401946001909101908401620002c9565b5085821015620003095787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b6109d680620003296000396000f3fe608060405234801561001057600080fd5b50600436106100b45760003560e01c80633950935111610071578063395093511461014957806370a082311461015c57806395d89b4114610185578063a457c2d71461018d578063a9059cbb146101a0578063dd62ed3e146101b357600080fd5b806306fdde03146100b957806308bca566146100d7578063095ea7b3146100ec57806318160ddd1461010f57806323b872dd14610121578063313ce56714610134575b600080fd5b6100c16101ec565b6040516100ce9190610820565b60405180910390f35b6100ea6100e536600461088a565b61027e565b005b6100ff6100fa36600461088a565b61028c565b60405190151581526020016100ce565b6002545b6040519081526020016100ce565b6100ff61012f3660046108b4565b6102a6565b60055460405160ff90911681526020016100ce565b6100ff61015736600461088a565b6102ca565b61011361016a3660046108f0565b6001600160a01b031660009081526020819052604090205490565b6100c1610309565b6100ff61019b36600461088a565b610318565b6100ff6101ae36600461088a565b6103af565b6101136101c1366004610912565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b6060600380546101fb90610945565b80601f016020809104026020016040519081016040528092919081815260200182805461022790610945565b80156102745780601f1061024957610100808354040283529160200191610274565b820191906000526020600020905b81548152906001019060200180831161025757829003601f168201915b5050505050905090565b61028882826103bd565b5050565b60003361029a81858561049c565b60019150505b92915050565b6000336102b48582856105c0565b6102bf858585610652565b506001949350505050565b3360008181526001602090815260408083206001600160a01b038716845290915281205490919061029a908290869061030490879061097f565b61049c565b6060600480546101fb90610945565b3360008181526001602090815260408083206001600160a01b0387168452909152812054909190838110156103a25760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b60648201526084015b60405180910390fd5b6102bf828686840361049c565b60003361029a818585610652565b6001600160a01b0382166104135760405162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f2061646472657373006044820152606401610399565b8060026000828254610425919061097f565b90915550506001600160a01b0382166000908152602081905260408120805483929061045290849061097f565b90915550506040518181526001600160a01b038316906000907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9060200160405180910390a35050565b6001600160a01b0383166104fe5760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b6064820152608401610399565b6001600160a01b03821661055f5760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b6064820152608401610399565b6001600160a01b0383811660008181526001602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b6001600160a01b03838116600090815260016020908152604080832093861683529290522054600019811461064c578181101561063f5760405162461bcd60e51b815260206004820152601d60248201527f45524332303a20696e73756666696369656e7420616c6c6f77616e63650000006044820152606401610399565b61064c848484840361049c565b50505050565b6001600160a01b0383166106b65760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b6064820152608401610399565b6001600160a01b0382166107185760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b6064820152608401610399565b6001600160a01b038316600090815260208190526040902054818110156107905760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b6064820152608401610399565b6001600160a01b038085166000908152602081905260408082208585039055918516815290812080548492906107c790849061097f565b92505081905550826001600160a01b0316846001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8460405161081391815260200190565b60405180910390a361064c565b600060208083528351808285015260005b8181101561084d57858101830151858201604001528201610831565b506000604082860101526040601f19601f8301168501019250505092915050565b80356001600160a01b038116811461088557600080fd5b919050565b6000806040838503121561089d57600080fd5b6108a68361086e565b946020939093013593505050565b6000806000606084860312156108c957600080fd5b6108d28461086e565b92506108e06020850161086e565b9150604084013590509250925092565b60006020828403121561090257600080fd5b61090b8261086e565b9392505050565b6000806040838503121561092557600080fd5b61092e8361086e565b915061093c6020840161086e565b90509250929050565b600181811c9082168061095957607f821691505b60208210810361097957634e487b7160e01b600052602260045260246000fd5b50919050565b808201808211156102a057634e487b7160e01b600052601160045260246000fdfea264697066735822122079aea89302a931b65938f5024ef67c57f346deaaa1f56bc95931901dcbfee84264736f6c6343000810003360a06040523480156200001157600080fd5b5060405162003e9638038062003e9683398101604081905262000034916200065e565b6000805460ff191660011790558084848462000057620000513390565b620000a8565b6001600160a01b0383166080526200007982826706f05b59d3b2000062000101565b5050600780546001600160a01b0319166001600160a01b039390931692909217909155506200076d9350505050565b600080546001600160a01b03838116610100818102610100600160a81b0319851617855560405193049190911692909183917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a35050565b6000546001600160a01b03610100909104163314620001675760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064015b60405180910390fd5b670de0b6b3a7640000811115620001c15760405162461bcd60e51b815260206004820152601c60248201527f4275726e656420626f6e642070657263656e74616765203e203130300000000060448201526064016200015e565b60008111620002135760405162461bcd60e51b815260206004820152601b60248201527f4275726e656420626f6e642070657263656e746167652069732030000000000060448201526064016200015e565b6005819055600680546001600160401b038416600160a01b026001600160e01b03199091166001600160a01b03861617179055620002616b082a6a68aa4a8bea8a4aaa8960a31b84620002b8565b604080516001600160a01b03851681526001600160401b03841660208201529081018290527fd0f09246d369018534c67fec6a6c3259c6f962ef82c5521c337ae0ccc104e4bd9060600160405180910390a1505050565b6080516040516302abf57960e61b8152654f7261636c6560d01b60048201526001600160a01b039091169063aafd5e4090602401602060405180830381865afa1580156200030a573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620003309190620006d1565b600180546001600160a01b0319166001600160a01b03929092169190911790556200035a62000523565b6001600160a01b03166390978d1b836040518263ffffffff1660e01b81526004016200038891815260200190565b602060405180830381865afa158015620003a6573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620003cc9190620006f8565b6000838152600360205260409020805460ff1916911515919091179055620003f3620005b9565b604051631d1d5b3960e11b81526001600160a01b0383811660048301529190911690633a3ab67290602401602060405180830381865afa1580156200043c573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620004629190620006f8565b6001600160a01b0382166000908152600260205260409020805460ff1916911515919091179055620004936200060b565b604051635b97aadd60e01b81526001600160a01b0383811660048301529190911690635b97aadd90602401602060405180830381865afa158015620004dc573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200050291906200071c565b516001600160a01b0390911660009081526002602052604090206001015550565b6080516040516302abf57960e61b81527f4964656e74696669657257686974656c6973740000000000000000000000000060048201526000916001600160a01b03169063aafd5e40906024015b602060405180830381865afa1580156200058e573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620005b49190620006d1565b905090565b6080516040516302abf57960e61b81527f436f6c6c61746572616c57686974656c6973740000000000000000000000000060048201526000916001600160a01b03169063aafd5e409060240162000570565b6080516040516302abf57960e61b81526453746f726560d81b60048201526000916001600160a01b03169063aafd5e409060240162000570565b6001600160a01b03811681146200065b57600080fd5b50565b600080600080608085870312156200067557600080fd5b8451620006828162000645565b6020860151909450620006958162000645565b60408601519093506001600160401b0381168114620006b357600080fd5b6060860151909250620006c68162000645565b939692955090935050565b600060208284031215620006e457600080fd5b8151620006f18162000645565b9392505050565b6000602082840312156200070b57600080fd5b81518015158114620006f157600080fd5b6000602082840312156200072f57600080fd5b604051602081016001600160401b03811182821017156200076057634e487b7160e01b600052604160045260246000fd5b6040529151825250919050565b6080516136f1620007a560003960008181610578015281816116df01528181611fa701528181612607015261266c01526136f16000f3fe608060405234801561001057600080fd5b50600436106101c45760003560e01c80638da5cb5b116100f9578063b9a3c84c11610097578063da03b36e11610071578063da03b36e146106a4578063e39dfd7f146106b3578063f2fde38b146106c6578063fe4e1983146106d957600080fd5b8063b9a3c84c14610573578063d509b0171461059a578063d60715b5146105b057600080fd5b8063a7af2d0f116100d3578063a7af2d0f1461050d578063a865578514610520578063ac9650d814610533578063afedba4f1461055357600080fd5b80638da5cb5b146104d15780638ea2f2ab146104e7578063a6a22b43146104fa57600080fd5b80634360af3d11610166578063707621571161014057806370762157146102bf578063715018a614610303578063827625201461030b578063883028841461031e57600080fd5b80634360af3d14610266578063530dd392146102795780636457c979146102ac57600080fd5b806322f8e566116101a257806322f8e5661461022357806329cb924d1461023857806336b13af4146102405780634124beef1461025357600080fd5b806308e7c3e6146101c95780631c39c38d146101e557806320402e1d14610210575b600080fd5b6101d260055481565b6040519081526020015b60405180910390f35b6007546101f8906001600160a01b031681565b6040516001600160a01b0390911681526020016101dc565b6006546101f8906001600160a01b031681565b610236610231366004612c90565b61070b565b005b6101d2610781565b6101d261024e366004612cce565b610790565b610236610261366004612c90565b610817565b6101d2610274366004612d50565b610be1565b61029c610287366004612c90565b60036020526000908152604090205460ff1681565b60405190151581526020016101dc565b6101d26102ba366004612df1565b610c1c565b6102ec6102cd366004612d50565b6002602052600090815260409020805460019091015460ff9091169082565b6040805192151583526020830191909152016101dc565b610236611233565b610236610319366004612ee1565b61126f565b6104c461032c366004612c90565b6040805161022081018252600061018082018181526101a083018290526101c083018290526101e083018290526102008301829052825260208201819052918101829052606081018290526080810182905260a0810182905260c0810182905260e0810182905261010081018290526101208101829052610140810182905261016081019190915250600090815260046020818152604092839020835161022081018552815460ff80821615156101808401908152610100808404831615156101a0860152620100008404831615156101c08601526001600160a01b03630100000090940484166101e0860152600186015484166102008601529084526002850154808416968501969096526001600160401b03600160a01b808804821699860199909952600160e01b96879004831615156060860152600386015480851660808701529889041660a085015294909604909516151560c08201529281015460e08401526005810154918301919091526006810154610120830152600781015483166101408301526008015490911661016082015290565b6040516101dc9190612f61565b60005461010090046001600160a01b03166101f8565b61029c6104f5366004612c90565b6113ea565b61023661050836600461303b565b611422565b6001546101f8906001600160a01b031681565b61023661052e36600461303b565b6116c1565b61054661054136600461306b565b611935565b6040516101dc919061312f565b610566610561366004612c90565b611a8c565b6040516101dc9190613191565b6101f87f000000000000000000000000000000000000000000000000000000000000000081565b6101d26b082a6a68aa4a8bea8a4aaa8960a31b81565b61068c6105be366004612c90565b600460208181526000928352604092839020835160a081018552815460ff808216151583526101008204811615159483019490945262010000810484161515958201959095526001600160a01b0363010000009095048516606082015260018201548516608082015260028201546003830154948301546005840154600685015460078601546008909601549498848116986001600160401b03600160a01b80880482169a600160e01b9889900481169a8486169a928504909316989093049092169594939290811691168c565b6040516101dc9c9b9a999897969594939291906131a4565b6101d2670de0b6b3a764000081565b61029c6106c1366004612c90565b611a97565b6102366106d4366004612d50565b611c15565b6006546106f390600160a01b90046001600160401b031681565b6040516001600160401b0390911681526020016101dc565b6007546001600160a01b031661072057600080fd5b60075460405163117c72b360e11b8152600481018390526001600160a01b03909116906322f8e56690602401600060405180830381600087803b15801561076657600080fd5b505af115801561077a573d6000803e3d6000fd5b5050505050565b600061078b611cb3565b905090565b600061080d84848080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201829052506006548894509092508291506001600160401b03600160a01b820416906001600160a01b03166107f681610be1565b6b082a6a68aa4a8bea8a4aaa8960a31b6000610c1c565b90505b9392505050565b61081f611d43565b61082e6000805460ff19169055565b600081815260046020526040902060028101546001600160a01b03166108965760405162461bcd60e51b8152602060048201526018602482015277105cdcd95c9d1a5bdb88191bd95cc81b9bdd08195e1a5cdd60421b60448201526064015b60405180910390fd5b6002810154600160e01b900460ff16156108f25760405162461bcd60e51b815260206004820152601960248201527f417373657274696f6e20616c726561647920736574746c656400000000000000604482015260640161088d565b60028101805460ff60e01b1916600160e01b17905560088101546001600160a01b0316610a1857610921610781565b6003820154600160a01b90046001600160401b0316111561097c5760405162461bcd60e51b8152602060048201526015602482015274105cdcd95c9d1a5bdb881b9bdd08195e1c1a5c9959605a1b604482015260640161088d565b60038101805460ff60e01b198116600160e01b17909155600282015460068301546109b4926001600160a01b03908116921690611d95565b6109bf826001611dfd565b6002810154604080516000815260016020820152338183015290516001600160a01b039092169184917ff4fa324b13daeb4e1aae736c2553632ae0fb16fb31f2d4da8ac99fd056313a13919081900360600190a3610bcb565b60058101546002820154600091610a4191859190600160a01b90046001600160401b0316611f04565b8254909150610100900460ff1615610a675760038201805460ff60e01b19169055610a89565b60038201805460ff60e01b1916670de0b6b3a76400008314600160e01b021790555b6000670de0b6b3a76400008214610aad5760088301546001600160a01b0316610abc565b60028301546001600160a01b03165b90506000670de0b6b3a76400008460060154600554610adb919061323b565b610ae59190613270565b905060008185600601546002610afb919061323b565b610b059190613292565b9050610b27610b12611f87565b60038701546001600160a01b03169084611d95565b6003850154610b40906001600160a01b03168483611d95565b8454610100900460ff16610b68576003850154610b68908790600160e01b900460ff16611dfd565b60038501546040805160018152600160e01b90920460ff161515602083015233908201526001600160a01b0384169087907ff4fa324b13daeb4e1aae736c2553632ae0fb16fb31f2d4da8ac99fd056313a139060600160405180910390a3505050505b50610bde6000805460ff19166001179055565b50565b6001600160a01b038116600090815260026020526040812060010154600554610c1282670de0b6b3a764000061323b565b6108109190613270565b6000610c26611d43565b610c356000805460ff19169055565b6000610c3f610781565b9050610c5a8b86836001600160401b03168a8a8e8e8b61201b565b91506001600160a01b038a16610ca75760405162461bcd60e51b8152602060048201526012602482015271041737365727465722063616e7420626520360741b604482015260640161088d565b6000828152600460205260409020600201546001600160a01b031615610d0f5760405162461bcd60e51b815260206004820152601860248201527f417373657274696f6e20616c7265616479206578697374730000000000000000604482015260640161088d565b610d1884612062565b610d5d5760405162461bcd60e51b81526020600482015260166024820152752ab739bab83837b93a32b21034b232b73a34b334b2b960511b604482015260640161088d565b610d668661211b565b610da95760405162461bcd60e51b8152602060048201526014602482015273556e737570706f727465642063757272656e637960601b604482015260640161088d565b610db286610be1565b851015610df75760405162461bcd60e51b8152602060048201526013602482015272426f6e6420616d6f756e7420746f6f206c6f7760681b604482015260640161088d565b6040805161022081018252600061018082018181526101a083018290526101c08301829052336101e08401526001600160a01b038c81166102008501529083528d811660208401526001600160401b038516938301939093526060820152908716608082015260a08101610e6b89846132a5565b6001600160401b031681526020016000151581526020018481526020018581526020018681526020018a6001600160a01b0316815260200160006001600160a01b03168152506004600084815260200190815260200160002060008201518160000160008201518160000160006101000a81548160ff02191690831515021790555060208201518160000160016101000a81548160ff02191690831515021790555060408201518160000160026101000a81548160ff02191690831515021790555060608201518160000160036101000a8154816001600160a01b0302191690836001600160a01b0316021790555060808201518160010160006101000a8154816001600160a01b0302191690836001600160a01b03160217905550505060208201518160020160006101000a8154816001600160a01b0302191690836001600160a01b0316021790555060408201518160020160146101000a8154816001600160401b0302191690836001600160401b03160217905550606082015181600201601c6101000a81548160ff02191690831515021790555060808201518160030160006101000a8154816001600160a01b0302191690836001600160a01b0316021790555060a08201518160030160146101000a8154816001600160401b0302191690836001600160401b0316021790555060c082015181600301601c6101000a81548160ff02191690831515021790555060e08201518160040155610100820151816005015561012082015181600601556101408201518160070160006101000a8154816001600160a01b0302191690836001600160a01b031602179055506101608201518160080160006101000a8154816001600160a01b0302191690836001600160a01b0316021790555090505060006111078361227d565b8051909150156111515760405162461bcd60e51b8152602060048201526015602482015274105cdcd95c9d1a5bdb881b9bdd08185b1b1bddd959605a1b604482015260640161088d565b6000838152600460209081526040918290209083015191830151606090930151815462ffff001916620100009115159190910261ff00191617610100931515939093029290921760ff19169015151790556111b76001600160a01b038716333088612352565b838a6001600160a01b0316837fdb1513f0abeb57a364db56aa3eb52015cca5268f00fd67bc73aaf22bccab02b7868f8e8e338f8a6111f591906132a5565b8f8f60405161120b9897969594939291906132c5565b60405180910390a4506112266000805460ff19166001179055565b9998505050505050505050565b6000546001600160a01b036101009091041633146112635760405162461bcd60e51b815260040161088d90613327565b61126d600061238a565b565b6000546001600160a01b0361010090910416331461129f5760405162461bcd60e51b815260040161088d90613327565b670de0b6b3a76400008111156112f75760405162461bcd60e51b815260206004820152601c60248201527f4275726e656420626f6e642070657263656e74616765203e2031303000000000604482015260640161088d565b600081116113475760405162461bcd60e51b815260206004820152601b60248201527f4275726e656420626f6e642070657263656e7461676520697320300000000000604482015260640161088d565b6005819055600680546001600160401b038416600160a01b026001600160e01b03199091166001600160a01b038616171790556113936b082a6a68aa4a8bea8a4aaa8960a31b846116c1565b604080516001600160a01b03851681526001600160401b03841660208201529081018290527fd0f09246d369018534c67fec6a6c3259c6f962ef82c5521c337ae0ccc104e4bd9060600160405180910390a1505050565b600081815260046020526040812060020154600160e01b900460ff166114135761141382610817565b61141c82611a97565b92915050565b61142a611d43565b6114396000805460ff19169055565b6001600160a01b0381166114855760405162461bcd60e51b8152602060048201526013602482015272044697370757465722063616e2774206265203606c1b604482015260640161088d565b600082815260046020526040902060028101546001600160a01b03166114e85760405162461bcd60e51b8152602060048201526018602482015277105cdcd95c9d1a5bdb88191bd95cc81b9bdd08195e1a5cdd60421b604482015260640161088d565b60088101546001600160a01b0316156115435760405162461bcd60e51b815260206004820152601a60248201527f417373657274696f6e20616c7265616479206469737075746564000000000000604482015260640161088d565b61154b610781565b6003820154600160a01b90046001600160401b0316116115a45760405162461bcd60e51b8152602060048201526014602482015273105cdcd95c9d1a5bdb881a5cc8195e1c1a5c995960621b604482015260640161088d565b6115ad836123e3565b6115ef5760405162461bcd60e51b8152602060048201526013602482015272111a5cdc1d5d19481b9bdd08185b1b1bddd959606a1b604482015260640161088d565b6008810180546001600160a01b0319166001600160a01b03848116919091179091556006820154600383015461162a92169033903090612352565b6005810154600282015461164f918591600160a01b90046001600160401b031661249f565b61165883612516565b8054610100900460ff161561167257611672836000611dfd565b6040516001600160a01b03831690339085907f60133788b013c89f2a3756dbc47e3484997b87bd7e0af98a7d70232032c1ce2b90600090a4506116bd6000805460ff19166001179055565b5050565b6040516302abf57960e61b8152654f7261636c6560d01b60048201527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03169063aafd5e4090602401602060405180830381865afa15801561172e573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611752919061335c565b600180546001600160a01b0319166001600160a01b039290921691909117905561177a6125d9565b6001600160a01b03166390978d1b836040518263ffffffff1660e01b81526004016117a791815260200190565b602060405180830381865afa1580156117c4573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906117e89190613389565b6000838152600360205260409020805460ff191691151591909117905561180d61263e565b604051631d1d5b3960e11b81526001600160a01b0383811660048301529190911690633a3ab67290602401602060405180830381865afa158015611855573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906118799190613389565b6001600160a01b0382166000908152600260205260409020805460ff19169115159190911790556118a8611f87565b604051635b97aadd60e01b81526001600160a01b0383811660048301529190911690635b97aadd90602401602060405180830381865afa1580156118f0573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061191491906133a4565b516001600160a01b0390911660009081526002602052604090206001015550565b6060816001600160401b0381111561194f5761194f612d6d565b60405190808252806020026020018201604052801561198257816020015b606081526020019060019003908161196d5790505b50905060005b82811015611a8557600080308686858181106119a6576119a66133e5565b90506020028101906119b891906133fb565b6040516119c6929190613448565b600060405180830381855af49150503d8060008114611a01576040519150601f19603f3d011682016040523d82523d6000602084013e611a06565b606091505b509150915081611a5257604481511015611a1f57600080fd5b60048101905080806020019051810190611a399190613458565b60405162461bcd60e51b815260040161088d9190613191565b80848481518110611a6557611a656133e5565b602002602001018190525050508080611a7d906134ce565b915050611988565b5092915050565b606061141c826126a3565b6000818152600460208181526040808420815161022081018352815460ff80821615156101808401908152610100808404831615156101a0860152620100008404831615156101c08601526001600160a01b03630100000090940484166101e0860152600186015484166102008601529084526002850154808416978501979097526001600160401b03600160a01b808904821697860197909752600160e01b97889004831615156060860152600386015480851660808701529687041660a085015295909404909316151560c08201529381015460e085015260058101549284019290925260068201546101208401526007820154811661014084015260089091015416610160820181905215801590611bb457508051602001515b15611bc25750600092915050565b8060600151611c0b5760405162461bcd60e51b8152602060048201526015602482015274105cdcd95c9d1a5bdb881b9bdd081cd95d1d1b1959605a1b604482015260640161088d565b60c0015192915050565b6000546001600160a01b03610100909104163314611c455760405162461bcd60e51b815260040161088d90613327565b6001600160a01b038116611caa5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b606482015260840161088d565b610bde8161238a565b6007546000906001600160a01b031615611d3e57600760009054906101000a90046001600160a01b03166001600160a01b03166329cb924d6040518163ffffffff1660e01b8152600401602060405180830381865afa158015611d1a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061078b91906134e7565b504290565b60005460ff1661126d5760405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c00604482015260640161088d565b6040516001600160a01b038316602482015260448101829052611df890849063a9059cbb60e01b906064015b60408051601f198184030181529190526020810180516001600160e01b03166001600160e01b031990931692909217909152612729565b505050565b600082815260046020526040902060078101546001909101546001600160a01b0391821691168115611e8c576040516378d8ab5960e11b81526004810185905283151560248201526001600160a01b0383169063f1b156b290604401600060405180830381600087803b158015611e7357600080fd5b505af1158015611e87573d6000803e3d6000fd5b505050505b6001600160a01b03811615611efe576040516378d8ab5960e11b81526004810185905283151560248201526001600160a01b0382169063f1b156b290604401600060405180830381600087803b158015611ee557600080fd5b505af1158015611ef9573d6000803e3d6000fd5b505050505b50505050565b6000611f0f846127fb565b6001600160a01b031663719c6d568484611f28886126a3565b6040518463ffffffff1660e01b8152600401611f4693929190613500565b602060405180830381865afa158015611f63573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061080d91906134e7565b6040516302abf57960e61b81526453746f726560d81b60048201526000907f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03169063aafd5e40906024015b602060405180830381865afa158015611ff7573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061078b919061335c565b600088888888888888883360405160200161203e9998979695949392919061351f565b60405160208183030381529060405280519060200120905098975050505050505050565b60008181526003602052604081205460ff161561208157506001919050565b6120896125d9565b6001600160a01b03166390978d1b836040518263ffffffff1660e01b81526004016120b691815260200190565b602060405180830381865afa1580156120d3573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906120f79190613389565b600092835260036020526040909220805460ff191692151592831790555060ff1690565b6001600160a01b03811660009081526002602052604081205460ff161561214457506001919050565b61214c61263e565b604051631d1d5b3960e11b81526001600160a01b0384811660048301529190911690633a3ab67290602401602060405180830381865afa158015612194573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906121b89190613389565b6001600160a01b0383166000908152600260205260409020805460ff19169115159190911790556121e7611f87565b604051635b97aadd60e01b81526001600160a01b0384811660048301529190911690635b97aadd90602401602060405180830381865afa15801561222f573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061225391906133a4565b516001600160a01b0390921660009081526002602052604090206001810192909255505460ff1690565b6040805160808101825260008082526020808301829052828401829052606083018290528482526004905291909120600101546001600160a01b0316806122e9575050604080516080810182526000808252602082018190529181018290526060810191909152919050565b60405163a6b011a760e01b8152600481018490526001600160a01b0382169063a6b011a790602401608060405180830381865afa15801561232e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108109190613587565b6040516001600160a01b0380851660248301528316604482015260648101829052611efe9085906323b872dd60e01b90608401611dc1565b600080546001600160a01b03838116610100818102610100600160a81b0319851617855560405193049190911692909183917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a35050565b60008181526004602052604081205462010000900460ff1661240757506001919050565b6000828152600460205260409020600101546001600160a01b0316806124305750600192915050565b604051636b915d9160e01b8152600481018490523360248201526001600160a01b03821690636b915d9190604401602060405180830381865afa15801561247b573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108109190613389565b6124a8836127fb565b6001600160a01b031663216666a483836124c1876126a3565b6040518463ffffffff1660e01b81526004016124df93929190613500565b600060405180830381600087803b1580156124f957600080fd5b505af115801561250d573d6000803e3d6000fd5b50505050505050565b600081815260046020526040902060078101546001909101546001600160a01b039182169116811561259d57604051633512293b60e21b8152600481018490526001600160a01b0383169063d448a4ec90602401600060405180830381600087803b15801561258457600080fd5b505af1158015612598573d6000803e3d6000fd5b505050505b6001600160a01b03811615611df857604051633512293b60e21b8152600481018490526001600160a01b0382169063d448a4ec906024016124df565b6040516302abf57960e61b8152721259195b9d1a599a595c95da1a5d195b1a5cdd606a1b60048201526000907f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03169063aafd5e4090602401611fda565b6040516302abf57960e61b81527210dbdb1b185d195c985b15da1a5d195b1a5cdd606a1b60048201526000907f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03169063aafd5e4090602401611fda565b606061141c6126e5604051806020016040528060008152506040518060400160405280600b81526020016a185cdcd95c9d1a5bdb925960aa1b81525085612843565b604080518082018252600a81526937b7a0b9b9b2b93a32b960b11b6020808301919091526000878152600490915291909120600201546001600160a01b0316612889565b600061277e826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b03166128a49092919063ffffffff16565b805190915015611df8578080602001905181019061279c9190613389565b611df85760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b606482015260840161088d565b60008181526004602052604081205460ff1615612832576000828152600460205260409020600101546001600160a01b031661141c565b50506001546001600160a01b031690565b6060600061285185856128b3565b9050848161285e856128f5565b60405160200161287093929190613603565b6040516020818303038152906040529150509392505050565b6060600061289785856128b3565b9050848161285e85612936565b606061080d848460008561298d565b8151606090156128e457816040516020016128ce9190613646565b604051602081830303815290604052905061141c565b816040516020016128ce919061367a565b6060612904608083901c612abe565b61290d83612abe565b6040805160208101939093528201526060015b6040516020818303038152906040529050919050565b606061294e6001600160801b03602084901c16612abe565b6129698360601b6bffffffffffffffffffffffff1916612abe565b6040516020016129209291909182526001600160c01b031916602082015260280190565b6060824710156129ee5760405162461bcd60e51b815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f6044820152651c8818d85b1b60d21b606482015260840161088d565b6001600160a01b0385163b612a455760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000604482015260640161088d565b600080866001600160a01b03168587604051612a61919061369f565b60006040518083038185875af1925050503d8060008114612a9e576040519150601f19603f3d011682016040523d82523d6000602084013e612aa3565b606091505b5091509150612ab3828286612c57565b979650505050505050565b6000808260001c9050806001600160801b03169050806801000000000000000002811777ffffffffffffffff0000000000000000ffffffffffffffff169050806401000000000281177bffffffff00000000ffffffff00000000ffffffff00000000ffffffff16905080620100000281177dffff0000ffff0000ffff0000ffff0000ffff0000ffff0000ffff0000ffff169050806101000281177eff00ff00ff00ff00ff00ff00ff00ff00ff00ff00ff00ff00ff00ff00ff00ff1690508060100281177f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f16905060006008827f08080808080808080808080808080808080808080808080808080808080808081681612bd957612bd961325a565b0460047f040404040404040404040404040404040404040404040404040404040404040484160460027f020202020202020202020202020202020202020202020202020202020202020285160417166027029091017f3030303030303030303030303030303030303030303030303030303030303030019392505050565b60608315612c66575081610810565b825115612c765782518084602001fd5b8160405162461bcd60e51b815260040161088d9190613191565b600060208284031215612ca257600080fd5b5035919050565b6001600160a01b0381168114610bde57600080fd5b8035612cc981612ca9565b919050565b600080600060408486031215612ce357600080fd5b83356001600160401b0380821115612cfa57600080fd5b818601915086601f830112612d0e57600080fd5b813581811115612d1d57600080fd5b876020828501011115612d2f57600080fd5b60209283019550935050840135612d4581612ca9565b809150509250925092565b600060208284031215612d6257600080fd5b813561081081612ca9565b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f191681016001600160401b0381118282101715612dab57612dab612d6d565b604052919050565b60006001600160401b03821115612dcc57612dcc612d6d565b50601f01601f191660200190565b80356001600160401b0381168114612cc957600080fd5b60008060008060008060008060006101208a8c031215612e1057600080fd5b89356001600160401b03811115612e2657600080fd5b8a01601f81018c13612e3757600080fd5b8035612e4a612e4582612db3565b612d83565b8181528d6020838501011115612e5f57600080fd5b81602084016020830137600060208383010152809b50505050612e8460208b01612cbe565b9750612e9260408b01612cbe565b9650612ea060608b01612cbe565b9550612eae60808b01612dda565b9450612ebc60a08b01612cbe565b935060c08a0135925060e08a013591506101008a013590509295985092959850929598565b600080600060608486031215612ef657600080fd5b8335612f0181612ca9565b9250612f0f60208501612dda565b9150604084013590509250925092565b8051151582526020808201511515908301526040808201511515908301526060808201516001600160a01b039081169184019190915260809182015116910152565b600061020082019050612f75828451612f1f565b60208301516001600160a01b0390811660a084015260408401516001600160401b031660c08401526060840151151560e084015260808401519081166101008085019190915260a08501519150610120612fd9818601846001600160401b03169052565b60c08601519250610140612ff08187018515159052565b60e08701516101608781019190915292870151610180870152908601516101a08601528501516001600160a01b039081166101c0860152908501519081166101e08501529050611a85565b6000806040838503121561304e57600080fd5b82359150602083013561306081612ca9565b809150509250929050565b6000806020838503121561307e57600080fd5b82356001600160401b038082111561309557600080fd5b818501915085601f8301126130a957600080fd5b8135818111156130b857600080fd5b8660208260051b85010111156130cd57600080fd5b60209290920196919550909350505050565b60005b838110156130fa5781810151838201526020016130e2565b50506000910152565b6000815180845261311b8160208601602086016130df565b601f01601f19169290920160200192915050565b6000602080830181845280855180835260408601915060408160051b870101925083870160005b8281101561318457603f19888603018452613172858351613103565b94509285019290850190600101613156565b5092979650505050505050565b6020815260006108106020830184613103565b61020081016131b3828f612f1f565b6001600160a01b039c8d1660a08301526001600160401b039b8c1660c083015299151560e0820152978b16610100890152959098166101208701529215156101408601526101608501919091526101808401526101a08301529284166101c0820152919092166101e090910152919050565b634e487b7160e01b600052601160045260246000fd5b600081600019048311821515161561325557613255613225565b500290565b634e487b7160e01b600052601260045260246000fd5b60008261328d57634e487b7160e01b600052601260045260246000fd5b500490565b8181038181111561141c5761141c613225565b6001600160401b03818116838216019080821115611a8557611a85613225565b60006101008a83528060208401526132df8184018b613103565b6001600160a01b03998a1660408501529789166060840152505093861660808501526001600160401b039290921660a084015290931660c082015260e0019190915292915050565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b60006020828403121561336e57600080fd5b815161081081612ca9565b80518015158114612cc957600080fd5b60006020828403121561339b57600080fd5b61081082613379565b6000602082840312156133b657600080fd5b604051602081018181106001600160401b03821117156133d8576133d8612d6d565b6040529151825250919050565b634e487b7160e01b600052603260045260246000fd5b6000808335601e1984360301811261341257600080fd5b8301803591506001600160401b0382111561342c57600080fd5b60200191503681900382131561344157600080fd5b9250929050565b8183823760009101908152919050565b60006020828403121561346a57600080fd5b81516001600160401b0381111561348057600080fd5b8201601f8101841361349157600080fd5b805161349f612e4582612db3565b8181528560208385010111156134b457600080fd5b6134c58260208301602086016130df565b95945050505050565b6000600182016134e0576134e0613225565b5060010190565b6000602082840312156134f957600080fd5b5051919050565b8381528260208201526060604082015260006134c56060830184613103565b60006101208083526135338184018d613103565b602084019b909b52505060408101979097526001600160401b039590951660608701526001600160a01b03938416608087015291831660a0860152821660c085015260e08401521661010090910152919050565b60006080828403121561359957600080fd5b604051608081018181106001600160401b03821117156135bb576135bb612d6d565b6040526135c783613379565b81526135d560208401613379565b60208201526135e660408401613379565b60408201526135f760608401613379565b60608201529392505050565b600084516136158184602089016130df565b8451908301906136298183602089016130df565b845191019061363c8183602088016130df565b0195945050505050565b600b60fa1b8152600082516136628160018501602087016130df565b601d60f91b6001939091019283015250600201919050565b6000825161368c8184602087016130df565b601d60f91b920191825250600101919050565b600082516136b18184602087016130df565b919091019291505056fea26469706673582212208308750472ceb2de8177ffaad79e9d6970ffe4f59d11183bf06a5727259eab7064736f6c63430008100033a26469706673582212207fdd7511568be4055da51babd1036239ffe3588af60945cd826026d56069d15b64736f6c6343000810003360a060405234801561001057600080fd5b5060405161087838038061087883398101604081905261002f91610040565b6001600160a01b0316608052610070565b60006020828403121561005257600080fd5b81516001600160a01b038116811461006957600080fd5b9392505050565b6080516107e861009060003960008181607b015260b701526107e86000f3fe608060405234801561001057600080fd5b506004361061002b5760003560e01c8063025ac24f14610030575b600080fd5b61004361003e36600461057b565b610055565b60405190815260200160405180910390f35b600061006c6001600160a01b03861633308761014c565b6100a06001600160a01b0386167f0000000000000000000000000000000000000000000000000000000000000000866101bd565b604051636457c97960e01b81526001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001690636457c979906100fc908c9033908d908d908d908d908d908d908d906004016106da565b6020604051808303816000875af115801561011b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061013f9190610748565b9998505050505050505050565b6040516001600160a01b03808516602483015283166044820152606481018290526101b79085906323b872dd60e01b906084015b60408051601f198184030181529190526020810180516001600160e01b03166001600160e01b0319909316929092179091526102dc565b50505050565b8015806102375750604051636eb1769f60e11b81523060048201526001600160a01b03838116602483015284169063dd62ed3e90604401602060405180830381865afa158015610211573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102359190610748565b155b6102a75760405162461bcd60e51b815260206004820152603660248201527f5361666545524332303a20617070726f76652066726f6d206e6f6e2d7a65726f60448201527520746f206e6f6e2d7a65726f20616c6c6f77616e636560501b60648201526084015b60405180910390fd5b6040516001600160a01b0383166024820152604481018290526102d790849063095ea7b360e01b90606401610180565b505050565b6000610331826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b03166103ae9092919063ffffffff16565b8051909150156102d7578080602001905181019061034f9190610761565b6102d75760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b606482015260840161029e565b60606103bd84846000856103c7565b90505b9392505050565b6060824710156104285760405162461bcd60e51b815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f6044820152651c8818d85b1b60d21b606482015260840161029e565b6001600160a01b0385163b61047f5760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000604482015260640161029e565b600080866001600160a01b0316858760405161049b9190610783565b60006040518083038185875af1925050503d80600081146104d8576040519150601f19603f3d011682016040523d82523d6000602084013e6104dd565b606091505b50915091506104ed8282866104f8565b979650505050505050565b606083156105075750816103c0565b8251156105175782518084602001fd5b8160405162461bcd60e51b815260040161029e919061079f565b634e487b7160e01b600052604160045260246000fd5b80356001600160a01b038116811461055e57600080fd5b919050565b803567ffffffffffffffff8116811461055e57600080fd5b600080600080600080600080610100898b03121561059857600080fd5b883567ffffffffffffffff808211156105b057600080fd5b818b0191508b601f8301126105c457600080fd5b8135818111156105d6576105d6610531565b604051601f8201601f19908116603f011681019083821181831017156105fe576105fe610531565b816040528281528e602084870101111561061757600080fd5b82602086016020830137600060208483010152809c50505050505061063e60208a01610547565b965061064c60408a01610547565b955061065a60608a01610563565b945061066860808a01610547565b979a969950949793969560a0850135955060c08501359460e001359350915050565b60005b838110156106a557818101518382015260200161068d565b50506000910152565b600081518084526106c681602086016020860161068a565b601f01601f19169290920160200192915050565b60006101208083526106ee8184018d6106ae565b6001600160a01b039b8c166020850152998b1660408401525050958816606087015267ffffffffffffffff9490941660808601529190951660a084015260c083019490945260e08201939093526101000191909152919050565b60006020828403121561075a57600080fd5b5051919050565b60006020828403121561077357600080fd5b815180151581146103c057600080fd5b6000825161079581846020870161068a565b9190910192915050565b6020815260006103c060208301846106ae56fea264697066735822122040fd4937917989d4e157fb0795bc9dc886b180a95780126fdd27487a425c565f64736f6c6343000810003360e06040523480156200001157600080fd5b5060405162004d1938038062004d198339810160408190526200003491620000d4565b6001600160a01b03808316608052811660a08190526040805163d509b01760e01b8152905163d509b017916004808201926020929091908290030181865afa15801562000085573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620000ab91906200010c565b60c05250620001269050565b80516001600160a01b0381168114620000cf57600080fd5b919050565b60008060408385031215620000e857600080fd5b620000f383620000b7565b91506200010360208401620000b7565b90509250929050565b6000602082840312156200011f57600080fd5b5051919050565b60805160a05160c051614b4c620001cd600039600081816103a0015261076a01526000818161025201528181610581015281816106770152818161079901528181611df90152611edb0152600081816103c8015281816105560152818161061e015281816106550152818161073b01528181610e2f015281816112770152818161157501528181611a3101528181611ba601528181611eb001526120770152614b4c6000f3fe60806040523480156200001157600080fd5b5060043610620001515760003560e01c8063a7f0de8111620000c7578063c3c95c7b1162000086578063c3c95c7b146200030a578063d41076451462000330578063d448a4ec1462000386578063d509b017146200039a578063e5a6b10f14620003c2578063f1b156b214620003ea57600080fd5b8063a7f0de8114620002b5578063af2b57ce14620002cc578063b0a1c1c414620002e0578063b75d4e2414620002ea578063bac6d3c114620002f357600080fd5b8063607049d81162000114578063607049d814620001ef5780637564912b146200020657806382f7b9ac14620002355780638921a614146200024c5780639d37c680146200028d57600080fd5b80631122cca314620001565780632a98b03d14620001805780633f6d82561462000197578063481e9c6b14620001bf5780635a68298614620001d8575b600080fd5b6200016d620001673660046200265d565b62000401565b6040519081526020015b60405180910390f35b6200016d620001913660046200268d565b62000885565b620001a666038d7ea4c6800081565b6040516001600160401b03909116815260200162000177565b620001d6620001d036600462002764565b62000ea3565b005b620001d6620001e936600462002764565b62000f9b565b620001d6620002003660046200265d565b62001363565b6200021d620002173660046200265d565b620015d6565b604051620001779a99989796959493929190620027f6565b6200016d620002463660046200265d565b620016d9565b620002747f000000000000000000000000000000000000000000000000000000000000000081565b6040516001600160a01b03909116815260200162000177565b620002a46200029e3660046200265d565b62001762565b604051901515815260200162000177565b620001d6620002c636600462002874565b620017e7565b60005462000274906001600160a01b031681565b6200016d62001b8e565b620001a6607881565b6200016d620003043660046200265d565b62001c21565b620003216200031b3660046200265d565b62001c61565b60405162000177919062002897565b62000366620003413660046200265d565b600260205260009081526040902080546001909101546001600160a01b039091169082565b604080516001600160a01b03909316835260208301919091520162000177565b620001d6620003973660046200265d565b50565b6200016d7f000000000000000000000000000000000000000000000000000000000000000081565b620002747f000000000000000000000000000000000000000000000000000000000000000081565b620001d6620003fb36600462002978565b62001dee565b60008181526001602081905260408220600881015490916101009091046001600160401b031614620004865760405162461bcd60e51b815260206004820152602360248201527f50726f6a656374206973206e6f7420726561647920666f72206175646974207960448201526265742160e81b60648201526084015b60405180910390fd5b80546001600160a01b0316620004d85760405162461bcd60e51b815260206004820152601660248201527513585c9ad95d081b9bdd081a5b9a5d1a585b1a5e995960521b60448201526064016200047d565b6000838152600260205260409020546001600160a01b0316156200053f5760405162461bcd60e51b815260206004820152601760248201527f4d61726b657420616c726561647920617373657274656400000000000000000060448201526064016200047d565b604051634360af3d60e01b81526001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000811660048301526000917f000000000000000000000000000000000000000000000000000000000000000090911690634360af3d90602401602060405180830381865afa158015620005cb573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620005f19190620029a0565b90506000818360010154116200060857816200060e565b82600101545b9050620006476001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016333084620020fb565b6200069d6001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000167f0000000000000000000000000000000000000000000000000000000000000000836200216e565b604051636457c97960e01b8152610120600482015260436101248201527f54686520696e737469747574696f6e2063616e6e6f742064656c6976657220746101448201527f68652070726f6d6973656420616d6f756e74206f6620636172626f6e2063726561016482015262191a5d60ea1b610184820152336024820152306044820152600060648201819052607860848301526001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000811660a484015260c483018490527f000000000000000000000000000000000000000000000000000000000000000060e48401526101048301919091527f00000000000000000000000000000000000000000000000000000000000000001690636457c979906101a4016020604051808303816000875af1158015620007e4573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200080a9190620029a0565b604080518082018252338152602080820189815260008581526002909252838220925183546001600160a01b0319166001600160a01b03909116178355516001909201919091559051919550859187917f584cc08a71081fce3cb80c249a3f322d34332812916fce18435e2d1a4468fa7091a3505050919050565b600043833384604051602001620008a09493929190620029ba565b60408051601f198184030181529181528151602092830120600081815260019093529120549091506001600160a01b031615620009185760405162461bcd60e51b81526020600482015260156024820152744d61726b657420616c72656164792065786973747360581b60448201526064016200047d565b6000826040516020016200092d9190620029f3565b60405160208183030381529060405260016040516200094c906200264f565b6200095992919062002a20565b604051809103906000f08015801562000976573d6000803e3d6000fd5b5090506000836040516020016200098e919062002a63565b6040516020818303038152906040526001604051620009ad906200264f565b620009ba92919062002a9c565b604051809103906000f080158015620009d7573d6000803e3d6000fd5b509050600084604051602001620009ef919062002ae0565b604051602081830303815290604052600160405162000a0e906200264f565b62000a1b92919062002b16565b604051809103906000f08015801562000a38573d6000803e3d6000fd5b50604051634c1d96ab60e11b81523060048201529091506001600160a01b0384169063983b2d5690602401600060405180830381600087803b15801562000a7e57600080fd5b505af115801562000a93573d6000803e3d6000fd5b5050604051634c1d96ab60e11b81523060048201526001600160a01b038516925063983b2d569150602401600060405180830381600087803b15801562000ad957600080fd5b505af115801562000aee573d6000803e3d6000fd5b5050604051634c1d96ab60e11b81523060048201526001600160a01b038416925063983b2d569150602401600060405180830381600087803b15801562000b3457600080fd5b505af115801562000b49573d6000803e3d6000fd5b5050604051637a231bdd60e11b81523060048201526001600160a01b038616925063f44637ba9150602401600060405180830381600087803b15801562000b8f57600080fd5b505af115801562000ba4573d6000803e3d6000fd5b5050604051637a231bdd60e11b81523060048201526001600160a01b038516925063f44637ba9150602401600060405180830381600087803b15801562000bea57600080fd5b505af115801562000bff573d6000803e3d6000fd5b5050604051637a231bdd60e11b81523060048201526001600160a01b038416925063f44637ba9150602401600060405180830381600087803b15801562000c4557600080fd5b505af115801562000c5a573d6000803e3d6000fd5b50505050604051806101400160405280336001600160a01b03168152602001888152602001898152602001878152602001846001600160a01b03168152602001836001600160a01b03168152602001826001600160a01b0316815260200186815260200160011515815260200160006001600160401b03168152506001600086815260200190815260200160002060008201518160000160006101000a8154816001600160a01b0302191690836001600160a01b0316021790555060208201518160010155604082015181600201556060820151816003015560808201518160040160006101000a8154816001600160a01b0302191690836001600160a01b0316021790555060a08201518160050160006101000a8154816001600160a01b0302191690836001600160a01b0316021790555060c08201518160060160006101000a8154816001600160a01b0302191690836001600160a01b0316021790555060e082015181600701908162000dd1919062002be7565b506101008281015160089092018054610120909401516001600160401b031690910268ffffffffffffffff00199215159290921668ffffffffffffffffff1990931692909217179055861562000e585762000e586001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001633308a620020fb565b837f1a49307b6f6ab1604ebafd15886fc4caa9e917f99e76d07d6b73e45f5713a22d868a8a3360405162000e90949392919062002cb3565b60405180910390a2505050949350505050565b6000828152600160205260409020546001600160a01b0316331462000f165760405162461bcd60e51b815260206004820152602260248201527f4f6e6c79206f776e65722063616e206368616e6765206d61726b657420737461604482015261746560f01b60648201526084016200047d565b6002816001600160401b0316111562000f625760405162461bcd60e51b815260206004820152600d60248201526c496e76616c696420737461746560981b60448201526064016200047d565b60009182526001602052604090912060080180546001600160401b039092166101000268ffffffffffffffff0019909216919091179055565b6000828152600160205260409020600881015461010090046001600160401b03166002146200100d5760405162461bcd60e51b815260206004820152601c60248201527f4d61726b6574206e6f7420726561647920666f7220736574746c65210000000060448201526064016200047d565b60058101546040516370a0823160e01b81523360048201526000916001600160a01b0316906370a0823190602401602060405180830381865afa15801562001059573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200107f9190620029a0565b600583015460405163079cc67960e41b81523360048201526024810183905291925060009182916001600160a01b0316906379cc6790906044016020604051808303816000875af1158015620010d9573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620010ff919062002ced565b50600884015460ff1615620011395782915081156200113357600484015462001133906001600160a01b0316338462002290565b6200131e565b60068401546040516370a0823160e01b81523360048201526000916001600160a01b0316906370a0823190602401602060405180830381865afa15801562001185573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620011ab9190620029a0565b11156200131e576006840154604080516318160ddd60e01b815290516000926001600160a01b0316916318160ddd9160048083019260209291908290030181865afa158015620011ff573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620012259190620029a0565b11620012335760006200125d565b612710856001600160401b0316856002015462001251919062002d23565b6200125d919062002d5b565b90508015620012a2578354620012a2906001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000811691163384620020fb565b600684015460405163079cc67960e41b8152336004820152600160248201526001600160a01b03909116906379cc6790906044016020604051808303816000875af1158015620012f6573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200131c919062002ced565b505b6040805182815260208101849052339188917f64e88f38de745da960b2de2db645d82947a21a405c4943480e05ee1ca974a907910160405180910390a3505050505050565b6000818152600160205260409020600881015460026101009091046001600160401b031610620013cb5760405162461bcd60e51b81526020600482015260126024820152714d61726b657420697320617564697465642160701b60448201526064016200047d565b80546001600160a01b0316620014205760405162461bcd60e51b815260206004820152601960248201527813585c9ad95d081a5cc81b9bdd081a5b9a5d1a585b1a5e9959603a1b60448201526064016200047d565b60068101546040516370a0823160e01b81523360048201526001600160a01b03909116906370a0823190602401602060405180830381865afa1580156200146b573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620014919190620029a0565b15620014ec5760405162461bcd60e51b8152602060048201526024808201527f56616c696461746f722063616e207265676973746572206f6e6c79206f6e652060448201526374696d6560e01b60648201526084016200047d565b60068101546040516340c10f1960e01b8152336004820152600160248201526001600160a01b03909116906340c10f19906044016020604051808303816000875af115801562001540573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062001566919062002ced565b50620015a56001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016333066038d7ea4c68000620020fb565b604051339083907fd2eefd4ce8a0e3945e0e703d5d36e37c6dfaa66a08807564ef3d863f76400a9190600090a35050565b6001602081905260009182526040909120805491810154600282015460038301546004840154600585015460068601546007870180546001600160a01b03998a169997989697959694861695938416949290931692620016369062002b59565b80601f0160208091040260200160405190810160405280929190818152602001828054620016649062002b59565b8015620016b55780601f106200168957610100808354040283529160200191620016b5565b820191906000526020600020905b8154815290600101906020018083116200169757829003601f168201915b5050506008909301549192505060ff8116906001600160401b03610100909104168a565b60008181526001602052604080822060049081015491516370a0823160e01b815233918101919091526001600160a01b03909116906370a08231906024015b602060405180830381865afa15801562001736573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200175c9190620029a0565b92915050565b6000818152600160205260408082206006015490516370a0823160e01b815233600482015282916001600160a01b0316906370a0823190602401602060405180830381865afa158015620017ba573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620017e09190620029a0565b1192915050565b6000828152600160205260409020600881015461010090046001600160401b0316156200184b5760405162461bcd60e51b81526020600482015260116024820152704d61726b657420697320636c6f7365642160781b60448201526064016200047d565b80546001600160a01b0316620018a05760405162461bcd60e51b815260206004820152601960248201527813585c9ad95d081a5cc81b9bdd081a5b9a5d1a585b1a5e9959603a1b60448201526064016200047d565b60008211620019115760405162461bcd60e51b815260206004820152603660248201527f546865206e756d626572206f66206372656469742067656e65726174656420736044820152750686f756c6420626520626967676572207468616e20360541b60648201526084016200047d565b60008160040160009054906101000a90046001600160a01b03166001600160a01b03166318160ddd6040518163ffffffff1660e01b8152600401602060405180830381865afa15801562001969573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200198f9190620029a0565b6003830154909150620019a3848362002d72565b1115620019c1828460030154620019bb919062002d88565b620022c2565b604051602001620019d3919062002d9e565b6040516020818303038152906040529062001a035760405162461bcd60e51b81526004016200047d919062002de4565b50815462001a5a9033906001600160a01b031662001a278664e8d4a5100062002d23565b6001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016929190620020fb565b6004828101546040516340c10f1960e01b81523092810192909252602482018590526001600160a01b0316906340c10f19906044016020604051808303816000875af115801562001aaf573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062001ad5919062002ced565b5060058201546040516340c10f1960e01b8152336004820152602481018590526001600160a01b03909116906340c10f19906044016020604051808303816000875af115801562001b2a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062001b50919062002ced565b50604051838152339085907fb33c99b82010ff18b32d024f038afefb8096ad49050d8896e20cdd6df4e401ee9060200160405180910390a350505050565b6040516370a0823160e01b81523360048201526000907f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316906370a0823190602401602060405180830381865afa15801562001bf6573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062001c1c9190620029a0565b905090565b6000818152600160205260408082206005015490516370a0823160e01b81523360048201526001600160a01b03909116906370a082319060240162001718565b604080516101408101825260008082526020820181905291810182905260608082018390526080820183905260a0820183905260c0820183905260e0820152610100810182905261012081019190915260008281526001602081815260409283902083516101408101855281546001600160a01b0390811682529382015492810192909252600281015493820193909352600383015460608201526004830154821660808201526005830154821660a0820152600683015490911660c082015260078201805491929160e08401919062001d3b9062002b59565b80601f016020809104026020016040519081016040528092919081815260200182805462001d699062002b59565b801562001dba5780601f1062001d8e5761010080835404028352916020019162001dba565b820191906000526020600020905b81548152906001019060200180831162001d9c57829003601f168201915b50505091835250506008919091015460ff81161515602083015261010090046001600160401b031660409091015292915050565b336001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000161462001e685760405162461bcd60e51b815260206004820181905260248201527f4f6e6c79204f4f76332063616e2063616c6c20746869732066756e6374696f6e60448201526064016200047d565b6000828152600260209081526040808320600190810154845290915290208115620020a45760088101805460ff19169055604051634360af3d60e01b81526001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000811660048301526000917f000000000000000000000000000000000000000000000000000000000000000090911690634360af3d90602401602060405180830381865afa15801562001f25573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062001f4b9190620029a0565b905060008183600101541162001f62578162001f68565b82600101545b600480850154604080516318160ddd60e01b815290519394506001600160a01b03909116926379cc679092309285926318160ddd928281019260209291908290030181865afa15801562001fc0573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062001fe69190620029a0565b6040516001600160e01b031960e085901b1681526001600160a01b03909216600483015260248201526044016020604051808303816000875af115801562002032573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062002058919062002ced565b50600085815260026020526040902054620020a1906001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000811691168362002290565b50505b60088101805468ffffffffffffffff00191661020017905560008381526002602052604080822060010154905190917fe9146184308c5e4b8f243047cc6f81dce88e004d7980502e123b02f887ab514491a2505050565b6040516001600160a01b0380851660248301528316604482015260648101829052620021689085906323b872dd60e01b906084015b60408051601f198184030181529190526020810180516001600160e01b03166001600160e01b031990931692909217909152620023e2565b50505050565b801580620021ec5750604051636eb1769f60e11b81523060048201526001600160a01b03838116602483015284169063dd62ed3e90604401602060405180830381865afa158015620021c4573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620021ea9190620029a0565b155b620022595760405162461bcd60e51b815260206004820152603660248201527f5361666545524332303a20617070726f76652066726f6d206e6f6e2d7a65726f60448201527520746f206e6f6e2d7a65726f20616c6c6f77616e636560501b60648201526084016200047d565b6040516001600160a01b0383166024820152604481018290526200228b90849063095ea7b360e01b9060640162002130565b505050565b6040516001600160a01b0383166024820152604481018290526200228b90849063a9059cbb60e01b9060640162002130565b606081600003620022ea5750506040805180820190915260018152600360fc1b602082015290565b8160005b81156200231a5780620023018162002df9565b9150620023129050600a8362002d5b565b9150620022ee565b6000816001600160401b0381111562002337576200233762002677565b6040519080825280601f01601f19166020018201604052801562002362576020820181803683370190505b5090505b8415620023da576200237a60018362002d88565b915062002389600a8662002e15565b6200239690603062002d72565b60f81b818381518110620023ae57620023ae62002e2c565b60200101906001600160f81b031916908160001a905350620023d2600a8662002d5b565b945062002366565b949350505050565b600062002439826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b0316620024bb9092919063ffffffff16565b8051909150156200228b57808060200190518101906200245a919062002ced565b6200228b5760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b60648201526084016200047d565b6060620024cc8484600085620024d6565b90505b9392505050565b606082471015620025395760405162461bcd60e51b815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f6044820152651c8818d85b1b60d21b60648201526084016200047d565b6001600160a01b0385163b620025925760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e747261637400000060448201526064016200047d565b600080866001600160a01b03168587604051620025b0919062002e42565b60006040518083038185875af1925050503d8060008114620025ef576040519150601f19603f3d011682016040523d82523d6000602084013e620025f4565b606091505b50915091506200260682828662002611565b979650505050505050565b6060831562002622575081620024cf565b825115620026335782518084602001fd5b8160405162461bcd60e51b81526004016200047d919062002de4565b611cb68062002e6183390190565b6000602082840312156200267057600080fd5b5035919050565b634e487b7160e01b600052604160045260246000fd5b60008060008060808587031215620026a457600080fd5b84359350602085013592506040850135915060608501356001600160401b0380821115620026d157600080fd5b818701915087601f830112620026e657600080fd5b813581811115620026fb57620026fb62002677565b604051601f8201601f19908116603f0116810190838211818310171562002726576200272662002677565b816040528281528a60208487010111156200274057600080fd5b82602086016020830137600060208483010152809550505050505092959194509250565b600080604083850312156200277857600080fd5b8235915060208301356001600160401b03811681146200279757600080fd5b809150509250929050565b60005b83811015620027bf578181015183820152602001620027a5565b50506000910152565b60008151808452620027e2816020860160208601620027a2565b601f01601f19169290920160200192915050565b6001600160a01b038b81168252602082018b9052604082018a905260608201899052878116608083015286811660a0830152851660c082015261014060e082018190526000906200284a83820187620027c8565b94151561010084015250506001600160401b03919091166101209091015298975050505050505050565b600080604083850312156200288857600080fd5b50508035926020909101359150565b60208152620028b26020820183516001600160a01b03169052565b60208201516040820152604082015160608201526060820151608082015260006080830151620028ed60a08401826001600160a01b03169052565b5060a08301516001600160a01b03811660c08401525060c08301516001600160a01b03811660e08401525060e0830151610140610100818186015262002938610160860184620027c8565b90860151909250610120620029508682018315159052565b909501516001600160401b031693019290925250919050565b80151581146200039757600080fd5b600080604083850312156200298c57600080fd5b823591506020830135620027978162002969565b600060208284031215620029b357600080fd5b5051919050565b84815283602082015260018060a01b0383166040820152608060608201526000620029e96080830184620027c8565b9695505050505050565b6000825162002a07818460208701620027a2565b660810dc99591a5d60ca1b920191825250600701919050565b60608152600062002a356060830185620027c8565b82810360208401526002815261434360f01b60208201526040810191505060ff831660408301529392505050565b6000825162002a77818460208701620027a2565b720810dbdb9d995c9d1a589b194810dc99591a5d606a1b920191825250601301919050565b60608152600062002ab16060830185620027c8565b8281036020840152600381526243434360e81b60208201526040810191505060ff831660408301529392505050565b6000825162002af4818460208701620027a2565b6f102b30b634b230ba37b9102a37b5b2b760811b920191825250601001919050565b60608152600062002b2b6060830185620027c8565b82810360208401526002815261159560f21b60208201526040810191505060ff831660408301529392505050565b600181811c9082168062002b6e57607f821691505b60208210810362002b8f57634e487b7160e01b600052602260045260246000fd5b50919050565b601f8211156200228b57600081815260208120601f850160051c8101602086101562002bbe5750805b601f850160051c820191505b8181101562002bdf5782815560010162002bca565b505050505050565b81516001600160401b0381111562002c035762002c0362002677565b62002c1b8162002c14845462002b59565b8462002b95565b602080601f83116001811462002c53576000841562002c3a5750858301515b600019600386901b1c1916600185901b17855562002bdf565b600085815260208120601f198616915b8281101562002c845788860151825594840194600190910190840162002c63565b508582101562002ca35787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b60808152600062002cc86080830187620027c8565b60208301959095525060408101929092526001600160a01b0316606090910152919050565b60006020828403121562002d0057600080fd5b8151620024cf8162002969565b634e487b7160e01b600052601160045260246000fd5b600081600019048311821515161562002d405762002d4062002d0d565b500290565b634e487b7160e01b600052601260045260246000fd5b60008262002d6d5762002d6d62002d45565b500490565b808201808211156200175c576200175c62002d0d565b818103818111156200175c576200175c62002d0d565b64027b7363c960dd1b81526000825162002dc0816005850160208701620027a2565b6c20746f6b656e73206c6566742160981b6005939091019283015250601201919050565b602081526000620024cf6020830184620027c8565b60006001820162002e0e5762002e0e62002d0d565b5060010190565b60008262002e275762002e2762002d45565b500690565b634e487b7160e01b600052603260045260246000fd5b6000825162002e56818460208701620027a2565b919091019291505056fe60806040523480156200001157600080fd5b5060405162001cb638038062001cb6833981016040819052620000349162000563565b8282600362000044838262000676565b50600462000053828262000676565b50506006805460ff191660ff8416179055506200007360008033620000a5565b6200009060015b60408051600080825260208201909252620001f5565b6200009c60026200007a565b50505062000796565b826000808281526005602052604090206001015460ff166002811115620000d057620000d062000742565b14620001235760405162461bcd60e51b815260206004820152601e60248201527f43616e6e6f74207573652061207072652d6578697374696e6720726f6c65000060448201526064015b60405180910390fd5b60008481526005602052604090206001808201805460ff1916828002179055508381556200016160028201846200033b602090811b62000a6617901c565b60008481526005602052604081206001015460ff1660028111156200018a576200018a62000742565b03620001ee5760405162461bcd60e51b815260206004820152603c602482015260008051602062001c9683398151915260448201527f20746f206d616e61676520616e206578636c757369766520726f6c650000000060648201526084016200011a565b5050505050565b826000808281526005602052604090206001015460ff16600281111562000220576200022062000742565b146200026f5760405162461bcd60e51b815260206004820152601e60248201527f43616e6e6f74207573652061207072652d6578697374696e6720726f6c65000060448201526064016200011a565b600084815260056020908152604090912060018101805460ff1916600217905584815590620002ae906003830190859062000a706200034b821b17901c565b60008481526005602052604081206001015460ff166002811115620002d757620002d762000742565b03620001ee5760405162461bcd60e51b8152602060048201526038602482015260008051602062001c9683398151915260448201527f20746f206d616e61676520612073686172656420726f6c65000000000000000060648201526084016200011a565b620003478282620003a0565b5050565b60005b81518110156200039b57620003868383838151811062000372576200037262000758565b60200260200101516200042160201b60201c565b8062000392816200076e565b9150506200034e565b505050565b6001600160a01b038116620004045760405162461bcd60e51b815260206004820152602360248201527f43616e6e6f742073657420616e206578636c757369766520726f6c6520746f2060448201526203078360ec1b60648201526084016200011a565b81546001600160a01b0319166001600160a01b0391909116179055565b6001600160a01b038116620004795760405162461bcd60e51b815260206004820152601f60248201527f43616e6e6f74206164642030783020746f20612073686172656420726f6c650060448201526064016200011a565b6001600160a01b0316600090815260209190915260409020805460ff19166001179055565b634e487b7160e01b600052604160045260246000fd5b600082601f830112620004c657600080fd5b81516001600160401b0380821115620004e357620004e36200049e565b604051601f8301601f19908116603f011681019082821181831017156200050e576200050e6200049e565b816040528381526020925086838588010111156200052b57600080fd5b600091505b838210156200054f578582018301518183018401529082019062000530565b600093810190920192909252949350505050565b6000806000606084860312156200057957600080fd5b83516001600160401b03808211156200059157600080fd5b6200059f87838801620004b4565b94506020860151915080821115620005b657600080fd5b50620005c586828701620004b4565b925050604084015160ff81168114620005dd57600080fd5b809150509250925092565b600181811c90821680620005fd57607f821691505b6020821081036200061e57634e487b7160e01b600052602260045260246000fd5b50919050565b601f8211156200039b57600081815260208120601f850160051c810160208610156200064d5750805b601f850160051c820191505b818110156200066e5782815560010162000659565b505050505050565b81516001600160401b038111156200069257620006926200049e565b620006aa81620006a38454620005e8565b8462000624565b602080601f831160018114620006e25760008415620006c95750858301515b600019600386901b1c1916600185901b1785556200066e565b600085815260208120601f198616915b828110156200071357888601518255948401946001909101908401620006f2565b5085821015620007325787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b634e487b7160e01b600052602160045260246000fd5b634e487b7160e01b600052603260045260246000fd5b6000600182016200078f57634e487b7160e01b600052601160045260246000fd5b5060010190565b6114f080620007a66000396000f3fe608060405234801561001057600080fd5b506004361061014d5760003560e01c806374d0a676116100c3578063a9059cbb1161007c578063a9059cbb146102be578063aaa14ca3146102d1578063ab3545e5146102e4578063d97c05be1461030f578063dd62ed3e14610322578063f44637ba1461035b57600080fd5b806374d0a6761461025757806379cc67901461026a5780637cdc1cb91461027d57806395d89b4114610290578063983b2d5614610298578063a457c2d7146102ab57600080fd5b8063395093511161011557806339509351146101cd57806340c10f19146101e057806342966c68146101f35780636be7658b1461020857806370a082311461021b57806373cc802a1461024457600080fd5b806306fdde0314610152578063095ea7b31461017057806318160ddd1461019357806323b872dd146101a5578063313ce567146101b8575b600080fd5b61015a61036e565b6040516101679190611183565b60405180910390f35b61018361017e3660046111ed565b610400565b6040519015158152602001610167565b6002545b604051908152602001610167565b6101836101b3366004611217565b61041a565b60065460405160ff9091168152602001610167565b6101836101db3660046111ed565b61043e565b6101836101ee3660046111ed565b61047d565b610206610201366004611253565b6104ba565b005b61020661021636600461126c565b6104f0565b610197610229366004611298565b6001600160a01b031660009081526020819052604090205490565b610206610252366004611298565b6105c6565b61020661026536600461126c565b6105d4565b6101836102783660046111ed565b6106aa565b61018361028b36600461126c565b6106de565b61015a6107a3565b6102066102a6366004611298565b6107b2565b6101836102b93660046111ed565b6107be565b6101836102cc3660046111ed565b610850565b6102066102df366004611253565b61085e565b6102f76102f2366004611253565b61091a565b6040516001600160a01b039091168152602001610167565b61020661031d36600461126c565b610986565b6101976103303660046112ba565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b610206610369366004611298565b610a5c565b60606003805461037d906112e4565b80601f01602080910402602001604051908101604052809291908181526020018280546103a9906112e4565b80156103f65780601f106103cb576101008083540402835291602001916103f6565b820191906000526020600020905b8154815290600101906020018083116103d957829003601f168201915b5050505050905090565b60003361040e818585610ab6565b60019150505b92915050565b600033610428858285610bda565b610433858585610c6c565b506001949350505050565b3360008181526001602090815260408083206001600160a01b038716845290915281205490919061040e908290869061047890879061132e565b610ab6565b6000600161048b81336106de565b6104b05760405162461bcd60e51b81526004016104a790611357565b60405180910390fd5b61040e8484610e3a565b60026104c681336106de565b6104e25760405162461bcd60e51b81526004016104a790611357565b6104ec3383610f19565b5050565b81600260008281526005602052604090206001015460ff16600281111561051957610519611341565b146105365760405162461bcd60e51b81526004016104a790611399565b600083815260056020526040902054839061055190336106de565b61056d5760405162461bcd60e51b81526004016104a7906113e5565b60008481526005602052604090206105889060030184611067565b60405133906001600160a01b0385169086907feb3e33034c392e69263b04ec0fa376dc12784a41b6676c7f31b936cbc0fbb5af90600090a450505050565b6105d1600082610986565b50565b81600260008281526005602052604090206001015460ff1660028111156105fd576105fd611341565b1461061a5760405162461bcd60e51b81526004016104a790611399565b600083815260056020526040902054839061063590336106de565b6106515760405162461bcd60e51b81526004016104a7906113e5565b600084815260056020526040902061066c9060030184611089565b60405133906001600160a01b0385169086907f63502af7324ff6db91ab38f8236a648727d9385ea6c782073dd4882d8a61a48f90600090a450505050565b600060026106b881336106de565b6106d45760405162461bcd60e51b81526004016104a790611357565b61040e8484610f19565b600082815260056020526040812060018082015460ff16600281111561070657610706611341565b036107275760028101546001600160a01b038481169116145b915050610414565b6002600182015460ff16600281111561074257610742611341565b0361076a576001600160a01b038316600090815260038201602052604090205460ff1661071f565b60405162461bcd60e51b815260206004820152600e60248201526d125b9d985b1a59081c9bdb19525960921b60448201526064016104a7565b60606004805461037d906112e4565b6105d160015b826105d4565b3360008181526001602090815260408083206001600160a01b0387168452909152812054909190838110156108435760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b60648201526084016104a7565b6104338286868403610ab6565b60003361040e818585610c6c565b80600260008281526005602052604090206001015460ff16600281111561088757610887611341565b146108a45760405162461bcd60e51b81526004016104a790611399565b816108af81336106de565b6108cb5760405162461bcd60e51b81526004016104a790611357565b60008381526005602052604090206108e69060030133611067565b6040513390819085907feb3e33034c392e69263b04ec0fa376dc12784a41b6676c7f31b936cbc0fbb5af90600090a4505050565b600081600160008281526005602052604090206001015460ff16600281111561094557610945611341565b146109625760405162461bcd60e51b81526004016104a790611429565b6000838152600560205260409020600201546001600160a01b031691505b50919050565b81600160008281526005602052604090206001015460ff1660028111156109af576109af611341565b146109cc5760405162461bcd60e51b81526004016104a790611429565b60008381526005602052604090205483906109e790336106de565b610a035760405162461bcd60e51b81526004016104a7906113e5565b6000848152600560205260409020610a1e9060020184611104565b60405133906001600160a01b0385169086907f3b855c56b409b671c7112789d022675eb639d0bcb8896f1b6197c132f799e74690600090a450505050565b6105d160026107b8565b6104ec8282611104565b60005b8151811015610ab157610a9f83838381518110610a9257610a92611478565b6020026020010151611089565b80610aa98161148e565b915050610a73565b505050565b6001600160a01b038316610b185760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b60648201526084016104a7565b6001600160a01b038216610b795760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b60648201526084016104a7565b6001600160a01b0383811660008181526001602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b6001600160a01b038381166000908152600160209081526040808320938616835292905220546000198114610c665781811015610c595760405162461bcd60e51b815260206004820152601d60248201527f45524332303a20696e73756666696369656e7420616c6c6f77616e636500000060448201526064016104a7565b610c668484848403610ab6565b50505050565b6001600160a01b038316610cd05760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b60648201526084016104a7565b6001600160a01b038216610d325760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b60648201526084016104a7565b6001600160a01b03831660009081526020819052604090205481811015610daa5760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b60648201526084016104a7565b6001600160a01b03808516600090815260208190526040808220858503905591851681529081208054849290610de190849061132e565b92505081905550826001600160a01b0316846001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef84604051610e2d91815260200190565b60405180910390a3610c66565b6001600160a01b038216610e905760405162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f20616464726573730060448201526064016104a7565b8060026000828254610ea2919061132e565b90915550506001600160a01b03821660009081526020819052604081208054839290610ecf90849061132e565b90915550506040518181526001600160a01b038316906000907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9060200160405180910390a35050565b6001600160a01b038216610f795760405162461bcd60e51b815260206004820152602160248201527f45524332303a206275726e2066726f6d20746865207a65726f206164647265736044820152607360f81b60648201526084016104a7565b6001600160a01b03821660009081526020819052604090205481811015610fed5760405162461bcd60e51b815260206004820152602260248201527f45524332303a206275726e20616d6f756e7420657863656564732062616c616e604482015261636560f01b60648201526084016104a7565b6001600160a01b038316600090815260208190526040812083830390556002805484929061101c9084906114a7565b90915550506040518281526000906001600160a01b038516907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9060200160405180910390a3505050565b6001600160a01b0316600090815260209190915260409020805460ff19169055565b6001600160a01b0381166110df5760405162461bcd60e51b815260206004820152601f60248201527f43616e6e6f74206164642030783020746f20612073686172656420726f6c650060448201526064016104a7565b6001600160a01b0316600090815260209190915260409020805460ff19166001179055565b6001600160a01b0381166111665760405162461bcd60e51b815260206004820152602360248201527f43616e6e6f742073657420616e206578636c757369766520726f6c6520746f2060448201526203078360ec1b60648201526084016104a7565b81546001600160a01b0319166001600160a01b0391909116179055565b600060208083528351808285015260005b818110156111b057858101830151858201604001528201611194565b506000604082860101526040601f19601f8301168501019250505092915050565b80356001600160a01b03811681146111e857600080fd5b919050565b6000806040838503121561120057600080fd5b611209836111d1565b946020939093013593505050565b60008060006060848603121561122c57600080fd5b611235846111d1565b9250611243602085016111d1565b9150604084013590509250925092565b60006020828403121561126557600080fd5b5035919050565b6000806040838503121561127f57600080fd5b8235915061128f602084016111d1565b90509250929050565b6000602082840312156112aa57600080fd5b6112b3826111d1565b9392505050565b600080604083850312156112cd57600080fd5b6112d6836111d1565b915061128f602084016111d1565b600181811c908216806112f857607f821691505b60208210810361098057634e487b7160e01b600052602260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b8082018082111561041457610414611318565b634e487b7160e01b600052602160045260246000fd5b60208082526022908201527f53656e64657220646f6573206e6f7420686f6c6420726571756972656420726f6040820152616c6560f01b606082015260800190565b6020808252602c908201527f4d7573742062652063616c6c6564206f6e20616e20696e697469616c697a656460408201526b2053686172656420726f6c6560a01b606082015260800190565b60208082526024908201527f43616e206f6e6c792062652063616c6c6564206279206120726f6c65206d616e60408201526330b3b2b960e11b606082015260800190565b6020808252602f908201527f4d7573742062652063616c6c6564206f6e20616e20696e697469616c697a656460408201526e204578636c757369766520726f6c6560881b606082015260800190565b634e487b7160e01b600052603260045260246000fd5b6000600182016114a0576114a0611318565b5060010190565b818103818111156104145761041461131856fea26469706673582212208961104dd3923b79c08fd49fd308093d4ed7792f1229905fa0e9f300d355f10d64736f6c63430008100033417474656d7074656420746f2075736520616e20696e76616c696420726f6c65a264697066735822122040e078e34b28f2b109ad72ab977e755d32e3824d9e361095452ac15ef06c494664736f6c634300081000330000000000000000000000007109709ecfa91a80626ff3989d68f67f5b1dd12da264697066735822122056d0e869b5bae481e5a19bc39e825323b470b3da802e3aec19f8474901e0f33264736f6c63430008100033",
    "sourceMap": "1572:26:1:-:0;;;1594:4;-1:-1:-1;;1572:26:1;;;;;;;;3126:44:5;;;;;;;;;;;368:50:61;137:5987:64;368:50:61;;137:5987:64;368:50:61;;;;;;;;;;;;:::i;:::-;;441:7;424:24;;500:5;480:25;;137:5987:64;;;;;;;;;;;;14:127:72;75:10;70:3;66:20;63:1;56:31;106:4;103:1;96:15;130:4;127:1;120:15;146:380;225:1;221:12;;;;268;;;289:61;;343:4;335:6;331:17;321:27;;289:61;396:2;388:6;385:14;365:18;362:38;359:161;;442:10;437:3;433:20;430:1;423:31;477:4;474:1;467:15;505:4;502:1;495:15;359:161;;146:380;;;:::o;657:545::-;759:2;754:3;751:11;748:448;;;795:1;820:5;816:2;809:17;865:4;861:2;851:19;935:2;923:10;919:19;916:1;912:27;906:4;902:38;971:4;959:10;956:20;953:47;;;-1:-1:-1;994:4:72;953:47;1049:2;1044:3;1040:12;1037:1;1033:20;1027:4;1023:31;1013:41;;1104:82;1122:2;1115:5;1112:13;1104:82;;;1167:17;;;1148:1;1137:13;1104:82;;;1108:3;;;748:448;657:545;;;:::o;1378:1352::-;1498:10;;-1:-1:-1;;;;;1520:30:72;;1517:56;;;1553:18;;:::i;:::-;1582:97;1672:6;1632:38;1664:4;1658:11;1632:38;:::i;:::-;1626:4;1582:97;:::i;:::-;1734:4;;1798:2;1787:14;;1815:1;1810:663;;;;2517:1;2534:6;2531:89;;;-1:-1:-1;2586:19:72;;;2580:26;2531:89;-1:-1:-1;;1335:1:72;1331:11;;;1327:24;1323:29;1313:40;1359:1;1355:11;;;1310:57;2633:81;;1780:944;;1810:663;604:1;597:14;;;641:4;628:18;;-1:-1:-1;;1846:20:72;;;1964:236;1978:7;1975:1;1972:14;1964:236;;;2067:19;;;2061:26;2046:42;;2159:27;;;;2127:1;2115:14;;;;1994:19;;1964:236;;;1968:3;2228:6;2219:7;2216:19;2213:201;;;2289:19;;;2283:26;-1:-1:-1;;2372:1:72;2368:14;;;2384:3;2364:24;2360:37;2356:42;2341:58;2326:74;;2213:201;-1:-1:-1;;;;;2460:1:72;2444:14;;;2440:22;2427:36;;-1:-1:-1;1378:1352:72:o;:::-;137:5987:64;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x60806040523480156200001157600080fd5b5060043610620001455760003560e01c8063916a17c611620000bb578063ba414fa6116200007a578063ba414fa61462000257578063dbd07b771462000272578063e20c9f71146200027c578063f40966711462000286578063fa7626d414620002ac57600080fd5b8063916a17c614620001f55780639472963b14620001ff578063a7969d071462000209578063ab30d35a1462000236578063b5508aa9146200024d57600080fd5b80633f7286f411620001085780633f7286f414620001a5578063635e611514620001af57806366d9a9a014620001b95780636906f5f514620001d257806385226c8114620001dc57600080fd5b80630a9254e4146200014a5780631ed7831c1462000156578063217356c614620001785780632ade388014620001825780633e5e3c23146200019b575b600080fd5b62000154620002ba565b005b62000160620002ed565b6040516200016f9190620035b3565b60405180910390f35b6200015462000351565b6200018c620008e4565b6040516200016f919062003656565b6200016062000a32565b6200016062000a94565b6200015462000af6565b620001c362001198565b6040516200016f91906200371c565b6200015462001282565b620001e6620015e3565b6040516200016f9190620037d3565b620001c3620016bd565b62000154620017a7565b602a546200021d906001600160a01b031681565b6040516001600160a01b0390911681526020016200016f565b620001546200024736600462003842565b620018c7565b620001e662001a21565b6200026162001afb565b60405190151581526020016200016f565b6200015462001c2e565b62000160620021b2565b6200029d6200029736600462003936565b62002214565b6040519081526020016200016f565b600754620002619060ff1681565b620002c4620017a7565b620002ce62002531565b602f819055620002de9062002626565b620002eb602f546200271e565b565b606060148054806020026020016040519081016040528092919081815260200182805480156200034757602002820191906000526020600020905b81546001600160a01b0316815260019091019060200180831162000328575b5050505050905090565b602a54602f5460405163c3c95c7b60e01b815260048101919091526000916001600160a01b03169063c3c95c7b90602401600060405180830381865afa158015620003a0573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052620003ca919081019062003a68565b90506000620003db602f54620027ca565b6020546040516370a0823160e01b8152600260048201529192506000916001600160a01b03909116906370a0823190602401602060405180830381865afa1580156200042b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062000451919062003b75565b602154602854604080516329cb924d60e01b815290519394506001600160a01b03909216926322f8e566926001600160401b039092169184916329cb924d916004808201926020929091908290030181865afa158015620004b6573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620004dc919062003b75565b620004e8919062003ba5565b6040518263ffffffff1660e01b81526004016200050791815260200190565b600060405180830381600087803b1580156200052257600080fd5b505af115801562000537573d6000803e3d6000fd5b5050602a546040805160248101879052600160448083019190915282518083039091018152606490910182526020810180516001600160e01b03166378d8ab5960e11b1790529051632f5abd0d60e21b815260008051602062015e30833981519152945063bd6af4349350620005bb926001600160a01b0316919060040162003bbb565b600060405180830381600087803b158015620005d657600080fd5b505af1158015620005eb573d6000803e3d6000fd5b5050601f54604051638ea2f2ab60e01b8152600481018690526200066d93506001600160a01b039091169150638ea2f2ab906024015b6020604051808303816000875af115801562000641573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062000667919062003be9565b620028bd565b6020546040516370a0823160e01b81526002600482015262000702916001600160a01b0316906370a0823190602401602060405180830381865afa158015620006ba573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620006e0919062003b75565b602d54620006f090600262003c07565b620006fc908462003ba5565b62002935565b602a54602f5460405163c3c95c7b60e01b8152600481019190915262000794916001600160a01b03169063c3c95c7b90602401600060405180830381865afa15801562000753573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526200077d919081019062003a68565b61012001516001600160401b0316600214620028bd565b60405163ca669fa760e01b81526003600482015260008051602062015e308339815191529063ca669fa790602401600060405180830381600087803b158015620007dd57600080fd5b505af1158015620007f2573d6000803e3d6000fd5b5050602a54602f54604051632d3414c360e11b81526004810191909152600060248201526001600160a01b039091169250635a6829869150604401600060405180830381600087803b1580156200084857600080fd5b505af11580156200085d573d6000803e3d6000fd5b5050505060808301516040516370a0823160e01b815260036004820152620008df916001600160a01b0316906370a08231906024015b602060405180830381865afa158015620008b1573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620008d7919062003b75565b600062002935565b505050565b6060601b805480602002602001604051908101604052809291908181526020016000905b8282101562000a2957600084815260208082206040805180820182526002870290920180546001600160a01b03168352600181018054835181870281018701909452808452939591948681019491929084015b8282101562000a115783829060005260206000200180546200097d9062003c29565b80601f0160208091040260200160405190810160405280929190818152602001828054620009ab9062003c29565b8015620009fc5780601f10620009d057610100808354040283529160200191620009fc565b820191906000526020600020905b815481529060010190602001808311620009de57829003601f168201915b5050505050815260200190600101906200095b565b50505050815250508152602001906001019062000908565b50505050905090565b6060601680548060200260200160405190810160405280929190818152602001828054801562000347576020028201919060005260206000209081546001600160a01b0316815260019091019060200180831162000328575050505050905090565b6060601580548060200260200160405190810160405280929190818152602001828054801562000347576020028201919060005260206000209081546001600160a01b0316815260019091019060200180831162000328575050505050905090565b602a54602f5460405163c3c95c7b60e01b815260048101919091526000916001600160a01b03169063c3c95c7b90602401600060405180830381865afa15801562000b45573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405262000b6f919081019062003a68565b9050600062000b80602f54620027ca565b6020546040516370a0823160e01b8152600260048201529192506000916001600160a01b03909116906370a0823190602401602060405180830381865afa15801562000bd0573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062000bf6919062003b75565b6020546040516370a0823160e01b81526004808201529192506000916001600160a01b03909116906370a0823190602401602060405180830381865afa15801562000c45573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062000c6b919062003b75565b9050600062000c7d84602d5462002a64565b60235490915062000c9a906001600160a01b031682600062002e3f565b602a546040805160248101879052600060448083019190915282518083039091018152606490910182526020810180516001600160e01b03166378d8ab5960e11b1790529051632f5abd0d60e21b815260008051602062015e308339815191529263bd6af4349262000d1b926001600160a01b039092169160040162003bbb565b600060405180830381600087803b15801562000d3657600080fd5b505af115801562000d4b573d6000803e3d6000fd5b5050601f54604051638ea2f2ab60e01b81526004810188905262000dcc93506001600160a01b039091169150638ea2f2ab906024016020604051808303816000875af115801562000da0573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062000dc6919062003be9565b62002ede565b6020546040516370a0823160e01b81526002600482015262000e46916001600160a01b0316906370a0823190602401602060405180830381865afa15801562000e19573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062000e3f919062003b75565b8462002935565b60405163ca669fa760e01b81526003600482015260008051602062015e308339815191529063ca669fa790602401600060405180830381600087803b15801562000e8f57600080fd5b505af115801562000ea4573d6000803e3d6000fd5b5050602a54602f54604051632d3414c360e11b81526004810191909152600060248201526001600160a01b039091169250635a6829869150604401600060405180830381600087803b15801562000efa57600080fd5b505af115801562000f0f573d6000803e3d6000fd5b5050505060808501516040516370a0823160e01b81526003600482015262000f99916001600160a01b0316906370a0823190602401602060405180830381865afa15801562000f62573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062000f88919062003b75565b6002602e54620006fc919062003c65565b60405163ca669fa760e01b815260048082015260008051602062015e308339815191529063ca669fa790602401600060405180830381600087803b15801562000fe157600080fd5b505af115801562000ff6573d6000803e3d6000fd5b5050602a54602f54604051632d3414c360e11b8152600481019190915261271060248201526001600160a01b039091169250635a6829869150604401600060405180830381600087803b1580156200104d57600080fd5b505af115801562001062573d6000803e3d6000fd5b50505050620010a06040518060400160405280601681526020017576616c696461746f7242616c616e63654265666f726560501b8152508362002eea565b6020546040516370a0823160e01b815260048082015262001118916001600160a01b0316906370a0823190602401602060405180830381865afa158015620010ec573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062001112919062003b75565b62002f33565b6020546040516370a0823160e01b815260048082015262001191916001600160a01b0316906370a0823190602401602060405180830381865afa15801562001164573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200118a919062003b75565b8362002935565b5050505050565b60606019805480602002602001604051908101604052809291908181526020016000905b8282101562000a295760008481526020908190206040805180820182526002860290920180546001600160a01b031683526001810180548351818702810187019094528084529394919385830193928301828280156200126957602002820191906000526020600020906000905b82829054906101000a900460e01b6001600160e01b031916815260200190600401906020826003010492830192600103820291508084116200122a5790505b50505050508152505081526020019060010190620011bc565b6000604051620012929062003589565b604051809103906000f080158015620012af573d6000803e3d6000fd5b506001600160a01b0316630a9254e46040518163ffffffff1660e01b8152600401610100604051808303816000875af1158015620012f1573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062001317919062003c88565b60e0810151601f80546001600160a01b03199081166001600160a01b0393841690811790925560c084015160208054831691851691909117815560a08501516023805484169186169190911790558451602180548416918616919091179055840151602280548316918516919091179055604080850151602480549093169416939093179055905191925090620013ae9062003597565b6001600160a01b039091168152602001604051809103906000f080158015620013db573d6000803e3d6000fd5b50602580546001600160a01b0319166001600160a01b03928316179055601f5460408051630473e1f360e11b8152905191909216916308e7c3e69160048083019260209291908290030181865afa1580156200143b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062001461919062003b75565b602655601f54602054604051634360af3d60e01b81526001600160a01b039182166004820152911690634360af3d90602401602060405180830381865afa158015620014b1573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620014d7919062003b75565b602755601f546040805163fe4e198360e01b815290516001600160a01b039092169163fe4e1983916004808201926020929091908290030181865afa15801562001525573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200154b919062003d65565b6028805467ffffffffffffffff19166001600160401b0392909216919091179055601f546040805163d509b01760e01b815290516001600160a01b039092169163d509b017916004808201926020929091908290030181865afa158015620015b7573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620015dd919062003b75565b60295550565b60606018805480602002602001604051908101604052809291908181526020016000905b8282101562000a29578382906000526020600020018054620016299062003c29565b80601f0160208091040260200160405190810160405280929190818152602001828054620016579062003c29565b8015620016a85780601f106200167c57610100808354040283529160200191620016a8565b820191906000526020600020905b8154815290600101906020018083116200168a57829003601f168201915b50505050508152602001906001019062001607565b6060601a805480602002602001604051908101604052809291908181526020016000905b8282101562000a295760008481526020908190206040805180820182526002860290920180546001600160a01b031683526001810180548351818702810187019094528084529394919385830193928301828280156200178e57602002820191906000526020600020906000905b82829054906101000a900460e01b6001600160e01b031916815260200190600401906020826003010492830192600103820291508084116200174f5790505b50505050508152505081526020019060010190620016e1565b620017b162001282565b602054601f546040516001600160a01b039283169290911690620017d590620035a5565b6001600160a01b03928316815291166020820152604001604051809103906000f08015801562001809573d6000803e3d6000fd5b50602a80546001600160a01b0319166001600160a01b03928316179055601f54602054604051634360af3d60e01b815290831660048201526000929190911690634360af3d90602401602060405180830381865afa15801562001870573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062001896919062003b75565b905066038d7ea4c680008110620018ae5780620018b7565b66038d7ea4c680005b602d55620018c462002f7b565b50565b6040805161022081018252600061018082018181526101a083018290526101c08301829052610200830182905282526020808301829052828401829052606083018290526080830182905260a0830182905260c0830182905260e083018290526101008301829052610120830182905261014083018290526101608301919091526001600160a01b0385166101e083015282516024808201869052845180830390910181526044909101845280820180516001600160e01b031663220c0a2160e21b1790529251919260008051602062015e308339815191529263b96213e49260fa9291620019b99187910162003d83565b6040516020818303038152906040526040518463ffffffff1660e01b8152600401620019e89392919062003e86565b600060405180830381600087803b15801562001a0357600080fd5b505af115801562001a18573d6000803e3d6000fd5b50505050505050565b60606017805480602002602001604051908101604052809291908181526020016000905b8282101562000a2957838290600052602060002001805462001a679062003c29565b80601f016020809104026020016040519081016040528092919081815260200182805462001a959062003c29565b801562001ae65780601f1062001aba5761010080835404028352916020019162001ae6565b820191906000526020600020905b81548152906001019060200180831162001ac857829003601f168201915b50505050508152602001906001019062001a45565b600754600090610100900460ff161562001b1e5750600754610100900460ff1690565b600060008051602062015e308339815191523b1562001c295760405160009060008051602062015e30833981519152907f667f9d70ca411d70ead50d8d5c22070dafc36ad75f3dcf5e7237b22ade9aecc49062001b8b9083906519985a5b195960d21b9060200162003eca565b60408051601f198184030181529082905262001bab929160200162003ee3565b60408051601f198184030181529082905262001bc79162003f16565b6000604051808303816000865af19150503d806000811462001c06576040519150601f19603f3d011682016040523d82523d6000602084013e62001c0b565b606091505b509150508080602001905181019062001c25919062003be9565b9150505b919050565b602a54602f5460405163c3c95c7b60e01b815260048101919091526000916001600160a01b03169063c3c95c7b90602401600060405180830381865afa15801562001c7d573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405262001ca7919081019062003a68565b9050600062001cb8602f54620027ca565b6020546040516370a0823160e01b8152600260048201529192506000916001600160a01b03909116906370a0823190602401602060405180830381865afa15801562001d08573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062001d2e919062003b75565b6020546040516370a0823160e01b81526004808201529192506000916001600160a01b03909116906370a0823190602401602060405180830381865afa15801562001d7d573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062001da3919062003b75565b9050600062001db584602d5462002a64565b60235490915062001dd2906001600160a01b031682600162002e3f565b602a546040805160248101879052600160448083019190915282518083039091018152606490910182526020810180516001600160e01b03166378d8ab5960e11b1790529051632f5abd0d60e21b815260008051602062015e308339815191529263bd6af4349262001e53926001600160a01b039092169160040162003bbb565b600060405180830381600087803b15801562001e6e57600080fd5b505af115801562001e83573d6000803e3d6000fd5b5050601f54604051638ea2f2ab60e01b81526004810188905262001ebe93506001600160a01b039091169150638ea2f2ab9060240162000621565b6020546040516370a0823160e01b81526002600482015262001f5c916001600160a01b0316906370a0823190602401602060405180830381865afa15801562001f0b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062001f31919062003b75565b6002602d54600562001f44919062003c07565b62001f50919062003c65565b620006fc908662003ba5565b60405163ca669fa760e01b81526003600482015260008051602062015e308339815191529063ca669fa790602401600060405180830381600087803b15801562001fa557600080fd5b505af115801562001fba573d6000803e3d6000fd5b5050602a54602f54604051632d3414c360e11b81526004810191909152600060248201526001600160a01b039091169250635a6829869150604401600060405180830381600087803b1580156200201057600080fd5b505af115801562002025573d6000803e3d6000fd5b5050505060808501516040516370a0823160e01b81526003600482015262002060916001600160a01b0316906370a082319060240162000893565b60405163ca669fa760e01b815260048082015260008051602062015e308339815191529063ca669fa790602401600060405180830381600087803b158015620020a857600080fd5b505af1158015620020bd573d6000803e3d6000fd5b5050602a54602f54604051632d3414c360e11b8152600481019190915261271060248201526001600160a01b039091169250635a6829869150604401600060405180830381600087803b1580156200211457600080fd5b505af115801562002129573d6000803e3d6000fd5b50506020546040516370a0823160e01b81526004808201526200119193506001600160a01b0390911691506370a0823190602401602060405180830381865afa1580156200217b573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620021a1919062003b75565b6040870151620006fc908562003ba5565b6060601380548060200260200160405190810160405280929190818152602001828054801562000347576020028201919060005260206000209081546001600160a01b0316815260019091019060200180831162000328575050505050905090565b6040516303223eab60e11b81526001600160a01b038316600482015260009060008051602062015e30833981519152906306447d5690602401600060405180830381600087803b1580156200226857600080fd5b505af11580156200227d573d6000803e3d6000fd5b5050602054601f54604051634360af3d60e01b81526001600160a01b039283166004820181905294506308bca5669350879290911690634360af3d90602401602060405180830381865afa158015620022da573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062002300919062003b75565b6040518363ffffffff1660e01b81526004016200231f92919062003eca565b600060405180830381600087803b1580156200233a57600080fd5b505af11580156200234f573d6000803e3d6000fd5b5050602054601f54604051634360af3d60e01b81526001600160a01b0392831660048201819052945063095ea7b393509116908190634360af3d90602401602060405180830381865afa158015620023ab573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620023d1919062003b75565b6040518363ffffffff1660e01b8152600401620023f092919062003eca565b6020604051808303816000875af115801562002410573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062002436919062003be9565b50601f54604051630dac4ebd60e21b81526001600160a01b03909116906336b13af4906200246b908590879060040162003f34565b6020604051808303816000875af11580156200248b573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620024b1919062003b75565b90507f885cb69240a935d632d79c317109709ecfa91a80626ff3989d68f67f5b1dd12d60001c6001600160a01b03166390c5013b6040518163ffffffff1660e01b8152600401600060405180830381600087803b1580156200251257600080fd5b505af115801562002527573d6000803e3d6000fd5b5050505092915050565b60006200253d62002f7b565b60405163ca669fa760e01b81526001600482015260008051602062015e308339815191529063ca669fa790602401600060405180830381600087803b1580156200258657600080fd5b505af11580156200259b573d6000803e3d6000fd5b5050602a54602c54602d54602e54604051632a98b03d60e01b81526001600160a01b039094169550632a98b03d9450620025db93602b9060040162003f60565b6020604051808303816000875af1158015620025fb573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062002621919062003b75565b905090565b620026326003620030ed565b6200263f81600062003283565b60405163ca669fa760e01b81526003600482015260008051602062015e308339815191529063ca669fa790602401600060405180830381600087803b1580156200268857600080fd5b505af11580156200269d573d6000803e3d6000fd5b5050602a54602e546001600160a01b03909116925063a7f0de8191508390620026c99060029062003c65565b6040516001600160e01b031960e085901b168152600481019290925260248201526044015b600060405180830381600087803b1580156200270957600080fd5b505af115801562001191573d6000803e3d6000fd5b6200272a6004620030ed565b6200273781600162003283565b60405163ca669fa760e01b815260048082015260008051602062015e308339815191529063ca669fa790602401600060405180830381600087803b1580156200277f57600080fd5b505af115801562002794573d6000803e3d6000fd5b5050602a54604051630c0e093b60e31b8152600481018590526001600160a01b03909116925063607049d89150602401620026ee565b6000620027d662003358565b620027e382600162003283565b60405163ca669fa760e01b81526002600482015260008051602062015e308339815191529063ca669fa790602401600060405180830381600087803b1580156200282c57600080fd5b505af115801562002841573d6000803e3d6000fd5b5050602a54604051631122cca360e01b8152600481018690526001600160a01b039091169250631122cca391506024016020604051808303816000875af115801562002891573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620028b7919062003b75565b92915050565b80620018c4577f41304facd9323d75b11bcdd609cb38effffdb05710f7caf0e9b16c6d9d709f50604051620029239060208082526017908201527f4572726f723a20417373657274696f6e204661696c6564000000000000000000604082015260600190565b60405180910390a1620018c46200345f565b80821462002a60577f41304facd9323d75b11bcdd609cb38effffdb05710f7caf0e9b16c6d9d709f50604051620029a89060208082526022908201527f4572726f723a2061203d3d2062206e6f7420736174697366696564205b75696e604082015261745d60f01b606082015260800190565b60405180910390a160408051818152600a81830152690808080808081319599d60b21b60608201526020810184905290517fb2de2fbe801a0df6c0cbddfd448ba3c41d48a040ca35c56c8196ef0fcae721a89181900360800190a160408051818152600a81830152690808080808149a59da1d60b21b60608201526020810183905290517fb2de2fbe801a0df6c0cbddfd448ba3c41d48a040ca35c56c8196ef0fcae721a89181900360800190a162002a606200345f565b5050565b60408051606080820183526000808352602083015291810191909152601f5460405163220c0a2160e21b8152600481018590526000916001600160a01b03169063883028849060240161020060405180830381865afa15801562002acc573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062002af29190620040ce565b905060006040518060600160405280601f60009054906101000a90046001600160a01b03166001600160a01b031663d509b0176040518163ffffffff1660e01b8152600401602060405180830381865afa15801562002b55573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062002b7b919062003b75565b81526040848101516001600160401b03166020830152601f54815163afedba4f60e01b8152600481018a905291909201916001600160a01b03169063afedba4f90602401600060405180830381865afa15801562002bdd573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405262002c079190810190620041c3565b90526040516303223eab60e11b81526003600482015290915060008051602062015e30833981519152906306447d5690602401600060405180830381600087803b15801562002c5557600080fd5b505af115801562002c6a573d6000803e3d6000fd5b505060205460405163045e52b360e11b81526001600160a01b0390911692506308bca566915062002ca390600390889060040162003eca565b600060405180830381600087803b15801562002cbe57600080fd5b505af115801562002cd3573d6000803e3d6000fd5b5050602054601f5460405163095ea7b360e01b81526001600160a01b03928316945063095ea7b3935062002d109290911690889060040162003eca565b6020604051808303816000875af115801562002d30573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062002d56919062003be9565b50601f5460405163a6a22b4360e01b815260048101879052600360248201526001600160a01b039091169063a6a22b4390604401600060405180830381600087803b15801562002da557600080fd5b505af115801562002dba573d6000803e3d6000fd5b505050507f885cb69240a935d632d79c317109709ecfa91a80626ff3989d68f67f5b1dd12d60001c6001600160a01b03166390c5013b6040518163ffffffff1660e01b8152600401600060405180830381600087803b15801562002e1d57600080fd5b505af115801562002e32573d6000803e3d6000fd5b5092979650505050505050565b81516020830151604080850151905160008051602062015e308339815191529363b96213e49388936338ce36ab60e11b9362002e819392919060240162004210565b60408051601f198184030181529190526020810180516001600160e01b03166001600160e01b0319909316929092179091528462002ec157600062002ecb565b670de0b6b3a76400005b604051602001620019b991815260200190565b620018c48115620028bd565b62002a60828260405160240162002f039291906200423a565b60408051601f198184030181529190526020810180516001600160e01b03166309710a9d60e41b17905262003568565b620018c48160405160240162002f4b91815260200190565b60408051601f198184030181529190526020810180516001600160e01b031663f5b1bba960e01b17905262003568565b602054602c54602d546001600160a01b03909216916308bca5669160019162002fa5919062003ba5565b6040518363ffffffff1660e01b815260040162002fc492919062003eca565b600060405180830381600087803b15801562002fdf57600080fd5b505af115801562002ff4573d6000803e3d6000fd5b505060405163ca669fa760e01b81526001600482015260008051602062015e30833981519152925063ca669fa79150602401600060405180830381600087803b1580156200304157600080fd5b505af115801562003056573d6000803e3d6000fd5b5050602054602a54602c54602d546001600160a01b03938416955063095ea7b394509190921691620030889162003ba5565b6040518363ffffffff1660e01b8152600401620030a792919062003eca565b6020604051808303816000875af1158015620030c7573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620018c4919062003be9565b602054602e546001600160a01b03909116906308bca5669083906200311490600262003c07565b620031259064e8d4a5100062003c07565b6040518363ffffffff1660e01b81526004016200314492919062003eca565b600060405180830381600087803b1580156200315f57600080fd5b505af115801562003174573d6000803e3d6000fd5b505060405163ca669fa760e01b81526001600160a01b038416600482015260008051602062015e30833981519152925063ca669fa79150602401600060405180830381600087803b158015620031c957600080fd5b505af1158015620031de573d6000803e3d6000fd5b5050602054602a54602e546001600160a01b03928316945063095ea7b393509116906200320d90600262003c07565b6200321e9064e8d4a5100062003c07565b6040518363ffffffff1660e01b81526004016200323d92919062003eca565b6020604051808303816000875af11580156200325d573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062002a60919062003be9565b60405163ca669fa760e01b81526001600482015260008051602062015e308339815191529063ca669fa790602401600060405180830381600087803b158015620032cc57600080fd5b505af1158015620032e1573d6000803e3d6000fd5b5050602a5460405163481e9c6b60e01b8152600481018690526001600160401b03851660248201526001600160a01b03909116925063481e9c6b9150604401600060405180830381600087803b1580156200333b57600080fd5b505af115801562003350573d6000803e3d6000fd5b505050505050565b602054602d5460405163045e52b360e11b81526001600160a01b03909216916308bca566916200338f916002919060040162003eca565b600060405180830381600087803b158015620033aa57600080fd5b505af1158015620033bf573d6000803e3d6000fd5b505060405163ca669fa760e01b81526002600482015260008051602062015e30833981519152925063ca669fa79150602401600060405180830381600087803b1580156200340c57600080fd5b505af115801562003421573d6000803e3d6000fd5b5050602054602a54602d5460405163095ea7b360e01b81526001600160a01b03938416955063095ea7b39450620030a7939092169160040162003eca565b60008051602062015e308339815191523b1562003557576040805160008051602062015e30833981519152602082018190526519985a5b195960d21b9282019290925260016060820152600091907f70ca10bbd0dbfd9020a9f4b13402c16cb120705e0d1c0aeab10fa353ae586fc49060800160408051601f1981840301815290829052620034f2929160200162003ee3565b60408051601f19818403018152908290526200350e9162003f16565b6000604051808303816000865af19150503d80600081146200354d576040519150601f19603f3d011682016040523d82523d6000602084013e62003552565b606091505b505050505b6007805461ff001916610100179055565b80516a636f6e736f6c652e6c6f67602083016000808483855afa5050505050565b61c640806200425f83390190565b610878806201089f83390190565b614d19806201111783390190565b6020808252825182820181905260009190848201906040850190845b81811015620035f65783516001600160a01b031683529284019291840191600101620035cf565b50909695505050505050565b60005b838110156200361f57818101518382015260200162003605565b50506000910152565b600081518084526200364281602086016020860162003602565b601f01601f19169290920160200192915050565b602080825282518282018190526000919060409081850190600581811b8701840188860187805b858110156200370c57603f198b8503018752825180516001600160a01b031685528901518985018990528051898601819052908a0190606081881b870181019190870190855b81811015620036f557605f19898503018352620036e284865162003628565b948e01949350918d0191600101620036c3565b505050978a0197945050918801916001016200367d565b50919a9950505050505050505050565b60006020808301818452808551808352604092508286019150828160051b8701018488016000805b84811015620037c457898403603f19018652825180516001600160a01b03168552880151888501889052805188860181905290890190839060608701905b80831015620037ae5783516001600160e01b0319168252928b019260019290920191908b019062003782565b50978a0197955050509187019160010162003744565b50919998505050505050505050565b6000602080830181845280855180835260408601915060408160051b870101925083870160005b8281101562002e3257603f198886030184526200381985835162003628565b94509285019290850190600101620037fa565b6001600160a01b0381168114620018c457600080fd5b600080604083850312156200385657600080fd5b823562003863816200382c565b946020939093013593505050565b634e487b7160e01b600052604160045260246000fd5b60405161014081016001600160401b0381118282101715620038ad57620038ad62003871565b60405290565b60405161018081016001600160401b0381118282101715620038ad57620038ad62003871565b604051601f8201601f191681016001600160401b038111828210171562003904576200390462003871565b604052919050565b60006001600160401b0382111562003928576200392862003871565b50601f01601f191660200190565b600080604083850312156200394a57600080fd5b823562003957816200382c565b915060208301356001600160401b038111156200397357600080fd5b8301601f810185136200398557600080fd5b80356200399c62003996826200390c565b620038d9565b818152866020838501011115620039b257600080fd5b816020840160208301376000602083830101528093505050509250929050565b805162001c29816200382c565b6000620039f062003996846200390c565b905082815283838301111562003a0557600080fd5b62003a1583602083018462003602565b9392505050565b600082601f83011262003a2e57600080fd5b62003a1583835160208501620039df565b8051801515811462001c2957600080fd5b80516001600160401b038116811462001c2957600080fd5b60006020828403121562003a7b57600080fd5b81516001600160401b038082111562003a9357600080fd5b90830190610140828603121562003aa957600080fd5b62003ab362003887565b62003abe83620039d2565b815260208301516020820152604083015160408201526060830151606082015262003aec60808401620039d2565b608082015262003aff60a08401620039d2565b60a082015262003b1260c08401620039d2565b60c082015260e08301518281111562003b2a57600080fd5b62003b388782860162003a1c565b60e083015250610100915062003b5082840162003a3f565b82820152610120915062003b6682840162003a50565b91810191909152949350505050565b60006020828403121562003b8857600080fd5b5051919050565b634e487b7160e01b600052601160045260246000fd5b80820180821115620028b757620028b762003b8f565b6001600160a01b038316815260406020820181905260009062003be19083018462003628565b949350505050565b60006020828403121562003bfc57600080fd5b62003a158262003a3f565b600081600019048311821515161562003c245762003c2462003b8f565b500290565b600181811c9082168062003c3e57607f821691505b60208210810362003c5f57634e487b7160e01b600052602260045260246000fd5b50919050565b60008262003c8357634e487b7160e01b600052601260045260246000fd5b500490565b600061010080838503121562003c9d57600080fd5b604051908101906001600160401b038211818310171562003cc25762003cc262003871565b816040528351915062003cd5826200382c565b81815262003ce660208501620039d2565b602082015262003cf960408501620039d2565b604082015262003d0c60608501620039d2565b606082015262003d1f60808501620039d2565b608082015262003d3260a08501620039d2565b60a082015262003d4560c08501620039d2565b60c082015262003d5860e08501620039d2565b60e0820152949350505050565b60006020828403121562003d7857600080fd5b62003a158262003a50565b81518051151582526020808201511515818401526040808301511515818501526060808401516001600160a01b039081168287015260809485015181168587015292860151831660a0860152908501516001600160401b031660c0850152840151151560e084015290830151908116610100808401919091526102008301919060a0850151915061012062003e22818601846001600160401b03169052565b60c0860151925061014062003e3a8187018515159052565b60e08701516101608781019190915292870151610180870152908601516101a08601528501516001600160a01b039081166101c08601529401519093166101e090920191909152919050565b6001600160a01b038416815260606020820181905260009062003eac9083018562003628565b828103604084015262003ec0818562003628565b9695505050505050565b6001600160a01b03929092168252602082015260400190565b6001600160e01b031983168152815160009062003f0881600485016020870162003602565b919091016004019392505050565b6000825162003f2a81846020870162003602565b9190910192915050565b60408152600062003f49604083018562003628565b905060018060a01b03831660208301529392505050565b848152600060208581840152846040840152608060608401526000845481600182811c91508083168062003f9557607f831692505b858310810362003fb357634e487b7160e01b85526022600452602485fd5b6080880183905260a0880181801562003fd5576001811462003fec5762004019565b60ff198616825284151560051b8201965062004019565b60008b81526020902060005b86811015620040135781548482015290850190890162003ff8565b83019750505b50949c9b505050505050505050505050565b600060a082840312156200403e57600080fd5b60405160a081018181106001600160401b038211171562004063576200406362003871565b604052905080620040748362003a3f565b8152620040846020840162003a3f565b6020820152620040976040840162003a3f565b60408201526060830151620040ac816200382c565b60608201526080830151620040c1816200382c565b6080919091015292915050565b60006102008284031215620040e257600080fd5b620040ec620038b3565b620040f884846200402b565b81526200410860a08401620039d2565b60208201526200411b60c0840162003a50565b60408201526200412e60e0840162003a3f565b606082015261010062004143818501620039d2565b60808301526101206200415881860162003a50565b60a08401526101406200416d81870162003a3f565b60c08501526101608087015160e0860152610180870151848601526101a087015183860152620041a16101c08801620039d2565b82860152620041b46101e08801620039d2565b90850152509195945050505050565b600060208284031215620041d657600080fd5b81516001600160401b03811115620041ed57600080fd5b8201601f81018413620041ff57600080fd5b62003be184825160208401620039df565b83815282602082015260606040820152600062004231606083018462003628565b95945050505050565b6040815260006200424f604083018562003628565b9050826020830152939250505056fe608060405260078054600160ff199182168117909255600b8054909116909117905534801561002d57600080fd5b5061c6038061003d6000396000f3fe60806040523480156200001157600080fd5b5060043610620000c35760003560e01c806385226c81116200007a57806385226c8114620001af578063916a17c614620001c8578063b5508aa914620001d2578063ba414fa614620001dc578063e20c9f7114620001f7578063fa7626d4146200020157600080fd5b80630a9254e414620000c85780631ed7831c14620001505780632ade388014620001695780633e5e3c2314620001825780633f7286f4146200018c57806366d9a9a01462000196575b600080fd5b620000d26200020f565b60405162000147919081516001600160a01b03908116825260208084015182169083015260408084015182169083015260608084015182169083015260808084015182169083015260a08084015182169083015260c08084015182169083015260e09283015116918101919091526101000190565b60405180910390f35b6200015a620006af565b60405162000147919062000e70565b6200017362000713565b60405162000147919062000ee5565b6200015a62000861565b6200015a620008c3565b620001a062000925565b60405162000147919062000fc6565b620001b962000a0f565b6040516200014791906200107d565b620001a062000ae9565b620001b962000bd3565b620001e662000cad565b604051901515815260200162000147565b6200015a62000de4565b600754620001e69060ff1681565b6040805161010081018252600080825260208201819052918101829052606081018290526080810182905260a0810182905260c0810182905260e08101919091526000604051620002609062000e46565b604051809103906000f0801580156200027d573d6000803e3d6000fd5b506001600160a01b0316630a9254e46040518163ffffffff1660e01b815260040160c0604051808303816000875af1158015620002be573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620002e4919062001106565b905060006012604051620002f89062000e54565b6060808252601290820152712232b330bab63a102137b732102a37b5b2b760711b608082015260a0602082018190526003908201526211109560ea1b60c082015260ff909116604082015260e001604051809103906000f08015801562000363573d6000803e3d6000fd5b506040516303223eab60e11b815260016004820152909150737109709ecfa91a80626ff3989d68f67f5b1dd12d906306447d5690602401600060405180830381600087803b158015620003b557600080fd5b505af1158015620003ca573d6000803e3d6000fd5b505050606083015160405163e43252d760e01b81526001600160a01b038481166004830152909116915063e43252d790602401600060405180830381600087803b1580156200041857600080fd5b505af11580156200042d573d6000803e3d6000fd5b50505060808301516040516310a7e20160e01b81526b082a6a68aa4a8bea8a4aaa8960a31b60048201526001600160a01b0390911691506310a7e20190602401600060405180830381600087803b1580156200048857600080fd5b505af11580156200049d573d6000803e3d6000fd5b5050505060408281015181516020810183526802b5e3af16b18800008082529251637e7e591d60e01b81526001600160a01b03858116600483015291516024820152611c20929190911690637e7e591d90604401600060405180830381600087803b1580156200050c57600080fd5b505af115801562000521573d6000803e3d6000fd5b505050506000846020015184838760000151604051620005419062000e62565b6001600160a01b039485168152928416602084015267ffffffffffffffff9091166040830152919091166060820152608001604051809103906000f08015801562000590573d6000803e3d6000fd5b5090507f885cb69240a935d632d79c317109709ecfa91a80626ff3989d68f67f5b1dd12d60001c6001600160a01b03166390c5013b6040518163ffffffff1660e01b8152600401600060405180830381600087803b158015620005f257600080fd5b505af115801562000607573d6000803e3d6000fd5b5050505060405180610100016040528086600001516001600160a01b0316815260200186602001516001600160a01b0316815260200186604001516001600160a01b0316815260200186606001516001600160a01b0316815260200186608001516001600160a01b031681526020018660a001516001600160a01b03168152602001856001600160a01b03168152602001826001600160a01b03168152509550505050505090565b606060148054806020026020016040519081016040528092919081815260200182805480156200070957602002820191906000526020600020905b81546001600160a01b03168152600190910190602001808311620006ea575b5050505050905090565b6060601b805480602002602001604051908101604052809291908181526020016000905b828210156200085857600084815260208082206040805180820182526002870290920180546001600160a01b03168352600181018054835181870281018701909452808452939591948681019491929084015b8282101562000840578382906000526020600020018054620007ac90620011c1565b80601f0160208091040260200160405190810160405280929190818152602001828054620007da90620011c1565b80156200082b5780601f10620007ff576101008083540402835291602001916200082b565b820191906000526020600020905b8154815290600101906020018083116200080d57829003601f168201915b5050505050815260200190600101906200078a565b50505050815250508152602001906001019062000737565b50505050905090565b6060601680548060200260200160405190810160405280929190818152602001828054801562000709576020028201919060005260206000209081546001600160a01b03168152600190910190602001808311620006ea575050505050905090565b6060601580548060200260200160405190810160405280929190818152602001828054801562000709576020028201919060005260206000209081546001600160a01b03168152600190910190602001808311620006ea575050505050905090565b60606019805480602002602001604051908101604052809291908181526020016000905b82821015620008585760008481526020908190206040805180820182526002860290920180546001600160a01b03168352600181018054835181870281018701909452808452939491938583019392830182828015620009f657602002820191906000526020600020906000905b82829054906101000a900460e01b6001600160e01b03191681526020019060040190602082600301049283019260010382029150808411620009b75790505b5050505050815250508152602001906001019062000949565b60606018805480602002602001604051908101604052809291908181526020016000905b828210156200085857838290600052602060002001805462000a5590620011c1565b80601f016020809104026020016040519081016040528092919081815260200182805462000a8390620011c1565b801562000ad45780601f1062000aa85761010080835404028352916020019162000ad4565b820191906000526020600020905b81548152906001019060200180831162000ab657829003601f168201915b50505050508152602001906001019062000a33565b6060601a805480602002602001604051908101604052809291908181526020016000905b82821015620008585760008481526020908190206040805180820182526002860290920180546001600160a01b0316835260018101805483518187028101870190945280845293949193858301939283018282801562000bba57602002820191906000526020600020906000905b82829054906101000a900460e01b6001600160e01b0319168152602001906004019060208260030104928301926001038202915080841162000b7b5790505b5050505050815250508152602001906001019062000b0d565b60606017805480602002602001604051908101604052809291908181526020016000905b828210156200085857838290600052602060002001805462000c1990620011c1565b80601f016020809104026020016040519081016040528092919081815260200182805462000c4790620011c1565b801562000c985780601f1062000c6c5761010080835404028352916020019162000c98565b820191906000526020600020905b81548152906001019060200180831162000c7a57829003601f168201915b50505050508152602001906001019062000bf7565b600754600090610100900460ff161562000cd05750600754610100900460ff1690565b6000737109709ecfa91a80626ff3989d68f67f5b1dd12d3b1562000ddf5760408051737109709ecfa91a80626ff3989d68f67f5b1dd12d602082018190526519985a5b195960d21b8284015282518083038401815260608301909352600092909162000d61917f667f9d70ca411d70ead50d8d5c22070dafc36ad75f3dcf5e7237b22ade9aecc491608001620011fd565b60408051601f198184030181529082905262000d7d9162001230565b6000604051808303816000865af19150503d806000811462000dbc576040519150601f19603f3d011682016040523d82523d6000602084013e62000dc1565b606091505b509150508080602001905181019062000ddb91906200124e565b9150505b919050565b6060601380548060200260200160405190810160405280929190818152602001828054801562000709576020028201919060005260206000209081546001600160a01b03168152600190910190602001808311620006ea575050505050905090565b6167bf806200127a83390190565b610cff8062007a3983390190565b613e96806200873883390190565b6020808252825182820181905260009190848201906040850190845b8181101562000eb35783516001600160a01b03168352928401929184019160010162000e8c565b50909695505050505050565b60005b8381101562000edc57818101518382015260200162000ec2565b50506000910152565b6000602080830181845280855180835260408601915060408160051b870101925083870160005b8281101562000fb957603f19888603018452815180516001600160a01b0316865286015160408787018190528151908701819052908701906060600582901b88018101919088019060005b8181101562000fa157898403605f190183528451805180865262000f81818e88018f850162000ebf565b958c0195601f01601f1916949094018b019350918a019160010162000f57565b50919750505093860193509085019060010162000f0c565b5092979650505050505050565b60006020808301818452808551808352604092508286019150828160051b8701018488016000805b848110156200106e57898403603f19018652825180516001600160a01b03168552880151888501889052805188860181905290890190839060608701905b80831015620010585783516001600160e01b0319168252928b019260019290920191908b01906200102c565b50978a0197955050509187019160010162000fee565b50919998505050505050505050565b6000602080830181845280855180835260408601915060408160051b870101925083870160005b8281101562000fb957878503603f1901845281518051808752620010ce818989018a850162000ebf565b601f01601f191695909501860194509285019290850190600101620010a4565b80516001600160a01b038116811462000ddf57600080fd5b600060c082840312156200111957600080fd5b60405160c0810181811067ffffffffffffffff821117156200114b57634e487b7160e01b600052604160045260246000fd5b6040526200115983620010ee565b81526200116960208401620010ee565b60208201526200117c60408401620010ee565b60408201526200118f60608401620010ee565b6060820152620011a260808401620010ee565b6080820152620011b560a08401620010ee565b60a08201529392505050565b600181811c90821680620011d657607f821691505b602082108103620011f757634e487b7160e01b600052602260045260246000fd5b50919050565b6001600160e01b03198316815281516000906200122281600485016020870162000ebf565b919091016004019392505050565b600082516200124481846020870162000ebf565b9190910192915050565b6000602082840312156200126157600080fd5b815180151581146200127257600080fd5b939250505056fe608060405260078054600160ff199182168117909255600b8054909116909117905534801561002d57600080fd5b506167828061003d6000396000f3fe608060405234801561001057600080fd5b50600436106100b45760003560e01c806385226c811161007157806385226c8114610174578063916a17c614610189578063b5508aa914610191578063ba414fa614610199578063e20c9f71146101b1578063fa7626d4146101b957600080fd5b80630a9254e4146100b95780631ed7831c146101255780632ade38801461013a5780633e5e3c231461014f5780633f7286f41461015757806366d9a9a01461015f575b600080fd5b6100c16101c6565b60405161011c919081516001600160a01b03908116825260208084015182169083015260408084015182169083015260608084015182169083015260808084015182169083015260a092830151169181019190915260c00190565b60405180910390f35b61012d61042a565b60405161011c9190610ba1565b61014261048c565b60405161011c9190610c12565b61012d6105ce565b61012d61062e565b61016761068e565b60405161011c9190610ced565b61017c610774565b60405161011c9190610da0565b610167610844565b61017c61092a565b6101a16109fa565b604051901515815260200161011c565b61012d610b27565b6007546101a19060ff1681565b6040805160c081018252600080825260208201819052918101829052606081018290526080810182905260a0810191909152600060405161020690610b87565b604051809103906000f080158015610222573d6000803e3d6000fd5b506001600160a01b0316630a9254e46040518163ffffffff1660e01b815260040160a0604051808303816000875af1158015610262573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102869190610e30565b90506000816020015182600001516040516102a090610b94565b6001600160a01b03928316815291166020820152604001604051809103906000f0801580156102d3573d6000803e3d6000fd5b5060405163ca669fa760e01b815260016004820152909150737109709ecfa91a80626ff3989d68f67f5b1dd12d9063ca669fa790602401600060405180830381600087803b15801561032457600080fd5b505af1158015610338573d6000803e3d6000fd5b50505060208301516040516318fcb32f60e11b8152654f7261636c6560d01b60048201526001600160a01b03848116602483015290911691506331f9665e90604401600060405180830381600087803b15801561039457600080fd5b505af11580156103a8573d6000803e3d6000fd5b505050506040518060c0016040528083600001516001600160a01b0316815260200183602001516001600160a01b0316815260200183604001516001600160a01b0316815260200183606001516001600160a01b0316815260200183608001516001600160a01b03168152602001826001600160a01b03168152509250505090565b6060601480548060200260200160405190810160405280929190818152602001828054801561048257602002820191906000526020600020905b81546001600160a01b03168152600190910190602001808311610464575b5050505050905090565b6060601b805480602002602001604051908101604052809291908181526020016000905b828210156105c557600084815260208082206040805180820182526002870290920180546001600160a01b03168352600181018054835181870281018701909452808452939591948681019491929084015b828210156105ae57838290600052602060002001805461052190610ed0565b80601f016020809104026020016040519081016040528092919081815260200182805461054d90610ed0565b801561059a5780601f1061056f5761010080835404028352916020019161059a565b820191906000526020600020905b81548152906001019060200180831161057d57829003601f168201915b505050505081526020019060010190610502565b5050505081525050815260200190600101906104b0565b50505050905090565b60606016805480602002602001604051908101604052809291908181526020018280548015610482576020028201919060005260206000209081546001600160a01b03168152600190910190602001808311610464575050505050905090565b60606015805480602002602001604051908101604052809291908181526020018280548015610482576020028201919060005260206000209081546001600160a01b03168152600190910190602001808311610464575050505050905090565b60606019805480602002602001604051908101604052809291908181526020016000905b828210156105c55760008481526020908190206040805180820182526002860290920180546001600160a01b0316835260018101805483518187028101870190945280845293949193858301939283018282801561075c57602002820191906000526020600020906000905b82829054906101000a900460e01b6001600160e01b0319168152602001906004019060208260030104928301926001038202915080841161071e5790505b505050505081525050815260200190600101906106b2565b60606018805480602002602001604051908101604052809291908181526020016000905b828210156105c55783829060005260206000200180546107b790610ed0565b80601f01602080910402602001604051908101604052809291908181526020018280546107e390610ed0565b80156108305780601f1061080557610100808354040283529160200191610830565b820191906000526020600020905b81548152906001019060200180831161081357829003601f168201915b505050505081526020019060010190610798565b6060601a805480602002602001604051908101604052809291908181526020016000905b828210156105c55760008481526020908190206040805180820182526002860290920180546001600160a01b0316835260018101805483518187028101870190945280845293949193858301939283018282801561091257602002820191906000526020600020906000905b82829054906101000a900460e01b6001600160e01b031916815260200190600401906020826003010492830192600103820291508084116108d45790505b50505050508152505081526020019060010190610868565b60606017805480602002602001604051908101604052809291908181526020016000905b828210156105c557838290600052602060002001805461096d90610ed0565b80601f016020809104026020016040519081016040528092919081815260200182805461099990610ed0565b80156109e65780601f106109bb576101008083540402835291602001916109e6565b820191906000526020600020905b8154815290600101906020018083116109c957829003601f168201915b50505050508152602001906001019061094e565b600754600090610100900460ff1615610a1c5750600754610100900460ff1690565b6000737109709ecfa91a80626ff3989d68f67f5b1dd12d3b15610b225760408051737109709ecfa91a80626ff3989d68f67f5b1dd12d602082018190526519985a5b195960d21b82840152825180830384018152606083019093526000929091610aaa917f667f9d70ca411d70ead50d8d5c22070dafc36ad75f3dcf5e7237b22ade9aecc491608001610f0a565b60408051601f1981840301815290829052610ac491610f3b565b6000604051808303816000865af19150503d8060008114610b01576040519150601f19603f3d011682016040523d82523d6000602084013e610b06565b606091505b5091505080806020019051810190610b1e9190610f57565b9150505b919050565b60606013805480602002602001604051908101604052809291908181526020018280548015610482576020028201919060005260206000209081546001600160a01b03168152600190910190602001808311610464575050505050905090565b6145b480610f8183390190565b6112188061553583390190565b6020808252825182820181905260009190848201906040850190845b81811015610be25783516001600160a01b031683529284019291840191600101610bbd565b50909695505050505050565b60005b83811015610c09578181015183820152602001610bf1565b50506000910152565b6000602080830181845280855180835260408601915060408160051b870101925083870160005b82811015610ce057603f19888603018452815180516001600160a01b0316865286015160408787018190528151908701819052908701906060600582901b88018101919088019060005b81811015610cc957898403605f1901835284518051808652610caa818e88018f8501610bee565b958c0195601f01601f1916949094018b019350918a0191600101610c83565b509197505050938601935090850190600101610c39565b5092979650505050505050565b60006020808301818452808551808352604092508286019150828160051b8701018488016000805b84811015610d9157898403603f19018652825180516001600160a01b03168552880151888501889052805188860181905290890190839060608701905b80831015610d7c5783516001600160e01b0319168252928b019260019290920191908b0190610d52565b50978a01979550505091870191600101610d15565b50919998505050505050505050565b6000602080830181845280855180835260408601915060408160051b870101925083870160005b82811015610ce057878503603f1901845281518051808752610dee818989018a8501610bee565b601f01601f191695909501860194509285019290850190600101610dc7565b6001600160a01b0381168114610e2257600080fd5b50565b8051610b2281610e0d565b600060a08284031215610e4257600080fd5b60405160a0810181811067ffffffffffffffff82111715610e7357634e487b7160e01b600052604160045260246000fd5b6040528251610e8181610e0d565b81526020830151610e9181610e0d565b6020820152610ea260408401610e25565b6040820152610eb360608401610e25565b6060820152610ec460808401610e25565b60808201529392505050565b600181811c90821680610ee457607f821691505b602082108103610f0457634e487b7160e01b600052602260045260246000fd5b50919050565b6001600160e01b0319831681528151600090610f2d816004850160208701610bee565b919091016004019392505050565b60008251610f4d818460208701610bee565b9190910192915050565b600060208284031215610f6957600080fd5b81518015158114610f7957600080fd5b939250505056fe608060405260078054600160ff199182168117909255600b8054909116909117905534801561002d57600080fd5b506145778061003d6000396000f3fe60806040523480156200001157600080fd5b5060043610620000c35760003560e01c806385226c81116200007a57806385226c81146200018a578063916a17c614620001a3578063b5508aa914620001ad578063ba414fa614620001b7578063e20c9f7114620001d2578063fa7626d414620001dc57600080fd5b80630a9254e414620000c85780631ed7831c146200012b5780632ade388014620001445780633e5e3c23146200015d5780633f7286f4146200016757806366d9a9a01462000171575b600080fd5b620000d2620001ea565b60405162000122919081516001600160a01b039081168252602080840151821690830152604080840151821690830152606080840151821690830152608092830151169181019190915260a00190565b60405180910390f35b6200013562000618565b60405162000122919062000e41565b6200014e6200067c565b60405162000122919062000eb6565b62000135620007ca565b620001356200082c565b6200017b6200088e565b60405162000122919062000f97565b6200019462000978565b6040516200012291906200104e565b6200017b62000a52565b6200019462000b3c565b620001c162000c16565b604051901515815260200162000122565b6200013562000d4d565b600754620001c19060ff1681565b6040805160a08101825260008082526020820181905281830181905260608201819052608082015290516303223eab60e11b815260016004820152737109709ecfa91a80626ff3989d68f67f5b1dd12d906306447d5690602401600060405180830381600087803b1580156200025f57600080fd5b505af115801562000274573d6000803e3d6000fd5b505050506000604051620002889062000dfb565b604051809103906000f080158015620002a5573d6000803e3d6000fd5b506001600160a01b0316630a9254e46040518163ffffffff1660e01b81526004016020604051808303816000875af1158015620002e6573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200030c9190620010bf565b905060006040516200031e9062000e09565b604051809103906000f0801580156200033b573d6000803e3d6000fd5b50905060006200034c600062000daf565b62000358600062000daf565b84604051620003679062000e17565b92518352905160208301526001600160a01b03166040820152606001604051809103906000f080158015620003a0573d6000803e3d6000fd5b5090506000604051620003b39062000e25565b604051809103906000f080158015620003d0573d6000803e3d6000fd5b5090506000604051620003e39062000e33565b604051809103906000f08015801562000400573d6000803e3d6000fd5b506040516318fcb32f60e11b81526453746f726560d81b60048201526001600160a01b038581166024830152919250908516906331f9665e90604401600060405180830381600087803b1580156200045757600080fd5b505af11580156200046c573d6000803e3d6000fd5b50506040516318fcb32f60e11b81527210dbdb1b185d195c985b15da1a5d195b1a5cdd606a1b60048201526001600160a01b038581166024830152871692506331f9665e9150604401600060405180830381600087803b158015620004d057600080fd5b505af1158015620004e5573d6000803e3d6000fd5b50506040516318fcb32f60e11b8152721259195b9d1a599a595c95da1a5d195b1a5cdd606a1b60048201526001600160a01b038481166024830152871692506331f9665e9150604401600060405180830381600087803b1580156200054957600080fd5b505af11580156200055e573d6000803e3d6000fd5b505050507f885cb69240a935d632d79c317109709ecfa91a80626ff3989d68f67f5b1dd12d60001c6001600160a01b03166390c5013b6040518163ffffffff1660e01b8152600401600060405180830381600087803b158015620005c157600080fd5b505af1158015620005d6573d6000803e3d6000fd5b50506040805160a0810182526001600160a01b039889168152968816602088015294871694860194909452509084166060840152909216608082015292915050565b606060148054806020026020016040519081016040528092919081815260200182805480156200067257602002820191906000526020600020905b81546001600160a01b0316815260019091019060200180831162000653575b5050505050905090565b6060601b805480602002602001604051908101604052809291908181526020016000905b82821015620007c157600084815260208082206040805180820182526002870290920180546001600160a01b03168352600181018054835181870281018701909452808452939591948681019491929084015b82821015620007a95783829060005260206000200180546200071590620010ea565b80601f01602080910402602001604051908101604052809291908181526020018280546200074390620010ea565b8015620007945780601f10620007685761010080835404028352916020019162000794565b820191906000526020600020905b8154815290600101906020018083116200077657829003601f168201915b505050505081526020019060010190620006f3565b505050508152505081526020019060010190620006a0565b50505050905090565b6060601680548060200260200160405190810160405280929190818152602001828054801562000672576020028201919060005260206000209081546001600160a01b0316815260019091019060200180831162000653575050505050905090565b6060601580548060200260200160405190810160405280929190818152602001828054801562000672576020028201919060005260206000209081546001600160a01b0316815260019091019060200180831162000653575050505050905090565b60606019805480602002602001604051908101604052809291908181526020016000905b82821015620007c15760008481526020908190206040805180820182526002860290920180546001600160a01b031683526001810180548351818702810187019094528084529394919385830193928301828280156200095f57602002820191906000526020600020906000905b82829054906101000a900460e01b6001600160e01b03191681526020019060040190602082600301049283019260010382029150808411620009205790505b50505050508152505081526020019060010190620008b2565b60606018805480602002602001604051908101604052809291908181526020016000905b82821015620007c1578382906000526020600020018054620009be90620010ea565b80601f0160208091040260200160405190810160405280929190818152602001828054620009ec90620010ea565b801562000a3d5780601f1062000a115761010080835404028352916020019162000a3d565b820191906000526020600020905b81548152906001019060200180831162000a1f57829003601f168201915b5050505050815260200190600101906200099c565b6060601a805480602002602001604051908101604052809291908181526020016000905b82821015620007c15760008481526020908190206040805180820182526002860290920180546001600160a01b0316835260018101805483518187028101870190945280845293949193858301939283018282801562000b2357602002820191906000526020600020906000905b82829054906101000a900460e01b6001600160e01b0319168152602001906004019060208260030104928301926001038202915080841162000ae45790505b5050505050815250508152602001906001019062000a76565b60606017805480602002602001604051908101604052809291908181526020016000905b82821015620007c157838290600052602060002001805462000b8290620010ea565b80601f016020809104026020016040519081016040528092919081815260200182805462000bb090620010ea565b801562000c015780601f1062000bd55761010080835404028352916020019162000c01565b820191906000526020600020905b81548152906001019060200180831162000be357829003601f168201915b50505050508152602001906001019062000b60565b600754600090610100900460ff161562000c395750600754610100900460ff1690565b6000737109709ecfa91a80626ff3989d68f67f5b1dd12d3b1562000d485760408051737109709ecfa91a80626ff3989d68f67f5b1dd12d602082018190526519985a5b195960d21b8284015282518083038401815260608301909352600092909162000cca917f667f9d70ca411d70ead50d8d5c22070dafc36ad75f3dcf5e7237b22ade9aecc49160800162001126565b60408051601f198184030181529082905262000ce69162001159565b6000604051808303816000865af19150503d806000811462000d25576040519150601f19603f3d011682016040523d82523d6000602084013e62000d2a565b606091505b509150508080602001905181019062000d44919062001177565b9150505b919050565b6060601380548060200260200160405190810160405280929190818152602001828054801562000672576020028201919060005260206000209081546001600160a01b0316815260019091019060200180831162000653575050505050905090565b60408051602081019091526000815260408051602081019091528062000dde84670de0b6b3a764000062000de6565b905292915050565b600062000df482846200119b565b9392505050565b6101b580620011ca83390190565b610480806200137f83390190565b611f8b80620017ff83390190565b61095e806200378a83390190565b61045a80620040e883390190565b6020808252825182820181905260009190848201906040850190845b8181101562000e845783516001600160a01b03168352928401929184019160010162000e5d565b50909695505050505050565b60005b8381101562000ead57818101518382015260200162000e93565b50506000910152565b6000602080830181845280855180835260408601915060408160051b870101925083870160005b8281101562000f8a57603f19888603018452815180516001600160a01b0316865286015160408787018190528151908701819052908701906060600582901b88018101919088019060005b8181101562000f7257898403605f190183528451805180865262000f52818e88018f850162000e90565b958c0195601f01601f1916949094018b019350918a019160010162000f28565b50919750505093860193509085019060010162000edd565b5092979650505050505050565b60006020808301818452808551808352604092508286019150828160051b8701018488016000805b848110156200103f57898403603f19018652825180516001600160a01b03168552880151888501889052805188860181905290890190839060608701905b80831015620010295783516001600160e01b0319168252928b019260019290920191908b019062000ffd565b50978a0197955050509187019160010162000fbf565b50919998505050505050505050565b6000602080830181845280855180835260408601915060408160051b870101925083870160005b8281101562000f8a57878503603f19018452815180518087526200109f818989018a850162000e90565b601f01601f19169590950186019450928501929085019060010162001075565b600060208284031215620010d257600080fd5b81516001600160a01b038116811462000df457600080fd5b600181811c90821680620010ff57607f821691505b6020821081036200112057634e487b7160e01b600052602260045260246000fd5b50919050565b6001600160e01b03198316815281516000906200114b81600485016020870162000e90565b919091016004019392505050565b600082516200116d81846020870162000e90565b9190910192915050565b6000602082840312156200118a57600080fd5b8151801515811462000df457600080fd5b6000816000190483118215151615620011c457634e487b7160e01b600052601160045260246000fd5b50029056fe608060405234801561001057600080fd5b50610195806100206000396000f3fe608060405234801561001057600080fd5b506004361061002b5760003560e01c80630a9254e414610030575b600080fd5b610038610054565b6040516001600160a01b03909116815260200160405180910390f35b600060405161006290610084565b604051809103906000f08015801561007e573d6000803e3d6000fd5b50905090565b60cf806100918339019056fe608060405234801561001057600080fd5b504260005560ac806100236000396000f3fe6080604052348015600f57600080fd5b506004361060325760003560e01c806322f8e56614603757806329cb924d146049575b600080fd5b60476042366004605e565b600055565b005b60005460405190815260200160405180910390f35b600060208284031215606f57600080fd5b503591905056fea2646970667358221220ac5277a6d951fefada8e9d179a43cc6317941f75cad69224364e3024cf39f58e64736f6c63430008100033a26469706673582212207d8871378c623a5dea15cfb24a39319d130f503849e860fc71f867f1c69297ba64736f6c63430008100033608060405234801561001057600080fd5b5061001a3361001f565b61006f565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6104028061007e6000396000f3fe608060405234801561001057600080fd5b50600436106100625760003560e01c806331f9665e14610067578063715018a61461007c5780638da5cb5b14610084578063aafd5e40146100ad578063cc48f4db146100c0578063f2fde38b146100e9575b600080fd5b61007a610075366004610330565b6100fc565b005b61007a610188565b6000546001600160a01b03165b6040516001600160a01b03909116815260200160405180910390f35b6100916100bb36600461035c565b6101be565b6100916100ce36600461035c565b6001602052600090815260409020546001600160a01b031681565b61007a6100f7366004610375565b610229565b6000546001600160a01b0316331461012f5760405162461bcd60e51b815260040161012690610397565b60405180910390fd5b60008281526001602052604080822080546001600160a01b0319166001600160a01b0385169081179091559051909184917fb29aa13e555039289e0513962835b00fcc6e4a265ae8f99e68e5b90d5406fe489190a35050565b6000546001600160a01b031633146101b25760405162461bcd60e51b815260040161012690610397565b6101bc60006102c4565b565b6000818152600160205260408120546001600160a01b0316806102235760405162461bcd60e51b815260206004820152601860248201527f496d706c656d656e746174696f6e206e6f7420666f756e6400000000000000006044820152606401610126565b92915050565b6000546001600160a01b031633146102535760405162461bcd60e51b815260040161012690610397565b6001600160a01b0381166102b85760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608401610126565b6102c1816102c4565b50565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b80356001600160a01b038116811461032b57600080fd5b919050565b6000806040838503121561034357600080fd5b8235915061035360208401610314565b90509250929050565b60006020828403121561036e57600080fd5b5035919050565b60006020828403121561038757600080fd5b61039082610314565b9392505050565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260408201526060019056fea26469706673582212200252ff2d138f6d885f918d0a2b22e867dd71bd3438f512cd1d4016487f70090264736f6c6343000810003360806040523480156200001157600080fd5b5060405162001f8b38038062001f8b833981016040819052620000349162000655565b600280546001600160a01b0319166001600160a01b0383161790556200005d600080336200008b565b6200006c6001600033620001ec565b620000778362000203565b620000828262000300565b505050620006f5565b826000808281526020819052604090206001015460ff166002811115620000b657620000b6620006b1565b14620001095760405162461bcd60e51b815260206004820152601e60248201527f43616e6e6f74207573652061207072652d6578697374696e6720726f6c65000060448201526064015b60405180910390fd5b60008481526020819052604090206001808201805460ff191682800217905550838155620001476002820184620003f7602090811b62000dd717901c565b60008481526020819052604081206001015460ff166002811115620001705762000170620006b1565b03620001e55760405162461bcd60e51b815260206004820152603c60248201527f417474656d7074656420746f2075736520616e20696e76616c696420726f6c6560448201527f20746f206d616e61676520616e206578636c757369766520726f6c6500000000606482015260840162000100565b5050505050565b6001839055620001fe8383836200008b565b505050565b600062000211813362000407565b620002595760405162461bcd60e51b8152602060048201526022602482015260008051602062001f6b8339815191526044820152616c6560f01b606482015260840162000100565b62000274600183620004df60201b62000de11790919060201c565b620002c25760405162461bcd60e51b815260206004820152601e60248201527f466565206d757374206265203c203130302520706572207365636f6e642e0000604482015260640162000100565b815160038190556040519081527e41cf46cedaae9927def5c0647b190fd958c8ab8cde4219dad74319bc05d3d9906020015b60405180910390a15050565b60006200030e813362000407565b620003565760405162461bcd60e51b8152602060048201526022602482015260008051602062001f6b8339815191526044820152616c6560f01b606482015260840162000100565b62000371600183620004df60201b62000de11790919060201c565b620003bf5760405162461bcd60e51b815260206004820152601f60248201527f7765656b6c792064656c617920666565206d757374206265203c203130302500604482015260640162000100565b815160048190556040519081527f2e6cd3e6f7808568620c647ac0e652b0e95bef2494692adbc118fbbd02a8e82e90602001620002f4565b620004038282620004f8565b5050565b600082815260208190526040812060018082015460ff166002811115620004325762000432620006b1565b036200045e576200045583826002016200057960201b62000df81790919060201c565b915050620004d9565b6002600182015460ff1660028111156200047c576200047c620006b1565b036200049f576200045583826003016200058c60201b62000e0b1790919060201c565b60405162461bcd60e51b815260206004820152600e60248201526d125b9d985b1a59081c9bdb19525960921b604482015260640162000100565b92915050565b6000620004ec82620005ab565b51835110905092915050565b6001600160a01b0381166200055c5760405162461bcd60e51b815260206004820152602360248201527f43616e6e6f742073657420616e206578636c757369766520726f6c6520746f2060448201526203078360ec1b606482015260840162000100565b81546001600160a01b0319166001600160a01b0391909116179055565b90546001600160a01b0391821691161490565b6001600160a01b03166000908152602091909152604090205460ff1690565b6040805160208101909152600081526040518060200160405280620005e7670de0b6b3a764000085620005ef60201b62000e2a1790919060201c565b905292915050565b6000620005fd8284620006c7565b9392505050565b6000602082840312156200061757600080fd5b604051602081016001600160401b03811182821017156200064857634e487b7160e01b600052604160045260246000fd5b6040529151825250919050565b6000806000606084860312156200066b57600080fd5b62000677858562000604565b925062000688856020860162000604565b60408501519092506001600160a01b0381168114620006a657600080fd5b809150509250925092565b634e487b7160e01b600052602160045260246000fd5b6000816000190483118215151615620006f057634e487b7160e01b600052601160045260246000fd5b500290565b61186680620007056000396000f3fe6080604052600436106101355760003560e01c80637d69dfdb116100ab578063ab3545e51161006f578063ab3545e5146103b1578063acb6f6cb146103d1578063b187487d146103f1578063bd1f4b5214610411578063cd3a9b2414610431578063d97c05be1461043957600080fd5b80637d69dfdb146103235780637e7e591d1461033a57806384ae2a741461035a5780638659d23214610371578063aaa14ca31461039157600080fd5b80635b97aadd116100fd5780635b97aadd146101f35780636be7658b146102515780636f356f4a1461027157806374201feb1461029e57806374d0a676146102d35780637cdc1cb9146102f357600080fd5b80631c39c38d1461013a57806322f8e5661461017757806329cb924d146101995780632e1a7d4d146101bc5780632fee2098146101dc575b600080fd5b34801561014657600080fd5b5060025461015a906001600160a01b031681565b6040516001600160a01b0390911681526020015b60405180910390f35b34801561018357600080fd5b5061019761019236600461142b565b610459565b005b3480156101a557600080fd5b506101ae6104cf565b60405190815260200161016e565b3480156101c857600080fd5b506101976101d736600461142b565b610564565b3480156101e857600080fd5b506003546101ae9081565b3480156101ff57600080fd5b5061024261020e366004611460565b60408051602080820183526000918290526001600160a01b0393909316815260058352819020815192830190915254815290565b6040519051815260200161016e565b34801561025d57600080fd5b5061019761026c36600461147b565b6105a4565b34801561027d57600080fd5b506101ae61028c366004611460565b60056020526000908152604090205481565b3480156102aa57600080fd5b506102be6102b93660046114bf565b61067a565b6040805192518352905160208301520161016e565b3480156102df57600080fd5b506101976102ee36600461147b565b610740565b3480156102ff57600080fd5b5061031361030e36600461147b565b610816565b604051901515815260200161016e565b34801561032f57600080fd5b506004546101ae9081565b34801561034657600080fd5b50610197610355366004611545565b6108cb565b34801561036657600080fd5b506101ae62093a8081565b34801561037d57600080fd5b5061019761038c366004611570565b61094f565b34801561039d57600080fd5b506101976103ac36600461142b565b6109d1565b3480156103bd57600080fd5b5061015a6103cc36600461142b565b610a8d565b3480156103dd57600080fd5b506101976103ec36600461159b565b610af8565b3480156103fd57600080fd5b5061019761040c36600461159b565b610bb5565b34801561041d57600080fd5b5061019761042c3660046115b7565b610c6b565b610197610caf565b34801561044557600080fd5b5061019761045436600461147b565b610d01565b6002546001600160a01b031661046e57600080fd5b60025460405163117c72b360e11b8152600481018390526001600160a01b03909116906322f8e56690602401600060405180830381600087803b1580156104b457600080fd5b505af11580156104c8573d6000803e3d6000fd5b5050505050565b6002546000906001600160a01b03161561055f57600260009054906101000a90046001600160a01b03166001600160a01b03166329cb924d6040518163ffffffff1660e01b8152600401602060405180830381865afa158015610536573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061055a91906115e1565b905090565b504290565b6001546105718133610816565b6105965760405162461bcd60e51b815260040161058d906115fa565b60405180910390fd5b6105a03383610e36565b5050565b81600260008281526020819052604090206001015460ff1660028111156105cd576105cd61163c565b146105ea5760405162461bcd60e51b815260040161058d90611652565b60008381526020819052604090205483906106059033610816565b6106215760405162461bcd60e51b815260040161058d9061169e565b600084815260208190526040902061063c9060030184610f4f565b60405133906001600160a01b0385169086907feb3e33034c392e69263b04ec0fa376dc12784a41b6676c7f31b936cbc0fbb5af90600090a450505050565b60408051602081019091526000815260408051602081019091526000815260006106a48587610f71565b604080516020810190915260035481529091506106da906106d4836106ce3689900389018961159b565b90610f7d565b90610fae565b925060006106f0876106ea6104cf565b90610f71565b9050600061071a6107048362093a80610feb565b6040805160208101909152600454815290610f7d565b9050610733816106d4856106ce368b90038b018b61159b565b9350505050935093915050565b81600260008281526020819052604090206001015460ff1660028111156107695761076961163c565b146107865760405162461bcd60e51b815260040161058d90611652565b60008381526020819052604090205483906107a19033610816565b6107bd5760405162461bcd60e51b815260040161058d9061169e565b60008481526020819052604090206107d89060030184610ff7565b60405133906001600160a01b0385169086907f63502af7324ff6db91ab38f8236a648727d9385ea6c782073dd4882d8a61a48f90600090a450505050565b600082815260208190526040812060018082015460ff16600281111561083e5761083e61163c565b0361085f5760028101546001600160a01b038481169116145b9150506108c5565b6002600182015460ff16600281111561087a5761087a61163c565b0361088c576108576003820184610e0b565b60405162461bcd60e51b815260206004820152600e60248201526d125b9d985b1a59081c9bdb19525960921b604482015260640161058d565b92915050565b60006108d78133610816565b6108f35760405162461bcd60e51b815260040161058d906115fa565b6001600160a01b0383166000908152600560205260409081902083519055517f98c807f575ae6584ff8200eaf3205f3f20abf9c954fff030c152f5e7c5446d6e90610942908451815260200190565b60405180910390a1505050565b8161096a60006109643685900385018561159b565b90611072565b6109b65760405162461bcd60e51b815260206004820152601960248201527f416d6f756e742073656e742063616e2774206265207a65726f00000000000000604482015260640161058d565b6109cc6001600160a01b03821633308535611089565b505050565b80600260008281526020819052604090206001015460ff1660028111156109fa576109fa61163c565b14610a175760405162461bcd60e51b815260040161058d90611652565b81610a228133610816565b610a3e5760405162461bcd60e51b815260040161058d906115fa565b6000838152602081905260409020610a599060030133610f4f565b6040513390819085907feb3e33034c392e69263b04ec0fa376dc12784a41b6676c7f31b936cbc0fbb5af90600090a4505050565b600081600160008281526020819052604090206001015460ff166002811115610ab857610ab861163c565b14610ad55760405162461bcd60e51b815260040161058d906116e2565b6000838152602081905260409020600201546001600160a01b03165b9392505050565b6000610b048133610816565b610b205760405162461bcd60e51b815260040161058d906115fa565b610b2b826001610de1565b610b775760405162461bcd60e51b815260206004820152601e60248201527f466565206d757374206265203c203130302520706572207365636f6e642e0000604482015260640161058d565b815160038190556040519081527e41cf46cedaae9927def5c0647b190fd958c8ab8cde4219dad74319bc05d3d9906020015b60405180910390a15050565b6000610bc18133610816565b610bdd5760405162461bcd60e51b815260040161058d906115fa565b610be8826001610de1565b610c345760405162461bcd60e51b815260206004820152601f60248201527f7765656b6c792064656c617920666565206d757374206265203c203130302500604482015260640161058d565b815160048190556040519081527f2e6cd3e6f7808568620c647ac0e652b0e95bef2494692adbc118fbbd02a8e82e90602001610ba9565b600154610c788133610816565b610c945760405162461bcd60e51b815260040161058d906115fa565b82610ca96001600160a01b03821633856110f4565b50505050565b60003411610cff5760405162461bcd60e51b815260206004820152601860248201527f56616c75652073656e742063616e2774206265207a65726f0000000000000000604482015260640161058d565b565b81600160008281526020819052604090206001015460ff166002811115610d2a57610d2a61163c565b14610d475760405162461bcd60e51b815260040161058d906116e2565b6000838152602081905260409020548390610d629033610816565b610d7e5760405162461bcd60e51b815260040161058d9061169e565b6000848152602081905260409020610d999060020184611124565b60405133906001600160a01b0385169086907f3b855c56b409b671c7112789d022675eb639d0bcb8896f1b6197c132f799e74690600090a450505050565b6105a08282611124565b6000610dec826111a3565b51835110905092915050565b90546001600160a01b0391821691161490565b6001600160a01b03166000908152602091909152604090205460ff1690565b6000610af18284611747565b80471015610e865760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a20696e73756666696369656e742062616c616e6365000000604482015260640161058d565b6000826001600160a01b03168260405160006040518083038185875af1925050503d8060008114610ed3576040519150601f19603f3d011682016040523d82523d6000602084013e610ed8565b606091505b50509050806109cc5760405162461bcd60e51b815260206004820152603a60248201527f416464726573733a20756e61626c6520746f2073656e642076616c75652c207260448201527f6563697069656e74206d61792068617665207265766572746564000000000000606482015260840161058d565b6001600160a01b0316600090815260209190915260409020805460ff19169055565b6000610af18284611766565b604080516020810190915260008152604080516020810190915283518190610fa59085610e2a565b90529392505050565b6040805160208101909152600081526040805160208101909152825184518291670de0b6b3a764000091610fe191610e2a565b610fa59190611779565b6000610af18284611779565b6001600160a01b03811661104d5760405162461bcd60e51b815260206004820152601f60248201527f43616e6e6f74206164642030783020746f20612073686172656420726f6c6500604482015260640161058d565b6001600160a01b0316600090815260209190915260409020805460ff19166001179055565b600061107d826111a3565b51835111905092915050565b6040516001600160a01b0380851660248301528316604482015260648101829052610ca99085906323b872dd60e01b906084015b60408051601f198184030181529190526020810180516001600160e01b03166001600160e01b0319909316929092179091526111d8565b6040516001600160a01b0383166024820152604481018290526109cc90849063a9059cbb60e01b906064016110bd565b6001600160a01b0381166111865760405162461bcd60e51b815260206004820152602360248201527f43616e6e6f742073657420616e206578636c757369766520726f6c6520746f2060448201526203078360ec1b606482015260840161058d565b81546001600160a01b0319166001600160a01b0391909116179055565b6040805160208101909152600081526040805160208101909152806111d084670de0b6b3a7640000610e2a565b905292915050565b600061122d826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b03166112aa9092919063ffffffff16565b8051909150156109cc578080602001905181019061124b919061179b565b6109cc5760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b606482015260840161058d565b60606112b984846000856112c1565b949350505050565b6060824710156113225760405162461bcd60e51b815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f6044820152651c8818d85b1b60d21b606482015260840161058d565b6001600160a01b0385163b6113795760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000604482015260640161058d565b600080866001600160a01b0316858760405161139591906117e1565b60006040518083038185875af1925050503d80600081146113d2576040519150601f19603f3d011682016040523d82523d6000602084013e6113d7565b606091505b50915091506113e78282866113f2565b979650505050505050565b60608315611401575081610af1565b8251156114115782518084602001fd5b8160405162461bcd60e51b815260040161058d91906117fd565b60006020828403121561143d57600080fd5b5035919050565b80356001600160a01b038116811461145b57600080fd5b919050565b60006020828403121561147257600080fd5b610af182611444565b6000806040838503121561148e57600080fd5b8235915061149e60208401611444565b90509250929050565b6000602082840312156114b957600080fd5b50919050565b6000806000606084860312156114d457600080fd5b83359250602084013591506114ec85604086016114a7565b90509250925092565b60006020828403121561150757600080fd5b6040516020810181811067ffffffffffffffff8211171561153857634e487b7160e01b600052604160045260246000fd5b6040529135825250919050565b6000806040838503121561155857600080fd5b61156183611444565b915061149e84602085016114f5565b6000806040838503121561158357600080fd5b61158c83611444565b915061149e84602085016114a7565b6000602082840312156115ad57600080fd5b610af183836114f5565b600080604083850312156115ca57600080fd5b6115d383611444565b946020939093013593505050565b6000602082840312156115f357600080fd5b5051919050565b60208082526022908201527f53656e64657220646f6573206e6f7420686f6c6420726571756972656420726f6040820152616c6560f01b606082015260800190565b634e487b7160e01b600052602160045260246000fd5b6020808252602c908201527f4d7573742062652063616c6c6564206f6e20616e20696e697469616c697a656460408201526b2053686172656420726f6c6560a01b606082015260800190565b60208082526024908201527f43616e206f6e6c792062652063616c6c6564206279206120726f6c65206d616e60408201526330b3b2b960e11b606082015260800190565b6020808252602f908201527f4d7573742062652063616c6c6564206f6e20616e20696e697469616c697a656460408201526e204578636c757369766520726f6c6560881b606082015260800190565b634e487b7160e01b600052601160045260246000fd5b600081600019048311821515161561176157611761611731565b500290565b818103818111156108c5576108c5611731565b60008261179657634e487b7160e01b600052601260045260246000fd5b500490565b6000602082840312156117ad57600080fd5b81518015158114610af157600080fd5b60005b838110156117d85781810151838201526020016117c0565b50506000910152565b600082516117f38184602087016117bd565b9190910192915050565b602081526000825180602084015261181c8160408501602087016117bd565b601f01601f1916919091016040019291505056fea26469706673582212200e1fb084c8982e7255d560e846cc4c6ad74c5f9a9b38149bdde7bb884a481b1b64736f6c6343000810003353656e64657220646f6573206e6f7420686f6c6420726571756972656420726f608060405234801561001057600080fd5b5061001a33610032565b6000805460ff60a01b1916600160a01b179055610082565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6108cd806100916000396000f3fe608060405234801561001057600080fd5b50600436106100935760003560e01c80638da5cb5b116100665780638da5cb5b146101085780639b19251a14610119578063d01f63f514610149578063e43252d71461015e578063f2fde38b1461017157600080fd5b806337797c08146100985780633a3ab672146100c8578063715018a6146100eb5780638ab1d681146100f5575b600080fd5b6100ab6100a636600461073b565b610184565b6040516001600160a01b0390911681526020015b60405180910390f35b6100db6100d6366004610754565b6101ae565b60405190151581526020016100bf565b6100f36101ee565b005b6100f3610103366004610754565b61022d565b6000546001600160a01b03166100ab565b61013c610127366004610754565b60016020526000908152604090205460ff1681565b6040516100bf919061079a565b61015161030a565b6040516100bf91906107c2565b6100f361016c366004610754565b6104a0565b6100f361017f366004610754565b6105fa565b6002818154811061019457600080fd5b6000918252602090912001546001600160a01b0316905081565b60006101b8610692565b60016001600160a01b03831660009081526001602052604090205460ff1660028111156101e7576101e7610784565b1492915050565b6000546001600160a01b031633146102215760405162461bcd60e51b81526004016102189061080f565b60405180910390fd5b61022b60006106eb565b565b610235610692565b6102476000805460ff60a01b19169055565b6000546001600160a01b031633146102715760405162461bcd60e51b81526004016102189061080f565b60026001600160a01b03821660009081526001602052604090205460ff1660028111156102a0576102a0610784565b146102ef576001600160a01b038116600081815260016020526040808220805460ff19166002179055517fcdd2e9b91a56913d370075169cefa1602ba36be5301664f752192bb1709df7579190a25b6103076000805460ff60a01b1916600160a01b179055565b50565b6060610314610692565b6000805b6002548110156103985760018060006002848154811061033a5761033a610844565b60009182526020808320909101546001600160a01b0316835282019290925260400190205460ff16600281111561037357610373610784565b0361038657816103828161085a565b9250505b806103908161085a565b915050610318565b508067ffffffffffffffff8111156103b2576103b2610881565b6040519080825280602002602001820160405280156103db578160200160208202803683370190505b5091506000905060005b60025481101561049b5760006002828154811061040457610404610844565b6000918252602090912001546001600160a01b0316905060016001600160a01b03821660009081526001602052604090205460ff16600281111561044a5761044a610784565b03610488578084848151811061046257610462610844565b6001600160a01b0390921660209283029190910190910152826104848161085a565b9350505b50806104938161085a565b9150506103e5565b505090565b6104a8610692565b6104ba6000805460ff60a01b19169055565b6000546001600160a01b031633146104e45760405162461bcd60e51b81526004016102189061080f565b60016001600160a01b03821660009081526001602052604090205460ff16600281111561051357610513610784565b146102ef576001600160a01b03811660009081526001602052604081205460ff16600281111561054557610545610784565b0361059657600280546001810182556000919091527f405787fa12a823e0f2b7631cc41b3ba8828b3321ca811111fa75cd3aa3bb5ace0180546001600160a01b0319166001600160a01b0383161790555b6001600160a01b0381166000818152600160208190526040808320805460ff1916909217909155517fa850ae9193f515cbae8d35e8925bd2be26627fc91bce650b8652ed254e9cab039190a26103076000805460ff60a01b1916600160a01b179055565b6000546001600160a01b031633146106245760405162461bcd60e51b81526004016102189061080f565b6001600160a01b0381166106895760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608401610218565b610307816106eb565b600054600160a01b900460ff1661022b5760405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c006044820152606401610218565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b60006020828403121561074d57600080fd5b5035919050565b60006020828403121561076657600080fd5b81356001600160a01b038116811461077d57600080fd5b9392505050565b634e487b7160e01b600052602160045260246000fd5b60208101600383106107bc57634e487b7160e01b600052602160045260246000fd5b91905290565b6020808252825182820181905260009190848201906040850190845b818110156108035783516001600160a01b0316835292840192918401916001016107de565b50909695505050505050565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b634e487b7160e01b600052603260045260246000fd5b60006001820161087a57634e487b7160e01b600052601160045260246000fd5b5060010190565b634e487b7160e01b600052604160045260246000fdfea264697066735822122012579754682d9ca0b43a16b3094418ed8aa5ee7031d0fb774b381905d2c9cf5e64736f6c63430008100033608060405234801561001057600080fd5b5061001a3361001f565b61006f565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6103dc8061007e6000396000f3fe608060405234801561001057600080fd5b50600436106100625760003560e01c806310a7e20114610067578063715018a61461007c5780638da5cb5b146100845780638e0d3ca7146100a457806390978d1b146100b7578063f2fde38b146100ea575b600080fd5b61007a610075366004610328565b6100fd565b005b61007a61018d565b6000546040516001600160a01b0390911681526020015b60405180910390f35b61007a6100b2366004610328565b6101c3565b6100da6100c5366004610328565b60009081526001602052604090205460ff1690565b604051901515815260200161009b565b61007a6100f8366004610341565b610244565b6000546001600160a01b031633146101305760405162461bcd60e51b815260040161012790610371565b60405180910390fd5b60008181526001602052604090205460ff1661018a576000818152600160208190526040808320805460ff19169092179091555182917fa0ca1076d765c13772089a90b5121cf6ddf63c9f7891c4e5031adbc85936b27691a25b50565b6000546001600160a01b031633146101b75760405162461bcd60e51b815260040161012790610371565b6101c160006102d8565b565b6000546001600160a01b031633146101ed5760405162461bcd60e51b815260040161012790610371565b60008181526001602052604090205460ff161561018a57600081815260016020526040808220805460ff191690555182917fefdf15ca0f9402bd4e933b0edb0db65b23cc50d27cb010d8abcadaae4fa944e591a250565b6000546001600160a01b0316331461026e5760405162461bcd60e51b815260040161012790610371565b6001600160a01b0381166102d35760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608401610127565b61018a815b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b60006020828403121561033a57600080fd5b5035919050565b60006020828403121561035357600080fd5b81356001600160a01b038116811461036a57600080fd5b9392505050565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260408201526060019056fea26469706673582212200420ad640ea5d694ea28017924c73d0062ff64bd9ac631618e6fb3c5d0ca8aeb64736f6c63430008100033a2646970667358221220c74f5ca068d51d49125bff8669b3874b1237cd8193f4156aba9d1b2e7b22cab564736f6c63430008100033608060405234801561001057600080fd5b5060405161121838038061121883398101604081905261002f9161007f565b600080546001600160a01b039283166001600160a01b031991821617909155600180549390921692169190911790556100b2565b80516001600160a01b038116811461007a57600080fd5b919050565b6000806040838503121561009257600080fd5b61009b83610063565b91506100a960208401610063565b90509250929050565b611157806100c16000396000f3fe608060405234801561001057600080fd5b506004361061009e5760003560e01c8063719c6d5611610066578063719c6d5614610131578063b551cd5014610144578063b555d60814610167578063d7d6f43d1461017c578063f76177cf1461018f57600080fd5b80631c39c38d146100a3578063216666a4146100d357806322f8e566146100e857806329cb924d146100fb5780636a5ef50614610111575b600080fd5b6000546100b6906001600160a01b031681565b6040516001600160a01b0390911681526020015b60405180910390f35b6100e66100e1366004610c0f565b6101a2565b005b6100e66100f6366004610c5f565b61039c565b61010361040b565b6040519081526020016100ca565b61012461011f366004610c5f565b61049c565b6040516100ca9190610cef565b61010361013f366004610c0f565b6105f1565b610157610152366004610c0f565b610630565b60405190151581526020016100ca565b61016f61065f565b6040516100ca9190610d09565b6100e661018a366004610d6b565b610764565b6100e661019d366004610dc3565b610a33565b6101aa610a5d565b6001600160a01b03166390978d1b846040518263ffffffff1660e01b81526004016101d791815260200190565b602060405180830381865afa1580156101f4573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102189190610de5565b61022157600080fd5b600061022e848484610ae0565b600081815260026020526040902080549192509060ff16158015610261575060008281526003602052604090205460ff16155b15610395576040805180820182526001808252600480546020808501918252600088815260038083528782209651875490151560ff1990911617875592519585019590955585516060810187528b81529081018a81529581018981528354948501845592909452835192027f8a35acfbc15ff81a39ae7d344fd709f28e8600b4aa8c65c6b64bfe7fe36bd19b810192835593517f8a35acfbc15ff81a39ae7d344fd709f28e8600b4aa8c65c6b64bfe7fe36bd19c85015551919290917f8a35acfbc15ff81a39ae7d344fd709f28e8600b4aa8c65c6b64bfe7fe36bd19d9091019061034c9082610e8f565b5050508185336001600160a01b03167f5b89fcc758ee4d9d8841986019cd2bb83213389a619b54baff9ec2ec9944e7a7878760405161038c929190610f4f565b60405180910390a45b5050505050565b6000546001600160a01b03166103b157600080fd5b60005460405163117c72b360e11b8152600481018390526001600160a01b03909116906322f8e56690602401600060405180830381600087803b1580156103f757600080fd5b505af1158015610395573d6000803e3d6000fd5b600080546001600160a01b0316156104975760008054906101000a90046001600160a01b03166001600160a01b03166329cb924d6040518163ffffffff1660e01b8152600401602060405180830381865afa15801561046e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104929190610f68565b905090565b504290565b604080516060808201835260008083526020830152918101919091526000828152600360205260409020805460ff166105135760405162461bcd60e51b815260206004820152601460248201527314995c5d595cdd081251081b9bdd08199bdd5b9960621b60448201526064015b60405180910390fd5b600481600101548154811061052a5761052a610f81565b9060005260206000209060030201604051806060016040529081600082015481526020016001820154815260200160028201805461056790610e07565b80601f016020809104026020016040519081016040528092919081815260200182805461059390610e07565b80156105e05780601f106105b5576101008083540402835291602001916105e0565b820191906000526020600020905b8154815290600101906020018083116105c357829003601f168201915b505050505081525050915050919050565b60008060026000610603878787610ae0565b81526020810191909152604001600020805490915060ff1661062457600080fd5b60010154949350505050565b60008060026000610642878787610ae0565b815260208101919091526040016000205460ff1695945050505050565b60606004805480602002602001604051908101604052809291908181526020016000905b8282101561075b578382906000526020600020906003020160405180606001604052908160008201548152602001600182015481526020016002820180546106ca90610e07565b80601f01602080910402602001604051908101604052809291908181526020018280546106f690610e07565b80156107435780601f1061071857610100808354040283529160200191610743565b820191906000526020600020905b81548152906001019060200180831161072657829003601f168201915b50505050508152505081526020019060010190610683565b50505050905090565b6000610771858585610ae0565b9050604051806060016040528060011515815260200183815260200161079561040b565b905260008281526002602081815260408084208551815460ff1916901515178155858301516001820155948101519490920193909355600390925220805460ff166108385760405162461bcd60e51b815260206004820152602d60248201527f43616e2774207075736820707269636573207468617420686176656e2774206260448201526c19595b881c995c5d595cdd1959609a1b606482015260840161050a565b6001808201546000848152600360205260408120805460ff1916815583018190556004549192909161086a9190610f97565b90508181146109a05760006004828154811061088857610888610f81565b90600052602060002090600302019050826003600061093c846000015485600101548660020180546108b990610e07565b80601f01602080910402602001604051908101604052809291908181526020018280546108e590610e07565b80156109325780601f1061090757610100808354040283529160200191610932565b820191906000526020600020905b81548152906001019060200180831161091557829003601f168201915b5050505050610ae0565b815260200190815260200160002060010181905550806004848154811061096557610965610f81565b906000526020600020906003020160008201548160000155600182015481600101556002820181600201908161099b9190610fbe565b505050505b60048054806109b1576109b1611091565b60008281526020812060036000199093019283020181815560018101829055906109de6002830182610b16565b505090558388336001600160a01b03167f01aba42f88d71f240ed63f6e0b37e62ba65f3d4bc0f11228ef9163cdc56c64b58a8a8a604051610a21939291906110a7565b60405180910390a45050505050505050565b6000610a3e8361049c565b9050610a5881600001518260200151836040015185610764565b505050565b6001546040516302abf57960e61b8152721259195b9d1a599a595c95da1a5d195b1a5cdd606a1b60048201526000916001600160a01b03169063aafd5e4090602401602060405180830381865afa158015610abc573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061049291906110d0565b6000838383604051602001610af7939291906110f9565b6040516020818303038152906040528051906020012090509392505050565b508054610b2290610e07565b6000825580601f10610b32575050565b601f016020900490600052602060002090810190610b509190610b53565b50565b5b80821115610b685760008155600101610b54565b5090565b634e487b7160e01b600052604160045260246000fd5b600082601f830112610b9357600080fd5b813567ffffffffffffffff80821115610bae57610bae610b6c565b604051601f8301601f19908116603f01168101908282118183101715610bd657610bd6610b6c565b81604052838152866020858801011115610bef57600080fd5b836020870160208301376000602085830101528094505050505092915050565b600080600060608486031215610c2457600080fd5b8335925060208401359150604084013567ffffffffffffffff811115610c4957600080fd5b610c5586828701610b82565b9150509250925092565b600060208284031215610c7157600080fd5b5035919050565b6000815180845260005b81811015610c9e57602081850181015186830182015201610c82565b506000602082860101526020601f19601f83011685010191505092915050565b80518252602081015160208301526000604082015160606040850152610ce76060850182610c78565b949350505050565b602081526000610d026020830184610cbe565b9392505050565b6000602080830181845280855180835260408601915060408160051b870101925083870160005b82811015610d5e57603f19888603018452610d4c858351610cbe565b94509285019290850190600101610d30565b5092979650505050505050565b60008060008060808587031215610d8157600080fd5b8435935060208501359250604085013567ffffffffffffffff811115610da657600080fd5b610db287828801610b82565b949793965093946060013593505050565b60008060408385031215610dd657600080fd5b50508035926020909101359150565b600060208284031215610df757600080fd5b81518015158114610d0257600080fd5b600181811c90821680610e1b57607f821691505b602082108103610e3b57634e487b7160e01b600052602260045260246000fd5b50919050565b601f821115610a5857600081815260208120601f850160051c81016020861015610e685750805b601f850160051c820191505b81811015610e8757828155600101610e74565b505050505050565b815167ffffffffffffffff811115610ea957610ea9610b6c565b610ebd81610eb78454610e07565b84610e41565b602080601f831160018114610ef25760008415610eda5750858301515b600019600386901b1c1916600185901b178555610e87565b600085815260208120601f198616915b82811015610f2157888601518255948401946001909101908401610f02565b5085821015610f3f5787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b828152604060208201526000610ce76040830184610c78565b600060208284031215610f7a57600080fd5b5051919050565b634e487b7160e01b600052603260045260246000fd5b81810381811115610fb857634e487b7160e01b600052601160045260246000fd5b92915050565b818103610fc9575050565b610fd38254610e07565b67ffffffffffffffff811115610feb57610feb610b6c565b610ff981610eb78454610e07565b6000601f82116001811461102d57600083156110155750848201545b600019600385901b1c1916600184901b178455610395565b600085815260209020601f19841690600086815260209020845b838110156110675782860154825560019586019590910190602001611047565b5085831015610f3f5793015460001960f8600387901b161c19169092555050600190811b01905550565b634e487b7160e01b600052603160045260246000fd5b8381526060602082015260006110c06060830185610c78565b9050826040830152949350505050565b6000602082840312156110e257600080fd5b81516001600160a01b0381168114610d0257600080fd5b8381528260208201526060604082015260006111186060830184610c78565b9594505050505056fea2646970667358221220f4b1e35f6eb1f5816327034316343d8b6a7a59647aab0193187ab03600ae070964736f6c63430008100033a264697066735822122055db8847a4d7601c142031cd5c9ebcf936788623236ed26aff77f30c70420aeb64736f6c6343000810003360806040523480156200001157600080fd5b5060405162000cff38038062000cff833981016040819052620000349162000139565b828260036200004483826200024d565b5060046200005382826200024d565b50506005805460ff191660ff93909316929092179091555062000319915050565b634e487b7160e01b600052604160045260246000fd5b600082601f8301126200009c57600080fd5b81516001600160401b0380821115620000b957620000b962000074565b604051601f8301601f19908116603f01168101908282118183101715620000e457620000e462000074565b816040528381526020925086838588010111156200010157600080fd5b600091505b8382101562000125578582018301518183018401529082019062000106565b600093810190920192909252949350505050565b6000806000606084860312156200014f57600080fd5b83516001600160401b03808211156200016757600080fd5b62000175878388016200008a565b945060208601519150808211156200018c57600080fd5b506200019b868287016200008a565b925050604084015160ff81168114620001b357600080fd5b809150509250925092565b600181811c90821680620001d357607f821691505b602082108103620001f457634e487b7160e01b600052602260045260246000fd5b50919050565b601f8211156200024857600081815260208120601f850160051c81016020861015620002235750805b601f850160051c820191505b8181101562000244578281556001016200022f565b5050505b505050565b81516001600160401b0381111562000269576200026962000074565b62000281816200027a8454620001be565b84620001fa565b602080601f831160018114620002b95760008415620002a05750858301515b600019600386901b1c1916600185901b17855562000244565b600085815260208120601f198616915b82811015620002ea57888601518255948401946001909101908401620002c9565b5085821015620003095787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b6109d680620003296000396000f3fe608060405234801561001057600080fd5b50600436106100b45760003560e01c80633950935111610071578063395093511461014957806370a082311461015c57806395d89b4114610185578063a457c2d71461018d578063a9059cbb146101a0578063dd62ed3e146101b357600080fd5b806306fdde03146100b957806308bca566146100d7578063095ea7b3146100ec57806318160ddd1461010f57806323b872dd14610121578063313ce56714610134575b600080fd5b6100c16101ec565b6040516100ce9190610820565b60405180910390f35b6100ea6100e536600461088a565b61027e565b005b6100ff6100fa36600461088a565b61028c565b60405190151581526020016100ce565b6002545b6040519081526020016100ce565b6100ff61012f3660046108b4565b6102a6565b60055460405160ff90911681526020016100ce565b6100ff61015736600461088a565b6102ca565b61011361016a3660046108f0565b6001600160a01b031660009081526020819052604090205490565b6100c1610309565b6100ff61019b36600461088a565b610318565b6100ff6101ae36600461088a565b6103af565b6101136101c1366004610912565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b6060600380546101fb90610945565b80601f016020809104026020016040519081016040528092919081815260200182805461022790610945565b80156102745780601f1061024957610100808354040283529160200191610274565b820191906000526020600020905b81548152906001019060200180831161025757829003601f168201915b5050505050905090565b61028882826103bd565b5050565b60003361029a81858561049c565b60019150505b92915050565b6000336102b48582856105c0565b6102bf858585610652565b506001949350505050565b3360008181526001602090815260408083206001600160a01b038716845290915281205490919061029a908290869061030490879061097f565b61049c565b6060600480546101fb90610945565b3360008181526001602090815260408083206001600160a01b0387168452909152812054909190838110156103a25760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b60648201526084015b60405180910390fd5b6102bf828686840361049c565b60003361029a818585610652565b6001600160a01b0382166104135760405162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f2061646472657373006044820152606401610399565b8060026000828254610425919061097f565b90915550506001600160a01b0382166000908152602081905260408120805483929061045290849061097f565b90915550506040518181526001600160a01b038316906000907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9060200160405180910390a35050565b6001600160a01b0383166104fe5760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b6064820152608401610399565b6001600160a01b03821661055f5760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b6064820152608401610399565b6001600160a01b0383811660008181526001602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b6001600160a01b03838116600090815260016020908152604080832093861683529290522054600019811461064c578181101561063f5760405162461bcd60e51b815260206004820152601d60248201527f45524332303a20696e73756666696369656e7420616c6c6f77616e63650000006044820152606401610399565b61064c848484840361049c565b50505050565b6001600160a01b0383166106b65760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b6064820152608401610399565b6001600160a01b0382166107185760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b6064820152608401610399565b6001600160a01b038316600090815260208190526040902054818110156107905760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b6064820152608401610399565b6001600160a01b038085166000908152602081905260408082208585039055918516815290812080548492906107c790849061097f565b92505081905550826001600160a01b0316846001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8460405161081391815260200190565b60405180910390a361064c565b600060208083528351808285015260005b8181101561084d57858101830151858201604001528201610831565b506000604082860101526040601f19601f8301168501019250505092915050565b80356001600160a01b038116811461088557600080fd5b919050565b6000806040838503121561089d57600080fd5b6108a68361086e565b946020939093013593505050565b6000806000606084860312156108c957600080fd5b6108d28461086e565b92506108e06020850161086e565b9150604084013590509250925092565b60006020828403121561090257600080fd5b61090b8261086e565b9392505050565b6000806040838503121561092557600080fd5b61092e8361086e565b915061093c6020840161086e565b90509250929050565b600181811c9082168061095957607f821691505b60208210810361097957634e487b7160e01b600052602260045260246000fd5b50919050565b808201808211156102a057634e487b7160e01b600052601160045260246000fdfea264697066735822122079aea89302a931b65938f5024ef67c57f346deaaa1f56bc95931901dcbfee84264736f6c6343000810003360a06040523480156200001157600080fd5b5060405162003e9638038062003e9683398101604081905262000034916200065e565b6000805460ff191660011790558084848462000057620000513390565b620000a8565b6001600160a01b0383166080526200007982826706f05b59d3b2000062000101565b5050600780546001600160a01b0319166001600160a01b039390931692909217909155506200076d9350505050565b600080546001600160a01b03838116610100818102610100600160a81b0319851617855560405193049190911692909183917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a35050565b6000546001600160a01b03610100909104163314620001675760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064015b60405180910390fd5b670de0b6b3a7640000811115620001c15760405162461bcd60e51b815260206004820152601c60248201527f4275726e656420626f6e642070657263656e74616765203e203130300000000060448201526064016200015e565b60008111620002135760405162461bcd60e51b815260206004820152601b60248201527f4275726e656420626f6e642070657263656e746167652069732030000000000060448201526064016200015e565b6005819055600680546001600160401b038416600160a01b026001600160e01b03199091166001600160a01b03861617179055620002616b082a6a68aa4a8bea8a4aaa8960a31b84620002b8565b604080516001600160a01b03851681526001600160401b03841660208201529081018290527fd0f09246d369018534c67fec6a6c3259c6f962ef82c5521c337ae0ccc104e4bd9060600160405180910390a1505050565b6080516040516302abf57960e61b8152654f7261636c6560d01b60048201526001600160a01b039091169063aafd5e4090602401602060405180830381865afa1580156200030a573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620003309190620006d1565b600180546001600160a01b0319166001600160a01b03929092169190911790556200035a62000523565b6001600160a01b03166390978d1b836040518263ffffffff1660e01b81526004016200038891815260200190565b602060405180830381865afa158015620003a6573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620003cc9190620006f8565b6000838152600360205260409020805460ff1916911515919091179055620003f3620005b9565b604051631d1d5b3960e11b81526001600160a01b0383811660048301529190911690633a3ab67290602401602060405180830381865afa1580156200043c573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620004629190620006f8565b6001600160a01b0382166000908152600260205260409020805460ff1916911515919091179055620004936200060b565b604051635b97aadd60e01b81526001600160a01b0383811660048301529190911690635b97aadd90602401602060405180830381865afa158015620004dc573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200050291906200071c565b516001600160a01b0390911660009081526002602052604090206001015550565b6080516040516302abf57960e61b81527f4964656e74696669657257686974656c6973740000000000000000000000000060048201526000916001600160a01b03169063aafd5e40906024015b602060405180830381865afa1580156200058e573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620005b49190620006d1565b905090565b6080516040516302abf57960e61b81527f436f6c6c61746572616c57686974656c6973740000000000000000000000000060048201526000916001600160a01b03169063aafd5e409060240162000570565b6080516040516302abf57960e61b81526453746f726560d81b60048201526000916001600160a01b03169063aafd5e409060240162000570565b6001600160a01b03811681146200065b57600080fd5b50565b600080600080608085870312156200067557600080fd5b8451620006828162000645565b6020860151909450620006958162000645565b60408601519093506001600160401b0381168114620006b357600080fd5b6060860151909250620006c68162000645565b939692955090935050565b600060208284031215620006e457600080fd5b8151620006f18162000645565b9392505050565b6000602082840312156200070b57600080fd5b81518015158114620006f157600080fd5b6000602082840312156200072f57600080fd5b604051602081016001600160401b03811182821017156200076057634e487b7160e01b600052604160045260246000fd5b6040529151825250919050565b6080516136f1620007a560003960008181610578015281816116df01528181611fa701528181612607015261266c01526136f16000f3fe608060405234801561001057600080fd5b50600436106101c45760003560e01c80638da5cb5b116100f9578063b9a3c84c11610097578063da03b36e11610071578063da03b36e146106a4578063e39dfd7f146106b3578063f2fde38b146106c6578063fe4e1983146106d957600080fd5b8063b9a3c84c14610573578063d509b0171461059a578063d60715b5146105b057600080fd5b8063a7af2d0f116100d3578063a7af2d0f1461050d578063a865578514610520578063ac9650d814610533578063afedba4f1461055357600080fd5b80638da5cb5b146104d15780638ea2f2ab146104e7578063a6a22b43146104fa57600080fd5b80634360af3d11610166578063707621571161014057806370762157146102bf578063715018a614610303578063827625201461030b578063883028841461031e57600080fd5b80634360af3d14610266578063530dd392146102795780636457c979146102ac57600080fd5b806322f8e566116101a257806322f8e5661461022357806329cb924d1461023857806336b13af4146102405780634124beef1461025357600080fd5b806308e7c3e6146101c95780631c39c38d146101e557806320402e1d14610210575b600080fd5b6101d260055481565b6040519081526020015b60405180910390f35b6007546101f8906001600160a01b031681565b6040516001600160a01b0390911681526020016101dc565b6006546101f8906001600160a01b031681565b610236610231366004612c90565b61070b565b005b6101d2610781565b6101d261024e366004612cce565b610790565b610236610261366004612c90565b610817565b6101d2610274366004612d50565b610be1565b61029c610287366004612c90565b60036020526000908152604090205460ff1681565b60405190151581526020016101dc565b6101d26102ba366004612df1565b610c1c565b6102ec6102cd366004612d50565b6002602052600090815260409020805460019091015460ff9091169082565b6040805192151583526020830191909152016101dc565b610236611233565b610236610319366004612ee1565b61126f565b6104c461032c366004612c90565b6040805161022081018252600061018082018181526101a083018290526101c083018290526101e083018290526102008301829052825260208201819052918101829052606081018290526080810182905260a0810182905260c0810182905260e0810182905261010081018290526101208101829052610140810182905261016081019190915250600090815260046020818152604092839020835161022081018552815460ff80821615156101808401908152610100808404831615156101a0860152620100008404831615156101c08601526001600160a01b03630100000090940484166101e0860152600186015484166102008601529084526002850154808416968501969096526001600160401b03600160a01b808804821699860199909952600160e01b96879004831615156060860152600386015480851660808701529889041660a085015294909604909516151560c08201529281015460e08401526005810154918301919091526006810154610120830152600781015483166101408301526008015490911661016082015290565b6040516101dc9190612f61565b60005461010090046001600160a01b03166101f8565b61029c6104f5366004612c90565b6113ea565b61023661050836600461303b565b611422565b6001546101f8906001600160a01b031681565b61023661052e36600461303b565b6116c1565b61054661054136600461306b565b611935565b6040516101dc919061312f565b610566610561366004612c90565b611a8c565b6040516101dc9190613191565b6101f87f000000000000000000000000000000000000000000000000000000000000000081565b6101d26b082a6a68aa4a8bea8a4aaa8960a31b81565b61068c6105be366004612c90565b600460208181526000928352604092839020835160a081018552815460ff808216151583526101008204811615159483019490945262010000810484161515958201959095526001600160a01b0363010000009095048516606082015260018201548516608082015260028201546003830154948301546005840154600685015460078601546008909601549498848116986001600160401b03600160a01b80880482169a600160e01b9889900481169a8486169a928504909316989093049092169594939290811691168c565b6040516101dc9c9b9a999897969594939291906131a4565b6101d2670de0b6b3a764000081565b61029c6106c1366004612c90565b611a97565b6102366106d4366004612d50565b611c15565b6006546106f390600160a01b90046001600160401b031681565b6040516001600160401b0390911681526020016101dc565b6007546001600160a01b031661072057600080fd5b60075460405163117c72b360e11b8152600481018390526001600160a01b03909116906322f8e56690602401600060405180830381600087803b15801561076657600080fd5b505af115801561077a573d6000803e3d6000fd5b5050505050565b600061078b611cb3565b905090565b600061080d84848080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201829052506006548894509092508291506001600160401b03600160a01b820416906001600160a01b03166107f681610be1565b6b082a6a68aa4a8bea8a4aaa8960a31b6000610c1c565b90505b9392505050565b61081f611d43565b61082e6000805460ff19169055565b600081815260046020526040902060028101546001600160a01b03166108965760405162461bcd60e51b8152602060048201526018602482015277105cdcd95c9d1a5bdb88191bd95cc81b9bdd08195e1a5cdd60421b60448201526064015b60405180910390fd5b6002810154600160e01b900460ff16156108f25760405162461bcd60e51b815260206004820152601960248201527f417373657274696f6e20616c726561647920736574746c656400000000000000604482015260640161088d565b60028101805460ff60e01b1916600160e01b17905560088101546001600160a01b0316610a1857610921610781565b6003820154600160a01b90046001600160401b0316111561097c5760405162461bcd60e51b8152602060048201526015602482015274105cdcd95c9d1a5bdb881b9bdd08195e1c1a5c9959605a1b604482015260640161088d565b60038101805460ff60e01b198116600160e01b17909155600282015460068301546109b4926001600160a01b03908116921690611d95565b6109bf826001611dfd565b6002810154604080516000815260016020820152338183015290516001600160a01b039092169184917ff4fa324b13daeb4e1aae736c2553632ae0fb16fb31f2d4da8ac99fd056313a13919081900360600190a3610bcb565b60058101546002820154600091610a4191859190600160a01b90046001600160401b0316611f04565b8254909150610100900460ff1615610a675760038201805460ff60e01b19169055610a89565b60038201805460ff60e01b1916670de0b6b3a76400008314600160e01b021790555b6000670de0b6b3a76400008214610aad5760088301546001600160a01b0316610abc565b60028301546001600160a01b03165b90506000670de0b6b3a76400008460060154600554610adb919061323b565b610ae59190613270565b905060008185600601546002610afb919061323b565b610b059190613292565b9050610b27610b12611f87565b60038701546001600160a01b03169084611d95565b6003850154610b40906001600160a01b03168483611d95565b8454610100900460ff16610b68576003850154610b68908790600160e01b900460ff16611dfd565b60038501546040805160018152600160e01b90920460ff161515602083015233908201526001600160a01b0384169087907ff4fa324b13daeb4e1aae736c2553632ae0fb16fb31f2d4da8ac99fd056313a139060600160405180910390a3505050505b50610bde6000805460ff19166001179055565b50565b6001600160a01b038116600090815260026020526040812060010154600554610c1282670de0b6b3a764000061323b565b6108109190613270565b6000610c26611d43565b610c356000805460ff19169055565b6000610c3f610781565b9050610c5a8b86836001600160401b03168a8a8e8e8b61201b565b91506001600160a01b038a16610ca75760405162461bcd60e51b8152602060048201526012602482015271041737365727465722063616e7420626520360741b604482015260640161088d565b6000828152600460205260409020600201546001600160a01b031615610d0f5760405162461bcd60e51b815260206004820152601860248201527f417373657274696f6e20616c7265616479206578697374730000000000000000604482015260640161088d565b610d1884612062565b610d5d5760405162461bcd60e51b81526020600482015260166024820152752ab739bab83837b93a32b21034b232b73a34b334b2b960511b604482015260640161088d565b610d668661211b565b610da95760405162461bcd60e51b8152602060048201526014602482015273556e737570706f727465642063757272656e637960601b604482015260640161088d565b610db286610be1565b851015610df75760405162461bcd60e51b8152602060048201526013602482015272426f6e6420616d6f756e7420746f6f206c6f7760681b604482015260640161088d565b6040805161022081018252600061018082018181526101a083018290526101c08301829052336101e08401526001600160a01b038c81166102008501529083528d811660208401526001600160401b038516938301939093526060820152908716608082015260a08101610e6b89846132a5565b6001600160401b031681526020016000151581526020018481526020018581526020018681526020018a6001600160a01b0316815260200160006001600160a01b03168152506004600084815260200190815260200160002060008201518160000160008201518160000160006101000a81548160ff02191690831515021790555060208201518160000160016101000a81548160ff02191690831515021790555060408201518160000160026101000a81548160ff02191690831515021790555060608201518160000160036101000a8154816001600160a01b0302191690836001600160a01b0316021790555060808201518160010160006101000a8154816001600160a01b0302191690836001600160a01b03160217905550505060208201518160020160006101000a8154816001600160a01b0302191690836001600160a01b0316021790555060408201518160020160146101000a8154816001600160401b0302191690836001600160401b03160217905550606082015181600201601c6101000a81548160ff02191690831515021790555060808201518160030160006101000a8154816001600160a01b0302191690836001600160a01b0316021790555060a08201518160030160146101000a8154816001600160401b0302191690836001600160401b0316021790555060c082015181600301601c6101000a81548160ff02191690831515021790555060e08201518160040155610100820151816005015561012082015181600601556101408201518160070160006101000a8154816001600160a01b0302191690836001600160a01b031602179055506101608201518160080160006101000a8154816001600160a01b0302191690836001600160a01b0316021790555090505060006111078361227d565b8051909150156111515760405162461bcd60e51b8152602060048201526015602482015274105cdcd95c9d1a5bdb881b9bdd08185b1b1bddd959605a1b604482015260640161088d565b6000838152600460209081526040918290209083015191830151606090930151815462ffff001916620100009115159190910261ff00191617610100931515939093029290921760ff19169015151790556111b76001600160a01b038716333088612352565b838a6001600160a01b0316837fdb1513f0abeb57a364db56aa3eb52015cca5268f00fd67bc73aaf22bccab02b7868f8e8e338f8a6111f591906132a5565b8f8f60405161120b9897969594939291906132c5565b60405180910390a4506112266000805460ff19166001179055565b9998505050505050505050565b6000546001600160a01b036101009091041633146112635760405162461bcd60e51b815260040161088d90613327565b61126d600061238a565b565b6000546001600160a01b0361010090910416331461129f5760405162461bcd60e51b815260040161088d90613327565b670de0b6b3a76400008111156112f75760405162461bcd60e51b815260206004820152601c60248201527f4275726e656420626f6e642070657263656e74616765203e2031303000000000604482015260640161088d565b600081116113475760405162461bcd60e51b815260206004820152601b60248201527f4275726e656420626f6e642070657263656e7461676520697320300000000000604482015260640161088d565b6005819055600680546001600160401b038416600160a01b026001600160e01b03199091166001600160a01b038616171790556113936b082a6a68aa4a8bea8a4aaa8960a31b846116c1565b604080516001600160a01b03851681526001600160401b03841660208201529081018290527fd0f09246d369018534c67fec6a6c3259c6f962ef82c5521c337ae0ccc104e4bd9060600160405180910390a1505050565b600081815260046020526040812060020154600160e01b900460ff166114135761141382610817565b61141c82611a97565b92915050565b61142a611d43565b6114396000805460ff19169055565b6001600160a01b0381166114855760405162461bcd60e51b8152602060048201526013602482015272044697370757465722063616e2774206265203606c1b604482015260640161088d565b600082815260046020526040902060028101546001600160a01b03166114e85760405162461bcd60e51b8152602060048201526018602482015277105cdcd95c9d1a5bdb88191bd95cc81b9bdd08195e1a5cdd60421b604482015260640161088d565b60088101546001600160a01b0316156115435760405162461bcd60e51b815260206004820152601a60248201527f417373657274696f6e20616c7265616479206469737075746564000000000000604482015260640161088d565b61154b610781565b6003820154600160a01b90046001600160401b0316116115a45760405162461bcd60e51b8152602060048201526014602482015273105cdcd95c9d1a5bdb881a5cc8195e1c1a5c995960621b604482015260640161088d565b6115ad836123e3565b6115ef5760405162461bcd60e51b8152602060048201526013602482015272111a5cdc1d5d19481b9bdd08185b1b1bddd959606a1b604482015260640161088d565b6008810180546001600160a01b0319166001600160a01b03848116919091179091556006820154600383015461162a92169033903090612352565b6005810154600282015461164f918591600160a01b90046001600160401b031661249f565b61165883612516565b8054610100900460ff161561167257611672836000611dfd565b6040516001600160a01b03831690339085907f60133788b013c89f2a3756dbc47e3484997b87bd7e0af98a7d70232032c1ce2b90600090a4506116bd6000805460ff19166001179055565b5050565b6040516302abf57960e61b8152654f7261636c6560d01b60048201527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03169063aafd5e4090602401602060405180830381865afa15801561172e573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611752919061335c565b600180546001600160a01b0319166001600160a01b039290921691909117905561177a6125d9565b6001600160a01b03166390978d1b836040518263ffffffff1660e01b81526004016117a791815260200190565b602060405180830381865afa1580156117c4573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906117e89190613389565b6000838152600360205260409020805460ff191691151591909117905561180d61263e565b604051631d1d5b3960e11b81526001600160a01b0383811660048301529190911690633a3ab67290602401602060405180830381865afa158015611855573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906118799190613389565b6001600160a01b0382166000908152600260205260409020805460ff19169115159190911790556118a8611f87565b604051635b97aadd60e01b81526001600160a01b0383811660048301529190911690635b97aadd90602401602060405180830381865afa1580156118f0573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061191491906133a4565b516001600160a01b0390911660009081526002602052604090206001015550565b6060816001600160401b0381111561194f5761194f612d6d565b60405190808252806020026020018201604052801561198257816020015b606081526020019060019003908161196d5790505b50905060005b82811015611a8557600080308686858181106119a6576119a66133e5565b90506020028101906119b891906133fb565b6040516119c6929190613448565b600060405180830381855af49150503d8060008114611a01576040519150601f19603f3d011682016040523d82523d6000602084013e611a06565b606091505b509150915081611a5257604481511015611a1f57600080fd5b60048101905080806020019051810190611a399190613458565b60405162461bcd60e51b815260040161088d9190613191565b80848481518110611a6557611a656133e5565b602002602001018190525050508080611a7d906134ce565b915050611988565b5092915050565b606061141c826126a3565b6000818152600460208181526040808420815161022081018352815460ff80821615156101808401908152610100808404831615156101a0860152620100008404831615156101c08601526001600160a01b03630100000090940484166101e0860152600186015484166102008601529084526002850154808416978501979097526001600160401b03600160a01b808904821697860197909752600160e01b97889004831615156060860152600386015480851660808701529687041660a085015295909404909316151560c08201529381015460e085015260058101549284019290925260068201546101208401526007820154811661014084015260089091015416610160820181905215801590611bb457508051602001515b15611bc25750600092915050565b8060600151611c0b5760405162461bcd60e51b8152602060048201526015602482015274105cdcd95c9d1a5bdb881b9bdd081cd95d1d1b1959605a1b604482015260640161088d565b60c0015192915050565b6000546001600160a01b03610100909104163314611c455760405162461bcd60e51b815260040161088d90613327565b6001600160a01b038116611caa5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b606482015260840161088d565b610bde8161238a565b6007546000906001600160a01b031615611d3e57600760009054906101000a90046001600160a01b03166001600160a01b03166329cb924d6040518163ffffffff1660e01b8152600401602060405180830381865afa158015611d1a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061078b91906134e7565b504290565b60005460ff1661126d5760405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c00604482015260640161088d565b6040516001600160a01b038316602482015260448101829052611df890849063a9059cbb60e01b906064015b60408051601f198184030181529190526020810180516001600160e01b03166001600160e01b031990931692909217909152612729565b505050565b600082815260046020526040902060078101546001909101546001600160a01b0391821691168115611e8c576040516378d8ab5960e11b81526004810185905283151560248201526001600160a01b0383169063f1b156b290604401600060405180830381600087803b158015611e7357600080fd5b505af1158015611e87573d6000803e3d6000fd5b505050505b6001600160a01b03811615611efe576040516378d8ab5960e11b81526004810185905283151560248201526001600160a01b0382169063f1b156b290604401600060405180830381600087803b158015611ee557600080fd5b505af1158015611ef9573d6000803e3d6000fd5b505050505b50505050565b6000611f0f846127fb565b6001600160a01b031663719c6d568484611f28886126a3565b6040518463ffffffff1660e01b8152600401611f4693929190613500565b602060405180830381865afa158015611f63573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061080d91906134e7565b6040516302abf57960e61b81526453746f726560d81b60048201526000907f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03169063aafd5e40906024015b602060405180830381865afa158015611ff7573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061078b919061335c565b600088888888888888883360405160200161203e9998979695949392919061351f565b60405160208183030381529060405280519060200120905098975050505050505050565b60008181526003602052604081205460ff161561208157506001919050565b6120896125d9565b6001600160a01b03166390978d1b836040518263ffffffff1660e01b81526004016120b691815260200190565b602060405180830381865afa1580156120d3573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906120f79190613389565b600092835260036020526040909220805460ff191692151592831790555060ff1690565b6001600160a01b03811660009081526002602052604081205460ff161561214457506001919050565b61214c61263e565b604051631d1d5b3960e11b81526001600160a01b0384811660048301529190911690633a3ab67290602401602060405180830381865afa158015612194573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906121b89190613389565b6001600160a01b0383166000908152600260205260409020805460ff19169115159190911790556121e7611f87565b604051635b97aadd60e01b81526001600160a01b0384811660048301529190911690635b97aadd90602401602060405180830381865afa15801561222f573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061225391906133a4565b516001600160a01b0390921660009081526002602052604090206001810192909255505460ff1690565b6040805160808101825260008082526020808301829052828401829052606083018290528482526004905291909120600101546001600160a01b0316806122e9575050604080516080810182526000808252602082018190529181018290526060810191909152919050565b60405163a6b011a760e01b8152600481018490526001600160a01b0382169063a6b011a790602401608060405180830381865afa15801561232e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108109190613587565b6040516001600160a01b0380851660248301528316604482015260648101829052611efe9085906323b872dd60e01b90608401611dc1565b600080546001600160a01b03838116610100818102610100600160a81b0319851617855560405193049190911692909183917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a35050565b60008181526004602052604081205462010000900460ff1661240757506001919050565b6000828152600460205260409020600101546001600160a01b0316806124305750600192915050565b604051636b915d9160e01b8152600481018490523360248201526001600160a01b03821690636b915d9190604401602060405180830381865afa15801561247b573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108109190613389565b6124a8836127fb565b6001600160a01b031663216666a483836124c1876126a3565b6040518463ffffffff1660e01b81526004016124df93929190613500565b600060405180830381600087803b1580156124f957600080fd5b505af115801561250d573d6000803e3d6000fd5b50505050505050565b600081815260046020526040902060078101546001909101546001600160a01b039182169116811561259d57604051633512293b60e21b8152600481018490526001600160a01b0383169063d448a4ec90602401600060405180830381600087803b15801561258457600080fd5b505af1158015612598573d6000803e3d6000fd5b505050505b6001600160a01b03811615611df857604051633512293b60e21b8152600481018490526001600160a01b0382169063d448a4ec906024016124df565b6040516302abf57960e61b8152721259195b9d1a599a595c95da1a5d195b1a5cdd606a1b60048201526000907f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03169063aafd5e4090602401611fda565b6040516302abf57960e61b81527210dbdb1b185d195c985b15da1a5d195b1a5cdd606a1b60048201526000907f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03169063aafd5e4090602401611fda565b606061141c6126e5604051806020016040528060008152506040518060400160405280600b81526020016a185cdcd95c9d1a5bdb925960aa1b81525085612843565b604080518082018252600a81526937b7a0b9b9b2b93a32b960b11b6020808301919091526000878152600490915291909120600201546001600160a01b0316612889565b600061277e826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b03166128a49092919063ffffffff16565b805190915015611df8578080602001905181019061279c9190613389565b611df85760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b606482015260840161088d565b60008181526004602052604081205460ff1615612832576000828152600460205260409020600101546001600160a01b031661141c565b50506001546001600160a01b031690565b6060600061285185856128b3565b9050848161285e856128f5565b60405160200161287093929190613603565b6040516020818303038152906040529150509392505050565b6060600061289785856128b3565b9050848161285e85612936565b606061080d848460008561298d565b8151606090156128e457816040516020016128ce9190613646565b604051602081830303815290604052905061141c565b816040516020016128ce919061367a565b6060612904608083901c612abe565b61290d83612abe565b6040805160208101939093528201526060015b6040516020818303038152906040529050919050565b606061294e6001600160801b03602084901c16612abe565b6129698360601b6bffffffffffffffffffffffff1916612abe565b6040516020016129209291909182526001600160c01b031916602082015260280190565b6060824710156129ee5760405162461bcd60e51b815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f6044820152651c8818d85b1b60d21b606482015260840161088d565b6001600160a01b0385163b612a455760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000604482015260640161088d565b600080866001600160a01b03168587604051612a61919061369f565b60006040518083038185875af1925050503d8060008114612a9e576040519150601f19603f3d011682016040523d82523d6000602084013e612aa3565b606091505b5091509150612ab3828286612c57565b979650505050505050565b6000808260001c9050806001600160801b03169050806801000000000000000002811777ffffffffffffffff0000000000000000ffffffffffffffff169050806401000000000281177bffffffff00000000ffffffff00000000ffffffff00000000ffffffff16905080620100000281177dffff0000ffff0000ffff0000ffff0000ffff0000ffff0000ffff0000ffff169050806101000281177eff00ff00ff00ff00ff00ff00ff00ff00ff00ff00ff00ff00ff00ff00ff00ff1690508060100281177f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f16905060006008827f08080808080808080808080808080808080808080808080808080808080808081681612bd957612bd961325a565b0460047f040404040404040404040404040404040404040404040404040404040404040484160460027f020202020202020202020202020202020202020202020202020202020202020285160417166027029091017f3030303030303030303030303030303030303030303030303030303030303030019392505050565b60608315612c66575081610810565b825115612c765782518084602001fd5b8160405162461bcd60e51b815260040161088d9190613191565b600060208284031215612ca257600080fd5b5035919050565b6001600160a01b0381168114610bde57600080fd5b8035612cc981612ca9565b919050565b600080600060408486031215612ce357600080fd5b83356001600160401b0380821115612cfa57600080fd5b818601915086601f830112612d0e57600080fd5b813581811115612d1d57600080fd5b876020828501011115612d2f57600080fd5b60209283019550935050840135612d4581612ca9565b809150509250925092565b600060208284031215612d6257600080fd5b813561081081612ca9565b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f191681016001600160401b0381118282101715612dab57612dab612d6d565b604052919050565b60006001600160401b03821115612dcc57612dcc612d6d565b50601f01601f191660200190565b80356001600160401b0381168114612cc957600080fd5b60008060008060008060008060006101208a8c031215612e1057600080fd5b89356001600160401b03811115612e2657600080fd5b8a01601f81018c13612e3757600080fd5b8035612e4a612e4582612db3565b612d83565b8181528d6020838501011115612e5f57600080fd5b81602084016020830137600060208383010152809b50505050612e8460208b01612cbe565b9750612e9260408b01612cbe565b9650612ea060608b01612cbe565b9550612eae60808b01612dda565b9450612ebc60a08b01612cbe565b935060c08a0135925060e08a013591506101008a013590509295985092959850929598565b600080600060608486031215612ef657600080fd5b8335612f0181612ca9565b9250612f0f60208501612dda565b9150604084013590509250925092565b8051151582526020808201511515908301526040808201511515908301526060808201516001600160a01b039081169184019190915260809182015116910152565b600061020082019050612f75828451612f1f565b60208301516001600160a01b0390811660a084015260408401516001600160401b031660c08401526060840151151560e084015260808401519081166101008085019190915260a08501519150610120612fd9818601846001600160401b03169052565b60c08601519250610140612ff08187018515159052565b60e08701516101608781019190915292870151610180870152908601516101a08601528501516001600160a01b039081166101c0860152908501519081166101e08501529050611a85565b6000806040838503121561304e57600080fd5b82359150602083013561306081612ca9565b809150509250929050565b6000806020838503121561307e57600080fd5b82356001600160401b038082111561309557600080fd5b818501915085601f8301126130a957600080fd5b8135818111156130b857600080fd5b8660208260051b85010111156130cd57600080fd5b60209290920196919550909350505050565b60005b838110156130fa5781810151838201526020016130e2565b50506000910152565b6000815180845261311b8160208601602086016130df565b601f01601f19169290920160200192915050565b6000602080830181845280855180835260408601915060408160051b870101925083870160005b8281101561318457603f19888603018452613172858351613103565b94509285019290850190600101613156565b5092979650505050505050565b6020815260006108106020830184613103565b61020081016131b3828f612f1f565b6001600160a01b039c8d1660a08301526001600160401b039b8c1660c083015299151560e0820152978b16610100890152959098166101208701529215156101408601526101608501919091526101808401526101a08301529284166101c0820152919092166101e090910152919050565b634e487b7160e01b600052601160045260246000fd5b600081600019048311821515161561325557613255613225565b500290565b634e487b7160e01b600052601260045260246000fd5b60008261328d57634e487b7160e01b600052601260045260246000fd5b500490565b8181038181111561141c5761141c613225565b6001600160401b03818116838216019080821115611a8557611a85613225565b60006101008a83528060208401526132df8184018b613103565b6001600160a01b03998a1660408501529789166060840152505093861660808501526001600160401b039290921660a084015290931660c082015260e0019190915292915050565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b60006020828403121561336e57600080fd5b815161081081612ca9565b80518015158114612cc957600080fd5b60006020828403121561339b57600080fd5b61081082613379565b6000602082840312156133b657600080fd5b604051602081018181106001600160401b03821117156133d8576133d8612d6d565b6040529151825250919050565b634e487b7160e01b600052603260045260246000fd5b6000808335601e1984360301811261341257600080fd5b8301803591506001600160401b0382111561342c57600080fd5b60200191503681900382131561344157600080fd5b9250929050565b8183823760009101908152919050565b60006020828403121561346a57600080fd5b81516001600160401b0381111561348057600080fd5b8201601f8101841361349157600080fd5b805161349f612e4582612db3565b8181528560208385010111156134b457600080fd5b6134c58260208301602086016130df565b95945050505050565b6000600182016134e0576134e0613225565b5060010190565b6000602082840312156134f957600080fd5b5051919050565b8381528260208201526060604082015260006134c56060830184613103565b60006101208083526135338184018d613103565b602084019b909b52505060408101979097526001600160401b039590951660608701526001600160a01b03938416608087015291831660a0860152821660c085015260e08401521661010090910152919050565b60006080828403121561359957600080fd5b604051608081018181106001600160401b03821117156135bb576135bb612d6d565b6040526135c783613379565b81526135d560208401613379565b60208201526135e660408401613379565b60408201526135f760608401613379565b60608201529392505050565b600084516136158184602089016130df565b8451908301906136298183602089016130df565b845191019061363c8183602088016130df565b0195945050505050565b600b60fa1b8152600082516136628160018501602087016130df565b601d60f91b6001939091019283015250600201919050565b6000825161368c8184602087016130df565b601d60f91b920191825250600101919050565b600082516136b18184602087016130df565b919091019291505056fea26469706673582212208308750472ceb2de8177ffaad79e9d6970ffe4f59d11183bf06a5727259eab7064736f6c63430008100033a26469706673582212207fdd7511568be4055da51babd1036239ffe3588af60945cd826026d56069d15b64736f6c6343000810003360a060405234801561001057600080fd5b5060405161087838038061087883398101604081905261002f91610040565b6001600160a01b0316608052610070565b60006020828403121561005257600080fd5b81516001600160a01b038116811461006957600080fd5b9392505050565b6080516107e861009060003960008181607b015260b701526107e86000f3fe608060405234801561001057600080fd5b506004361061002b5760003560e01c8063025ac24f14610030575b600080fd5b61004361003e36600461057b565b610055565b60405190815260200160405180910390f35b600061006c6001600160a01b03861633308761014c565b6100a06001600160a01b0386167f0000000000000000000000000000000000000000000000000000000000000000866101bd565b604051636457c97960e01b81526001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001690636457c979906100fc908c9033908d908d908d908d908d908d908d906004016106da565b6020604051808303816000875af115801561011b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061013f9190610748565b9998505050505050505050565b6040516001600160a01b03808516602483015283166044820152606481018290526101b79085906323b872dd60e01b906084015b60408051601f198184030181529190526020810180516001600160e01b03166001600160e01b0319909316929092179091526102dc565b50505050565b8015806102375750604051636eb1769f60e11b81523060048201526001600160a01b03838116602483015284169063dd62ed3e90604401602060405180830381865afa158015610211573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102359190610748565b155b6102a75760405162461bcd60e51b815260206004820152603660248201527f5361666545524332303a20617070726f76652066726f6d206e6f6e2d7a65726f60448201527520746f206e6f6e2d7a65726f20616c6c6f77616e636560501b60648201526084015b60405180910390fd5b6040516001600160a01b0383166024820152604481018290526102d790849063095ea7b360e01b90606401610180565b505050565b6000610331826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b03166103ae9092919063ffffffff16565b8051909150156102d7578080602001905181019061034f9190610761565b6102d75760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b606482015260840161029e565b60606103bd84846000856103c7565b90505b9392505050565b6060824710156104285760405162461bcd60e51b815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f6044820152651c8818d85b1b60d21b606482015260840161029e565b6001600160a01b0385163b61047f5760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000604482015260640161029e565b600080866001600160a01b0316858760405161049b9190610783565b60006040518083038185875af1925050503d80600081146104d8576040519150601f19603f3d011682016040523d82523d6000602084013e6104dd565b606091505b50915091506104ed8282866104f8565b979650505050505050565b606083156105075750816103c0565b8251156105175782518084602001fd5b8160405162461bcd60e51b815260040161029e919061079f565b634e487b7160e01b600052604160045260246000fd5b80356001600160a01b038116811461055e57600080fd5b919050565b803567ffffffffffffffff8116811461055e57600080fd5b600080600080600080600080610100898b03121561059857600080fd5b883567ffffffffffffffff808211156105b057600080fd5b818b0191508b601f8301126105c457600080fd5b8135818111156105d6576105d6610531565b604051601f8201601f19908116603f011681019083821181831017156105fe576105fe610531565b816040528281528e602084870101111561061757600080fd5b82602086016020830137600060208483010152809c50505050505061063e60208a01610547565b965061064c60408a01610547565b955061065a60608a01610563565b945061066860808a01610547565b979a969950949793969560a0850135955060c08501359460e001359350915050565b60005b838110156106a557818101518382015260200161068d565b50506000910152565b600081518084526106c681602086016020860161068a565b601f01601f19169290920160200192915050565b60006101208083526106ee8184018d6106ae565b6001600160a01b039b8c166020850152998b1660408401525050958816606087015267ffffffffffffffff9490941660808601529190951660a084015260c083019490945260e08201939093526101000191909152919050565b60006020828403121561075a57600080fd5b5051919050565b60006020828403121561077357600080fd5b815180151581146103c057600080fd5b6000825161079581846020870161068a565b9190910192915050565b6020815260006103c060208301846106ae56fea264697066735822122040fd4937917989d4e157fb0795bc9dc886b180a95780126fdd27487a425c565f64736f6c6343000810003360e06040523480156200001157600080fd5b5060405162004d1938038062004d198339810160408190526200003491620000d4565b6001600160a01b03808316608052811660a08190526040805163d509b01760e01b8152905163d509b017916004808201926020929091908290030181865afa15801562000085573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620000ab91906200010c565b60c05250620001269050565b80516001600160a01b0381168114620000cf57600080fd5b919050565b60008060408385031215620000e857600080fd5b620000f383620000b7565b91506200010360208401620000b7565b90509250929050565b6000602082840312156200011f57600080fd5b5051919050565b60805160a05160c051614b4c620001cd600039600081816103a0015261076a01526000818161025201528181610581015281816106770152818161079901528181611df90152611edb0152600081816103c8015281816105560152818161061e015281816106550152818161073b01528181610e2f015281816112770152818161157501528181611a3101528181611ba601528181611eb001526120770152614b4c6000f3fe60806040523480156200001157600080fd5b5060043610620001515760003560e01c8063a7f0de8111620000c7578063c3c95c7b1162000086578063c3c95c7b146200030a578063d41076451462000330578063d448a4ec1462000386578063d509b017146200039a578063e5a6b10f14620003c2578063f1b156b214620003ea57600080fd5b8063a7f0de8114620002b5578063af2b57ce14620002cc578063b0a1c1c414620002e0578063b75d4e2414620002ea578063bac6d3c114620002f357600080fd5b8063607049d81162000114578063607049d814620001ef5780637564912b146200020657806382f7b9ac14620002355780638921a614146200024c5780639d37c680146200028d57600080fd5b80631122cca314620001565780632a98b03d14620001805780633f6d82561462000197578063481e9c6b14620001bf5780635a68298614620001d8575b600080fd5b6200016d620001673660046200265d565b62000401565b6040519081526020015b60405180910390f35b6200016d620001913660046200268d565b62000885565b620001a666038d7ea4c6800081565b6040516001600160401b03909116815260200162000177565b620001d6620001d036600462002764565b62000ea3565b005b620001d6620001e936600462002764565b62000f9b565b620001d6620002003660046200265d565b62001363565b6200021d620002173660046200265d565b620015d6565b604051620001779a99989796959493929190620027f6565b6200016d620002463660046200265d565b620016d9565b620002747f000000000000000000000000000000000000000000000000000000000000000081565b6040516001600160a01b03909116815260200162000177565b620002a46200029e3660046200265d565b62001762565b604051901515815260200162000177565b620001d6620002c636600462002874565b620017e7565b60005462000274906001600160a01b031681565b6200016d62001b8e565b620001a6607881565b6200016d620003043660046200265d565b62001c21565b620003216200031b3660046200265d565b62001c61565b60405162000177919062002897565b62000366620003413660046200265d565b600260205260009081526040902080546001909101546001600160a01b039091169082565b604080516001600160a01b03909316835260208301919091520162000177565b620001d6620003973660046200265d565b50565b6200016d7f000000000000000000000000000000000000000000000000000000000000000081565b620002747f000000000000000000000000000000000000000000000000000000000000000081565b620001d6620003fb36600462002978565b62001dee565b60008181526001602081905260408220600881015490916101009091046001600160401b031614620004865760405162461bcd60e51b815260206004820152602360248201527f50726f6a656374206973206e6f7420726561647920666f72206175646974207960448201526265742160e81b60648201526084015b60405180910390fd5b80546001600160a01b0316620004d85760405162461bcd60e51b815260206004820152601660248201527513585c9ad95d081b9bdd081a5b9a5d1a585b1a5e995960521b60448201526064016200047d565b6000838152600260205260409020546001600160a01b0316156200053f5760405162461bcd60e51b815260206004820152601760248201527f4d61726b657420616c726561647920617373657274656400000000000000000060448201526064016200047d565b604051634360af3d60e01b81526001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000811660048301526000917f000000000000000000000000000000000000000000000000000000000000000090911690634360af3d90602401602060405180830381865afa158015620005cb573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620005f19190620029a0565b90506000818360010154116200060857816200060e565b82600101545b9050620006476001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016333084620020fb565b6200069d6001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000167f0000000000000000000000000000000000000000000000000000000000000000836200216e565b604051636457c97960e01b8152610120600482015260436101248201527f54686520696e737469747574696f6e2063616e6e6f742064656c6976657220746101448201527f68652070726f6d6973656420616d6f756e74206f6620636172626f6e2063726561016482015262191a5d60ea1b610184820152336024820152306044820152600060648201819052607860848301526001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000811660a484015260c483018490527f000000000000000000000000000000000000000000000000000000000000000060e48401526101048301919091527f00000000000000000000000000000000000000000000000000000000000000001690636457c979906101a4016020604051808303816000875af1158015620007e4573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200080a9190620029a0565b604080518082018252338152602080820189815260008581526002909252838220925183546001600160a01b0319166001600160a01b03909116178355516001909201919091559051919550859187917f584cc08a71081fce3cb80c249a3f322d34332812916fce18435e2d1a4468fa7091a3505050919050565b600043833384604051602001620008a09493929190620029ba565b60408051601f198184030181529181528151602092830120600081815260019093529120549091506001600160a01b031615620009185760405162461bcd60e51b81526020600482015260156024820152744d61726b657420616c72656164792065786973747360581b60448201526064016200047d565b6000826040516020016200092d9190620029f3565b60405160208183030381529060405260016040516200094c906200264f565b6200095992919062002a20565b604051809103906000f08015801562000976573d6000803e3d6000fd5b5090506000836040516020016200098e919062002a63565b6040516020818303038152906040526001604051620009ad906200264f565b620009ba92919062002a9c565b604051809103906000f080158015620009d7573d6000803e3d6000fd5b509050600084604051602001620009ef919062002ae0565b604051602081830303815290604052600160405162000a0e906200264f565b62000a1b92919062002b16565b604051809103906000f08015801562000a38573d6000803e3d6000fd5b50604051634c1d96ab60e11b81523060048201529091506001600160a01b0384169063983b2d5690602401600060405180830381600087803b15801562000a7e57600080fd5b505af115801562000a93573d6000803e3d6000fd5b5050604051634c1d96ab60e11b81523060048201526001600160a01b038516925063983b2d569150602401600060405180830381600087803b15801562000ad957600080fd5b505af115801562000aee573d6000803e3d6000fd5b5050604051634c1d96ab60e11b81523060048201526001600160a01b038416925063983b2d569150602401600060405180830381600087803b15801562000b3457600080fd5b505af115801562000b49573d6000803e3d6000fd5b5050604051637a231bdd60e11b81523060048201526001600160a01b038616925063f44637ba9150602401600060405180830381600087803b15801562000b8f57600080fd5b505af115801562000ba4573d6000803e3d6000fd5b5050604051637a231bdd60e11b81523060048201526001600160a01b038516925063f44637ba9150602401600060405180830381600087803b15801562000bea57600080fd5b505af115801562000bff573d6000803e3d6000fd5b5050604051637a231bdd60e11b81523060048201526001600160a01b038416925063f44637ba9150602401600060405180830381600087803b15801562000c4557600080fd5b505af115801562000c5a573d6000803e3d6000fd5b50505050604051806101400160405280336001600160a01b03168152602001888152602001898152602001878152602001846001600160a01b03168152602001836001600160a01b03168152602001826001600160a01b0316815260200186815260200160011515815260200160006001600160401b03168152506001600086815260200190815260200160002060008201518160000160006101000a8154816001600160a01b0302191690836001600160a01b0316021790555060208201518160010155604082015181600201556060820151816003015560808201518160040160006101000a8154816001600160a01b0302191690836001600160a01b0316021790555060a08201518160050160006101000a8154816001600160a01b0302191690836001600160a01b0316021790555060c08201518160060160006101000a8154816001600160a01b0302191690836001600160a01b0316021790555060e082015181600701908162000dd1919062002be7565b506101008281015160089092018054610120909401516001600160401b031690910268ffffffffffffffff00199215159290921668ffffffffffffffffff1990931692909217179055861562000e585762000e586001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001633308a620020fb565b837f1a49307b6f6ab1604ebafd15886fc4caa9e917f99e76d07d6b73e45f5713a22d868a8a3360405162000e90949392919062002cb3565b60405180910390a2505050949350505050565b6000828152600160205260409020546001600160a01b0316331462000f165760405162461bcd60e51b815260206004820152602260248201527f4f6e6c79206f776e65722063616e206368616e6765206d61726b657420737461604482015261746560f01b60648201526084016200047d565b6002816001600160401b0316111562000f625760405162461bcd60e51b815260206004820152600d60248201526c496e76616c696420737461746560981b60448201526064016200047d565b60009182526001602052604090912060080180546001600160401b039092166101000268ffffffffffffffff0019909216919091179055565b6000828152600160205260409020600881015461010090046001600160401b03166002146200100d5760405162461bcd60e51b815260206004820152601c60248201527f4d61726b6574206e6f7420726561647920666f7220736574746c65210000000060448201526064016200047d565b60058101546040516370a0823160e01b81523360048201526000916001600160a01b0316906370a0823190602401602060405180830381865afa15801562001059573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200107f9190620029a0565b600583015460405163079cc67960e41b81523360048201526024810183905291925060009182916001600160a01b0316906379cc6790906044016020604051808303816000875af1158015620010d9573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620010ff919062002ced565b50600884015460ff1615620011395782915081156200113357600484015462001133906001600160a01b0316338462002290565b6200131e565b60068401546040516370a0823160e01b81523360048201526000916001600160a01b0316906370a0823190602401602060405180830381865afa15801562001185573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620011ab9190620029a0565b11156200131e576006840154604080516318160ddd60e01b815290516000926001600160a01b0316916318160ddd9160048083019260209291908290030181865afa158015620011ff573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620012259190620029a0565b11620012335760006200125d565b612710856001600160401b0316856002015462001251919062002d23565b6200125d919062002d5b565b90508015620012a2578354620012a2906001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000811691163384620020fb565b600684015460405163079cc67960e41b8152336004820152600160248201526001600160a01b03909116906379cc6790906044016020604051808303816000875af1158015620012f6573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200131c919062002ced565b505b6040805182815260208101849052339188917f64e88f38de745da960b2de2db645d82947a21a405c4943480e05ee1ca974a907910160405180910390a3505050505050565b6000818152600160205260409020600881015460026101009091046001600160401b031610620013cb5760405162461bcd60e51b81526020600482015260126024820152714d61726b657420697320617564697465642160701b60448201526064016200047d565b80546001600160a01b0316620014205760405162461bcd60e51b815260206004820152601960248201527813585c9ad95d081a5cc81b9bdd081a5b9a5d1a585b1a5e9959603a1b60448201526064016200047d565b60068101546040516370a0823160e01b81523360048201526001600160a01b03909116906370a0823190602401602060405180830381865afa1580156200146b573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620014919190620029a0565b15620014ec5760405162461bcd60e51b8152602060048201526024808201527f56616c696461746f722063616e207265676973746572206f6e6c79206f6e652060448201526374696d6560e01b60648201526084016200047d565b60068101546040516340c10f1960e01b8152336004820152600160248201526001600160a01b03909116906340c10f19906044016020604051808303816000875af115801562001540573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062001566919062002ced565b50620015a56001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016333066038d7ea4c68000620020fb565b604051339083907fd2eefd4ce8a0e3945e0e703d5d36e37c6dfaa66a08807564ef3d863f76400a9190600090a35050565b6001602081905260009182526040909120805491810154600282015460038301546004840154600585015460068601546007870180546001600160a01b03998a169997989697959694861695938416949290931692620016369062002b59565b80601f0160208091040260200160405190810160405280929190818152602001828054620016649062002b59565b8015620016b55780601f106200168957610100808354040283529160200191620016b5565b820191906000526020600020905b8154815290600101906020018083116200169757829003601f168201915b5050506008909301549192505060ff8116906001600160401b03610100909104168a565b60008181526001602052604080822060049081015491516370a0823160e01b815233918101919091526001600160a01b03909116906370a08231906024015b602060405180830381865afa15801562001736573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200175c9190620029a0565b92915050565b6000818152600160205260408082206006015490516370a0823160e01b815233600482015282916001600160a01b0316906370a0823190602401602060405180830381865afa158015620017ba573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620017e09190620029a0565b1192915050565b6000828152600160205260409020600881015461010090046001600160401b0316156200184b5760405162461bcd60e51b81526020600482015260116024820152704d61726b657420697320636c6f7365642160781b60448201526064016200047d565b80546001600160a01b0316620018a05760405162461bcd60e51b815260206004820152601960248201527813585c9ad95d081a5cc81b9bdd081a5b9a5d1a585b1a5e9959603a1b60448201526064016200047d565b60008211620019115760405162461bcd60e51b815260206004820152603660248201527f546865206e756d626572206f66206372656469742067656e65726174656420736044820152750686f756c6420626520626967676572207468616e20360541b60648201526084016200047d565b60008160040160009054906101000a90046001600160a01b03166001600160a01b03166318160ddd6040518163ffffffff1660e01b8152600401602060405180830381865afa15801562001969573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200198f9190620029a0565b6003830154909150620019a3848362002d72565b1115620019c1828460030154620019bb919062002d88565b620022c2565b604051602001620019d3919062002d9e565b6040516020818303038152906040529062001a035760405162461bcd60e51b81526004016200047d919062002de4565b50815462001a5a9033906001600160a01b031662001a278664e8d4a5100062002d23565b6001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016929190620020fb565b6004828101546040516340c10f1960e01b81523092810192909252602482018590526001600160a01b0316906340c10f19906044016020604051808303816000875af115801562001aaf573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062001ad5919062002ced565b5060058201546040516340c10f1960e01b8152336004820152602481018590526001600160a01b03909116906340c10f19906044016020604051808303816000875af115801562001b2a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062001b50919062002ced565b50604051838152339085907fb33c99b82010ff18b32d024f038afefb8096ad49050d8896e20cdd6df4e401ee9060200160405180910390a350505050565b6040516370a0823160e01b81523360048201526000907f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316906370a0823190602401602060405180830381865afa15801562001bf6573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062001c1c9190620029a0565b905090565b6000818152600160205260408082206005015490516370a0823160e01b81523360048201526001600160a01b03909116906370a082319060240162001718565b604080516101408101825260008082526020820181905291810182905260608082018390526080820183905260a0820183905260c0820183905260e0820152610100810182905261012081019190915260008281526001602081815260409283902083516101408101855281546001600160a01b0390811682529382015492810192909252600281015493820193909352600383015460608201526004830154821660808201526005830154821660a0820152600683015490911660c082015260078201805491929160e08401919062001d3b9062002b59565b80601f016020809104026020016040519081016040528092919081815260200182805462001d699062002b59565b801562001dba5780601f1062001d8e5761010080835404028352916020019162001dba565b820191906000526020600020905b81548152906001019060200180831162001d9c57829003601f168201915b50505091835250506008919091015460ff81161515602083015261010090046001600160401b031660409091015292915050565b336001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000161462001e685760405162461bcd60e51b815260206004820181905260248201527f4f6e6c79204f4f76332063616e2063616c6c20746869732066756e6374696f6e60448201526064016200047d565b6000828152600260209081526040808320600190810154845290915290208115620020a45760088101805460ff19169055604051634360af3d60e01b81526001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000811660048301526000917f000000000000000000000000000000000000000000000000000000000000000090911690634360af3d90602401602060405180830381865afa15801562001f25573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062001f4b9190620029a0565b905060008183600101541162001f62578162001f68565b82600101545b600480850154604080516318160ddd60e01b815290519394506001600160a01b03909116926379cc679092309285926318160ddd928281019260209291908290030181865afa15801562001fc0573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062001fe69190620029a0565b6040516001600160e01b031960e085901b1681526001600160a01b03909216600483015260248201526044016020604051808303816000875af115801562002032573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062002058919062002ced565b50600085815260026020526040902054620020a1906001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000811691168362002290565b50505b60088101805468ffffffffffffffff00191661020017905560008381526002602052604080822060010154905190917fe9146184308c5e4b8f243047cc6f81dce88e004d7980502e123b02f887ab514491a2505050565b6040516001600160a01b0380851660248301528316604482015260648101829052620021689085906323b872dd60e01b906084015b60408051601f198184030181529190526020810180516001600160e01b03166001600160e01b031990931692909217909152620023e2565b50505050565b801580620021ec5750604051636eb1769f60e11b81523060048201526001600160a01b03838116602483015284169063dd62ed3e90604401602060405180830381865afa158015620021c4573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620021ea9190620029a0565b155b620022595760405162461bcd60e51b815260206004820152603660248201527f5361666545524332303a20617070726f76652066726f6d206e6f6e2d7a65726f60448201527520746f206e6f6e2d7a65726f20616c6c6f77616e636560501b60648201526084016200047d565b6040516001600160a01b0383166024820152604481018290526200228b90849063095ea7b360e01b9060640162002130565b505050565b6040516001600160a01b0383166024820152604481018290526200228b90849063a9059cbb60e01b9060640162002130565b606081600003620022ea5750506040805180820190915260018152600360fc1b602082015290565b8160005b81156200231a5780620023018162002df9565b9150620023129050600a8362002d5b565b9150620022ee565b6000816001600160401b0381111562002337576200233762002677565b6040519080825280601f01601f19166020018201604052801562002362576020820181803683370190505b5090505b8415620023da576200237a60018362002d88565b915062002389600a8662002e15565b6200239690603062002d72565b60f81b818381518110620023ae57620023ae62002e2c565b60200101906001600160f81b031916908160001a905350620023d2600a8662002d5b565b945062002366565b949350505050565b600062002439826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b0316620024bb9092919063ffffffff16565b8051909150156200228b57808060200190518101906200245a919062002ced565b6200228b5760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b60648201526084016200047d565b6060620024cc8484600085620024d6565b90505b9392505050565b606082471015620025395760405162461bcd60e51b815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f6044820152651c8818d85b1b60d21b60648201526084016200047d565b6001600160a01b0385163b620025925760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e747261637400000060448201526064016200047d565b600080866001600160a01b03168587604051620025b0919062002e42565b60006040518083038185875af1925050503d8060008114620025ef576040519150601f19603f3d011682016040523d82523d6000602084013e620025f4565b606091505b50915091506200260682828662002611565b979650505050505050565b6060831562002622575081620024cf565b825115620026335782518084602001fd5b8160405162461bcd60e51b81526004016200047d919062002de4565b611cb68062002e6183390190565b6000602082840312156200267057600080fd5b5035919050565b634e487b7160e01b600052604160045260246000fd5b60008060008060808587031215620026a457600080fd5b84359350602085013592506040850135915060608501356001600160401b0380821115620026d157600080fd5b818701915087601f830112620026e657600080fd5b813581811115620026fb57620026fb62002677565b604051601f8201601f19908116603f0116810190838211818310171562002726576200272662002677565b816040528281528a60208487010111156200274057600080fd5b82602086016020830137600060208483010152809550505050505092959194509250565b600080604083850312156200277857600080fd5b8235915060208301356001600160401b03811681146200279757600080fd5b809150509250929050565b60005b83811015620027bf578181015183820152602001620027a5565b50506000910152565b60008151808452620027e2816020860160208601620027a2565b601f01601f19169290920160200192915050565b6001600160a01b038b81168252602082018b9052604082018a905260608201899052878116608083015286811660a0830152851660c082015261014060e082018190526000906200284a83820187620027c8565b94151561010084015250506001600160401b03919091166101209091015298975050505050505050565b600080604083850312156200288857600080fd5b50508035926020909101359150565b60208152620028b26020820183516001600160a01b03169052565b60208201516040820152604082015160608201526060820151608082015260006080830151620028ed60a08401826001600160a01b03169052565b5060a08301516001600160a01b03811660c08401525060c08301516001600160a01b03811660e08401525060e0830151610140610100818186015262002938610160860184620027c8565b90860151909250610120620029508682018315159052565b909501516001600160401b031693019290925250919050565b80151581146200039757600080fd5b600080604083850312156200298c57600080fd5b823591506020830135620027978162002969565b600060208284031215620029b357600080fd5b5051919050565b84815283602082015260018060a01b0383166040820152608060608201526000620029e96080830184620027c8565b9695505050505050565b6000825162002a07818460208701620027a2565b660810dc99591a5d60ca1b920191825250600701919050565b60608152600062002a356060830185620027c8565b82810360208401526002815261434360f01b60208201526040810191505060ff831660408301529392505050565b6000825162002a77818460208701620027a2565b720810dbdb9d995c9d1a589b194810dc99591a5d606a1b920191825250601301919050565b60608152600062002ab16060830185620027c8565b8281036020840152600381526243434360e81b60208201526040810191505060ff831660408301529392505050565b6000825162002af4818460208701620027a2565b6f102b30b634b230ba37b9102a37b5b2b760811b920191825250601001919050565b60608152600062002b2b6060830185620027c8565b82810360208401526002815261159560f21b60208201526040810191505060ff831660408301529392505050565b600181811c9082168062002b6e57607f821691505b60208210810362002b8f57634e487b7160e01b600052602260045260246000fd5b50919050565b601f8211156200228b57600081815260208120601f850160051c8101602086101562002bbe5750805b601f850160051c820191505b8181101562002bdf5782815560010162002bca565b505050505050565b81516001600160401b0381111562002c035762002c0362002677565b62002c1b8162002c14845462002b59565b8462002b95565b602080601f83116001811462002c53576000841562002c3a5750858301515b600019600386901b1c1916600185901b17855562002bdf565b600085815260208120601f198616915b8281101562002c845788860151825594840194600190910190840162002c63565b508582101562002ca35787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b60808152600062002cc86080830187620027c8565b60208301959095525060408101929092526001600160a01b0316606090910152919050565b60006020828403121562002d0057600080fd5b8151620024cf8162002969565b634e487b7160e01b600052601160045260246000fd5b600081600019048311821515161562002d405762002d4062002d0d565b500290565b634e487b7160e01b600052601260045260246000fd5b60008262002d6d5762002d6d62002d45565b500490565b808201808211156200175c576200175c62002d0d565b818103818111156200175c576200175c62002d0d565b64027b7363c960dd1b81526000825162002dc0816005850160208701620027a2565b6c20746f6b656e73206c6566742160981b6005939091019283015250601201919050565b602081526000620024cf6020830184620027c8565b60006001820162002e0e5762002e0e62002d0d565b5060010190565b60008262002e275762002e2762002d45565b500690565b634e487b7160e01b600052603260045260246000fd5b6000825162002e56818460208701620027a2565b919091019291505056fe60806040523480156200001157600080fd5b5060405162001cb638038062001cb6833981016040819052620000349162000563565b8282600362000044838262000676565b50600462000053828262000676565b50506006805460ff191660ff8416179055506200007360008033620000a5565b6200009060015b60408051600080825260208201909252620001f5565b6200009c60026200007a565b50505062000796565b826000808281526005602052604090206001015460ff166002811115620000d057620000d062000742565b14620001235760405162461bcd60e51b815260206004820152601e60248201527f43616e6e6f74207573652061207072652d6578697374696e6720726f6c65000060448201526064015b60405180910390fd5b60008481526005602052604090206001808201805460ff1916828002179055508381556200016160028201846200033b602090811b62000a6617901c565b60008481526005602052604081206001015460ff1660028111156200018a576200018a62000742565b03620001ee5760405162461bcd60e51b815260206004820152603c602482015260008051602062001c9683398151915260448201527f20746f206d616e61676520616e206578636c757369766520726f6c650000000060648201526084016200011a565b5050505050565b826000808281526005602052604090206001015460ff16600281111562000220576200022062000742565b146200026f5760405162461bcd60e51b815260206004820152601e60248201527f43616e6e6f74207573652061207072652d6578697374696e6720726f6c65000060448201526064016200011a565b600084815260056020908152604090912060018101805460ff1916600217905584815590620002ae906003830190859062000a706200034b821b17901c565b60008481526005602052604081206001015460ff166002811115620002d757620002d762000742565b03620001ee5760405162461bcd60e51b8152602060048201526038602482015260008051602062001c9683398151915260448201527f20746f206d616e61676520612073686172656420726f6c65000000000000000060648201526084016200011a565b620003478282620003a0565b5050565b60005b81518110156200039b57620003868383838151811062000372576200037262000758565b60200260200101516200042160201b60201c565b8062000392816200076e565b9150506200034e565b505050565b6001600160a01b038116620004045760405162461bcd60e51b815260206004820152602360248201527f43616e6e6f742073657420616e206578636c757369766520726f6c6520746f2060448201526203078360ec1b60648201526084016200011a565b81546001600160a01b0319166001600160a01b0391909116179055565b6001600160a01b038116620004795760405162461bcd60e51b815260206004820152601f60248201527f43616e6e6f74206164642030783020746f20612073686172656420726f6c650060448201526064016200011a565b6001600160a01b0316600090815260209190915260409020805460ff19166001179055565b634e487b7160e01b600052604160045260246000fd5b600082601f830112620004c657600080fd5b81516001600160401b0380821115620004e357620004e36200049e565b604051601f8301601f19908116603f011681019082821181831017156200050e576200050e6200049e565b816040528381526020925086838588010111156200052b57600080fd5b600091505b838210156200054f578582018301518183018401529082019062000530565b600093810190920192909252949350505050565b6000806000606084860312156200057957600080fd5b83516001600160401b03808211156200059157600080fd5b6200059f87838801620004b4565b94506020860151915080821115620005b657600080fd5b50620005c586828701620004b4565b925050604084015160ff81168114620005dd57600080fd5b809150509250925092565b600181811c90821680620005fd57607f821691505b6020821081036200061e57634e487b7160e01b600052602260045260246000fd5b50919050565b601f8211156200039b57600081815260208120601f850160051c810160208610156200064d5750805b601f850160051c820191505b818110156200066e5782815560010162000659565b505050505050565b81516001600160401b038111156200069257620006926200049e565b620006aa81620006a38454620005e8565b8462000624565b602080601f831160018114620006e25760008415620006c95750858301515b600019600386901b1c1916600185901b1785556200066e565b600085815260208120601f198616915b828110156200071357888601518255948401946001909101908401620006f2565b5085821015620007325787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b634e487b7160e01b600052602160045260246000fd5b634e487b7160e01b600052603260045260246000fd5b6000600182016200078f57634e487b7160e01b600052601160045260246000fd5b5060010190565b6114f080620007a66000396000f3fe608060405234801561001057600080fd5b506004361061014d5760003560e01c806374d0a676116100c3578063a9059cbb1161007c578063a9059cbb146102be578063aaa14ca3146102d1578063ab3545e5146102e4578063d97c05be1461030f578063dd62ed3e14610322578063f44637ba1461035b57600080fd5b806374d0a6761461025757806379cc67901461026a5780637cdc1cb91461027d57806395d89b4114610290578063983b2d5614610298578063a457c2d7146102ab57600080fd5b8063395093511161011557806339509351146101cd57806340c10f19146101e057806342966c68146101f35780636be7658b1461020857806370a082311461021b57806373cc802a1461024457600080fd5b806306fdde0314610152578063095ea7b31461017057806318160ddd1461019357806323b872dd146101a5578063313ce567146101b8575b600080fd5b61015a61036e565b6040516101679190611183565b60405180910390f35b61018361017e3660046111ed565b610400565b6040519015158152602001610167565b6002545b604051908152602001610167565b6101836101b3366004611217565b61041a565b60065460405160ff9091168152602001610167565b6101836101db3660046111ed565b61043e565b6101836101ee3660046111ed565b61047d565b610206610201366004611253565b6104ba565b005b61020661021636600461126c565b6104f0565b610197610229366004611298565b6001600160a01b031660009081526020819052604090205490565b610206610252366004611298565b6105c6565b61020661026536600461126c565b6105d4565b6101836102783660046111ed565b6106aa565b61018361028b36600461126c565b6106de565b61015a6107a3565b6102066102a6366004611298565b6107b2565b6101836102b93660046111ed565b6107be565b6101836102cc3660046111ed565b610850565b6102066102df366004611253565b61085e565b6102f76102f2366004611253565b61091a565b6040516001600160a01b039091168152602001610167565b61020661031d36600461126c565b610986565b6101976103303660046112ba565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b610206610369366004611298565b610a5c565b60606003805461037d906112e4565b80601f01602080910402602001604051908101604052809291908181526020018280546103a9906112e4565b80156103f65780601f106103cb576101008083540402835291602001916103f6565b820191906000526020600020905b8154815290600101906020018083116103d957829003601f168201915b5050505050905090565b60003361040e818585610ab6565b60019150505b92915050565b600033610428858285610bda565b610433858585610c6c565b506001949350505050565b3360008181526001602090815260408083206001600160a01b038716845290915281205490919061040e908290869061047890879061132e565b610ab6565b6000600161048b81336106de565b6104b05760405162461bcd60e51b81526004016104a790611357565b60405180910390fd5b61040e8484610e3a565b60026104c681336106de565b6104e25760405162461bcd60e51b81526004016104a790611357565b6104ec3383610f19565b5050565b81600260008281526005602052604090206001015460ff16600281111561051957610519611341565b146105365760405162461bcd60e51b81526004016104a790611399565b600083815260056020526040902054839061055190336106de565b61056d5760405162461bcd60e51b81526004016104a7906113e5565b60008481526005602052604090206105889060030184611067565b60405133906001600160a01b0385169086907feb3e33034c392e69263b04ec0fa376dc12784a41b6676c7f31b936cbc0fbb5af90600090a450505050565b6105d1600082610986565b50565b81600260008281526005602052604090206001015460ff1660028111156105fd576105fd611341565b1461061a5760405162461bcd60e51b81526004016104a790611399565b600083815260056020526040902054839061063590336106de565b6106515760405162461bcd60e51b81526004016104a7906113e5565b600084815260056020526040902061066c9060030184611089565b60405133906001600160a01b0385169086907f63502af7324ff6db91ab38f8236a648727d9385ea6c782073dd4882d8a61a48f90600090a450505050565b600060026106b881336106de565b6106d45760405162461bcd60e51b81526004016104a790611357565b61040e8484610f19565b600082815260056020526040812060018082015460ff16600281111561070657610706611341565b036107275760028101546001600160a01b038481169116145b915050610414565b6002600182015460ff16600281111561074257610742611341565b0361076a576001600160a01b038316600090815260038201602052604090205460ff1661071f565b60405162461bcd60e51b815260206004820152600e60248201526d125b9d985b1a59081c9bdb19525960921b60448201526064016104a7565b60606004805461037d906112e4565b6105d160015b826105d4565b3360008181526001602090815260408083206001600160a01b0387168452909152812054909190838110156108435760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b60648201526084016104a7565b6104338286868403610ab6565b60003361040e818585610c6c565b80600260008281526005602052604090206001015460ff16600281111561088757610887611341565b146108a45760405162461bcd60e51b81526004016104a790611399565b816108af81336106de565b6108cb5760405162461bcd60e51b81526004016104a790611357565b60008381526005602052604090206108e69060030133611067565b6040513390819085907feb3e33034c392e69263b04ec0fa376dc12784a41b6676c7f31b936cbc0fbb5af90600090a4505050565b600081600160008281526005602052604090206001015460ff16600281111561094557610945611341565b146109625760405162461bcd60e51b81526004016104a790611429565b6000838152600560205260409020600201546001600160a01b031691505b50919050565b81600160008281526005602052604090206001015460ff1660028111156109af576109af611341565b146109cc5760405162461bcd60e51b81526004016104a790611429565b60008381526005602052604090205483906109e790336106de565b610a035760405162461bcd60e51b81526004016104a7906113e5565b6000848152600560205260409020610a1e9060020184611104565b60405133906001600160a01b0385169086907f3b855c56b409b671c7112789d022675eb639d0bcb8896f1b6197c132f799e74690600090a450505050565b6105d160026107b8565b6104ec8282611104565b60005b8151811015610ab157610a9f83838381518110610a9257610a92611478565b6020026020010151611089565b80610aa98161148e565b915050610a73565b505050565b6001600160a01b038316610b185760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b60648201526084016104a7565b6001600160a01b038216610b795760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b60648201526084016104a7565b6001600160a01b0383811660008181526001602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b6001600160a01b038381166000908152600160209081526040808320938616835292905220546000198114610c665781811015610c595760405162461bcd60e51b815260206004820152601d60248201527f45524332303a20696e73756666696369656e7420616c6c6f77616e636500000060448201526064016104a7565b610c668484848403610ab6565b50505050565b6001600160a01b038316610cd05760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b60648201526084016104a7565b6001600160a01b038216610d325760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b60648201526084016104a7565b6001600160a01b03831660009081526020819052604090205481811015610daa5760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b60648201526084016104a7565b6001600160a01b03808516600090815260208190526040808220858503905591851681529081208054849290610de190849061132e565b92505081905550826001600160a01b0316846001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef84604051610e2d91815260200190565b60405180910390a3610c66565b6001600160a01b038216610e905760405162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f20616464726573730060448201526064016104a7565b8060026000828254610ea2919061132e565b90915550506001600160a01b03821660009081526020819052604081208054839290610ecf90849061132e565b90915550506040518181526001600160a01b038316906000907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9060200160405180910390a35050565b6001600160a01b038216610f795760405162461bcd60e51b815260206004820152602160248201527f45524332303a206275726e2066726f6d20746865207a65726f206164647265736044820152607360f81b60648201526084016104a7565b6001600160a01b03821660009081526020819052604090205481811015610fed5760405162461bcd60e51b815260206004820152602260248201527f45524332303a206275726e20616d6f756e7420657863656564732062616c616e604482015261636560f01b60648201526084016104a7565b6001600160a01b038316600090815260208190526040812083830390556002805484929061101c9084906114a7565b90915550506040518281526000906001600160a01b038516907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9060200160405180910390a3505050565b6001600160a01b0316600090815260209190915260409020805460ff19169055565b6001600160a01b0381166110df5760405162461bcd60e51b815260206004820152601f60248201527f43616e6e6f74206164642030783020746f20612073686172656420726f6c650060448201526064016104a7565b6001600160a01b0316600090815260209190915260409020805460ff19166001179055565b6001600160a01b0381166111665760405162461bcd60e51b815260206004820152602360248201527f43616e6e6f742073657420616e206578636c757369766520726f6c6520746f2060448201526203078360ec1b60648201526084016104a7565b81546001600160a01b0319166001600160a01b0391909116179055565b600060208083528351808285015260005b818110156111b057858101830151858201604001528201611194565b506000604082860101526040601f19601f8301168501019250505092915050565b80356001600160a01b03811681146111e857600080fd5b919050565b6000806040838503121561120057600080fd5b611209836111d1565b946020939093013593505050565b60008060006060848603121561122c57600080fd5b611235846111d1565b9250611243602085016111d1565b9150604084013590509250925092565b60006020828403121561126557600080fd5b5035919050565b6000806040838503121561127f57600080fd5b8235915061128f602084016111d1565b90509250929050565b6000602082840312156112aa57600080fd5b6112b3826111d1565b9392505050565b600080604083850312156112cd57600080fd5b6112d6836111d1565b915061128f602084016111d1565b600181811c908216806112f857607f821691505b60208210810361098057634e487b7160e01b600052602260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b8082018082111561041457610414611318565b634e487b7160e01b600052602160045260246000fd5b60208082526022908201527f53656e64657220646f6573206e6f7420686f6c6420726571756972656420726f6040820152616c6560f01b606082015260800190565b6020808252602c908201527f4d7573742062652063616c6c6564206f6e20616e20696e697469616c697a656460408201526b2053686172656420726f6c6560a01b606082015260800190565b60208082526024908201527f43616e206f6e6c792062652063616c6c6564206279206120726f6c65206d616e60408201526330b3b2b960e11b606082015260800190565b6020808252602f908201527f4d7573742062652063616c6c6564206f6e20616e20696e697469616c697a656460408201526e204578636c757369766520726f6c6560881b606082015260800190565b634e487b7160e01b600052603260045260246000fd5b6000600182016114a0576114a0611318565b5060010190565b818103818111156104145761041461131856fea26469706673582212208961104dd3923b79c08fd49fd308093d4ed7792f1229905fa0e9f300d355f10d64736f6c63430008100033417474656d7074656420746f2075736520616e20696e76616c696420726f6c65a264697066735822122040e078e34b28f2b109ad72ab977e755d32e3824d9e361095452ac15ef06c494664736f6c634300081000330000000000000000000000007109709ecfa91a80626ff3989d68f67f5b1dd12da264697066735822122056d0e869b5bae481e5a19bc39e825323b470b3da802e3aec19f8474901e0f33264736f6c63430008100033",
    "sourceMap": "137:5987:64:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;227:178;;;:::i;:::-;;2452:134:8;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;411:1207:64;;;:::i;3360:151:8:-;;;:::i;:::-;;;;;;;:::i;3221:133::-;;;:::i;2922:141::-;;;:::i;3280:1775:64:-;;;:::i;2738:178:8:-;;;:::i;:::-;;;;;;;:::i;2591:802:65:-;;;:::i;2592:140:8:-;;;:::i;:::-;;;;;;;:::i;3069:146::-;;;:::i;512:526:61:-;;;:::i;328:34::-;;;;;-1:-1:-1;;;;;328:34:61;;;;;;-1:-1:-1;;;;;5796:32:72;;;5778:51;;5766:2;5751:18;328:34:61;5610:225:72;9047:462:65;;;;;;:::i;:::-;;:::i;2157:141:8:-;;;:::i;1819:584:1:-;;;:::i;:::-;;;6557:14:72;;6550:22;6532:41;;6520:2;6505:18;1819:584:1;6392:187:72;1624:1650:64;;;:::i;2304:142:8:-;;;:::i;7315:523:65:-;;;;;;:::i;:::-;;:::i;:::-;;;8664:25:72;;;8652:2;8637:18;7315:523:65;8518:177:72;1572:26:1;;;;;;;;;227:178:64;261:27;:25;:27::i;:::-;309:19;:17;:19::i;:::-;298:8;:30;;;338:22;;:12;:22::i;:::-;370:28;389:8;;370:18;:28::i;:::-;227:178::o;2452:134:8:-;2499:33;2563:16;2544:35;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2544:35:8;;;;;;;;;;;;;;;;;;;;;;;2452:134;:::o;411:1207:64:-;513:13;;537:8;;513:33;;-1:-1:-1;;;513:33:64;;;;;8664:25:72;;;;476:34:64;;-1:-1:-1;;;;;513:13:64;;:23;;8637:18:72;;513:33:64;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;513:33:64;;;;;;;;;;;;:::i;:::-;476:70;;557:19;579:23;593:8;;579:13;:23::i;:::-;644:15;;:47;;-1:-1:-1;;;644:47:64;;186:3:67;644:47:64;;;5778:51:72;557:45:64;;-1:-1:-1;612:29:64;;-1:-1:-1;;;;;644:15:64;;;;:25;;5751:18:72;;644:47:64;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;821:5;;867:15;;842:22;;;-1:-1:-1;;;842:22:64;;;;612:79;;-1:-1:-1;;;;;;821:5:64;;;;:20;;-1:-1:-1;;;;;867:15:64;;;;821:5;;842:20;;:22;;;;;;;;;;;;;;;821:5;842:22;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:40;;;;:::i;:::-;821:63;;;;;;;;;;;;;8664:25:72;;8652:2;8637:18;;8518:177;821:63:64;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;929:13:64;;957:76;;;;;;12041:25:72;;;929:13:64;12082:18:72;;;;12075:50;;;;957:76:64;;;;;;;;;;12014:18:72;;;;957:76:64;;;;;;;-1:-1:-1;;;;;957:76:64;-1:-1:-1;;;957:76:64;;;894:149;;-1:-1:-1;;;894:149:64;;-1:-1:-1;;;;;;;;;;;894:13:64;-1:-1:-1;894:13:64;;-1:-1:-1;894:149:64;;-1:-1:-1;;;;;929:13:64;;957:76;894:149;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1064:18:64;;:59;;-1:-1:-1;;;1064:59:64;;;;;8664:25:72;;;1053:71:64;;-1:-1:-1;;;;;;1064:18:64;;;;-1:-1:-1;1064:46:64;;8637:18:72;;1064:59:64;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1053:10;:71::i;:::-;1210:15;;:47;;-1:-1:-1;;;1210:47:64;;186:3:67;1210:47:64;;;5778:51:72;1201:100:64;;-1:-1:-1;;;;;1210:15:64;;:25;;5751:18:72;;1210:47:64;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1287:12;;1283:16;;:1;:16;:::i;:::-;1259:40;;:21;:40;:::i;:::-;1201:8;:100::i;:::-;1323:13;;1347:8;;1323:33;;-1:-1:-1;;;1323:33:64;;;;;8664:25:72;;;;1312:62:64;;-1:-1:-1;;;;;1323:13:64;;:23;;8637:18:72;;1323:33:64;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1323:33:64;;;;;;;;;;;;:::i;:::-;:45;;;-1:-1:-1;;;;;1323:50:64;1372:1;1323:50;1312:10;:62::i;:::-;1441:30;;-1:-1:-1;;;1441:30:64;;239:3:67;1441:30:64;;;5778:51:72;-1:-1:-1;;;;;;;;;;;1441:8:64;;;5751:18:72;;1441:30:64;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1481:13:64;;1508:8;;1481:39;;-1:-1:-1;;;1481:39:64;;;;;13129:25:72;;;;1481:13:64;13170:18:72;;;13163:59;-1:-1:-1;;;;;1481:13:64;;;;-1:-1:-1;1481:26:64;;-1:-1:-1;13102:18:72;;1481:39:64;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;1546:19:64;;;;1539:59;;-1:-1:-1;;;1539:59:64;;239:3:67;1539:59:64;;;5778:51:72;1530:72:64;;-1:-1:-1;;;;;1539:37:64;;;;5751:18:72;;1539:59:64;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1600:1;1530:8;:72::i;:::-;457:1161;;;411:1207::o;3360:151:8:-;3409:42;3485:19;3463:41;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;3463:41:8;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3360:151;:::o;3221:133::-;3267:33;3331:16;3312:35;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;3312:35:8;;;;;;;;;;;;;;;;;;;;;;3221:133;:::o;2922:141::-;2970:35;3038:18;3017:39;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;3017:39:8;;;;;;;;;;;;;;;;;;;;;;2922:141;:::o;3280:1775:64:-;3387:13;;3411:8;;3387:33;;-1:-1:-1;;;3387:33:64;;;;;8664:25:72;;;;3350:34:64;;-1:-1:-1;;;;;3387:13:64;;:23;;8637:18:72;;3387:33:64;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;3387:33:64;;;;;;;;;;;;:::i;:::-;3350:70;;3431:19;3453:23;3467:8;;3453:13;:23::i;:::-;3518:15;;:47;;-1:-1:-1;;;3518:47:64;;186:3:67;3518:47:64;;;5778:51:72;3431:45:64;;-1:-1:-1;3486:29:64;;-1:-1:-1;;;;;3518:15:64;;;;:25;;5751:18:72;;3518:47:64;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;3609:15;;:47;;-1:-1:-1;;;3609:47:64;;292:3:67;3609:47:64;;;5778:51:72;3486:79:64;;-1:-1:-1;3576:30:64;;-1:-1:-1;;;;;3609:15:64;;;;:25;;5751:18:72;;3609:47:64;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;3576:80;;3790:34;3827:54;3855:11;3868:12;;3827:27;:54::i;:::-;3919:10;;3790:91;;-1:-1:-1;3891:62:64;;-1:-1:-1;;;;;3919:10:64;3790:91;3919:10;3891:19;:62::i;:::-;3998:13;;4026:77;;;;;;12041:25:72;;;309:37:2;12082:18:72;;;;12075:50;;;;4026:77:64;;;;;;;;;;12014:18:72;;;;4026:77:64;;;;;;;-1:-1:-1;;;;;4026:77:64;-1:-1:-1;;;4026:77:64;;;3963:150;;-1:-1:-1;;;3963:150:64;;-1:-1:-1;;;;;;;;;;;3963:13:64;;;:150;;-1:-1:-1;;;;;3998:13:64;;;;3963:150;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;4135:18:64;;:59;;-1:-1:-1;;;4135:59:64;;;;;8664:25:72;;;4123:72:64;;-1:-1:-1;;;;;;4135:18:64;;;;-1:-1:-1;4135:46:64;;8637:18:72;;4135:59:64;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;4123:11;:72::i;:::-;4228:15;;:47;;-1:-1:-1;;;4228:47:64;;186:3:67;4228:47:64;;;5778:51:72;4206:114:64;;-1:-1:-1;;;;;4228:15:64;;:25;;5751:18:72;;4228:47:64;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;4289:21;4206:8;:114::i;:::-;4489:30;;-1:-1:-1;;;4489:30:64;;239:3:67;4489:30:64;;;5778:51:72;-1:-1:-1;;;;;;;;;;;4489:8:64;;;5751:18:72;;4489:30:64;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;4529:13:64;;4556:8;;4529:39;;-1:-1:-1;;;4529:39:64;;;;;13129:25:72;;;;4529:13:64;13170:18:72;;;13163:59;-1:-1:-1;;;;;4529:13:64;;;;-1:-1:-1;4529:26:64;;-1:-1:-1;13102:18:72;;4529:39:64;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;4595:19:64;;;;4588:59;;-1:-1:-1;;;4588:59:64;;239:3:67;4588:59:64;;;5778:51:72;4579:84:64;;-1:-1:-1;;;;;4588:37:64;;;;5751:18:72;;4588:59:64;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;4661:1;4649:9;;:13;;;;:::i;4579:84::-;4732:30;;-1:-1:-1;;;4732:30:64;;292:3:67;4732:30:64;;;5778:51:72;-1:-1:-1;;;;;;;;;;;4732:8:64;;;5751:18:72;;4732:30:64;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;4772:13:64;;4799:8;;4772:43;;-1:-1:-1;;;4772:43:64;;;;;13129:25:72;;;;4809:5:64;13170:18:72;;;13163:59;-1:-1:-1;;;;;4772:13:64;;;;-1:-1:-1;4772:26:64;;-1:-1:-1;13102:18:72;;4772:43:64;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4825:61;;;;;;;;;;;;;;-1:-1:-1;;;4825:61:64;;;4863:22;4825:11;:61::i;:::-;4908:15;;:47;;-1:-1:-1;;;4908:47:64;;292:3:67;4908:47:64;;;5778:51:72;4896:60:64;;-1:-1:-1;;;;;4908:15:64;;:25;;5751:18:72;;4908:47:64;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;4896:11;:60::i;:::-;4975:15;;:47;;-1:-1:-1;;;4975:47:64;;292:3:67;4975:47:64;;;5778:51:72;4966:81:64;;-1:-1:-1;;;;;4975:15:64;;:25;;5751:18:72;;4975:47:64;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;5024:22;4966:8;:81::i;:::-;3331:1724;;;;;3280:1775::o;2738:178:8:-;2794:48;2883:26;2854:55;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2854:55:8;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2854:55:8;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2591:802:65;2632:72;2719:31;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2719:37:65;;:39;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2789:30;;;;2768:18;:51;;-1:-1:-1;;;;;;2768:51:65;;;-1:-1:-1;;;;;2768:51:65;;;;;;;;;2847:27;;;;2829:15;:45;;;;;;;;;;;;;2897:22;;;;2884:10;:35;;;;;;;;;;;;;2937:17;;2929:5;:25;;;;;;;;;;;;;2973:18;;;2964:6;:27;;;;;;;;;;;;;3009:17;;;;;3001:5;:25;;;;;;;;;;;;;3054:43;;2789:30;;-1:-1:-1;2768:51:65;3054:43;;;:::i;:::-;-1:-1:-1;;;;;5796:32:72;;;5778:51;;5766:2;5751:18;3054:43:65;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;3036:15:65;:61;;-1:-1:-1;;;;;;3036:61:65;-1:-1:-1;;;;;3036:61:65;;;;;;3130:18;;:41;;;-1:-1:-1;;;3130:41:65;;;;:18;;;;;:39;;:41;;;;;;;;;;;;;;:18;:41;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;3107:20;:64;3195:18;;3237:15;;3195:59;;-1:-1:-1;;;3195:59:65;;-1:-1:-1;;;;;3237:15:65;;;3195:59;;;5778:51:72;3195:18:65;;;:33;;5751:18:72;;3195:59:65;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;3181:11;:73;3282:18;;:36;;;-1:-1:-1;;;3282:36:65;;;;-1:-1:-1;;;;;3282:18:65;;;;:34;;:36;;;;;;;;;;;;;;;:18;:36;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;3264:15;:54;;-1:-1:-1;;3264:54:65;-1:-1:-1;;;;;3264:54:65;;;;;;;;;;3348:18;;:38;;;-1:-1:-1;;;3348:38:65;;;;-1:-1:-1;;;;;3348:18:65;;;;:36;;:38;;;;;;;;;;;;;;;:18;:38;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;3328:17;:58;-1:-1:-1;2591:802:65:o;2592:140:8:-;2640:34;2707:18;2686:39;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3069:146;3117:40;3190:18;3169:39;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;3169:39:8;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;3169:39:8;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;512:526:61;566:14;:12;:14::i;:::-;750:15;;776:18;;724:72;;-1:-1:-1;;;;;750:15:61;;;;776:18;;;;724:72;;;:::i;:::-;-1:-1:-1;;;;;16141:15:72;;;16123:34;;16193:15;;16188:2;16173:18;;16166:43;16073:2;16058:18;724:72:61;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;708:13:61;:88;;-1:-1:-1;;;;;;708:88:61;-1:-1:-1;;;;;708:88:61;;;;;;828:18;;870:15;;828:59;;-1:-1:-1;;;828:59:61;;870:15;;;828:59;;;5778:51:72;-1:-1:-1;;828:18:61;;;;;:33;;5751:18:72;;828:59:61;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;806:81;;926:7;912:11;:21;:45;;946:11;912:45;;;936:7;912:45;897:12;:60;1004:27;:25;:27::i;:::-;556:482;512:526::o;9047:462:65:-;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;9220:73:65;;-1:-1:-1;;;9220:73:65;9371:86;;;;;;8664:25:72;;;9371:86:65;;;;;;;;;;8637:18:72;;;;9371:86:65;;;;;;;-1:-1:-1;;;;;9371:86:65;-1:-1:-1;;;9371:86:65;;;9471:21;;-1:-1:-1;;;;;;;;;;;;;9303:11:65;;;1434:4;;9371:86;9471:21;;-1:-1:-1;;9471:21:65;;:::i;:::-;;;;;;;;;;;;;9303:199;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;9146:363;9047:462;;:::o;2157:141:8:-;2206:34;2273:18;2252:39;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1819:584:1;1873:7;;1853:4;;1873:7;;;;;1869:528;;;-1:-1:-1;1903:7:1;;;;;;;;1819:584::o;1869:528::-;1941:17;-1:-1:-1;;;;;;;;;;;2985:55:1;3066:16;1980:374;;2196:43;;2023:20;;-1:-1:-1;;;;;;;;;;;1671:64:1;2135:34;;2196:43;;1671:64;;-1:-1:-1;;;2221:17:1;2196:43;;;:::i;:::-;;;;-1:-1:-1;;2196:43:1;;;;;;;;;;2086:175;;;2196:43;2086:175;;:::i;:::-;;;;-1:-1:-1;;2086:175:1;;;;;;;;;;2047:232;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2020:259;;;2323:7;2312:27;;;;;;;;;;;;:::i;:::-;2297:42;;2002:352;1980:374;2374:12;1819:584;-1:-1:-1;1819:584:1:o;1624:1650:64:-;1725:13;;1749:8;;1725:33;;-1:-1:-1;;;1725:33:64;;;;;8664:25:72;;;;1688:34:64;;-1:-1:-1;;;;;1725:13:64;;:23;;8637:18:72;;1725:33:64;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1725:33:64;;;;;;;;;;;;:::i;:::-;1688:70;;1777:19;1799:23;1813:8;;1799:13;:23::i;:::-;1864:15;;:47;;-1:-1:-1;;;1864:47:64;;186:3:67;1864:47:64;;;5778:51:72;1777:45:64;;-1:-1:-1;1832:29:64;;-1:-1:-1;;;;;1864:15:64;;;;:25;;5751:18:72;;1864:47:64;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1955:15;;:47;;-1:-1:-1;;;1955:47:64;;292:3:67;1955:47:64;;;5778:51:72;1832:79:64;;-1:-1:-1;1922:30:64;;-1:-1:-1;;;;;1955:15:64;;;;:25;;5751:18:72;;1955:47:64;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1922:80;;2138:34;2175:54;2203:11;2216:12;;2175:27;:54::i;:::-;2267:10;;2138:91;;-1:-1:-1;2239:61:64;;-1:-1:-1;;;;;2267:10:64;2138:91;2267:10;2239:19;:61::i;:::-;2345:13;;2373:76;;;;;;12041:25:72;;;2345:13:64;12082:18:72;;;;12075:50;;;;2373:76:64;;;;;;;;;;12014:18:72;;;;2373:76:64;;;;;;;-1:-1:-1;;;;;2373:76:64;-1:-1:-1;;;2373:76:64;;;2310:149;;-1:-1:-1;;;2310:149:64;;-1:-1:-1;;;;;;;;;;;2310:13:64;;;:149;;-1:-1:-1;;;;;2345:13:64;;;;2310:149;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;2480:18:64;;:59;;-1:-1:-1;;;2480:59:64;;;;;8664:25:72;;;2469:71:64;;-1:-1:-1;;;;;;2480:18:64;;;;-1:-1:-1;2480:46:64;;8637:18:72;;2480:59:64;8518:177:72;2469:71:64;2662:15;;:47;;-1:-1:-1;;;2662:47:64;;186:3:67;2662:47:64;;;5778:51:72;2640:137:64;;-1:-1:-1;;;;;2662:15:64;;:25;;5751:18:72;;2662:47:64;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2766:1;2747:12;;2762:1;2747:16;;;;:::i;:::-;:20;;;;:::i;:::-;2723:44;;:21;:44;:::i;2640:137::-;2846:30;;-1:-1:-1;;;2846:30:64;;239:3:67;2846:30:64;;;5778:51:72;-1:-1:-1;;;;;;;;;;;2846:8:64;;;5751:18:72;;2846:30:64;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;2886:13:64;;2913:8;;2886:39;;-1:-1:-1;;;2886:39:64;;;;;13129:25:72;;;;2886:13:64;13170:18:72;;;13163:59;-1:-1:-1;;;;;2886:13:64;;;;-1:-1:-1;2886:26:64;;-1:-1:-1;13102:18:72;;2886:39:64;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;2951:19:64;;;;2944:59;;-1:-1:-1;;;2944:59:64;;239:3:67;2944:59:64;;;5778:51:72;2935:72:64;;-1:-1:-1;;;;;2944:37:64;;;;5751:18:72;;2944:59:64;5610:225:72;2935:72:64;3076:30;;-1:-1:-1;;;3076:30:64;;292:3:67;3076:30:64;;;5778:51:72;-1:-1:-1;;;;;;;;;;;3076:8:64;;;5751:18:72;;3076:30:64;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;3116:13:64;;3143:8;;3116:43;;-1:-1:-1;;;3116:43:64;;;;;13129:25:72;;;;3153:5:64;13170:18:72;;;13163:59;-1:-1:-1;;;;;3116:13:64;;;;-1:-1:-1;3116:26:64;;-1:-1:-1;13102:18:72;;3116:43:64;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;3178:15:64;;:47;;-1:-1:-1;;;3178:47:64;;292:3:67;3178:47:64;;;5778:51:72;3169:97:64;;-1:-1:-1;;;;;;3178:15:64;;;;-1:-1:-1;3178:25:64;;5751:18:72;;3178:47:64;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;3252:13;;;;3227:38;;:22;:38;:::i;2304:142:8:-;2353:35;2421:18;2400:39;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2400:39:8;;;;;;;;;;;;;;;;;;;;;;2304:142;:::o;7315:523:65:-;7437:23;;-1:-1:-1;;;7437:23:65;;-1:-1:-1;;;;;5796:32:72;;7437:23:65;;;5778:51:72;7406:19:65;;-1:-1:-1;;;;;;;;;;;7437:13:65;;;5751:18:72;;7437:23:65;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;7470:15:65;;7507:18;;:59;;-1:-1:-1;;;7507:59:65;;-1:-1:-1;;;;;7470:15:65;;;7507:59;;;5778:51:72;;;7470:15:65;-1:-1:-1;7470:26:65;;-1:-1:-1;7497:8:65;;7507:18;;;;:33;;5751:18:72;;7507:59:65;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;7470:97;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;7577:15:65;;7622:18;;7655:59;;-1:-1:-1;;;7655:59:65;;-1:-1:-1;;;;;7577:15:65;;;7655:59;;;5778:51:72;;;7577:15:65;-1:-1:-1;7577:23:65;;-1:-1:-1;7622:18:65;;;;;7655:33;;5751:18:72;;7655:59:65;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;7577:147;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;7748:18:65;;:59;;-1:-1:-1;;;7748:59:65;;-1:-1:-1;;;;;7748:18:65;;;;:42;;:59;;7791:5;;7798:8;;7748:59;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;7734:73;;317:28:2;309:37;;-1:-1:-1;;;;;7817:12:65;;:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7315:523;;;;:::o;1471:230:61:-;1518:7;1537:27;:25;:27::i;:::-;1574;;-1:-1:-1;;;1574:27:61;;133:3:67;1574:27:61;;;5778:51:72;-1:-1:-1;;;;;;;;;;;1574:8:61;;;5751:18:72;;1574:27:61;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1618:13:61;;1649:6;;1657:12;;1671:9;;1618:76;;-1:-1:-1;;;1618:76:61;;-1:-1:-1;;;;;1618:13:61;;;;-1:-1:-1;1618:30:61;;-1:-1:-1;1618:76:61;;1682:11;;1618:76;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1611:83;;1471:230;:::o;2454:245::-;2513:45;239:3:67;2513:23:61;:45::i;:::-;2568:25;2581:8;2591:1;2568:12;:25::i;:::-;2603:30;;-1:-1:-1;;;2603:30:61;;239:3:67;2603:30:61;;;5778:51:72;-1:-1:-1;;;;;;;;;;;2603:8:61;;;5751:18:72;;2603:30:61;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;2643:13:61;;2678:9;;-1:-1:-1;;;;;2643:13:61;;;;-1:-1:-1;2643:24:61;;-1:-1:-1;2668:8:61;;2678:13;;2690:1;;2678:13;:::i;:::-;2643:49;;-1:-1:-1;;;;;;2643:49:61;;;;;;;;;;22032:25:72;;;;22073:18;;;22066:34;22005:18;;2643:49:61;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2705:243;2770:45;292:3:67;2770:23:61;:45::i;:::-;2825:25;2838:8;2848:1;2825:12;:25::i;:::-;2860:30;;-1:-1:-1;;;2860:30:61;;292:3:67;2860:30:61;;;5778:51:72;-1:-1:-1;;;;;;;;;;;2860:8:61;;;5751:18:72;;2860:30:61;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;2900:13:61;;:41;;-1:-1:-1;;;2900:41:61;;;;;8664:25:72;;;-1:-1:-1;;;;;2900:13:61;;;;-1:-1:-1;2900:31:61;;-1:-1:-1;8637:18:72;;2900:41:61;8518:177:72;1944:259:61;2003:19;2034:20;:18;:20::i;:::-;2064:25;2077:8;2087:1;2064:12;:25::i;:::-;2099:30;;-1:-1:-1;;;2099:30:61;;186:3:67;2099:30:61;;;5778:51:72;-1:-1:-1;;;;;;;;;;;2099:8:61;;;5751:18:72;;2099:30:61;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;2153:13:61;;:43;;-1:-1:-1;;;2153:43:61;;;;;8664:25:72;;;-1:-1:-1;;;;;2153:13:61;;;;-1:-1:-1;2153:33:61;;-1:-1:-1;8637:18:72;;2153:43:61;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2139:57;1944:259;-1:-1:-1;;1944:259:61:o;3262:157:1:-;3322:9;3317:96;;3352:30;;;;;22313:2:72;22295:21;;;22352:2;22332:18;;;22325:30;22391:25;22386:2;22371:18;;22364:53;22449:2;22434:18;;22111:347;3352:30:1;;;;;;;;3396:6;:4;:6::i;5209:262::-;5271:1;5266;:6;5262:203;;5293:41;;;;;22665:2:72;22647:21;;;22704:2;22684:18;;;22677:30;22743:34;22738:2;22723:18;;22716:62;-1:-1:-1;;;22809:2:72;22794:18;;22787:32;22851:3;22836:19;;22463:398;5293:41:1;;;;;;;;5353:31;;;23078:21:72;;;23135:2;23115:18;;;23108:30;-1:-1:-1;;;23169:2:72;23154:18;;23147:40;23254:4;23239:20;;23232:36;;;5353:31:1;;;;;;;23219:3:72;5353:31:1;;;5403;;;23491:21:72;;;23548:2;23528:18;;;23521:30;-1:-1:-1;;;23582:2:72;23567:18;;23560:40;23667:4;23652:20;;23645:36;;;5403:31:1;;;;;;;23632:3:72;5403:31:1;;;5448:6;:4;:6::i;:::-;5209:262;;:::o;6391:918:65:-;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;;;6621:18:65;;:44;;-1:-1:-1;;;6621:44:65;;;;;8664:25:72;;;6564:54:65;;-1:-1:-1;;;;;6621:18:65;;:31;;8637:18:72;;6621:44:65;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;6564:101;;6675:34;6724:223;;;;;;;;6768:18;;;;;;;;;-1:-1:-1;;;;;6768:18:65;-1:-1:-1;;;;;6768:36:65;;:38;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;6724:223;;6830:23;;;;;-1:-1:-1;;;;;6724:223:65;;;;;6886:18;;:46;;-1:-1:-1;;;6886:46:65;;;;;8664:25:72;;;6724:223:65;;;;;-1:-1:-1;;;;;6886:18:65;;:33;;8637:18:72;;6886:46:65;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;6886:46:65;;;;;;;;;;;;:::i;:::-;6724:223;;7001:35;;-1:-1:-1;;;7001:35:65;;239:3:67;7001:35:65;;;5778:51:72;6675:272:65;;-1:-1:-1;;;;;;;;;;;;7001:13:65;;;5751:18:72;;7001:35:65;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;7046:15:65;;:54;;-1:-1:-1;;;7046:54:65;;-1:-1:-1;;;;;7046:15:65;;;;-1:-1:-1;7046:26:65;;-1:-1:-1;7046:54:65;;239:3:67;;7095:4:65;;7046:54;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;7110:15:65;;7142:18;;7110:58;;-1:-1:-1;;;7110:58:65;;-1:-1:-1;;;;;7110:15:65;;;;-1:-1:-1;7110:23:65;;-1:-1:-1;7110:58:65;;7142:18;;;;7163:4;;7110:58;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;7178:18:65;;:70;;-1:-1:-1;;;7178:70:65;;;;;26489:25:72;;;239:3:67;26530:18:72;;;26523:60;-1:-1:-1;;;;;7178:18:65;;;;:35;;26462:18:72;;7178:70:65;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;317:28:2;309:37;;-1:-1:-1;;;;;7258:12:65;;:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;7289:13:65;;6391:918;-1:-1:-1;;;;;;;6391:918:65:o;4656:591::-;5041:24;;5083:18;;;;5119:27;;;;;4946:214;;-1:-1:-1;;;;;;;;;;;4901:11:65;;;4926:6;;-1:-1:-1;;;4986:37:65;4946:214;;5041:24;5083:18;5119:27;4946:214;;;:::i;:::-;;;;-1:-1:-1;;4946:214:65;;;;;;;;;;;;;;-1:-1:-1;;;;;4946:214:65;-1:-1:-1;;;;;;4946:214:65;;;;;;;;;;5185:17;:44;;5227:1;5185:44;;;5212:4;5185:44;5174:56;;;;;;8664:25:72;;8652:2;8637:18;;8518:177;587:83:4;646:17;658:4;657:5;646:10;:17::i;6548:139:16:-;6612:68;6672:2;6676;6628:51;;;;;;;;;:::i;:::-;;;;-1:-1:-1;;6628:51:16;;;;;;;;;;;;;;-1:-1:-1;;;;;6628:51:16;-1:-1:-1;;;6628:51:16;;;6612:15;:68::i;5514:110::-;5560:57;5613:2;5576:40;;;;;;8664:25:72;;8652:2;8637:18;;8518:177;5576:40:16;;;;-1:-1:-1;;5576:40:16;;;;;;;;;;;;;;-1:-1:-1;;;;;5576:40:16;-1:-1:-1;;;5576:40:16;;;5560:15;:57::i;1044:250:61:-;1100:15;;1162:6;;1147:12;;-1:-1:-1;;;;;1100:15:61;;;;:26;;:15;;1147:21;;1162:6;1147:21;:::i;:::-;1100:69;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1179:27:61;;-1:-1:-1;;;1179:27:61;;133:3:67;1179:27:61;;;5778:51:72;-1:-1:-1;;;;;;;;;;;1179:8:61;-1:-1:-1;1179:8:61;;-1:-1:-1;5751:18:72;;1179:27:61;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1216:15:61;;1248:13;;1280:6;;1265:12;;-1:-1:-1;;;;;1216:15:61;;;;-1:-1:-1;1216:23:61;;-1:-1:-1;1248:13:61;;;;;1265:21;;;:::i;:::-;1216:71;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;2209:239::-;2278:15;;2318:9;;-1:-1:-1;;;;;2278:15:61;;;;:26;;2305:7;;2314:13;;:1;:13;:::i;:::-;:20;;2330:4;2314:20;:::i;:::-;2278:57;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;2345:17:61;;-1:-1:-1;;;2345:17:61;;-1:-1:-1;;;;;5796:32:72;;2345:17:61;;;5778:51:72;-1:-1:-1;;;;;;;;;;;2345:8:61;-1:-1:-1;2345:8:61;;-1:-1:-1;5751:18:72;;2345:17:61;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;2372:15:61;;2404:13;;2424:9;;-1:-1:-1;;;;;2372:15:61;;;;-1:-1:-1;2372:23:61;;-1:-1:-1;2404:13:61;;;2420;;:1;:13;:::i;:::-;:20;;2436:4;2420:20;:::i;:::-;2372:69;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;1300:165::-;1373:27;;-1:-1:-1;;;1373:27:61;;133:3:67;1373:27:61;;;5778:51:72;-1:-1:-1;;;;;;;;;;;1373:8:61;;;5751:18:72;;1373:27:61;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1410:13:61;;:48;;-1:-1:-1;;;1410:48:61;;;;;13129:25:72;;;-1:-1:-1;;;;;13190:31:72;;13170:18;;;13163:59;-1:-1:-1;;;;;1410:13:61;;;;-1:-1:-1;1410:31:61;;-1:-1:-1;13102:18:72;;1410:48:61;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1300:165;;:::o;1707:231::-;1756:15;;1806:12;;1756:63;;-1:-1:-1;;;1756:63:61;;-1:-1:-1;;;;;1756:15:61;;;;:26;;:63;;186:3:67;;1806:12:61;1756:63;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1829:30:61;;-1:-1:-1;;;1829:30:61;;186:3:67;1829:30:61;;;5778:51:72;-1:-1:-1;;;;;;;;;;;1829:8:61;-1:-1:-1;1829:8:61;;-1:-1:-1;5751:18:72;;1829:30:61;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1869:15:61;;1901:13;;1918:12;;1869:62;;-1:-1:-1;;;1869:62:61;;-1:-1:-1;;;;;1869:15:61;;;;-1:-1:-1;1869:23:61;;-1:-1:-1;1869:62:61;;1901:13;;;;1869:62;;;:::i;2409:432:1:-;-1:-1:-1;;;;;;;;;;;2985:55:1;3066:16;2452:359;;2652:67;;;-1:-1:-1;;;;;;;;;;;2652:67:1;;;27913:51:72;;;-1:-1:-1;;;27980:18:72;;;27973:34;;;;2712:4:1;28023:18:72;;;28016:34;2489:11:1;;1671:64;2586:43;;27886:18:72;;2652:67:1;;;-1:-1:-1;;2652:67:1;;;;;;;;;;2541:196;;;2652:67;2541:196;;:::i;:::-;;;;-1:-1:-1;;2541:196:1;;;;;;;;;;2506:245;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;2452:359:1;2820:7;:14;;-1:-1:-1;;2820:14:1;;;;;2409:432::o;181:376:16:-;275:14;;131:42;448:2;435:16;;251:21;;275:14;435:16;131:42;484:5;473:68;464:77;;401:150;;181:376;:::o;-1:-1:-1:-;;;;;;;;:::o;:::-;;;;;;;;:::o;:::-;;;;;;;;:::o;289:658:72:-;460:2;512:21;;;582:13;;485:18;;;604:22;;;431:4;;460:2;683:15;;;;657:2;642:18;;;431:4;726:195;740:6;737:1;734:13;726:195;;;805:13;;-1:-1:-1;;;;;801:39:72;789:52;;896:15;;;;861:12;;;;837:1;755:9;726:195;;;-1:-1:-1;938:3:72;;289:658;-1:-1:-1;;;;;;289:658:72:o;952:250::-;1037:1;1047:113;1061:6;1058:1;1055:13;1047:113;;;1137:11;;;1131:18;1118:11;;;1111:39;1083:2;1076:10;1047:113;;;-1:-1:-1;;1194:1:72;1176:16;;1169:27;952:250::o;1207:271::-;1249:3;1287:5;1281:12;1314:6;1309:3;1302:19;1330:76;1399:6;1392:4;1387:3;1383:14;1376:4;1369:5;1365:16;1330:76;:::i;:::-;1460:2;1439:15;-1:-1:-1;;1435:29:72;1426:39;;;;1467:4;1422:50;;1207:271;-1:-1:-1;;1207:271:72:o;1483:1742::-;1716:2;1768:21;;;1838:13;;1741:18;;;1860:22;;;1687:4;;1716:2;1901;;1919:18;;;;1956:1;1999:15;;;1984:31;;1980:40;;2043:15;;;1687:4;;2107:1089;2123:6;2118:3;2115:15;2107:1089;;;-1:-1:-1;;2192:22:72;;;2188:36;2176:49;;2248:13;;2335:9;;-1:-1:-1;;;;;2331:35:72;2316:51;;2406:11;;2400:18;2438:15;;;2431:27;;;2519:19;;2288:15;;;2551:24;;;2732:21;;;;2598:2;2680:17;;;2668:30;;2664:39;;;2622:15;;;;2777:1;2791:296;2807:8;2802:3;2799:17;2791:296;;;2913:2;2909:7;2900:6;2892;2888:19;2884:33;2877:5;2870:48;2945:42;2980:6;2969:8;2963:15;2945:42;:::i;:::-;3016:17;;;;2935:52;-1:-1:-1;3059:14:72;;;;2835:1;2826:11;2791:296;;;-1:-1:-1;;;3174:12:72;;;;3110:6;-1:-1:-1;;3139:15:72;;;;2149:1;2140:11;2107:1089;;;-1:-1:-1;3213:6:72;;1483:1742;-1:-1:-1;;;;;;;;;;1483:1742:72:o;3230:1567::-;3432:4;3461:2;3501;3490:9;3486:18;3531:2;3520:9;3513:21;3554:6;3589;3583:13;3620:6;3612;3605:22;3646:2;3636:12;;3679:2;3668:9;3664:18;3657:25;;3741:2;3731:6;3728:1;3724:14;3713:9;3709:30;3705:39;3779:2;3771:6;3767:15;3800:1;3821;3831:937;3847:6;3842:3;3839:15;3831:937;;;3916:22;;;-1:-1:-1;;3912:36:72;3900:49;;3972:13;;4059:9;;-1:-1:-1;;;;;4055:35:72;4040:51;;4130:11;;4124:18;4162:15;;;4155:27;;;4243:19;;4012:15;;;4275:24;;;4365:21;;;;4410:1;;4333:2;4321:15;;;4424:236;4440:8;4435:3;4432:17;4424:236;;;4521:15;;-1:-1:-1;;;;;;4517:42:72;4503:57;;4629:17;;;;4468:1;4459:11;;;;;4586:14;;;;4424:236;;;-1:-1:-1;4746:12:72;;;;4683:5;-1:-1:-1;;;4711:15:72;;;;3873:1;3864:11;3831:937;;;-1:-1:-1;4785:6:72;;3230:1567;-1:-1:-1;;;;;;;;;3230:1567:72:o;4802:803::-;4964:4;4993:2;5033;5022:9;5018:18;5063:2;5052:9;5045:21;5086:6;5121;5115:13;5152:6;5144;5137:22;5190:2;5179:9;5175:18;5168:25;;5252:2;5242:6;5239:1;5235:14;5224:9;5220:30;5216:39;5202:53;;5290:2;5282:6;5278:15;5311:1;5321:255;5335:6;5332:1;5329:13;5321:255;;;5428:2;5424:7;5412:9;5404:6;5400:22;5396:36;5391:3;5384:49;5456:40;5489:6;5480;5474:13;5456:40;:::i;:::-;5446:50;-1:-1:-1;5554:12:72;;;;5519:15;;;;5357:1;5350:9;5321:255;;5840:131;-1:-1:-1;;;;;5915:31:72;;5905:42;;5895:70;;5961:1;5958;5951:12;5976:315;6044:6;6052;6105:2;6093:9;6084:7;6080:23;6076:32;6073:52;;;6121:1;6118;6111:12;6073:52;6160:9;6147:23;6179:31;6204:5;6179:31;:::i;:::-;6229:5;6281:2;6266:18;;;;6253:32;;-1:-1:-1;;;5976:315:72:o;6584:127::-;6645:10;6640:3;6636:20;6633:1;6626:31;6676:4;6673:1;6666:15;6700:4;6697:1;6690:15;6716:255;6788:2;6782:9;6830:6;6818:19;;-1:-1:-1;;;;;6852:34:72;;6888:22;;;6849:62;6846:88;;;6914:18;;:::i;:::-;6950:2;6943:22;6716:255;:::o;6976:::-;7048:2;7042:9;7090:6;7078:19;;-1:-1:-1;;;;;7112:34:72;;7148:22;;;7109:62;7106:88;;;7174:18;;:::i;7236:275::-;7307:2;7301:9;7372:2;7353:13;;-1:-1:-1;;7349:27:72;7337:40;;-1:-1:-1;;;;;7392:34:72;;7428:22;;;7389:62;7386:88;;;7454:18;;:::i;:::-;7490:2;7483:22;7236:275;;-1:-1:-1;7236:275:72:o;7516:186::-;7564:4;-1:-1:-1;;;;;7589:6:72;7586:30;7583:56;;;7619:18;;:::i;:::-;-1:-1:-1;7685:2:72;7664:15;-1:-1:-1;;7660:29:72;7691:4;7656:40;;7516:186::o;7707:806::-;7784:6;7792;7845:2;7833:9;7824:7;7820:23;7816:32;7813:52;;;7861:1;7858;7851:12;7813:52;7900:9;7887:23;7919:31;7944:5;7919:31;:::i;:::-;7969:5;-1:-1:-1;8025:2:72;8010:18;;7997:32;-1:-1:-1;;;;;8041:30:72;;8038:50;;;8084:1;8081;8074:12;8038:50;8107:22;;8160:4;8152:13;;8148:27;-1:-1:-1;8138:55:72;;8189:1;8186;8179:12;8138:55;8225:2;8212:16;8250:48;8266:31;8294:2;8266:31;:::i;:::-;8250:48;:::i;:::-;8321:2;8314:5;8307:17;8361:7;8356:2;8351;8347;8343:11;8339:20;8336:33;8333:53;;;8382:1;8379;8372:12;8333:53;8437:2;8432;8428;8424:11;8419:2;8412:5;8408:14;8395:45;8481:1;8476:2;8471;8464:5;8460:14;8456:23;8449:34;8502:5;8492:15;;;;;7707:806;;;;;:::o;8700:138::-;8779:13;;8801:31;8779:13;8801:31;:::i;8843:321::-;8919:5;8948:52;8964:35;8992:6;8964:35;:::i;8948:52::-;8939:61;;9023:6;9016:5;9009:21;9063:3;9054:6;9049:3;9045:16;9042:25;9039:45;;;9080:1;9077;9070:12;9039:45;9093:65;9151:6;9144:4;9137:5;9133:16;9128:3;9093:65;:::i;:::-;8843:321;;;;;:::o;9169:237::-;9223:5;9276:3;9269:4;9261:6;9257:17;9253:27;9243:55;;9294:1;9291;9284:12;9243:55;9316:84;9396:3;9387:6;9381:13;9374:4;9366:6;9362:17;9316:84;:::i;9411:164::-;9487:13;;9536;;9529:21;9519:32;;9509:60;;9565:1;9562;9555:12;9580:175;9658:13;;-1:-1:-1;;;;;9700:30:72;;9690:41;;9680:69;;9745:1;9742;9735:12;9760:1267;9852:6;9905:2;9893:9;9884:7;9880:23;9876:32;9873:52;;;9921:1;9918;9911:12;9873:52;9954:9;9948:16;-1:-1:-1;;;;;10024:2:72;10016:6;10013:14;10010:34;;;10040:1;10037;10030:12;10010:34;10063:22;;;;10119:6;10101:16;;;10097:29;10094:49;;;10139:1;10136;10129:12;10094:49;10165:22;;:::i;:::-;10210:33;10240:2;10210:33;:::i;:::-;10203:5;10196:48;10290:2;10286;10282:11;10276:18;10271:2;10264:5;10260:14;10253:42;10341:2;10337;10333:11;10327:18;10322:2;10315:5;10311:14;10304:42;10392:2;10388;10384:11;10378:18;10373:2;10366:5;10362:14;10355:42;10430:43;10468:3;10464:2;10460:12;10430:43;:::i;:::-;10424:3;10417:5;10413:15;10406:68;10507:43;10545:3;10541:2;10537:12;10507:43;:::i;:::-;10501:3;10494:5;10490:15;10483:68;10584:43;10622:3;10618:2;10614:12;10584:43;:::i;:::-;10578:3;10571:5;10567:15;10560:68;10667:3;10663:2;10659:12;10653:19;10697:2;10687:8;10684:16;10681:36;;;10713:1;10710;10703:12;10681:36;10750:56;10798:7;10787:8;10783:2;10779:17;10750:56;:::i;:::-;10744:3;10737:5;10733:15;10726:81;;10826:3;10816:13;;10861:39;10896:2;10892;10888:11;10861:39;:::i;:::-;10856:2;10849:5;10845:14;10838:63;10920:3;10910:13;;10955:41;10992:2;10988;10984:11;10955:41;:::i;:::-;10939:14;;;10932:65;;;;10943:5;9760:1267;-1:-1:-1;;;;9760:1267:72:o;11240:184::-;11310:6;11363:2;11351:9;11342:7;11338:23;11334:32;11331:52;;;11379:1;11376;11369:12;11331:52;-1:-1:-1;11402:16:72;;11240:184;-1:-1:-1;11240:184:72:o;11429:127::-;11490:10;11485:3;11481:20;11478:1;11471:31;11521:4;11518:1;11511:15;11545:4;11542:1;11535:15;11561:125;11626:9;;;11647:10;;;11644:36;;;11660:18;;:::i;12136:315::-;-1:-1:-1;;;;;12311:32:72;;12293:51;;12380:2;12375;12360:18;;12353:30;;;-1:-1:-1;;12400:45:72;;12426:18;;12418:6;12400:45;:::i;:::-;12392:53;12136:315;-1:-1:-1;;;;12136:315:72:o;12456:202::-;12523:6;12576:2;12564:9;12555:7;12551:23;12547:32;12544:52;;;12592:1;12589;12582:12;12544:52;12615:37;12642:9;12615:37;:::i;12663:168::-;12703:7;12769:1;12765;12761:6;12757:14;12754:1;12751:21;12746:1;12739:9;12732:17;12728:45;12725:71;;;12776:18;;:::i;:::-;-1:-1:-1;12816:9:72;;12663:168::o;13233:380::-;13312:1;13308:12;;;;13355;;;13376:61;;13430:4;13422:6;13418:17;13408:27;;13376:61;13483:2;13475:6;13472:14;13452:18;13449:38;13446:161;;13529:10;13524:3;13520:20;13517:1;13510:31;13564:4;13561:1;13554:15;13592:4;13589:1;13582:15;13446:161;;13233:380;;;:::o;13618:217::-;13658:1;13684;13674:132;;13728:10;13723:3;13719:20;13716:1;13709:31;13763:4;13760:1;13753:15;13791:4;13788:1;13781:15;13674:132;-1:-1:-1;13820:9:72;;13618:217::o;14129:1141::-;14245:6;14276:3;14320:2;14308:9;14299:7;14295:23;14291:32;14288:52;;;14336:1;14333;14326:12;14288:52;14369:2;14363:9;14399:15;;;;-1:-1:-1;;;;;14429:34:72;;14465:22;;;14426:62;14423:88;;;14491:18;;:::i;:::-;14531:10;14527:2;14520:22;14570:9;14564:16;14551:29;;14589:31;14614:5;14589:31;:::i;:::-;14644:5;14636:6;14629:21;14683:49;14728:2;14717:9;14713:18;14683:49;:::i;:::-;14678:2;14670:6;14666:15;14659:74;14766:49;14811:2;14800:9;14796:18;14766:49;:::i;:::-;14761:2;14753:6;14749:15;14742:74;14849:49;14894:2;14883:9;14879:18;14849:49;:::i;:::-;14844:2;14836:6;14832:15;14825:74;14933:50;14978:3;14967:9;14963:19;14933:50;:::i;:::-;14927:3;14919:6;14915:16;14908:76;15018:50;15063:3;15052:9;15048:19;15018:50;:::i;:::-;15012:3;15004:6;15000:16;14993:76;15103:50;15148:3;15137:9;15133:19;15103:50;:::i;:::-;15097:3;15089:6;15085:16;15078:76;15188:50;15233:3;15222:9;15218:19;15188:50;:::i;:::-;15182:3;15170:16;;15163:76;15174:6;14129:1141;-1:-1:-1;;;;14129:1141:72:o;15511:206::-;15580:6;15633:2;15621:9;15612:7;15608:23;15604:32;15601:52;;;15649:1;15646;15639:12;15601:52;15672:39;15701:9;15672:39;:::i;16704:1538::-;16951:13;;16325:12;;16318:20;16311:28;16299:41;;16403:4;16392:16;;;16386:23;16379:31;16372:39;16356:14;;;16349:63;16475:4;16464:16;;;16458:23;16451:31;16444:39;16428:14;;;16421:63;16530:4;16519:16;;;16513:23;-1:-1:-1;;;;;16606:21:72;;;16590:14;;;16583:45;16681:4;16670:16;;;16664:23;16660:32;;16644:14;;;16637:56;17011:17;;;17005:24;246:31;;17086:4;17071:20;;234:44;17129:17;;;17123:24;-1:-1:-1;;;;;12906:30:72;17210:4;17195:20;;12894:43;17253:17;;17247:24;6366:13;6359:21;17327:4;17312:20;;6347:34;17370:17;;;17364:24;246:31;;;17407:6;17457:18;;;234:44;;;;16894:3;16879:19;;;17364:24;17525:4;17517:6;17513:17;17507:24;17485:46;;17550:6;17565:58;17619:2;17608:9;17604:18;17588:14;-1:-1:-1;;;;;12906:30:72;12894:43;;12836:107;17565:58;17672:4;17664:6;17660:17;17654:24;17632:46;;17697:6;17712:51;17759:2;17748:9;17744:18;17728:14;6366:13;6359:21;6347:34;;6296:91;17712:51;17800:4;17788:17;;17782:24;17825:6;17847:18;;;17840:30;;;;17916:15;;;17910:22;17901:6;17886:22;;17879:54;17979:15;;;17973:22;17964:6;17949:22;;17942:54;18033:15;;18027:22;-1:-1:-1;;;;;246:31:72;;;18108:6;18093:22;;234:44;18153:15;;18147:22;246:31;;;18228:6;18213:22;;;234:44;;;;16704:1538;;-1:-1:-1;16704:1538:72:o;18247:476::-;-1:-1:-1;;;;;18468:32:72;;18450:51;;18537:2;18532;18517:18;;18510:30;;;-1:-1:-1;;18563:45:72;;18589:18;;18581:6;18563:45;:::i;:::-;18656:9;18648:6;18644:22;18639:2;18628:9;18624:18;18617:50;18684:33;18710:6;18702;18684:33;:::i;:::-;18676:41;18247:476;-1:-1:-1;;;;;;18247:476:72:o;18728:274::-;-1:-1:-1;;;;;18920:32:72;;;;18902:51;;18984:2;18969:18;;18962:34;18890:2;18875:18;;18728:274::o;19007:384::-;-1:-1:-1;;;;;;19192:33:72;;19180:46;;19249:13;;19162:3;;19271:74;19249:13;19334:1;19325:11;;19318:4;19306:17;;19271:74;:::i;:::-;19365:16;;;;19383:1;19361:24;;19007:384;-1:-1:-1;;;19007:384:72:o;19396:287::-;19525:3;19563:6;19557:13;19579:66;19638:6;19633:3;19626:4;19618:6;19614:17;19579:66;:::i;:::-;19661:16;;;;;19396:287;-1:-1:-1;;19396:287:72:o;19967:315::-;20142:2;20131:9;20124:21;20105:4;20162:45;20203:2;20192:9;20188:18;20180:6;20162:45;:::i;:::-;20154:53;;20272:1;20268;20263:3;20259:11;20255:19;20247:6;20243:32;20238:2;20227:9;20223:18;20216:60;19967:315;;;;;:::o;20413:1440::-;20643:6;20632:9;20625:25;20606:4;20669:2;20707:6;20702:2;20691:9;20687:18;20680:34;20750:6;20745:2;20734:9;20730:18;20723:34;20793:3;20788:2;20777:9;20773:18;20766:31;20817:1;20850:6;20844:13;20880:3;20902:1;20930:9;20926:2;20922:18;20912:28;;20990:2;20979:9;20975:18;21012;21002:61;;21056:4;21048:6;21044:17;21034:27;;21002:61;21109:2;21101:6;21098:14;21078:18;21075:38;21072:165;;-1:-1:-1;;;21136:33:72;;21192:4;21189:1;21182:15;21222:4;21143:3;21210:17;21072:165;21319:3;21304:19;;112;;;155:14;;;21348:18;21375:128;;;;21517:1;21512:315;;;;21341:486;;21375:128;-1:-1:-1;;21408:24:72;;21396:37;;21476:14;;21469:22;21466:1;21462:30;21453:40;;;-1:-1:-1;21375:128:72;;21512:315;20360:1;20353:14;;;20397:4;20384:18;;21607:1;21621:165;21635:6;21632:1;21629:13;21621:165;;;21713:14;;21700:11;;;21693:35;21756:16;;;;21650:10;;21621:165;;;21806:11;;;-1:-1:-1;;21341:486:72;-1:-1:-1;21844:3:72;;20413:1440;-1:-1:-1;;;;;;;;;;;;20413:1440:72:o;23692:875::-;23775:5;23823:4;23811:9;23806:3;23802:19;23798:30;23795:50;;;23841:1;23838;23831:12;23795:50;23874:2;23868:9;23916:4;23908:6;23904:17;23987:6;23975:10;23972:22;-1:-1:-1;;;;;23939:10:72;23936:34;23933:62;23930:88;;;23998:18;;:::i;:::-;24034:2;24027:22;24067:6;-1:-1:-1;24067:6:72;24097:37;24124:9;24097:37;:::i;:::-;24089:6;24082:53;24168:46;24210:2;24199:9;24195:18;24168:46;:::i;:::-;24163:2;24155:6;24151:15;24144:71;24248:46;24290:2;24279:9;24275:18;24248:46;:::i;:::-;24243:2;24235:6;24231:15;24224:71;24340:2;24329:9;24325:18;24319:25;24353:33;24378:7;24353:33;:::i;:::-;24414:2;24402:15;;24395:32;24472:3;24457:19;;24451:26;24486:33;24451:26;24486:33;:::i;:::-;24547:3;24535:16;;;;24528:33;23692:875;;-1:-1:-1;;23692:875:72:o;24572:1275::-;24670:6;24723:3;24711:9;24702:7;24698:23;24694:33;24691:53;;;24740:1;24737;24730:12;24691:53;24766:22;;:::i;:::-;24811:74;24877:7;24866:9;24811:74;:::i;:::-;24804:5;24797:89;24920:50;24965:3;24954:9;24950:19;24920:50;:::i;:::-;24913:4;24906:5;24902:16;24895:76;25005:49;25049:3;25038:9;25034:19;25005:49;:::i;:::-;24998:4;24991:5;24987:16;24980:75;25089:47;25131:3;25120:9;25116:19;25089:47;:::i;:::-;25082:4;25075:5;25071:16;25064:73;25156:3;25193:49;25238:2;25227:9;25223:18;25193:49;:::i;:::-;25186:4;25179:5;25175:16;25168:75;25262:3;25298:48;25342:2;25331:9;25327:18;25298:48;:::i;:::-;25292:3;25285:5;25281:15;25274:73;25366:3;25402:46;25444:2;25433:9;25429:18;25402:46;:::i;:::-;25396:3;25389:5;25385:15;25378:71;25468:3;25525:2;25514:9;25510:18;25504:25;25498:3;25491:5;25487:15;25480:50;25583:6;25572:9;25568:22;25562:29;25557:2;25550:5;25546:14;25539:53;25645:3;25634:9;25630:19;25624:26;25619:2;25612:5;25608:14;25601:50;25683;25728:3;25717:9;25713:19;25683:50;:::i;:::-;25678:2;25671:5;25667:14;25660:74;25766:50;25811:3;25800:9;25796:19;25766:50;:::i;:::-;25750:14;;;25743:74;-1:-1:-1;25754:5:72;;24572:1275;-1:-1:-1;;;;;24572:1275:72:o;25852:458::-;25931:6;25984:2;25972:9;25963:7;25959:23;25955:32;25952:52;;;26000:1;25997;25990:12;25952:52;26033:9;26027:16;-1:-1:-1;;;;;26058:6:72;26055:30;26052:50;;;26098:1;26095;26088:12;26052:50;26121:22;;26174:4;26166:13;;26162:27;-1:-1:-1;26152:55:72;;26203:1;26200;26193:12;26152:55;26226:78;26296:7;26291:2;26285:9;26280:2;26276;26272:11;26226:78;:::i;26594:360::-;26797:6;26786:9;26779:25;26840:6;26835:2;26824:9;26820:18;26813:34;26883:2;26878;26867:9;26863:18;26856:30;26760:4;26903:45;26944:2;26933:9;26929:18;26921:6;26903:45;:::i;:::-;26895:53;26594:360;-1:-1:-1;;;;;26594:360:72:o;27139:291::-;27316:2;27305:9;27298:21;27279:4;27336:45;27377:2;27366:9;27362:18;27354:6;27336:45;:::i;:::-;27328:53;;27417:6;27412:2;27401:9;27397:18;27390:34;27139:291;;;;;:::o",
    "linkReferences": {}
  },
  "methodIdentifiers": {
    "IS_TEST()": "fa7626d4",
    "_allocateBondAndAssertTruth(address,bytes)": "f4096671",
    "_commonCarbonUMArketSetUp()": "9472963b",
    "_commonSetup()": "6906f5f5",
    "_mockGetAssertionAssertingCaller(address,bytes32)": "ab30d35a",
    "carbonUMArket()": "a7969d07",
    "excludeArtifacts()": "b5508aa9",
    "excludeContracts()": "e20c9f71",
    "excludeSenders()": "1ed7831c",
    "failed()": "ba414fa6",
    "setUp()": "0a9254e4",
    "targetArtifactSelectors()": "66d9a9a0",
    "targetArtifacts()": "85226c81",
    "targetContracts()": "3f7286f4",
    "targetInterfaces()": "2ade3880",
    "targetSelectors()": "916a17c6",
    "targetSenders()": "3e5e3c23",
    "test_AssertionWithCorrectDispute()": "635e6115",
    "test_ResolveMarketNoDispute()": "217356c6",
    "test_ResolveMarketWithWrongDispute()": "dbd07b77"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.16+commit.07a7930e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"assertingCaller\",\"type\":\"address\"}],\"name\":\"AssertingCallerSet\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"assertionId\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"caller\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"disputer\",\"type\":\"address\"}],\"name\":\"AssertionDisputed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"assertionId\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"domainId\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"claim\",\"type\":\"bytes\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"asserter\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"callbackRecipient\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"escalationManager\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"caller\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"expirationTime\",\"type\":\"uint64\"},{\"indexed\":false,\"internalType\":\"contract IERC20\",\"name\":\"currency\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"bond\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"identifier\",\"type\":\"bytes32\"}],\"name\":\"AssertionMade\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"assertionId\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"bondRecipient\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"disputed\",\"type\":\"bool\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"settlementResolution\",\"type\":\"bool\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"settleCaller\",\"type\":\"address\"}],\"name\":\"AssertionSettled\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"requester\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"identifier\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"time\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"ancillaryData\",\"type\":\"bytes\"}],\"name\":\"PriceRequestAdded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"name\":\"log\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"log_address\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"val\",\"type\":\"uint256[]\"}],\"name\":\"log_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"int256[]\",\"name\":\"val\",\"type\":\"int256[]\"}],\"name\":\"log_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address[]\",\"name\":\"val\",\"type\":\"address[]\"}],\"name\":\"log_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"log_bytes\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"name\":\"log_bytes32\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"\",\"type\":\"int256\"}],\"name\":\"log_int\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"val\",\"type\":\"address\"}],\"name\":\"log_named_address\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"val\",\"type\":\"uint256[]\"}],\"name\":\"log_named_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"int256[]\",\"name\":\"val\",\"type\":\"int256[]\"}],\"name\":\"log_named_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"address[]\",\"name\":\"val\",\"type\":\"address[]\"}],\"name\":\"log_named_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"val\",\"type\":\"bytes\"}],\"name\":\"log_named_bytes\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"val\",\"type\":\"bytes32\"}],\"name\":\"log_named_bytes32\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"val\",\"type\":\"int256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"}],\"name\":\"log_named_decimal_int\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"val\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"}],\"name\":\"log_named_decimal_uint\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"val\",\"type\":\"int256\"}],\"name\":\"log_named_int\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"val\",\"type\":\"string\"}],\"name\":\"log_named_string\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"val\",\"type\":\"uint256\"}],\"name\":\"log_named_uint\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"name\":\"log_string\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"log_uint\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"logs\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"IS_TEST\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"asserter\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"claim\",\"type\":\"bytes\"}],\"name\":\"_allocateBondAndAssertTruth\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"assertionId\",\"type\":\"bytes32\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"_commonCarbonUMArketSetUp\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"_commonSetup\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"mockAssertingCaller\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"assertionId\",\"type\":\"bytes32\"}],\"name\":\"_mockGetAssertionAssertingCaller\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"carbonUMArket\",\"outputs\":[{\"internalType\":\"contract CarbonUMArket\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"excludeArtifacts\",\"outputs\":[{\"internalType\":\"string[]\",\"name\":\"excludedArtifacts_\",\"type\":\"string[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"excludeContracts\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"excludedContracts_\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"excludeSenders\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"excludedSenders_\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"failed\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"setUp\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"targetArtifactSelectors\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"},{\"internalType\":\"bytes4[]\",\"name\":\"selectors\",\"type\":\"bytes4[]\"}],\"internalType\":\"struct StdInvariant.FuzzSelector[]\",\"name\":\"targetedArtifactSelectors_\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"targetArtifacts\",\"outputs\":[{\"internalType\":\"string[]\",\"name\":\"targetedArtifacts_\",\"type\":\"string[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"targetContracts\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"targetedContracts_\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"targetInterfaces\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"},{\"internalType\":\"string[]\",\"name\":\"artifacts\",\"type\":\"string[]\"}],\"internalType\":\"struct StdInvariant.FuzzInterface[]\",\"name\":\"targetedInterfaces_\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"targetSelectors\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"},{\"internalType\":\"bytes4[]\",\"name\":\"selectors\",\"type\":\"bytes4[]\"}],\"internalType\":\"struct StdInvariant.FuzzSelector[]\",\"name\":\"targetedSelectors_\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"targetSenders\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"targetedSenders_\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"test_AssertionWithCorrectDispute\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"test_ResolveMarketNoDispute\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"test_ResolveMarketWithWrongDispute\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"test/CarbonUMArket.Resolve.t.sol\":\"CarbonUMArketResolveTest\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@across-protocol/=node_modules/@across-protocol/\",\":@ensdomains/=node_modules/@ensdomains/\",\":@eth-optimism/=node_modules/@across-protocol/contracts/node_modules/@eth-optimism/\",\":@gnosis.pm/=node_modules/@gnosis.pm/\",\":@maticnetwork/=node_modules/@maticnetwork/\",\":@openzeppelin/=node_modules/@openzeppelin/\",\":@uma/=node_modules/@uma/\",\":@uniswap/=node_modules/@uniswap/\",\":base64-sol/=node_modules/base64-sol/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":eth-gas-reporter/=node_modules/eth-gas-reporter/\",\":forge-std/=lib/forge-std/src/\",\":hardhat-deploy/=node_modules/hardhat-deploy/\",\":hardhat/=node_modules/hardhat/\"]},\"sources\":{\"contracts/CarbonUMArket.sol\":{\"keccak256\":\"0x03d640dbae611ca5d8f3b9c64ad88fe4a66d93511cd24df2183c28a45bd9f54a\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://4fceec6949d997e530486cdb06d2aa0672fe881afeccd22c854bb210938dfa7e\",\"dweb:/ipfs/QmPDYPdghCTcD4EnevAsdYoxggeji7iXQpEAsTm3SsQ8f4\"]},\"lib/forge-std/lib/ds-test/src/test.sol\":{\"keccak256\":\"0x8758531bbac3972efcf1fa46383dbe1d276406fe527bc7abb2f236486278e83b\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://1f64264d61506847acf8761e84aff690cebe830958eac00bac7924d8be569240\",\"dweb:/ipfs/QmSekDJvJ82MZAmr63n7YvfLzQ7gS4NLSHPmHL3GN3rw8k\"]},\"lib/forge-std/src/Base.sol\":{\"keccak256\":\"0x4ff1a785311017d1eedb1b4737956fa383067ad34eb439abfec1d989754dde1c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f553622969b9fdb930246704a4c10dfaee6b1a4468c142fa7eb9dc292a438224\",\"dweb:/ipfs/QmcxqHnqdQsMVtgsfH9VNLmZ3g7GhgNagfq7yvNCDcCHFK\"]},\"lib/forge-std/src/StdAssertions.sol\":{\"keccak256\":\"0x1a0dee4d8b2c81e9318e87dd85ef009467ebf7dba6575530d1fce94d34dbae60\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ddd790c86ddde1013d1f7a552a80168eacf2e9244077f96799180644ad523a5b\",\"dweb:/ipfs/QmYinBFt9uEVFXP9ytT9CDoNpzWieQVgLWRFRNiypMzJaL\"]},\"lib/forge-std/src/StdChains.sol\":{\"keccak256\":\"0xdbb593a36db1fde25c398f38312cfedc5b39c4bad1c65c2f58b7515c4dd76be8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://afc49471af92a1fd12686e2757ad0cbeb5bfe3cc95b8b6b5a5a91af83a8bcfd1\",\"dweb:/ipfs/QmcAQ5WesfLBUChNGuRMGQsDYf44q35Ln7Xb3jmyQgdESU\"]},\"lib/forge-std/src/StdCheats.sol\":{\"keccak256\":\"0xa0bac08b3d12d561fadf74c83c69f3ee54fe40e0c7766611766f6db70c202373\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://292f1e61a3a60f9f4075d0b567f5123d159b0541b7787e4523597ab57331eb08\",\"dweb:/ipfs/QmatxDNPiYVtLap2nn4Hp3AxzkSzkdAQDirbc5QKCDfde5\"]},\"lib/forge-std/src/StdError.sol\":{\"keccak256\":\"0xbf477b11a42d7611696956546bcfaa29317d1166bf65e402344599c05943fc77\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bc2e117d1135e030862b96a6526a43feb38d396cc79857f1fb696d4eff0e5fd6\",\"dweb:/ipfs/QmdSuQ5RrQudTLsNmWXGEeVJX8gR5U9XPm6m4dwwuQnJrj\"]},\"lib/forge-std/src/StdInvariant.sol\":{\"keccak256\":\"0x67299bfacd77fddfa2a67b8e2b901e0e333618a4975fb94850b07475e51f6de6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1b61121d310f4053ce344b345b4a9ccf43b059daf9097ec2647f594beaca896d\",\"dweb:/ipfs/QmZUCoTtXBM9zfAZVbj2dFPPnKaV1CSZzXE7zictyg3Gfz\"]},\"lib/forge-std/src/StdJson.sol\":{\"keccak256\":\"0x8f914dbd016bd0e318fe2b8bd556fbc8256c7cddc24e3e4fcb9f3c1c1935592d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://19e704df493dde38323303b07d18cadfeb4dcadf1ddc2301add4aea9474fbb5e\",\"dweb:/ipfs/QmZasuGiLK8LHwWtvpqEBxUR6QFY6GdzLMTJ9q7CMf8PNZ\"]},\"lib/forge-std/src/StdMath.sol\":{\"keccak256\":\"0xd90ad4fd8aeaeb8929964e686e769fdedd5eded3fc3815df194a0ab9f91a3fb2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7919b70f636c7b805223992f28ad1ad0145d6c1385b5931a3589aface5fe6c92\",\"dweb:/ipfs/QmY7FRaULwoGgFteF8GawjQJRfasNgpWnU2aiMsFrYpuTC\"]},\"lib/forge-std/src/StdStorage.sol\":{\"keccak256\":\"0x4298f3f4cedaedb07029820b1daad2c03af45379559392201f7bf3ec71105811\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6e062f36d8d1ae3c383ef8975757926eaa9c4de3a92b5f1fe2d12748bcd8db32\",\"dweb:/ipfs/QmcWkv3ia5Ew4DZNcudMNSTNXZ3W2QiXTZunRd44e9BT8z\"]},\"lib/forge-std/src/StdStyle.sol\":{\"keccak256\":\"0x43e2a8a9b9c2574dabe74f11adf6f782df218f463540e3b5b563609fe108597d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://51363ca97404cf4128e1141428949768c31929e75e014b02c85e887fbbb4f1b8\",\"dweb:/ipfs/QmVhtbQc2fU4rRmbcfBtz34mAgG4BAZBsbna1Ca4SkoPsK\"]},\"lib/forge-std/src/StdUtils.sol\":{\"keccak256\":\"0x8758c42ba9d9e46868b796e2330ac239006ede07bd438a4b36dd6f2c47d27dc1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://11f5752e0187b1e3631b875efdbe05d45929d05f1c1717105a9115d0a6628140\",\"dweb:/ipfs/QmUKkx9jfsUvjyYBw45RvrW1hTFXDXi2Jv5tbHP86mnzpi\"]},\"lib/forge-std/src/Test.sol\":{\"keccak256\":\"0x39b1729d5868c8e94ab8af16751eb500a17fe3870dc627d2b7ddcd5df18d7ad0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1568c82aff125cc4b0fc168be9d67ac313f469a3c7405c5493caecaaaecfb765\",\"dweb:/ipfs/QmXByuZReJsdu1jDcxj1FcmpcUnzoBcqybn9kWgDAECWri\"]},\"lib/forge-std/src/Vm.sol\":{\"keccak256\":\"0x039a59e16791fb3595615f1ad19d614cdb1f1e567ed3bfc1a35d97177387be68\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://da3d0bfe99104664a3a053665578ad1277ea79e0704519d3b7ff98b3b7054155\",\"dweb:/ipfs/QmesLHpsvzvC6DoTFLdgNibRU5sfeNggYtyaRfA64t2PsD\"]},\"lib/forge-std/src/console.sol\":{\"keccak256\":\"0x91d5413c2434ca58fd278b6e1e79fd98d10c83931cc2596a6038eee4daeb34ba\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://91ccea707361e48b9b7a161fe81f496b9932bc471e9c4e4e1e9c283f2453cc70\",\"dweb:/ipfs/QmcB66sZhQ6Kz7MUHcLE78YXRUZxoZnnxZjN6yATsbB2ec\"]},\"lib/forge-std/src/console2.sol\":{\"keccak256\":\"0x954646445d1014c3cd85c7918f5e7adeeca5ee44b68c00bafa237e597a4e35ea\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://516fa3be52da4763147175bfba4be0aa011fadbb0c1afb01f97265bd4cee7973\",\"dweb:/ipfs/QmdixAyMJefx7qePChgdxcBH5MxhmN7vsqPuPLx3CgrVmF\"]},\"lib/forge-std/src/interfaces/IMulticall3.sol\":{\"keccak256\":\"0x7aac1389150499a922d1f9ef5749c908cef127cb2075b92fa17e9cb611263d0a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d95ebb7c7c463e08ebc12dab639945752fb2480acfc6e86da32f72732a7fd0c0\",\"dweb:/ipfs/QmNXK8P8oPWwajsQHvAHw3JPyQidPLCGQN3hWu1Lk6PBL2\"]},\"lib/forge-std/src/safeconsole.sol\":{\"keccak256\":\"0xbaf41fdc6c54297e7cd8250e48b0f20eaac918e342a1028cef3f9a52ac086381\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a500ad81dea226f9910e6b50f99a9ff930105e393a692cbfb2185e4cdb4424ae\",\"dweb:/ipfs/QmVbUQpXNMmMWRiy4FvBNczzq46BMGfUoBikvSHNiCxVTq\"]},\"node_modules/@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0x24e0364e503a9bbde94c715d26573a76f14cd2a202d45f96f52134ab806b67b9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e12cbaa7378fd9b62280e4e1d164bedcb4399ce238f5f98fc0eefb7e50577981\",\"dweb:/ipfs/QmXRoFGUgfsaRkoPT5bxNMtSayKTQ8GZATLPXf69HcRA51\"]},\"node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0xdadd41acb749920eccf40aeaa8d291adf9751399a7343561bad13e7a8d99be0b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://12af4ac016f9fdf3be5d15824f4292272aa11f6b2e0192a0f7320f5ad49bbbf0\",\"dweb:/ipfs/QmRXMpdqCgA3TYuYxBodqs5p9jGbnMW6xa2gvjppvq4TWk\"]},\"node_modules/@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xbbc8ac883ac3c0078ce5ad3e288fbb3ffcc8a30c3a98c0fda0114d64fc44fca2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87a7a5d2f6f63f84598af02b8c50ca2df2631cb8ba2453e8d95fcb17e4be9824\",\"dweb:/ipfs/QmR76hqtAcRqoFj33tmNjcWTLrgNsAaakYwnKZ8zoJtKei\"]},\"node_modules/@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x8de418a5503946cabe331f35fe242d3201a73f67f77aaeb7110acb1f30423aca\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a376d3dda2cb70536c0a45c208b29b34ac560c4cb4f513a42079f96ba47d2dd\",\"dweb:/ipfs/QmZQg6gn1sUpM8wHzwNvSnihumUCAhxD119MpXeKp8B9s8\"]},\"node_modules/@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0xc3d946432c0ddbb1f846a0d3985be71299df331b91d06732152117f62f0be2b5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4632c341a06ba5c079b51ca5a915efab4e6ab57735b37839b3e8365ff806a43e\",\"dweb:/ipfs/QmTHT3xHYed2wajEoA5qu7ii2BxLpPhQZHwAhtLK5Z7ANK\"]},\"node_modules/@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0x2ccf9d2313a313d41a791505f2b5abfdc62191b5d4334f7f7a82691c088a1c87\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b3a57d0854b2fdce6ebff933a48dca2445643d1eccfc27f00292e937f26c6a58\",\"dweb:/ipfs/QmW45rZooS9TqR4YXUbjRbtf2Bpb5ouSarBvfW1LdGprvV\"]},\"node_modules/@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"node_modules/@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x32c202bd28995dd20c4347b7c6467a6d3241c74c8ad3edcbb610cd9205916c45\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8179c356adb19e70d6b31a1eedc8c5c7f0c00e669e2540f4099e3844c6074d30\",\"dweb:/ipfs/QmWFbivarEobbqhS1go64ootVuHfVohBseerYy9FTEd1W2\"]},\"node_modules/@openzeppelin/contracts/utils/math/SafeMath.sol\":{\"keccak256\":\"0xa2f576be637946f767aa56601c26d717f48a0aff44f82e46f13807eea1009a21\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://973868f808e88e21a1a0a01d4839314515ee337ad096286c88e41b74dcc11fc2\",\"dweb:/ipfs/QmfYuZxRfx2J2xdk4EXN7jKg4bUYEMTaYk9BAw9Bqn4o2Y\"]},\"node_modules/@openzeppelin/contracts/utils/math/SignedSafeMath.sol\":{\"keccak256\":\"0x62f53f262fabbbc6d8ab49488d8fce36370351aff2b8d3898d499d68995a71c2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://efd599513c2f313a3f5e9536beb2b80a0d2b3dd34202c174a707d81b7dc751ce\",\"dweb:/ipfs/QmdDiENVFSyWjfFskNLnViMH77DHg3oDthkSZk7dMzNNKB\"]},\"node_modules/@uma/core/contracts/common/implementation/AddressWhitelist.sol\":{\"keccak256\":\"0xc1f20b925f9d37230aaf7bbee536f9a9b08e4772864f0a243ff1b69b54710fee\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://55bc6782bd269463214dbafa8702b2ff33910fd4a51ab24d775aabb15e278bcc\",\"dweb:/ipfs/QmV41DnGByGBtg8gk7MG6Nr3xYo5R5varZ8cewywdKNATQ\"]},\"node_modules/@uma/core/contracts/common/implementation/AncillaryData.sol\":{\"keccak256\":\"0x8ff33ac32d3e6de25de9e0ac2c0ff9a621f187fa97e9ee84092b327471baa3ce\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://0bbaed49756e8cf7ef405e132f441cd7a735ac6186a200b0179147e7d137b74a\",\"dweb:/ipfs/QmeSBJX5a61LZPxbkUKS2NF4LSxemgDwjD65fCAmyP7PX2\"]},\"node_modules/@uma/core/contracts/common/implementation/ExpandedERC20.sol\":{\"keccak256\":\"0x8201459d3f78a1f97da7c421f2fbb859924d4facfc5fc235ba65d85bf12b2229\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://990c055523abe059c0e3e9dc0d631b17db960899dbfcfb2c562bc1ed9de8f140\",\"dweb:/ipfs/QmNgQP68bBrZvP2Rs4TdpESS3LFxqGgtTELZ1wm5mZqh4K\"]},\"node_modules/@uma/core/contracts/common/implementation/FixedPoint.sol\":{\"keccak256\":\"0x996b97cc4fa5da4064e3aee500edc6972485d59a9334ceec81155e2c2f484dae\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://8d7c028926dc2b27e7dc103363dca8a43f60b3351f4a14bcb702660f95c68663\",\"dweb:/ipfs/QmXz4ieFjP5RxJ35F8GbPryYEGvFmxc4Gqx8EK7N57ixzT\"]},\"node_modules/@uma/core/contracts/common/implementation/Lockable.sol\":{\"keccak256\":\"0x41d78fcce54598ad5f26bc0b778c0f4fedbd836401625e49e736979f69a87ef0\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://4ce111bb50441ef5125e7d42284f6debbc17fd589515d7b8cede7e9d1d5f0ede\",\"dweb:/ipfs/QmaXiXACWVEDDHoCHNXdVBoNpf8QNHkUZ1kf5MfbxfL6jj\"]},\"node_modules/@uma/core/contracts/common/implementation/MultiCaller.sol\":{\"keccak256\":\"0x9f6afe5bafc5e16fe8d63010a740ec3a88a9f00a7236ea7e5b039a2f50eb346e\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://a971572a4a9ed32e5ec15ac384af593d9499778f6ec593dbdba67d44ced4c7d8\",\"dweb:/ipfs/QmbdpfhhnUyoHWe7TPFBZxT6R6zyxJEDcGBNwDt5ncweRv\"]},\"node_modules/@uma/core/contracts/common/implementation/MultiRole.sol\":{\"keccak256\":\"0x134c5a2f847832705be631f2b4eb2a3e23a91a2f0e63560abb481e85eeebfae6\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://f1267c6ad560d1eb896575919ecca13759bf50bb82d1215e03fc1f0424ec37a6\",\"dweb:/ipfs/QmXewGxpSmSMGYmT6ZUyxCVzy2cybxicbnyCn8w87m5mo3\"]},\"node_modules/@uma/core/contracts/common/implementation/Testable.sol\":{\"keccak256\":\"0x0254b45747293bb800373a58d123969adec0428f7be79dc941cab10fcad09918\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://537d694e3753596f507d071f283be9caeaad0010c444c9c9955d729affeb4907\",\"dweb:/ipfs/QmZ1WfVTBao11QaN6aygMhnt45UjRq77ZwfKPFmHiVSdaJ\"]},\"node_modules/@uma/core/contracts/common/implementation/TestnetERC20.sol\":{\"keccak256\":\"0xea7c79b7d7b55b6d88d878ac44837c691641e727511f82adbfb399f5cbe77319\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://6acd45d4b58f8e150eb2dcc0d8314b38766b31671ce0aa6e1055a2f8ba93db80\",\"dweb:/ipfs/QmdsjVSVsXCidcbNeT5AzEM76jMKJ53DUD7zEcFetfdE6P\"]},\"node_modules/@uma/core/contracts/common/implementation/Timer.sol\":{\"keccak256\":\"0x9e0dd7389718bd5d1da910273a6f4cee98ee22bfc0c92bde0f0955c0e23adb5e\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://7ddac8d3cb76f8811156a11a7702d7c05b15a0f18c22b5abdc318723193f9266\",\"dweb:/ipfs/QmPxL7AU8NkURJaZ6WxXNcw88wGMSoPX4jbt7SMdPJqtYv\"]},\"node_modules/@uma/core/contracts/common/implementation/Withdrawable.sol\":{\"keccak256\":\"0x0cffa58907ae0c4b2948f225723e5f4346276c0f1484452fb5c78fc90b79c630\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://e832b3f09aa18ef687a34ffc754f9e9d1200c63da8f1550e46111a44a2b2433d\",\"dweb:/ipfs/QmdqUvbxXtea2w3msKp9PRAhxs3YsJCWX31bWRHSuq54Vr\"]},\"node_modules/@uma/core/contracts/common/interfaces/AddressWhitelistInterface.sol\":{\"keccak256\":\"0x22fb8588dff1d5cff76a28111d6c9b190765d99facd93c8ff3b54771f245c0d8\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://5ecd993f00de290a3c7bf21da23a9439cf2ccb22028316df92b79780ac8aa533\",\"dweb:/ipfs/QmTZ7x7U4EEzTacqapzSdFs2np5WNsqm4XeUBqzQxxDJei\"]},\"node_modules/@uma/core/contracts/common/interfaces/ExpandedIERC20.sol\":{\"keccak256\":\"0xb8252039cba45f1c19cd677f150a9823a5d6e1845cad90e3041d97c96f273c26\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://95106656c95e12c30a2a4c482a859df6df55c3b56bb9f7835eb5c685ca3175d3\",\"dweb:/ipfs/QmcuJoX7T53vTCDcQK8WcCJdT1LzHS35vPmSVfg1DG32cd\"]},\"node_modules/@uma/core/contracts/data-verification-mechanism/implementation/Constants.sol\":{\"keccak256\":\"0xe40957105a9240c6bcb9753fd0011fe9f382c437cd6771c57bf7a96f8ceb9c84\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://cbf0d25e841b1f5c4022d09fb29220cb428139443cb29c4ab8dbfff71dffcc05\",\"dweb:/ipfs/QmSVVr5wH1tZi6WmKyuy1K8yS6JN4DeK5kWaZpPKtXiqkK\"]},\"node_modules/@uma/core/contracts/data-verification-mechanism/implementation/Finder.sol\":{\"keccak256\":\"0x0dfa6eda28743755f159de563ee2350b7edf81e4173e6bc3e35da7ad22c54dcb\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://5fecfe0b81cb3437fde85798730bdcc9e9b124e4c22a7acb146fcc4b86f77702\",\"dweb:/ipfs/QmTCe8RfRihRXP9cuhM3Kgn36kR3JosoLzD1JQ3hWjdf65\"]},\"node_modules/@uma/core/contracts/data-verification-mechanism/implementation/IdentifierWhitelist.sol\":{\"keccak256\":\"0x77ad704fca2d76e187bbc72ed48323cf5b483dbee6c86afe023103d6fc7129eb\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://6c8a7765d146c7133c5028b40b4a7a060a030425299d8d6622a06af5c44d4aa8\",\"dweb:/ipfs/QmU5TDtc3XHDgp25WxFmKbYGycY7NsT5EtHJ6DH5Q2YWgt\"]},\"node_modules/@uma/core/contracts/data-verification-mechanism/implementation/Store.sol\":{\"keccak256\":\"0x6a2b6982a9bbe9860c73c6c542e2021050b1127b28f887c329f36cc71c20dad2\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://977406313978d803c0e5327f52c594f044c231fa3e9e6ab265ce19e457a06678\",\"dweb:/ipfs/QmY7en5NPTBvpriHZMKiWgzG9T3hNopR11d7VsBBPZaaVD\"]},\"node_modules/@uma/core/contracts/data-verification-mechanism/interfaces/FinderInterface.sol\":{\"keccak256\":\"0x9166fbfe08e954eb86d33c114fcde7ce4fd0dda5d9d28b31210582bfc769fa86\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://e611e12bcaaebfdf65b67c566ff1d34708e757f01a445bd87c55862e89383b81\",\"dweb:/ipfs/QmYNSq5oopTShdS6j4VWKqoLxmQSRKmWebCxw6K4LfmKrf\"]},\"node_modules/@uma/core/contracts/data-verification-mechanism/interfaces/IdentifierWhitelistInterface.sol\":{\"keccak256\":\"0x9ae86a30dd1a8c03fb2c6d27be570bb30c4c0b13ac63cde8620b7e4b51d88dc9\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://a71d2aff48e075ecab56a9c9767775d1d77e04ec9191fed124e71003220549e3\",\"dweb:/ipfs/QmYPWsZXro6fzqpZY6UxQ5X8znEXfLp2sun8oXzdz8bTyc\"]},\"node_modules/@uma/core/contracts/data-verification-mechanism/interfaces/OracleAncillaryInterface.sol\":{\"keccak256\":\"0xd58b41fe1e389f7871db7c04f2c05c1aac1d0455bbc521534da81fd657016a1f\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://cc532e9c550bb1bba0daa33fda748590cd06ce94a9566fe65dac04e7d40977bc\",\"dweb:/ipfs/QmZKvfRW2LJFt5MWZbKuU9ujkXnS2hkPUJVj8wwJWcuZGX\"]},\"node_modules/@uma/core/contracts/data-verification-mechanism/interfaces/StoreInterface.sol\":{\"keccak256\":\"0xbb73671684309c91ad5ef3da1474051d03f2e7d5882bed7f5c4317e5d4c768df\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://32386544d3119fd0187a8c4e8b01c739f508ab863faa04345cabc2544081f9e8\",\"dweb:/ipfs/QmYszDURs1x75rsejZkGt9zCkASXnJtufbNsL3XHe2eJPQ\"]},\"node_modules/@uma/core/contracts/data-verification-mechanism/test/MockOracleAncillary.sol\":{\"keccak256\":\"0x5ee630bcd6467ad0077f2d61baf77c59b7cf581a2c00fe816910d98b013ad0aa\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://f525c98da45397f68920ef61b8f9ac512690cb46f4192b4a50edfd6b49ad5199\",\"dweb:/ipfs/Qma2mSJu2XHXbzhkwbyRmoJcdnwE3w2N8pTiBkt9u9dwzd\"]},\"node_modules/@uma/core/contracts/optimistic-oracle-v3/implementation/ClaimData.sol\":{\"keccak256\":\"0x6e887a70326e5ede4a8c5002d4123a8c77b477ce58cf92533c38cd3dc6142cb5\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://bdafa7c59d0825da944c46664bddb1203bb4158dd0e1ddd6bbdeb276e66be0f8\",\"dweb:/ipfs/QmVb496JWqBib55HX6G3iPkAMv64Bj2UDegeVEYiNcYuDZ\"]},\"node_modules/@uma/core/contracts/optimistic-oracle-v3/implementation/OptimisticOracleV3.sol\":{\"keccak256\":\"0xeba5082c48c3d891f2422b8c0d1d5d6552ab47b5d538db7ff05ffb2f3db25ffc\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://d818630e1c094792613a0539aa0a7677ca8fa92a5308eaf4ff7cf8ea8a4c547e\",\"dweb:/ipfs/QmSM78A3afY6osh4VAmyJX2E4Qyg4qcY1KwY5uFnSK4Yia\"]},\"node_modules/@uma/core/contracts/optimistic-oracle-v3/implementation/test/AssertingCallerTest.sol\":{\"keccak256\":\"0x212dafde3707bc594b103f3baef2612e521d5cced481d81938938cc5c6fc4068\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://21e87397b59f9529a3e9ed9ef821f83f1a73bf685c2ec37dc70a2fbfc79aa441\",\"dweb:/ipfs/QmRmBzN3ztihHgeHzir1tz2MGsCrLM2Krc7ozQ4MiQe8jt\"]},\"node_modules/@uma/core/contracts/optimistic-oracle-v3/implementation/test/OptimisticOracleV3Test.sol\":{\"keccak256\":\"0xdb817afdd3c786d21ac8dede8e97452905d0ba84f444949cf6f92f77e8c2a38e\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://f88474c7ac47ad72196818aa1d77d3b4bccac18ec77ae008ed53ec48c18f4fee\",\"dweb:/ipfs/QmPxsszotngGGDBv6vCE1kANMtgX8fLD6Xv7YwtZsUKqJQ\"]},\"node_modules/@uma/core/contracts/optimistic-oracle-v3/interfaces/EscalationManagerInterface.sol\":{\"keccak256\":\"0xce31adf62ae47468bab181bf1137b05e8ac0a003f019c343ac137a76ea32efc7\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://eb1b93b648adf4130fdfe7a62d817cda0519e7760a50b90f16a3c46cee4c0967\",\"dweb:/ipfs/QmNPD4TRAm9kqqQDKQabqZgaorkJNov96iLgxsm5HRTSZN\"]},\"node_modules/@uma/core/contracts/optimistic-oracle-v3/interfaces/OptimisticOracleV3CallbackRecipientInterface.sol\":{\"keccak256\":\"0x79f90bc84ed5d394380e99f0a5d1b219abd9016bc3a02fad0099014af08af03e\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://dc1b7b847eb711750bc76ab45a13294b05fc09e361294a6bdffb90cb15f50b63\",\"dweb:/ipfs/QmQSs2R7mmGojGdNkqP75Vf7LajRkfJ1oGuYAUCHYGmPEQ\"]},\"node_modules/@uma/core/contracts/optimistic-oracle-v3/interfaces/OptimisticOracleV3Interface.sol\":{\"keccak256\":\"0xf31322bfd64854f0bfa92051d6ec711c1eed15d8042f394f5c24c05378218367\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://535bc2a6060e86a49524fd3c0062afcf83077530cefb3c1b8179b832f03ca81e\",\"dweb:/ipfs/QmQZhqn6oUiebSWEKbqcmiMGkqAb8B59WsRAyFU8WY84ct\"]},\"test/CarbonUMArket.Common.sol\":{\"keccak256\":\"0x721e19f7a5d4cbd2662bbcd6a88bbcb8fb53d90c7760cc5e06f403b0e7f40c2c\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://c6074c6e5271e029c84ee8260c4329e5f73e317542cb88d82c991a8d3f5721a8\",\"dweb:/ipfs/QmefsUGan5uY272pavX4Siz1eiRKhEAJTV2mECtRqwvwFS\"]},\"test/CarbonUMArket.Resolve.t.sol\":{\"keccak256\":\"0x0355240e120602c3b7164351591e1e5bbc4c0e899fa70cb147ad745028d9acb7\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://e279aa7f862010a7155e5f9d6c93e77d150921eb799aebd60e34cde926535c85\",\"dweb:/ipfs/QmQzjwnvgmgNN2Y4hCEwMiUBS5XAtEvShEghp7NFnWdNX5\"]},\"test/common/CommonOptimisticOracleV3Test.sol\":{\"keccak256\":\"0xef9f5c2c5c37257681e697148b5f724bc9a683e801be4803c555625edee60d5b\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://35278764f5977e9f0161420f35681121958d409f5fe2a1299b1c7ad930e27467\",\"dweb:/ipfs/QmcNrmrzpGYyRzLbkKnrj8HBVH8qLeZSrcRiRDHbiqCoPe\"]},\"test/fixtures/common/CommonTestBase.sol\":{\"keccak256\":\"0xef45684397f61b92c77ef51e8a23579bca93a332c784e5b2f4e2a3c9343f9b50\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://8a35ad0d9814f198b93e72031517350fc230a2d4ad20fa05a805bd4abc4adc75\",\"dweb:/ipfs/QmbNJoPfRsFstJV5S1jMCzMwCN7qvFzc631PSSMPnQnBno\"]},\"test/fixtures/common/TestAddress.sol\":{\"keccak256\":\"0x30f53e79e844909966fa5b92246c74d8585ff5d540f099c7a99461cc6ebf9d99\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://8e58f9210e67b7efdb5633d9d67834ec5b52c5b48de0e0388b0ecd8f5853227b\",\"dweb:/ipfs/QmZaTBTkBx3QYPBzhRMb7nTdhfZCctwmrAVL9hST6Xw3bn\"]},\"test/fixtures/common/TimerFixture.sol\":{\"keccak256\":\"0x9f0b735cb4d2d494d670be9875082c9e7944e4e9e1989a99524b9dffbddeb9cb\",\"urls\":[\"bzz-raw://a2e53b878c9f8bdc88cb91cfb1b1631d1fec6d7c3009a1954e3215989c05d937\",\"dweb:/ipfs/QmRSi291avEMxygy47inL8VXCyJ4PSgqvx9iRZwbo19rnx\"]},\"test/fixtures/dvm/BaseDvmFixture.sol\":{\"keccak256\":\"0x84d096fe2fe9c507a772831db59b3b4ad023c791ca5334c4c6ac29c03854d56a\",\"urls\":[\"bzz-raw://bbcf3381ac7b375c93d734d9591a6cb1fb0ba8445e3d141e36d809b97e8e46ff\",\"dweb:/ipfs/QmczTUkTzjcFM9kCHbcKpK6gdxChsABaFBSz8tsFkrU4fZ\"]},\"test/fixtures/dvm/MockDvmFixture.sol\":{\"keccak256\":\"0xde8cfa220b09bb8576733acff3ff12989753698743b25b3b51ccdb84a009c5b1\",\"urls\":[\"bzz-raw://b436588048b11b68fa27a4bab1e2623ee0a3102d46e28d67ea8fae4989661512\",\"dweb:/ipfs/QmZU56VYo9cpyBNv8hLadNJAj4jNWFxQJJQgV3NpPcTgd2\"]},\"test/fixtures/optimistic-oracle-v3/OptimisticOracleV3Fixture.sol\":{\"keccak256\":\"0x4dbc410556ebf8c68d4053e40df6ced58c3ad2bcd3c7b07a38d6e45db64f6a9f\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://e1c1f054e8fe6207a132b2c101f3a103cc2527f2edfc52fcec465f1f45e8bdd3\",\"dweb:/ipfs/QmYqFoT2H2hXGpqFs6yBRCbJ8tyBwHekWvqFFsKvfSwKLf\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.16+commit.07a7930e"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "assertingCaller",
              "type": "address",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "AssertingCallerSet",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "assertionId",
              "type": "bytes32",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "caller",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "disputer",
              "type": "address",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "AssertionDisputed",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "assertionId",
              "type": "bytes32",
              "indexed": true
            },
            {
              "internalType": "bytes32",
              "name": "domainId",
              "type": "bytes32",
              "indexed": false
            },
            {
              "internalType": "bytes",
              "name": "claim",
              "type": "bytes",
              "indexed": false
            },
            {
              "internalType": "address",
              "name": "asserter",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "callbackRecipient",
              "type": "address",
              "indexed": false
            },
            {
              "internalType": "address",
              "name": "escalationManager",
              "type": "address",
              "indexed": false
            },
            {
              "internalType": "address",
              "name": "caller",
              "type": "address",
              "indexed": false
            },
            {
              "internalType": "uint64",
              "name": "expirationTime",
              "type": "uint64",
              "indexed": false
            },
            {
              "internalType": "contract IERC20",
              "name": "currency",
              "type": "address",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "bond",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "bytes32",
              "name": "identifier",
              "type": "bytes32",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "AssertionMade",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "assertionId",
              "type": "bytes32",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "bondRecipient",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "bool",
              "name": "disputed",
              "type": "bool",
              "indexed": false
            },
            {
              "internalType": "bool",
              "name": "settlementResolution",
              "type": "bool",
              "indexed": false
            },
            {
              "internalType": "address",
              "name": "settleCaller",
              "type": "address",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "AssertionSettled",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "requester",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "bytes32",
              "name": "identifier",
              "type": "bytes32",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "time",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "bytes",
              "name": "ancillaryData",
              "type": "bytes",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "PriceRequestAdded",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_address",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256[]",
              "name": "val",
              "type": "uint256[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_array",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "int256[]",
              "name": "val",
              "type": "int256[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_array",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address[]",
              "name": "val",
              "type": "address[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_array",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes",
              "name": "",
              "type": "bytes",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_bytes",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "",
              "type": "bytes32",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_bytes32",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "int256",
              "name": "",
              "type": "int256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_int",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "address",
              "name": "val",
              "type": "address",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_address",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "uint256[]",
              "name": "val",
              "type": "uint256[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_array",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "int256[]",
              "name": "val",
              "type": "int256[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_array",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "address[]",
              "name": "val",
              "type": "address[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_array",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "bytes",
              "name": "val",
              "type": "bytes",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_bytes",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "bytes32",
              "name": "val",
              "type": "bytes32",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_bytes32",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "int256",
              "name": "val",
              "type": "int256",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "decimals",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_decimal_int",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "val",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "decimals",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_decimal_uint",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "int256",
              "name": "val",
              "type": "int256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_int",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "string",
              "name": "val",
              "type": "string",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_string",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "val",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_uint",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_string",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_uint",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes",
              "name": "",
              "type": "bytes",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "logs",
          "anonymous": false
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "IS_TEST",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "asserter",
              "type": "address"
            },
            {
              "internalType": "bytes",
              "name": "claim",
              "type": "bytes"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "_allocateBondAndAssertTruth",
          "outputs": [
            {
              "internalType": "bytes32",
              "name": "assertionId",
              "type": "bytes32"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "_commonCarbonUMArketSetUp"
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "_commonSetup"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "mockAssertingCaller",
              "type": "address"
            },
            {
              "internalType": "bytes32",
              "name": "assertionId",
              "type": "bytes32"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "_mockGetAssertionAssertingCaller"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "carbonUMArket",
          "outputs": [
            {
              "internalType": "contract CarbonUMArket",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "excludeArtifacts",
          "outputs": [
            {
              "internalType": "string[]",
              "name": "excludedArtifacts_",
              "type": "string[]"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "excludeContracts",
          "outputs": [
            {
              "internalType": "address[]",
              "name": "excludedContracts_",
              "type": "address[]"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "excludeSenders",
          "outputs": [
            {
              "internalType": "address[]",
              "name": "excludedSenders_",
              "type": "address[]"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "failed",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setUp"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "targetArtifactSelectors",
          "outputs": [
            {
              "internalType": "struct StdInvariant.FuzzSelector[]",
              "name": "targetedArtifactSelectors_",
              "type": "tuple[]",
              "components": [
                {
                  "internalType": "address",
                  "name": "addr",
                  "type": "address"
                },
                {
                  "internalType": "bytes4[]",
                  "name": "selectors",
                  "type": "bytes4[]"
                }
              ]
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "targetArtifacts",
          "outputs": [
            {
              "internalType": "string[]",
              "name": "targetedArtifacts_",
              "type": "string[]"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "targetContracts",
          "outputs": [
            {
              "internalType": "address[]",
              "name": "targetedContracts_",
              "type": "address[]"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "targetInterfaces",
          "outputs": [
            {
              "internalType": "struct StdInvariant.FuzzInterface[]",
              "name": "targetedInterfaces_",
              "type": "tuple[]",
              "components": [
                {
                  "internalType": "address",
                  "name": "addr",
                  "type": "address"
                },
                {
                  "internalType": "string[]",
                  "name": "artifacts",
                  "type": "string[]"
                }
              ]
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "targetSelectors",
          "outputs": [
            {
              "internalType": "struct StdInvariant.FuzzSelector[]",
              "name": "targetedSelectors_",
              "type": "tuple[]",
              "components": [
                {
                  "internalType": "address",
                  "name": "addr",
                  "type": "address"
                },
                {
                  "internalType": "bytes4[]",
                  "name": "selectors",
                  "type": "bytes4[]"
                }
              ]
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "targetSenders",
          "outputs": [
            {
              "internalType": "address[]",
              "name": "targetedSenders_",
              "type": "address[]"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "test_AssertionWithCorrectDispute"
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "test_ResolveMarketNoDispute"
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "test_ResolveMarketWithWrongDispute"
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {},
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {},
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        "@across-protocol/=node_modules/@across-protocol/",
        "@ensdomains/=node_modules/@ensdomains/",
        "@eth-optimism/=node_modules/@across-protocol/contracts/node_modules/@eth-optimism/",
        "@gnosis.pm/=node_modules/@gnosis.pm/",
        "@maticnetwork/=node_modules/@maticnetwork/",
        "@openzeppelin/=node_modules/@openzeppelin/",
        "@uma/=node_modules/@uma/",
        "@uniswap/=node_modules/@uniswap/",
        "base64-sol/=node_modules/base64-sol/",
        "ds-test/=lib/forge-std/lib/ds-test/src/",
        "eth-gas-reporter/=node_modules/eth-gas-reporter/",
        "forge-std/=lib/forge-std/src/",
        "hardhat-deploy/=node_modules/hardhat-deploy/",
        "hardhat/=node_modules/hardhat/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 200
      },
      "metadata": {
        "bytecodeHash": "ipfs"
      },
      "compilationTarget": {
        "test/CarbonUMArket.Resolve.t.sol": "CarbonUMArketResolveTest"
      },
      "libraries": {}
    },
    "sources": {
      "contracts/CarbonUMArket.sol": {
        "keccak256": "0x03d640dbae611ca5d8f3b9c64ad88fe4a66d93511cd24df2183c28a45bd9f54a",
        "urls": [
          "bzz-raw://4fceec6949d997e530486cdb06d2aa0672fe881afeccd22c854bb210938dfa7e",
          "dweb:/ipfs/QmPDYPdghCTcD4EnevAsdYoxggeji7iXQpEAsTm3SsQ8f4"
        ],
        "license": "AGPL-3.0-only"
      },
      "lib/forge-std/lib/ds-test/src/test.sol": {
        "keccak256": "0x8758531bbac3972efcf1fa46383dbe1d276406fe527bc7abb2f236486278e83b",
        "urls": [
          "bzz-raw://1f64264d61506847acf8761e84aff690cebe830958eac00bac7924d8be569240",
          "dweb:/ipfs/QmSekDJvJ82MZAmr63n7YvfLzQ7gS4NLSHPmHL3GN3rw8k"
        ],
        "license": "GPL-3.0-or-later"
      },
      "lib/forge-std/src/Base.sol": {
        "keccak256": "0x4ff1a785311017d1eedb1b4737956fa383067ad34eb439abfec1d989754dde1c",
        "urls": [
          "bzz-raw://f553622969b9fdb930246704a4c10dfaee6b1a4468c142fa7eb9dc292a438224",
          "dweb:/ipfs/QmcxqHnqdQsMVtgsfH9VNLmZ3g7GhgNagfq7yvNCDcCHFK"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdAssertions.sol": {
        "keccak256": "0x1a0dee4d8b2c81e9318e87dd85ef009467ebf7dba6575530d1fce94d34dbae60",
        "urls": [
          "bzz-raw://ddd790c86ddde1013d1f7a552a80168eacf2e9244077f96799180644ad523a5b",
          "dweb:/ipfs/QmYinBFt9uEVFXP9ytT9CDoNpzWieQVgLWRFRNiypMzJaL"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdChains.sol": {
        "keccak256": "0xdbb593a36db1fde25c398f38312cfedc5b39c4bad1c65c2f58b7515c4dd76be8",
        "urls": [
          "bzz-raw://afc49471af92a1fd12686e2757ad0cbeb5bfe3cc95b8b6b5a5a91af83a8bcfd1",
          "dweb:/ipfs/QmcAQ5WesfLBUChNGuRMGQsDYf44q35Ln7Xb3jmyQgdESU"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdCheats.sol": {
        "keccak256": "0xa0bac08b3d12d561fadf74c83c69f3ee54fe40e0c7766611766f6db70c202373",
        "urls": [
          "bzz-raw://292f1e61a3a60f9f4075d0b567f5123d159b0541b7787e4523597ab57331eb08",
          "dweb:/ipfs/QmatxDNPiYVtLap2nn4Hp3AxzkSzkdAQDirbc5QKCDfde5"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdError.sol": {
        "keccak256": "0xbf477b11a42d7611696956546bcfaa29317d1166bf65e402344599c05943fc77",
        "urls": [
          "bzz-raw://bc2e117d1135e030862b96a6526a43feb38d396cc79857f1fb696d4eff0e5fd6",
          "dweb:/ipfs/QmdSuQ5RrQudTLsNmWXGEeVJX8gR5U9XPm6m4dwwuQnJrj"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdInvariant.sol": {
        "keccak256": "0x67299bfacd77fddfa2a67b8e2b901e0e333618a4975fb94850b07475e51f6de6",
        "urls": [
          "bzz-raw://1b61121d310f4053ce344b345b4a9ccf43b059daf9097ec2647f594beaca896d",
          "dweb:/ipfs/QmZUCoTtXBM9zfAZVbj2dFPPnKaV1CSZzXE7zictyg3Gfz"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdJson.sol": {
        "keccak256": "0x8f914dbd016bd0e318fe2b8bd556fbc8256c7cddc24e3e4fcb9f3c1c1935592d",
        "urls": [
          "bzz-raw://19e704df493dde38323303b07d18cadfeb4dcadf1ddc2301add4aea9474fbb5e",
          "dweb:/ipfs/QmZasuGiLK8LHwWtvpqEBxUR6QFY6GdzLMTJ9q7CMf8PNZ"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdMath.sol": {
        "keccak256": "0xd90ad4fd8aeaeb8929964e686e769fdedd5eded3fc3815df194a0ab9f91a3fb2",
        "urls": [
          "bzz-raw://7919b70f636c7b805223992f28ad1ad0145d6c1385b5931a3589aface5fe6c92",
          "dweb:/ipfs/QmY7FRaULwoGgFteF8GawjQJRfasNgpWnU2aiMsFrYpuTC"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdStorage.sol": {
        "keccak256": "0x4298f3f4cedaedb07029820b1daad2c03af45379559392201f7bf3ec71105811",
        "urls": [
          "bzz-raw://6e062f36d8d1ae3c383ef8975757926eaa9c4de3a92b5f1fe2d12748bcd8db32",
          "dweb:/ipfs/QmcWkv3ia5Ew4DZNcudMNSTNXZ3W2QiXTZunRd44e9BT8z"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdStyle.sol": {
        "keccak256": "0x43e2a8a9b9c2574dabe74f11adf6f782df218f463540e3b5b563609fe108597d",
        "urls": [
          "bzz-raw://51363ca97404cf4128e1141428949768c31929e75e014b02c85e887fbbb4f1b8",
          "dweb:/ipfs/QmVhtbQc2fU4rRmbcfBtz34mAgG4BAZBsbna1Ca4SkoPsK"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdUtils.sol": {
        "keccak256": "0x8758c42ba9d9e46868b796e2330ac239006ede07bd438a4b36dd6f2c47d27dc1",
        "urls": [
          "bzz-raw://11f5752e0187b1e3631b875efdbe05d45929d05f1c1717105a9115d0a6628140",
          "dweb:/ipfs/QmUKkx9jfsUvjyYBw45RvrW1hTFXDXi2Jv5tbHP86mnzpi"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/Test.sol": {
        "keccak256": "0x39b1729d5868c8e94ab8af16751eb500a17fe3870dc627d2b7ddcd5df18d7ad0",
        "urls": [
          "bzz-raw://1568c82aff125cc4b0fc168be9d67ac313f469a3c7405c5493caecaaaecfb765",
          "dweb:/ipfs/QmXByuZReJsdu1jDcxj1FcmpcUnzoBcqybn9kWgDAECWri"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/Vm.sol": {
        "keccak256": "0x039a59e16791fb3595615f1ad19d614cdb1f1e567ed3bfc1a35d97177387be68",
        "urls": [
          "bzz-raw://da3d0bfe99104664a3a053665578ad1277ea79e0704519d3b7ff98b3b7054155",
          "dweb:/ipfs/QmesLHpsvzvC6DoTFLdgNibRU5sfeNggYtyaRfA64t2PsD"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/console.sol": {
        "keccak256": "0x91d5413c2434ca58fd278b6e1e79fd98d10c83931cc2596a6038eee4daeb34ba",
        "urls": [
          "bzz-raw://91ccea707361e48b9b7a161fe81f496b9932bc471e9c4e4e1e9c283f2453cc70",
          "dweb:/ipfs/QmcB66sZhQ6Kz7MUHcLE78YXRUZxoZnnxZjN6yATsbB2ec"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/console2.sol": {
        "keccak256": "0x954646445d1014c3cd85c7918f5e7adeeca5ee44b68c00bafa237e597a4e35ea",
        "urls": [
          "bzz-raw://516fa3be52da4763147175bfba4be0aa011fadbb0c1afb01f97265bd4cee7973",
          "dweb:/ipfs/QmdixAyMJefx7qePChgdxcBH5MxhmN7vsqPuPLx3CgrVmF"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/interfaces/IMulticall3.sol": {
        "keccak256": "0x7aac1389150499a922d1f9ef5749c908cef127cb2075b92fa17e9cb611263d0a",
        "urls": [
          "bzz-raw://d95ebb7c7c463e08ebc12dab639945752fb2480acfc6e86da32f72732a7fd0c0",
          "dweb:/ipfs/QmNXK8P8oPWwajsQHvAHw3JPyQidPLCGQN3hWu1Lk6PBL2"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/safeconsole.sol": {
        "keccak256": "0xbaf41fdc6c54297e7cd8250e48b0f20eaac918e342a1028cef3f9a52ac086381",
        "urls": [
          "bzz-raw://a500ad81dea226f9910e6b50f99a9ff930105e393a692cbfb2185e4cdb4424ae",
          "dweb:/ipfs/QmVbUQpXNMmMWRiy4FvBNczzq46BMGfUoBikvSHNiCxVTq"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/access/Ownable.sol": {
        "keccak256": "0x24e0364e503a9bbde94c715d26573a76f14cd2a202d45f96f52134ab806b67b9",
        "urls": [
          "bzz-raw://e12cbaa7378fd9b62280e4e1d164bedcb4399ce238f5f98fc0eefb7e50577981",
          "dweb:/ipfs/QmXRoFGUgfsaRkoPT5bxNMtSayKTQ8GZATLPXf69HcRA51"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol": {
        "keccak256": "0xdadd41acb749920eccf40aeaa8d291adf9751399a7343561bad13e7a8d99be0b",
        "urls": [
          "bzz-raw://12af4ac016f9fdf3be5d15824f4292272aa11f6b2e0192a0f7320f5ad49bbbf0",
          "dweb:/ipfs/QmRXMpdqCgA3TYuYxBodqs5p9jGbnMW6xa2gvjppvq4TWk"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/token/ERC20/IERC20.sol": {
        "keccak256": "0xbbc8ac883ac3c0078ce5ad3e288fbb3ffcc8a30c3a98c0fda0114d64fc44fca2",
        "urls": [
          "bzz-raw://87a7a5d2f6f63f84598af02b8c50ca2df2631cb8ba2453e8d95fcb17e4be9824",
          "dweb:/ipfs/QmR76hqtAcRqoFj33tmNjcWTLrgNsAaakYwnKZ8zoJtKei"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
        "keccak256": "0x8de418a5503946cabe331f35fe242d3201a73f67f77aaeb7110acb1f30423aca",
        "urls": [
          "bzz-raw://5a376d3dda2cb70536c0a45c208b29b34ac560c4cb4f513a42079f96ba47d2dd",
          "dweb:/ipfs/QmZQg6gn1sUpM8wHzwNvSnihumUCAhxD119MpXeKp8B9s8"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol": {
        "keccak256": "0xc3d946432c0ddbb1f846a0d3985be71299df331b91d06732152117f62f0be2b5",
        "urls": [
          "bzz-raw://4632c341a06ba5c079b51ca5a915efab4e6ab57735b37839b3e8365ff806a43e",
          "dweb:/ipfs/QmTHT3xHYed2wajEoA5qu7ii2BxLpPhQZHwAhtLK5Z7ANK"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/utils/Address.sol": {
        "keccak256": "0x2ccf9d2313a313d41a791505f2b5abfdc62191b5d4334f7f7a82691c088a1c87",
        "urls": [
          "bzz-raw://b3a57d0854b2fdce6ebff933a48dca2445643d1eccfc27f00292e937f26c6a58",
          "dweb:/ipfs/QmW45rZooS9TqR4YXUbjRbtf2Bpb5ouSarBvfW1LdGprvV"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/utils/Context.sol": {
        "keccak256": "0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7",
        "urls": [
          "bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92",
          "dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/utils/Strings.sol": {
        "keccak256": "0x32c202bd28995dd20c4347b7c6467a6d3241c74c8ad3edcbb610cd9205916c45",
        "urls": [
          "bzz-raw://8179c356adb19e70d6b31a1eedc8c5c7f0c00e669e2540f4099e3844c6074d30",
          "dweb:/ipfs/QmWFbivarEobbqhS1go64ootVuHfVohBseerYy9FTEd1W2"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/utils/math/SafeMath.sol": {
        "keccak256": "0xa2f576be637946f767aa56601c26d717f48a0aff44f82e46f13807eea1009a21",
        "urls": [
          "bzz-raw://973868f808e88e21a1a0a01d4839314515ee337ad096286c88e41b74dcc11fc2",
          "dweb:/ipfs/QmfYuZxRfx2J2xdk4EXN7jKg4bUYEMTaYk9BAw9Bqn4o2Y"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/utils/math/SignedSafeMath.sol": {
        "keccak256": "0x62f53f262fabbbc6d8ab49488d8fce36370351aff2b8d3898d499d68995a71c2",
        "urls": [
          "bzz-raw://efd599513c2f313a3f5e9536beb2b80a0d2b3dd34202c174a707d81b7dc751ce",
          "dweb:/ipfs/QmdDiENVFSyWjfFskNLnViMH77DHg3oDthkSZk7dMzNNKB"
        ],
        "license": "MIT"
      },
      "node_modules/@uma/core/contracts/common/implementation/AddressWhitelist.sol": {
        "keccak256": "0xc1f20b925f9d37230aaf7bbee536f9a9b08e4772864f0a243ff1b69b54710fee",
        "urls": [
          "bzz-raw://55bc6782bd269463214dbafa8702b2ff33910fd4a51ab24d775aabb15e278bcc",
          "dweb:/ipfs/QmV41DnGByGBtg8gk7MG6Nr3xYo5R5varZ8cewywdKNATQ"
        ],
        "license": "AGPL-3.0-only"
      },
      "node_modules/@uma/core/contracts/common/implementation/AncillaryData.sol": {
        "keccak256": "0x8ff33ac32d3e6de25de9e0ac2c0ff9a621f187fa97e9ee84092b327471baa3ce",
        "urls": [
          "bzz-raw://0bbaed49756e8cf7ef405e132f441cd7a735ac6186a200b0179147e7d137b74a",
          "dweb:/ipfs/QmeSBJX5a61LZPxbkUKS2NF4LSxemgDwjD65fCAmyP7PX2"
        ],
        "license": "AGPL-3.0-only"
      },
      "node_modules/@uma/core/contracts/common/implementation/ExpandedERC20.sol": {
        "keccak256": "0x8201459d3f78a1f97da7c421f2fbb859924d4facfc5fc235ba65d85bf12b2229",
        "urls": [
          "bzz-raw://990c055523abe059c0e3e9dc0d631b17db960899dbfcfb2c562bc1ed9de8f140",
          "dweb:/ipfs/QmNgQP68bBrZvP2Rs4TdpESS3LFxqGgtTELZ1wm5mZqh4K"
        ],
        "license": "AGPL-3.0-only"
      },
      "node_modules/@uma/core/contracts/common/implementation/FixedPoint.sol": {
        "keccak256": "0x996b97cc4fa5da4064e3aee500edc6972485d59a9334ceec81155e2c2f484dae",
        "urls": [
          "bzz-raw://8d7c028926dc2b27e7dc103363dca8a43f60b3351f4a14bcb702660f95c68663",
          "dweb:/ipfs/QmXz4ieFjP5RxJ35F8GbPryYEGvFmxc4Gqx8EK7N57ixzT"
        ],
        "license": "AGPL-3.0-only"
      },
      "node_modules/@uma/core/contracts/common/implementation/Lockable.sol": {
        "keccak256": "0x41d78fcce54598ad5f26bc0b778c0f4fedbd836401625e49e736979f69a87ef0",
        "urls": [
          "bzz-raw://4ce111bb50441ef5125e7d42284f6debbc17fd589515d7b8cede7e9d1d5f0ede",
          "dweb:/ipfs/QmaXiXACWVEDDHoCHNXdVBoNpf8QNHkUZ1kf5MfbxfL6jj"
        ],
        "license": "AGPL-3.0-only"
      },
      "node_modules/@uma/core/contracts/common/implementation/MultiCaller.sol": {
        "keccak256": "0x9f6afe5bafc5e16fe8d63010a740ec3a88a9f00a7236ea7e5b039a2f50eb346e",
        "urls": [
          "bzz-raw://a971572a4a9ed32e5ec15ac384af593d9499778f6ec593dbdba67d44ced4c7d8",
          "dweb:/ipfs/QmbdpfhhnUyoHWe7TPFBZxT6R6zyxJEDcGBNwDt5ncweRv"
        ],
        "license": "AGPL-3.0-only"
      },
      "node_modules/@uma/core/contracts/common/implementation/MultiRole.sol": {
        "keccak256": "0x134c5a2f847832705be631f2b4eb2a3e23a91a2f0e63560abb481e85eeebfae6",
        "urls": [
          "bzz-raw://f1267c6ad560d1eb896575919ecca13759bf50bb82d1215e03fc1f0424ec37a6",
          "dweb:/ipfs/QmXewGxpSmSMGYmT6ZUyxCVzy2cybxicbnyCn8w87m5mo3"
        ],
        "license": "AGPL-3.0-only"
      },
      "node_modules/@uma/core/contracts/common/implementation/Testable.sol": {
        "keccak256": "0x0254b45747293bb800373a58d123969adec0428f7be79dc941cab10fcad09918",
        "urls": [
          "bzz-raw://537d694e3753596f507d071f283be9caeaad0010c444c9c9955d729affeb4907",
          "dweb:/ipfs/QmZ1WfVTBao11QaN6aygMhnt45UjRq77ZwfKPFmHiVSdaJ"
        ],
        "license": "AGPL-3.0-only"
      },
      "node_modules/@uma/core/contracts/common/implementation/TestnetERC20.sol": {
        "keccak256": "0xea7c79b7d7b55b6d88d878ac44837c691641e727511f82adbfb399f5cbe77319",
        "urls": [
          "bzz-raw://6acd45d4b58f8e150eb2dcc0d8314b38766b31671ce0aa6e1055a2f8ba93db80",
          "dweb:/ipfs/QmdsjVSVsXCidcbNeT5AzEM76jMKJ53DUD7zEcFetfdE6P"
        ],
        "license": "AGPL-3.0-only"
      },
      "node_modules/@uma/core/contracts/common/implementation/Timer.sol": {
        "keccak256": "0x9e0dd7389718bd5d1da910273a6f4cee98ee22bfc0c92bde0f0955c0e23adb5e",
        "urls": [
          "bzz-raw://7ddac8d3cb76f8811156a11a7702d7c05b15a0f18c22b5abdc318723193f9266",
          "dweb:/ipfs/QmPxL7AU8NkURJaZ6WxXNcw88wGMSoPX4jbt7SMdPJqtYv"
        ],
        "license": "AGPL-3.0-only"
      },
      "node_modules/@uma/core/contracts/common/implementation/Withdrawable.sol": {
        "keccak256": "0x0cffa58907ae0c4b2948f225723e5f4346276c0f1484452fb5c78fc90b79c630",
        "urls": [
          "bzz-raw://e832b3f09aa18ef687a34ffc754f9e9d1200c63da8f1550e46111a44a2b2433d",
          "dweb:/ipfs/QmdqUvbxXtea2w3msKp9PRAhxs3YsJCWX31bWRHSuq54Vr"
        ],
        "license": "AGPL-3.0-only"
      },
      "node_modules/@uma/core/contracts/common/interfaces/AddressWhitelistInterface.sol": {
        "keccak256": "0x22fb8588dff1d5cff76a28111d6c9b190765d99facd93c8ff3b54771f245c0d8",
        "urls": [
          "bzz-raw://5ecd993f00de290a3c7bf21da23a9439cf2ccb22028316df92b79780ac8aa533",
          "dweb:/ipfs/QmTZ7x7U4EEzTacqapzSdFs2np5WNsqm4XeUBqzQxxDJei"
        ],
        "license": "AGPL-3.0-only"
      },
      "node_modules/@uma/core/contracts/common/interfaces/ExpandedIERC20.sol": {
        "keccak256": "0xb8252039cba45f1c19cd677f150a9823a5d6e1845cad90e3041d97c96f273c26",
        "urls": [
          "bzz-raw://95106656c95e12c30a2a4c482a859df6df55c3b56bb9f7835eb5c685ca3175d3",
          "dweb:/ipfs/QmcuJoX7T53vTCDcQK8WcCJdT1LzHS35vPmSVfg1DG32cd"
        ],
        "license": "AGPL-3.0-only"
      },
      "node_modules/@uma/core/contracts/data-verification-mechanism/implementation/Constants.sol": {
        "keccak256": "0xe40957105a9240c6bcb9753fd0011fe9f382c437cd6771c57bf7a96f8ceb9c84",
        "urls": [
          "bzz-raw://cbf0d25e841b1f5c4022d09fb29220cb428139443cb29c4ab8dbfff71dffcc05",
          "dweb:/ipfs/QmSVVr5wH1tZi6WmKyuy1K8yS6JN4DeK5kWaZpPKtXiqkK"
        ],
        "license": "AGPL-3.0-only"
      },
      "node_modules/@uma/core/contracts/data-verification-mechanism/implementation/Finder.sol": {
        "keccak256": "0x0dfa6eda28743755f159de563ee2350b7edf81e4173e6bc3e35da7ad22c54dcb",
        "urls": [
          "bzz-raw://5fecfe0b81cb3437fde85798730bdcc9e9b124e4c22a7acb146fcc4b86f77702",
          "dweb:/ipfs/QmTCe8RfRihRXP9cuhM3Kgn36kR3JosoLzD1JQ3hWjdf65"
        ],
        "license": "AGPL-3.0-only"
      },
      "node_modules/@uma/core/contracts/data-verification-mechanism/implementation/IdentifierWhitelist.sol": {
        "keccak256": "0x77ad704fca2d76e187bbc72ed48323cf5b483dbee6c86afe023103d6fc7129eb",
        "urls": [
          "bzz-raw://6c8a7765d146c7133c5028b40b4a7a060a030425299d8d6622a06af5c44d4aa8",
          "dweb:/ipfs/QmU5TDtc3XHDgp25WxFmKbYGycY7NsT5EtHJ6DH5Q2YWgt"
        ],
        "license": "AGPL-3.0-only"
      },
      "node_modules/@uma/core/contracts/data-verification-mechanism/implementation/Store.sol": {
        "keccak256": "0x6a2b6982a9bbe9860c73c6c542e2021050b1127b28f887c329f36cc71c20dad2",
        "urls": [
          "bzz-raw://977406313978d803c0e5327f52c594f044c231fa3e9e6ab265ce19e457a06678",
          "dweb:/ipfs/QmY7en5NPTBvpriHZMKiWgzG9T3hNopR11d7VsBBPZaaVD"
        ],
        "license": "AGPL-3.0-only"
      },
      "node_modules/@uma/core/contracts/data-verification-mechanism/interfaces/FinderInterface.sol": {
        "keccak256": "0x9166fbfe08e954eb86d33c114fcde7ce4fd0dda5d9d28b31210582bfc769fa86",
        "urls": [
          "bzz-raw://e611e12bcaaebfdf65b67c566ff1d34708e757f01a445bd87c55862e89383b81",
          "dweb:/ipfs/QmYNSq5oopTShdS6j4VWKqoLxmQSRKmWebCxw6K4LfmKrf"
        ],
        "license": "AGPL-3.0-only"
      },
      "node_modules/@uma/core/contracts/data-verification-mechanism/interfaces/IdentifierWhitelistInterface.sol": {
        "keccak256": "0x9ae86a30dd1a8c03fb2c6d27be570bb30c4c0b13ac63cde8620b7e4b51d88dc9",
        "urls": [
          "bzz-raw://a71d2aff48e075ecab56a9c9767775d1d77e04ec9191fed124e71003220549e3",
          "dweb:/ipfs/QmYPWsZXro6fzqpZY6UxQ5X8znEXfLp2sun8oXzdz8bTyc"
        ],
        "license": "AGPL-3.0-only"
      },
      "node_modules/@uma/core/contracts/data-verification-mechanism/interfaces/OracleAncillaryInterface.sol": {
        "keccak256": "0xd58b41fe1e389f7871db7c04f2c05c1aac1d0455bbc521534da81fd657016a1f",
        "urls": [
          "bzz-raw://cc532e9c550bb1bba0daa33fda748590cd06ce94a9566fe65dac04e7d40977bc",
          "dweb:/ipfs/QmZKvfRW2LJFt5MWZbKuU9ujkXnS2hkPUJVj8wwJWcuZGX"
        ],
        "license": "AGPL-3.0-only"
      },
      "node_modules/@uma/core/contracts/data-verification-mechanism/interfaces/StoreInterface.sol": {
        "keccak256": "0xbb73671684309c91ad5ef3da1474051d03f2e7d5882bed7f5c4317e5d4c768df",
        "urls": [
          "bzz-raw://32386544d3119fd0187a8c4e8b01c739f508ab863faa04345cabc2544081f9e8",
          "dweb:/ipfs/QmYszDURs1x75rsejZkGt9zCkASXnJtufbNsL3XHe2eJPQ"
        ],
        "license": "AGPL-3.0-only"
      },
      "node_modules/@uma/core/contracts/data-verification-mechanism/test/MockOracleAncillary.sol": {
        "keccak256": "0x5ee630bcd6467ad0077f2d61baf77c59b7cf581a2c00fe816910d98b013ad0aa",
        "urls": [
          "bzz-raw://f525c98da45397f68920ef61b8f9ac512690cb46f4192b4a50edfd6b49ad5199",
          "dweb:/ipfs/Qma2mSJu2XHXbzhkwbyRmoJcdnwE3w2N8pTiBkt9u9dwzd"
        ],
        "license": "AGPL-3.0-only"
      },
      "node_modules/@uma/core/contracts/optimistic-oracle-v3/implementation/ClaimData.sol": {
        "keccak256": "0x6e887a70326e5ede4a8c5002d4123a8c77b477ce58cf92533c38cd3dc6142cb5",
        "urls": [
          "bzz-raw://bdafa7c59d0825da944c46664bddb1203bb4158dd0e1ddd6bbdeb276e66be0f8",
          "dweb:/ipfs/QmVb496JWqBib55HX6G3iPkAMv64Bj2UDegeVEYiNcYuDZ"
        ],
        "license": "AGPL-3.0-only"
      },
      "node_modules/@uma/core/contracts/optimistic-oracle-v3/implementation/OptimisticOracleV3.sol": {
        "keccak256": "0xeba5082c48c3d891f2422b8c0d1d5d6552ab47b5d538db7ff05ffb2f3db25ffc",
        "urls": [
          "bzz-raw://d818630e1c094792613a0539aa0a7677ca8fa92a5308eaf4ff7cf8ea8a4c547e",
          "dweb:/ipfs/QmSM78A3afY6osh4VAmyJX2E4Qyg4qcY1KwY5uFnSK4Yia"
        ],
        "license": "AGPL-3.0-only"
      },
      "node_modules/@uma/core/contracts/optimistic-oracle-v3/implementation/test/AssertingCallerTest.sol": {
        "keccak256": "0x212dafde3707bc594b103f3baef2612e521d5cced481d81938938cc5c6fc4068",
        "urls": [
          "bzz-raw://21e87397b59f9529a3e9ed9ef821f83f1a73bf685c2ec37dc70a2fbfc79aa441",
          "dweb:/ipfs/QmRmBzN3ztihHgeHzir1tz2MGsCrLM2Krc7ozQ4MiQe8jt"
        ],
        "license": "AGPL-3.0-only"
      },
      "node_modules/@uma/core/contracts/optimistic-oracle-v3/implementation/test/OptimisticOracleV3Test.sol": {
        "keccak256": "0xdb817afdd3c786d21ac8dede8e97452905d0ba84f444949cf6f92f77e8c2a38e",
        "urls": [
          "bzz-raw://f88474c7ac47ad72196818aa1d77d3b4bccac18ec77ae008ed53ec48c18f4fee",
          "dweb:/ipfs/QmPxsszotngGGDBv6vCE1kANMtgX8fLD6Xv7YwtZsUKqJQ"
        ],
        "license": "AGPL-3.0-only"
      },
      "node_modules/@uma/core/contracts/optimistic-oracle-v3/interfaces/EscalationManagerInterface.sol": {
        "keccak256": "0xce31adf62ae47468bab181bf1137b05e8ac0a003f019c343ac137a76ea32efc7",
        "urls": [
          "bzz-raw://eb1b93b648adf4130fdfe7a62d817cda0519e7760a50b90f16a3c46cee4c0967",
          "dweb:/ipfs/QmNPD4TRAm9kqqQDKQabqZgaorkJNov96iLgxsm5HRTSZN"
        ],
        "license": "AGPL-3.0-only"
      },
      "node_modules/@uma/core/contracts/optimistic-oracle-v3/interfaces/OptimisticOracleV3CallbackRecipientInterface.sol": {
        "keccak256": "0x79f90bc84ed5d394380e99f0a5d1b219abd9016bc3a02fad0099014af08af03e",
        "urls": [
          "bzz-raw://dc1b7b847eb711750bc76ab45a13294b05fc09e361294a6bdffb90cb15f50b63",
          "dweb:/ipfs/QmQSs2R7mmGojGdNkqP75Vf7LajRkfJ1oGuYAUCHYGmPEQ"
        ],
        "license": "AGPL-3.0-only"
      },
      "node_modules/@uma/core/contracts/optimistic-oracle-v3/interfaces/OptimisticOracleV3Interface.sol": {
        "keccak256": "0xf31322bfd64854f0bfa92051d6ec711c1eed15d8042f394f5c24c05378218367",
        "urls": [
          "bzz-raw://535bc2a6060e86a49524fd3c0062afcf83077530cefb3c1b8179b832f03ca81e",
          "dweb:/ipfs/QmQZhqn6oUiebSWEKbqcmiMGkqAb8B59WsRAyFU8WY84ct"
        ],
        "license": "AGPL-3.0-only"
      },
      "test/CarbonUMArket.Common.sol": {
        "keccak256": "0x721e19f7a5d4cbd2662bbcd6a88bbcb8fb53d90c7760cc5e06f403b0e7f40c2c",
        "urls": [
          "bzz-raw://c6074c6e5271e029c84ee8260c4329e5f73e317542cb88d82c991a8d3f5721a8",
          "dweb:/ipfs/QmefsUGan5uY272pavX4Siz1eiRKhEAJTV2mECtRqwvwFS"
        ],
        "license": "AGPL-3.0-only"
      },
      "test/CarbonUMArket.Resolve.t.sol": {
        "keccak256": "0x0355240e120602c3b7164351591e1e5bbc4c0e899fa70cb147ad745028d9acb7",
        "urls": [
          "bzz-raw://e279aa7f862010a7155e5f9d6c93e77d150921eb799aebd60e34cde926535c85",
          "dweb:/ipfs/QmQzjwnvgmgNN2Y4hCEwMiUBS5XAtEvShEghp7NFnWdNX5"
        ],
        "license": "AGPL-3.0-only"
      },
      "test/common/CommonOptimisticOracleV3Test.sol": {
        "keccak256": "0xef9f5c2c5c37257681e697148b5f724bc9a683e801be4803c555625edee60d5b",
        "urls": [
          "bzz-raw://35278764f5977e9f0161420f35681121958d409f5fe2a1299b1c7ad930e27467",
          "dweb:/ipfs/QmcNrmrzpGYyRzLbkKnrj8HBVH8qLeZSrcRiRDHbiqCoPe"
        ],
        "license": "AGPL-3.0-only"
      },
      "test/fixtures/common/CommonTestBase.sol": {
        "keccak256": "0xef45684397f61b92c77ef51e8a23579bca93a332c784e5b2f4e2a3c9343f9b50",
        "urls": [
          "bzz-raw://8a35ad0d9814f198b93e72031517350fc230a2d4ad20fa05a805bd4abc4adc75",
          "dweb:/ipfs/QmbNJoPfRsFstJV5S1jMCzMwCN7qvFzc631PSSMPnQnBno"
        ],
        "license": "AGPL-3.0-only"
      },
      "test/fixtures/common/TestAddress.sol": {
        "keccak256": "0x30f53e79e844909966fa5b92246c74d8585ff5d540f099c7a99461cc6ebf9d99",
        "urls": [
          "bzz-raw://8e58f9210e67b7efdb5633d9d67834ec5b52c5b48de0e0388b0ecd8f5853227b",
          "dweb:/ipfs/QmZaTBTkBx3QYPBzhRMb7nTdhfZCctwmrAVL9hST6Xw3bn"
        ],
        "license": "AGPL-3.0-only"
      },
      "test/fixtures/common/TimerFixture.sol": {
        "keccak256": "0x9f0b735cb4d2d494d670be9875082c9e7944e4e9e1989a99524b9dffbddeb9cb",
        "urls": [
          "bzz-raw://a2e53b878c9f8bdc88cb91cfb1b1631d1fec6d7c3009a1954e3215989c05d937",
          "dweb:/ipfs/QmRSi291avEMxygy47inL8VXCyJ4PSgqvx9iRZwbo19rnx"
        ],
        "license": null
      },
      "test/fixtures/dvm/BaseDvmFixture.sol": {
        "keccak256": "0x84d096fe2fe9c507a772831db59b3b4ad023c791ca5334c4c6ac29c03854d56a",
        "urls": [
          "bzz-raw://bbcf3381ac7b375c93d734d9591a6cb1fb0ba8445e3d141e36d809b97e8e46ff",
          "dweb:/ipfs/QmczTUkTzjcFM9kCHbcKpK6gdxChsABaFBSz8tsFkrU4fZ"
        ],
        "license": null
      },
      "test/fixtures/dvm/MockDvmFixture.sol": {
        "keccak256": "0xde8cfa220b09bb8576733acff3ff12989753698743b25b3b51ccdb84a009c5b1",
        "urls": [
          "bzz-raw://b436588048b11b68fa27a4bab1e2623ee0a3102d46e28d67ea8fae4989661512",
          "dweb:/ipfs/QmZU56VYo9cpyBNv8hLadNJAj4jNWFxQJJQgV3NpPcTgd2"
        ],
        "license": null
      },
      "test/fixtures/optimistic-oracle-v3/OptimisticOracleV3Fixture.sol": {
        "keccak256": "0x4dbc410556ebf8c68d4053e40df6ced58c3ad2bcd3c7b07a38d6e45db64f6a9f",
        "urls": [
          "bzz-raw://e1c1f054e8fe6207a132b2c101f3a103cc2527f2edfc52fcec465f1f45e8bdd3",
          "dweb:/ipfs/QmYqFoT2H2hXGpqFs6yBRCbJ8tyBwHekWvqFFsKvfSwKLf"
        ],
        "license": "AGPL-3.0-only"
      }
    },
    "version": 1
  },
  "ast": {
    "absolutePath": "test/CarbonUMArket.Resolve.t.sol",
    "id": 54252,
    "exportedSymbols": {
      "Address": [
        45703
      ],
      "AddressWhitelist": [
        46522
      ],
      "AddressWhitelistInterface": [
        49852
      ],
      "AncillaryData": [
        46930
      ],
      "AssertingCallerTest": [
        52395
      ],
      "BaseDvmFixture": [
        55216
      ],
      "BaseDvmFixtureTest": [
        55292
      ],
      "CarbonUMArket": [
        1000
      ],
      "CarbonUMArketResolveTest": [
        54251
      ],
      "CarbonUMArketTestCommon": [
        53391
      ],
      "ClaimData": [
        46930
      ],
      "CommonOptimisticOracleV3Test": [
        55017
      ],
      "CommonTestBase": [
        55024
      ],
      "Context": [
        45725
      ],
      "DSTest": [
        3292
      ],
      "ERC20": [
        45081
      ],
      "EscalationManagerInterface": [
        52499
      ],
      "Exclusive": [
        49015
      ],
      "ExpandedERC20": [
        47153
      ],
      "ExpandedIERC20": [
        49900
      ],
      "Finder": [
        50025
      ],
      "FinderInterface": [
        50474
      ],
      "FixedPoint": [
        48786
      ],
      "IERC20": [
        45159
      ],
      "IERC20Metadata": [
        45184
      ],
      "IdentifierWhitelist": [
        50112
      ],
      "IdentifierWhitelistInterface": [
        50498
      ],
      "Lockable": [
        48863
      ],
      "MockDvmFixture": [
        55389
      ],
      "MockDvmFixtureTest": [
        55487
      ],
      "MockOracleAncillary": [
        51011
      ],
      "MultiCaller": [
        48942
      ],
      "MultiRole": [
        49567
      ],
      "OptimisticOracleConstraints": [
        49954
      ],
      "OptimisticOracleV3": [
        52312
      ],
      "OptimisticOracleV3CallbackRecipientInterface": [
        52517
      ],
      "OptimisticOracleV3Fixture": [
        55638
      ],
      "OptimisticOracleV3FixtureTest": [
        55713
      ],
      "OptimisticOracleV3Interface": [
        52707
      ],
      "OptimisticOracleV3Test": [
        52442
      ],
      "OracleAncillaryInterface": [
        50536
      ],
      "OracleInterfaces": [
        49949
      ],
      "Ownable": [
        44493
      ],
      "SafeERC20": [
        45408
      ],
      "SafeMath": [
        46240
      ],
      "Shared": [
        49111
      ],
      "SignedSafeMath": [
        46304
      ],
      "StdAssertions": [
        4824
      ],
      "StdChains": [
        5562
      ],
      "StdCheats": [
        8415
      ],
      "StdInvariant": [
        8740
      ],
      "StdStorage": [
        9506
      ],
      "StdStyle": [
        12356
      ],
      "StdUtils": [
        13204
      ],
      "Store": [
        50454
      ],
      "StoreInterface": [
        50581
      ],
      "Strings": [
        45928
      ],
      "Test": [
        13255
      ],
      "TestAddress": [
        55057
      ],
      "TestBase": [
        3358
      ],
      "Testable": [
        49640
      ],
      "TestnetERC20": [
        49692
      ],
      "Timer": [
        49727
      ],
      "TimerFixture": [
        55073
      ],
      "Vm": [
        14961
      ],
      "Withdrawable": [
        49826
      ],
      "console": [
        23025
      ],
      "console2": [
        31150
      ],
      "safeconsole": [
        44388
      ],
      "stdError": [
        8481
      ],
      "stdJson": [
        9332
      ],
      "stdMath": [
        9474
      ],
      "stdStorage": [
        11145
      ]
    },
    "nodeType": "SourceUnit",
    "src": "42:6083:64",
    "nodes": [
      {
        "id": 53815,
        "nodeType": "PragmaDirective",
        "src": "42:23:64",
        "nodes": [],
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ]
      },
      {
        "id": 53816,
        "nodeType": "ImportDirective",
        "src": "66:36:64",
        "nodes": [],
        "absolutePath": "test/CarbonUMArket.Common.sol",
        "file": "./CarbonUMArket.Common.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 54252,
        "sourceUnit": 53392,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 53817,
        "nodeType": "ImportDirective",
        "src": "103:31:64",
        "nodes": [],
        "absolutePath": "lib/forge-std/src/console.sol",
        "file": "forge-std/console.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 54252,
        "sourceUnit": 23026,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 54251,
        "nodeType": "ContractDefinition",
        "src": "137:5987:64",
        "nodes": [
          {
            "id": 53821,
            "nodeType": "VariableDeclaration",
            "src": "204:16:64",
            "nodes": [],
            "constant": false,
            "mutability": "mutable",
            "name": "marketId",
            "nameLocation": "212:8:64",
            "scope": 54251,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bytes32",
              "typeString": "bytes32"
            },
            "typeName": {
              "id": 53820,
              "name": "bytes32",
              "nodeType": "ElementaryTypeName",
              "src": "204:7:64",
              "typeDescriptions": {
                "typeIdentifier": "t_bytes32",
                "typeString": "bytes32"
              }
            },
            "visibility": "internal"
          },
          {
            "id": 53841,
            "nodeType": "FunctionDefinition",
            "src": "227:178:64",
            "nodes": [],
            "body": {
              "id": 53840,
              "nodeType": "Block",
              "src": "251:154:64",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 53824,
                      "name": "_commonCarbonUMArketSetUp",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 53040,
                      "src": "261:25:64",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 53825,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "261:27:64",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 53826,
                  "nodeType": "ExpressionStatement",
                  "src": "261:27:64"
                },
                {
                  "expression": {
                    "id": 53830,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 53827,
                      "name": "marketId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 53821,
                      "src": "298:8:64",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 53828,
                        "name": "_initializeMarket",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 53119,
                        "src": "309:17:64",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_nonpayable$__$returns$_t_bytes32_$",
                          "typeString": "function () returns (bytes32)"
                        }
                      },
                      "id": 53829,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "309:19:64",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "src": "298:30:64",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "id": 53831,
                  "nodeType": "ExpressionStatement",
                  "src": "298:30:64"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 53833,
                        "name": "marketId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 53821,
                        "src": "351:8:64",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      ],
                      "id": 53832,
                      "name": "_mintCredits",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 53247,
                      "src": "338:12:64",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$returns$__$",
                        "typeString": "function (bytes32)"
                      }
                    },
                    "id": 53834,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "338:22:64",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 53835,
                  "nodeType": "ExpressionStatement",
                  "src": "338:22:64"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 53837,
                        "name": "marketId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 53821,
                        "src": "389:8:64",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      ],
                      "id": 53836,
                      "name": "_registerValidator",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 53276,
                      "src": "370:18:64",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$returns$__$",
                        "typeString": "function (bytes32)"
                      }
                    },
                    "id": 53838,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "370:28:64",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 53839,
                  "nodeType": "ExpressionStatement",
                  "src": "370:28:64"
                }
              ]
            },
            "functionSelector": "0a9254e4",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "setUp",
            "nameLocation": "236:5:64",
            "parameters": {
              "id": 53822,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "241:2:64"
            },
            "returnParameters": {
              "id": 53823,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "251:0:64"
            },
            "scope": 54251,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 53952,
            "nodeType": "FunctionDefinition",
            "src": "411:1207:64",
            "nodes": [],
            "body": {
              "id": 53951,
              "nodeType": "Block",
              "src": "457:1161:64",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    53848
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 53848,
                      "mutability": "mutable",
                      "name": "market",
                      "nameLocation": "504:6:64",
                      "nodeType": "VariableDeclaration",
                      "scope": 53951,
                      "src": "476:34:64",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Market_$57_memory_ptr",
                        "typeString": "struct CarbonUMArket.Market"
                      },
                      "typeName": {
                        "id": 53847,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 53846,
                          "name": "CarbonUMArket.Market",
                          "nameLocations": [
                            "476:13:64",
                            "490:6:64"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 57,
                          "src": "476:20:64"
                        },
                        "referencedDeclaration": 57,
                        "src": "476:20:64",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Market_$57_storage_ptr",
                          "typeString": "struct CarbonUMArket.Market"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 53853,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 53851,
                        "name": "marketId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 53821,
                        "src": "537:8:64",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      ],
                      "expression": {
                        "id": 53849,
                        "name": "carbonUMArket",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 52985,
                        "src": "513:13:64",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_CarbonUMArket_$1000",
                          "typeString": "contract CarbonUMArket"
                        }
                      },
                      "id": 53850,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "527:9:64",
                      "memberName": "getMarket",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 157,
                      "src": "513:23:64",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_bytes32_$returns$_t_struct$_Market_$57_memory_ptr_$",
                        "typeString": "function (bytes32) view external returns (struct CarbonUMArket.Market memory)"
                      }
                    },
                    "id": 53852,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "513:33:64",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Market_$57_memory_ptr",
                      "typeString": "struct CarbonUMArket.Market memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "476:70:64"
                },
                {
                  "assignments": [
                    53855
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 53855,
                      "mutability": "mutable",
                      "name": "assertionId",
                      "nameLocation": "565:11:64",
                      "nodeType": "VariableDeclaration",
                      "scope": 53951,
                      "src": "557:19:64",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 53854,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "557:7:64",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 53859,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 53857,
                        "name": "marketId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 53821,
                        "src": "593:8:64",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      ],
                      "id": 53856,
                      "name": "_assertMarket",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 53178,
                      "src": "579:13:64",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$returns$_t_bytes32_$",
                        "typeString": "function (bytes32) returns (bytes32)"
                      }
                    },
                    "id": 53858,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "579:23:64",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "557:45:64"
                },
                {
                  "assignments": [
                    53861
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 53861,
                      "mutability": "mutable",
                      "name": "asserterBalanceBefore",
                      "nameLocation": "620:21:64",
                      "nodeType": "VariableDeclaration",
                      "scope": 53951,
                      "src": "612:29:64",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 53860,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "612:7:64",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 53867,
                  "initialValue": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 53864,
                          "name": "TestAddress",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 55057,
                          "src": "670:11:64",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_TestAddress_$55057_$",
                            "typeString": "type(library TestAddress)"
                          }
                        },
                        "id": 53865,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "memberLocation": "682:8:64",
                        "memberName": "account1",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 55038,
                        "src": "670:20:64",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 53862,
                        "name": "defaultCurrency",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 54282,
                        "src": "644:15:64",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_TestnetERC20_$49692",
                          "typeString": "contract TestnetERC20"
                        }
                      },
                      "id": 53863,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "660:9:64",
                      "memberName": "balanceOf",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 44592,
                      "src": "644:25:64",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) view external returns (uint256)"
                      }
                    },
                    "id": 53866,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "644:47:64",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "612:79:64"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 53875,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "expression": {
                              "id": 53871,
                              "name": "timer",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 54285,
                              "src": "842:5:64",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_Timer_$49727",
                                "typeString": "contract Timer"
                              }
                            },
                            "id": 53872,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "848:14:64",
                            "memberName": "getCurrentTime",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 49726,
                            "src": "842:20:64",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$",
                              "typeString": "function () view external returns (uint256)"
                            }
                          },
                          "id": 53873,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "842:22:64",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "+",
                        "rightExpression": {
                          "id": 53874,
                          "name": "defaultLiveness",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 54315,
                          "src": "867:15:64",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint64",
                            "typeString": "uint64"
                          }
                        },
                        "src": "842:40:64",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 53868,
                        "name": "timer",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 54285,
                        "src": "821:5:64",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Timer_$49727",
                          "typeString": "contract Timer"
                        }
                      },
                      "id": 53870,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "827:14:64",
                      "memberName": "setCurrentTime",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 49717,
                      "src": "821:20:64",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256) external"
                      }
                    },
                    "id": 53876,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "821:63:64",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 53877,
                  "nodeType": "ExpressionStatement",
                  "src": "821:63:64"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 53883,
                            "name": "carbonUMArket",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 52985,
                            "src": "929:13:64",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_CarbonUMArket_$1000",
                              "typeString": "contract CarbonUMArket"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_CarbonUMArket_$1000",
                              "typeString": "contract CarbonUMArket"
                            }
                          ],
                          "id": 53882,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "921:7:64",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 53881,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "921:7:64",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 53884,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "921:22:64",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "expression": {
                              "id": 53887,
                              "name": "carbonUMArket",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 52985,
                              "src": "972:13:64",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_CarbonUMArket_$1000",
                                "typeString": "contract CarbonUMArket"
                              }
                            },
                            "id": 53888,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "986:25:64",
                            "memberName": "assertionResolvedCallback",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 655,
                            "src": "972:39:64",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_bytes32_$_t_bool_$returns$__$",
                              "typeString": "function (bytes32,bool) external"
                            }
                          },
                          {
                            "components": [
                              {
                                "id": 53889,
                                "name": "assertionId",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 53855,
                                "src": "1014:11:64",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes32",
                                  "typeString": "bytes32"
                                }
                              },
                              {
                                "hexValue": "74727565",
                                "id": 53890,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "bool",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "1027:4:64",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                },
                                "value": "true"
                              }
                            ],
                            "id": 53891,
                            "isConstant": false,
                            "isInlineArray": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "TupleExpression",
                            "src": "1013:19:64",
                            "typeDescriptions": {
                              "typeIdentifier": "t_tuple$_t_bytes32_$_t_bool_$",
                              "typeString": "tuple(bytes32,bool)"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_function_external_nonpayable$_t_bytes32_$_t_bool_$returns$__$",
                              "typeString": "function (bytes32,bool) external"
                            },
                            {
                              "typeIdentifier": "t_tuple$_t_bytes32_$_t_bool_$",
                              "typeString": "tuple(bytes32,bool)"
                            }
                          ],
                          "expression": {
                            "id": 53885,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -1,
                            "src": "957:3:64",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 53886,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberLocation": "961:10:64",
                          "memberName": "encodeCall",
                          "nodeType": "MemberAccess",
                          "src": "957:14:64",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function () pure returns (bytes memory)"
                          }
                        },
                        "id": 53892,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "957:76:64",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "expression": {
                        "id": 53878,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3351,
                        "src": "894:2:64",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$14961",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 53880,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "897:10:64",
                      "memberName": "expectCall",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 14819,
                      "src": "894:13:64",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (address,bytes memory) external"
                      }
                    },
                    "id": 53893,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "894:149:64",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 53894,
                  "nodeType": "ExpressionStatement",
                  "src": "894:149:64"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 53898,
                            "name": "assertionId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 53855,
                            "src": "1111:11:64",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          ],
                          "expression": {
                            "id": 53896,
                            "name": "optimisticOracleV3",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 54279,
                            "src": "1064:18:64",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_OptimisticOracleV3_$52312",
                              "typeString": "contract OptimisticOracleV3"
                            }
                          },
                          "id": 53897,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "1083:27:64",
                          "memberName": "settleAndGetAssertionResult",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 51723,
                          "src": "1064:46:64",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_nonpayable$_t_bytes32_$returns$_t_bool_$",
                            "typeString": "function (bytes32) external returns (bool)"
                          }
                        },
                        "id": 53899,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1064:59:64",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 53895,
                      "name": "assertTrue",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        1270,
                        1291
                      ],
                      "referencedDeclaration": 1270,
                      "src": "1053:10:64",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bool_$returns$__$",
                        "typeString": "function (bool)"
                      }
                    },
                    "id": 53900,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1053:71:64",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 53901,
                  "nodeType": "ExpressionStatement",
                  "src": "1053:71:64"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "expression": {
                              "id": 53905,
                              "name": "TestAddress",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 55057,
                              "src": "1236:11:64",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_TestAddress_$55057_$",
                                "typeString": "type(library TestAddress)"
                              }
                            },
                            "id": 53906,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberLocation": "1248:8:64",
                            "memberName": "account1",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 55038,
                            "src": "1236:20:64",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 53903,
                            "name": "defaultCurrency",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 54282,
                            "src": "1210:15:64",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TestnetERC20_$49692",
                              "typeString": "contract TestnetERC20"
                            }
                          },
                          "id": 53904,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "1226:9:64",
                          "memberName": "balanceOf",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 44592,
                          "src": "1210:25:64",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (address) view external returns (uint256)"
                          }
                        },
                        "id": 53907,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1210:47:64",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 53912,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 53908,
                          "name": "asserterBalanceBefore",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 53861,
                          "src": "1259:21:64",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "+",
                        "rightExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 53911,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "hexValue": "32",
                            "id": 53909,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "1283:1:64",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_2_by_1",
                              "typeString": "int_const 2"
                            },
                            "value": "2"
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "*",
                          "rightExpression": {
                            "id": 53910,
                            "name": "requiredBond",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 52993,
                            "src": "1287:12:64",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "1283:16:64",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "1259:40:64",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 53902,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        3525,
                        3550,
                        3563,
                        3579,
                        3621,
                        3663,
                        3705,
                        3742,
                        3779,
                        3816,
                        1321,
                        1346,
                        1376,
                        1401,
                        1460,
                        1485,
                        1515,
                        1540,
                        3013,
                        3048
                      ],
                      "referencedDeclaration": 1515,
                      "src": "1201:8:64",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 53913,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1201:100:64",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 53914,
                  "nodeType": "ExpressionStatement",
                  "src": "1201:100:64"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint64",
                          "typeString": "uint64"
                        },
                        "id": 53922,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "arguments": [
                              {
                                "id": 53918,
                                "name": "marketId",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 53821,
                                "src": "1347:8:64",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes32",
                                  "typeString": "bytes32"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bytes32",
                                  "typeString": "bytes32"
                                }
                              ],
                              "expression": {
                                "id": 53916,
                                "name": "carbonUMArket",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 52985,
                                "src": "1323:13:64",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_CarbonUMArket_$1000",
                                  "typeString": "contract CarbonUMArket"
                                }
                              },
                              "id": 53917,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "1337:9:64",
                              "memberName": "getMarket",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 157,
                              "src": "1323:23:64",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_view$_t_bytes32_$returns$_t_struct$_Market_$57_memory_ptr_$",
                                "typeString": "function (bytes32) view external returns (struct CarbonUMArket.Market memory)"
                              }
                            },
                            "id": 53919,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "1323:33:64",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Market_$57_memory_ptr",
                              "typeString": "struct CarbonUMArket.Market memory"
                            }
                          },
                          "id": 53920,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "1357:11:64",
                          "memberName": "marketState",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 56,
                          "src": "1323:45:64",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint64",
                            "typeString": "uint64"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "hexValue": "32",
                          "id": 53921,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1372:1:64",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_2_by_1",
                            "typeString": "int_const 2"
                          },
                          "value": "2"
                        },
                        "src": "1323:50:64",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 53915,
                      "name": "assertTrue",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        1270,
                        1291
                      ],
                      "referencedDeclaration": 1270,
                      "src": "1312:10:64",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bool_$returns$__$",
                        "typeString": "function (bool)"
                      }
                    },
                    "id": 53923,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1312:62:64",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 53924,
                  "nodeType": "ExpressionStatement",
                  "src": "1312:62:64"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 53928,
                          "name": "TestAddress",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 55057,
                          "src": "1450:11:64",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_TestAddress_$55057_$",
                            "typeString": "type(library TestAddress)"
                          }
                        },
                        "id": 53929,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "memberLocation": "1462:8:64",
                        "memberName": "account2",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 55044,
                        "src": "1450:20:64",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 53925,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3351,
                        "src": "1441:2:64",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$14961",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 53927,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "1444:5:64",
                      "memberName": "prank",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 14622,
                      "src": "1441:8:64",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 53930,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1441:30:64",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 53931,
                  "nodeType": "ExpressionStatement",
                  "src": "1441:30:64"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 53935,
                        "name": "marketId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 53821,
                        "src": "1508:8:64",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "hexValue": "30",
                        "id": 53936,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1518:1:64",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        }
                      ],
                      "expression": {
                        "id": 53932,
                        "name": "carbonUMArket",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 52985,
                        "src": "1481:13:64",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_CarbonUMArket_$1000",
                          "typeString": "contract CarbonUMArket"
                        }
                      },
                      "id": 53934,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "1495:12:64",
                      "memberName": "settleMarket",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 999,
                      "src": "1481:26:64",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_bytes32_$_t_uint64_$returns$__$",
                        "typeString": "function (bytes32,uint64) external"
                      }
                    },
                    "id": 53937,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1481:39:64",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 53938,
                  "nodeType": "ExpressionStatement",
                  "src": "1481:39:64"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "expression": {
                              "id": 53945,
                              "name": "TestAddress",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 55057,
                              "src": "1577:11:64",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_TestAddress_$55057_$",
                                "typeString": "type(library TestAddress)"
                              }
                            },
                            "id": 53946,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberLocation": "1589:8:64",
                            "memberName": "account2",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 55044,
                            "src": "1577:20:64",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "arguments": [
                              {
                                "expression": {
                                  "id": 53941,
                                  "name": "market",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 53848,
                                  "src": "1546:6:64",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_Market_$57_memory_ptr",
                                    "typeString": "struct CarbonUMArket.Market memory"
                                  }
                                },
                                "id": 53942,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "1553:12:64",
                                "memberName": "carbonCredit",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 44,
                                "src": "1546:19:64",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_ExpandedIERC20_$49900",
                                  "typeString": "contract ExpandedIERC20"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_ExpandedIERC20_$49900",
                                  "typeString": "contract ExpandedIERC20"
                                }
                              ],
                              "id": 53940,
                              "name": "IERC20",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 45159,
                              "src": "1539:6:64",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_IERC20_$45159_$",
                                "typeString": "type(contract IERC20)"
                              }
                            },
                            "id": 53943,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "1539:27:64",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IERC20_$45159",
                              "typeString": "contract IERC20"
                            }
                          },
                          "id": 53944,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "1567:9:64",
                          "memberName": "balanceOf",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 45098,
                          "src": "1539:37:64",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (address) view external returns (uint256)"
                          }
                        },
                        "id": 53947,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1539:59:64",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "30",
                        "id": 53948,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1600:1:64",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        }
                      ],
                      "id": 53939,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        3525,
                        3550,
                        3563,
                        3579,
                        3621,
                        3663,
                        3705,
                        3742,
                        3779,
                        3816,
                        1321,
                        1346,
                        1376,
                        1401,
                        1460,
                        1485,
                        1515,
                        1540,
                        3013,
                        3048
                      ],
                      "referencedDeclaration": 1515,
                      "src": "1530:8:64",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 53949,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1530:72:64",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 53950,
                  "nodeType": "ExpressionStatement",
                  "src": "1530:72:64"
                }
              ]
            },
            "functionSelector": "217356c6",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "test_ResolveMarketNoDispute",
            "nameLocation": "420:27:64",
            "parameters": {
              "id": 53842,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "447:2:64"
            },
            "returnParameters": {
              "id": 53843,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "457:0:64"
            },
            "scope": 54251,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 54096,
            "nodeType": "FunctionDefinition",
            "src": "1624:1650:64",
            "nodes": [],
            "body": {
              "id": 54095,
              "nodeType": "Block",
              "src": "1677:1597:64",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    53959
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 53959,
                      "mutability": "mutable",
                      "name": "market",
                      "nameLocation": "1716:6:64",
                      "nodeType": "VariableDeclaration",
                      "scope": 54095,
                      "src": "1688:34:64",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Market_$57_memory_ptr",
                        "typeString": "struct CarbonUMArket.Market"
                      },
                      "typeName": {
                        "id": 53958,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 53957,
                          "name": "CarbonUMArket.Market",
                          "nameLocations": [
                            "1688:13:64",
                            "1702:6:64"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 57,
                          "src": "1688:20:64"
                        },
                        "referencedDeclaration": 57,
                        "src": "1688:20:64",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Market_$57_storage_ptr",
                          "typeString": "struct CarbonUMArket.Market"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 53964,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 53962,
                        "name": "marketId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 53821,
                        "src": "1749:8:64",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      ],
                      "expression": {
                        "id": 53960,
                        "name": "carbonUMArket",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 52985,
                        "src": "1725:13:64",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_CarbonUMArket_$1000",
                          "typeString": "contract CarbonUMArket"
                        }
                      },
                      "id": 53961,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "1739:9:64",
                      "memberName": "getMarket",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 157,
                      "src": "1725:23:64",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_bytes32_$returns$_t_struct$_Market_$57_memory_ptr_$",
                        "typeString": "function (bytes32) view external returns (struct CarbonUMArket.Market memory)"
                      }
                    },
                    "id": 53963,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1725:33:64",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Market_$57_memory_ptr",
                      "typeString": "struct CarbonUMArket.Market memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1688:70:64"
                },
                {
                  "assignments": [
                    53966
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 53966,
                      "mutability": "mutable",
                      "name": "assertionId",
                      "nameLocation": "1785:11:64",
                      "nodeType": "VariableDeclaration",
                      "scope": 54095,
                      "src": "1777:19:64",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 53965,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "1777:7:64",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 53970,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 53968,
                        "name": "marketId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 53821,
                        "src": "1813:8:64",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      ],
                      "id": 53967,
                      "name": "_assertMarket",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 53178,
                      "src": "1799:13:64",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$returns$_t_bytes32_$",
                        "typeString": "function (bytes32) returns (bytes32)"
                      }
                    },
                    "id": 53969,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1799:23:64",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1777:45:64"
                },
                {
                  "assignments": [
                    53972
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 53972,
                      "mutability": "mutable",
                      "name": "asserterBalanceBefore",
                      "nameLocation": "1840:21:64",
                      "nodeType": "VariableDeclaration",
                      "scope": 54095,
                      "src": "1832:29:64",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 53971,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "1832:7:64",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 53978,
                  "initialValue": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 53975,
                          "name": "TestAddress",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 55057,
                          "src": "1890:11:64",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_TestAddress_$55057_$",
                            "typeString": "type(library TestAddress)"
                          }
                        },
                        "id": 53976,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "memberLocation": "1902:8:64",
                        "memberName": "account1",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 55038,
                        "src": "1890:20:64",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 53973,
                        "name": "defaultCurrency",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 54282,
                        "src": "1864:15:64",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_TestnetERC20_$49692",
                          "typeString": "contract TestnetERC20"
                        }
                      },
                      "id": 53974,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "1880:9:64",
                      "memberName": "balanceOf",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 44592,
                      "src": "1864:25:64",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) view external returns (uint256)"
                      }
                    },
                    "id": 53977,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1864:47:64",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1832:79:64"
                },
                {
                  "assignments": [
                    53980
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 53980,
                      "mutability": "mutable",
                      "name": "validatorBalanceBefore",
                      "nameLocation": "1930:22:64",
                      "nodeType": "VariableDeclaration",
                      "scope": 54095,
                      "src": "1922:30:64",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 53979,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "1922:7:64",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 53986,
                  "initialValue": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 53983,
                          "name": "TestAddress",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 55057,
                          "src": "1981:11:64",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_TestAddress_$55057_$",
                            "typeString": "type(library TestAddress)"
                          }
                        },
                        "id": 53984,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "memberLocation": "1993:8:64",
                        "memberName": "account3",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 55050,
                        "src": "1981:20:64",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 53981,
                        "name": "defaultCurrency",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 54282,
                        "src": "1955:15:64",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_TestnetERC20_$49692",
                          "typeString": "contract TestnetERC20"
                        }
                      },
                      "id": 53982,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "1971:9:64",
                      "memberName": "balanceOf",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 44592,
                      "src": "1955:25:64",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) view external returns (uint256)"
                      }
                    },
                    "id": 53985,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1955:47:64",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1922:80:64"
                },
                {
                  "assignments": [
                    53989
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 53989,
                      "mutability": "mutable",
                      "name": "oracleRequest",
                      "nameLocation": "2159:13:64",
                      "nodeType": "VariableDeclaration",
                      "scope": 54095,
                      "src": "2138:34:64",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_OracleRequest_$54266_memory_ptr",
                        "typeString": "struct CommonOptimisticOracleV3Test.OracleRequest"
                      },
                      "typeName": {
                        "id": 53988,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 53987,
                          "name": "OracleRequest",
                          "nameLocations": [
                            "2138:13:64"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 54266,
                          "src": "2138:13:64"
                        },
                        "referencedDeclaration": 54266,
                        "src": "2138:13:64",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_OracleRequest_$54266_storage_ptr",
                          "typeString": "struct CommonOptimisticOracleV3Test.OracleRequest"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 53994,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 53991,
                        "name": "assertionId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 53966,
                        "src": "2203:11:64",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "id": 53992,
                        "name": "requiredBond",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 52993,
                        "src": "2216:12:64",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 53990,
                      "name": "_disputeAndGetOracleRequest",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 54722,
                      "src": "2175:27:64",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_uint256_$returns$_t_struct$_OracleRequest_$54266_memory_ptr_$",
                        "typeString": "function (bytes32,uint256) returns (struct CommonOptimisticOracleV3Test.OracleRequest memory)"
                      }
                    },
                    "id": 53993,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2175:54:64",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_OracleRequest_$54266_memory_ptr",
                      "typeString": "struct CommonOptimisticOracleV3Test.OracleRequest memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2138:91:64"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 53998,
                            "name": "mockOracle",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 54291,
                            "src": "2267:10:64",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_MockOracleAncillary_$51011",
                              "typeString": "contract MockOracleAncillary"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_MockOracleAncillary_$51011",
                              "typeString": "contract MockOracleAncillary"
                            }
                          ],
                          "id": 53997,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "2259:7:64",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 53996,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "2259:7:64",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 53999,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2259:19:64",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 54000,
                        "name": "oracleRequest",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 53989,
                        "src": "2280:13:64",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_OracleRequest_$54266_memory_ptr",
                          "typeString": "struct CommonOptimisticOracleV3Test.OracleRequest memory"
                        }
                      },
                      {
                        "hexValue": "74727565",
                        "id": 54001,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2295:4:64",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "true"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_struct$_OracleRequest_$54266_memory_ptr",
                          "typeString": "struct CommonOptimisticOracleV3Test.OracleRequest memory"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 53995,
                      "name": "_mockOracleResolved",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 54580,
                      "src": "2239:19:64",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_struct$_OracleRequest_$54266_memory_ptr_$_t_bool_$returns$__$",
                        "typeString": "function (address,struct CommonOptimisticOracleV3Test.OracleRequest memory,bool)"
                      }
                    },
                    "id": 54002,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2239:61:64",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 54003,
                  "nodeType": "ExpressionStatement",
                  "src": "2239:61:64"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 54009,
                            "name": "carbonUMArket",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 52985,
                            "src": "2345:13:64",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_CarbonUMArket_$1000",
                              "typeString": "contract CarbonUMArket"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_CarbonUMArket_$1000",
                              "typeString": "contract CarbonUMArket"
                            }
                          ],
                          "id": 54008,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "2337:7:64",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 54007,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "2337:7:64",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 54010,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2337:22:64",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "expression": {
                              "id": 54013,
                              "name": "carbonUMArket",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 52985,
                              "src": "2388:13:64",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_CarbonUMArket_$1000",
                                "typeString": "contract CarbonUMArket"
                              }
                            },
                            "id": 54014,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "2402:25:64",
                            "memberName": "assertionResolvedCallback",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 655,
                            "src": "2388:39:64",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_bytes32_$_t_bool_$returns$__$",
                              "typeString": "function (bytes32,bool) external"
                            }
                          },
                          {
                            "components": [
                              {
                                "id": 54015,
                                "name": "assertionId",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 53966,
                                "src": "2430:11:64",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes32",
                                  "typeString": "bytes32"
                                }
                              },
                              {
                                "hexValue": "74727565",
                                "id": 54016,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "bool",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "2443:4:64",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                },
                                "value": "true"
                              }
                            ],
                            "id": 54017,
                            "isConstant": false,
                            "isInlineArray": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "TupleExpression",
                            "src": "2429:19:64",
                            "typeDescriptions": {
                              "typeIdentifier": "t_tuple$_t_bytes32_$_t_bool_$",
                              "typeString": "tuple(bytes32,bool)"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_function_external_nonpayable$_t_bytes32_$_t_bool_$returns$__$",
                              "typeString": "function (bytes32,bool) external"
                            },
                            {
                              "typeIdentifier": "t_tuple$_t_bytes32_$_t_bool_$",
                              "typeString": "tuple(bytes32,bool)"
                            }
                          ],
                          "expression": {
                            "id": 54011,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -1,
                            "src": "2373:3:64",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 54012,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberLocation": "2377:10:64",
                          "memberName": "encodeCall",
                          "nodeType": "MemberAccess",
                          "src": "2373:14:64",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function () pure returns (bytes memory)"
                          }
                        },
                        "id": 54018,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2373:76:64",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "expression": {
                        "id": 54004,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3351,
                        "src": "2310:2:64",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$14961",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 54006,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "2313:10:64",
                      "memberName": "expectCall",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 14819,
                      "src": "2310:13:64",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (address,bytes memory) external"
                      }
                    },
                    "id": 54019,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2310:149:64",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 54020,
                  "nodeType": "ExpressionStatement",
                  "src": "2310:149:64"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 54024,
                            "name": "assertionId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 53966,
                            "src": "2527:11:64",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          ],
                          "expression": {
                            "id": 54022,
                            "name": "optimisticOracleV3",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 54279,
                            "src": "2480:18:64",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_OptimisticOracleV3_$52312",
                              "typeString": "contract OptimisticOracleV3"
                            }
                          },
                          "id": 54023,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "2499:27:64",
                          "memberName": "settleAndGetAssertionResult",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 51723,
                          "src": "2480:46:64",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_nonpayable$_t_bytes32_$returns$_t_bool_$",
                            "typeString": "function (bytes32) external returns (bool)"
                          }
                        },
                        "id": 54025,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2480:59:64",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 54021,
                      "name": "assertTrue",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        1270,
                        1291
                      ],
                      "referencedDeclaration": 1270,
                      "src": "2469:10:64",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bool_$returns$__$",
                        "typeString": "function (bool)"
                      }
                    },
                    "id": 54026,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2469:71:64",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 54027,
                  "nodeType": "ExpressionStatement",
                  "src": "2469:71:64"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "expression": {
                              "id": 54031,
                              "name": "TestAddress",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 55057,
                              "src": "2688:11:64",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_TestAddress_$55057_$",
                                "typeString": "type(library TestAddress)"
                              }
                            },
                            "id": 54032,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberLocation": "2700:8:64",
                            "memberName": "account1",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 55038,
                            "src": "2688:20:64",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 54029,
                            "name": "defaultCurrency",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 54282,
                            "src": "2662:15:64",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TestnetERC20_$49692",
                              "typeString": "contract TestnetERC20"
                            }
                          },
                          "id": 54030,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "2678:9:64",
                          "memberName": "balanceOf",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 44592,
                          "src": "2662:25:64",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (address) view external returns (uint256)"
                          }
                        },
                        "id": 54033,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2662:47:64",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 54040,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 54034,
                          "name": "asserterBalanceBefore",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 53972,
                          "src": "2723:21:64",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "+",
                        "rightExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 54039,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 54037,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "id": 54035,
                              "name": "requiredBond",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 52993,
                              "src": "2747:12:64",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "*",
                            "rightExpression": {
                              "hexValue": "35",
                              "id": 54036,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "2762:1:64",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_5_by_1",
                                "typeString": "int_const 5"
                              },
                              "value": "5"
                            },
                            "src": "2747:16:64",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "/",
                          "rightExpression": {
                            "hexValue": "32",
                            "id": 54038,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "2766:1:64",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_2_by_1",
                              "typeString": "int_const 2"
                            },
                            "value": "2"
                          },
                          "src": "2747:20:64",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "2723:44:64",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 54028,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        3525,
                        3550,
                        3563,
                        3579,
                        3621,
                        3663,
                        3705,
                        3742,
                        3779,
                        3816,
                        1321,
                        1346,
                        1376,
                        1401,
                        1460,
                        1485,
                        1515,
                        1540,
                        3013,
                        3048
                      ],
                      "referencedDeclaration": 1515,
                      "src": "2640:8:64",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 54041,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2640:137:64",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 54042,
                  "nodeType": "ExpressionStatement",
                  "src": "2640:137:64"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 54046,
                          "name": "TestAddress",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 55057,
                          "src": "2855:11:64",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_TestAddress_$55057_$",
                            "typeString": "type(library TestAddress)"
                          }
                        },
                        "id": 54047,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "memberLocation": "2867:8:64",
                        "memberName": "account2",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 55044,
                        "src": "2855:20:64",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 54043,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3351,
                        "src": "2846:2:64",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$14961",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 54045,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "2849:5:64",
                      "memberName": "prank",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 14622,
                      "src": "2846:8:64",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 54048,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2846:30:64",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 54049,
                  "nodeType": "ExpressionStatement",
                  "src": "2846:30:64"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 54053,
                        "name": "marketId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 53821,
                        "src": "2913:8:64",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "hexValue": "30",
                        "id": 54054,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2923:1:64",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        }
                      ],
                      "expression": {
                        "id": 54050,
                        "name": "carbonUMArket",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 52985,
                        "src": "2886:13:64",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_CarbonUMArket_$1000",
                          "typeString": "contract CarbonUMArket"
                        }
                      },
                      "id": 54052,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "2900:12:64",
                      "memberName": "settleMarket",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 999,
                      "src": "2886:26:64",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_bytes32_$_t_uint64_$returns$__$",
                        "typeString": "function (bytes32,uint64) external"
                      }
                    },
                    "id": 54055,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2886:39:64",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 54056,
                  "nodeType": "ExpressionStatement",
                  "src": "2886:39:64"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "expression": {
                              "id": 54063,
                              "name": "TestAddress",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 55057,
                              "src": "2982:11:64",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_TestAddress_$55057_$",
                                "typeString": "type(library TestAddress)"
                              }
                            },
                            "id": 54064,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberLocation": "2994:8:64",
                            "memberName": "account2",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 55044,
                            "src": "2982:20:64",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "arguments": [
                              {
                                "expression": {
                                  "id": 54059,
                                  "name": "market",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 53959,
                                  "src": "2951:6:64",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_Market_$57_memory_ptr",
                                    "typeString": "struct CarbonUMArket.Market memory"
                                  }
                                },
                                "id": 54060,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "2958:12:64",
                                "memberName": "carbonCredit",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 44,
                                "src": "2951:19:64",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_ExpandedIERC20_$49900",
                                  "typeString": "contract ExpandedIERC20"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_ExpandedIERC20_$49900",
                                  "typeString": "contract ExpandedIERC20"
                                }
                              ],
                              "id": 54058,
                              "name": "IERC20",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 45159,
                              "src": "2944:6:64",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_IERC20_$45159_$",
                                "typeString": "type(contract IERC20)"
                              }
                            },
                            "id": 54061,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "2944:27:64",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IERC20_$45159",
                              "typeString": "contract IERC20"
                            }
                          },
                          "id": 54062,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "2972:9:64",
                          "memberName": "balanceOf",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 45098,
                          "src": "2944:37:64",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (address) view external returns (uint256)"
                          }
                        },
                        "id": 54065,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2944:59:64",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "30",
                        "id": 54066,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3005:1:64",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        }
                      ],
                      "id": 54057,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        3525,
                        3550,
                        3563,
                        3579,
                        3621,
                        3663,
                        3705,
                        3742,
                        3779,
                        3816,
                        1321,
                        1346,
                        1376,
                        1401,
                        1460,
                        1485,
                        1515,
                        1540,
                        3013,
                        3048
                      ],
                      "referencedDeclaration": 1515,
                      "src": "2935:8:64",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 54067,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2935:72:64",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 54068,
                  "nodeType": "ExpressionStatement",
                  "src": "2935:72:64"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 54072,
                          "name": "TestAddress",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 55057,
                          "src": "3085:11:64",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_TestAddress_$55057_$",
                            "typeString": "type(library TestAddress)"
                          }
                        },
                        "id": 54073,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "memberLocation": "3097:8:64",
                        "memberName": "account3",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 55050,
                        "src": "3085:20:64",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 54069,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3351,
                        "src": "3076:2:64",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$14961",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 54071,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "3079:5:64",
                      "memberName": "prank",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 14622,
                      "src": "3076:8:64",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 54074,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3076:30:64",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 54075,
                  "nodeType": "ExpressionStatement",
                  "src": "3076:30:64"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 54079,
                        "name": "marketId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 53821,
                        "src": "3143:8:64",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "hexValue": "3130303030",
                        "id": 54080,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3153:5:64",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_10000_by_1",
                          "typeString": "int_const 10000"
                        },
                        "value": "10000"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_rational_10000_by_1",
                          "typeString": "int_const 10000"
                        }
                      ],
                      "expression": {
                        "id": 54076,
                        "name": "carbonUMArket",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 52985,
                        "src": "3116:13:64",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_CarbonUMArket_$1000",
                          "typeString": "contract CarbonUMArket"
                        }
                      },
                      "id": 54078,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "3130:12:64",
                      "memberName": "settleMarket",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 999,
                      "src": "3116:26:64",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_bytes32_$_t_uint64_$returns$__$",
                        "typeString": "function (bytes32,uint64) external"
                      }
                    },
                    "id": 54081,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3116:43:64",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 54082,
                  "nodeType": "ExpressionStatement",
                  "src": "3116:43:64"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "expression": {
                              "id": 54086,
                              "name": "TestAddress",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 55057,
                              "src": "3204:11:64",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_TestAddress_$55057_$",
                                "typeString": "type(library TestAddress)"
                              }
                            },
                            "id": 54087,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberLocation": "3216:8:64",
                            "memberName": "account3",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 55050,
                            "src": "3204:20:64",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 54084,
                            "name": "defaultCurrency",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 54282,
                            "src": "3178:15:64",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TestnetERC20_$49692",
                              "typeString": "contract TestnetERC20"
                            }
                          },
                          "id": 54085,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "3194:9:64",
                          "memberName": "balanceOf",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 44592,
                          "src": "3178:25:64",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (address) view external returns (uint256)"
                          }
                        },
                        "id": 54088,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3178:47:64",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 54092,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 54089,
                          "name": "validatorBalanceBefore",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 53980,
                          "src": "3227:22:64",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "+",
                        "rightExpression": {
                          "expression": {
                            "id": 54090,
                            "name": "market",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 53959,
                            "src": "3252:6:64",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Market_$57_memory_ptr",
                              "typeString": "struct CarbonUMArket.Market memory"
                            }
                          },
                          "id": 54091,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "3259:6:64",
                          "memberName": "reward",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 39,
                          "src": "3252:13:64",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "3227:38:64",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 54083,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        3525,
                        3550,
                        3563,
                        3579,
                        3621,
                        3663,
                        3705,
                        3742,
                        3779,
                        3816,
                        1321,
                        1346,
                        1376,
                        1401,
                        1460,
                        1485,
                        1515,
                        1540,
                        3013,
                        3048
                      ],
                      "referencedDeclaration": 1515,
                      "src": "3169:8:64",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 54093,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3169:97:64",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 54094,
                  "nodeType": "ExpressionStatement",
                  "src": "3169:97:64"
                }
              ]
            },
            "functionSelector": "dbd07b77",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "test_ResolveMarketWithWrongDispute",
            "nameLocation": "1633:34:64",
            "parameters": {
              "id": 53953,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1667:2:64"
            },
            "returnParameters": {
              "id": 53954,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1677:0:64"
            },
            "scope": 54251,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 54250,
            "nodeType": "FunctionDefinition",
            "src": "3280:1775:64",
            "nodes": [],
            "body": {
              "id": 54249,
              "nodeType": "Block",
              "src": "3331:1724:64",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    54103
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 54103,
                      "mutability": "mutable",
                      "name": "market",
                      "nameLocation": "3378:6:64",
                      "nodeType": "VariableDeclaration",
                      "scope": 54249,
                      "src": "3350:34:64",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Market_$57_memory_ptr",
                        "typeString": "struct CarbonUMArket.Market"
                      },
                      "typeName": {
                        "id": 54102,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 54101,
                          "name": "CarbonUMArket.Market",
                          "nameLocations": [
                            "3350:13:64",
                            "3364:6:64"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 57,
                          "src": "3350:20:64"
                        },
                        "referencedDeclaration": 57,
                        "src": "3350:20:64",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Market_$57_storage_ptr",
                          "typeString": "struct CarbonUMArket.Market"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 54108,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 54106,
                        "name": "marketId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 53821,
                        "src": "3411:8:64",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      ],
                      "expression": {
                        "id": 54104,
                        "name": "carbonUMArket",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 52985,
                        "src": "3387:13:64",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_CarbonUMArket_$1000",
                          "typeString": "contract CarbonUMArket"
                        }
                      },
                      "id": 54105,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "3401:9:64",
                      "memberName": "getMarket",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 157,
                      "src": "3387:23:64",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_bytes32_$returns$_t_struct$_Market_$57_memory_ptr_$",
                        "typeString": "function (bytes32) view external returns (struct CarbonUMArket.Market memory)"
                      }
                    },
                    "id": 54107,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3387:33:64",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Market_$57_memory_ptr",
                      "typeString": "struct CarbonUMArket.Market memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3350:70:64"
                },
                {
                  "assignments": [
                    54110
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 54110,
                      "mutability": "mutable",
                      "name": "assertionId",
                      "nameLocation": "3439:11:64",
                      "nodeType": "VariableDeclaration",
                      "scope": 54249,
                      "src": "3431:19:64",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 54109,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "3431:7:64",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 54114,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 54112,
                        "name": "marketId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 53821,
                        "src": "3467:8:64",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      ],
                      "id": 54111,
                      "name": "_assertMarket",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 53178,
                      "src": "3453:13:64",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$returns$_t_bytes32_$",
                        "typeString": "function (bytes32) returns (bytes32)"
                      }
                    },
                    "id": 54113,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3453:23:64",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3431:45:64"
                },
                {
                  "assignments": [
                    54116
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 54116,
                      "mutability": "mutable",
                      "name": "asserterBalanceBefore",
                      "nameLocation": "3494:21:64",
                      "nodeType": "VariableDeclaration",
                      "scope": 54249,
                      "src": "3486:29:64",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 54115,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "3486:7:64",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 54122,
                  "initialValue": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 54119,
                          "name": "TestAddress",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 55057,
                          "src": "3544:11:64",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_TestAddress_$55057_$",
                            "typeString": "type(library TestAddress)"
                          }
                        },
                        "id": 54120,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "memberLocation": "3556:8:64",
                        "memberName": "account1",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 55038,
                        "src": "3544:20:64",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 54117,
                        "name": "defaultCurrency",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 54282,
                        "src": "3518:15:64",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_TestnetERC20_$49692",
                          "typeString": "contract TestnetERC20"
                        }
                      },
                      "id": 54118,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "3534:9:64",
                      "memberName": "balanceOf",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 44592,
                      "src": "3518:25:64",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) view external returns (uint256)"
                      }
                    },
                    "id": 54121,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3518:47:64",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3486:79:64"
                },
                {
                  "assignments": [
                    54124
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 54124,
                      "mutability": "mutable",
                      "name": "validatorBalanceBefore",
                      "nameLocation": "3584:22:64",
                      "nodeType": "VariableDeclaration",
                      "scope": 54249,
                      "src": "3576:30:64",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 54123,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "3576:7:64",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 54130,
                  "initialValue": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 54127,
                          "name": "TestAddress",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 55057,
                          "src": "3635:11:64",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_TestAddress_$55057_$",
                            "typeString": "type(library TestAddress)"
                          }
                        },
                        "id": 54128,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "memberLocation": "3647:8:64",
                        "memberName": "account3",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 55050,
                        "src": "3635:20:64",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 54125,
                        "name": "defaultCurrency",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 54282,
                        "src": "3609:15:64",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_TestnetERC20_$49692",
                          "typeString": "contract TestnetERC20"
                        }
                      },
                      "id": 54126,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "3625:9:64",
                      "memberName": "balanceOf",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 44592,
                      "src": "3609:25:64",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) view external returns (uint256)"
                      }
                    },
                    "id": 54129,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3609:47:64",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3576:80:64"
                },
                {
                  "assignments": [
                    54133
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 54133,
                      "mutability": "mutable",
                      "name": "oracleRequest",
                      "nameLocation": "3811:13:64",
                      "nodeType": "VariableDeclaration",
                      "scope": 54249,
                      "src": "3790:34:64",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_OracleRequest_$54266_memory_ptr",
                        "typeString": "struct CommonOptimisticOracleV3Test.OracleRequest"
                      },
                      "typeName": {
                        "id": 54132,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 54131,
                          "name": "OracleRequest",
                          "nameLocations": [
                            "3790:13:64"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 54266,
                          "src": "3790:13:64"
                        },
                        "referencedDeclaration": 54266,
                        "src": "3790:13:64",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_OracleRequest_$54266_storage_ptr",
                          "typeString": "struct CommonOptimisticOracleV3Test.OracleRequest"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 54138,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 54135,
                        "name": "assertionId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 54110,
                        "src": "3855:11:64",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "id": 54136,
                        "name": "requiredBond",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 52993,
                        "src": "3868:12:64",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 54134,
                      "name": "_disputeAndGetOracleRequest",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 54722,
                      "src": "3827:27:64",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_uint256_$returns$_t_struct$_OracleRequest_$54266_memory_ptr_$",
                        "typeString": "function (bytes32,uint256) returns (struct CommonOptimisticOracleV3Test.OracleRequest memory)"
                      }
                    },
                    "id": 54137,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3827:54:64",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_OracleRequest_$54266_memory_ptr",
                      "typeString": "struct CommonOptimisticOracleV3Test.OracleRequest memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3790:91:64"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 54142,
                            "name": "mockOracle",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 54291,
                            "src": "3919:10:64",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_MockOracleAncillary_$51011",
                              "typeString": "contract MockOracleAncillary"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_MockOracleAncillary_$51011",
                              "typeString": "contract MockOracleAncillary"
                            }
                          ],
                          "id": 54141,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "3911:7:64",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 54140,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "3911:7:64",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 54143,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3911:19:64",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 54144,
                        "name": "oracleRequest",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 54133,
                        "src": "3932:13:64",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_OracleRequest_$54266_memory_ptr",
                          "typeString": "struct CommonOptimisticOracleV3Test.OracleRequest memory"
                        }
                      },
                      {
                        "hexValue": "66616c7365",
                        "id": 54145,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3947:5:64",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "false"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_struct$_OracleRequest_$54266_memory_ptr",
                          "typeString": "struct CommonOptimisticOracleV3Test.OracleRequest memory"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 54139,
                      "name": "_mockOracleResolved",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 54580,
                      "src": "3891:19:64",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_struct$_OracleRequest_$54266_memory_ptr_$_t_bool_$returns$__$",
                        "typeString": "function (address,struct CommonOptimisticOracleV3Test.OracleRequest memory,bool)"
                      }
                    },
                    "id": 54146,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3891:62:64",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 54147,
                  "nodeType": "ExpressionStatement",
                  "src": "3891:62:64"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 54153,
                            "name": "carbonUMArket",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 52985,
                            "src": "3998:13:64",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_CarbonUMArket_$1000",
                              "typeString": "contract CarbonUMArket"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_CarbonUMArket_$1000",
                              "typeString": "contract CarbonUMArket"
                            }
                          ],
                          "id": 54152,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "3990:7:64",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 54151,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "3990:7:64",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 54154,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3990:22:64",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "expression": {
                              "id": 54157,
                              "name": "carbonUMArket",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 52985,
                              "src": "4041:13:64",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_CarbonUMArket_$1000",
                                "typeString": "contract CarbonUMArket"
                              }
                            },
                            "id": 54158,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "4055:25:64",
                            "memberName": "assertionResolvedCallback",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 655,
                            "src": "4041:39:64",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_bytes32_$_t_bool_$returns$__$",
                              "typeString": "function (bytes32,bool) external"
                            }
                          },
                          {
                            "components": [
                              {
                                "id": 54159,
                                "name": "assertionId",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 54110,
                                "src": "4083:11:64",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes32",
                                  "typeString": "bytes32"
                                }
                              },
                              {
                                "hexValue": "66616c7365",
                                "id": 54160,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "bool",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "4096:5:64",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                },
                                "value": "false"
                              }
                            ],
                            "id": 54161,
                            "isConstant": false,
                            "isInlineArray": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "TupleExpression",
                            "src": "4082:20:64",
                            "typeDescriptions": {
                              "typeIdentifier": "t_tuple$_t_bytes32_$_t_bool_$",
                              "typeString": "tuple(bytes32,bool)"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_function_external_nonpayable$_t_bytes32_$_t_bool_$returns$__$",
                              "typeString": "function (bytes32,bool) external"
                            },
                            {
                              "typeIdentifier": "t_tuple$_t_bytes32_$_t_bool_$",
                              "typeString": "tuple(bytes32,bool)"
                            }
                          ],
                          "expression": {
                            "id": 54155,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -1,
                            "src": "4026:3:64",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 54156,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberLocation": "4030:10:64",
                          "memberName": "encodeCall",
                          "nodeType": "MemberAccess",
                          "src": "4026:14:64",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function () pure returns (bytes memory)"
                          }
                        },
                        "id": 54162,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4026:77:64",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "expression": {
                        "id": 54148,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3351,
                        "src": "3963:2:64",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$14961",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 54150,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "3966:10:64",
                      "memberName": "expectCall",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 14819,
                      "src": "3963:13:64",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (address,bytes memory) external"
                      }
                    },
                    "id": 54163,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3963:150:64",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 54164,
                  "nodeType": "ExpressionStatement",
                  "src": "3963:150:64"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 54168,
                            "name": "assertionId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 54110,
                            "src": "4182:11:64",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          ],
                          "expression": {
                            "id": 54166,
                            "name": "optimisticOracleV3",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 54279,
                            "src": "4135:18:64",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_OptimisticOracleV3_$52312",
                              "typeString": "contract OptimisticOracleV3"
                            }
                          },
                          "id": 54167,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "4154:27:64",
                          "memberName": "settleAndGetAssertionResult",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 51723,
                          "src": "4135:46:64",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_nonpayable$_t_bytes32_$returns$_t_bool_$",
                            "typeString": "function (bytes32) external returns (bool)"
                          }
                        },
                        "id": 54169,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4135:59:64",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 54165,
                      "name": "assertFalse",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        3475,
                        3489
                      ],
                      "referencedDeclaration": 3475,
                      "src": "4123:11:64",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bool_$returns$__$",
                        "typeString": "function (bool)"
                      }
                    },
                    "id": 54170,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4123:72:64",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 54171,
                  "nodeType": "ExpressionStatement",
                  "src": "4123:72:64"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "expression": {
                              "id": 54175,
                              "name": "TestAddress",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 55057,
                              "src": "4254:11:64",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_TestAddress_$55057_$",
                                "typeString": "type(library TestAddress)"
                              }
                            },
                            "id": 54176,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberLocation": "4266:8:64",
                            "memberName": "account1",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 55038,
                            "src": "4254:20:64",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 54173,
                            "name": "defaultCurrency",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 54282,
                            "src": "4228:15:64",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TestnetERC20_$49692",
                              "typeString": "contract TestnetERC20"
                            }
                          },
                          "id": 54174,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "4244:9:64",
                          "memberName": "balanceOf",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 44592,
                          "src": "4228:25:64",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (address) view external returns (uint256)"
                          }
                        },
                        "id": 54177,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4228:47:64",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 54178,
                        "name": "asserterBalanceBefore",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 54116,
                        "src": "4289:21:64",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 54172,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        3525,
                        3550,
                        3563,
                        3579,
                        3621,
                        3663,
                        3705,
                        3742,
                        3779,
                        3816,
                        1321,
                        1346,
                        1376,
                        1401,
                        1460,
                        1485,
                        1515,
                        1540,
                        3013,
                        3048
                      ],
                      "referencedDeclaration": 1515,
                      "src": "4206:8:64",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 54179,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4206:114:64",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 54180,
                  "nodeType": "ExpressionStatement",
                  "src": "4206:114:64"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 54184,
                          "name": "TestAddress",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 55057,
                          "src": "4498:11:64",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_TestAddress_$55057_$",
                            "typeString": "type(library TestAddress)"
                          }
                        },
                        "id": 54185,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "memberLocation": "4510:8:64",
                        "memberName": "account2",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 55044,
                        "src": "4498:20:64",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 54181,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3351,
                        "src": "4489:2:64",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$14961",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 54183,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "4492:5:64",
                      "memberName": "prank",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 14622,
                      "src": "4489:8:64",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 54186,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4489:30:64",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 54187,
                  "nodeType": "ExpressionStatement",
                  "src": "4489:30:64"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 54191,
                        "name": "marketId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 53821,
                        "src": "4556:8:64",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "hexValue": "30",
                        "id": 54192,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4566:1:64",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        }
                      ],
                      "expression": {
                        "id": 54188,
                        "name": "carbonUMArket",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 52985,
                        "src": "4529:13:64",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_CarbonUMArket_$1000",
                          "typeString": "contract CarbonUMArket"
                        }
                      },
                      "id": 54190,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "4543:12:64",
                      "memberName": "settleMarket",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 999,
                      "src": "4529:26:64",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_bytes32_$_t_uint64_$returns$__$",
                        "typeString": "function (bytes32,uint64) external"
                      }
                    },
                    "id": 54193,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4529:39:64",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 54194,
                  "nodeType": "ExpressionStatement",
                  "src": "4529:39:64"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "expression": {
                              "id": 54201,
                              "name": "TestAddress",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 55057,
                              "src": "4626:11:64",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_TestAddress_$55057_$",
                                "typeString": "type(library TestAddress)"
                              }
                            },
                            "id": 54202,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberLocation": "4638:8:64",
                            "memberName": "account2",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 55044,
                            "src": "4626:20:64",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "arguments": [
                              {
                                "expression": {
                                  "id": 54197,
                                  "name": "market",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 54103,
                                  "src": "4595:6:64",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_Market_$57_memory_ptr",
                                    "typeString": "struct CarbonUMArket.Market memory"
                                  }
                                },
                                "id": 54198,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "4602:12:64",
                                "memberName": "carbonCredit",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 44,
                                "src": "4595:19:64",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_ExpandedIERC20_$49900",
                                  "typeString": "contract ExpandedIERC20"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_ExpandedIERC20_$49900",
                                  "typeString": "contract ExpandedIERC20"
                                }
                              ],
                              "id": 54196,
                              "name": "IERC20",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 45159,
                              "src": "4588:6:64",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_IERC20_$45159_$",
                                "typeString": "type(contract IERC20)"
                              }
                            },
                            "id": 54199,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "4588:27:64",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IERC20_$45159",
                              "typeString": "contract IERC20"
                            }
                          },
                          "id": 54200,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "4616:9:64",
                          "memberName": "balanceOf",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 45098,
                          "src": "4588:37:64",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (address) view external returns (uint256)"
                          }
                        },
                        "id": 54203,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4588:59:64",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 54206,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 54204,
                          "name": "creditCap",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 52996,
                          "src": "4649:9:64",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "/",
                        "rightExpression": {
                          "hexValue": "32",
                          "id": 54205,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "4661:1:64",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_2_by_1",
                            "typeString": "int_const 2"
                          },
                          "value": "2"
                        },
                        "src": "4649:13:64",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 54195,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        3525,
                        3550,
                        3563,
                        3579,
                        3621,
                        3663,
                        3705,
                        3742,
                        3779,
                        3816,
                        1321,
                        1346,
                        1376,
                        1401,
                        1460,
                        1485,
                        1515,
                        1540,
                        3013,
                        3048
                      ],
                      "referencedDeclaration": 1515,
                      "src": "4579:8:64",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 54207,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4579:84:64",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 54208,
                  "nodeType": "ExpressionStatement",
                  "src": "4579:84:64"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 54212,
                          "name": "TestAddress",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 55057,
                          "src": "4741:11:64",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_TestAddress_$55057_$",
                            "typeString": "type(library TestAddress)"
                          }
                        },
                        "id": 54213,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "memberLocation": "4753:8:64",
                        "memberName": "account3",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 55050,
                        "src": "4741:20:64",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 54209,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3351,
                        "src": "4732:2:64",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$14961",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 54211,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "4735:5:64",
                      "memberName": "prank",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 14622,
                      "src": "4732:8:64",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 54214,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4732:30:64",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 54215,
                  "nodeType": "ExpressionStatement",
                  "src": "4732:30:64"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 54219,
                        "name": "marketId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 53821,
                        "src": "4799:8:64",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "hexValue": "3130303030",
                        "id": 54220,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4809:5:64",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_10000_by_1",
                          "typeString": "int_const 10000"
                        },
                        "value": "10000"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_rational_10000_by_1",
                          "typeString": "int_const 10000"
                        }
                      ],
                      "expression": {
                        "id": 54216,
                        "name": "carbonUMArket",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 52985,
                        "src": "4772:13:64",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_CarbonUMArket_$1000",
                          "typeString": "contract CarbonUMArket"
                        }
                      },
                      "id": 54218,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "4786:12:64",
                      "memberName": "settleMarket",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 999,
                      "src": "4772:26:64",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_bytes32_$_t_uint64_$returns$__$",
                        "typeString": "function (bytes32,uint64) external"
                      }
                    },
                    "id": 54221,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4772:43:64",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 54222,
                  "nodeType": "ExpressionStatement",
                  "src": "4772:43:64"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "76616c696461746f7242616c616e63654265666f7265",
                        "id": 54226,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4837:24:64",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_d7481edc1e80b3032bd1601a2e4b30ac786bd92f78c0e9a38963e66688adeea1",
                          "typeString": "literal_string \"validatorBalanceBefore\""
                        },
                        "value": "validatorBalanceBefore"
                      },
                      {
                        "id": 54227,
                        "name": "validatorBalanceBefore",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 54124,
                        "src": "4863:22:64",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_d7481edc1e80b3032bd1601a2e4b30ac786bd92f78c0e9a38963e66688adeea1",
                          "typeString": "literal_string \"validatorBalanceBefore\""
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 54223,
                        "name": "console",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 23025,
                        "src": "4825:7:64",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_console_$23025_$",
                          "typeString": "type(library console)"
                        }
                      },
                      "id": 54225,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "4833:3:64",
                      "memberName": "log",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 15669,
                      "src": "4825:11:64",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_string_memory_ptr_$_t_uint256_$returns$__$",
                        "typeString": "function (string memory,uint256) view"
                      }
                    },
                    "id": 54228,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4825:61:64",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 54229,
                  "nodeType": "ExpressionStatement",
                  "src": "4825:61:64"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "expression": {
                              "id": 54235,
                              "name": "TestAddress",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 55057,
                              "src": "4934:11:64",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_TestAddress_$55057_$",
                                "typeString": "type(library TestAddress)"
                              }
                            },
                            "id": 54236,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberLocation": "4946:8:64",
                            "memberName": "account3",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 55050,
                            "src": "4934:20:64",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 54233,
                            "name": "defaultCurrency",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 54282,
                            "src": "4908:15:64",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TestnetERC20_$49692",
                              "typeString": "contract TestnetERC20"
                            }
                          },
                          "id": 54234,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "4924:9:64",
                          "memberName": "balanceOf",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 44592,
                          "src": "4908:25:64",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (address) view external returns (uint256)"
                          }
                        },
                        "id": 54237,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4908:47:64",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 54230,
                        "name": "console",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 23025,
                        "src": "4896:7:64",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_console_$23025_$",
                          "typeString": "type(library console)"
                        }
                      },
                      "id": 54232,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "4904:3:64",
                      "memberName": "log",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 15542,
                      "src": "4896:11:64",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$__$",
                        "typeString": "function (uint256) view"
                      }
                    },
                    "id": 54238,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4896:60:64",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 54239,
                  "nodeType": "ExpressionStatement",
                  "src": "4896:60:64"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "expression": {
                              "id": 54243,
                              "name": "TestAddress",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 55057,
                              "src": "5001:11:64",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_TestAddress_$55057_$",
                                "typeString": "type(library TestAddress)"
                              }
                            },
                            "id": 54244,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberLocation": "5013:8:64",
                            "memberName": "account3",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 55050,
                            "src": "5001:20:64",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 54241,
                            "name": "defaultCurrency",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 54282,
                            "src": "4975:15:64",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TestnetERC20_$49692",
                              "typeString": "contract TestnetERC20"
                            }
                          },
                          "id": 54242,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "4991:9:64",
                          "memberName": "balanceOf",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 44592,
                          "src": "4975:25:64",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (address) view external returns (uint256)"
                          }
                        },
                        "id": 54245,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4975:47:64",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 54246,
                        "name": "validatorBalanceBefore",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 54124,
                        "src": "5024:22:64",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 54240,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        3525,
                        3550,
                        3563,
                        3579,
                        3621,
                        3663,
                        3705,
                        3742,
                        3779,
                        3816,
                        1321,
                        1346,
                        1376,
                        1401,
                        1460,
                        1485,
                        1515,
                        1540,
                        3013,
                        3048
                      ],
                      "referencedDeclaration": 1515,
                      "src": "4966:8:64",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 54247,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4966:81:64",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 54248,
                  "nodeType": "ExpressionStatement",
                  "src": "4966:81:64"
                }
              ]
            },
            "functionSelector": "635e6115",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "test_AssertionWithCorrectDispute",
            "nameLocation": "3289:32:64",
            "parameters": {
              "id": 54097,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3321:2:64"
            },
            "returnParameters": {
              "id": 54098,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3331:0:64"
            },
            "scope": 54251,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 53818,
              "name": "CarbonUMArketTestCommon",
              "nameLocations": [
                "174:23:64"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 53391,
              "src": "174:23:64"
            },
            "id": 53819,
            "nodeType": "InheritanceSpecifier",
            "src": "174:23:64"
          }
        ],
        "canonicalName": "CarbonUMArketResolveTest",
        "contractDependencies": [
          1000,
          52395,
          55638
        ],
        "contractKind": "contract",
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          54251,
          53391,
          55017,
          55024,
          13255,
          13204,
          8740,
          8415,
          7622,
          5562,
          4824,
          3292,
          3358,
          3355
        ],
        "name": "CarbonUMArketResolveTest",
        "nameLocation": "146:24:64",
        "scope": 54252,
        "usedErrors": []
      }
    ],
    "license": "AGPL-3.0-only"
  },
  "id": 64
}