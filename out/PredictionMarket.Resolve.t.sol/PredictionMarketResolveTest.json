{
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "assertingCaller",
          "type": "address"
        }
      ],
      "name": "AssertingCallerSet",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "assertionId",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "caller",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "disputer",
          "type": "address"
        }
      ],
      "name": "AssertionDisputed",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "assertionId",
          "type": "bytes32"
        },
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "domainId",
          "type": "bytes32"
        },
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "claim",
          "type": "bytes"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "asserter",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "callbackRecipient",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "escalationManager",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "caller",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint64",
          "name": "expirationTime",
          "type": "uint64"
        },
        {
          "indexed": false,
          "internalType": "contract IERC20",
          "name": "currency",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "bond",
          "type": "uint256"
        },
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "identifier",
          "type": "bytes32"
        }
      ],
      "name": "AssertionMade",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "assertionId",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "bondRecipient",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "bool",
          "name": "disputed",
          "type": "bool"
        },
        {
          "indexed": false,
          "internalType": "bool",
          "name": "settlementResolution",
          "type": "bool"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "settleCaller",
          "type": "address"
        }
      ],
      "name": "AssertionSettled",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "requester",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "identifier",
          "type": "bytes32"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "time",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "ancillaryData",
          "type": "bytes"
        }
      ],
      "name": "PriceRequestAdded",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "name": "log",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "log_address",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256[]",
          "name": "val",
          "type": "uint256[]"
        }
      ],
      "name": "log_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "int256[]",
          "name": "val",
          "type": "int256[]"
        }
      ],
      "name": "log_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address[]",
          "name": "val",
          "type": "address[]"
        }
      ],
      "name": "log_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "name": "log_bytes",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "name": "log_bytes32",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "int256",
          "name": "",
          "type": "int256"
        }
      ],
      "name": "log_int",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "val",
          "type": "address"
        }
      ],
      "name": "log_named_address",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "uint256[]",
          "name": "val",
          "type": "uint256[]"
        }
      ],
      "name": "log_named_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "int256[]",
          "name": "val",
          "type": "int256[]"
        }
      ],
      "name": "log_named_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "address[]",
          "name": "val",
          "type": "address[]"
        }
      ],
      "name": "log_named_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "val",
          "type": "bytes"
        }
      ],
      "name": "log_named_bytes",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "val",
          "type": "bytes32"
        }
      ],
      "name": "log_named_bytes32",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "int256",
          "name": "val",
          "type": "int256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "decimals",
          "type": "uint256"
        }
      ],
      "name": "log_named_decimal_int",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "val",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "decimals",
          "type": "uint256"
        }
      ],
      "name": "log_named_decimal_uint",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "int256",
          "name": "val",
          "type": "int256"
        }
      ],
      "name": "log_named_int",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "val",
          "type": "string"
        }
      ],
      "name": "log_named_string",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "val",
          "type": "uint256"
        }
      ],
      "name": "log_named_uint",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "name": "log_string",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "log_uint",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "name": "logs",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "IS_TEST",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "asserter",
          "type": "address"
        },
        {
          "internalType": "bytes",
          "name": "claim",
          "type": "bytes"
        }
      ],
      "name": "_allocateBondAndAssertTruth",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "assertionId",
          "type": "bytes32"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "_commonPredictionMarketSetUp",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "_commonSetup",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "mockAssertingCaller",
          "type": "address"
        },
        {
          "internalType": "bytes32",
          "name": "assertionId",
          "type": "bytes32"
        }
      ],
      "name": "_mockGetAssertionAssertingCaller",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "excludeArtifacts",
      "outputs": [
        {
          "internalType": "string[]",
          "name": "excludedArtifacts_",
          "type": "string[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "excludeContracts",
      "outputs": [
        {
          "internalType": "address[]",
          "name": "excludedContracts_",
          "type": "address[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "excludeSenders",
      "outputs": [
        {
          "internalType": "address[]",
          "name": "excludedSenders_",
          "type": "address[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "failed",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "predictionMarket",
      "outputs": [
        {
          "internalType": "contract PredictionMarket",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "setUp",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "targetArtifactSelectors",
      "outputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "addr",
              "type": "address"
            },
            {
              "internalType": "bytes4[]",
              "name": "selectors",
              "type": "bytes4[]"
            }
          ],
          "internalType": "struct StdInvariant.FuzzSelector[]",
          "name": "targetedArtifactSelectors_",
          "type": "tuple[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "targetArtifacts",
      "outputs": [
        {
          "internalType": "string[]",
          "name": "targetedArtifacts_",
          "type": "string[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "targetContracts",
      "outputs": [
        {
          "internalType": "address[]",
          "name": "targetedContracts_",
          "type": "address[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "targetInterfaces",
      "outputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "addr",
              "type": "address"
            },
            {
              "internalType": "string[]",
              "name": "artifacts",
              "type": "string[]"
            }
          ],
          "internalType": "struct StdInvariant.FuzzInterface[]",
          "name": "targetedInterfaces_",
          "type": "tuple[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "targetSelectors",
      "outputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "addr",
              "type": "address"
            },
            {
              "internalType": "bytes4[]",
              "name": "selectors",
              "type": "bytes4[]"
            }
          ],
          "internalType": "struct StdInvariant.FuzzSelector[]",
          "name": "targetedSelectors_",
          "type": "tuple[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "targetSenders",
      "outputs": [
        {
          "internalType": "address[]",
          "name": "targetedSenders_",
          "type": "address[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "test_AssertionWithCorrectDispute",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "test_ResolveMarketAfterCorrectDispute",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "test_ResolveMarketNoDispute",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "test_ResolveMarketWithWrongDispute",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "bytecode": {
    "object": "0x60078054600160ff199182168117909255600b8054909116909117905560c0604052600360809081526214995960ea1b60a052602b9062000041908262000178565b50604080518082019091526004815263426c756560e01b6020820152602c906200006c908262000178565b5060408051808201909152601081526f5768696368207465616d2077696e733f60801b6020820152602d90620000a3908262000178565b5068056bc75e2d63100000602e5569021e19e0c9bab2400000603055348015620000cc57600080fd5b5062000244565b634e487b7160e01b600052604160045260246000fd5b600181811c90821680620000fe57607f821691505b6020821081036200011f57634e487b7160e01b600052602260045260246000fd5b50919050565b601f8211156200017357600081815260208120601f850160051c810160208610156200014e5750805b601f850160051c820191505b818110156200016f578281556001016200015a565b5050505b505050565b81516001600160401b03811115620001945762000194620000d3565b620001ac81620001a58454620000e9565b8462000125565b602080601f831160018114620001e45760008415620001cb5750858301515b600019600386901b1c1916600185901b1785556200016f565b600085815260208120601f198616915b828110156200021557888601518255948401946001909101908401620001f4565b5085821015620002345787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b6201546280620002556000396000f3fe60806040523480156200001157600080fd5b5060043610620001515760003560e01c8063916a17c611620000c7578063dbd07b771162000086578063dbd07b771462000251578063def114b6146200025b578063e20c9f711462000288578063eeec83971462000292578063f4096671146200029c578063fa7626d414620002c257600080fd5b8063916a17c61462000201578063a3fe4243146200020b578063ab30d35a1462000215578063b5508aa9146200022c578063ba414fa6146200023657600080fd5b80633f7286f411620001145780633f7286f414620001b1578063635e611514620001bb57806366d9a9a014620001c55780636906f5f514620001de57806385226c8114620001e857600080fd5b80630a9254e414620001565780631ed7831c1462000162578063217356c614620001845780632ade3880146200018e5780633e5e3c2314620001a7575b600080fd5b62000160620002d0565b005b6200016c620002e9565b6040516200017b919062002d52565b60405180910390f35b620001606200034d565b62000198620007cf565b6040516200017b919062002df5565b6200016c6200091d565b6200016c6200097f565b62000160620009e1565b620001cf62000d7a565b6040516200017b919062002ebb565b6200016062000e64565b620001f2620011c5565b6040516200017b919062002f72565b620001cf6200129f565b6200016062001389565b620001606200022636600462002fe1565b620014bd565b620001f262001617565b62000240620016f1565b60405190151581526020016200017b565b620001606200181e565b602a546200026f906001600160a01b031681565b6040516001600160a01b0390911681526020016200017b565b6200016c62001b0d565b6200016062001b6f565b620002b3620002ad366004620030d5565b62001dc8565b6040519081526020016200017b565b600754620002409060ff1681565b620002da62001389565b620002e4620020ff565b603155565b606060148054806020026020016040519081016040528092919081815260200182805480156200034357602002820191906000526020600020905b81546001600160a01b0316815260019091019060200180831162000324575b5050505050905090565b6000620003ef603154602b8054620003659062003171565b80601f0160208091040260200160405190810160405280929190818152602001828054620003939062003171565b8015620003e45780601f10620003b857610100808354040283529160200191620003e4565b820191906000526020600020905b815481529060010190602001808311620003c657829003601f168201915b5050505050620021f7565b6020546040516370a0823160e01b8152600260048201529192506000916001600160a01b03909116906370a0823190602401602060405180830381865afa1580156200043f573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620004659190620031ad565b602154602854604080516329cb924d60e01b815290519394506001600160a01b03909216926322f8e566926001600160401b039092169184916329cb924d916004808201926020929091908290030181865afa158015620004ca573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620004f09190620031ad565b620004fc9190620031c7565b6040518263ffffffff1660e01b81526004016200051b91815260200190565b600060405180830381600087803b1580156200053657600080fd5b505af11580156200054b573d6000803e3d6000fd5b5050602a546040805160248101879052600160448083019190915282518083039091018152606490910182526020810180516001600160e01b03166378d8ab5960e11b1790529051632f5abd0d60e21b81526000805160206201540d833981519152945063bd6af4349350620005cf926001600160a01b03169190600401620031e9565b600060405180830381600087803b158015620005ea57600080fd5b505af1158015620005ff573d6000803e3d6000fd5b5050601f54604051638ea2f2ab60e01b8152600481018690526200068193506001600160a01b039091169150638ea2f2ab906024015b6020604051808303816000875af115801562000655573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200067b919062003228565b620022e6565b6020546040516370a0823160e01b81526002600482015262000718916001600160a01b0316906370a0823190602401602060405180830381865afa158015620006ce573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620006f49190620031ad565b602e54602f54620007069085620031c7565b620007129190620031c7565b6200235e565b602a5460315460405163c3c95c7b60e01b815260048101919091526000916001600160a01b03169063c3c95c7b90602401600060405180830381865afa15801562000767573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526200079191908101906200329f565b9050620007a28160000151620022e6565b620007ca8160200151602b604051620007bc9190620033bd565b604051809103902062002459565b505050565b6060601b805480602002602001604051908101604052809291908181526020016000905b828210156200091457600084815260208082206040805180820182526002870290920180546001600160a01b03168352600181018054835181870281018701909452808452939591948681019491929084015b82821015620008fc578382906000526020600020018054620008689062003171565b80601f0160208091040260200160405190810160405280929190818152602001828054620008969062003171565b8015620008e75780601f10620008bb57610100808354040283529160200191620008e7565b820191906000526020600020905b815481529060010190602001808311620008c957829003601f168201915b50505050508152602001906001019062000846565b505050508152505081526020019060010190620007f3565b50505050905090565b6060601680548060200260200160405190810160405280929190818152602001828054801562000343576020028201919060005260206000209081546001600160a01b0316815260019091019060200180831162000324575050505050905090565b6060601580548060200260200160405190810160405280929190818152602001828054801562000343576020028201919060005260206000209081546001600160a01b0316815260019091019060200180831162000324575050505050905090565b6000620009f9603154602b8054620003659062003171565b602054602a546040516370a0823160e01b81526001600160a01b0391821660048201529293506000929116906370a0823190602401602060405180830381865afa15801562000a4c573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062000a729190620031ad565b9050600062000a8483602f5462002541565b60235490915062000aa1906001600160a01b031682600062002919565b602a546040805160248101869052600060448083019190915282518083039091018152606490910182526020810180516001600160e01b03166378d8ab5960e11b1790529051632f5abd0d60e21b81526000805160206201540d8339815191529263bd6af4349262000b22926001600160a01b0390921691600401620031e9565b600060405180830381600087803b15801562000b3d57600080fd5b505af115801562000b52573d6000803e3d6000fd5b5050601f54604051638ea2f2ab60e01b81526004810187905262000bd493506001600160a01b039091169150638ea2f2ab906024015b6020604051808303816000875af115801562000ba8573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062000bce919062003228565b620029b8565b602054602a546040516370a0823160e01b81526001600160a01b03918216600482015262000c559291909116906370a0823190602401602060405180830381865afa15801562000c28573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062000c4e9190620031ad565b836200235e565b602054602a546040516370a0823160e01b81526001600160a01b03918216600482015262000cd89291909116906370a0823190602401602060405180830381865afa15801562000ca9573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062000ccf9190620031ad565b602e546200235e565b602a5460315460405163c3c95c7b60e01b815260048101919091526000916001600160a01b03169063c3c95c7b90602401600060405180830381865afa15801562000d27573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405262000d5191908101906200329f565b905062000d628160000151620029b8565b602081015162000d7490600062002459565b50505050565b60606019805480602002602001604051908101604052809291908181526020016000905b82821015620009145760008481526020908190206040805180820182526002860290920180546001600160a01b0316835260018101805483518187028101870190945280845293949193858301939283018282801562000e4b57602002820191906000526020600020906000905b82829054906101000a900460e01b6001600160e01b0319168152602001906004019060208260030104928301926001038202915080841162000e0c5790505b5050505050815250508152602001906001019062000d9e565b600060405162000e749062002d28565b604051809103906000f08015801562000e91573d6000803e3d6000fd5b506001600160a01b0316630a9254e46040518163ffffffff1660e01b8152600401610100604051808303816000875af115801562000ed3573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062000ef991906200343b565b60e0810151601f80546001600160a01b03199081166001600160a01b0393841690811790925560c084015160208054831691851691909117815560a0850151602380548416918616919091179055845160218054841691861691909117905584015160228054831691851691909117905560408085015160248054909316941693909317905590519192509062000f909062002d36565b6001600160a01b039091168152602001604051809103906000f08015801562000fbd573d6000803e3d6000fd5b50602580546001600160a01b0319166001600160a01b03928316179055601f5460408051630473e1f360e11b8152905191909216916308e7c3e69160048083019260209291908290030181865afa1580156200101d573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620010439190620031ad565b602655601f54602054604051634360af3d60e01b81526001600160a01b039182166004820152911690634360af3d90602401602060405180830381865afa15801562001093573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620010b99190620031ad565b602755601f546040805163fe4e198360e01b815290516001600160a01b039092169163fe4e1983916004808201926020929091908290030181865afa15801562001107573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200112d919062003530565b6028805467ffffffffffffffff19166001600160401b0392909216919091179055601f546040805163d509b01760e01b815290516001600160a01b039092169163d509b017916004808201926020929091908290030181865afa15801562001199573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620011bf9190620031ad565b60295550565b60606018805480602002602001604051908101604052809291908181526020016000905b82821015620009145783829060005260206000200180546200120b9062003171565b80601f0160208091040260200160405190810160405280929190818152602001828054620012399062003171565b80156200128a5780601f106200125e576101008083540402835291602001916200128a565b820191906000526020600020905b8154815290600101906020018083116200126c57829003601f168201915b505050505081526020019060010190620011e9565b6060601a805480602002602001604051908101604052809291908181526020016000905b82821015620009145760008481526020908190206040805180820182526002860290920180546001600160a01b031683526001810180548351818702810187019094528084529394919385830193928301828280156200137057602002820191906000526020600020906000905b82829054906101000a900460e01b6001600160e01b03191681526020019060040190602082600301049283019260010382029150808411620013315790505b50505050508152505081526020019060010190620012c3565b6200139362000e64565b602254602054601f546040516001600160a01b03938416939283169290911690620013be9062002d44565b6001600160a01b03938416815291831660208301529091166040820152606001604051809103906000f080158015620013fb573d6000803e3d6000fd5b50602a80546001600160a01b0319166001600160a01b03928316179055601f54602054604051634360af3d60e01b815290831660048201526000929190911690634360af3d90602401602060405180830381865afa15801562001462573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620014889190620031ad565b9050683635c9adc5dea000008110620014a25780620014ad565b683635c9adc5dea000005b602f55620014ba620029c4565b50565b6040805161022081018252600061018082018181526101a083018290526101c08301829052610200830182905282526020808301829052828401829052606083018290526080830182905260a0830182905260c0830182905260e083018290526101008301829052610120830182905261014083018290526101608301919091526001600160a01b0385166101e083015282516024808201869052845180830390910181526044909101845280820180516001600160e01b031663220c0a2160e21b179052925191926000805160206201540d8339815191529263b96213e49260fa9291620015af918791016200354e565b6040516020818303038152906040526040518463ffffffff1660e01b8152600401620015de9392919062003651565b600060405180830381600087803b158015620015f957600080fd5b505af11580156200160e573d6000803e3d6000fd5b50505050505050565b60606017805480602002602001604051908101604052809291908181526020016000905b82821015620009145783829060005260206000200180546200165d9062003171565b80601f01602080910402602001604051908101604052809291908181526020018280546200168b9062003171565b8015620016dc5780601f10620016b057610100808354040283529160200191620016dc565b820191906000526020600020905b815481529060010190602001808311620016be57829003601f168201915b5050505050815260200190600101906200163b565b600754600090610100900460ff1615620017145750600754610100900460ff1690565b60006000805160206201540d8339815191523b156200181957604080516000805160206201540d833981519152602082018190526519985a5b195960d21b828401528251808303840181526060830190935260009290916200179b917f667f9d70ca411d70ead50d8d5c22070dafc36ad75f3dcf5e7237b22ade9aecc49160800162003695565b60408051601f1981840301815290829052620017b791620036c8565b6000604051808303816000865af19150503d8060008114620017f6576040519150601f19603f3d011682016040523d82523d6000602084013e620017fb565b606091505b509150508080602001905181019062001815919062003228565b9150505b919050565b600062001836603154602b8054620003659062003171565b6020546040516370a0823160e01b8152600260048201529192506000916001600160a01b03909116906370a0823190602401602060405180830381865afa15801562001886573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620018ac9190620031ad565b90506000620018be83602f5462002541565b602354909150620018db906001600160a01b031682600162002919565b602a546040805160248101869052600160448083019190915282518083039091018152606490910182526020810180516001600160e01b03166378d8ab5960e11b1790529051632f5abd0d60e21b81526000805160206201540d8339815191529263bd6af434926200195c926001600160a01b0390921691600401620031e9565b600060405180830381600087803b1580156200197757600080fd5b505af11580156200198c573d6000803e3d6000fd5b5050601f54604051638ea2f2ab60e01b815260048101879052620019c793506001600160a01b039091169150638ea2f2ab9060240162000635565b6020546040516370a0823160e01b81526002600482015262001a69916001600160a01b0316906370a0823190602401602060405180830381865afa15801562001a14573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062001a3a9190620031ad565b6002602f5462001a4b9190620036e6565b602e54602f5462001a5d9087620031c7565b620007069190620031c7565b602a5460315460405163c3c95c7b60e01b815260048101919091526000916001600160a01b03169063c3c95c7b90602401600060405180830381865afa15801562001ab8573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405262001ae291908101906200329f565b905062001af38160000151620022e6565b62000d748160200151602b604051620007bc9190620033bd565b6060601380548060200260200160405190810160405280929190818152602001828054801562000343576020028201919060005260206000209081546001600160a01b0316815260019091019060200180831162000324575050505050905090565b600062001b87603154602b8054620003659062003171565b9050600062001b9982602f5462002541565b60235490915062001bb6906001600160a01b031682600062002919565b601f54604051638ea2f2ab60e01b81526004810184905262001beb916001600160a01b031690638ea2f2ab9060240162000b88565b600062001c03603154602c8054620003659062003171565b602154602854604080516329cb924d60e01b815290519394506001600160a01b03909216926322f8e566926001600160401b039092169184916329cb924d916004808201926020929091908290030181865afa15801562001c68573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062001c8e9190620031ad565b62001c9a9190620031c7565b6040518263ffffffff1660e01b815260040162001cb991815260200190565b600060405180830381600087803b15801562001cd457600080fd5b505af115801562001ce9573d6000803e3d6000fd5b5050601f54604051638ea2f2ab60e01b81526004810185905262001d2493506001600160a01b039091169150638ea2f2ab9060240162000635565b602a5460315460405163c3c95c7b60e01b815260048101919091526000916001600160a01b03169063c3c95c7b90602401600060405180830381865afa15801562001d73573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405262001d9d91908101906200329f565b905062001dae8160000151620022e6565b62000d748160200151602c604051620007bc9190620033bd565b6040516303223eab60e11b81526001600160a01b03831660048201526000906000805160206201540d833981519152906306447d5690602401600060405180830381600087803b15801562001e1c57600080fd5b505af115801562001e31573d6000803e3d6000fd5b5050602054601f54604051634360af3d60e01b81526001600160a01b039283166004820181905294506308bca5669350879290911690634360af3d90602401602060405180830381865afa15801562001e8e573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062001eb49190620031ad565b6040516001600160e01b031960e085901b1681526001600160a01b0390921660048301526024820152604401600060405180830381600087803b15801562001efb57600080fd5b505af115801562001f10573d6000803e3d6000fd5b5050602054601f54604051634360af3d60e01b81526001600160a01b0392831660048201819052945063095ea7b393509116908190634360af3d90602401602060405180830381865afa15801562001f6c573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062001f929190620031ad565b6040516001600160e01b031960e085901b1681526001600160a01b03909216600483015260248201526044016020604051808303816000875af115801562001fde573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062002004919062003228565b50601f54604051630dac4ebd60e21b81526001600160a01b03909116906336b13af49062002039908590879060040162003709565b6020604051808303816000875af115801562002059573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200207f9190620031ad565b90507f885cb69240a935d632d79c317109709ecfa91a80626ff3989d68f67f5b1dd12d60001c6001600160a01b03166390c5013b6040518163ffffffff1660e01b8152600401600060405180830381600087803b158015620020e057600080fd5b505af1158015620020f5573d6000803e3d6000fd5b5050505092915050565b60006200210b620029c4565b60405163ca669fa760e01b8152600160048201526000805160206201540d8339815191529063ca669fa790602401600060405180830381600087803b1580156200215457600080fd5b505af115801562002169573d6000803e3d6000fd5b5050602a54602e54602f54604051635cb1cc0b60e01b81526001600160a01b039093169450635cb1cc0b9350620021ac92602b92602c92602d92600401620037ba565b6020604051808303816000875af1158015620021cc573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620021f29190620031ad565b905090565b60006200220362002b12565b60405163ca669fa760e01b8152600260048201526000805160206201540d8339815191529063ca669fa790602401600060405180830381600087803b1580156200224c57600080fd5b505af115801562002261573d6000803e3d6000fd5b5050602a54604051630aca853560e31b81526001600160a01b03909116925063565429a891506200229990869086906004016200380e565b6020604051808303816000875af1158015620022b9573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620022df9190620031ad565b9392505050565b80620014ba577f41304facd9323d75b11bcdd609cb38effffdb05710f7caf0e9b16c6d9d709f506040516200234c9060208082526017908201527f4572726f723a20417373657274696f6e204661696c6564000000000000000000604082015260600190565b60405180910390a1620014ba62002c1f565b80821462002455577f41304facd9323d75b11bcdd609cb38effffdb05710f7caf0e9b16c6d9d709f50604051620023d19060208082526022908201527f4572726f723a2061203d3d2062206e6f7420736174697366696564205b75696e604082015261745d60f01b606082015260800190565b60405180910390a17fb2de2fbe801a0df6c0cbddfd448ba3c41d48a040ca35c56c8196ef0fcae721a8826040516200240a919062003829565b60405180910390a17fb2de2fbe801a0df6c0cbddfd448ba3c41d48a040ca35c56c8196ef0fcae721a88160405162002443919062003862565b60405180910390a16200245562002c1f565b5050565b80821462002455577f41304facd9323d75b11bcdd609cb38effffdb05710f7caf0e9b16c6d9d709f50604051620024cf9060208082526025908201527f4572726f723a2061203d3d2062206e6f7420736174697366696564205b627974604082015264657333325d60d81b606082015260800190565b60405180910390a17fafb795c9c61e4fe7468c386f925d7a5429ecad9c0495ddb8d38d690614d32f998260405162002508919062003829565b60405180910390a17fafb795c9c61e4fe7468c386f925d7a5429ecad9c0495ddb8d38d690614d32f998160405162002443919062003862565b60408051606080820183526000808352602083015291810191909152601f5460405163220c0a2160e21b8152600481018590526000916001600160a01b03169063883028849060240161020060405180830381865afa158015620025a9573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620025cf919062003930565b905060006040518060600160405280601f60009054906101000a90046001600160a01b03166001600160a01b031663d509b0176040518163ffffffff1660e01b8152600401602060405180830381865afa15801562002632573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620026589190620031ad565b81526040848101516001600160401b03166020830152601f54815163afedba4f60e01b8152600481018a905291909201916001600160a01b03169063afedba4f90602401600060405180830381865afa158015620026ba573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052620026e4919081019062003a25565b90526040516303223eab60e11b8152600360048201529091506000805160206201540d833981519152906306447d5690602401600060405180830381600087803b1580156200273257600080fd5b505af115801562002747573d6000803e3d6000fd5b505060205460405163045e52b360e11b815260036004820152602481018890526001600160a01b0390911692506308bca5669150604401600060405180830381600087803b1580156200279957600080fd5b505af1158015620027ae573d6000803e3d6000fd5b5050602054601f5460405163095ea7b360e01b81526001600160a01b039182166004820152602481018990529116925063095ea7b391506044016020604051808303816000875af115801562002808573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200282e919062003228565b50601f5460405163a6a22b4360e01b815260048101879052600360248201526001600160a01b039091169063a6a22b4390604401600060405180830381600087803b1580156200287d57600080fd5b505af115801562002892573d6000803e3d6000fd5b505050507f885cb69240a935d632d79c317109709ecfa91a80626ff3989d68f67f5b1dd12d60001c6001600160a01b03166390c5013b6040518163ffffffff1660e01b8152600401600060405180830381600087803b158015620028f557600080fd5b505af11580156200290a573d6000803e3d6000fd5b50929450505050505b92915050565b8151602083015160408085015190516000805160206201540d8339815191529363b96213e49388936338ce36ab60e11b936200295b9392919060240162003a5d565b60408051601f198184030181529190526020810180516001600160e01b03166001600160e01b031990931692909217909152846200299b576000620029a5565b670de0b6b3a76400005b604051602001620015af91815260200190565b620014ba8115620022e6565b602054602e5460405163045e52b360e11b81526001600482015260248101919091526001600160a01b03909116906308bca56690604401600060405180830381600087803b15801562002a1657600080fd5b505af115801562002a2b573d6000803e3d6000fd5b505060405163ca669fa760e01b8152600160048201526000805160206201540d833981519152925063ca669fa79150602401600060405180830381600087803b15801562002a7857600080fd5b505af115801562002a8d573d6000803e3d6000fd5b5050602054602a54602e5460405163095ea7b360e01b81526001600160a01b03928316600482015260248101919091529116925063095ea7b391506044015b6020604051808303816000875af115801562002aec573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620014ba919062003228565b602054602f5460405163045e52b360e11b81526002600482015260248101919091526001600160a01b03909116906308bca56690604401600060405180830381600087803b15801562002b6457600080fd5b505af115801562002b79573d6000803e3d6000fd5b505060405163ca669fa760e01b8152600260048201526000805160206201540d833981519152925063ca669fa79150602401600060405180830381600087803b15801562002bc657600080fd5b505af115801562002bdb573d6000803e3d6000fd5b5050602054602a54602f5460405163095ea7b360e01b81526001600160a01b03928316600482015260248101919091529116925063095ea7b3915060440162002acc565b6000805160206201540d8339815191523b1562002d1757604080516000805160206201540d833981519152602082018190526519985a5b195960d21b9282019290925260016060820152600091907f70ca10bbd0dbfd9020a9f4b13402c16cb120705e0d1c0aeab10fa353ae586fc49060800160408051601f198184030181529082905262002cb2929160200162003695565b60408051601f198184030181529082905262002cce91620036c8565b6000604051808303816000865af19150503d806000811462002d0d576040519150601f19603f3d011682016040523d82523d6000602084013e62002d12565b606091505b505050505b6007805461ff001916610100179055565b61c6408062003a8883390190565b61087880620100c883390190565b614acd806201094083390190565b6020808252825182820181905260009190848201906040850190845b8181101562002d955783516001600160a01b03168352928401929184019160010162002d6e565b50909695505050505050565b60005b8381101562002dbe57818101518382015260200162002da4565b50506000910152565b6000815180845262002de181602086016020860162002da1565b601f01601f19169290920160200192915050565b602080825282518282018190526000919060409081850190600581811b8701840188860187805b8581101562002eab57603f198b8503018752825180516001600160a01b031685528901518985018990528051898601819052908a0190606081881b870181019190870190855b8181101562002e9457605f1989850301835262002e8184865162002dc7565b948e01949350918d019160010162002e62565b505050978a01979450509188019160010162002e1c565b50919a9950505050505050505050565b60006020808301818452808551808352604092508286019150828160051b8701018488016000805b8481101562002f6357898403603f19018652825180516001600160a01b03168552880151888501889052805188860181905290890190839060608701905b8083101562002f4d5783516001600160e01b0319168252928b019260019290920191908b019062002f21565b50978a0197955050509187019160010162002ee3565b50919998505050505050505050565b6000602080830181845280855180835260408601915060408160051b870101925083870160005b828110156200290a57603f1988860301845262002fb885835162002dc7565b9450928501929085019060010162002f99565b6001600160a01b0381168114620014ba57600080fd5b6000806040838503121562002ff557600080fd5b8235620030028162002fcb565b946020939093013593505050565b634e487b7160e01b600052604160045260246000fd5b60405161012081016001600160401b03811182821017156200304c576200304c62003010565b60405290565b60405161018081016001600160401b03811182821017156200304c576200304c62003010565b604051601f8201601f191681016001600160401b0381118282101715620030a357620030a362003010565b604052919050565b60006001600160401b03821115620030c757620030c762003010565b50601f01601f191660200190565b60008060408385031215620030e957600080fd5b8235620030f68162002fcb565b915060208301356001600160401b038111156200311257600080fd5b8301601f810185136200312457600080fd5b80356200313b6200313582620030ab565b62003078565b8181528660208385010111156200315157600080fd5b816020840160208301376000602083830101528093505050509250929050565b600181811c908216806200318657607f821691505b602082108103620031a757634e487b7160e01b600052602260045260246000fd5b50919050565b600060208284031215620031c057600080fd5b5051919050565b808201808211156200291357634e487b7160e01b600052601160045260246000fd5b6001600160a01b03831681526040602082018190526000906200320f9083018462002dc7565b949350505050565b805180151581146200181957600080fd5b6000602082840312156200323b57600080fd5b620022df8262003217565b8051620018198162002fcb565b600082601f8301126200326557600080fd5b8151620032766200313582620030ab565b8181528460208386010111156200328c57600080fd5b6200320f82602083016020870162002da1565b600060208284031215620032b257600080fd5b81516001600160401b0380821115620032ca57600080fd5b908301906101208286031215620032e057600080fd5b620032ea62003026565b620032f58362003217565b8152602083015160208201526200330f6040840162003246565b6040820152620033226060840162003246565b60608201526080830151608082015260a083015160a082015260c0830151828111156200334e57600080fd5b6200335c8782860162003253565b60c08301525060e0830151828111156200337557600080fd5b620033838782860162003253565b60e08301525061010080840151838111156200339e57600080fd5b620033ac8882870162003253565b918301919091525095945050505050565b6000808354620033cd8162003171565b60018281168015620033e85760018114620033fe576200342f565b60ff19841687528215158302870194506200342f565b8760005260208060002060005b85811015620034265781548a8201529084019082016200340b565b50505082870194505b50929695505050505050565b60006101008083850312156200345057600080fd5b604051908101906001600160401b038211818310171562003475576200347562003010565b8160405283519150620034888262002fcb565b818152620034996020850162003246565b6020820152620034ac6040850162003246565b6040820152620034bf6060850162003246565b6060820152620034d26080850162003246565b6080820152620034e560a0850162003246565b60a0820152620034f860c0850162003246565b60c08201526200350b60e0850162003246565b60e0820152949350505050565b80516001600160401b03811681146200181957600080fd5b6000602082840312156200354357600080fd5b620022df8262003518565b81518051151582526020808201511515818401526040808301511515818501526060808401516001600160a01b039081168287015260809485015181168587015292860151831660a0860152908501516001600160401b031660c0850152840151151560e084015290830151908116610100808401919091526102008301919060a08501519150610120620035ed818601846001600160401b03169052565b60c08601519250610140620036058187018515159052565b60e08701516101608781019190915292870151610180870152908601516101a08601528501516001600160a01b039081166101c08601529401519093166101e090920191909152919050565b6001600160a01b0384168152606060208201819052600090620036779083018562002dc7565b82810360408401526200368b818562002dc7565b9695505050505050565b6001600160e01b0319831681528151600090620036ba81600485016020870162002da1565b919091016004019392505050565b60008251620036dc81846020870162002da1565b9190910192915050565b6000826200370457634e487b7160e01b600052601260045260246000fd5b500490565b6040815260006200371e604083018562002dc7565b905060018060a01b03831660208301529392505050565b60008154620037448162003171565b8085526020600183811680156200376457600181146200377f57620037af565b60ff1985168884015283151560051b880183019550620037af565b866000528260002060005b85811015620037a75781548a82018601529083019084016200378a565b890184019650505b505050505092915050565b60a081526000620037cf60a083018862003735565b8281036020840152620037e3818862003735565b90508281036040840152620037f9818762003735565b60608401959095525050608001529392505050565b8281526040602082015260006200320f604083018462002dc7565b6040815260006200385460408301600a8152690808080808081319599d60b21b602082015260400190565b905082602083015292915050565b6040815260006200385460408301600a8152690808080808149a59da1d60b21b602082015260400190565b600060a08284031215620038a057600080fd5b60405160a081018181106001600160401b0382111715620038c557620038c562003010565b604052905080620038d68362003217565b8152620038e66020840162003217565b6020820152620038f96040840162003217565b604082015260608301516200390e8162002fcb565b60608201526080830151620039238162002fcb565b6080919091015292915050565b600061020082840312156200394457600080fd5b6200394e62003052565b6200395a84846200388d565b81526200396a60a0840162003246565b60208201526200397d60c0840162003518565b60408201526200399060e0840162003217565b6060820152610100620039a581850162003246565b6080830152610120620039ba81860162003518565b60a0840152610140620039cf81870162003217565b60c08501526101608087015160e0860152610180870151848601526101a08701518386015262003a036101c0880162003246565b8286015262003a166101e0880162003246565b90850152509195945050505050565b60006020828403121562003a3857600080fd5b81516001600160401b0381111562003a4f57600080fd5b6200320f8482850162003253565b83815282602082015260606040820152600062003a7e606083018462002dc7565b9594505050505056fe608060405260078054600160ff199182168117909255600b8054909116909117905534801561002d57600080fd5b5061c6038061003d6000396000f3fe60806040523480156200001157600080fd5b5060043610620000c35760003560e01c806385226c81116200007a57806385226c8114620001af578063916a17c614620001c8578063b5508aa914620001d2578063ba414fa614620001dc578063e20c9f7114620001f7578063fa7626d4146200020157600080fd5b80630a9254e414620000c85780631ed7831c14620001505780632ade388014620001695780633e5e3c2314620001825780633f7286f4146200018c57806366d9a9a01462000196575b600080fd5b620000d26200020f565b60405162000147919081516001600160a01b03908116825260208084015182169083015260408084015182169083015260608084015182169083015260808084015182169083015260a08084015182169083015260c08084015182169083015260e09283015116918101919091526101000190565b60405180910390f35b6200015a620006af565b60405162000147919062000e70565b6200017362000713565b60405162000147919062000ee5565b6200015a62000861565b6200015a620008c3565b620001a062000925565b60405162000147919062000fc6565b620001b962000a0f565b6040516200014791906200107d565b620001a062000ae9565b620001b962000bd3565b620001e662000cad565b604051901515815260200162000147565b6200015a62000de4565b600754620001e69060ff1681565b6040805161010081018252600080825260208201819052918101829052606081018290526080810182905260a0810182905260c0810182905260e08101919091526000604051620002609062000e46565b604051809103906000f0801580156200027d573d6000803e3d6000fd5b506001600160a01b0316630a9254e46040518163ffffffff1660e01b815260040160c0604051808303816000875af1158015620002be573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620002e4919062001106565b905060006012604051620002f89062000e54565b6060808252601290820152712232b330bab63a102137b732102a37b5b2b760711b608082015260a0602082018190526003908201526211109560ea1b60c082015260ff909116604082015260e001604051809103906000f08015801562000363573d6000803e3d6000fd5b506040516303223eab60e11b815260016004820152909150737109709ecfa91a80626ff3989d68f67f5b1dd12d906306447d5690602401600060405180830381600087803b158015620003b557600080fd5b505af1158015620003ca573d6000803e3d6000fd5b505050606083015160405163e43252d760e01b81526001600160a01b038481166004830152909116915063e43252d790602401600060405180830381600087803b1580156200041857600080fd5b505af11580156200042d573d6000803e3d6000fd5b50505060808301516040516310a7e20160e01b81526b082a6a68aa4a8bea8a4aaa8960a31b60048201526001600160a01b0390911691506310a7e20190602401600060405180830381600087803b1580156200048857600080fd5b505af11580156200049d573d6000803e3d6000fd5b5050505060408281015181516020810183526802b5e3af16b18800008082529251637e7e591d60e01b81526001600160a01b03858116600483015291516024820152611c20929190911690637e7e591d90604401600060405180830381600087803b1580156200050c57600080fd5b505af115801562000521573d6000803e3d6000fd5b505050506000846020015184838760000151604051620005419062000e62565b6001600160a01b039485168152928416602084015267ffffffffffffffff9091166040830152919091166060820152608001604051809103906000f08015801562000590573d6000803e3d6000fd5b5090507f885cb69240a935d632d79c317109709ecfa91a80626ff3989d68f67f5b1dd12d60001c6001600160a01b03166390c5013b6040518163ffffffff1660e01b8152600401600060405180830381600087803b158015620005f257600080fd5b505af115801562000607573d6000803e3d6000fd5b5050505060405180610100016040528086600001516001600160a01b0316815260200186602001516001600160a01b0316815260200186604001516001600160a01b0316815260200186606001516001600160a01b0316815260200186608001516001600160a01b031681526020018660a001516001600160a01b03168152602001856001600160a01b03168152602001826001600160a01b03168152509550505050505090565b606060148054806020026020016040519081016040528092919081815260200182805480156200070957602002820191906000526020600020905b81546001600160a01b03168152600190910190602001808311620006ea575b5050505050905090565b6060601b805480602002602001604051908101604052809291908181526020016000905b828210156200085857600084815260208082206040805180820182526002870290920180546001600160a01b03168352600181018054835181870281018701909452808452939591948681019491929084015b8282101562000840578382906000526020600020018054620007ac90620011c1565b80601f0160208091040260200160405190810160405280929190818152602001828054620007da90620011c1565b80156200082b5780601f10620007ff576101008083540402835291602001916200082b565b820191906000526020600020905b8154815290600101906020018083116200080d57829003601f168201915b5050505050815260200190600101906200078a565b50505050815250508152602001906001019062000737565b50505050905090565b6060601680548060200260200160405190810160405280929190818152602001828054801562000709576020028201919060005260206000209081546001600160a01b03168152600190910190602001808311620006ea575050505050905090565b6060601580548060200260200160405190810160405280929190818152602001828054801562000709576020028201919060005260206000209081546001600160a01b03168152600190910190602001808311620006ea575050505050905090565b60606019805480602002602001604051908101604052809291908181526020016000905b82821015620008585760008481526020908190206040805180820182526002860290920180546001600160a01b03168352600181018054835181870281018701909452808452939491938583019392830182828015620009f657602002820191906000526020600020906000905b82829054906101000a900460e01b6001600160e01b03191681526020019060040190602082600301049283019260010382029150808411620009b75790505b5050505050815250508152602001906001019062000949565b60606018805480602002602001604051908101604052809291908181526020016000905b828210156200085857838290600052602060002001805462000a5590620011c1565b80601f016020809104026020016040519081016040528092919081815260200182805462000a8390620011c1565b801562000ad45780601f1062000aa85761010080835404028352916020019162000ad4565b820191906000526020600020905b81548152906001019060200180831162000ab657829003601f168201915b50505050508152602001906001019062000a33565b6060601a805480602002602001604051908101604052809291908181526020016000905b82821015620008585760008481526020908190206040805180820182526002860290920180546001600160a01b0316835260018101805483518187028101870190945280845293949193858301939283018282801562000bba57602002820191906000526020600020906000905b82829054906101000a900460e01b6001600160e01b0319168152602001906004019060208260030104928301926001038202915080841162000b7b5790505b5050505050815250508152602001906001019062000b0d565b60606017805480602002602001604051908101604052809291908181526020016000905b828210156200085857838290600052602060002001805462000c1990620011c1565b80601f016020809104026020016040519081016040528092919081815260200182805462000c4790620011c1565b801562000c985780601f1062000c6c5761010080835404028352916020019162000c98565b820191906000526020600020905b81548152906001019060200180831162000c7a57829003601f168201915b50505050508152602001906001019062000bf7565b600754600090610100900460ff161562000cd05750600754610100900460ff1690565b6000737109709ecfa91a80626ff3989d68f67f5b1dd12d3b1562000ddf5760408051737109709ecfa91a80626ff3989d68f67f5b1dd12d602082018190526519985a5b195960d21b8284015282518083038401815260608301909352600092909162000d61917f667f9d70ca411d70ead50d8d5c22070dafc36ad75f3dcf5e7237b22ade9aecc491608001620011fd565b60408051601f198184030181529082905262000d7d9162001230565b6000604051808303816000865af19150503d806000811462000dbc576040519150601f19603f3d011682016040523d82523d6000602084013e62000dc1565b606091505b509150508080602001905181019062000ddb91906200124e565b9150505b919050565b6060601380548060200260200160405190810160405280929190818152602001828054801562000709576020028201919060005260206000209081546001600160a01b03168152600190910190602001808311620006ea575050505050905090565b6167bf806200127a83390190565b610cff8062007a3983390190565b613e96806200873883390190565b6020808252825182820181905260009190848201906040850190845b8181101562000eb35783516001600160a01b03168352928401929184019160010162000e8c565b50909695505050505050565b60005b8381101562000edc57818101518382015260200162000ec2565b50506000910152565b6000602080830181845280855180835260408601915060408160051b870101925083870160005b8281101562000fb957603f19888603018452815180516001600160a01b0316865286015160408787018190528151908701819052908701906060600582901b88018101919088019060005b8181101562000fa157898403605f190183528451805180865262000f81818e88018f850162000ebf565b958c0195601f01601f1916949094018b019350918a019160010162000f57565b50919750505093860193509085019060010162000f0c565b5092979650505050505050565b60006020808301818452808551808352604092508286019150828160051b8701018488016000805b848110156200106e57898403603f19018652825180516001600160a01b03168552880151888501889052805188860181905290890190839060608701905b80831015620010585783516001600160e01b0319168252928b019260019290920191908b01906200102c565b50978a0197955050509187019160010162000fee565b50919998505050505050505050565b6000602080830181845280855180835260408601915060408160051b870101925083870160005b8281101562000fb957878503603f1901845281518051808752620010ce818989018a850162000ebf565b601f01601f191695909501860194509285019290850190600101620010a4565b80516001600160a01b038116811462000ddf57600080fd5b600060c082840312156200111957600080fd5b60405160c0810181811067ffffffffffffffff821117156200114b57634e487b7160e01b600052604160045260246000fd5b6040526200115983620010ee565b81526200116960208401620010ee565b60208201526200117c60408401620010ee565b60408201526200118f60608401620010ee565b6060820152620011a260808401620010ee565b6080820152620011b560a08401620010ee565b60a08201529392505050565b600181811c90821680620011d657607f821691505b602082108103620011f757634e487b7160e01b600052602260045260246000fd5b50919050565b6001600160e01b03198316815281516000906200122281600485016020870162000ebf565b919091016004019392505050565b600082516200124481846020870162000ebf565b9190910192915050565b6000602082840312156200126157600080fd5b815180151581146200127257600080fd5b939250505056fe608060405260078054600160ff199182168117909255600b8054909116909117905534801561002d57600080fd5b506167828061003d6000396000f3fe608060405234801561001057600080fd5b50600436106100b45760003560e01c806385226c811161007157806385226c8114610174578063916a17c614610189578063b5508aa914610191578063ba414fa614610199578063e20c9f71146101b1578063fa7626d4146101b957600080fd5b80630a9254e4146100b95780631ed7831c146101255780632ade38801461013a5780633e5e3c231461014f5780633f7286f41461015757806366d9a9a01461015f575b600080fd5b6100c16101c6565b60405161011c919081516001600160a01b03908116825260208084015182169083015260408084015182169083015260608084015182169083015260808084015182169083015260a092830151169181019190915260c00190565b60405180910390f35b61012d61042a565b60405161011c9190610ba1565b61014261048c565b60405161011c9190610c12565b61012d6105ce565b61012d61062e565b61016761068e565b60405161011c9190610ced565b61017c610774565b60405161011c9190610da0565b610167610844565b61017c61092a565b6101a16109fa565b604051901515815260200161011c565b61012d610b27565b6007546101a19060ff1681565b6040805160c081018252600080825260208201819052918101829052606081018290526080810182905260a0810191909152600060405161020690610b87565b604051809103906000f080158015610222573d6000803e3d6000fd5b506001600160a01b0316630a9254e46040518163ffffffff1660e01b815260040160a0604051808303816000875af1158015610262573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102869190610e30565b90506000816020015182600001516040516102a090610b94565b6001600160a01b03928316815291166020820152604001604051809103906000f0801580156102d3573d6000803e3d6000fd5b5060405163ca669fa760e01b815260016004820152909150737109709ecfa91a80626ff3989d68f67f5b1dd12d9063ca669fa790602401600060405180830381600087803b15801561032457600080fd5b505af1158015610338573d6000803e3d6000fd5b50505060208301516040516318fcb32f60e11b8152654f7261636c6560d01b60048201526001600160a01b03848116602483015290911691506331f9665e90604401600060405180830381600087803b15801561039457600080fd5b505af11580156103a8573d6000803e3d6000fd5b505050506040518060c0016040528083600001516001600160a01b0316815260200183602001516001600160a01b0316815260200183604001516001600160a01b0316815260200183606001516001600160a01b0316815260200183608001516001600160a01b03168152602001826001600160a01b03168152509250505090565b6060601480548060200260200160405190810160405280929190818152602001828054801561048257602002820191906000526020600020905b81546001600160a01b03168152600190910190602001808311610464575b5050505050905090565b6060601b805480602002602001604051908101604052809291908181526020016000905b828210156105c557600084815260208082206040805180820182526002870290920180546001600160a01b03168352600181018054835181870281018701909452808452939591948681019491929084015b828210156105ae57838290600052602060002001805461052190610ed0565b80601f016020809104026020016040519081016040528092919081815260200182805461054d90610ed0565b801561059a5780601f1061056f5761010080835404028352916020019161059a565b820191906000526020600020905b81548152906001019060200180831161057d57829003601f168201915b505050505081526020019060010190610502565b5050505081525050815260200190600101906104b0565b50505050905090565b60606016805480602002602001604051908101604052809291908181526020018280548015610482576020028201919060005260206000209081546001600160a01b03168152600190910190602001808311610464575050505050905090565b60606015805480602002602001604051908101604052809291908181526020018280548015610482576020028201919060005260206000209081546001600160a01b03168152600190910190602001808311610464575050505050905090565b60606019805480602002602001604051908101604052809291908181526020016000905b828210156105c55760008481526020908190206040805180820182526002860290920180546001600160a01b0316835260018101805483518187028101870190945280845293949193858301939283018282801561075c57602002820191906000526020600020906000905b82829054906101000a900460e01b6001600160e01b0319168152602001906004019060208260030104928301926001038202915080841161071e5790505b505050505081525050815260200190600101906106b2565b60606018805480602002602001604051908101604052809291908181526020016000905b828210156105c55783829060005260206000200180546107b790610ed0565b80601f01602080910402602001604051908101604052809291908181526020018280546107e390610ed0565b80156108305780601f1061080557610100808354040283529160200191610830565b820191906000526020600020905b81548152906001019060200180831161081357829003601f168201915b505050505081526020019060010190610798565b6060601a805480602002602001604051908101604052809291908181526020016000905b828210156105c55760008481526020908190206040805180820182526002860290920180546001600160a01b0316835260018101805483518187028101870190945280845293949193858301939283018282801561091257602002820191906000526020600020906000905b82829054906101000a900460e01b6001600160e01b031916815260200190600401906020826003010492830192600103820291508084116108d45790505b50505050508152505081526020019060010190610868565b60606017805480602002602001604051908101604052809291908181526020016000905b828210156105c557838290600052602060002001805461096d90610ed0565b80601f016020809104026020016040519081016040528092919081815260200182805461099990610ed0565b80156109e65780601f106109bb576101008083540402835291602001916109e6565b820191906000526020600020905b8154815290600101906020018083116109c957829003601f168201915b50505050508152602001906001019061094e565b600754600090610100900460ff1615610a1c5750600754610100900460ff1690565b6000737109709ecfa91a80626ff3989d68f67f5b1dd12d3b15610b225760408051737109709ecfa91a80626ff3989d68f67f5b1dd12d602082018190526519985a5b195960d21b82840152825180830384018152606083019093526000929091610aaa917f667f9d70ca411d70ead50d8d5c22070dafc36ad75f3dcf5e7237b22ade9aecc491608001610f0a565b60408051601f1981840301815290829052610ac491610f3b565b6000604051808303816000865af19150503d8060008114610b01576040519150601f19603f3d011682016040523d82523d6000602084013e610b06565b606091505b5091505080806020019051810190610b1e9190610f57565b9150505b919050565b60606013805480602002602001604051908101604052809291908181526020018280548015610482576020028201919060005260206000209081546001600160a01b03168152600190910190602001808311610464575050505050905090565b6145b480610f8183390190565b6112188061553583390190565b6020808252825182820181905260009190848201906040850190845b81811015610be25783516001600160a01b031683529284019291840191600101610bbd565b50909695505050505050565b60005b83811015610c09578181015183820152602001610bf1565b50506000910152565b6000602080830181845280855180835260408601915060408160051b870101925083870160005b82811015610ce057603f19888603018452815180516001600160a01b0316865286015160408787018190528151908701819052908701906060600582901b88018101919088019060005b81811015610cc957898403605f1901835284518051808652610caa818e88018f8501610bee565b958c0195601f01601f1916949094018b019350918a0191600101610c83565b509197505050938601935090850190600101610c39565b5092979650505050505050565b60006020808301818452808551808352604092508286019150828160051b8701018488016000805b84811015610d9157898403603f19018652825180516001600160a01b03168552880151888501889052805188860181905290890190839060608701905b80831015610d7c5783516001600160e01b0319168252928b019260019290920191908b0190610d52565b50978a01979550505091870191600101610d15565b50919998505050505050505050565b6000602080830181845280855180835260408601915060408160051b870101925083870160005b82811015610ce057878503603f1901845281518051808752610dee818989018a8501610bee565b601f01601f191695909501860194509285019290850190600101610dc7565b6001600160a01b0381168114610e2257600080fd5b50565b8051610b2281610e0d565b600060a08284031215610e4257600080fd5b60405160a0810181811067ffffffffffffffff82111715610e7357634e487b7160e01b600052604160045260246000fd5b6040528251610e8181610e0d565b81526020830151610e9181610e0d565b6020820152610ea260408401610e25565b6040820152610eb360608401610e25565b6060820152610ec460808401610e25565b60808201529392505050565b600181811c90821680610ee457607f821691505b602082108103610f0457634e487b7160e01b600052602260045260246000fd5b50919050565b6001600160e01b0319831681528151600090610f2d816004850160208701610bee565b919091016004019392505050565b60008251610f4d818460208701610bee565b9190910192915050565b600060208284031215610f6957600080fd5b81518015158114610f7957600080fd5b939250505056fe608060405260078054600160ff199182168117909255600b8054909116909117905534801561002d57600080fd5b506145778061003d6000396000f3fe60806040523480156200001157600080fd5b5060043610620000c35760003560e01c806385226c81116200007a57806385226c81146200018a578063916a17c614620001a3578063b5508aa914620001ad578063ba414fa614620001b7578063e20c9f7114620001d2578063fa7626d414620001dc57600080fd5b80630a9254e414620000c85780631ed7831c146200012b5780632ade388014620001445780633e5e3c23146200015d5780633f7286f4146200016757806366d9a9a01462000171575b600080fd5b620000d2620001ea565b60405162000122919081516001600160a01b039081168252602080840151821690830152604080840151821690830152606080840151821690830152608092830151169181019190915260a00190565b60405180910390f35b6200013562000618565b60405162000122919062000e41565b6200014e6200067c565b60405162000122919062000eb6565b62000135620007ca565b620001356200082c565b6200017b6200088e565b60405162000122919062000f97565b6200019462000978565b6040516200012291906200104e565b6200017b62000a52565b6200019462000b3c565b620001c162000c16565b604051901515815260200162000122565b6200013562000d4d565b600754620001c19060ff1681565b6040805160a08101825260008082526020820181905281830181905260608201819052608082015290516303223eab60e11b815260016004820152737109709ecfa91a80626ff3989d68f67f5b1dd12d906306447d5690602401600060405180830381600087803b1580156200025f57600080fd5b505af115801562000274573d6000803e3d6000fd5b505050506000604051620002889062000dfb565b604051809103906000f080158015620002a5573d6000803e3d6000fd5b506001600160a01b0316630a9254e46040518163ffffffff1660e01b81526004016020604051808303816000875af1158015620002e6573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200030c9190620010bf565b905060006040516200031e9062000e09565b604051809103906000f0801580156200033b573d6000803e3d6000fd5b50905060006200034c600062000daf565b62000358600062000daf565b84604051620003679062000e17565b92518352905160208301526001600160a01b03166040820152606001604051809103906000f080158015620003a0573d6000803e3d6000fd5b5090506000604051620003b39062000e25565b604051809103906000f080158015620003d0573d6000803e3d6000fd5b5090506000604051620003e39062000e33565b604051809103906000f08015801562000400573d6000803e3d6000fd5b506040516318fcb32f60e11b81526453746f726560d81b60048201526001600160a01b038581166024830152919250908516906331f9665e90604401600060405180830381600087803b1580156200045757600080fd5b505af11580156200046c573d6000803e3d6000fd5b50506040516318fcb32f60e11b81527210dbdb1b185d195c985b15da1a5d195b1a5cdd606a1b60048201526001600160a01b038581166024830152871692506331f9665e9150604401600060405180830381600087803b158015620004d057600080fd5b505af1158015620004e5573d6000803e3d6000fd5b50506040516318fcb32f60e11b8152721259195b9d1a599a595c95da1a5d195b1a5cdd606a1b60048201526001600160a01b038481166024830152871692506331f9665e9150604401600060405180830381600087803b1580156200054957600080fd5b505af11580156200055e573d6000803e3d6000fd5b505050507f885cb69240a935d632d79c317109709ecfa91a80626ff3989d68f67f5b1dd12d60001c6001600160a01b03166390c5013b6040518163ffffffff1660e01b8152600401600060405180830381600087803b158015620005c157600080fd5b505af1158015620005d6573d6000803e3d6000fd5b50506040805160a0810182526001600160a01b039889168152968816602088015294871694860194909452509084166060840152909216608082015292915050565b606060148054806020026020016040519081016040528092919081815260200182805480156200067257602002820191906000526020600020905b81546001600160a01b0316815260019091019060200180831162000653575b5050505050905090565b6060601b805480602002602001604051908101604052809291908181526020016000905b82821015620007c157600084815260208082206040805180820182526002870290920180546001600160a01b03168352600181018054835181870281018701909452808452939591948681019491929084015b82821015620007a95783829060005260206000200180546200071590620010ea565b80601f01602080910402602001604051908101604052809291908181526020018280546200074390620010ea565b8015620007945780601f10620007685761010080835404028352916020019162000794565b820191906000526020600020905b8154815290600101906020018083116200077657829003601f168201915b505050505081526020019060010190620006f3565b505050508152505081526020019060010190620006a0565b50505050905090565b6060601680548060200260200160405190810160405280929190818152602001828054801562000672576020028201919060005260206000209081546001600160a01b0316815260019091019060200180831162000653575050505050905090565b6060601580548060200260200160405190810160405280929190818152602001828054801562000672576020028201919060005260206000209081546001600160a01b0316815260019091019060200180831162000653575050505050905090565b60606019805480602002602001604051908101604052809291908181526020016000905b82821015620007c15760008481526020908190206040805180820182526002860290920180546001600160a01b031683526001810180548351818702810187019094528084529394919385830193928301828280156200095f57602002820191906000526020600020906000905b82829054906101000a900460e01b6001600160e01b03191681526020019060040190602082600301049283019260010382029150808411620009205790505b50505050508152505081526020019060010190620008b2565b60606018805480602002602001604051908101604052809291908181526020016000905b82821015620007c1578382906000526020600020018054620009be90620010ea565b80601f0160208091040260200160405190810160405280929190818152602001828054620009ec90620010ea565b801562000a3d5780601f1062000a115761010080835404028352916020019162000a3d565b820191906000526020600020905b81548152906001019060200180831162000a1f57829003601f168201915b5050505050815260200190600101906200099c565b6060601a805480602002602001604051908101604052809291908181526020016000905b82821015620007c15760008481526020908190206040805180820182526002860290920180546001600160a01b0316835260018101805483518187028101870190945280845293949193858301939283018282801562000b2357602002820191906000526020600020906000905b82829054906101000a900460e01b6001600160e01b0319168152602001906004019060208260030104928301926001038202915080841162000ae45790505b5050505050815250508152602001906001019062000a76565b60606017805480602002602001604051908101604052809291908181526020016000905b82821015620007c157838290600052602060002001805462000b8290620010ea565b80601f016020809104026020016040519081016040528092919081815260200182805462000bb090620010ea565b801562000c015780601f1062000bd55761010080835404028352916020019162000c01565b820191906000526020600020905b81548152906001019060200180831162000be357829003601f168201915b50505050508152602001906001019062000b60565b600754600090610100900460ff161562000c395750600754610100900460ff1690565b6000737109709ecfa91a80626ff3989d68f67f5b1dd12d3b1562000d485760408051737109709ecfa91a80626ff3989d68f67f5b1dd12d602082018190526519985a5b195960d21b8284015282518083038401815260608301909352600092909162000cca917f667f9d70ca411d70ead50d8d5c22070dafc36ad75f3dcf5e7237b22ade9aecc49160800162001126565b60408051601f198184030181529082905262000ce69162001159565b6000604051808303816000865af19150503d806000811462000d25576040519150601f19603f3d011682016040523d82523d6000602084013e62000d2a565b606091505b509150508080602001905181019062000d44919062001177565b9150505b919050565b6060601380548060200260200160405190810160405280929190818152602001828054801562000672576020028201919060005260206000209081546001600160a01b0316815260019091019060200180831162000653575050505050905090565b60408051602081019091526000815260408051602081019091528062000dde84670de0b6b3a764000062000de6565b905292915050565b600062000df482846200119b565b9392505050565b6101b580620011ca83390190565b610480806200137f83390190565b611f8b80620017ff83390190565b61095e806200378a83390190565b61045a80620040e883390190565b6020808252825182820181905260009190848201906040850190845b8181101562000e845783516001600160a01b03168352928401929184019160010162000e5d565b50909695505050505050565b60005b8381101562000ead57818101518382015260200162000e93565b50506000910152565b6000602080830181845280855180835260408601915060408160051b870101925083870160005b8281101562000f8a57603f19888603018452815180516001600160a01b0316865286015160408787018190528151908701819052908701906060600582901b88018101919088019060005b8181101562000f7257898403605f190183528451805180865262000f52818e88018f850162000e90565b958c0195601f01601f1916949094018b019350918a019160010162000f28565b50919750505093860193509085019060010162000edd565b5092979650505050505050565b60006020808301818452808551808352604092508286019150828160051b8701018488016000805b848110156200103f57898403603f19018652825180516001600160a01b03168552880151888501889052805188860181905290890190839060608701905b80831015620010295783516001600160e01b0319168252928b019260019290920191908b019062000ffd565b50978a0197955050509187019160010162000fbf565b50919998505050505050505050565b6000602080830181845280855180835260408601915060408160051b870101925083870160005b8281101562000f8a57878503603f19018452815180518087526200109f818989018a850162000e90565b601f01601f19169590950186019450928501929085019060010162001075565b600060208284031215620010d257600080fd5b81516001600160a01b038116811462000df457600080fd5b600181811c90821680620010ff57607f821691505b6020821081036200112057634e487b7160e01b600052602260045260246000fd5b50919050565b6001600160e01b03198316815281516000906200114b81600485016020870162000e90565b919091016004019392505050565b600082516200116d81846020870162000e90565b9190910192915050565b6000602082840312156200118a57600080fd5b8151801515811462000df457600080fd5b6000816000190483118215151615620011c457634e487b7160e01b600052601160045260246000fd5b50029056fe608060405234801561001057600080fd5b50610195806100206000396000f3fe608060405234801561001057600080fd5b506004361061002b5760003560e01c80630a9254e414610030575b600080fd5b610038610054565b6040516001600160a01b03909116815260200160405180910390f35b600060405161006290610084565b604051809103906000f08015801561007e573d6000803e3d6000fd5b50905090565b60cf806100918339019056fe608060405234801561001057600080fd5b504260005560ac806100236000396000f3fe6080604052348015600f57600080fd5b506004361060325760003560e01c806322f8e56614603757806329cb924d146049575b600080fd5b60476042366004605e565b600055565b005b60005460405190815260200160405180910390f35b600060208284031215606f57600080fd5b503591905056fea2646970667358221220ac5277a6d951fefada8e9d179a43cc6317941f75cad69224364e3024cf39f58e64736f6c63430008100033a26469706673582212207d8871378c623a5dea15cfb24a39319d130f503849e860fc71f867f1c69297ba64736f6c63430008100033608060405234801561001057600080fd5b5061001a3361001f565b61006f565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6104028061007e6000396000f3fe608060405234801561001057600080fd5b50600436106100625760003560e01c806331f9665e14610067578063715018a61461007c5780638da5cb5b14610084578063aafd5e40146100ad578063cc48f4db146100c0578063f2fde38b146100e9575b600080fd5b61007a610075366004610330565b6100fc565b005b61007a610188565b6000546001600160a01b03165b6040516001600160a01b03909116815260200160405180910390f35b6100916100bb36600461035c565b6101be565b6100916100ce36600461035c565b6001602052600090815260409020546001600160a01b031681565b61007a6100f7366004610375565b610229565b6000546001600160a01b0316331461012f5760405162461bcd60e51b815260040161012690610397565b60405180910390fd5b60008281526001602052604080822080546001600160a01b0319166001600160a01b0385169081179091559051909184917fb29aa13e555039289e0513962835b00fcc6e4a265ae8f99e68e5b90d5406fe489190a35050565b6000546001600160a01b031633146101b25760405162461bcd60e51b815260040161012690610397565b6101bc60006102c4565b565b6000818152600160205260408120546001600160a01b0316806102235760405162461bcd60e51b815260206004820152601860248201527f496d706c656d656e746174696f6e206e6f7420666f756e6400000000000000006044820152606401610126565b92915050565b6000546001600160a01b031633146102535760405162461bcd60e51b815260040161012690610397565b6001600160a01b0381166102b85760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608401610126565b6102c1816102c4565b50565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b80356001600160a01b038116811461032b57600080fd5b919050565b6000806040838503121561034357600080fd5b8235915061035360208401610314565b90509250929050565b60006020828403121561036e57600080fd5b5035919050565b60006020828403121561038757600080fd5b61039082610314565b9392505050565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260408201526060019056fea26469706673582212200252ff2d138f6d885f918d0a2b22e867dd71bd3438f512cd1d4016487f70090264736f6c6343000810003360806040523480156200001157600080fd5b5060405162001f8b38038062001f8b833981016040819052620000349162000655565b600280546001600160a01b0319166001600160a01b0383161790556200005d600080336200008b565b6200006c6001600033620001ec565b620000778362000203565b620000828262000300565b505050620006f5565b826000808281526020819052604090206001015460ff166002811115620000b657620000b6620006b1565b14620001095760405162461bcd60e51b815260206004820152601e60248201527f43616e6e6f74207573652061207072652d6578697374696e6720726f6c65000060448201526064015b60405180910390fd5b60008481526020819052604090206001808201805460ff191682800217905550838155620001476002820184620003f7602090811b62000dd717901c565b60008481526020819052604081206001015460ff166002811115620001705762000170620006b1565b03620001e55760405162461bcd60e51b815260206004820152603c60248201527f417474656d7074656420746f2075736520616e20696e76616c696420726f6c6560448201527f20746f206d616e61676520616e206578636c757369766520726f6c6500000000606482015260840162000100565b5050505050565b6001839055620001fe8383836200008b565b505050565b600062000211813362000407565b620002595760405162461bcd60e51b8152602060048201526022602482015260008051602062001f6b8339815191526044820152616c6560f01b606482015260840162000100565b62000274600183620004df60201b62000de11790919060201c565b620002c25760405162461bcd60e51b815260206004820152601e60248201527f466565206d757374206265203c203130302520706572207365636f6e642e0000604482015260640162000100565b815160038190556040519081527e41cf46cedaae9927def5c0647b190fd958c8ab8cde4219dad74319bc05d3d9906020015b60405180910390a15050565b60006200030e813362000407565b620003565760405162461bcd60e51b8152602060048201526022602482015260008051602062001f6b8339815191526044820152616c6560f01b606482015260840162000100565b62000371600183620004df60201b62000de11790919060201c565b620003bf5760405162461bcd60e51b815260206004820152601f60248201527f7765656b6c792064656c617920666565206d757374206265203c203130302500604482015260640162000100565b815160048190556040519081527f2e6cd3e6f7808568620c647ac0e652b0e95bef2494692adbc118fbbd02a8e82e90602001620002f4565b620004038282620004f8565b5050565b600082815260208190526040812060018082015460ff166002811115620004325762000432620006b1565b036200045e576200045583826002016200057960201b62000df81790919060201c565b915050620004d9565b6002600182015460ff1660028111156200047c576200047c620006b1565b036200049f576200045583826003016200058c60201b62000e0b1790919060201c565b60405162461bcd60e51b815260206004820152600e60248201526d125b9d985b1a59081c9bdb19525960921b604482015260640162000100565b92915050565b6000620004ec82620005ab565b51835110905092915050565b6001600160a01b0381166200055c5760405162461bcd60e51b815260206004820152602360248201527f43616e6e6f742073657420616e206578636c757369766520726f6c6520746f2060448201526203078360ec1b606482015260840162000100565b81546001600160a01b0319166001600160a01b0391909116179055565b90546001600160a01b0391821691161490565b6001600160a01b03166000908152602091909152604090205460ff1690565b6040805160208101909152600081526040518060200160405280620005e7670de0b6b3a764000085620005ef60201b62000e2a1790919060201c565b905292915050565b6000620005fd8284620006c7565b9392505050565b6000602082840312156200061757600080fd5b604051602081016001600160401b03811182821017156200064857634e487b7160e01b600052604160045260246000fd5b6040529151825250919050565b6000806000606084860312156200066b57600080fd5b62000677858562000604565b925062000688856020860162000604565b60408501519092506001600160a01b0381168114620006a657600080fd5b809150509250925092565b634e487b7160e01b600052602160045260246000fd5b6000816000190483118215151615620006f057634e487b7160e01b600052601160045260246000fd5b500290565b61186680620007056000396000f3fe6080604052600436106101355760003560e01c80637d69dfdb116100ab578063ab3545e51161006f578063ab3545e5146103b1578063acb6f6cb146103d1578063b187487d146103f1578063bd1f4b5214610411578063cd3a9b2414610431578063d97c05be1461043957600080fd5b80637d69dfdb146103235780637e7e591d1461033a57806384ae2a741461035a5780638659d23214610371578063aaa14ca31461039157600080fd5b80635b97aadd116100fd5780635b97aadd146101f35780636be7658b146102515780636f356f4a1461027157806374201feb1461029e57806374d0a676146102d35780637cdc1cb9146102f357600080fd5b80631c39c38d1461013a57806322f8e5661461017757806329cb924d146101995780632e1a7d4d146101bc5780632fee2098146101dc575b600080fd5b34801561014657600080fd5b5060025461015a906001600160a01b031681565b6040516001600160a01b0390911681526020015b60405180910390f35b34801561018357600080fd5b5061019761019236600461142b565b610459565b005b3480156101a557600080fd5b506101ae6104cf565b60405190815260200161016e565b3480156101c857600080fd5b506101976101d736600461142b565b610564565b3480156101e857600080fd5b506003546101ae9081565b3480156101ff57600080fd5b5061024261020e366004611460565b60408051602080820183526000918290526001600160a01b0393909316815260058352819020815192830190915254815290565b6040519051815260200161016e565b34801561025d57600080fd5b5061019761026c36600461147b565b6105a4565b34801561027d57600080fd5b506101ae61028c366004611460565b60056020526000908152604090205481565b3480156102aa57600080fd5b506102be6102b93660046114bf565b61067a565b6040805192518352905160208301520161016e565b3480156102df57600080fd5b506101976102ee36600461147b565b610740565b3480156102ff57600080fd5b5061031361030e36600461147b565b610816565b604051901515815260200161016e565b34801561032f57600080fd5b506004546101ae9081565b34801561034657600080fd5b50610197610355366004611545565b6108cb565b34801561036657600080fd5b506101ae62093a8081565b34801561037d57600080fd5b5061019761038c366004611570565b61094f565b34801561039d57600080fd5b506101976103ac36600461142b565b6109d1565b3480156103bd57600080fd5b5061015a6103cc36600461142b565b610a8d565b3480156103dd57600080fd5b506101976103ec36600461159b565b610af8565b3480156103fd57600080fd5b5061019761040c36600461159b565b610bb5565b34801561041d57600080fd5b5061019761042c3660046115b7565b610c6b565b610197610caf565b34801561044557600080fd5b5061019761045436600461147b565b610d01565b6002546001600160a01b031661046e57600080fd5b60025460405163117c72b360e11b8152600481018390526001600160a01b03909116906322f8e56690602401600060405180830381600087803b1580156104b457600080fd5b505af11580156104c8573d6000803e3d6000fd5b5050505050565b6002546000906001600160a01b03161561055f57600260009054906101000a90046001600160a01b03166001600160a01b03166329cb924d6040518163ffffffff1660e01b8152600401602060405180830381865afa158015610536573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061055a91906115e1565b905090565b504290565b6001546105718133610816565b6105965760405162461bcd60e51b815260040161058d906115fa565b60405180910390fd5b6105a03383610e36565b5050565b81600260008281526020819052604090206001015460ff1660028111156105cd576105cd61163c565b146105ea5760405162461bcd60e51b815260040161058d90611652565b60008381526020819052604090205483906106059033610816565b6106215760405162461bcd60e51b815260040161058d9061169e565b600084815260208190526040902061063c9060030184610f4f565b60405133906001600160a01b0385169086907feb3e33034c392e69263b04ec0fa376dc12784a41b6676c7f31b936cbc0fbb5af90600090a450505050565b60408051602081019091526000815260408051602081019091526000815260006106a48587610f71565b604080516020810190915260035481529091506106da906106d4836106ce3689900389018961159b565b90610f7d565b90610fae565b925060006106f0876106ea6104cf565b90610f71565b9050600061071a6107048362093a80610feb565b6040805160208101909152600454815290610f7d565b9050610733816106d4856106ce368b90038b018b61159b565b9350505050935093915050565b81600260008281526020819052604090206001015460ff1660028111156107695761076961163c565b146107865760405162461bcd60e51b815260040161058d90611652565b60008381526020819052604090205483906107a19033610816565b6107bd5760405162461bcd60e51b815260040161058d9061169e565b60008481526020819052604090206107d89060030184610ff7565b60405133906001600160a01b0385169086907f63502af7324ff6db91ab38f8236a648727d9385ea6c782073dd4882d8a61a48f90600090a450505050565b600082815260208190526040812060018082015460ff16600281111561083e5761083e61163c565b0361085f5760028101546001600160a01b038481169116145b9150506108c5565b6002600182015460ff16600281111561087a5761087a61163c565b0361088c576108576003820184610e0b565b60405162461bcd60e51b815260206004820152600e60248201526d125b9d985b1a59081c9bdb19525960921b604482015260640161058d565b92915050565b60006108d78133610816565b6108f35760405162461bcd60e51b815260040161058d906115fa565b6001600160a01b0383166000908152600560205260409081902083519055517f98c807f575ae6584ff8200eaf3205f3f20abf9c954fff030c152f5e7c5446d6e90610942908451815260200190565b60405180910390a1505050565b8161096a60006109643685900385018561159b565b90611072565b6109b65760405162461bcd60e51b815260206004820152601960248201527f416d6f756e742073656e742063616e2774206265207a65726f00000000000000604482015260640161058d565b6109cc6001600160a01b03821633308535611089565b505050565b80600260008281526020819052604090206001015460ff1660028111156109fa576109fa61163c565b14610a175760405162461bcd60e51b815260040161058d90611652565b81610a228133610816565b610a3e5760405162461bcd60e51b815260040161058d906115fa565b6000838152602081905260409020610a599060030133610f4f565b6040513390819085907feb3e33034c392e69263b04ec0fa376dc12784a41b6676c7f31b936cbc0fbb5af90600090a4505050565b600081600160008281526020819052604090206001015460ff166002811115610ab857610ab861163c565b14610ad55760405162461bcd60e51b815260040161058d906116e2565b6000838152602081905260409020600201546001600160a01b03165b9392505050565b6000610b048133610816565b610b205760405162461bcd60e51b815260040161058d906115fa565b610b2b826001610de1565b610b775760405162461bcd60e51b815260206004820152601e60248201527f466565206d757374206265203c203130302520706572207365636f6e642e0000604482015260640161058d565b815160038190556040519081527e41cf46cedaae9927def5c0647b190fd958c8ab8cde4219dad74319bc05d3d9906020015b60405180910390a15050565b6000610bc18133610816565b610bdd5760405162461bcd60e51b815260040161058d906115fa565b610be8826001610de1565b610c345760405162461bcd60e51b815260206004820152601f60248201527f7765656b6c792064656c617920666565206d757374206265203c203130302500604482015260640161058d565b815160048190556040519081527f2e6cd3e6f7808568620c647ac0e652b0e95bef2494692adbc118fbbd02a8e82e90602001610ba9565b600154610c788133610816565b610c945760405162461bcd60e51b815260040161058d906115fa565b82610ca96001600160a01b03821633856110f4565b50505050565b60003411610cff5760405162461bcd60e51b815260206004820152601860248201527f56616c75652073656e742063616e2774206265207a65726f0000000000000000604482015260640161058d565b565b81600160008281526020819052604090206001015460ff166002811115610d2a57610d2a61163c565b14610d475760405162461bcd60e51b815260040161058d906116e2565b6000838152602081905260409020548390610d629033610816565b610d7e5760405162461bcd60e51b815260040161058d9061169e565b6000848152602081905260409020610d999060020184611124565b60405133906001600160a01b0385169086907f3b855c56b409b671c7112789d022675eb639d0bcb8896f1b6197c132f799e74690600090a450505050565b6105a08282611124565b6000610dec826111a3565b51835110905092915050565b90546001600160a01b0391821691161490565b6001600160a01b03166000908152602091909152604090205460ff1690565b6000610af18284611747565b80471015610e865760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a20696e73756666696369656e742062616c616e6365000000604482015260640161058d565b6000826001600160a01b03168260405160006040518083038185875af1925050503d8060008114610ed3576040519150601f19603f3d011682016040523d82523d6000602084013e610ed8565b606091505b50509050806109cc5760405162461bcd60e51b815260206004820152603a60248201527f416464726573733a20756e61626c6520746f2073656e642076616c75652c207260448201527f6563697069656e74206d61792068617665207265766572746564000000000000606482015260840161058d565b6001600160a01b0316600090815260209190915260409020805460ff19169055565b6000610af18284611766565b604080516020810190915260008152604080516020810190915283518190610fa59085610e2a565b90529392505050565b6040805160208101909152600081526040805160208101909152825184518291670de0b6b3a764000091610fe191610e2a565b610fa59190611779565b6000610af18284611779565b6001600160a01b03811661104d5760405162461bcd60e51b815260206004820152601f60248201527f43616e6e6f74206164642030783020746f20612073686172656420726f6c6500604482015260640161058d565b6001600160a01b0316600090815260209190915260409020805460ff19166001179055565b600061107d826111a3565b51835111905092915050565b6040516001600160a01b0380851660248301528316604482015260648101829052610ca99085906323b872dd60e01b906084015b60408051601f198184030181529190526020810180516001600160e01b03166001600160e01b0319909316929092179091526111d8565b6040516001600160a01b0383166024820152604481018290526109cc90849063a9059cbb60e01b906064016110bd565b6001600160a01b0381166111865760405162461bcd60e51b815260206004820152602360248201527f43616e6e6f742073657420616e206578636c757369766520726f6c6520746f2060448201526203078360ec1b606482015260840161058d565b81546001600160a01b0319166001600160a01b0391909116179055565b6040805160208101909152600081526040805160208101909152806111d084670de0b6b3a7640000610e2a565b905292915050565b600061122d826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b03166112aa9092919063ffffffff16565b8051909150156109cc578080602001905181019061124b919061179b565b6109cc5760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b606482015260840161058d565b60606112b984846000856112c1565b949350505050565b6060824710156113225760405162461bcd60e51b815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f6044820152651c8818d85b1b60d21b606482015260840161058d565b6001600160a01b0385163b6113795760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000604482015260640161058d565b600080866001600160a01b0316858760405161139591906117e1565b60006040518083038185875af1925050503d80600081146113d2576040519150601f19603f3d011682016040523d82523d6000602084013e6113d7565b606091505b50915091506113e78282866113f2565b979650505050505050565b60608315611401575081610af1565b8251156114115782518084602001fd5b8160405162461bcd60e51b815260040161058d91906117fd565b60006020828403121561143d57600080fd5b5035919050565b80356001600160a01b038116811461145b57600080fd5b919050565b60006020828403121561147257600080fd5b610af182611444565b6000806040838503121561148e57600080fd5b8235915061149e60208401611444565b90509250929050565b6000602082840312156114b957600080fd5b50919050565b6000806000606084860312156114d457600080fd5b83359250602084013591506114ec85604086016114a7565b90509250925092565b60006020828403121561150757600080fd5b6040516020810181811067ffffffffffffffff8211171561153857634e487b7160e01b600052604160045260246000fd5b6040529135825250919050565b6000806040838503121561155857600080fd5b61156183611444565b915061149e84602085016114f5565b6000806040838503121561158357600080fd5b61158c83611444565b915061149e84602085016114a7565b6000602082840312156115ad57600080fd5b610af183836114f5565b600080604083850312156115ca57600080fd5b6115d383611444565b946020939093013593505050565b6000602082840312156115f357600080fd5b5051919050565b60208082526022908201527f53656e64657220646f6573206e6f7420686f6c6420726571756972656420726f6040820152616c6560f01b606082015260800190565b634e487b7160e01b600052602160045260246000fd5b6020808252602c908201527f4d7573742062652063616c6c6564206f6e20616e20696e697469616c697a656460408201526b2053686172656420726f6c6560a01b606082015260800190565b60208082526024908201527f43616e206f6e6c792062652063616c6c6564206279206120726f6c65206d616e60408201526330b3b2b960e11b606082015260800190565b6020808252602f908201527f4d7573742062652063616c6c6564206f6e20616e20696e697469616c697a656460408201526e204578636c757369766520726f6c6560881b606082015260800190565b634e487b7160e01b600052601160045260246000fd5b600081600019048311821515161561176157611761611731565b500290565b818103818111156108c5576108c5611731565b60008261179657634e487b7160e01b600052601260045260246000fd5b500490565b6000602082840312156117ad57600080fd5b81518015158114610af157600080fd5b60005b838110156117d85781810151838201526020016117c0565b50506000910152565b600082516117f38184602087016117bd565b9190910192915050565b602081526000825180602084015261181c8160408501602087016117bd565b601f01601f1916919091016040019291505056fea26469706673582212200e1fb084c8982e7255d560e846cc4c6ad74c5f9a9b38149bdde7bb884a481b1b64736f6c6343000810003353656e64657220646f6573206e6f7420686f6c6420726571756972656420726f608060405234801561001057600080fd5b5061001a33610032565b6000805460ff60a01b1916600160a01b179055610082565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6108cd806100916000396000f3fe608060405234801561001057600080fd5b50600436106100935760003560e01c80638da5cb5b116100665780638da5cb5b146101085780639b19251a14610119578063d01f63f514610149578063e43252d71461015e578063f2fde38b1461017157600080fd5b806337797c08146100985780633a3ab672146100c8578063715018a6146100eb5780638ab1d681146100f5575b600080fd5b6100ab6100a636600461073b565b610184565b6040516001600160a01b0390911681526020015b60405180910390f35b6100db6100d6366004610754565b6101ae565b60405190151581526020016100bf565b6100f36101ee565b005b6100f3610103366004610754565b61022d565b6000546001600160a01b03166100ab565b61013c610127366004610754565b60016020526000908152604090205460ff1681565b6040516100bf919061079a565b61015161030a565b6040516100bf91906107c2565b6100f361016c366004610754565b6104a0565b6100f361017f366004610754565b6105fa565b6002818154811061019457600080fd5b6000918252602090912001546001600160a01b0316905081565b60006101b8610692565b60016001600160a01b03831660009081526001602052604090205460ff1660028111156101e7576101e7610784565b1492915050565b6000546001600160a01b031633146102215760405162461bcd60e51b81526004016102189061080f565b60405180910390fd5b61022b60006106eb565b565b610235610692565b6102476000805460ff60a01b19169055565b6000546001600160a01b031633146102715760405162461bcd60e51b81526004016102189061080f565b60026001600160a01b03821660009081526001602052604090205460ff1660028111156102a0576102a0610784565b146102ef576001600160a01b038116600081815260016020526040808220805460ff19166002179055517fcdd2e9b91a56913d370075169cefa1602ba36be5301664f752192bb1709df7579190a25b6103076000805460ff60a01b1916600160a01b179055565b50565b6060610314610692565b6000805b6002548110156103985760018060006002848154811061033a5761033a610844565b60009182526020808320909101546001600160a01b0316835282019290925260400190205460ff16600281111561037357610373610784565b0361038657816103828161085a565b9250505b806103908161085a565b915050610318565b508067ffffffffffffffff8111156103b2576103b2610881565b6040519080825280602002602001820160405280156103db578160200160208202803683370190505b5091506000905060005b60025481101561049b5760006002828154811061040457610404610844565b6000918252602090912001546001600160a01b0316905060016001600160a01b03821660009081526001602052604090205460ff16600281111561044a5761044a610784565b03610488578084848151811061046257610462610844565b6001600160a01b0390921660209283029190910190910152826104848161085a565b9350505b50806104938161085a565b9150506103e5565b505090565b6104a8610692565b6104ba6000805460ff60a01b19169055565b6000546001600160a01b031633146104e45760405162461bcd60e51b81526004016102189061080f565b60016001600160a01b03821660009081526001602052604090205460ff16600281111561051357610513610784565b146102ef576001600160a01b03811660009081526001602052604081205460ff16600281111561054557610545610784565b0361059657600280546001810182556000919091527f405787fa12a823e0f2b7631cc41b3ba8828b3321ca811111fa75cd3aa3bb5ace0180546001600160a01b0319166001600160a01b0383161790555b6001600160a01b0381166000818152600160208190526040808320805460ff1916909217909155517fa850ae9193f515cbae8d35e8925bd2be26627fc91bce650b8652ed254e9cab039190a26103076000805460ff60a01b1916600160a01b179055565b6000546001600160a01b031633146106245760405162461bcd60e51b81526004016102189061080f565b6001600160a01b0381166106895760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608401610218565b610307816106eb565b600054600160a01b900460ff1661022b5760405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c006044820152606401610218565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b60006020828403121561074d57600080fd5b5035919050565b60006020828403121561076657600080fd5b81356001600160a01b038116811461077d57600080fd5b9392505050565b634e487b7160e01b600052602160045260246000fd5b60208101600383106107bc57634e487b7160e01b600052602160045260246000fd5b91905290565b6020808252825182820181905260009190848201906040850190845b818110156108035783516001600160a01b0316835292840192918401916001016107de565b50909695505050505050565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b634e487b7160e01b600052603260045260246000fd5b60006001820161087a57634e487b7160e01b600052601160045260246000fd5b5060010190565b634e487b7160e01b600052604160045260246000fdfea264697066735822122012579754682d9ca0b43a16b3094418ed8aa5ee7031d0fb774b381905d2c9cf5e64736f6c63430008100033608060405234801561001057600080fd5b5061001a3361001f565b61006f565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6103dc8061007e6000396000f3fe608060405234801561001057600080fd5b50600436106100625760003560e01c806310a7e20114610067578063715018a61461007c5780638da5cb5b146100845780638e0d3ca7146100a457806390978d1b146100b7578063f2fde38b146100ea575b600080fd5b61007a610075366004610328565b6100fd565b005b61007a61018d565b6000546040516001600160a01b0390911681526020015b60405180910390f35b61007a6100b2366004610328565b6101c3565b6100da6100c5366004610328565b60009081526001602052604090205460ff1690565b604051901515815260200161009b565b61007a6100f8366004610341565b610244565b6000546001600160a01b031633146101305760405162461bcd60e51b815260040161012790610371565b60405180910390fd5b60008181526001602052604090205460ff1661018a576000818152600160208190526040808320805460ff19169092179091555182917fa0ca1076d765c13772089a90b5121cf6ddf63c9f7891c4e5031adbc85936b27691a25b50565b6000546001600160a01b031633146101b75760405162461bcd60e51b815260040161012790610371565b6101c160006102d8565b565b6000546001600160a01b031633146101ed5760405162461bcd60e51b815260040161012790610371565b60008181526001602052604090205460ff161561018a57600081815260016020526040808220805460ff191690555182917fefdf15ca0f9402bd4e933b0edb0db65b23cc50d27cb010d8abcadaae4fa944e591a250565b6000546001600160a01b0316331461026e5760405162461bcd60e51b815260040161012790610371565b6001600160a01b0381166102d35760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608401610127565b61018a815b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b60006020828403121561033a57600080fd5b5035919050565b60006020828403121561035357600080fd5b81356001600160a01b038116811461036a57600080fd5b9392505050565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260408201526060019056fea26469706673582212200420ad640ea5d694ea28017924c73d0062ff64bd9ac631618e6fb3c5d0ca8aeb64736f6c63430008100033a2646970667358221220c74f5ca068d51d49125bff8669b3874b1237cd8193f4156aba9d1b2e7b22cab564736f6c63430008100033608060405234801561001057600080fd5b5060405161121838038061121883398101604081905261002f9161007f565b600080546001600160a01b039283166001600160a01b031991821617909155600180549390921692169190911790556100b2565b80516001600160a01b038116811461007a57600080fd5b919050565b6000806040838503121561009257600080fd5b61009b83610063565b91506100a960208401610063565b90509250929050565b611157806100c16000396000f3fe608060405234801561001057600080fd5b506004361061009e5760003560e01c8063719c6d5611610066578063719c6d5614610131578063b551cd5014610144578063b555d60814610167578063d7d6f43d1461017c578063f76177cf1461018f57600080fd5b80631c39c38d146100a3578063216666a4146100d357806322f8e566146100e857806329cb924d146100fb5780636a5ef50614610111575b600080fd5b6000546100b6906001600160a01b031681565b6040516001600160a01b0390911681526020015b60405180910390f35b6100e66100e1366004610c0f565b6101a2565b005b6100e66100f6366004610c5f565b61039c565b61010361040b565b6040519081526020016100ca565b61012461011f366004610c5f565b61049c565b6040516100ca9190610cef565b61010361013f366004610c0f565b6105f1565b610157610152366004610c0f565b610630565b60405190151581526020016100ca565b61016f61065f565b6040516100ca9190610d09565b6100e661018a366004610d6b565b610764565b6100e661019d366004610dc3565b610a33565b6101aa610a5d565b6001600160a01b03166390978d1b846040518263ffffffff1660e01b81526004016101d791815260200190565b602060405180830381865afa1580156101f4573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102189190610de5565b61022157600080fd5b600061022e848484610ae0565b600081815260026020526040902080549192509060ff16158015610261575060008281526003602052604090205460ff16155b15610395576040805180820182526001808252600480546020808501918252600088815260038083528782209651875490151560ff1990911617875592519585019590955585516060810187528b81529081018a81529581018981528354948501845592909452835192027f8a35acfbc15ff81a39ae7d344fd709f28e8600b4aa8c65c6b64bfe7fe36bd19b810192835593517f8a35acfbc15ff81a39ae7d344fd709f28e8600b4aa8c65c6b64bfe7fe36bd19c85015551919290917f8a35acfbc15ff81a39ae7d344fd709f28e8600b4aa8c65c6b64bfe7fe36bd19d9091019061034c9082610e8f565b5050508185336001600160a01b03167f5b89fcc758ee4d9d8841986019cd2bb83213389a619b54baff9ec2ec9944e7a7878760405161038c929190610f4f565b60405180910390a45b5050505050565b6000546001600160a01b03166103b157600080fd5b60005460405163117c72b360e11b8152600481018390526001600160a01b03909116906322f8e56690602401600060405180830381600087803b1580156103f757600080fd5b505af1158015610395573d6000803e3d6000fd5b600080546001600160a01b0316156104975760008054906101000a90046001600160a01b03166001600160a01b03166329cb924d6040518163ffffffff1660e01b8152600401602060405180830381865afa15801561046e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104929190610f68565b905090565b504290565b604080516060808201835260008083526020830152918101919091526000828152600360205260409020805460ff166105135760405162461bcd60e51b815260206004820152601460248201527314995c5d595cdd081251081b9bdd08199bdd5b9960621b60448201526064015b60405180910390fd5b600481600101548154811061052a5761052a610f81565b9060005260206000209060030201604051806060016040529081600082015481526020016001820154815260200160028201805461056790610e07565b80601f016020809104026020016040519081016040528092919081815260200182805461059390610e07565b80156105e05780601f106105b5576101008083540402835291602001916105e0565b820191906000526020600020905b8154815290600101906020018083116105c357829003601f168201915b505050505081525050915050919050565b60008060026000610603878787610ae0565b81526020810191909152604001600020805490915060ff1661062457600080fd5b60010154949350505050565b60008060026000610642878787610ae0565b815260208101919091526040016000205460ff1695945050505050565b60606004805480602002602001604051908101604052809291908181526020016000905b8282101561075b578382906000526020600020906003020160405180606001604052908160008201548152602001600182015481526020016002820180546106ca90610e07565b80601f01602080910402602001604051908101604052809291908181526020018280546106f690610e07565b80156107435780601f1061071857610100808354040283529160200191610743565b820191906000526020600020905b81548152906001019060200180831161072657829003601f168201915b50505050508152505081526020019060010190610683565b50505050905090565b6000610771858585610ae0565b9050604051806060016040528060011515815260200183815260200161079561040b565b905260008281526002602081815260408084208551815460ff1916901515178155858301516001820155948101519490920193909355600390925220805460ff166108385760405162461bcd60e51b815260206004820152602d60248201527f43616e2774207075736820707269636573207468617420686176656e2774206260448201526c19595b881c995c5d595cdd1959609a1b606482015260840161050a565b6001808201546000848152600360205260408120805460ff1916815583018190556004549192909161086a9190610f97565b90508181146109a05760006004828154811061088857610888610f81565b90600052602060002090600302019050826003600061093c846000015485600101548660020180546108b990610e07565b80601f01602080910402602001604051908101604052809291908181526020018280546108e590610e07565b80156109325780601f1061090757610100808354040283529160200191610932565b820191906000526020600020905b81548152906001019060200180831161091557829003601f168201915b5050505050610ae0565b815260200190815260200160002060010181905550806004848154811061096557610965610f81565b906000526020600020906003020160008201548160000155600182015481600101556002820181600201908161099b9190610fbe565b505050505b60048054806109b1576109b1611091565b60008281526020812060036000199093019283020181815560018101829055906109de6002830182610b16565b505090558388336001600160a01b03167f01aba42f88d71f240ed63f6e0b37e62ba65f3d4bc0f11228ef9163cdc56c64b58a8a8a604051610a21939291906110a7565b60405180910390a45050505050505050565b6000610a3e8361049c565b9050610a5881600001518260200151836040015185610764565b505050565b6001546040516302abf57960e61b8152721259195b9d1a599a595c95da1a5d195b1a5cdd606a1b60048201526000916001600160a01b03169063aafd5e4090602401602060405180830381865afa158015610abc573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061049291906110d0565b6000838383604051602001610af7939291906110f9565b6040516020818303038152906040528051906020012090509392505050565b508054610b2290610e07565b6000825580601f10610b32575050565b601f016020900490600052602060002090810190610b509190610b53565b50565b5b80821115610b685760008155600101610b54565b5090565b634e487b7160e01b600052604160045260246000fd5b600082601f830112610b9357600080fd5b813567ffffffffffffffff80821115610bae57610bae610b6c565b604051601f8301601f19908116603f01168101908282118183101715610bd657610bd6610b6c565b81604052838152866020858801011115610bef57600080fd5b836020870160208301376000602085830101528094505050505092915050565b600080600060608486031215610c2457600080fd5b8335925060208401359150604084013567ffffffffffffffff811115610c4957600080fd5b610c5586828701610b82565b9150509250925092565b600060208284031215610c7157600080fd5b5035919050565b6000815180845260005b81811015610c9e57602081850181015186830182015201610c82565b506000602082860101526020601f19601f83011685010191505092915050565b80518252602081015160208301526000604082015160606040850152610ce76060850182610c78565b949350505050565b602081526000610d026020830184610cbe565b9392505050565b6000602080830181845280855180835260408601915060408160051b870101925083870160005b82811015610d5e57603f19888603018452610d4c858351610cbe565b94509285019290850190600101610d30565b5092979650505050505050565b60008060008060808587031215610d8157600080fd5b8435935060208501359250604085013567ffffffffffffffff811115610da657600080fd5b610db287828801610b82565b949793965093946060013593505050565b60008060408385031215610dd657600080fd5b50508035926020909101359150565b600060208284031215610df757600080fd5b81518015158114610d0257600080fd5b600181811c90821680610e1b57607f821691505b602082108103610e3b57634e487b7160e01b600052602260045260246000fd5b50919050565b601f821115610a5857600081815260208120601f850160051c81016020861015610e685750805b601f850160051c820191505b81811015610e8757828155600101610e74565b505050505050565b815167ffffffffffffffff811115610ea957610ea9610b6c565b610ebd81610eb78454610e07565b84610e41565b602080601f831160018114610ef25760008415610eda5750858301515b600019600386901b1c1916600185901b178555610e87565b600085815260208120601f198616915b82811015610f2157888601518255948401946001909101908401610f02565b5085821015610f3f5787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b828152604060208201526000610ce76040830184610c78565b600060208284031215610f7a57600080fd5b5051919050565b634e487b7160e01b600052603260045260246000fd5b81810381811115610fb857634e487b7160e01b600052601160045260246000fd5b92915050565b818103610fc9575050565b610fd38254610e07565b67ffffffffffffffff811115610feb57610feb610b6c565b610ff981610eb78454610e07565b6000601f82116001811461102d57600083156110155750848201545b600019600385901b1c1916600184901b178455610395565b600085815260209020601f19841690600086815260209020845b838110156110675782860154825560019586019590910190602001611047565b5085831015610f3f5793015460001960f8600387901b161c19169092555050600190811b01905550565b634e487b7160e01b600052603160045260246000fd5b8381526060602082015260006110c06060830185610c78565b9050826040830152949350505050565b6000602082840312156110e257600080fd5b81516001600160a01b0381168114610d0257600080fd5b8381528260208201526060604082015260006111186060830184610c78565b9594505050505056fea2646970667358221220f4b1e35f6eb1f5816327034316343d8b6a7a59647aab0193187ab03600ae070964736f6c63430008100033a264697066735822122055db8847a4d7601c142031cd5c9ebcf936788623236ed26aff77f30c70420aeb64736f6c6343000810003360806040523480156200001157600080fd5b5060405162000cff38038062000cff833981016040819052620000349162000139565b828260036200004483826200024d565b5060046200005382826200024d565b50506005805460ff191660ff93909316929092179091555062000319915050565b634e487b7160e01b600052604160045260246000fd5b600082601f8301126200009c57600080fd5b81516001600160401b0380821115620000b957620000b962000074565b604051601f8301601f19908116603f01168101908282118183101715620000e457620000e462000074565b816040528381526020925086838588010111156200010157600080fd5b600091505b8382101562000125578582018301518183018401529082019062000106565b600093810190920192909252949350505050565b6000806000606084860312156200014f57600080fd5b83516001600160401b03808211156200016757600080fd5b62000175878388016200008a565b945060208601519150808211156200018c57600080fd5b506200019b868287016200008a565b925050604084015160ff81168114620001b357600080fd5b809150509250925092565b600181811c90821680620001d357607f821691505b602082108103620001f457634e487b7160e01b600052602260045260246000fd5b50919050565b601f8211156200024857600081815260208120601f850160051c81016020861015620002235750805b601f850160051c820191505b8181101562000244578281556001016200022f565b5050505b505050565b81516001600160401b0381111562000269576200026962000074565b62000281816200027a8454620001be565b84620001fa565b602080601f831160018114620002b95760008415620002a05750858301515b600019600386901b1c1916600185901b17855562000244565b600085815260208120601f198616915b82811015620002ea57888601518255948401946001909101908401620002c9565b5085821015620003095787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b6109d680620003296000396000f3fe608060405234801561001057600080fd5b50600436106100b45760003560e01c80633950935111610071578063395093511461014957806370a082311461015c57806395d89b4114610185578063a457c2d71461018d578063a9059cbb146101a0578063dd62ed3e146101b357600080fd5b806306fdde03146100b957806308bca566146100d7578063095ea7b3146100ec57806318160ddd1461010f57806323b872dd14610121578063313ce56714610134575b600080fd5b6100c16101ec565b6040516100ce9190610820565b60405180910390f35b6100ea6100e536600461088a565b61027e565b005b6100ff6100fa36600461088a565b61028c565b60405190151581526020016100ce565b6002545b6040519081526020016100ce565b6100ff61012f3660046108b4565b6102a6565b60055460405160ff90911681526020016100ce565b6100ff61015736600461088a565b6102ca565b61011361016a3660046108f0565b6001600160a01b031660009081526020819052604090205490565b6100c1610309565b6100ff61019b36600461088a565b610318565b6100ff6101ae36600461088a565b6103af565b6101136101c1366004610912565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b6060600380546101fb90610945565b80601f016020809104026020016040519081016040528092919081815260200182805461022790610945565b80156102745780601f1061024957610100808354040283529160200191610274565b820191906000526020600020905b81548152906001019060200180831161025757829003601f168201915b5050505050905090565b61028882826103bd565b5050565b60003361029a81858561049c565b60019150505b92915050565b6000336102b48582856105c0565b6102bf858585610652565b506001949350505050565b3360008181526001602090815260408083206001600160a01b038716845290915281205490919061029a908290869061030490879061097f565b61049c565b6060600480546101fb90610945565b3360008181526001602090815260408083206001600160a01b0387168452909152812054909190838110156103a25760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b60648201526084015b60405180910390fd5b6102bf828686840361049c565b60003361029a818585610652565b6001600160a01b0382166104135760405162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f2061646472657373006044820152606401610399565b8060026000828254610425919061097f565b90915550506001600160a01b0382166000908152602081905260408120805483929061045290849061097f565b90915550506040518181526001600160a01b038316906000907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9060200160405180910390a35050565b6001600160a01b0383166104fe5760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b6064820152608401610399565b6001600160a01b03821661055f5760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b6064820152608401610399565b6001600160a01b0383811660008181526001602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b6001600160a01b03838116600090815260016020908152604080832093861683529290522054600019811461064c578181101561063f5760405162461bcd60e51b815260206004820152601d60248201527f45524332303a20696e73756666696369656e7420616c6c6f77616e63650000006044820152606401610399565b61064c848484840361049c565b50505050565b6001600160a01b0383166106b65760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b6064820152608401610399565b6001600160a01b0382166107185760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b6064820152608401610399565b6001600160a01b038316600090815260208190526040902054818110156107905760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b6064820152608401610399565b6001600160a01b038085166000908152602081905260408082208585039055918516815290812080548492906107c790849061097f565b92505081905550826001600160a01b0316846001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8460405161081391815260200190565b60405180910390a361064c565b600060208083528351808285015260005b8181101561084d57858101830151858201604001528201610831565b506000604082860101526040601f19601f8301168501019250505092915050565b80356001600160a01b038116811461088557600080fd5b919050565b6000806040838503121561089d57600080fd5b6108a68361086e565b946020939093013593505050565b6000806000606084860312156108c957600080fd5b6108d28461086e565b92506108e06020850161086e565b9150604084013590509250925092565b60006020828403121561090257600080fd5b61090b8261086e565b9392505050565b6000806040838503121561092557600080fd5b61092e8361086e565b915061093c6020840161086e565b90509250929050565b600181811c9082168061095957607f821691505b60208210810361097957634e487b7160e01b600052602260045260246000fd5b50919050565b808201808211156102a057634e487b7160e01b600052601160045260246000fdfea264697066735822122079aea89302a931b65938f5024ef67c57f346deaaa1f56bc95931901dcbfee84264736f6c6343000810003360a06040523480156200001157600080fd5b5060405162003e9638038062003e9683398101604081905262000034916200065e565b6000805460ff191660011790558084848462000057620000513390565b620000a8565b6001600160a01b0383166080526200007982826706f05b59d3b2000062000101565b5050600780546001600160a01b0319166001600160a01b039390931692909217909155506200076d9350505050565b600080546001600160a01b03838116610100818102610100600160a81b0319851617855560405193049190911692909183917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a35050565b6000546001600160a01b03610100909104163314620001675760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064015b60405180910390fd5b670de0b6b3a7640000811115620001c15760405162461bcd60e51b815260206004820152601c60248201527f4275726e656420626f6e642070657263656e74616765203e203130300000000060448201526064016200015e565b60008111620002135760405162461bcd60e51b815260206004820152601b60248201527f4275726e656420626f6e642070657263656e746167652069732030000000000060448201526064016200015e565b6005819055600680546001600160401b038416600160a01b026001600160e01b03199091166001600160a01b03861617179055620002616b082a6a68aa4a8bea8a4aaa8960a31b84620002b8565b604080516001600160a01b03851681526001600160401b03841660208201529081018290527fd0f09246d369018534c67fec6a6c3259c6f962ef82c5521c337ae0ccc104e4bd9060600160405180910390a1505050565b6080516040516302abf57960e61b8152654f7261636c6560d01b60048201526001600160a01b039091169063aafd5e4090602401602060405180830381865afa1580156200030a573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620003309190620006d1565b600180546001600160a01b0319166001600160a01b03929092169190911790556200035a62000523565b6001600160a01b03166390978d1b836040518263ffffffff1660e01b81526004016200038891815260200190565b602060405180830381865afa158015620003a6573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620003cc9190620006f8565b6000838152600360205260409020805460ff1916911515919091179055620003f3620005b9565b604051631d1d5b3960e11b81526001600160a01b0383811660048301529190911690633a3ab67290602401602060405180830381865afa1580156200043c573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620004629190620006f8565b6001600160a01b0382166000908152600260205260409020805460ff1916911515919091179055620004936200060b565b604051635b97aadd60e01b81526001600160a01b0383811660048301529190911690635b97aadd90602401602060405180830381865afa158015620004dc573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200050291906200071c565b516001600160a01b0390911660009081526002602052604090206001015550565b6080516040516302abf57960e61b81527f4964656e74696669657257686974656c6973740000000000000000000000000060048201526000916001600160a01b03169063aafd5e40906024015b602060405180830381865afa1580156200058e573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620005b49190620006d1565b905090565b6080516040516302abf57960e61b81527f436f6c6c61746572616c57686974656c6973740000000000000000000000000060048201526000916001600160a01b03169063aafd5e409060240162000570565b6080516040516302abf57960e61b81526453746f726560d81b60048201526000916001600160a01b03169063aafd5e409060240162000570565b6001600160a01b03811681146200065b57600080fd5b50565b600080600080608085870312156200067557600080fd5b8451620006828162000645565b6020860151909450620006958162000645565b60408601519093506001600160401b0381168114620006b357600080fd5b6060860151909250620006c68162000645565b939692955090935050565b600060208284031215620006e457600080fd5b8151620006f18162000645565b9392505050565b6000602082840312156200070b57600080fd5b81518015158114620006f157600080fd5b6000602082840312156200072f57600080fd5b604051602081016001600160401b03811182821017156200076057634e487b7160e01b600052604160045260246000fd5b6040529151825250919050565b6080516136f1620007a560003960008181610578015281816116df01528181611fa701528181612607015261266c01526136f16000f3fe608060405234801561001057600080fd5b50600436106101c45760003560e01c80638da5cb5b116100f9578063b9a3c84c11610097578063da03b36e11610071578063da03b36e146106a4578063e39dfd7f146106b3578063f2fde38b146106c6578063fe4e1983146106d957600080fd5b8063b9a3c84c14610573578063d509b0171461059a578063d60715b5146105b057600080fd5b8063a7af2d0f116100d3578063a7af2d0f1461050d578063a865578514610520578063ac9650d814610533578063afedba4f1461055357600080fd5b80638da5cb5b146104d15780638ea2f2ab146104e7578063a6a22b43146104fa57600080fd5b80634360af3d11610166578063707621571161014057806370762157146102bf578063715018a614610303578063827625201461030b578063883028841461031e57600080fd5b80634360af3d14610266578063530dd392146102795780636457c979146102ac57600080fd5b806322f8e566116101a257806322f8e5661461022357806329cb924d1461023857806336b13af4146102405780634124beef1461025357600080fd5b806308e7c3e6146101c95780631c39c38d146101e557806320402e1d14610210575b600080fd5b6101d260055481565b6040519081526020015b60405180910390f35b6007546101f8906001600160a01b031681565b6040516001600160a01b0390911681526020016101dc565b6006546101f8906001600160a01b031681565b610236610231366004612c90565b61070b565b005b6101d2610781565b6101d261024e366004612cce565b610790565b610236610261366004612c90565b610817565b6101d2610274366004612d50565b610be1565b61029c610287366004612c90565b60036020526000908152604090205460ff1681565b60405190151581526020016101dc565b6101d26102ba366004612df1565b610c1c565b6102ec6102cd366004612d50565b6002602052600090815260409020805460019091015460ff9091169082565b6040805192151583526020830191909152016101dc565b610236611233565b610236610319366004612ee1565b61126f565b6104c461032c366004612c90565b6040805161022081018252600061018082018181526101a083018290526101c083018290526101e083018290526102008301829052825260208201819052918101829052606081018290526080810182905260a0810182905260c0810182905260e0810182905261010081018290526101208101829052610140810182905261016081019190915250600090815260046020818152604092839020835161022081018552815460ff80821615156101808401908152610100808404831615156101a0860152620100008404831615156101c08601526001600160a01b03630100000090940484166101e0860152600186015484166102008601529084526002850154808416968501969096526001600160401b03600160a01b808804821699860199909952600160e01b96879004831615156060860152600386015480851660808701529889041660a085015294909604909516151560c08201529281015460e08401526005810154918301919091526006810154610120830152600781015483166101408301526008015490911661016082015290565b6040516101dc9190612f61565b60005461010090046001600160a01b03166101f8565b61029c6104f5366004612c90565b6113ea565b61023661050836600461303b565b611422565b6001546101f8906001600160a01b031681565b61023661052e36600461303b565b6116c1565b61054661054136600461306b565b611935565b6040516101dc919061312f565b610566610561366004612c90565b611a8c565b6040516101dc9190613191565b6101f87f000000000000000000000000000000000000000000000000000000000000000081565b6101d26b082a6a68aa4a8bea8a4aaa8960a31b81565b61068c6105be366004612c90565b600460208181526000928352604092839020835160a081018552815460ff808216151583526101008204811615159483019490945262010000810484161515958201959095526001600160a01b0363010000009095048516606082015260018201548516608082015260028201546003830154948301546005840154600685015460078601546008909601549498848116986001600160401b03600160a01b80880482169a600160e01b9889900481169a8486169a928504909316989093049092169594939290811691168c565b6040516101dc9c9b9a999897969594939291906131a4565b6101d2670de0b6b3a764000081565b61029c6106c1366004612c90565b611a97565b6102366106d4366004612d50565b611c15565b6006546106f390600160a01b90046001600160401b031681565b6040516001600160401b0390911681526020016101dc565b6007546001600160a01b031661072057600080fd5b60075460405163117c72b360e11b8152600481018390526001600160a01b03909116906322f8e56690602401600060405180830381600087803b15801561076657600080fd5b505af115801561077a573d6000803e3d6000fd5b5050505050565b600061078b611cb3565b905090565b600061080d84848080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201829052506006548894509092508291506001600160401b03600160a01b820416906001600160a01b03166107f681610be1565b6b082a6a68aa4a8bea8a4aaa8960a31b6000610c1c565b90505b9392505050565b61081f611d43565b61082e6000805460ff19169055565b600081815260046020526040902060028101546001600160a01b03166108965760405162461bcd60e51b8152602060048201526018602482015277105cdcd95c9d1a5bdb88191bd95cc81b9bdd08195e1a5cdd60421b60448201526064015b60405180910390fd5b6002810154600160e01b900460ff16156108f25760405162461bcd60e51b815260206004820152601960248201527f417373657274696f6e20616c726561647920736574746c656400000000000000604482015260640161088d565b60028101805460ff60e01b1916600160e01b17905560088101546001600160a01b0316610a1857610921610781565b6003820154600160a01b90046001600160401b0316111561097c5760405162461bcd60e51b8152602060048201526015602482015274105cdcd95c9d1a5bdb881b9bdd08195e1c1a5c9959605a1b604482015260640161088d565b60038101805460ff60e01b198116600160e01b17909155600282015460068301546109b4926001600160a01b03908116921690611d95565b6109bf826001611dfd565b6002810154604080516000815260016020820152338183015290516001600160a01b039092169184917ff4fa324b13daeb4e1aae736c2553632ae0fb16fb31f2d4da8ac99fd056313a13919081900360600190a3610bcb565b60058101546002820154600091610a4191859190600160a01b90046001600160401b0316611f04565b8254909150610100900460ff1615610a675760038201805460ff60e01b19169055610a89565b60038201805460ff60e01b1916670de0b6b3a76400008314600160e01b021790555b6000670de0b6b3a76400008214610aad5760088301546001600160a01b0316610abc565b60028301546001600160a01b03165b90506000670de0b6b3a76400008460060154600554610adb919061323b565b610ae59190613270565b905060008185600601546002610afb919061323b565b610b059190613292565b9050610b27610b12611f87565b60038701546001600160a01b03169084611d95565b6003850154610b40906001600160a01b03168483611d95565b8454610100900460ff16610b68576003850154610b68908790600160e01b900460ff16611dfd565b60038501546040805160018152600160e01b90920460ff161515602083015233908201526001600160a01b0384169087907ff4fa324b13daeb4e1aae736c2553632ae0fb16fb31f2d4da8ac99fd056313a139060600160405180910390a3505050505b50610bde6000805460ff19166001179055565b50565b6001600160a01b038116600090815260026020526040812060010154600554610c1282670de0b6b3a764000061323b565b6108109190613270565b6000610c26611d43565b610c356000805460ff19169055565b6000610c3f610781565b9050610c5a8b86836001600160401b03168a8a8e8e8b61201b565b91506001600160a01b038a16610ca75760405162461bcd60e51b8152602060048201526012602482015271041737365727465722063616e7420626520360741b604482015260640161088d565b6000828152600460205260409020600201546001600160a01b031615610d0f5760405162461bcd60e51b815260206004820152601860248201527f417373657274696f6e20616c7265616479206578697374730000000000000000604482015260640161088d565b610d1884612062565b610d5d5760405162461bcd60e51b81526020600482015260166024820152752ab739bab83837b93a32b21034b232b73a34b334b2b960511b604482015260640161088d565b610d668661211b565b610da95760405162461bcd60e51b8152602060048201526014602482015273556e737570706f727465642063757272656e637960601b604482015260640161088d565b610db286610be1565b851015610df75760405162461bcd60e51b8152602060048201526013602482015272426f6e6420616d6f756e7420746f6f206c6f7760681b604482015260640161088d565b6040805161022081018252600061018082018181526101a083018290526101c08301829052336101e08401526001600160a01b038c81166102008501529083528d811660208401526001600160401b038516938301939093526060820152908716608082015260a08101610e6b89846132a5565b6001600160401b031681526020016000151581526020018481526020018581526020018681526020018a6001600160a01b0316815260200160006001600160a01b03168152506004600084815260200190815260200160002060008201518160000160008201518160000160006101000a81548160ff02191690831515021790555060208201518160000160016101000a81548160ff02191690831515021790555060408201518160000160026101000a81548160ff02191690831515021790555060608201518160000160036101000a8154816001600160a01b0302191690836001600160a01b0316021790555060808201518160010160006101000a8154816001600160a01b0302191690836001600160a01b03160217905550505060208201518160020160006101000a8154816001600160a01b0302191690836001600160a01b0316021790555060408201518160020160146101000a8154816001600160401b0302191690836001600160401b03160217905550606082015181600201601c6101000a81548160ff02191690831515021790555060808201518160030160006101000a8154816001600160a01b0302191690836001600160a01b0316021790555060a08201518160030160146101000a8154816001600160401b0302191690836001600160401b0316021790555060c082015181600301601c6101000a81548160ff02191690831515021790555060e08201518160040155610100820151816005015561012082015181600601556101408201518160070160006101000a8154816001600160a01b0302191690836001600160a01b031602179055506101608201518160080160006101000a8154816001600160a01b0302191690836001600160a01b0316021790555090505060006111078361227d565b8051909150156111515760405162461bcd60e51b8152602060048201526015602482015274105cdcd95c9d1a5bdb881b9bdd08185b1b1bddd959605a1b604482015260640161088d565b6000838152600460209081526040918290209083015191830151606090930151815462ffff001916620100009115159190910261ff00191617610100931515939093029290921760ff19169015151790556111b76001600160a01b038716333088612352565b838a6001600160a01b0316837fdb1513f0abeb57a364db56aa3eb52015cca5268f00fd67bc73aaf22bccab02b7868f8e8e338f8a6111f591906132a5565b8f8f60405161120b9897969594939291906132c5565b60405180910390a4506112266000805460ff19166001179055565b9998505050505050505050565b6000546001600160a01b036101009091041633146112635760405162461bcd60e51b815260040161088d90613327565b61126d600061238a565b565b6000546001600160a01b0361010090910416331461129f5760405162461bcd60e51b815260040161088d90613327565b670de0b6b3a76400008111156112f75760405162461bcd60e51b815260206004820152601c60248201527f4275726e656420626f6e642070657263656e74616765203e2031303000000000604482015260640161088d565b600081116113475760405162461bcd60e51b815260206004820152601b60248201527f4275726e656420626f6e642070657263656e7461676520697320300000000000604482015260640161088d565b6005819055600680546001600160401b038416600160a01b026001600160e01b03199091166001600160a01b038616171790556113936b082a6a68aa4a8bea8a4aaa8960a31b846116c1565b604080516001600160a01b03851681526001600160401b03841660208201529081018290527fd0f09246d369018534c67fec6a6c3259c6f962ef82c5521c337ae0ccc104e4bd9060600160405180910390a1505050565b600081815260046020526040812060020154600160e01b900460ff166114135761141382610817565b61141c82611a97565b92915050565b61142a611d43565b6114396000805460ff19169055565b6001600160a01b0381166114855760405162461bcd60e51b8152602060048201526013602482015272044697370757465722063616e2774206265203606c1b604482015260640161088d565b600082815260046020526040902060028101546001600160a01b03166114e85760405162461bcd60e51b8152602060048201526018602482015277105cdcd95c9d1a5bdb88191bd95cc81b9bdd08195e1a5cdd60421b604482015260640161088d565b60088101546001600160a01b0316156115435760405162461bcd60e51b815260206004820152601a60248201527f417373657274696f6e20616c7265616479206469737075746564000000000000604482015260640161088d565b61154b610781565b6003820154600160a01b90046001600160401b0316116115a45760405162461bcd60e51b8152602060048201526014602482015273105cdcd95c9d1a5bdb881a5cc8195e1c1a5c995960621b604482015260640161088d565b6115ad836123e3565b6115ef5760405162461bcd60e51b8152602060048201526013602482015272111a5cdc1d5d19481b9bdd08185b1b1bddd959606a1b604482015260640161088d565b6008810180546001600160a01b0319166001600160a01b03848116919091179091556006820154600383015461162a92169033903090612352565b6005810154600282015461164f918591600160a01b90046001600160401b031661249f565b61165883612516565b8054610100900460ff161561167257611672836000611dfd565b6040516001600160a01b03831690339085907f60133788b013c89f2a3756dbc47e3484997b87bd7e0af98a7d70232032c1ce2b90600090a4506116bd6000805460ff19166001179055565b5050565b6040516302abf57960e61b8152654f7261636c6560d01b60048201527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03169063aafd5e4090602401602060405180830381865afa15801561172e573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611752919061335c565b600180546001600160a01b0319166001600160a01b039290921691909117905561177a6125d9565b6001600160a01b03166390978d1b836040518263ffffffff1660e01b81526004016117a791815260200190565b602060405180830381865afa1580156117c4573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906117e89190613389565b6000838152600360205260409020805460ff191691151591909117905561180d61263e565b604051631d1d5b3960e11b81526001600160a01b0383811660048301529190911690633a3ab67290602401602060405180830381865afa158015611855573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906118799190613389565b6001600160a01b0382166000908152600260205260409020805460ff19169115159190911790556118a8611f87565b604051635b97aadd60e01b81526001600160a01b0383811660048301529190911690635b97aadd90602401602060405180830381865afa1580156118f0573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061191491906133a4565b516001600160a01b0390911660009081526002602052604090206001015550565b6060816001600160401b0381111561194f5761194f612d6d565b60405190808252806020026020018201604052801561198257816020015b606081526020019060019003908161196d5790505b50905060005b82811015611a8557600080308686858181106119a6576119a66133e5565b90506020028101906119b891906133fb565b6040516119c6929190613448565b600060405180830381855af49150503d8060008114611a01576040519150601f19603f3d011682016040523d82523d6000602084013e611a06565b606091505b509150915081611a5257604481511015611a1f57600080fd5b60048101905080806020019051810190611a399190613458565b60405162461bcd60e51b815260040161088d9190613191565b80848481518110611a6557611a656133e5565b602002602001018190525050508080611a7d906134ce565b915050611988565b5092915050565b606061141c826126a3565b6000818152600460208181526040808420815161022081018352815460ff80821615156101808401908152610100808404831615156101a0860152620100008404831615156101c08601526001600160a01b03630100000090940484166101e0860152600186015484166102008601529084526002850154808416978501979097526001600160401b03600160a01b808904821697860197909752600160e01b97889004831615156060860152600386015480851660808701529687041660a085015295909404909316151560c08201529381015460e085015260058101549284019290925260068201546101208401526007820154811661014084015260089091015416610160820181905215801590611bb457508051602001515b15611bc25750600092915050565b8060600151611c0b5760405162461bcd60e51b8152602060048201526015602482015274105cdcd95c9d1a5bdb881b9bdd081cd95d1d1b1959605a1b604482015260640161088d565b60c0015192915050565b6000546001600160a01b03610100909104163314611c455760405162461bcd60e51b815260040161088d90613327565b6001600160a01b038116611caa5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b606482015260840161088d565b610bde8161238a565b6007546000906001600160a01b031615611d3e57600760009054906101000a90046001600160a01b03166001600160a01b03166329cb924d6040518163ffffffff1660e01b8152600401602060405180830381865afa158015611d1a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061078b91906134e7565b504290565b60005460ff1661126d5760405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c00604482015260640161088d565b6040516001600160a01b038316602482015260448101829052611df890849063a9059cbb60e01b906064015b60408051601f198184030181529190526020810180516001600160e01b03166001600160e01b031990931692909217909152612729565b505050565b600082815260046020526040902060078101546001909101546001600160a01b0391821691168115611e8c576040516378d8ab5960e11b81526004810185905283151560248201526001600160a01b0383169063f1b156b290604401600060405180830381600087803b158015611e7357600080fd5b505af1158015611e87573d6000803e3d6000fd5b505050505b6001600160a01b03811615611efe576040516378d8ab5960e11b81526004810185905283151560248201526001600160a01b0382169063f1b156b290604401600060405180830381600087803b158015611ee557600080fd5b505af1158015611ef9573d6000803e3d6000fd5b505050505b50505050565b6000611f0f846127fb565b6001600160a01b031663719c6d568484611f28886126a3565b6040518463ffffffff1660e01b8152600401611f4693929190613500565b602060405180830381865afa158015611f63573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061080d91906134e7565b6040516302abf57960e61b81526453746f726560d81b60048201526000907f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03169063aafd5e40906024015b602060405180830381865afa158015611ff7573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061078b919061335c565b600088888888888888883360405160200161203e9998979695949392919061351f565b60405160208183030381529060405280519060200120905098975050505050505050565b60008181526003602052604081205460ff161561208157506001919050565b6120896125d9565b6001600160a01b03166390978d1b836040518263ffffffff1660e01b81526004016120b691815260200190565b602060405180830381865afa1580156120d3573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906120f79190613389565b600092835260036020526040909220805460ff191692151592831790555060ff1690565b6001600160a01b03811660009081526002602052604081205460ff161561214457506001919050565b61214c61263e565b604051631d1d5b3960e11b81526001600160a01b0384811660048301529190911690633a3ab67290602401602060405180830381865afa158015612194573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906121b89190613389565b6001600160a01b0383166000908152600260205260409020805460ff19169115159190911790556121e7611f87565b604051635b97aadd60e01b81526001600160a01b0384811660048301529190911690635b97aadd90602401602060405180830381865afa15801561222f573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061225391906133a4565b516001600160a01b0390921660009081526002602052604090206001810192909255505460ff1690565b6040805160808101825260008082526020808301829052828401829052606083018290528482526004905291909120600101546001600160a01b0316806122e9575050604080516080810182526000808252602082018190529181018290526060810191909152919050565b60405163a6b011a760e01b8152600481018490526001600160a01b0382169063a6b011a790602401608060405180830381865afa15801561232e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108109190613587565b6040516001600160a01b0380851660248301528316604482015260648101829052611efe9085906323b872dd60e01b90608401611dc1565b600080546001600160a01b03838116610100818102610100600160a81b0319851617855560405193049190911692909183917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a35050565b60008181526004602052604081205462010000900460ff1661240757506001919050565b6000828152600460205260409020600101546001600160a01b0316806124305750600192915050565b604051636b915d9160e01b8152600481018490523360248201526001600160a01b03821690636b915d9190604401602060405180830381865afa15801561247b573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108109190613389565b6124a8836127fb565b6001600160a01b031663216666a483836124c1876126a3565b6040518463ffffffff1660e01b81526004016124df93929190613500565b600060405180830381600087803b1580156124f957600080fd5b505af115801561250d573d6000803e3d6000fd5b50505050505050565b600081815260046020526040902060078101546001909101546001600160a01b039182169116811561259d57604051633512293b60e21b8152600481018490526001600160a01b0383169063d448a4ec90602401600060405180830381600087803b15801561258457600080fd5b505af1158015612598573d6000803e3d6000fd5b505050505b6001600160a01b03811615611df857604051633512293b60e21b8152600481018490526001600160a01b0382169063d448a4ec906024016124df565b6040516302abf57960e61b8152721259195b9d1a599a595c95da1a5d195b1a5cdd606a1b60048201526000907f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03169063aafd5e4090602401611fda565b6040516302abf57960e61b81527210dbdb1b185d195c985b15da1a5d195b1a5cdd606a1b60048201526000907f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03169063aafd5e4090602401611fda565b606061141c6126e5604051806020016040528060008152506040518060400160405280600b81526020016a185cdcd95c9d1a5bdb925960aa1b81525085612843565b604080518082018252600a81526937b7a0b9b9b2b93a32b960b11b6020808301919091526000878152600490915291909120600201546001600160a01b0316612889565b600061277e826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b03166128a49092919063ffffffff16565b805190915015611df8578080602001905181019061279c9190613389565b611df85760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b606482015260840161088d565b60008181526004602052604081205460ff1615612832576000828152600460205260409020600101546001600160a01b031661141c565b50506001546001600160a01b031690565b6060600061285185856128b3565b9050848161285e856128f5565b60405160200161287093929190613603565b6040516020818303038152906040529150509392505050565b6060600061289785856128b3565b9050848161285e85612936565b606061080d848460008561298d565b8151606090156128e457816040516020016128ce9190613646565b604051602081830303815290604052905061141c565b816040516020016128ce919061367a565b6060612904608083901c612abe565b61290d83612abe565b6040805160208101939093528201526060015b6040516020818303038152906040529050919050565b606061294e6001600160801b03602084901c16612abe565b6129698360601b6bffffffffffffffffffffffff1916612abe565b6040516020016129209291909182526001600160c01b031916602082015260280190565b6060824710156129ee5760405162461bcd60e51b815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f6044820152651c8818d85b1b60d21b606482015260840161088d565b6001600160a01b0385163b612a455760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000604482015260640161088d565b600080866001600160a01b03168587604051612a61919061369f565b60006040518083038185875af1925050503d8060008114612a9e576040519150601f19603f3d011682016040523d82523d6000602084013e612aa3565b606091505b5091509150612ab3828286612c57565b979650505050505050565b6000808260001c9050806001600160801b03169050806801000000000000000002811777ffffffffffffffff0000000000000000ffffffffffffffff169050806401000000000281177bffffffff00000000ffffffff00000000ffffffff00000000ffffffff16905080620100000281177dffff0000ffff0000ffff0000ffff0000ffff0000ffff0000ffff0000ffff169050806101000281177eff00ff00ff00ff00ff00ff00ff00ff00ff00ff00ff00ff00ff00ff00ff00ff1690508060100281177f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f16905060006008827f08080808080808080808080808080808080808080808080808080808080808081681612bd957612bd961325a565b0460047f040404040404040404040404040404040404040404040404040404040404040484160460027f020202020202020202020202020202020202020202020202020202020202020285160417166027029091017f3030303030303030303030303030303030303030303030303030303030303030019392505050565b60608315612c66575081610810565b825115612c765782518084602001fd5b8160405162461bcd60e51b815260040161088d9190613191565b600060208284031215612ca257600080fd5b5035919050565b6001600160a01b0381168114610bde57600080fd5b8035612cc981612ca9565b919050565b600080600060408486031215612ce357600080fd5b83356001600160401b0380821115612cfa57600080fd5b818601915086601f830112612d0e57600080fd5b813581811115612d1d57600080fd5b876020828501011115612d2f57600080fd5b60209283019550935050840135612d4581612ca9565b809150509250925092565b600060208284031215612d6257600080fd5b813561081081612ca9565b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f191681016001600160401b0381118282101715612dab57612dab612d6d565b604052919050565b60006001600160401b03821115612dcc57612dcc612d6d565b50601f01601f191660200190565b80356001600160401b0381168114612cc957600080fd5b60008060008060008060008060006101208a8c031215612e1057600080fd5b89356001600160401b03811115612e2657600080fd5b8a01601f81018c13612e3757600080fd5b8035612e4a612e4582612db3565b612d83565b8181528d6020838501011115612e5f57600080fd5b81602084016020830137600060208383010152809b50505050612e8460208b01612cbe565b9750612e9260408b01612cbe565b9650612ea060608b01612cbe565b9550612eae60808b01612dda565b9450612ebc60a08b01612cbe565b935060c08a0135925060e08a013591506101008a013590509295985092959850929598565b600080600060608486031215612ef657600080fd5b8335612f0181612ca9565b9250612f0f60208501612dda565b9150604084013590509250925092565b8051151582526020808201511515908301526040808201511515908301526060808201516001600160a01b039081169184019190915260809182015116910152565b600061020082019050612f75828451612f1f565b60208301516001600160a01b0390811660a084015260408401516001600160401b031660c08401526060840151151560e084015260808401519081166101008085019190915260a08501519150610120612fd9818601846001600160401b03169052565b60c08601519250610140612ff08187018515159052565b60e08701516101608781019190915292870151610180870152908601516101a08601528501516001600160a01b039081166101c0860152908501519081166101e08501529050611a85565b6000806040838503121561304e57600080fd5b82359150602083013561306081612ca9565b809150509250929050565b6000806020838503121561307e57600080fd5b82356001600160401b038082111561309557600080fd5b818501915085601f8301126130a957600080fd5b8135818111156130b857600080fd5b8660208260051b85010111156130cd57600080fd5b60209290920196919550909350505050565b60005b838110156130fa5781810151838201526020016130e2565b50506000910152565b6000815180845261311b8160208601602086016130df565b601f01601f19169290920160200192915050565b6000602080830181845280855180835260408601915060408160051b870101925083870160005b8281101561318457603f19888603018452613172858351613103565b94509285019290850190600101613156565b5092979650505050505050565b6020815260006108106020830184613103565b61020081016131b3828f612f1f565b6001600160a01b039c8d1660a08301526001600160401b039b8c1660c083015299151560e0820152978b16610100890152959098166101208701529215156101408601526101608501919091526101808401526101a08301529284166101c0820152919092166101e090910152919050565b634e487b7160e01b600052601160045260246000fd5b600081600019048311821515161561325557613255613225565b500290565b634e487b7160e01b600052601260045260246000fd5b60008261328d57634e487b7160e01b600052601260045260246000fd5b500490565b8181038181111561141c5761141c613225565b6001600160401b03818116838216019080821115611a8557611a85613225565b60006101008a83528060208401526132df8184018b613103565b6001600160a01b03998a1660408501529789166060840152505093861660808501526001600160401b039290921660a084015290931660c082015260e0019190915292915050565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b60006020828403121561336e57600080fd5b815161081081612ca9565b80518015158114612cc957600080fd5b60006020828403121561339b57600080fd5b61081082613379565b6000602082840312156133b657600080fd5b604051602081018181106001600160401b03821117156133d8576133d8612d6d565b6040529151825250919050565b634e487b7160e01b600052603260045260246000fd5b6000808335601e1984360301811261341257600080fd5b8301803591506001600160401b0382111561342c57600080fd5b60200191503681900382131561344157600080fd5b9250929050565b8183823760009101908152919050565b60006020828403121561346a57600080fd5b81516001600160401b0381111561348057600080fd5b8201601f8101841361349157600080fd5b805161349f612e4582612db3565b8181528560208385010111156134b457600080fd5b6134c58260208301602086016130df565b95945050505050565b6000600182016134e0576134e0613225565b5060010190565b6000602082840312156134f957600080fd5b5051919050565b8381528260208201526060604082015260006134c56060830184613103565b60006101208083526135338184018d613103565b602084019b909b52505060408101979097526001600160401b039590951660608701526001600160a01b03938416608087015291831660a0860152821660c085015260e08401521661010090910152919050565b60006080828403121561359957600080fd5b604051608081018181106001600160401b03821117156135bb576135bb612d6d565b6040526135c783613379565b81526135d560208401613379565b60208201526135e660408401613379565b60408201526135f760608401613379565b60608201529392505050565b600084516136158184602089016130df565b8451908301906136298183602089016130df565b845191019061363c8183602088016130df565b0195945050505050565b600b60fa1b8152600082516136628160018501602087016130df565b601d60f91b6001939091019283015250600201919050565b6000825161368c8184602087016130df565b601d60f91b920191825250600101919050565b600082516136b18184602087016130df565b919091019291505056fea26469706673582212208308750472ceb2de8177ffaad79e9d6970ffe4f59d11183bf06a5727259eab7064736f6c63430008100033a26469706673582212207fdd7511568be4055da51babd1036239ffe3588af60945cd826026d56069d15b64736f6c6343000810003360a060405234801561001057600080fd5b5060405161087838038061087883398101604081905261002f91610040565b6001600160a01b0316608052610070565b60006020828403121561005257600080fd5b81516001600160a01b038116811461006957600080fd5b9392505050565b6080516107e861009060003960008181607b015260b701526107e86000f3fe608060405234801561001057600080fd5b506004361061002b5760003560e01c8063025ac24f14610030575b600080fd5b61004361003e36600461057b565b610055565b60405190815260200160405180910390f35b600061006c6001600160a01b03861633308761014c565b6100a06001600160a01b0386167f0000000000000000000000000000000000000000000000000000000000000000866101bd565b604051636457c97960e01b81526001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001690636457c979906100fc908c9033908d908d908d908d908d908d908d906004016106da565b6020604051808303816000875af115801561011b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061013f9190610748565b9998505050505050505050565b6040516001600160a01b03808516602483015283166044820152606481018290526101b79085906323b872dd60e01b906084015b60408051601f198184030181529190526020810180516001600160e01b03166001600160e01b0319909316929092179091526102dc565b50505050565b8015806102375750604051636eb1769f60e11b81523060048201526001600160a01b03838116602483015284169063dd62ed3e90604401602060405180830381865afa158015610211573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102359190610748565b155b6102a75760405162461bcd60e51b815260206004820152603660248201527f5361666545524332303a20617070726f76652066726f6d206e6f6e2d7a65726f60448201527520746f206e6f6e2d7a65726f20616c6c6f77616e636560501b60648201526084015b60405180910390fd5b6040516001600160a01b0383166024820152604481018290526102d790849063095ea7b360e01b90606401610180565b505050565b6000610331826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b03166103ae9092919063ffffffff16565b8051909150156102d7578080602001905181019061034f9190610761565b6102d75760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b606482015260840161029e565b60606103bd84846000856103c7565b90505b9392505050565b6060824710156104285760405162461bcd60e51b815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f6044820152651c8818d85b1b60d21b606482015260840161029e565b6001600160a01b0385163b61047f5760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000604482015260640161029e565b600080866001600160a01b0316858760405161049b9190610783565b60006040518083038185875af1925050503d80600081146104d8576040519150601f19603f3d011682016040523d82523d6000602084013e6104dd565b606091505b50915091506104ed8282866104f8565b979650505050505050565b606083156105075750816103c0565b8251156105175782518084602001fd5b8160405162461bcd60e51b815260040161029e919061079f565b634e487b7160e01b600052604160045260246000fd5b80356001600160a01b038116811461055e57600080fd5b919050565b803567ffffffffffffffff8116811461055e57600080fd5b600080600080600080600080610100898b03121561059857600080fd5b883567ffffffffffffffff808211156105b057600080fd5b818b0191508b601f8301126105c457600080fd5b8135818111156105d6576105d6610531565b604051601f8201601f19908116603f011681019083821181831017156105fe576105fe610531565b816040528281528e602084870101111561061757600080fd5b82602086016020830137600060208483010152809c50505050505061063e60208a01610547565b965061064c60408a01610547565b955061065a60608a01610563565b945061066860808a01610547565b979a969950949793969560a0850135955060c08501359460e001359350915050565b60005b838110156106a557818101518382015260200161068d565b50506000910152565b600081518084526106c681602086016020860161068a565b601f01601f19169290920160200192915050565b60006101208083526106ee8184018d6106ae565b6001600160a01b039b8c166020850152998b1660408401525050958816606087015267ffffffffffffffff9490941660808601529190951660a084015260c083019490945260e08201939093526101000191909152919050565b60006020828403121561075a57600080fd5b5051919050565b60006020828403121561077357600080fd5b815180151581146103c057600080fd5b6000825161079581846020870161068a565b9190910192915050565b6020815260006103c060208301846106ae56fea264697066735822122040fd4937917989d4e157fb0795bc9dc886b180a95780126fdd27487a425c565f64736f6c634300081000336101006040523480156200001257600080fd5b5060405162004acd38038062004acd833981016040819052620000359162000242565b6001600160a01b0383166080526200004c62000190565b604051631d1d5b3960e11b81526001600160a01b0384811660048301529190911690633a3ab67290602401602060405180830381865afa15801562000095573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620000bb91906200028c565b6200010c5760405162461bcd60e51b815260206004820152601460248201527f556e737570706f727465642063757272656e6379000000000000000000000000604482015260640160405180910390fd5b6001600160a01b0380831660a052811660c08190526040805163d509b01760e01b8152905163d509b017916004808201926020929091908290030181865afa1580156200015d573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620001839190620002b7565b60e05250620002ef915050565b6080516040516302abf57960e61b81527f436f6c6c61746572616c57686974656c6973740000000000000000000000000060048201526000916001600160a01b03169063aafd5e4090602401602060405180830381865afa158015620001fa573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620002209190620002d1565b905090565b80516001600160a01b03811681146200023d57600080fd5b919050565b6000806000606084860312156200025857600080fd5b620002638462000225565b9250620002736020850162000225565b9150620002836040850162000225565b90509250925092565b6000602082840312156200029f57600080fd5b81518015158114620002b057600080fd5b9392505050565b600060208284031215620002ca57600080fd5b5051919050565b600060208284031215620002e457600080fd5b620002b08262000225565b60805160a05160c05160e0516147426200038b600039600081816103330152611c530152600081816101cf0152818161055b015281816106f5015281816118b60152611bf501526000818161035b015281816105300152818161069c015281816106d301528181610d04015281816110c9015281816111770152818161158c015281816119720152611c2f0152600061027b01526147426000f3fe60806040523480156200001157600080fd5b5060043610620001155760003560e01c8063b75d4e2411620000a3578063d448a4ec116200006e578063d448a4ec1462000319578063d509b017146200032d578063e5a6b10f1462000355578063f1b156b2146200037d57600080fd5b8063b75d4e241462000251578063b9a3c84c1462000275578063c3c95c7b146200029d578063d410764514620002c357600080fd5b80638921a61411620000e45780638921a61414620001c95780639d2edf46146200020a5780639d5bacfd1462000223578063acd98e29146200023a57600080fd5b80630880c65a146200011a578063565429a8146200015e5780635cb1cc0b14620001845780637564912b146200019b575b600080fd5b620001466040518060400160405280600c81526020016b556e7265736f6c7661626c6560a01b81525081565b60405162000155919062002112565b60405180910390f35b620001756200016f366004620021d2565b62000394565b60405190815260200162000155565b62000175620001953660046200221d565b620007b3565b620001b2620001ac366004620022c1565b62000d7e565b6040516200015599989796959493929190620022db565b620001f17f000000000000000000000000000000000000000000000000000000000000000081565b6040516001600160a01b03909116815260200162000155565b620002216200021b36600462002364565b62000f8a565b005b620002216200023436600462002364565b6200112e565b620001756200024b366004620022c1565b620012cb565b6200025b611c2081565b60405167ffffffffffffffff909116815260200162000155565b620001f17f000000000000000000000000000000000000000000000000000000000000000081565b620002b4620002ae366004620022c1565b62001601565b60405162000155919062002387565b620002f9620002d4366004620022c1565b600160208190526000918252604090912080549101546001600160a01b039091169082565b604080516001600160a01b03909316835260208301919091520162000155565b620002216200032a366004620022c1565b50565b620001757f000000000000000000000000000000000000000000000000000000000000000081565b620001f17f000000000000000000000000000000000000000000000000000000000000000081565b620002216200038e36600462002463565b620018ab565b600082815260208190526040812060028101546001600160a01b0316620003d85760405162461bcd60e51b8152600401620003cf9062002496565b60405180910390fd5b82516020840120600182015415620004335760405162461bcd60e51b815260206004820152601c60248201527f417373657274696f6e20616374697665206f72207265736f6c766564000000006044820152606401620003cf565b8160060160405162000446919062002501565b6040518091039020811480620004755750816007016040516200046a919062002501565b604051809103902081145b80620004c4575060408051808201909152600c81526b556e7265736f6c7661626c6560a01b6020909101527fffa5c42fda42ac0bea9ca62d68dcc08a4b371f06b6e71afb99dee2ce276cbe4e81145b620005125760405162461bcd60e51b815260206004820152601860248201527f496e76616c6964206173736572746564206f7574636f6d6500000000000000006044820152606401620003cf565b60018201819055604051634360af3d60e01b81526001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000811660048301526000917f000000000000000000000000000000000000000000000000000000000000000090911690634360af3d90602401602060405180830381865afa158015620005a5573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620005cb91906200257f565b9050600081846005015411620005e25781620005e8565b83600501545b905060006200068c878660080180546200060290620024c5565b80601f01602080910402602001604051908101604052809291908181526020018280546200063090620024c5565b8015620006815780601f10620006555761010080835404028352916020019162000681565b820191906000526020600020905b8154815290600101906020018083116200066357829003601f168201915b505050505062001a0b565b9050620006c56001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001633308562001a46565b6200071b6001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000167f00000000000000000000000000000000000000000000000000000000000000008462001ab9565b62000727818362001bdb565b60408051808201825233815260208082018c81526000858152600192839052849020925183546001600160a01b0319166001600160a01b039091161783555191015551909650869089907fc55c01025649b2056980da18d75125fed301d8a2f7cf93d2151fab07bfe2a49290620007a0908b9062002112565b60405180910390a3505050505092915050565b600080865111620007fd5760405162461bcd60e51b8152602060048201526013602482015272456d707479206669727374206f7574636f6d6560681b6044820152606401620003cf565b6000855111620008475760405162461bcd60e51b8152602060048201526014602482015273456d707479207365636f6e64206f7574636f6d6560601b6044820152606401620003cf565b84805190602001208680519060200120036200089e5760405162461bcd60e51b81526020600482015260156024820152744f7574636f6d657320617265207468652073616d6560581b6044820152606401620003cf565b6000845111620008e55760405162461bcd60e51b815260206004820152601160248201527022b6b83a3c903232b9b1b934b83a34b7b760791b6044820152606401620003cf565b4384604051602001620008fa92919062002599565b60408051601f1981840301815291815281516020928301206000818152928390529120600201549091506001600160a01b031615620009745760405162461bcd60e51b81526020600482015260156024820152744d61726b657420616c72656164792065786973747360581b6044820152606401620003cf565b600086604051602001620009899190620025b4565b6040516020818303038152906040526012604051620009a890620020b0565b620009b5929190620025e0565b604051809103906000f080158015620009d2573d6000803e3d6000fd5b509050600086604051602001620009ea9190620025b4565b604051602081830303815290604052601260405162000a0990620020b0565b62000a1692919062002624565b604051809103906000f08015801562000a33573d6000803e3d6000fd5b50604051634c1d96ab60e11b81523060048201529091506001600160a01b0383169063983b2d5690602401600060405180830381600087803b15801562000a7957600080fd5b505af115801562000a8e573d6000803e3d6000fd5b5050604051634c1d96ab60e11b81523060048201526001600160a01b038416925063983b2d569150602401600060405180830381600087803b15801562000ad457600080fd5b505af115801562000ae9573d6000803e3d6000fd5b5050604051637a231bdd60e11b81523060048201526001600160a01b038516925063f44637ba9150602401600060405180830381600087803b15801562000b2f57600080fd5b505af115801562000b44573d6000803e3d6000fd5b5050604051637a231bdd60e11b81523060048201526001600160a01b038416925063f44637ba9150602401600060405180830381600087803b15801562000b8a57600080fd5b505af115801562000b9f573d6000803e3d6000fd5b505050506040518061012001604052806000151581526020016000801b8152602001836001600160a01b03168152602001826001600160a01b031681526020018681526020018581526020018981526020018881526020018781525060008085815260200190815260200160002060008201518160000160006101000a81548160ff0219169083151502179055506020820151816001015560408201518160020160006101000a8154816001600160a01b0302191690836001600160a01b0316021790555060608201518160030160006101000a8154816001600160a01b0302191690836001600160a01b031602179055506080820151816004015560a0820151816005015560c082015181600601908162000cbc9190620026ba565b5060e0820151600782019062000cd39082620026ba565b50610100820151600882019062000ceb9082620026ba565b50508515905062000d2d5762000d2d6001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001633308862001a46565b827f7669fe199a3ccd4081193361fbf7ef7b3e82937c8b39c4ec55af2235be28307189898986868b8b60405162000d6b979695949392919062002787565b60405180910390a2505095945050505050565b600060208190529081526040902080546001820154600283015460038401546004850154600586015460068701805460ff9097169795966001600160a01b039586169694909516949293919262000dd590620024c5565b80601f016020809104026020016040519081016040528092919081815260200182805462000e0390620024c5565b801562000e545780601f1062000e285761010080835404028352916020019162000e54565b820191906000526020600020905b81548152906001019060200180831162000e3657829003601f168201915b50505050509080600701805462000e6b90620024c5565b80601f016020809104026020016040519081016040528092919081815260200182805462000e9990620024c5565b801562000eea5780601f1062000ebe5761010080835404028352916020019162000eea565b820191906000526020600020905b81548152906001019060200180831162000ecc57829003601f168201915b50505050509080600801805462000f0190620024c5565b80601f016020809104026020016040519081016040528092919081815260200182805462000f2f90620024c5565b801562000f805780601f1062000f545761010080835404028352916020019162000f80565b820191906000526020600020905b81548152906001019060200180831162000f6257829003601f168201915b5050505050905089565b600082815260208190526040902060028101546001600160a01b031662000fc55760405162461bcd60e51b8152600401620003cf9062002496565b600281015460405163079cc67960e41b8152336004820152602481018490526001600160a01b03909116906379cc6790906044016020604051808303816000875af115801562001019573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200103f9190620027f6565b50600381015460405163079cc67960e41b8152336004820152602481018490526001600160a01b03909116906379cc6790906044016020604051808303816000875af115801562001094573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620010ba9190620027f6565b50620010f16001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016338462001ccb565b604051828152339084907f48bc562be531fa6322b3cb3a9333ca19d2e3c63c1793fcb5ce885d02d6e0226e906020015b60405180910390a3505050565b600082815260208190526040902060028101546001600160a01b0316620011695760405162461bcd60e51b8152600401620003cf9062002496565b620011a06001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001633308562001a46565b60028101546040516340c10f1960e01b8152336004820152602481018490526001600160a01b03909116906340c10f19906044016020604051808303816000875af1158015620011f4573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200121a9190620027f6565b5060038101546040516340c10f1960e01b8152336004820152602481018490526001600160a01b03909116906340c10f19906044016020604051808303816000875af11580156200126f573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620012959190620027f6565b50604051828152339084907fa1a00dd4222724941c9d085479758183928d765e55583d239c414b0f09c5da4b9060200162001121565b6000818152602081905260408120805460ff16620013225760405162461bcd60e51b815260206004820152601360248201527213585c9ad95d081b9bdd081c995cdbdb1d9959606a1b6044820152606401620003cf565b60028101546040516370a0823160e01b81523360048201526000916001600160a01b0316906370a0823190602401602060405180830381865afa1580156200136e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200139491906200257f565b60038301546040516370a0823160e01b81523360048201529192506000916001600160a01b03909116906370a0823190602401602060405180830381865afa158015620013e5573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200140b91906200257f565b90508260060160405162001420919062002501565b60405180910390208360010154036200143c5781935062001488565b826007016040516200144f919062002501565b60405180910390208360010154036200146b5780935062001488565b60026200147982846200282c565b62001485919062002842565b93505b600283015460405163079cc67960e41b8152336004820152602481018490526001600160a01b03909116906379cc6790906044016020604051808303816000875af1158015620014dc573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620015029190620027f6565b50600383015460405163079cc67960e41b8152336004820152602481018390526001600160a01b03909116906379cc6790906044016020604051808303816000875af115801562001557573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200157d9190620027f6565b50620015b46001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016338662001ccb565b6040805185815260208101849052908101829052339086907f25ffdbe909949aba86fccc6c8a3f5d94d7ab78bc67a3cc1327908845235874eb9060600160405180910390a3505050919050565b620016686040518061012001604052806000151581526020016000801916815260200160006001600160a01b0316815260200160006001600160a01b0316815260200160008152602001600081526020016060815260200160608152602001606081525090565b60008281526020818152604091829020825161012081018452815460ff161515815260018201549281019290925260028101546001600160a01b03908116938301939093526003810154909216606082015260048201546080820152600582015460a082015260068201805491929160c084019190620016e890620024c5565b80601f01602080910402602001604051908101604052809291908181526020018280546200171690620024c5565b8015620017675780601f106200173b5761010080835404028352916020019162001767565b820191906000526020600020905b8154815290600101906020018083116200174957829003601f168201915b505050505081526020016007820180546200178290620024c5565b80601f0160208091040260200160405190810160405280929190818152602001828054620017b090620024c5565b8015620018015780601f10620017d55761010080835404028352916020019162001801565b820191906000526020600020905b815481529060010190602001808311620017e357829003601f168201915b505050505081526020016008820180546200181c90620024c5565b80601f01602080910402602001604051908101604052809291908181526020018280546200184a90620024c5565b80156200189b5780601f106200186f576101008083540402835291602001916200189b565b820191906000526020600020905b8154815290600101906020018083116200187d57829003601f168201915b5050505050815250509050919050565b336001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001614620019165760405162461bcd60e51b815260206004820152600e60248201526d139bdd08185d5d1a1bdc9a5e995960921b6044820152606401620003cf565b600082815260016020818152604080842090920154835282905290208115620019df57805460ff191660011781556004810154156200199d5760008381526001602052604090205460048201546200199d916001600160a01b037f000000000000000000000000000000000000000000000000000000000000000081169291169062001ccb565b600083815260016020819052604080832090910154905190917fe9146184308c5e4b8f243047cc6f81dce88e004d7980502e123b02f887ab514491a2620019e7565b600060018201555b50506000908152600160208190526040822080546001600160a01b03191681550155565b606062001a184262001cfd565b838360405160200162001a2e9392919062002865565b60405160208183030381529060405290505b92915050565b6040516001600160a01b038085166024830152831660448201526064810182905262001ab39085906323b872dd60e01b906084015b60408051601f198184030181529190526020810180516001600160e01b03166001600160e01b03199093169290921790915262001e45565b50505050565b80158062001b375750604051636eb1769f60e11b81523060048201526001600160a01b03838116602483015284169063dd62ed3e90604401602060405180830381865afa15801562001b0f573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062001b3591906200257f565b155b62001ba45760405162461bcd60e51b815260206004820152603660248201527f5361666545524332303a20617070726f76652066726f6d206e6f6e2d7a65726f60448201527520746f206e6f6e2d7a65726f20616c6c6f77616e636560501b6064820152608401620003cf565b6040516001600160a01b03831660248201526044810182905262001bd690849063095ea7b360e01b9060640162001a7b565b505050565b604051636457c97960e01b81526000906001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001690636457c9799062001c7e908690339030908790611c20907f0000000000000000000000000000000000000000000000000000000000000000908b907f000000000000000000000000000000000000000000000000000000000000000090859060040162002942565b6020604051808303816000875af115801562001c9e573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062001cc491906200257f565b9392505050565b6040516001600160a01b03831660248201526044810182905262001bd690849063a9059cbb60e01b9060640162001a7b565b60608160000362001d255750506040805180820190915260018152600360fc1b602082015290565b8160005b811562001d55578062001d3c81620029b2565b915062001d4d9050600a8362002842565b915062001d29565b60008167ffffffffffffffff81111562001d735762001d7362002127565b6040519080825280601f01601f19166020018201604052801562001d9e576020820181803683370190505b509050815b851562001e3c5762001db7600182620029ce565b9050600062001dc8600a8862002842565b62001dd590600a620029e4565b62001de19088620029ce565b62001dee90603062002a06565b905060008160f81b90508084848151811062001e0e5762001e0e62002a22565b60200101906001600160f81b031916908160001a90535062001e32600a8962002842565b9750505062001da3565b50949350505050565b600062001e9c826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b031662001f1e9092919063ffffffff16565b80519091501562001bd6578080602001905181019062001ebd9190620027f6565b62001bd65760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b6064820152608401620003cf565b606062001f2f848460008562001f37565b949350505050565b60608247101562001f9a5760405162461bcd60e51b815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f6044820152651c8818d85b1b60d21b6064820152608401620003cf565b6001600160a01b0385163b62001ff35760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e74726163740000006044820152606401620003cf565b600080866001600160a01b0316858760405162002011919062002a38565b60006040518083038185875af1925050503d806000811462002050576040519150601f19603f3d011682016040523d82523d6000602084013e62002055565b606091505b50915091506200206782828662002072565b979650505050505050565b606083156200208357508162001cc4565b825115620020945782518084602001fd5b8160405162461bcd60e51b8152600401620003cf919062002112565b611cb68062002a5783390190565b60005b83811015620020db578181015183820152602001620020c1565b50506000910152565b60008151808452620020fe816020860160208601620020be565b601f01601f19169290920160200192915050565b60208152600062001cc46020830184620020e4565b634e487b7160e01b600052604160045260246000fd5b600082601f8301126200214f57600080fd5b813567ffffffffffffffff808211156200216d576200216d62002127565b604051601f8301601f19908116603f0116810190828211818310171562002198576200219862002127565b81604052838152866020858801011115620021b257600080fd5b836020870160208301376000602085830101528094505050505092915050565b60008060408385031215620021e657600080fd5b82359150602083013567ffffffffffffffff8111156200220557600080fd5b62002213858286016200213d565b9150509250929050565b600080600080600060a086880312156200223657600080fd5b853567ffffffffffffffff808211156200224f57600080fd5b6200225d89838a016200213d565b965060208801359150808211156200227457600080fd5b6200228289838a016200213d565b955060408801359150808211156200229957600080fd5b50620022a8888289016200213d565b9598949750949560608101359550608001359392505050565b600060208284031215620022d457600080fd5b5035919050565b8915158152602081018990526001600160a01b038881166040830152871660608201526080810186905260a0810185905261012060c082018190526000906200232783820187620020e4565b905082810360e08401526200233d8186620020e4565b9050828103610100840152620023548185620020e4565b9c9b505050505050505050505050565b600080604083850312156200237857600080fd5b50508035926020909101359150565b602081526200239b60208201835115159052565b6020820151604082015260006040830151620023c260608401826001600160a01b03169052565b5060608301516001600160a01b038116608084015250608083015160a083015260a083015160c083015260c08301516101208060e08501526200240a610140850183620020e4565b915060e0850151601f196101008187860301818801526200242c8584620020e4565b9088015187820390920184880152935090506200244a8382620020e4565b9695505050505050565b80151581146200032a57600080fd5b600080604083850312156200247757600080fd5b8235915060208301356200248b8162002454565b809150509250929050565b60208082526015908201527413585c9ad95d08191bd95cc81b9bdd08195e1a5cdd605a1b604082015260600190565b600181811c90821680620024da57607f821691505b602082108103620024fb57634e487b7160e01b600052602260045260246000fd5b50919050565b60008083546200251181620024c5565b600182811680156200252c5760018114620025425762002573565b60ff198416875282151583028701945062002573565b8760005260208060002060005b858110156200256a5781548a8201529084019082016200254f565b50505082870194505b50929695505050505050565b6000602082840312156200259257600080fd5b5051919050565b82815260406020820152600062001f2f6040830184620020e4565b60008251620025c8818460208701620020be565b65102a37b5b2b760d11b920191825250600601919050565b606081526000620025f56060830185620020e4565b8281036020840152600381526213cc5560ea1b60208201526040810191505060ff831660408301529392505050565b606081526000620026396060830185620020e4565b8281036020840152600381526213cc9560ea1b60208201526040810191505060ff831660408301529392505050565b601f82111562001bd657600081815260208120601f850160051c81016020861015620026915750805b601f850160051c820191505b81811015620026b2578281556001016200269d565b505050505050565b815167ffffffffffffffff811115620026d757620026d762002127565b620026ef81620026e88454620024c5565b8462002668565b602080601f8311600181146200272757600084156200270e5750858301515b600019600386901b1c1916600185901b178555620026b2565b600085815260208120601f198616915b82811015620027585788860151825594840194600190910190840162002737565b5085821015620027775787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b60e0815260006200279c60e083018a620020e4565b8281036020840152620027b0818a620020e4565b90508281036040840152620027c68189620020e4565b6001600160a01b0397881660608501529590961660808301525060a081019290925260c090910152949350505050565b6000602082840312156200280957600080fd5b815162001cc48162002454565b634e487b7160e01b600052601160045260246000fd5b8082018082111562001a405762001a4062002816565b6000826200286057634e487b7160e01b600052601260045260246000fd5b500490565b7f4173206f6620617373657274696f6e2074696d657374616d70200000000000008152600084516200289f81601a850160208901620020be565b7f2c20746865206465736372696265642070726564696374696f6e206d61726b65601a918401918201526d03a1037baba31b7b6b29034b99d160951b603a8201528451620028f5816048840160208901620020be565b7f2e20546865206d61726b6574206465736372697074696f6e2069733a2000000060489290910191820152835162002935816065840160208801620020be565b0160650195945050505050565b6000610120808352620029588184018d620020e4565b6001600160a01b039b8c166020850152998b1660408401525050958816606087015267ffffffffffffffff9490941660808601529190951660a084015260c083019490945260e08201939093526101000191909152919050565b600060018201620029c757620029c762002816565b5060010190565b8181038181111562001a405762001a4062002816565b600081600019048311821515161562002a015762002a0162002816565b500290565b60ff818116838216019081111562001a405762001a4062002816565b634e487b7160e01b600052603260045260246000fd5b6000825162002a4c818460208701620020be565b919091019291505056fe60806040523480156200001157600080fd5b5060405162001cb638038062001cb6833981016040819052620000349162000563565b8282600362000044838262000676565b50600462000053828262000676565b50506006805460ff191660ff8416179055506200007360008033620000a5565b6200009060015b60408051600080825260208201909252620001f5565b6200009c60026200007a565b50505062000796565b826000808281526005602052604090206001015460ff166002811115620000d057620000d062000742565b14620001235760405162461bcd60e51b815260206004820152601e60248201527f43616e6e6f74207573652061207072652d6578697374696e6720726f6c65000060448201526064015b60405180910390fd5b60008481526005602052604090206001808201805460ff1916828002179055508381556200016160028201846200033b602090811b62000a6617901c565b60008481526005602052604081206001015460ff1660028111156200018a576200018a62000742565b03620001ee5760405162461bcd60e51b815260206004820152603c602482015260008051602062001c9683398151915260448201527f20746f206d616e61676520616e206578636c757369766520726f6c650000000060648201526084016200011a565b5050505050565b826000808281526005602052604090206001015460ff16600281111562000220576200022062000742565b146200026f5760405162461bcd60e51b815260206004820152601e60248201527f43616e6e6f74207573652061207072652d6578697374696e6720726f6c65000060448201526064016200011a565b600084815260056020908152604090912060018101805460ff1916600217905584815590620002ae906003830190859062000a706200034b821b17901c565b60008481526005602052604081206001015460ff166002811115620002d757620002d762000742565b03620001ee5760405162461bcd60e51b8152602060048201526038602482015260008051602062001c9683398151915260448201527f20746f206d616e61676520612073686172656420726f6c65000000000000000060648201526084016200011a565b620003478282620003a0565b5050565b60005b81518110156200039b57620003868383838151811062000372576200037262000758565b60200260200101516200042160201b60201c565b8062000392816200076e565b9150506200034e565b505050565b6001600160a01b038116620004045760405162461bcd60e51b815260206004820152602360248201527f43616e6e6f742073657420616e206578636c757369766520726f6c6520746f2060448201526203078360ec1b60648201526084016200011a565b81546001600160a01b0319166001600160a01b0391909116179055565b6001600160a01b038116620004795760405162461bcd60e51b815260206004820152601f60248201527f43616e6e6f74206164642030783020746f20612073686172656420726f6c650060448201526064016200011a565b6001600160a01b0316600090815260209190915260409020805460ff19166001179055565b634e487b7160e01b600052604160045260246000fd5b600082601f830112620004c657600080fd5b81516001600160401b0380821115620004e357620004e36200049e565b604051601f8301601f19908116603f011681019082821181831017156200050e576200050e6200049e565b816040528381526020925086838588010111156200052b57600080fd5b600091505b838210156200054f578582018301518183018401529082019062000530565b600093810190920192909252949350505050565b6000806000606084860312156200057957600080fd5b83516001600160401b03808211156200059157600080fd5b6200059f87838801620004b4565b94506020860151915080821115620005b657600080fd5b50620005c586828701620004b4565b925050604084015160ff81168114620005dd57600080fd5b809150509250925092565b600181811c90821680620005fd57607f821691505b6020821081036200061e57634e487b7160e01b600052602260045260246000fd5b50919050565b601f8211156200039b57600081815260208120601f850160051c810160208610156200064d5750805b601f850160051c820191505b818110156200066e5782815560010162000659565b505050505050565b81516001600160401b038111156200069257620006926200049e565b620006aa81620006a38454620005e8565b8462000624565b602080601f831160018114620006e25760008415620006c95750858301515b600019600386901b1c1916600185901b1785556200066e565b600085815260208120601f198616915b828110156200071357888601518255948401946001909101908401620006f2565b5085821015620007325787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b634e487b7160e01b600052602160045260246000fd5b634e487b7160e01b600052603260045260246000fd5b6000600182016200078f57634e487b7160e01b600052601160045260246000fd5b5060010190565b6114f080620007a66000396000f3fe608060405234801561001057600080fd5b506004361061014d5760003560e01c806374d0a676116100c3578063a9059cbb1161007c578063a9059cbb146102be578063aaa14ca3146102d1578063ab3545e5146102e4578063d97c05be1461030f578063dd62ed3e14610322578063f44637ba1461035b57600080fd5b806374d0a6761461025757806379cc67901461026a5780637cdc1cb91461027d57806395d89b4114610290578063983b2d5614610298578063a457c2d7146102ab57600080fd5b8063395093511161011557806339509351146101cd57806340c10f19146101e057806342966c68146101f35780636be7658b1461020857806370a082311461021b57806373cc802a1461024457600080fd5b806306fdde0314610152578063095ea7b31461017057806318160ddd1461019357806323b872dd146101a5578063313ce567146101b8575b600080fd5b61015a61036e565b6040516101679190611183565b60405180910390f35b61018361017e3660046111ed565b610400565b6040519015158152602001610167565b6002545b604051908152602001610167565b6101836101b3366004611217565b61041a565b60065460405160ff9091168152602001610167565b6101836101db3660046111ed565b61043e565b6101836101ee3660046111ed565b61047d565b610206610201366004611253565b6104ba565b005b61020661021636600461126c565b6104f0565b610197610229366004611298565b6001600160a01b031660009081526020819052604090205490565b610206610252366004611298565b6105c6565b61020661026536600461126c565b6105d4565b6101836102783660046111ed565b6106aa565b61018361028b36600461126c565b6106de565b61015a6107a3565b6102066102a6366004611298565b6107b2565b6101836102b93660046111ed565b6107be565b6101836102cc3660046111ed565b610850565b6102066102df366004611253565b61085e565b6102f76102f2366004611253565b61091a565b6040516001600160a01b039091168152602001610167565b61020661031d36600461126c565b610986565b6101976103303660046112ba565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b610206610369366004611298565b610a5c565b60606003805461037d906112e4565b80601f01602080910402602001604051908101604052809291908181526020018280546103a9906112e4565b80156103f65780601f106103cb576101008083540402835291602001916103f6565b820191906000526020600020905b8154815290600101906020018083116103d957829003601f168201915b5050505050905090565b60003361040e818585610ab6565b60019150505b92915050565b600033610428858285610bda565b610433858585610c6c565b506001949350505050565b3360008181526001602090815260408083206001600160a01b038716845290915281205490919061040e908290869061047890879061132e565b610ab6565b6000600161048b81336106de565b6104b05760405162461bcd60e51b81526004016104a790611357565b60405180910390fd5b61040e8484610e3a565b60026104c681336106de565b6104e25760405162461bcd60e51b81526004016104a790611357565b6104ec3383610f19565b5050565b81600260008281526005602052604090206001015460ff16600281111561051957610519611341565b146105365760405162461bcd60e51b81526004016104a790611399565b600083815260056020526040902054839061055190336106de565b61056d5760405162461bcd60e51b81526004016104a7906113e5565b60008481526005602052604090206105889060030184611067565b60405133906001600160a01b0385169086907feb3e33034c392e69263b04ec0fa376dc12784a41b6676c7f31b936cbc0fbb5af90600090a450505050565b6105d1600082610986565b50565b81600260008281526005602052604090206001015460ff1660028111156105fd576105fd611341565b1461061a5760405162461bcd60e51b81526004016104a790611399565b600083815260056020526040902054839061063590336106de565b6106515760405162461bcd60e51b81526004016104a7906113e5565b600084815260056020526040902061066c9060030184611089565b60405133906001600160a01b0385169086907f63502af7324ff6db91ab38f8236a648727d9385ea6c782073dd4882d8a61a48f90600090a450505050565b600060026106b881336106de565b6106d45760405162461bcd60e51b81526004016104a790611357565b61040e8484610f19565b600082815260056020526040812060018082015460ff16600281111561070657610706611341565b036107275760028101546001600160a01b038481169116145b915050610414565b6002600182015460ff16600281111561074257610742611341565b0361076a576001600160a01b038316600090815260038201602052604090205460ff1661071f565b60405162461bcd60e51b815260206004820152600e60248201526d125b9d985b1a59081c9bdb19525960921b60448201526064016104a7565b60606004805461037d906112e4565b6105d160015b826105d4565b3360008181526001602090815260408083206001600160a01b0387168452909152812054909190838110156108435760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b60648201526084016104a7565b6104338286868403610ab6565b60003361040e818585610c6c565b80600260008281526005602052604090206001015460ff16600281111561088757610887611341565b146108a45760405162461bcd60e51b81526004016104a790611399565b816108af81336106de565b6108cb5760405162461bcd60e51b81526004016104a790611357565b60008381526005602052604090206108e69060030133611067565b6040513390819085907feb3e33034c392e69263b04ec0fa376dc12784a41b6676c7f31b936cbc0fbb5af90600090a4505050565b600081600160008281526005602052604090206001015460ff16600281111561094557610945611341565b146109625760405162461bcd60e51b81526004016104a790611429565b6000838152600560205260409020600201546001600160a01b031691505b50919050565b81600160008281526005602052604090206001015460ff1660028111156109af576109af611341565b146109cc5760405162461bcd60e51b81526004016104a790611429565b60008381526005602052604090205483906109e790336106de565b610a035760405162461bcd60e51b81526004016104a7906113e5565b6000848152600560205260409020610a1e9060020184611104565b60405133906001600160a01b0385169086907f3b855c56b409b671c7112789d022675eb639d0bcb8896f1b6197c132f799e74690600090a450505050565b6105d160026107b8565b6104ec8282611104565b60005b8151811015610ab157610a9f83838381518110610a9257610a92611478565b6020026020010151611089565b80610aa98161148e565b915050610a73565b505050565b6001600160a01b038316610b185760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b60648201526084016104a7565b6001600160a01b038216610b795760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b60648201526084016104a7565b6001600160a01b0383811660008181526001602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b6001600160a01b038381166000908152600160209081526040808320938616835292905220546000198114610c665781811015610c595760405162461bcd60e51b815260206004820152601d60248201527f45524332303a20696e73756666696369656e7420616c6c6f77616e636500000060448201526064016104a7565b610c668484848403610ab6565b50505050565b6001600160a01b038316610cd05760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b60648201526084016104a7565b6001600160a01b038216610d325760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b60648201526084016104a7565b6001600160a01b03831660009081526020819052604090205481811015610daa5760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b60648201526084016104a7565b6001600160a01b03808516600090815260208190526040808220858503905591851681529081208054849290610de190849061132e565b92505081905550826001600160a01b0316846001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef84604051610e2d91815260200190565b60405180910390a3610c66565b6001600160a01b038216610e905760405162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f20616464726573730060448201526064016104a7565b8060026000828254610ea2919061132e565b90915550506001600160a01b03821660009081526020819052604081208054839290610ecf90849061132e565b90915550506040518181526001600160a01b038316906000907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9060200160405180910390a35050565b6001600160a01b038216610f795760405162461bcd60e51b815260206004820152602160248201527f45524332303a206275726e2066726f6d20746865207a65726f206164647265736044820152607360f81b60648201526084016104a7565b6001600160a01b03821660009081526020819052604090205481811015610fed5760405162461bcd60e51b815260206004820152602260248201527f45524332303a206275726e20616d6f756e7420657863656564732062616c616e604482015261636560f01b60648201526084016104a7565b6001600160a01b038316600090815260208190526040812083830390556002805484929061101c9084906114a7565b90915550506040518281526000906001600160a01b038516907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9060200160405180910390a3505050565b6001600160a01b0316600090815260209190915260409020805460ff19169055565b6001600160a01b0381166110df5760405162461bcd60e51b815260206004820152601f60248201527f43616e6e6f74206164642030783020746f20612073686172656420726f6c650060448201526064016104a7565b6001600160a01b0316600090815260209190915260409020805460ff19166001179055565b6001600160a01b0381166111665760405162461bcd60e51b815260206004820152602360248201527f43616e6e6f742073657420616e206578636c757369766520726f6c6520746f2060448201526203078360ec1b60648201526084016104a7565b81546001600160a01b0319166001600160a01b0391909116179055565b600060208083528351808285015260005b818110156111b057858101830151858201604001528201611194565b506000604082860101526040601f19601f8301168501019250505092915050565b80356001600160a01b03811681146111e857600080fd5b919050565b6000806040838503121561120057600080fd5b611209836111d1565b946020939093013593505050565b60008060006060848603121561122c57600080fd5b611235846111d1565b9250611243602085016111d1565b9150604084013590509250925092565b60006020828403121561126557600080fd5b5035919050565b6000806040838503121561127f57600080fd5b8235915061128f602084016111d1565b90509250929050565b6000602082840312156112aa57600080fd5b6112b3826111d1565b9392505050565b600080604083850312156112cd57600080fd5b6112d6836111d1565b915061128f602084016111d1565b600181811c908216806112f857607f821691505b60208210810361098057634e487b7160e01b600052602260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b8082018082111561041457610414611318565b634e487b7160e01b600052602160045260246000fd5b60208082526022908201527f53656e64657220646f6573206e6f7420686f6c6420726571756972656420726f6040820152616c6560f01b606082015260800190565b6020808252602c908201527f4d7573742062652063616c6c6564206f6e20616e20696e697469616c697a656460408201526b2053686172656420726f6c6560a01b606082015260800190565b60208082526024908201527f43616e206f6e6c792062652063616c6c6564206279206120726f6c65206d616e60408201526330b3b2b960e11b606082015260800190565b6020808252602f908201527f4d7573742062652063616c6c6564206f6e20616e20696e697469616c697a656460408201526e204578636c757369766520726f6c6560881b606082015260800190565b634e487b7160e01b600052603260045260246000fd5b6000600182016114a0576114a0611318565b5060010190565b818103818111156104145761041461131856fea26469706673582212208961104dd3923b79c08fd49fd308093d4ed7792f1229905fa0e9f300d355f10d64736f6c63430008100033417474656d7074656420746f2075736520616e20696e76616c696420726f6c65a2646970667358221220086c5aa3f96334e34488d41ae357f364e0ea84dbbacc4679565813aae47714e164736f6c634300081000330000000000000000000000007109709ecfa91a80626ff3989d68f67f5b1dd12da264697066735822122054b7ebd042da71bf8b48372991969c24ad54e82923d99b088ce443bf9eed2eff64736f6c63430008100033",
    "sourceMap": "1572:26:0:-:0;;;1594:4;-1:-1:-1;;1572:26:0;;;;;;;;3126:44:3;;;;;;;;;;;376:23:58;107:4846:61;376:23:58;;107:4846:61;376:23:58;;;-1:-1:-1;;;376:23:58;;;;;;;;:::i;:::-;-1:-1:-1;405:24:58;;;;;;;;;;;;-1:-1:-1;;;405:24:58;;;;;;;;;;:::i;:::-;-1:-1:-1;435:39:58;;;;;;;;;;;;-1:-1:-1;;;435:39:58;;;;;;;;;;:::i;:::-;;497:6;480:23;;559:8;535:32;;107:4846:61;;;;;;;;;;;;14:127:69;75:10;70:3;66:20;63:1;56:31;106:4;103:1;96:15;130:4;127:1;120:15;146:380;225:1;221:12;;;;268;;;289:61;;343:4;335:6;331:17;321:27;;289:61;396:2;388:6;385:14;365:18;362:38;359:161;;442:10;437:3;433:20;430:1;423:31;477:4;474:1;467:15;505:4;502:1;495:15;359:161;;146:380;;;:::o;657:545::-;759:2;754:3;751:11;748:448;;;795:1;820:5;816:2;809:17;865:4;861:2;851:19;935:2;923:10;919:19;916:1;912:27;906:4;902:38;971:4;959:10;956:20;953:47;;;-1:-1:-1;994:4:69;953:47;1049:2;1044:3;1040:12;1037:1;1033:20;1027:4;1023:31;1013:41;;1104:82;1122:2;1115:5;1112:13;1104:82;;;1167:17;;;1148:1;1137:13;1104:82;;;1108:3;;;748:448;657:545;;;:::o;1378:1352::-;1498:10;;-1:-1:-1;;;;;1520:30:69;;1517:56;;;1553:18;;:::i;:::-;1582:97;1672:6;1632:38;1664:4;1658:11;1632:38;:::i;:::-;1626:4;1582:97;:::i;:::-;1734:4;;1798:2;1787:14;;1815:1;1810:663;;;;2517:1;2534:6;2531:89;;;-1:-1:-1;2586:19:69;;;2580:26;2531:89;-1:-1:-1;;1335:1:69;1331:11;;;1327:24;1323:29;1313:40;1359:1;1355:11;;;1310:57;2633:81;;1780:944;;1810:663;604:1;597:14;;;641:4;628:18;;-1:-1:-1;;1846:20:69;;;1964:236;1978:7;1975:1;1972:14;1964:236;;;2067:19;;;2061:26;2046:42;;2159:27;;;;2127:1;2115:14;;;;1994:19;;1964:236;;;1968:3;2228:6;2219:7;2216:19;2213:201;;;2289:19;;;2283:26;-1:-1:-1;;2372:1:69;2368:14;;;2384:3;2364:24;2360:37;2356:42;2341:58;2326:74;;2213:201;-1:-1:-1;;;;;2460:1:69;2444:14;;;2440:22;2427:36;;-1:-1:-1;1378:1352:69:o;:::-;107:4846:61;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x60806040523480156200001157600080fd5b5060043610620001515760003560e01c8063916a17c611620000c7578063dbd07b771162000086578063dbd07b771462000251578063def114b6146200025b578063e20c9f711462000288578063eeec83971462000292578063f4096671146200029c578063fa7626d414620002c257600080fd5b8063916a17c61462000201578063a3fe4243146200020b578063ab30d35a1462000215578063b5508aa9146200022c578063ba414fa6146200023657600080fd5b80633f7286f411620001145780633f7286f414620001b1578063635e611514620001bb57806366d9a9a014620001c55780636906f5f514620001de57806385226c8114620001e857600080fd5b80630a9254e414620001565780631ed7831c1462000162578063217356c614620001845780632ade3880146200018e5780633e5e3c2314620001a7575b600080fd5b62000160620002d0565b005b6200016c620002e9565b6040516200017b919062002d52565b60405180910390f35b620001606200034d565b62000198620007cf565b6040516200017b919062002df5565b6200016c6200091d565b6200016c6200097f565b62000160620009e1565b620001cf62000d7a565b6040516200017b919062002ebb565b6200016062000e64565b620001f2620011c5565b6040516200017b919062002f72565b620001cf6200129f565b6200016062001389565b620001606200022636600462002fe1565b620014bd565b620001f262001617565b62000240620016f1565b60405190151581526020016200017b565b620001606200181e565b602a546200026f906001600160a01b031681565b6040516001600160a01b0390911681526020016200017b565b6200016c62001b0d565b6200016062001b6f565b620002b3620002ad366004620030d5565b62001dc8565b6040519081526020016200017b565b600754620002409060ff1681565b620002da62001389565b620002e4620020ff565b603155565b606060148054806020026020016040519081016040528092919081815260200182805480156200034357602002820191906000526020600020905b81546001600160a01b0316815260019091019060200180831162000324575b5050505050905090565b6000620003ef603154602b8054620003659062003171565b80601f0160208091040260200160405190810160405280929190818152602001828054620003939062003171565b8015620003e45780601f10620003b857610100808354040283529160200191620003e4565b820191906000526020600020905b815481529060010190602001808311620003c657829003601f168201915b5050505050620021f7565b6020546040516370a0823160e01b8152600260048201529192506000916001600160a01b03909116906370a0823190602401602060405180830381865afa1580156200043f573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620004659190620031ad565b602154602854604080516329cb924d60e01b815290519394506001600160a01b03909216926322f8e566926001600160401b039092169184916329cb924d916004808201926020929091908290030181865afa158015620004ca573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620004f09190620031ad565b620004fc9190620031c7565b6040518263ffffffff1660e01b81526004016200051b91815260200190565b600060405180830381600087803b1580156200053657600080fd5b505af11580156200054b573d6000803e3d6000fd5b5050602a546040805160248101879052600160448083019190915282518083039091018152606490910182526020810180516001600160e01b03166378d8ab5960e11b1790529051632f5abd0d60e21b81526000805160206201540d833981519152945063bd6af4349350620005cf926001600160a01b03169190600401620031e9565b600060405180830381600087803b158015620005ea57600080fd5b505af1158015620005ff573d6000803e3d6000fd5b5050601f54604051638ea2f2ab60e01b8152600481018690526200068193506001600160a01b039091169150638ea2f2ab906024015b6020604051808303816000875af115801562000655573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200067b919062003228565b620022e6565b6020546040516370a0823160e01b81526002600482015262000718916001600160a01b0316906370a0823190602401602060405180830381865afa158015620006ce573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620006f49190620031ad565b602e54602f54620007069085620031c7565b620007129190620031c7565b6200235e565b602a5460315460405163c3c95c7b60e01b815260048101919091526000916001600160a01b03169063c3c95c7b90602401600060405180830381865afa15801562000767573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526200079191908101906200329f565b9050620007a28160000151620022e6565b620007ca8160200151602b604051620007bc9190620033bd565b604051809103902062002459565b505050565b6060601b805480602002602001604051908101604052809291908181526020016000905b828210156200091457600084815260208082206040805180820182526002870290920180546001600160a01b03168352600181018054835181870281018701909452808452939591948681019491929084015b82821015620008fc578382906000526020600020018054620008689062003171565b80601f0160208091040260200160405190810160405280929190818152602001828054620008969062003171565b8015620008e75780601f10620008bb57610100808354040283529160200191620008e7565b820191906000526020600020905b815481529060010190602001808311620008c957829003601f168201915b50505050508152602001906001019062000846565b505050508152505081526020019060010190620007f3565b50505050905090565b6060601680548060200260200160405190810160405280929190818152602001828054801562000343576020028201919060005260206000209081546001600160a01b0316815260019091019060200180831162000324575050505050905090565b6060601580548060200260200160405190810160405280929190818152602001828054801562000343576020028201919060005260206000209081546001600160a01b0316815260019091019060200180831162000324575050505050905090565b6000620009f9603154602b8054620003659062003171565b602054602a546040516370a0823160e01b81526001600160a01b0391821660048201529293506000929116906370a0823190602401602060405180830381865afa15801562000a4c573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062000a729190620031ad565b9050600062000a8483602f5462002541565b60235490915062000aa1906001600160a01b031682600062002919565b602a546040805160248101869052600060448083019190915282518083039091018152606490910182526020810180516001600160e01b03166378d8ab5960e11b1790529051632f5abd0d60e21b81526000805160206201540d8339815191529263bd6af4349262000b22926001600160a01b0390921691600401620031e9565b600060405180830381600087803b15801562000b3d57600080fd5b505af115801562000b52573d6000803e3d6000fd5b5050601f54604051638ea2f2ab60e01b81526004810187905262000bd493506001600160a01b039091169150638ea2f2ab906024015b6020604051808303816000875af115801562000ba8573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062000bce919062003228565b620029b8565b602054602a546040516370a0823160e01b81526001600160a01b03918216600482015262000c559291909116906370a0823190602401602060405180830381865afa15801562000c28573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062000c4e9190620031ad565b836200235e565b602054602a546040516370a0823160e01b81526001600160a01b03918216600482015262000cd89291909116906370a0823190602401602060405180830381865afa15801562000ca9573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062000ccf9190620031ad565b602e546200235e565b602a5460315460405163c3c95c7b60e01b815260048101919091526000916001600160a01b03169063c3c95c7b90602401600060405180830381865afa15801562000d27573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405262000d5191908101906200329f565b905062000d628160000151620029b8565b602081015162000d7490600062002459565b50505050565b60606019805480602002602001604051908101604052809291908181526020016000905b82821015620009145760008481526020908190206040805180820182526002860290920180546001600160a01b0316835260018101805483518187028101870190945280845293949193858301939283018282801562000e4b57602002820191906000526020600020906000905b82829054906101000a900460e01b6001600160e01b0319168152602001906004019060208260030104928301926001038202915080841162000e0c5790505b5050505050815250508152602001906001019062000d9e565b600060405162000e749062002d28565b604051809103906000f08015801562000e91573d6000803e3d6000fd5b506001600160a01b0316630a9254e46040518163ffffffff1660e01b8152600401610100604051808303816000875af115801562000ed3573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062000ef991906200343b565b60e0810151601f80546001600160a01b03199081166001600160a01b0393841690811790925560c084015160208054831691851691909117815560a0850151602380548416918616919091179055845160218054841691861691909117905584015160228054831691851691909117905560408085015160248054909316941693909317905590519192509062000f909062002d36565b6001600160a01b039091168152602001604051809103906000f08015801562000fbd573d6000803e3d6000fd5b50602580546001600160a01b0319166001600160a01b03928316179055601f5460408051630473e1f360e11b8152905191909216916308e7c3e69160048083019260209291908290030181865afa1580156200101d573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620010439190620031ad565b602655601f54602054604051634360af3d60e01b81526001600160a01b039182166004820152911690634360af3d90602401602060405180830381865afa15801562001093573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620010b99190620031ad565b602755601f546040805163fe4e198360e01b815290516001600160a01b039092169163fe4e1983916004808201926020929091908290030181865afa15801562001107573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200112d919062003530565b6028805467ffffffffffffffff19166001600160401b0392909216919091179055601f546040805163d509b01760e01b815290516001600160a01b039092169163d509b017916004808201926020929091908290030181865afa15801562001199573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620011bf9190620031ad565b60295550565b60606018805480602002602001604051908101604052809291908181526020016000905b82821015620009145783829060005260206000200180546200120b9062003171565b80601f0160208091040260200160405190810160405280929190818152602001828054620012399062003171565b80156200128a5780601f106200125e576101008083540402835291602001916200128a565b820191906000526020600020905b8154815290600101906020018083116200126c57829003601f168201915b505050505081526020019060010190620011e9565b6060601a805480602002602001604051908101604052809291908181526020016000905b82821015620009145760008481526020908190206040805180820182526002860290920180546001600160a01b031683526001810180548351818702810187019094528084529394919385830193928301828280156200137057602002820191906000526020600020906000905b82829054906101000a900460e01b6001600160e01b03191681526020019060040190602082600301049283019260010382029150808411620013315790505b50505050508152505081526020019060010190620012c3565b6200139362000e64565b602254602054601f546040516001600160a01b03938416939283169290911690620013be9062002d44565b6001600160a01b03938416815291831660208301529091166040820152606001604051809103906000f080158015620013fb573d6000803e3d6000fd5b50602a80546001600160a01b0319166001600160a01b03928316179055601f54602054604051634360af3d60e01b815290831660048201526000929190911690634360af3d90602401602060405180830381865afa15801562001462573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620014889190620031ad565b9050683635c9adc5dea000008110620014a25780620014ad565b683635c9adc5dea000005b602f55620014ba620029c4565b50565b6040805161022081018252600061018082018181526101a083018290526101c08301829052610200830182905282526020808301829052828401829052606083018290526080830182905260a0830182905260c0830182905260e083018290526101008301829052610120830182905261014083018290526101608301919091526001600160a01b0385166101e083015282516024808201869052845180830390910181526044909101845280820180516001600160e01b031663220c0a2160e21b179052925191926000805160206201540d8339815191529263b96213e49260fa9291620015af918791016200354e565b6040516020818303038152906040526040518463ffffffff1660e01b8152600401620015de9392919062003651565b600060405180830381600087803b158015620015f957600080fd5b505af11580156200160e573d6000803e3d6000fd5b50505050505050565b60606017805480602002602001604051908101604052809291908181526020016000905b82821015620009145783829060005260206000200180546200165d9062003171565b80601f01602080910402602001604051908101604052809291908181526020018280546200168b9062003171565b8015620016dc5780601f10620016b057610100808354040283529160200191620016dc565b820191906000526020600020905b815481529060010190602001808311620016be57829003601f168201915b5050505050815260200190600101906200163b565b600754600090610100900460ff1615620017145750600754610100900460ff1690565b60006000805160206201540d8339815191523b156200181957604080516000805160206201540d833981519152602082018190526519985a5b195960d21b828401528251808303840181526060830190935260009290916200179b917f667f9d70ca411d70ead50d8d5c22070dafc36ad75f3dcf5e7237b22ade9aecc49160800162003695565b60408051601f1981840301815290829052620017b791620036c8565b6000604051808303816000865af19150503d8060008114620017f6576040519150601f19603f3d011682016040523d82523d6000602084013e620017fb565b606091505b509150508080602001905181019062001815919062003228565b9150505b919050565b600062001836603154602b8054620003659062003171565b6020546040516370a0823160e01b8152600260048201529192506000916001600160a01b03909116906370a0823190602401602060405180830381865afa15801562001886573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620018ac9190620031ad565b90506000620018be83602f5462002541565b602354909150620018db906001600160a01b031682600162002919565b602a546040805160248101869052600160448083019190915282518083039091018152606490910182526020810180516001600160e01b03166378d8ab5960e11b1790529051632f5abd0d60e21b81526000805160206201540d8339815191529263bd6af434926200195c926001600160a01b0390921691600401620031e9565b600060405180830381600087803b1580156200197757600080fd5b505af11580156200198c573d6000803e3d6000fd5b5050601f54604051638ea2f2ab60e01b815260048101879052620019c793506001600160a01b039091169150638ea2f2ab9060240162000635565b6020546040516370a0823160e01b81526002600482015262001a69916001600160a01b0316906370a0823190602401602060405180830381865afa15801562001a14573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062001a3a9190620031ad565b6002602f5462001a4b9190620036e6565b602e54602f5462001a5d9087620031c7565b620007069190620031c7565b602a5460315460405163c3c95c7b60e01b815260048101919091526000916001600160a01b03169063c3c95c7b90602401600060405180830381865afa15801562001ab8573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405262001ae291908101906200329f565b905062001af38160000151620022e6565b62000d748160200151602b604051620007bc9190620033bd565b6060601380548060200260200160405190810160405280929190818152602001828054801562000343576020028201919060005260206000209081546001600160a01b0316815260019091019060200180831162000324575050505050905090565b600062001b87603154602b8054620003659062003171565b9050600062001b9982602f5462002541565b60235490915062001bb6906001600160a01b031682600062002919565b601f54604051638ea2f2ab60e01b81526004810184905262001beb916001600160a01b031690638ea2f2ab9060240162000b88565b600062001c03603154602c8054620003659062003171565b602154602854604080516329cb924d60e01b815290519394506001600160a01b03909216926322f8e566926001600160401b039092169184916329cb924d916004808201926020929091908290030181865afa15801562001c68573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062001c8e9190620031ad565b62001c9a9190620031c7565b6040518263ffffffff1660e01b815260040162001cb991815260200190565b600060405180830381600087803b15801562001cd457600080fd5b505af115801562001ce9573d6000803e3d6000fd5b5050601f54604051638ea2f2ab60e01b81526004810185905262001d2493506001600160a01b039091169150638ea2f2ab9060240162000635565b602a5460315460405163c3c95c7b60e01b815260048101919091526000916001600160a01b03169063c3c95c7b90602401600060405180830381865afa15801562001d73573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405262001d9d91908101906200329f565b905062001dae8160000151620022e6565b62000d748160200151602c604051620007bc9190620033bd565b6040516303223eab60e11b81526001600160a01b03831660048201526000906000805160206201540d833981519152906306447d5690602401600060405180830381600087803b15801562001e1c57600080fd5b505af115801562001e31573d6000803e3d6000fd5b5050602054601f54604051634360af3d60e01b81526001600160a01b039283166004820181905294506308bca5669350879290911690634360af3d90602401602060405180830381865afa15801562001e8e573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062001eb49190620031ad565b6040516001600160e01b031960e085901b1681526001600160a01b0390921660048301526024820152604401600060405180830381600087803b15801562001efb57600080fd5b505af115801562001f10573d6000803e3d6000fd5b5050602054601f54604051634360af3d60e01b81526001600160a01b0392831660048201819052945063095ea7b393509116908190634360af3d90602401602060405180830381865afa15801562001f6c573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062001f929190620031ad565b6040516001600160e01b031960e085901b1681526001600160a01b03909216600483015260248201526044016020604051808303816000875af115801562001fde573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062002004919062003228565b50601f54604051630dac4ebd60e21b81526001600160a01b03909116906336b13af49062002039908590879060040162003709565b6020604051808303816000875af115801562002059573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200207f9190620031ad565b90507f885cb69240a935d632d79c317109709ecfa91a80626ff3989d68f67f5b1dd12d60001c6001600160a01b03166390c5013b6040518163ffffffff1660e01b8152600401600060405180830381600087803b158015620020e057600080fd5b505af1158015620020f5573d6000803e3d6000fd5b5050505092915050565b60006200210b620029c4565b60405163ca669fa760e01b8152600160048201526000805160206201540d8339815191529063ca669fa790602401600060405180830381600087803b1580156200215457600080fd5b505af115801562002169573d6000803e3d6000fd5b5050602a54602e54602f54604051635cb1cc0b60e01b81526001600160a01b039093169450635cb1cc0b9350620021ac92602b92602c92602d92600401620037ba565b6020604051808303816000875af1158015620021cc573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620021f29190620031ad565b905090565b60006200220362002b12565b60405163ca669fa760e01b8152600260048201526000805160206201540d8339815191529063ca669fa790602401600060405180830381600087803b1580156200224c57600080fd5b505af115801562002261573d6000803e3d6000fd5b5050602a54604051630aca853560e31b81526001600160a01b03909116925063565429a891506200229990869086906004016200380e565b6020604051808303816000875af1158015620022b9573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620022df9190620031ad565b9392505050565b80620014ba577f41304facd9323d75b11bcdd609cb38effffdb05710f7caf0e9b16c6d9d709f506040516200234c9060208082526017908201527f4572726f723a20417373657274696f6e204661696c6564000000000000000000604082015260600190565b60405180910390a1620014ba62002c1f565b80821462002455577f41304facd9323d75b11bcdd609cb38effffdb05710f7caf0e9b16c6d9d709f50604051620023d19060208082526022908201527f4572726f723a2061203d3d2062206e6f7420736174697366696564205b75696e604082015261745d60f01b606082015260800190565b60405180910390a17fb2de2fbe801a0df6c0cbddfd448ba3c41d48a040ca35c56c8196ef0fcae721a8826040516200240a919062003829565b60405180910390a17fb2de2fbe801a0df6c0cbddfd448ba3c41d48a040ca35c56c8196ef0fcae721a88160405162002443919062003862565b60405180910390a16200245562002c1f565b5050565b80821462002455577f41304facd9323d75b11bcdd609cb38effffdb05710f7caf0e9b16c6d9d709f50604051620024cf9060208082526025908201527f4572726f723a2061203d3d2062206e6f7420736174697366696564205b627974604082015264657333325d60d81b606082015260800190565b60405180910390a17fafb795c9c61e4fe7468c386f925d7a5429ecad9c0495ddb8d38d690614d32f998260405162002508919062003829565b60405180910390a17fafb795c9c61e4fe7468c386f925d7a5429ecad9c0495ddb8d38d690614d32f998160405162002443919062003862565b60408051606080820183526000808352602083015291810191909152601f5460405163220c0a2160e21b8152600481018590526000916001600160a01b03169063883028849060240161020060405180830381865afa158015620025a9573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620025cf919062003930565b905060006040518060600160405280601f60009054906101000a90046001600160a01b03166001600160a01b031663d509b0176040518163ffffffff1660e01b8152600401602060405180830381865afa15801562002632573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620026589190620031ad565b81526040848101516001600160401b03166020830152601f54815163afedba4f60e01b8152600481018a905291909201916001600160a01b03169063afedba4f90602401600060405180830381865afa158015620026ba573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052620026e4919081019062003a25565b90526040516303223eab60e11b8152600360048201529091506000805160206201540d833981519152906306447d5690602401600060405180830381600087803b1580156200273257600080fd5b505af115801562002747573d6000803e3d6000fd5b505060205460405163045e52b360e11b815260036004820152602481018890526001600160a01b0390911692506308bca5669150604401600060405180830381600087803b1580156200279957600080fd5b505af1158015620027ae573d6000803e3d6000fd5b5050602054601f5460405163095ea7b360e01b81526001600160a01b039182166004820152602481018990529116925063095ea7b391506044016020604051808303816000875af115801562002808573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200282e919062003228565b50601f5460405163a6a22b4360e01b815260048101879052600360248201526001600160a01b039091169063a6a22b4390604401600060405180830381600087803b1580156200287d57600080fd5b505af115801562002892573d6000803e3d6000fd5b505050507f885cb69240a935d632d79c317109709ecfa91a80626ff3989d68f67f5b1dd12d60001c6001600160a01b03166390c5013b6040518163ffffffff1660e01b8152600401600060405180830381600087803b158015620028f557600080fd5b505af11580156200290a573d6000803e3d6000fd5b50929450505050505b92915050565b8151602083015160408085015190516000805160206201540d8339815191529363b96213e49388936338ce36ab60e11b936200295b9392919060240162003a5d565b60408051601f198184030181529190526020810180516001600160e01b03166001600160e01b031990931692909217909152846200299b576000620029a5565b670de0b6b3a76400005b604051602001620015af91815260200190565b620014ba8115620022e6565b602054602e5460405163045e52b360e11b81526001600482015260248101919091526001600160a01b03909116906308bca56690604401600060405180830381600087803b15801562002a1657600080fd5b505af115801562002a2b573d6000803e3d6000fd5b505060405163ca669fa760e01b8152600160048201526000805160206201540d833981519152925063ca669fa79150602401600060405180830381600087803b15801562002a7857600080fd5b505af115801562002a8d573d6000803e3d6000fd5b5050602054602a54602e5460405163095ea7b360e01b81526001600160a01b03928316600482015260248101919091529116925063095ea7b391506044015b6020604051808303816000875af115801562002aec573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620014ba919062003228565b602054602f5460405163045e52b360e11b81526002600482015260248101919091526001600160a01b03909116906308bca56690604401600060405180830381600087803b15801562002b6457600080fd5b505af115801562002b79573d6000803e3d6000fd5b505060405163ca669fa760e01b8152600260048201526000805160206201540d833981519152925063ca669fa79150602401600060405180830381600087803b15801562002bc657600080fd5b505af115801562002bdb573d6000803e3d6000fd5b5050602054602a54602f5460405163095ea7b360e01b81526001600160a01b03928316600482015260248101919091529116925063095ea7b3915060440162002acc565b6000805160206201540d8339815191523b1562002d1757604080516000805160206201540d833981519152602082018190526519985a5b195960d21b9282019290925260016060820152600091907f70ca10bbd0dbfd9020a9f4b13402c16cb120705e0d1c0aeab10fa353ae586fc49060800160408051601f198184030181529082905262002cb2929160200162003695565b60408051601f198184030181529082905262002cce91620036c8565b6000604051808303816000865af19150503d806000811462002d0d576040519150601f19603f3d011682016040523d82523d6000602084013e62002d12565b606091505b505050505b6007805461ff001916610100179055565b61c6408062003a8883390190565b61087880620100c883390190565b614acd806201094083390190565b6020808252825182820181905260009190848201906040850190845b8181101562002d955783516001600160a01b03168352928401929184019160010162002d6e565b50909695505050505050565b60005b8381101562002dbe57818101518382015260200162002da4565b50506000910152565b6000815180845262002de181602086016020860162002da1565b601f01601f19169290920160200192915050565b602080825282518282018190526000919060409081850190600581811b8701840188860187805b8581101562002eab57603f198b8503018752825180516001600160a01b031685528901518985018990528051898601819052908a0190606081881b870181019190870190855b8181101562002e9457605f1989850301835262002e8184865162002dc7565b948e01949350918d019160010162002e62565b505050978a01979450509188019160010162002e1c565b50919a9950505050505050505050565b60006020808301818452808551808352604092508286019150828160051b8701018488016000805b8481101562002f6357898403603f19018652825180516001600160a01b03168552880151888501889052805188860181905290890190839060608701905b8083101562002f4d5783516001600160e01b0319168252928b019260019290920191908b019062002f21565b50978a0197955050509187019160010162002ee3565b50919998505050505050505050565b6000602080830181845280855180835260408601915060408160051b870101925083870160005b828110156200290a57603f1988860301845262002fb885835162002dc7565b9450928501929085019060010162002f99565b6001600160a01b0381168114620014ba57600080fd5b6000806040838503121562002ff557600080fd5b8235620030028162002fcb565b946020939093013593505050565b634e487b7160e01b600052604160045260246000fd5b60405161012081016001600160401b03811182821017156200304c576200304c62003010565b60405290565b60405161018081016001600160401b03811182821017156200304c576200304c62003010565b604051601f8201601f191681016001600160401b0381118282101715620030a357620030a362003010565b604052919050565b60006001600160401b03821115620030c757620030c762003010565b50601f01601f191660200190565b60008060408385031215620030e957600080fd5b8235620030f68162002fcb565b915060208301356001600160401b038111156200311257600080fd5b8301601f810185136200312457600080fd5b80356200313b6200313582620030ab565b62003078565b8181528660208385010111156200315157600080fd5b816020840160208301376000602083830101528093505050509250929050565b600181811c908216806200318657607f821691505b602082108103620031a757634e487b7160e01b600052602260045260246000fd5b50919050565b600060208284031215620031c057600080fd5b5051919050565b808201808211156200291357634e487b7160e01b600052601160045260246000fd5b6001600160a01b03831681526040602082018190526000906200320f9083018462002dc7565b949350505050565b805180151581146200181957600080fd5b6000602082840312156200323b57600080fd5b620022df8262003217565b8051620018198162002fcb565b600082601f8301126200326557600080fd5b8151620032766200313582620030ab565b8181528460208386010111156200328c57600080fd5b6200320f82602083016020870162002da1565b600060208284031215620032b257600080fd5b81516001600160401b0380821115620032ca57600080fd5b908301906101208286031215620032e057600080fd5b620032ea62003026565b620032f58362003217565b8152602083015160208201526200330f6040840162003246565b6040820152620033226060840162003246565b60608201526080830151608082015260a083015160a082015260c0830151828111156200334e57600080fd5b6200335c8782860162003253565b60c08301525060e0830151828111156200337557600080fd5b620033838782860162003253565b60e08301525061010080840151838111156200339e57600080fd5b620033ac8882870162003253565b918301919091525095945050505050565b6000808354620033cd8162003171565b60018281168015620033e85760018114620033fe576200342f565b60ff19841687528215158302870194506200342f565b8760005260208060002060005b85811015620034265781548a8201529084019082016200340b565b50505082870194505b50929695505050505050565b60006101008083850312156200345057600080fd5b604051908101906001600160401b038211818310171562003475576200347562003010565b8160405283519150620034888262002fcb565b818152620034996020850162003246565b6020820152620034ac6040850162003246565b6040820152620034bf6060850162003246565b6060820152620034d26080850162003246565b6080820152620034e560a0850162003246565b60a0820152620034f860c0850162003246565b60c08201526200350b60e0850162003246565b60e0820152949350505050565b80516001600160401b03811681146200181957600080fd5b6000602082840312156200354357600080fd5b620022df8262003518565b81518051151582526020808201511515818401526040808301511515818501526060808401516001600160a01b039081168287015260809485015181168587015292860151831660a0860152908501516001600160401b031660c0850152840151151560e084015290830151908116610100808401919091526102008301919060a08501519150610120620035ed818601846001600160401b03169052565b60c08601519250610140620036058187018515159052565b60e08701516101608781019190915292870151610180870152908601516101a08601528501516001600160a01b039081166101c08601529401519093166101e090920191909152919050565b6001600160a01b0384168152606060208201819052600090620036779083018562002dc7565b82810360408401526200368b818562002dc7565b9695505050505050565b6001600160e01b0319831681528151600090620036ba81600485016020870162002da1565b919091016004019392505050565b60008251620036dc81846020870162002da1565b9190910192915050565b6000826200370457634e487b7160e01b600052601260045260246000fd5b500490565b6040815260006200371e604083018562002dc7565b905060018060a01b03831660208301529392505050565b60008154620037448162003171565b8085526020600183811680156200376457600181146200377f57620037af565b60ff1985168884015283151560051b880183019550620037af565b866000528260002060005b85811015620037a75781548a82018601529083019084016200378a565b890184019650505b505050505092915050565b60a081526000620037cf60a083018862003735565b8281036020840152620037e3818862003735565b90508281036040840152620037f9818762003735565b60608401959095525050608001529392505050565b8281526040602082015260006200320f604083018462002dc7565b6040815260006200385460408301600a8152690808080808081319599d60b21b602082015260400190565b905082602083015292915050565b6040815260006200385460408301600a8152690808080808149a59da1d60b21b602082015260400190565b600060a08284031215620038a057600080fd5b60405160a081018181106001600160401b0382111715620038c557620038c562003010565b604052905080620038d68362003217565b8152620038e66020840162003217565b6020820152620038f96040840162003217565b604082015260608301516200390e8162002fcb565b60608201526080830151620039238162002fcb565b6080919091015292915050565b600061020082840312156200394457600080fd5b6200394e62003052565b6200395a84846200388d565b81526200396a60a0840162003246565b60208201526200397d60c0840162003518565b60408201526200399060e0840162003217565b6060820152610100620039a581850162003246565b6080830152610120620039ba81860162003518565b60a0840152610140620039cf81870162003217565b60c08501526101608087015160e0860152610180870151848601526101a08701518386015262003a036101c0880162003246565b8286015262003a166101e0880162003246565b90850152509195945050505050565b60006020828403121562003a3857600080fd5b81516001600160401b0381111562003a4f57600080fd5b6200320f8482850162003253565b83815282602082015260606040820152600062003a7e606083018462002dc7565b9594505050505056fe608060405260078054600160ff199182168117909255600b8054909116909117905534801561002d57600080fd5b5061c6038061003d6000396000f3fe60806040523480156200001157600080fd5b5060043610620000c35760003560e01c806385226c81116200007a57806385226c8114620001af578063916a17c614620001c8578063b5508aa914620001d2578063ba414fa614620001dc578063e20c9f7114620001f7578063fa7626d4146200020157600080fd5b80630a9254e414620000c85780631ed7831c14620001505780632ade388014620001695780633e5e3c2314620001825780633f7286f4146200018c57806366d9a9a01462000196575b600080fd5b620000d26200020f565b60405162000147919081516001600160a01b03908116825260208084015182169083015260408084015182169083015260608084015182169083015260808084015182169083015260a08084015182169083015260c08084015182169083015260e09283015116918101919091526101000190565b60405180910390f35b6200015a620006af565b60405162000147919062000e70565b6200017362000713565b60405162000147919062000ee5565b6200015a62000861565b6200015a620008c3565b620001a062000925565b60405162000147919062000fc6565b620001b962000a0f565b6040516200014791906200107d565b620001a062000ae9565b620001b962000bd3565b620001e662000cad565b604051901515815260200162000147565b6200015a62000de4565b600754620001e69060ff1681565b6040805161010081018252600080825260208201819052918101829052606081018290526080810182905260a0810182905260c0810182905260e08101919091526000604051620002609062000e46565b604051809103906000f0801580156200027d573d6000803e3d6000fd5b506001600160a01b0316630a9254e46040518163ffffffff1660e01b815260040160c0604051808303816000875af1158015620002be573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620002e4919062001106565b905060006012604051620002f89062000e54565b6060808252601290820152712232b330bab63a102137b732102a37b5b2b760711b608082015260a0602082018190526003908201526211109560ea1b60c082015260ff909116604082015260e001604051809103906000f08015801562000363573d6000803e3d6000fd5b506040516303223eab60e11b815260016004820152909150737109709ecfa91a80626ff3989d68f67f5b1dd12d906306447d5690602401600060405180830381600087803b158015620003b557600080fd5b505af1158015620003ca573d6000803e3d6000fd5b505050606083015160405163e43252d760e01b81526001600160a01b038481166004830152909116915063e43252d790602401600060405180830381600087803b1580156200041857600080fd5b505af11580156200042d573d6000803e3d6000fd5b50505060808301516040516310a7e20160e01b81526b082a6a68aa4a8bea8a4aaa8960a31b60048201526001600160a01b0390911691506310a7e20190602401600060405180830381600087803b1580156200048857600080fd5b505af11580156200049d573d6000803e3d6000fd5b5050505060408281015181516020810183526802b5e3af16b18800008082529251637e7e591d60e01b81526001600160a01b03858116600483015291516024820152611c20929190911690637e7e591d90604401600060405180830381600087803b1580156200050c57600080fd5b505af115801562000521573d6000803e3d6000fd5b505050506000846020015184838760000151604051620005419062000e62565b6001600160a01b039485168152928416602084015267ffffffffffffffff9091166040830152919091166060820152608001604051809103906000f08015801562000590573d6000803e3d6000fd5b5090507f885cb69240a935d632d79c317109709ecfa91a80626ff3989d68f67f5b1dd12d60001c6001600160a01b03166390c5013b6040518163ffffffff1660e01b8152600401600060405180830381600087803b158015620005f257600080fd5b505af115801562000607573d6000803e3d6000fd5b5050505060405180610100016040528086600001516001600160a01b0316815260200186602001516001600160a01b0316815260200186604001516001600160a01b0316815260200186606001516001600160a01b0316815260200186608001516001600160a01b031681526020018660a001516001600160a01b03168152602001856001600160a01b03168152602001826001600160a01b03168152509550505050505090565b606060148054806020026020016040519081016040528092919081815260200182805480156200070957602002820191906000526020600020905b81546001600160a01b03168152600190910190602001808311620006ea575b5050505050905090565b6060601b805480602002602001604051908101604052809291908181526020016000905b828210156200085857600084815260208082206040805180820182526002870290920180546001600160a01b03168352600181018054835181870281018701909452808452939591948681019491929084015b8282101562000840578382906000526020600020018054620007ac90620011c1565b80601f0160208091040260200160405190810160405280929190818152602001828054620007da90620011c1565b80156200082b5780601f10620007ff576101008083540402835291602001916200082b565b820191906000526020600020905b8154815290600101906020018083116200080d57829003601f168201915b5050505050815260200190600101906200078a565b50505050815250508152602001906001019062000737565b50505050905090565b6060601680548060200260200160405190810160405280929190818152602001828054801562000709576020028201919060005260206000209081546001600160a01b03168152600190910190602001808311620006ea575050505050905090565b6060601580548060200260200160405190810160405280929190818152602001828054801562000709576020028201919060005260206000209081546001600160a01b03168152600190910190602001808311620006ea575050505050905090565b60606019805480602002602001604051908101604052809291908181526020016000905b82821015620008585760008481526020908190206040805180820182526002860290920180546001600160a01b03168352600181018054835181870281018701909452808452939491938583019392830182828015620009f657602002820191906000526020600020906000905b82829054906101000a900460e01b6001600160e01b03191681526020019060040190602082600301049283019260010382029150808411620009b75790505b5050505050815250508152602001906001019062000949565b60606018805480602002602001604051908101604052809291908181526020016000905b828210156200085857838290600052602060002001805462000a5590620011c1565b80601f016020809104026020016040519081016040528092919081815260200182805462000a8390620011c1565b801562000ad45780601f1062000aa85761010080835404028352916020019162000ad4565b820191906000526020600020905b81548152906001019060200180831162000ab657829003601f168201915b50505050508152602001906001019062000a33565b6060601a805480602002602001604051908101604052809291908181526020016000905b82821015620008585760008481526020908190206040805180820182526002860290920180546001600160a01b0316835260018101805483518187028101870190945280845293949193858301939283018282801562000bba57602002820191906000526020600020906000905b82829054906101000a900460e01b6001600160e01b0319168152602001906004019060208260030104928301926001038202915080841162000b7b5790505b5050505050815250508152602001906001019062000b0d565b60606017805480602002602001604051908101604052809291908181526020016000905b828210156200085857838290600052602060002001805462000c1990620011c1565b80601f016020809104026020016040519081016040528092919081815260200182805462000c4790620011c1565b801562000c985780601f1062000c6c5761010080835404028352916020019162000c98565b820191906000526020600020905b81548152906001019060200180831162000c7a57829003601f168201915b50505050508152602001906001019062000bf7565b600754600090610100900460ff161562000cd05750600754610100900460ff1690565b6000737109709ecfa91a80626ff3989d68f67f5b1dd12d3b1562000ddf5760408051737109709ecfa91a80626ff3989d68f67f5b1dd12d602082018190526519985a5b195960d21b8284015282518083038401815260608301909352600092909162000d61917f667f9d70ca411d70ead50d8d5c22070dafc36ad75f3dcf5e7237b22ade9aecc491608001620011fd565b60408051601f198184030181529082905262000d7d9162001230565b6000604051808303816000865af19150503d806000811462000dbc576040519150601f19603f3d011682016040523d82523d6000602084013e62000dc1565b606091505b509150508080602001905181019062000ddb91906200124e565b9150505b919050565b6060601380548060200260200160405190810160405280929190818152602001828054801562000709576020028201919060005260206000209081546001600160a01b03168152600190910190602001808311620006ea575050505050905090565b6167bf806200127a83390190565b610cff8062007a3983390190565b613e96806200873883390190565b6020808252825182820181905260009190848201906040850190845b8181101562000eb35783516001600160a01b03168352928401929184019160010162000e8c565b50909695505050505050565b60005b8381101562000edc57818101518382015260200162000ec2565b50506000910152565b6000602080830181845280855180835260408601915060408160051b870101925083870160005b8281101562000fb957603f19888603018452815180516001600160a01b0316865286015160408787018190528151908701819052908701906060600582901b88018101919088019060005b8181101562000fa157898403605f190183528451805180865262000f81818e88018f850162000ebf565b958c0195601f01601f1916949094018b019350918a019160010162000f57565b50919750505093860193509085019060010162000f0c565b5092979650505050505050565b60006020808301818452808551808352604092508286019150828160051b8701018488016000805b848110156200106e57898403603f19018652825180516001600160a01b03168552880151888501889052805188860181905290890190839060608701905b80831015620010585783516001600160e01b0319168252928b019260019290920191908b01906200102c565b50978a0197955050509187019160010162000fee565b50919998505050505050505050565b6000602080830181845280855180835260408601915060408160051b870101925083870160005b8281101562000fb957878503603f1901845281518051808752620010ce818989018a850162000ebf565b601f01601f191695909501860194509285019290850190600101620010a4565b80516001600160a01b038116811462000ddf57600080fd5b600060c082840312156200111957600080fd5b60405160c0810181811067ffffffffffffffff821117156200114b57634e487b7160e01b600052604160045260246000fd5b6040526200115983620010ee565b81526200116960208401620010ee565b60208201526200117c60408401620010ee565b60408201526200118f60608401620010ee565b6060820152620011a260808401620010ee565b6080820152620011b560a08401620010ee565b60a08201529392505050565b600181811c90821680620011d657607f821691505b602082108103620011f757634e487b7160e01b600052602260045260246000fd5b50919050565b6001600160e01b03198316815281516000906200122281600485016020870162000ebf565b919091016004019392505050565b600082516200124481846020870162000ebf565b9190910192915050565b6000602082840312156200126157600080fd5b815180151581146200127257600080fd5b939250505056fe608060405260078054600160ff199182168117909255600b8054909116909117905534801561002d57600080fd5b506167828061003d6000396000f3fe608060405234801561001057600080fd5b50600436106100b45760003560e01c806385226c811161007157806385226c8114610174578063916a17c614610189578063b5508aa914610191578063ba414fa614610199578063e20c9f71146101b1578063fa7626d4146101b957600080fd5b80630a9254e4146100b95780631ed7831c146101255780632ade38801461013a5780633e5e3c231461014f5780633f7286f41461015757806366d9a9a01461015f575b600080fd5b6100c16101c6565b60405161011c919081516001600160a01b03908116825260208084015182169083015260408084015182169083015260608084015182169083015260808084015182169083015260a092830151169181019190915260c00190565b60405180910390f35b61012d61042a565b60405161011c9190610ba1565b61014261048c565b60405161011c9190610c12565b61012d6105ce565b61012d61062e565b61016761068e565b60405161011c9190610ced565b61017c610774565b60405161011c9190610da0565b610167610844565b61017c61092a565b6101a16109fa565b604051901515815260200161011c565b61012d610b27565b6007546101a19060ff1681565b6040805160c081018252600080825260208201819052918101829052606081018290526080810182905260a0810191909152600060405161020690610b87565b604051809103906000f080158015610222573d6000803e3d6000fd5b506001600160a01b0316630a9254e46040518163ffffffff1660e01b815260040160a0604051808303816000875af1158015610262573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102869190610e30565b90506000816020015182600001516040516102a090610b94565b6001600160a01b03928316815291166020820152604001604051809103906000f0801580156102d3573d6000803e3d6000fd5b5060405163ca669fa760e01b815260016004820152909150737109709ecfa91a80626ff3989d68f67f5b1dd12d9063ca669fa790602401600060405180830381600087803b15801561032457600080fd5b505af1158015610338573d6000803e3d6000fd5b50505060208301516040516318fcb32f60e11b8152654f7261636c6560d01b60048201526001600160a01b03848116602483015290911691506331f9665e90604401600060405180830381600087803b15801561039457600080fd5b505af11580156103a8573d6000803e3d6000fd5b505050506040518060c0016040528083600001516001600160a01b0316815260200183602001516001600160a01b0316815260200183604001516001600160a01b0316815260200183606001516001600160a01b0316815260200183608001516001600160a01b03168152602001826001600160a01b03168152509250505090565b6060601480548060200260200160405190810160405280929190818152602001828054801561048257602002820191906000526020600020905b81546001600160a01b03168152600190910190602001808311610464575b5050505050905090565b6060601b805480602002602001604051908101604052809291908181526020016000905b828210156105c557600084815260208082206040805180820182526002870290920180546001600160a01b03168352600181018054835181870281018701909452808452939591948681019491929084015b828210156105ae57838290600052602060002001805461052190610ed0565b80601f016020809104026020016040519081016040528092919081815260200182805461054d90610ed0565b801561059a5780601f1061056f5761010080835404028352916020019161059a565b820191906000526020600020905b81548152906001019060200180831161057d57829003601f168201915b505050505081526020019060010190610502565b5050505081525050815260200190600101906104b0565b50505050905090565b60606016805480602002602001604051908101604052809291908181526020018280548015610482576020028201919060005260206000209081546001600160a01b03168152600190910190602001808311610464575050505050905090565b60606015805480602002602001604051908101604052809291908181526020018280548015610482576020028201919060005260206000209081546001600160a01b03168152600190910190602001808311610464575050505050905090565b60606019805480602002602001604051908101604052809291908181526020016000905b828210156105c55760008481526020908190206040805180820182526002860290920180546001600160a01b0316835260018101805483518187028101870190945280845293949193858301939283018282801561075c57602002820191906000526020600020906000905b82829054906101000a900460e01b6001600160e01b0319168152602001906004019060208260030104928301926001038202915080841161071e5790505b505050505081525050815260200190600101906106b2565b60606018805480602002602001604051908101604052809291908181526020016000905b828210156105c55783829060005260206000200180546107b790610ed0565b80601f01602080910402602001604051908101604052809291908181526020018280546107e390610ed0565b80156108305780601f1061080557610100808354040283529160200191610830565b820191906000526020600020905b81548152906001019060200180831161081357829003601f168201915b505050505081526020019060010190610798565b6060601a805480602002602001604051908101604052809291908181526020016000905b828210156105c55760008481526020908190206040805180820182526002860290920180546001600160a01b0316835260018101805483518187028101870190945280845293949193858301939283018282801561091257602002820191906000526020600020906000905b82829054906101000a900460e01b6001600160e01b031916815260200190600401906020826003010492830192600103820291508084116108d45790505b50505050508152505081526020019060010190610868565b60606017805480602002602001604051908101604052809291908181526020016000905b828210156105c557838290600052602060002001805461096d90610ed0565b80601f016020809104026020016040519081016040528092919081815260200182805461099990610ed0565b80156109e65780601f106109bb576101008083540402835291602001916109e6565b820191906000526020600020905b8154815290600101906020018083116109c957829003601f168201915b50505050508152602001906001019061094e565b600754600090610100900460ff1615610a1c5750600754610100900460ff1690565b6000737109709ecfa91a80626ff3989d68f67f5b1dd12d3b15610b225760408051737109709ecfa91a80626ff3989d68f67f5b1dd12d602082018190526519985a5b195960d21b82840152825180830384018152606083019093526000929091610aaa917f667f9d70ca411d70ead50d8d5c22070dafc36ad75f3dcf5e7237b22ade9aecc491608001610f0a565b60408051601f1981840301815290829052610ac491610f3b565b6000604051808303816000865af19150503d8060008114610b01576040519150601f19603f3d011682016040523d82523d6000602084013e610b06565b606091505b5091505080806020019051810190610b1e9190610f57565b9150505b919050565b60606013805480602002602001604051908101604052809291908181526020018280548015610482576020028201919060005260206000209081546001600160a01b03168152600190910190602001808311610464575050505050905090565b6145b480610f8183390190565b6112188061553583390190565b6020808252825182820181905260009190848201906040850190845b81811015610be25783516001600160a01b031683529284019291840191600101610bbd565b50909695505050505050565b60005b83811015610c09578181015183820152602001610bf1565b50506000910152565b6000602080830181845280855180835260408601915060408160051b870101925083870160005b82811015610ce057603f19888603018452815180516001600160a01b0316865286015160408787018190528151908701819052908701906060600582901b88018101919088019060005b81811015610cc957898403605f1901835284518051808652610caa818e88018f8501610bee565b958c0195601f01601f1916949094018b019350918a0191600101610c83565b509197505050938601935090850190600101610c39565b5092979650505050505050565b60006020808301818452808551808352604092508286019150828160051b8701018488016000805b84811015610d9157898403603f19018652825180516001600160a01b03168552880151888501889052805188860181905290890190839060608701905b80831015610d7c5783516001600160e01b0319168252928b019260019290920191908b0190610d52565b50978a01979550505091870191600101610d15565b50919998505050505050505050565b6000602080830181845280855180835260408601915060408160051b870101925083870160005b82811015610ce057878503603f1901845281518051808752610dee818989018a8501610bee565b601f01601f191695909501860194509285019290850190600101610dc7565b6001600160a01b0381168114610e2257600080fd5b50565b8051610b2281610e0d565b600060a08284031215610e4257600080fd5b60405160a0810181811067ffffffffffffffff82111715610e7357634e487b7160e01b600052604160045260246000fd5b6040528251610e8181610e0d565b81526020830151610e9181610e0d565b6020820152610ea260408401610e25565b6040820152610eb360608401610e25565b6060820152610ec460808401610e25565b60808201529392505050565b600181811c90821680610ee457607f821691505b602082108103610f0457634e487b7160e01b600052602260045260246000fd5b50919050565b6001600160e01b0319831681528151600090610f2d816004850160208701610bee565b919091016004019392505050565b60008251610f4d818460208701610bee565b9190910192915050565b600060208284031215610f6957600080fd5b81518015158114610f7957600080fd5b939250505056fe608060405260078054600160ff199182168117909255600b8054909116909117905534801561002d57600080fd5b506145778061003d6000396000f3fe60806040523480156200001157600080fd5b5060043610620000c35760003560e01c806385226c81116200007a57806385226c81146200018a578063916a17c614620001a3578063b5508aa914620001ad578063ba414fa614620001b7578063e20c9f7114620001d2578063fa7626d414620001dc57600080fd5b80630a9254e414620000c85780631ed7831c146200012b5780632ade388014620001445780633e5e3c23146200015d5780633f7286f4146200016757806366d9a9a01462000171575b600080fd5b620000d2620001ea565b60405162000122919081516001600160a01b039081168252602080840151821690830152604080840151821690830152606080840151821690830152608092830151169181019190915260a00190565b60405180910390f35b6200013562000618565b60405162000122919062000e41565b6200014e6200067c565b60405162000122919062000eb6565b62000135620007ca565b620001356200082c565b6200017b6200088e565b60405162000122919062000f97565b6200019462000978565b6040516200012291906200104e565b6200017b62000a52565b6200019462000b3c565b620001c162000c16565b604051901515815260200162000122565b6200013562000d4d565b600754620001c19060ff1681565b6040805160a08101825260008082526020820181905281830181905260608201819052608082015290516303223eab60e11b815260016004820152737109709ecfa91a80626ff3989d68f67f5b1dd12d906306447d5690602401600060405180830381600087803b1580156200025f57600080fd5b505af115801562000274573d6000803e3d6000fd5b505050506000604051620002889062000dfb565b604051809103906000f080158015620002a5573d6000803e3d6000fd5b506001600160a01b0316630a9254e46040518163ffffffff1660e01b81526004016020604051808303816000875af1158015620002e6573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200030c9190620010bf565b905060006040516200031e9062000e09565b604051809103906000f0801580156200033b573d6000803e3d6000fd5b50905060006200034c600062000daf565b62000358600062000daf565b84604051620003679062000e17565b92518352905160208301526001600160a01b03166040820152606001604051809103906000f080158015620003a0573d6000803e3d6000fd5b5090506000604051620003b39062000e25565b604051809103906000f080158015620003d0573d6000803e3d6000fd5b5090506000604051620003e39062000e33565b604051809103906000f08015801562000400573d6000803e3d6000fd5b506040516318fcb32f60e11b81526453746f726560d81b60048201526001600160a01b038581166024830152919250908516906331f9665e90604401600060405180830381600087803b1580156200045757600080fd5b505af11580156200046c573d6000803e3d6000fd5b50506040516318fcb32f60e11b81527210dbdb1b185d195c985b15da1a5d195b1a5cdd606a1b60048201526001600160a01b038581166024830152871692506331f9665e9150604401600060405180830381600087803b158015620004d057600080fd5b505af1158015620004e5573d6000803e3d6000fd5b50506040516318fcb32f60e11b8152721259195b9d1a599a595c95da1a5d195b1a5cdd606a1b60048201526001600160a01b038481166024830152871692506331f9665e9150604401600060405180830381600087803b1580156200054957600080fd5b505af11580156200055e573d6000803e3d6000fd5b505050507f885cb69240a935d632d79c317109709ecfa91a80626ff3989d68f67f5b1dd12d60001c6001600160a01b03166390c5013b6040518163ffffffff1660e01b8152600401600060405180830381600087803b158015620005c157600080fd5b505af1158015620005d6573d6000803e3d6000fd5b50506040805160a0810182526001600160a01b039889168152968816602088015294871694860194909452509084166060840152909216608082015292915050565b606060148054806020026020016040519081016040528092919081815260200182805480156200067257602002820191906000526020600020905b81546001600160a01b0316815260019091019060200180831162000653575b5050505050905090565b6060601b805480602002602001604051908101604052809291908181526020016000905b82821015620007c157600084815260208082206040805180820182526002870290920180546001600160a01b03168352600181018054835181870281018701909452808452939591948681019491929084015b82821015620007a95783829060005260206000200180546200071590620010ea565b80601f01602080910402602001604051908101604052809291908181526020018280546200074390620010ea565b8015620007945780601f10620007685761010080835404028352916020019162000794565b820191906000526020600020905b8154815290600101906020018083116200077657829003601f168201915b505050505081526020019060010190620006f3565b505050508152505081526020019060010190620006a0565b50505050905090565b6060601680548060200260200160405190810160405280929190818152602001828054801562000672576020028201919060005260206000209081546001600160a01b0316815260019091019060200180831162000653575050505050905090565b6060601580548060200260200160405190810160405280929190818152602001828054801562000672576020028201919060005260206000209081546001600160a01b0316815260019091019060200180831162000653575050505050905090565b60606019805480602002602001604051908101604052809291908181526020016000905b82821015620007c15760008481526020908190206040805180820182526002860290920180546001600160a01b031683526001810180548351818702810187019094528084529394919385830193928301828280156200095f57602002820191906000526020600020906000905b82829054906101000a900460e01b6001600160e01b03191681526020019060040190602082600301049283019260010382029150808411620009205790505b50505050508152505081526020019060010190620008b2565b60606018805480602002602001604051908101604052809291908181526020016000905b82821015620007c1578382906000526020600020018054620009be90620010ea565b80601f0160208091040260200160405190810160405280929190818152602001828054620009ec90620010ea565b801562000a3d5780601f1062000a115761010080835404028352916020019162000a3d565b820191906000526020600020905b81548152906001019060200180831162000a1f57829003601f168201915b5050505050815260200190600101906200099c565b6060601a805480602002602001604051908101604052809291908181526020016000905b82821015620007c15760008481526020908190206040805180820182526002860290920180546001600160a01b0316835260018101805483518187028101870190945280845293949193858301939283018282801562000b2357602002820191906000526020600020906000905b82829054906101000a900460e01b6001600160e01b0319168152602001906004019060208260030104928301926001038202915080841162000ae45790505b5050505050815250508152602001906001019062000a76565b60606017805480602002602001604051908101604052809291908181526020016000905b82821015620007c157838290600052602060002001805462000b8290620010ea565b80601f016020809104026020016040519081016040528092919081815260200182805462000bb090620010ea565b801562000c015780601f1062000bd55761010080835404028352916020019162000c01565b820191906000526020600020905b81548152906001019060200180831162000be357829003601f168201915b50505050508152602001906001019062000b60565b600754600090610100900460ff161562000c395750600754610100900460ff1690565b6000737109709ecfa91a80626ff3989d68f67f5b1dd12d3b1562000d485760408051737109709ecfa91a80626ff3989d68f67f5b1dd12d602082018190526519985a5b195960d21b8284015282518083038401815260608301909352600092909162000cca917f667f9d70ca411d70ead50d8d5c22070dafc36ad75f3dcf5e7237b22ade9aecc49160800162001126565b60408051601f198184030181529082905262000ce69162001159565b6000604051808303816000865af19150503d806000811462000d25576040519150601f19603f3d011682016040523d82523d6000602084013e62000d2a565b606091505b509150508080602001905181019062000d44919062001177565b9150505b919050565b6060601380548060200260200160405190810160405280929190818152602001828054801562000672576020028201919060005260206000209081546001600160a01b0316815260019091019060200180831162000653575050505050905090565b60408051602081019091526000815260408051602081019091528062000dde84670de0b6b3a764000062000de6565b905292915050565b600062000df482846200119b565b9392505050565b6101b580620011ca83390190565b610480806200137f83390190565b611f8b80620017ff83390190565b61095e806200378a83390190565b61045a80620040e883390190565b6020808252825182820181905260009190848201906040850190845b8181101562000e845783516001600160a01b03168352928401929184019160010162000e5d565b50909695505050505050565b60005b8381101562000ead57818101518382015260200162000e93565b50506000910152565b6000602080830181845280855180835260408601915060408160051b870101925083870160005b8281101562000f8a57603f19888603018452815180516001600160a01b0316865286015160408787018190528151908701819052908701906060600582901b88018101919088019060005b8181101562000f7257898403605f190183528451805180865262000f52818e88018f850162000e90565b958c0195601f01601f1916949094018b019350918a019160010162000f28565b50919750505093860193509085019060010162000edd565b5092979650505050505050565b60006020808301818452808551808352604092508286019150828160051b8701018488016000805b848110156200103f57898403603f19018652825180516001600160a01b03168552880151888501889052805188860181905290890190839060608701905b80831015620010295783516001600160e01b0319168252928b019260019290920191908b019062000ffd565b50978a0197955050509187019160010162000fbf565b50919998505050505050505050565b6000602080830181845280855180835260408601915060408160051b870101925083870160005b8281101562000f8a57878503603f19018452815180518087526200109f818989018a850162000e90565b601f01601f19169590950186019450928501929085019060010162001075565b600060208284031215620010d257600080fd5b81516001600160a01b038116811462000df457600080fd5b600181811c90821680620010ff57607f821691505b6020821081036200112057634e487b7160e01b600052602260045260246000fd5b50919050565b6001600160e01b03198316815281516000906200114b81600485016020870162000e90565b919091016004019392505050565b600082516200116d81846020870162000e90565b9190910192915050565b6000602082840312156200118a57600080fd5b8151801515811462000df457600080fd5b6000816000190483118215151615620011c457634e487b7160e01b600052601160045260246000fd5b50029056fe608060405234801561001057600080fd5b50610195806100206000396000f3fe608060405234801561001057600080fd5b506004361061002b5760003560e01c80630a9254e414610030575b600080fd5b610038610054565b6040516001600160a01b03909116815260200160405180910390f35b600060405161006290610084565b604051809103906000f08015801561007e573d6000803e3d6000fd5b50905090565b60cf806100918339019056fe608060405234801561001057600080fd5b504260005560ac806100236000396000f3fe6080604052348015600f57600080fd5b506004361060325760003560e01c806322f8e56614603757806329cb924d146049575b600080fd5b60476042366004605e565b600055565b005b60005460405190815260200160405180910390f35b600060208284031215606f57600080fd5b503591905056fea2646970667358221220ac5277a6d951fefada8e9d179a43cc6317941f75cad69224364e3024cf39f58e64736f6c63430008100033a26469706673582212207d8871378c623a5dea15cfb24a39319d130f503849e860fc71f867f1c69297ba64736f6c63430008100033608060405234801561001057600080fd5b5061001a3361001f565b61006f565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6104028061007e6000396000f3fe608060405234801561001057600080fd5b50600436106100625760003560e01c806331f9665e14610067578063715018a61461007c5780638da5cb5b14610084578063aafd5e40146100ad578063cc48f4db146100c0578063f2fde38b146100e9575b600080fd5b61007a610075366004610330565b6100fc565b005b61007a610188565b6000546001600160a01b03165b6040516001600160a01b03909116815260200160405180910390f35b6100916100bb36600461035c565b6101be565b6100916100ce36600461035c565b6001602052600090815260409020546001600160a01b031681565b61007a6100f7366004610375565b610229565b6000546001600160a01b0316331461012f5760405162461bcd60e51b815260040161012690610397565b60405180910390fd5b60008281526001602052604080822080546001600160a01b0319166001600160a01b0385169081179091559051909184917fb29aa13e555039289e0513962835b00fcc6e4a265ae8f99e68e5b90d5406fe489190a35050565b6000546001600160a01b031633146101b25760405162461bcd60e51b815260040161012690610397565b6101bc60006102c4565b565b6000818152600160205260408120546001600160a01b0316806102235760405162461bcd60e51b815260206004820152601860248201527f496d706c656d656e746174696f6e206e6f7420666f756e6400000000000000006044820152606401610126565b92915050565b6000546001600160a01b031633146102535760405162461bcd60e51b815260040161012690610397565b6001600160a01b0381166102b85760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608401610126565b6102c1816102c4565b50565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b80356001600160a01b038116811461032b57600080fd5b919050565b6000806040838503121561034357600080fd5b8235915061035360208401610314565b90509250929050565b60006020828403121561036e57600080fd5b5035919050565b60006020828403121561038757600080fd5b61039082610314565b9392505050565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260408201526060019056fea26469706673582212200252ff2d138f6d885f918d0a2b22e867dd71bd3438f512cd1d4016487f70090264736f6c6343000810003360806040523480156200001157600080fd5b5060405162001f8b38038062001f8b833981016040819052620000349162000655565b600280546001600160a01b0319166001600160a01b0383161790556200005d600080336200008b565b6200006c6001600033620001ec565b620000778362000203565b620000828262000300565b505050620006f5565b826000808281526020819052604090206001015460ff166002811115620000b657620000b6620006b1565b14620001095760405162461bcd60e51b815260206004820152601e60248201527f43616e6e6f74207573652061207072652d6578697374696e6720726f6c65000060448201526064015b60405180910390fd5b60008481526020819052604090206001808201805460ff191682800217905550838155620001476002820184620003f7602090811b62000dd717901c565b60008481526020819052604081206001015460ff166002811115620001705762000170620006b1565b03620001e55760405162461bcd60e51b815260206004820152603c60248201527f417474656d7074656420746f2075736520616e20696e76616c696420726f6c6560448201527f20746f206d616e61676520616e206578636c757369766520726f6c6500000000606482015260840162000100565b5050505050565b6001839055620001fe8383836200008b565b505050565b600062000211813362000407565b620002595760405162461bcd60e51b8152602060048201526022602482015260008051602062001f6b8339815191526044820152616c6560f01b606482015260840162000100565b62000274600183620004df60201b62000de11790919060201c565b620002c25760405162461bcd60e51b815260206004820152601e60248201527f466565206d757374206265203c203130302520706572207365636f6e642e0000604482015260640162000100565b815160038190556040519081527e41cf46cedaae9927def5c0647b190fd958c8ab8cde4219dad74319bc05d3d9906020015b60405180910390a15050565b60006200030e813362000407565b620003565760405162461bcd60e51b8152602060048201526022602482015260008051602062001f6b8339815191526044820152616c6560f01b606482015260840162000100565b62000371600183620004df60201b62000de11790919060201c565b620003bf5760405162461bcd60e51b815260206004820152601f60248201527f7765656b6c792064656c617920666565206d757374206265203c203130302500604482015260640162000100565b815160048190556040519081527f2e6cd3e6f7808568620c647ac0e652b0e95bef2494692adbc118fbbd02a8e82e90602001620002f4565b620004038282620004f8565b5050565b600082815260208190526040812060018082015460ff166002811115620004325762000432620006b1565b036200045e576200045583826002016200057960201b62000df81790919060201c565b915050620004d9565b6002600182015460ff1660028111156200047c576200047c620006b1565b036200049f576200045583826003016200058c60201b62000e0b1790919060201c565b60405162461bcd60e51b815260206004820152600e60248201526d125b9d985b1a59081c9bdb19525960921b604482015260640162000100565b92915050565b6000620004ec82620005ab565b51835110905092915050565b6001600160a01b0381166200055c5760405162461bcd60e51b815260206004820152602360248201527f43616e6e6f742073657420616e206578636c757369766520726f6c6520746f2060448201526203078360ec1b606482015260840162000100565b81546001600160a01b0319166001600160a01b0391909116179055565b90546001600160a01b0391821691161490565b6001600160a01b03166000908152602091909152604090205460ff1690565b6040805160208101909152600081526040518060200160405280620005e7670de0b6b3a764000085620005ef60201b62000e2a1790919060201c565b905292915050565b6000620005fd8284620006c7565b9392505050565b6000602082840312156200061757600080fd5b604051602081016001600160401b03811182821017156200064857634e487b7160e01b600052604160045260246000fd5b6040529151825250919050565b6000806000606084860312156200066b57600080fd5b62000677858562000604565b925062000688856020860162000604565b60408501519092506001600160a01b0381168114620006a657600080fd5b809150509250925092565b634e487b7160e01b600052602160045260246000fd5b6000816000190483118215151615620006f057634e487b7160e01b600052601160045260246000fd5b500290565b61186680620007056000396000f3fe6080604052600436106101355760003560e01c80637d69dfdb116100ab578063ab3545e51161006f578063ab3545e5146103b1578063acb6f6cb146103d1578063b187487d146103f1578063bd1f4b5214610411578063cd3a9b2414610431578063d97c05be1461043957600080fd5b80637d69dfdb146103235780637e7e591d1461033a57806384ae2a741461035a5780638659d23214610371578063aaa14ca31461039157600080fd5b80635b97aadd116100fd5780635b97aadd146101f35780636be7658b146102515780636f356f4a1461027157806374201feb1461029e57806374d0a676146102d35780637cdc1cb9146102f357600080fd5b80631c39c38d1461013a57806322f8e5661461017757806329cb924d146101995780632e1a7d4d146101bc5780632fee2098146101dc575b600080fd5b34801561014657600080fd5b5060025461015a906001600160a01b031681565b6040516001600160a01b0390911681526020015b60405180910390f35b34801561018357600080fd5b5061019761019236600461142b565b610459565b005b3480156101a557600080fd5b506101ae6104cf565b60405190815260200161016e565b3480156101c857600080fd5b506101976101d736600461142b565b610564565b3480156101e857600080fd5b506003546101ae9081565b3480156101ff57600080fd5b5061024261020e366004611460565b60408051602080820183526000918290526001600160a01b0393909316815260058352819020815192830190915254815290565b6040519051815260200161016e565b34801561025d57600080fd5b5061019761026c36600461147b565b6105a4565b34801561027d57600080fd5b506101ae61028c366004611460565b60056020526000908152604090205481565b3480156102aa57600080fd5b506102be6102b93660046114bf565b61067a565b6040805192518352905160208301520161016e565b3480156102df57600080fd5b506101976102ee36600461147b565b610740565b3480156102ff57600080fd5b5061031361030e36600461147b565b610816565b604051901515815260200161016e565b34801561032f57600080fd5b506004546101ae9081565b34801561034657600080fd5b50610197610355366004611545565b6108cb565b34801561036657600080fd5b506101ae62093a8081565b34801561037d57600080fd5b5061019761038c366004611570565b61094f565b34801561039d57600080fd5b506101976103ac36600461142b565b6109d1565b3480156103bd57600080fd5b5061015a6103cc36600461142b565b610a8d565b3480156103dd57600080fd5b506101976103ec36600461159b565b610af8565b3480156103fd57600080fd5b5061019761040c36600461159b565b610bb5565b34801561041d57600080fd5b5061019761042c3660046115b7565b610c6b565b610197610caf565b34801561044557600080fd5b5061019761045436600461147b565b610d01565b6002546001600160a01b031661046e57600080fd5b60025460405163117c72b360e11b8152600481018390526001600160a01b03909116906322f8e56690602401600060405180830381600087803b1580156104b457600080fd5b505af11580156104c8573d6000803e3d6000fd5b5050505050565b6002546000906001600160a01b03161561055f57600260009054906101000a90046001600160a01b03166001600160a01b03166329cb924d6040518163ffffffff1660e01b8152600401602060405180830381865afa158015610536573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061055a91906115e1565b905090565b504290565b6001546105718133610816565b6105965760405162461bcd60e51b815260040161058d906115fa565b60405180910390fd5b6105a03383610e36565b5050565b81600260008281526020819052604090206001015460ff1660028111156105cd576105cd61163c565b146105ea5760405162461bcd60e51b815260040161058d90611652565b60008381526020819052604090205483906106059033610816565b6106215760405162461bcd60e51b815260040161058d9061169e565b600084815260208190526040902061063c9060030184610f4f565b60405133906001600160a01b0385169086907feb3e33034c392e69263b04ec0fa376dc12784a41b6676c7f31b936cbc0fbb5af90600090a450505050565b60408051602081019091526000815260408051602081019091526000815260006106a48587610f71565b604080516020810190915260035481529091506106da906106d4836106ce3689900389018961159b565b90610f7d565b90610fae565b925060006106f0876106ea6104cf565b90610f71565b9050600061071a6107048362093a80610feb565b6040805160208101909152600454815290610f7d565b9050610733816106d4856106ce368b90038b018b61159b565b9350505050935093915050565b81600260008281526020819052604090206001015460ff1660028111156107695761076961163c565b146107865760405162461bcd60e51b815260040161058d90611652565b60008381526020819052604090205483906107a19033610816565b6107bd5760405162461bcd60e51b815260040161058d9061169e565b60008481526020819052604090206107d89060030184610ff7565b60405133906001600160a01b0385169086907f63502af7324ff6db91ab38f8236a648727d9385ea6c782073dd4882d8a61a48f90600090a450505050565b600082815260208190526040812060018082015460ff16600281111561083e5761083e61163c565b0361085f5760028101546001600160a01b038481169116145b9150506108c5565b6002600182015460ff16600281111561087a5761087a61163c565b0361088c576108576003820184610e0b565b60405162461bcd60e51b815260206004820152600e60248201526d125b9d985b1a59081c9bdb19525960921b604482015260640161058d565b92915050565b60006108d78133610816565b6108f35760405162461bcd60e51b815260040161058d906115fa565b6001600160a01b0383166000908152600560205260409081902083519055517f98c807f575ae6584ff8200eaf3205f3f20abf9c954fff030c152f5e7c5446d6e90610942908451815260200190565b60405180910390a1505050565b8161096a60006109643685900385018561159b565b90611072565b6109b65760405162461bcd60e51b815260206004820152601960248201527f416d6f756e742073656e742063616e2774206265207a65726f00000000000000604482015260640161058d565b6109cc6001600160a01b03821633308535611089565b505050565b80600260008281526020819052604090206001015460ff1660028111156109fa576109fa61163c565b14610a175760405162461bcd60e51b815260040161058d90611652565b81610a228133610816565b610a3e5760405162461bcd60e51b815260040161058d906115fa565b6000838152602081905260409020610a599060030133610f4f565b6040513390819085907feb3e33034c392e69263b04ec0fa376dc12784a41b6676c7f31b936cbc0fbb5af90600090a4505050565b600081600160008281526020819052604090206001015460ff166002811115610ab857610ab861163c565b14610ad55760405162461bcd60e51b815260040161058d906116e2565b6000838152602081905260409020600201546001600160a01b03165b9392505050565b6000610b048133610816565b610b205760405162461bcd60e51b815260040161058d906115fa565b610b2b826001610de1565b610b775760405162461bcd60e51b815260206004820152601e60248201527f466565206d757374206265203c203130302520706572207365636f6e642e0000604482015260640161058d565b815160038190556040519081527e41cf46cedaae9927def5c0647b190fd958c8ab8cde4219dad74319bc05d3d9906020015b60405180910390a15050565b6000610bc18133610816565b610bdd5760405162461bcd60e51b815260040161058d906115fa565b610be8826001610de1565b610c345760405162461bcd60e51b815260206004820152601f60248201527f7765656b6c792064656c617920666565206d757374206265203c203130302500604482015260640161058d565b815160048190556040519081527f2e6cd3e6f7808568620c647ac0e652b0e95bef2494692adbc118fbbd02a8e82e90602001610ba9565b600154610c788133610816565b610c945760405162461bcd60e51b815260040161058d906115fa565b82610ca96001600160a01b03821633856110f4565b50505050565b60003411610cff5760405162461bcd60e51b815260206004820152601860248201527f56616c75652073656e742063616e2774206265207a65726f0000000000000000604482015260640161058d565b565b81600160008281526020819052604090206001015460ff166002811115610d2a57610d2a61163c565b14610d475760405162461bcd60e51b815260040161058d906116e2565b6000838152602081905260409020548390610d629033610816565b610d7e5760405162461bcd60e51b815260040161058d9061169e565b6000848152602081905260409020610d999060020184611124565b60405133906001600160a01b0385169086907f3b855c56b409b671c7112789d022675eb639d0bcb8896f1b6197c132f799e74690600090a450505050565b6105a08282611124565b6000610dec826111a3565b51835110905092915050565b90546001600160a01b0391821691161490565b6001600160a01b03166000908152602091909152604090205460ff1690565b6000610af18284611747565b80471015610e865760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a20696e73756666696369656e742062616c616e6365000000604482015260640161058d565b6000826001600160a01b03168260405160006040518083038185875af1925050503d8060008114610ed3576040519150601f19603f3d011682016040523d82523d6000602084013e610ed8565b606091505b50509050806109cc5760405162461bcd60e51b815260206004820152603a60248201527f416464726573733a20756e61626c6520746f2073656e642076616c75652c207260448201527f6563697069656e74206d61792068617665207265766572746564000000000000606482015260840161058d565b6001600160a01b0316600090815260209190915260409020805460ff19169055565b6000610af18284611766565b604080516020810190915260008152604080516020810190915283518190610fa59085610e2a565b90529392505050565b6040805160208101909152600081526040805160208101909152825184518291670de0b6b3a764000091610fe191610e2a565b610fa59190611779565b6000610af18284611779565b6001600160a01b03811661104d5760405162461bcd60e51b815260206004820152601f60248201527f43616e6e6f74206164642030783020746f20612073686172656420726f6c6500604482015260640161058d565b6001600160a01b0316600090815260209190915260409020805460ff19166001179055565b600061107d826111a3565b51835111905092915050565b6040516001600160a01b0380851660248301528316604482015260648101829052610ca99085906323b872dd60e01b906084015b60408051601f198184030181529190526020810180516001600160e01b03166001600160e01b0319909316929092179091526111d8565b6040516001600160a01b0383166024820152604481018290526109cc90849063a9059cbb60e01b906064016110bd565b6001600160a01b0381166111865760405162461bcd60e51b815260206004820152602360248201527f43616e6e6f742073657420616e206578636c757369766520726f6c6520746f2060448201526203078360ec1b606482015260840161058d565b81546001600160a01b0319166001600160a01b0391909116179055565b6040805160208101909152600081526040805160208101909152806111d084670de0b6b3a7640000610e2a565b905292915050565b600061122d826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b03166112aa9092919063ffffffff16565b8051909150156109cc578080602001905181019061124b919061179b565b6109cc5760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b606482015260840161058d565b60606112b984846000856112c1565b949350505050565b6060824710156113225760405162461bcd60e51b815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f6044820152651c8818d85b1b60d21b606482015260840161058d565b6001600160a01b0385163b6113795760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000604482015260640161058d565b600080866001600160a01b0316858760405161139591906117e1565b60006040518083038185875af1925050503d80600081146113d2576040519150601f19603f3d011682016040523d82523d6000602084013e6113d7565b606091505b50915091506113e78282866113f2565b979650505050505050565b60608315611401575081610af1565b8251156114115782518084602001fd5b8160405162461bcd60e51b815260040161058d91906117fd565b60006020828403121561143d57600080fd5b5035919050565b80356001600160a01b038116811461145b57600080fd5b919050565b60006020828403121561147257600080fd5b610af182611444565b6000806040838503121561148e57600080fd5b8235915061149e60208401611444565b90509250929050565b6000602082840312156114b957600080fd5b50919050565b6000806000606084860312156114d457600080fd5b83359250602084013591506114ec85604086016114a7565b90509250925092565b60006020828403121561150757600080fd5b6040516020810181811067ffffffffffffffff8211171561153857634e487b7160e01b600052604160045260246000fd5b6040529135825250919050565b6000806040838503121561155857600080fd5b61156183611444565b915061149e84602085016114f5565b6000806040838503121561158357600080fd5b61158c83611444565b915061149e84602085016114a7565b6000602082840312156115ad57600080fd5b610af183836114f5565b600080604083850312156115ca57600080fd5b6115d383611444565b946020939093013593505050565b6000602082840312156115f357600080fd5b5051919050565b60208082526022908201527f53656e64657220646f6573206e6f7420686f6c6420726571756972656420726f6040820152616c6560f01b606082015260800190565b634e487b7160e01b600052602160045260246000fd5b6020808252602c908201527f4d7573742062652063616c6c6564206f6e20616e20696e697469616c697a656460408201526b2053686172656420726f6c6560a01b606082015260800190565b60208082526024908201527f43616e206f6e6c792062652063616c6c6564206279206120726f6c65206d616e60408201526330b3b2b960e11b606082015260800190565b6020808252602f908201527f4d7573742062652063616c6c6564206f6e20616e20696e697469616c697a656460408201526e204578636c757369766520726f6c6560881b606082015260800190565b634e487b7160e01b600052601160045260246000fd5b600081600019048311821515161561176157611761611731565b500290565b818103818111156108c5576108c5611731565b60008261179657634e487b7160e01b600052601260045260246000fd5b500490565b6000602082840312156117ad57600080fd5b81518015158114610af157600080fd5b60005b838110156117d85781810151838201526020016117c0565b50506000910152565b600082516117f38184602087016117bd565b9190910192915050565b602081526000825180602084015261181c8160408501602087016117bd565b601f01601f1916919091016040019291505056fea26469706673582212200e1fb084c8982e7255d560e846cc4c6ad74c5f9a9b38149bdde7bb884a481b1b64736f6c6343000810003353656e64657220646f6573206e6f7420686f6c6420726571756972656420726f608060405234801561001057600080fd5b5061001a33610032565b6000805460ff60a01b1916600160a01b179055610082565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6108cd806100916000396000f3fe608060405234801561001057600080fd5b50600436106100935760003560e01c80638da5cb5b116100665780638da5cb5b146101085780639b19251a14610119578063d01f63f514610149578063e43252d71461015e578063f2fde38b1461017157600080fd5b806337797c08146100985780633a3ab672146100c8578063715018a6146100eb5780638ab1d681146100f5575b600080fd5b6100ab6100a636600461073b565b610184565b6040516001600160a01b0390911681526020015b60405180910390f35b6100db6100d6366004610754565b6101ae565b60405190151581526020016100bf565b6100f36101ee565b005b6100f3610103366004610754565b61022d565b6000546001600160a01b03166100ab565b61013c610127366004610754565b60016020526000908152604090205460ff1681565b6040516100bf919061079a565b61015161030a565b6040516100bf91906107c2565b6100f361016c366004610754565b6104a0565b6100f361017f366004610754565b6105fa565b6002818154811061019457600080fd5b6000918252602090912001546001600160a01b0316905081565b60006101b8610692565b60016001600160a01b03831660009081526001602052604090205460ff1660028111156101e7576101e7610784565b1492915050565b6000546001600160a01b031633146102215760405162461bcd60e51b81526004016102189061080f565b60405180910390fd5b61022b60006106eb565b565b610235610692565b6102476000805460ff60a01b19169055565b6000546001600160a01b031633146102715760405162461bcd60e51b81526004016102189061080f565b60026001600160a01b03821660009081526001602052604090205460ff1660028111156102a0576102a0610784565b146102ef576001600160a01b038116600081815260016020526040808220805460ff19166002179055517fcdd2e9b91a56913d370075169cefa1602ba36be5301664f752192bb1709df7579190a25b6103076000805460ff60a01b1916600160a01b179055565b50565b6060610314610692565b6000805b6002548110156103985760018060006002848154811061033a5761033a610844565b60009182526020808320909101546001600160a01b0316835282019290925260400190205460ff16600281111561037357610373610784565b0361038657816103828161085a565b9250505b806103908161085a565b915050610318565b508067ffffffffffffffff8111156103b2576103b2610881565b6040519080825280602002602001820160405280156103db578160200160208202803683370190505b5091506000905060005b60025481101561049b5760006002828154811061040457610404610844565b6000918252602090912001546001600160a01b0316905060016001600160a01b03821660009081526001602052604090205460ff16600281111561044a5761044a610784565b03610488578084848151811061046257610462610844565b6001600160a01b0390921660209283029190910190910152826104848161085a565b9350505b50806104938161085a565b9150506103e5565b505090565b6104a8610692565b6104ba6000805460ff60a01b19169055565b6000546001600160a01b031633146104e45760405162461bcd60e51b81526004016102189061080f565b60016001600160a01b03821660009081526001602052604090205460ff16600281111561051357610513610784565b146102ef576001600160a01b03811660009081526001602052604081205460ff16600281111561054557610545610784565b0361059657600280546001810182556000919091527f405787fa12a823e0f2b7631cc41b3ba8828b3321ca811111fa75cd3aa3bb5ace0180546001600160a01b0319166001600160a01b0383161790555b6001600160a01b0381166000818152600160208190526040808320805460ff1916909217909155517fa850ae9193f515cbae8d35e8925bd2be26627fc91bce650b8652ed254e9cab039190a26103076000805460ff60a01b1916600160a01b179055565b6000546001600160a01b031633146106245760405162461bcd60e51b81526004016102189061080f565b6001600160a01b0381166106895760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608401610218565b610307816106eb565b600054600160a01b900460ff1661022b5760405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c006044820152606401610218565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b60006020828403121561074d57600080fd5b5035919050565b60006020828403121561076657600080fd5b81356001600160a01b038116811461077d57600080fd5b9392505050565b634e487b7160e01b600052602160045260246000fd5b60208101600383106107bc57634e487b7160e01b600052602160045260246000fd5b91905290565b6020808252825182820181905260009190848201906040850190845b818110156108035783516001600160a01b0316835292840192918401916001016107de565b50909695505050505050565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b634e487b7160e01b600052603260045260246000fd5b60006001820161087a57634e487b7160e01b600052601160045260246000fd5b5060010190565b634e487b7160e01b600052604160045260246000fdfea264697066735822122012579754682d9ca0b43a16b3094418ed8aa5ee7031d0fb774b381905d2c9cf5e64736f6c63430008100033608060405234801561001057600080fd5b5061001a3361001f565b61006f565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6103dc8061007e6000396000f3fe608060405234801561001057600080fd5b50600436106100625760003560e01c806310a7e20114610067578063715018a61461007c5780638da5cb5b146100845780638e0d3ca7146100a457806390978d1b146100b7578063f2fde38b146100ea575b600080fd5b61007a610075366004610328565b6100fd565b005b61007a61018d565b6000546040516001600160a01b0390911681526020015b60405180910390f35b61007a6100b2366004610328565b6101c3565b6100da6100c5366004610328565b60009081526001602052604090205460ff1690565b604051901515815260200161009b565b61007a6100f8366004610341565b610244565b6000546001600160a01b031633146101305760405162461bcd60e51b815260040161012790610371565b60405180910390fd5b60008181526001602052604090205460ff1661018a576000818152600160208190526040808320805460ff19169092179091555182917fa0ca1076d765c13772089a90b5121cf6ddf63c9f7891c4e5031adbc85936b27691a25b50565b6000546001600160a01b031633146101b75760405162461bcd60e51b815260040161012790610371565b6101c160006102d8565b565b6000546001600160a01b031633146101ed5760405162461bcd60e51b815260040161012790610371565b60008181526001602052604090205460ff161561018a57600081815260016020526040808220805460ff191690555182917fefdf15ca0f9402bd4e933b0edb0db65b23cc50d27cb010d8abcadaae4fa944e591a250565b6000546001600160a01b0316331461026e5760405162461bcd60e51b815260040161012790610371565b6001600160a01b0381166102d35760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608401610127565b61018a815b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b60006020828403121561033a57600080fd5b5035919050565b60006020828403121561035357600080fd5b81356001600160a01b038116811461036a57600080fd5b9392505050565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260408201526060019056fea26469706673582212200420ad640ea5d694ea28017924c73d0062ff64bd9ac631618e6fb3c5d0ca8aeb64736f6c63430008100033a2646970667358221220c74f5ca068d51d49125bff8669b3874b1237cd8193f4156aba9d1b2e7b22cab564736f6c63430008100033608060405234801561001057600080fd5b5060405161121838038061121883398101604081905261002f9161007f565b600080546001600160a01b039283166001600160a01b031991821617909155600180549390921692169190911790556100b2565b80516001600160a01b038116811461007a57600080fd5b919050565b6000806040838503121561009257600080fd5b61009b83610063565b91506100a960208401610063565b90509250929050565b611157806100c16000396000f3fe608060405234801561001057600080fd5b506004361061009e5760003560e01c8063719c6d5611610066578063719c6d5614610131578063b551cd5014610144578063b555d60814610167578063d7d6f43d1461017c578063f76177cf1461018f57600080fd5b80631c39c38d146100a3578063216666a4146100d357806322f8e566146100e857806329cb924d146100fb5780636a5ef50614610111575b600080fd5b6000546100b6906001600160a01b031681565b6040516001600160a01b0390911681526020015b60405180910390f35b6100e66100e1366004610c0f565b6101a2565b005b6100e66100f6366004610c5f565b61039c565b61010361040b565b6040519081526020016100ca565b61012461011f366004610c5f565b61049c565b6040516100ca9190610cef565b61010361013f366004610c0f565b6105f1565b610157610152366004610c0f565b610630565b60405190151581526020016100ca565b61016f61065f565b6040516100ca9190610d09565b6100e661018a366004610d6b565b610764565b6100e661019d366004610dc3565b610a33565b6101aa610a5d565b6001600160a01b03166390978d1b846040518263ffffffff1660e01b81526004016101d791815260200190565b602060405180830381865afa1580156101f4573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102189190610de5565b61022157600080fd5b600061022e848484610ae0565b600081815260026020526040902080549192509060ff16158015610261575060008281526003602052604090205460ff16155b15610395576040805180820182526001808252600480546020808501918252600088815260038083528782209651875490151560ff1990911617875592519585019590955585516060810187528b81529081018a81529581018981528354948501845592909452835192027f8a35acfbc15ff81a39ae7d344fd709f28e8600b4aa8c65c6b64bfe7fe36bd19b810192835593517f8a35acfbc15ff81a39ae7d344fd709f28e8600b4aa8c65c6b64bfe7fe36bd19c85015551919290917f8a35acfbc15ff81a39ae7d344fd709f28e8600b4aa8c65c6b64bfe7fe36bd19d9091019061034c9082610e8f565b5050508185336001600160a01b03167f5b89fcc758ee4d9d8841986019cd2bb83213389a619b54baff9ec2ec9944e7a7878760405161038c929190610f4f565b60405180910390a45b5050505050565b6000546001600160a01b03166103b157600080fd5b60005460405163117c72b360e11b8152600481018390526001600160a01b03909116906322f8e56690602401600060405180830381600087803b1580156103f757600080fd5b505af1158015610395573d6000803e3d6000fd5b600080546001600160a01b0316156104975760008054906101000a90046001600160a01b03166001600160a01b03166329cb924d6040518163ffffffff1660e01b8152600401602060405180830381865afa15801561046e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104929190610f68565b905090565b504290565b604080516060808201835260008083526020830152918101919091526000828152600360205260409020805460ff166105135760405162461bcd60e51b815260206004820152601460248201527314995c5d595cdd081251081b9bdd08199bdd5b9960621b60448201526064015b60405180910390fd5b600481600101548154811061052a5761052a610f81565b9060005260206000209060030201604051806060016040529081600082015481526020016001820154815260200160028201805461056790610e07565b80601f016020809104026020016040519081016040528092919081815260200182805461059390610e07565b80156105e05780601f106105b5576101008083540402835291602001916105e0565b820191906000526020600020905b8154815290600101906020018083116105c357829003601f168201915b505050505081525050915050919050565b60008060026000610603878787610ae0565b81526020810191909152604001600020805490915060ff1661062457600080fd5b60010154949350505050565b60008060026000610642878787610ae0565b815260208101919091526040016000205460ff1695945050505050565b60606004805480602002602001604051908101604052809291908181526020016000905b8282101561075b578382906000526020600020906003020160405180606001604052908160008201548152602001600182015481526020016002820180546106ca90610e07565b80601f01602080910402602001604051908101604052809291908181526020018280546106f690610e07565b80156107435780601f1061071857610100808354040283529160200191610743565b820191906000526020600020905b81548152906001019060200180831161072657829003601f168201915b50505050508152505081526020019060010190610683565b50505050905090565b6000610771858585610ae0565b9050604051806060016040528060011515815260200183815260200161079561040b565b905260008281526002602081815260408084208551815460ff1916901515178155858301516001820155948101519490920193909355600390925220805460ff166108385760405162461bcd60e51b815260206004820152602d60248201527f43616e2774207075736820707269636573207468617420686176656e2774206260448201526c19595b881c995c5d595cdd1959609a1b606482015260840161050a565b6001808201546000848152600360205260408120805460ff1916815583018190556004549192909161086a9190610f97565b90508181146109a05760006004828154811061088857610888610f81565b90600052602060002090600302019050826003600061093c846000015485600101548660020180546108b990610e07565b80601f01602080910402602001604051908101604052809291908181526020018280546108e590610e07565b80156109325780601f1061090757610100808354040283529160200191610932565b820191906000526020600020905b81548152906001019060200180831161091557829003601f168201915b5050505050610ae0565b815260200190815260200160002060010181905550806004848154811061096557610965610f81565b906000526020600020906003020160008201548160000155600182015481600101556002820181600201908161099b9190610fbe565b505050505b60048054806109b1576109b1611091565b60008281526020812060036000199093019283020181815560018101829055906109de6002830182610b16565b505090558388336001600160a01b03167f01aba42f88d71f240ed63f6e0b37e62ba65f3d4bc0f11228ef9163cdc56c64b58a8a8a604051610a21939291906110a7565b60405180910390a45050505050505050565b6000610a3e8361049c565b9050610a5881600001518260200151836040015185610764565b505050565b6001546040516302abf57960e61b8152721259195b9d1a599a595c95da1a5d195b1a5cdd606a1b60048201526000916001600160a01b03169063aafd5e4090602401602060405180830381865afa158015610abc573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061049291906110d0565b6000838383604051602001610af7939291906110f9565b6040516020818303038152906040528051906020012090509392505050565b508054610b2290610e07565b6000825580601f10610b32575050565b601f016020900490600052602060002090810190610b509190610b53565b50565b5b80821115610b685760008155600101610b54565b5090565b634e487b7160e01b600052604160045260246000fd5b600082601f830112610b9357600080fd5b813567ffffffffffffffff80821115610bae57610bae610b6c565b604051601f8301601f19908116603f01168101908282118183101715610bd657610bd6610b6c565b81604052838152866020858801011115610bef57600080fd5b836020870160208301376000602085830101528094505050505092915050565b600080600060608486031215610c2457600080fd5b8335925060208401359150604084013567ffffffffffffffff811115610c4957600080fd5b610c5586828701610b82565b9150509250925092565b600060208284031215610c7157600080fd5b5035919050565b6000815180845260005b81811015610c9e57602081850181015186830182015201610c82565b506000602082860101526020601f19601f83011685010191505092915050565b80518252602081015160208301526000604082015160606040850152610ce76060850182610c78565b949350505050565b602081526000610d026020830184610cbe565b9392505050565b6000602080830181845280855180835260408601915060408160051b870101925083870160005b82811015610d5e57603f19888603018452610d4c858351610cbe565b94509285019290850190600101610d30565b5092979650505050505050565b60008060008060808587031215610d8157600080fd5b8435935060208501359250604085013567ffffffffffffffff811115610da657600080fd5b610db287828801610b82565b949793965093946060013593505050565b60008060408385031215610dd657600080fd5b50508035926020909101359150565b600060208284031215610df757600080fd5b81518015158114610d0257600080fd5b600181811c90821680610e1b57607f821691505b602082108103610e3b57634e487b7160e01b600052602260045260246000fd5b50919050565b601f821115610a5857600081815260208120601f850160051c81016020861015610e685750805b601f850160051c820191505b81811015610e8757828155600101610e74565b505050505050565b815167ffffffffffffffff811115610ea957610ea9610b6c565b610ebd81610eb78454610e07565b84610e41565b602080601f831160018114610ef25760008415610eda5750858301515b600019600386901b1c1916600185901b178555610e87565b600085815260208120601f198616915b82811015610f2157888601518255948401946001909101908401610f02565b5085821015610f3f5787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b828152604060208201526000610ce76040830184610c78565b600060208284031215610f7a57600080fd5b5051919050565b634e487b7160e01b600052603260045260246000fd5b81810381811115610fb857634e487b7160e01b600052601160045260246000fd5b92915050565b818103610fc9575050565b610fd38254610e07565b67ffffffffffffffff811115610feb57610feb610b6c565b610ff981610eb78454610e07565b6000601f82116001811461102d57600083156110155750848201545b600019600385901b1c1916600184901b178455610395565b600085815260209020601f19841690600086815260209020845b838110156110675782860154825560019586019590910190602001611047565b5085831015610f3f5793015460001960f8600387901b161c19169092555050600190811b01905550565b634e487b7160e01b600052603160045260246000fd5b8381526060602082015260006110c06060830185610c78565b9050826040830152949350505050565b6000602082840312156110e257600080fd5b81516001600160a01b0381168114610d0257600080fd5b8381528260208201526060604082015260006111186060830184610c78565b9594505050505056fea2646970667358221220f4b1e35f6eb1f5816327034316343d8b6a7a59647aab0193187ab03600ae070964736f6c63430008100033a264697066735822122055db8847a4d7601c142031cd5c9ebcf936788623236ed26aff77f30c70420aeb64736f6c6343000810003360806040523480156200001157600080fd5b5060405162000cff38038062000cff833981016040819052620000349162000139565b828260036200004483826200024d565b5060046200005382826200024d565b50506005805460ff191660ff93909316929092179091555062000319915050565b634e487b7160e01b600052604160045260246000fd5b600082601f8301126200009c57600080fd5b81516001600160401b0380821115620000b957620000b962000074565b604051601f8301601f19908116603f01168101908282118183101715620000e457620000e462000074565b816040528381526020925086838588010111156200010157600080fd5b600091505b8382101562000125578582018301518183018401529082019062000106565b600093810190920192909252949350505050565b6000806000606084860312156200014f57600080fd5b83516001600160401b03808211156200016757600080fd5b62000175878388016200008a565b945060208601519150808211156200018c57600080fd5b506200019b868287016200008a565b925050604084015160ff81168114620001b357600080fd5b809150509250925092565b600181811c90821680620001d357607f821691505b602082108103620001f457634e487b7160e01b600052602260045260246000fd5b50919050565b601f8211156200024857600081815260208120601f850160051c81016020861015620002235750805b601f850160051c820191505b8181101562000244578281556001016200022f565b5050505b505050565b81516001600160401b0381111562000269576200026962000074565b62000281816200027a8454620001be565b84620001fa565b602080601f831160018114620002b95760008415620002a05750858301515b600019600386901b1c1916600185901b17855562000244565b600085815260208120601f198616915b82811015620002ea57888601518255948401946001909101908401620002c9565b5085821015620003095787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b6109d680620003296000396000f3fe608060405234801561001057600080fd5b50600436106100b45760003560e01c80633950935111610071578063395093511461014957806370a082311461015c57806395d89b4114610185578063a457c2d71461018d578063a9059cbb146101a0578063dd62ed3e146101b357600080fd5b806306fdde03146100b957806308bca566146100d7578063095ea7b3146100ec57806318160ddd1461010f57806323b872dd14610121578063313ce56714610134575b600080fd5b6100c16101ec565b6040516100ce9190610820565b60405180910390f35b6100ea6100e536600461088a565b61027e565b005b6100ff6100fa36600461088a565b61028c565b60405190151581526020016100ce565b6002545b6040519081526020016100ce565b6100ff61012f3660046108b4565b6102a6565b60055460405160ff90911681526020016100ce565b6100ff61015736600461088a565b6102ca565b61011361016a3660046108f0565b6001600160a01b031660009081526020819052604090205490565b6100c1610309565b6100ff61019b36600461088a565b610318565b6100ff6101ae36600461088a565b6103af565b6101136101c1366004610912565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b6060600380546101fb90610945565b80601f016020809104026020016040519081016040528092919081815260200182805461022790610945565b80156102745780601f1061024957610100808354040283529160200191610274565b820191906000526020600020905b81548152906001019060200180831161025757829003601f168201915b5050505050905090565b61028882826103bd565b5050565b60003361029a81858561049c565b60019150505b92915050565b6000336102b48582856105c0565b6102bf858585610652565b506001949350505050565b3360008181526001602090815260408083206001600160a01b038716845290915281205490919061029a908290869061030490879061097f565b61049c565b6060600480546101fb90610945565b3360008181526001602090815260408083206001600160a01b0387168452909152812054909190838110156103a25760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b60648201526084015b60405180910390fd5b6102bf828686840361049c565b60003361029a818585610652565b6001600160a01b0382166104135760405162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f2061646472657373006044820152606401610399565b8060026000828254610425919061097f565b90915550506001600160a01b0382166000908152602081905260408120805483929061045290849061097f565b90915550506040518181526001600160a01b038316906000907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9060200160405180910390a35050565b6001600160a01b0383166104fe5760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b6064820152608401610399565b6001600160a01b03821661055f5760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b6064820152608401610399565b6001600160a01b0383811660008181526001602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b6001600160a01b03838116600090815260016020908152604080832093861683529290522054600019811461064c578181101561063f5760405162461bcd60e51b815260206004820152601d60248201527f45524332303a20696e73756666696369656e7420616c6c6f77616e63650000006044820152606401610399565b61064c848484840361049c565b50505050565b6001600160a01b0383166106b65760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b6064820152608401610399565b6001600160a01b0382166107185760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b6064820152608401610399565b6001600160a01b038316600090815260208190526040902054818110156107905760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b6064820152608401610399565b6001600160a01b038085166000908152602081905260408082208585039055918516815290812080548492906107c790849061097f565b92505081905550826001600160a01b0316846001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8460405161081391815260200190565b60405180910390a361064c565b600060208083528351808285015260005b8181101561084d57858101830151858201604001528201610831565b506000604082860101526040601f19601f8301168501019250505092915050565b80356001600160a01b038116811461088557600080fd5b919050565b6000806040838503121561089d57600080fd5b6108a68361086e565b946020939093013593505050565b6000806000606084860312156108c957600080fd5b6108d28461086e565b92506108e06020850161086e565b9150604084013590509250925092565b60006020828403121561090257600080fd5b61090b8261086e565b9392505050565b6000806040838503121561092557600080fd5b61092e8361086e565b915061093c6020840161086e565b90509250929050565b600181811c9082168061095957607f821691505b60208210810361097957634e487b7160e01b600052602260045260246000fd5b50919050565b808201808211156102a057634e487b7160e01b600052601160045260246000fdfea264697066735822122079aea89302a931b65938f5024ef67c57f346deaaa1f56bc95931901dcbfee84264736f6c6343000810003360a06040523480156200001157600080fd5b5060405162003e9638038062003e9683398101604081905262000034916200065e565b6000805460ff191660011790558084848462000057620000513390565b620000a8565b6001600160a01b0383166080526200007982826706f05b59d3b2000062000101565b5050600780546001600160a01b0319166001600160a01b039390931692909217909155506200076d9350505050565b600080546001600160a01b03838116610100818102610100600160a81b0319851617855560405193049190911692909183917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a35050565b6000546001600160a01b03610100909104163314620001675760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064015b60405180910390fd5b670de0b6b3a7640000811115620001c15760405162461bcd60e51b815260206004820152601c60248201527f4275726e656420626f6e642070657263656e74616765203e203130300000000060448201526064016200015e565b60008111620002135760405162461bcd60e51b815260206004820152601b60248201527f4275726e656420626f6e642070657263656e746167652069732030000000000060448201526064016200015e565b6005819055600680546001600160401b038416600160a01b026001600160e01b03199091166001600160a01b03861617179055620002616b082a6a68aa4a8bea8a4aaa8960a31b84620002b8565b604080516001600160a01b03851681526001600160401b03841660208201529081018290527fd0f09246d369018534c67fec6a6c3259c6f962ef82c5521c337ae0ccc104e4bd9060600160405180910390a1505050565b6080516040516302abf57960e61b8152654f7261636c6560d01b60048201526001600160a01b039091169063aafd5e4090602401602060405180830381865afa1580156200030a573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620003309190620006d1565b600180546001600160a01b0319166001600160a01b03929092169190911790556200035a62000523565b6001600160a01b03166390978d1b836040518263ffffffff1660e01b81526004016200038891815260200190565b602060405180830381865afa158015620003a6573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620003cc9190620006f8565b6000838152600360205260409020805460ff1916911515919091179055620003f3620005b9565b604051631d1d5b3960e11b81526001600160a01b0383811660048301529190911690633a3ab67290602401602060405180830381865afa1580156200043c573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620004629190620006f8565b6001600160a01b0382166000908152600260205260409020805460ff1916911515919091179055620004936200060b565b604051635b97aadd60e01b81526001600160a01b0383811660048301529190911690635b97aadd90602401602060405180830381865afa158015620004dc573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200050291906200071c565b516001600160a01b0390911660009081526002602052604090206001015550565b6080516040516302abf57960e61b81527f4964656e74696669657257686974656c6973740000000000000000000000000060048201526000916001600160a01b03169063aafd5e40906024015b602060405180830381865afa1580156200058e573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620005b49190620006d1565b905090565b6080516040516302abf57960e61b81527f436f6c6c61746572616c57686974656c6973740000000000000000000000000060048201526000916001600160a01b03169063aafd5e409060240162000570565b6080516040516302abf57960e61b81526453746f726560d81b60048201526000916001600160a01b03169063aafd5e409060240162000570565b6001600160a01b03811681146200065b57600080fd5b50565b600080600080608085870312156200067557600080fd5b8451620006828162000645565b6020860151909450620006958162000645565b60408601519093506001600160401b0381168114620006b357600080fd5b6060860151909250620006c68162000645565b939692955090935050565b600060208284031215620006e457600080fd5b8151620006f18162000645565b9392505050565b6000602082840312156200070b57600080fd5b81518015158114620006f157600080fd5b6000602082840312156200072f57600080fd5b604051602081016001600160401b03811182821017156200076057634e487b7160e01b600052604160045260246000fd5b6040529151825250919050565b6080516136f1620007a560003960008181610578015281816116df01528181611fa701528181612607015261266c01526136f16000f3fe608060405234801561001057600080fd5b50600436106101c45760003560e01c80638da5cb5b116100f9578063b9a3c84c11610097578063da03b36e11610071578063da03b36e146106a4578063e39dfd7f146106b3578063f2fde38b146106c6578063fe4e1983146106d957600080fd5b8063b9a3c84c14610573578063d509b0171461059a578063d60715b5146105b057600080fd5b8063a7af2d0f116100d3578063a7af2d0f1461050d578063a865578514610520578063ac9650d814610533578063afedba4f1461055357600080fd5b80638da5cb5b146104d15780638ea2f2ab146104e7578063a6a22b43146104fa57600080fd5b80634360af3d11610166578063707621571161014057806370762157146102bf578063715018a614610303578063827625201461030b578063883028841461031e57600080fd5b80634360af3d14610266578063530dd392146102795780636457c979146102ac57600080fd5b806322f8e566116101a257806322f8e5661461022357806329cb924d1461023857806336b13af4146102405780634124beef1461025357600080fd5b806308e7c3e6146101c95780631c39c38d146101e557806320402e1d14610210575b600080fd5b6101d260055481565b6040519081526020015b60405180910390f35b6007546101f8906001600160a01b031681565b6040516001600160a01b0390911681526020016101dc565b6006546101f8906001600160a01b031681565b610236610231366004612c90565b61070b565b005b6101d2610781565b6101d261024e366004612cce565b610790565b610236610261366004612c90565b610817565b6101d2610274366004612d50565b610be1565b61029c610287366004612c90565b60036020526000908152604090205460ff1681565b60405190151581526020016101dc565b6101d26102ba366004612df1565b610c1c565b6102ec6102cd366004612d50565b6002602052600090815260409020805460019091015460ff9091169082565b6040805192151583526020830191909152016101dc565b610236611233565b610236610319366004612ee1565b61126f565b6104c461032c366004612c90565b6040805161022081018252600061018082018181526101a083018290526101c083018290526101e083018290526102008301829052825260208201819052918101829052606081018290526080810182905260a0810182905260c0810182905260e0810182905261010081018290526101208101829052610140810182905261016081019190915250600090815260046020818152604092839020835161022081018552815460ff80821615156101808401908152610100808404831615156101a0860152620100008404831615156101c08601526001600160a01b03630100000090940484166101e0860152600186015484166102008601529084526002850154808416968501969096526001600160401b03600160a01b808804821699860199909952600160e01b96879004831615156060860152600386015480851660808701529889041660a085015294909604909516151560c08201529281015460e08401526005810154918301919091526006810154610120830152600781015483166101408301526008015490911661016082015290565b6040516101dc9190612f61565b60005461010090046001600160a01b03166101f8565b61029c6104f5366004612c90565b6113ea565b61023661050836600461303b565b611422565b6001546101f8906001600160a01b031681565b61023661052e36600461303b565b6116c1565b61054661054136600461306b565b611935565b6040516101dc919061312f565b610566610561366004612c90565b611a8c565b6040516101dc9190613191565b6101f87f000000000000000000000000000000000000000000000000000000000000000081565b6101d26b082a6a68aa4a8bea8a4aaa8960a31b81565b61068c6105be366004612c90565b600460208181526000928352604092839020835160a081018552815460ff808216151583526101008204811615159483019490945262010000810484161515958201959095526001600160a01b0363010000009095048516606082015260018201548516608082015260028201546003830154948301546005840154600685015460078601546008909601549498848116986001600160401b03600160a01b80880482169a600160e01b9889900481169a8486169a928504909316989093049092169594939290811691168c565b6040516101dc9c9b9a999897969594939291906131a4565b6101d2670de0b6b3a764000081565b61029c6106c1366004612c90565b611a97565b6102366106d4366004612d50565b611c15565b6006546106f390600160a01b90046001600160401b031681565b6040516001600160401b0390911681526020016101dc565b6007546001600160a01b031661072057600080fd5b60075460405163117c72b360e11b8152600481018390526001600160a01b03909116906322f8e56690602401600060405180830381600087803b15801561076657600080fd5b505af115801561077a573d6000803e3d6000fd5b5050505050565b600061078b611cb3565b905090565b600061080d84848080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201829052506006548894509092508291506001600160401b03600160a01b820416906001600160a01b03166107f681610be1565b6b082a6a68aa4a8bea8a4aaa8960a31b6000610c1c565b90505b9392505050565b61081f611d43565b61082e6000805460ff19169055565b600081815260046020526040902060028101546001600160a01b03166108965760405162461bcd60e51b8152602060048201526018602482015277105cdcd95c9d1a5bdb88191bd95cc81b9bdd08195e1a5cdd60421b60448201526064015b60405180910390fd5b6002810154600160e01b900460ff16156108f25760405162461bcd60e51b815260206004820152601960248201527f417373657274696f6e20616c726561647920736574746c656400000000000000604482015260640161088d565b60028101805460ff60e01b1916600160e01b17905560088101546001600160a01b0316610a1857610921610781565b6003820154600160a01b90046001600160401b0316111561097c5760405162461bcd60e51b8152602060048201526015602482015274105cdcd95c9d1a5bdb881b9bdd08195e1c1a5c9959605a1b604482015260640161088d565b60038101805460ff60e01b198116600160e01b17909155600282015460068301546109b4926001600160a01b03908116921690611d95565b6109bf826001611dfd565b6002810154604080516000815260016020820152338183015290516001600160a01b039092169184917ff4fa324b13daeb4e1aae736c2553632ae0fb16fb31f2d4da8ac99fd056313a13919081900360600190a3610bcb565b60058101546002820154600091610a4191859190600160a01b90046001600160401b0316611f04565b8254909150610100900460ff1615610a675760038201805460ff60e01b19169055610a89565b60038201805460ff60e01b1916670de0b6b3a76400008314600160e01b021790555b6000670de0b6b3a76400008214610aad5760088301546001600160a01b0316610abc565b60028301546001600160a01b03165b90506000670de0b6b3a76400008460060154600554610adb919061323b565b610ae59190613270565b905060008185600601546002610afb919061323b565b610b059190613292565b9050610b27610b12611f87565b60038701546001600160a01b03169084611d95565b6003850154610b40906001600160a01b03168483611d95565b8454610100900460ff16610b68576003850154610b68908790600160e01b900460ff16611dfd565b60038501546040805160018152600160e01b90920460ff161515602083015233908201526001600160a01b0384169087907ff4fa324b13daeb4e1aae736c2553632ae0fb16fb31f2d4da8ac99fd056313a139060600160405180910390a3505050505b50610bde6000805460ff19166001179055565b50565b6001600160a01b038116600090815260026020526040812060010154600554610c1282670de0b6b3a764000061323b565b6108109190613270565b6000610c26611d43565b610c356000805460ff19169055565b6000610c3f610781565b9050610c5a8b86836001600160401b03168a8a8e8e8b61201b565b91506001600160a01b038a16610ca75760405162461bcd60e51b8152602060048201526012602482015271041737365727465722063616e7420626520360741b604482015260640161088d565b6000828152600460205260409020600201546001600160a01b031615610d0f5760405162461bcd60e51b815260206004820152601860248201527f417373657274696f6e20616c7265616479206578697374730000000000000000604482015260640161088d565b610d1884612062565b610d5d5760405162461bcd60e51b81526020600482015260166024820152752ab739bab83837b93a32b21034b232b73a34b334b2b960511b604482015260640161088d565b610d668661211b565b610da95760405162461bcd60e51b8152602060048201526014602482015273556e737570706f727465642063757272656e637960601b604482015260640161088d565b610db286610be1565b851015610df75760405162461bcd60e51b8152602060048201526013602482015272426f6e6420616d6f756e7420746f6f206c6f7760681b604482015260640161088d565b6040805161022081018252600061018082018181526101a083018290526101c08301829052336101e08401526001600160a01b038c81166102008501529083528d811660208401526001600160401b038516938301939093526060820152908716608082015260a08101610e6b89846132a5565b6001600160401b031681526020016000151581526020018481526020018581526020018681526020018a6001600160a01b0316815260200160006001600160a01b03168152506004600084815260200190815260200160002060008201518160000160008201518160000160006101000a81548160ff02191690831515021790555060208201518160000160016101000a81548160ff02191690831515021790555060408201518160000160026101000a81548160ff02191690831515021790555060608201518160000160036101000a8154816001600160a01b0302191690836001600160a01b0316021790555060808201518160010160006101000a8154816001600160a01b0302191690836001600160a01b03160217905550505060208201518160020160006101000a8154816001600160a01b0302191690836001600160a01b0316021790555060408201518160020160146101000a8154816001600160401b0302191690836001600160401b03160217905550606082015181600201601c6101000a81548160ff02191690831515021790555060808201518160030160006101000a8154816001600160a01b0302191690836001600160a01b0316021790555060a08201518160030160146101000a8154816001600160401b0302191690836001600160401b0316021790555060c082015181600301601c6101000a81548160ff02191690831515021790555060e08201518160040155610100820151816005015561012082015181600601556101408201518160070160006101000a8154816001600160a01b0302191690836001600160a01b031602179055506101608201518160080160006101000a8154816001600160a01b0302191690836001600160a01b0316021790555090505060006111078361227d565b8051909150156111515760405162461bcd60e51b8152602060048201526015602482015274105cdcd95c9d1a5bdb881b9bdd08185b1b1bddd959605a1b604482015260640161088d565b6000838152600460209081526040918290209083015191830151606090930151815462ffff001916620100009115159190910261ff00191617610100931515939093029290921760ff19169015151790556111b76001600160a01b038716333088612352565b838a6001600160a01b0316837fdb1513f0abeb57a364db56aa3eb52015cca5268f00fd67bc73aaf22bccab02b7868f8e8e338f8a6111f591906132a5565b8f8f60405161120b9897969594939291906132c5565b60405180910390a4506112266000805460ff19166001179055565b9998505050505050505050565b6000546001600160a01b036101009091041633146112635760405162461bcd60e51b815260040161088d90613327565b61126d600061238a565b565b6000546001600160a01b0361010090910416331461129f5760405162461bcd60e51b815260040161088d90613327565b670de0b6b3a76400008111156112f75760405162461bcd60e51b815260206004820152601c60248201527f4275726e656420626f6e642070657263656e74616765203e2031303000000000604482015260640161088d565b600081116113475760405162461bcd60e51b815260206004820152601b60248201527f4275726e656420626f6e642070657263656e7461676520697320300000000000604482015260640161088d565b6005819055600680546001600160401b038416600160a01b026001600160e01b03199091166001600160a01b038616171790556113936b082a6a68aa4a8bea8a4aaa8960a31b846116c1565b604080516001600160a01b03851681526001600160401b03841660208201529081018290527fd0f09246d369018534c67fec6a6c3259c6f962ef82c5521c337ae0ccc104e4bd9060600160405180910390a1505050565b600081815260046020526040812060020154600160e01b900460ff166114135761141382610817565b61141c82611a97565b92915050565b61142a611d43565b6114396000805460ff19169055565b6001600160a01b0381166114855760405162461bcd60e51b8152602060048201526013602482015272044697370757465722063616e2774206265203606c1b604482015260640161088d565b600082815260046020526040902060028101546001600160a01b03166114e85760405162461bcd60e51b8152602060048201526018602482015277105cdcd95c9d1a5bdb88191bd95cc81b9bdd08195e1a5cdd60421b604482015260640161088d565b60088101546001600160a01b0316156115435760405162461bcd60e51b815260206004820152601a60248201527f417373657274696f6e20616c7265616479206469737075746564000000000000604482015260640161088d565b61154b610781565b6003820154600160a01b90046001600160401b0316116115a45760405162461bcd60e51b8152602060048201526014602482015273105cdcd95c9d1a5bdb881a5cc8195e1c1a5c995960621b604482015260640161088d565b6115ad836123e3565b6115ef5760405162461bcd60e51b8152602060048201526013602482015272111a5cdc1d5d19481b9bdd08185b1b1bddd959606a1b604482015260640161088d565b6008810180546001600160a01b0319166001600160a01b03848116919091179091556006820154600383015461162a92169033903090612352565b6005810154600282015461164f918591600160a01b90046001600160401b031661249f565b61165883612516565b8054610100900460ff161561167257611672836000611dfd565b6040516001600160a01b03831690339085907f60133788b013c89f2a3756dbc47e3484997b87bd7e0af98a7d70232032c1ce2b90600090a4506116bd6000805460ff19166001179055565b5050565b6040516302abf57960e61b8152654f7261636c6560d01b60048201527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03169063aafd5e4090602401602060405180830381865afa15801561172e573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611752919061335c565b600180546001600160a01b0319166001600160a01b039290921691909117905561177a6125d9565b6001600160a01b03166390978d1b836040518263ffffffff1660e01b81526004016117a791815260200190565b602060405180830381865afa1580156117c4573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906117e89190613389565b6000838152600360205260409020805460ff191691151591909117905561180d61263e565b604051631d1d5b3960e11b81526001600160a01b0383811660048301529190911690633a3ab67290602401602060405180830381865afa158015611855573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906118799190613389565b6001600160a01b0382166000908152600260205260409020805460ff19169115159190911790556118a8611f87565b604051635b97aadd60e01b81526001600160a01b0383811660048301529190911690635b97aadd90602401602060405180830381865afa1580156118f0573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061191491906133a4565b516001600160a01b0390911660009081526002602052604090206001015550565b6060816001600160401b0381111561194f5761194f612d6d565b60405190808252806020026020018201604052801561198257816020015b606081526020019060019003908161196d5790505b50905060005b82811015611a8557600080308686858181106119a6576119a66133e5565b90506020028101906119b891906133fb565b6040516119c6929190613448565b600060405180830381855af49150503d8060008114611a01576040519150601f19603f3d011682016040523d82523d6000602084013e611a06565b606091505b509150915081611a5257604481511015611a1f57600080fd5b60048101905080806020019051810190611a399190613458565b60405162461bcd60e51b815260040161088d9190613191565b80848481518110611a6557611a656133e5565b602002602001018190525050508080611a7d906134ce565b915050611988565b5092915050565b606061141c826126a3565b6000818152600460208181526040808420815161022081018352815460ff80821615156101808401908152610100808404831615156101a0860152620100008404831615156101c08601526001600160a01b03630100000090940484166101e0860152600186015484166102008601529084526002850154808416978501979097526001600160401b03600160a01b808904821697860197909752600160e01b97889004831615156060860152600386015480851660808701529687041660a085015295909404909316151560c08201529381015460e085015260058101549284019290925260068201546101208401526007820154811661014084015260089091015416610160820181905215801590611bb457508051602001515b15611bc25750600092915050565b8060600151611c0b5760405162461bcd60e51b8152602060048201526015602482015274105cdcd95c9d1a5bdb881b9bdd081cd95d1d1b1959605a1b604482015260640161088d565b60c0015192915050565b6000546001600160a01b03610100909104163314611c455760405162461bcd60e51b815260040161088d90613327565b6001600160a01b038116611caa5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b606482015260840161088d565b610bde8161238a565b6007546000906001600160a01b031615611d3e57600760009054906101000a90046001600160a01b03166001600160a01b03166329cb924d6040518163ffffffff1660e01b8152600401602060405180830381865afa158015611d1a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061078b91906134e7565b504290565b60005460ff1661126d5760405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c00604482015260640161088d565b6040516001600160a01b038316602482015260448101829052611df890849063a9059cbb60e01b906064015b60408051601f198184030181529190526020810180516001600160e01b03166001600160e01b031990931692909217909152612729565b505050565b600082815260046020526040902060078101546001909101546001600160a01b0391821691168115611e8c576040516378d8ab5960e11b81526004810185905283151560248201526001600160a01b0383169063f1b156b290604401600060405180830381600087803b158015611e7357600080fd5b505af1158015611e87573d6000803e3d6000fd5b505050505b6001600160a01b03811615611efe576040516378d8ab5960e11b81526004810185905283151560248201526001600160a01b0382169063f1b156b290604401600060405180830381600087803b158015611ee557600080fd5b505af1158015611ef9573d6000803e3d6000fd5b505050505b50505050565b6000611f0f846127fb565b6001600160a01b031663719c6d568484611f28886126a3565b6040518463ffffffff1660e01b8152600401611f4693929190613500565b602060405180830381865afa158015611f63573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061080d91906134e7565b6040516302abf57960e61b81526453746f726560d81b60048201526000907f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03169063aafd5e40906024015b602060405180830381865afa158015611ff7573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061078b919061335c565b600088888888888888883360405160200161203e9998979695949392919061351f565b60405160208183030381529060405280519060200120905098975050505050505050565b60008181526003602052604081205460ff161561208157506001919050565b6120896125d9565b6001600160a01b03166390978d1b836040518263ffffffff1660e01b81526004016120b691815260200190565b602060405180830381865afa1580156120d3573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906120f79190613389565b600092835260036020526040909220805460ff191692151592831790555060ff1690565b6001600160a01b03811660009081526002602052604081205460ff161561214457506001919050565b61214c61263e565b604051631d1d5b3960e11b81526001600160a01b0384811660048301529190911690633a3ab67290602401602060405180830381865afa158015612194573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906121b89190613389565b6001600160a01b0383166000908152600260205260409020805460ff19169115159190911790556121e7611f87565b604051635b97aadd60e01b81526001600160a01b0384811660048301529190911690635b97aadd90602401602060405180830381865afa15801561222f573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061225391906133a4565b516001600160a01b0390921660009081526002602052604090206001810192909255505460ff1690565b6040805160808101825260008082526020808301829052828401829052606083018290528482526004905291909120600101546001600160a01b0316806122e9575050604080516080810182526000808252602082018190529181018290526060810191909152919050565b60405163a6b011a760e01b8152600481018490526001600160a01b0382169063a6b011a790602401608060405180830381865afa15801561232e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108109190613587565b6040516001600160a01b0380851660248301528316604482015260648101829052611efe9085906323b872dd60e01b90608401611dc1565b600080546001600160a01b03838116610100818102610100600160a81b0319851617855560405193049190911692909183917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a35050565b60008181526004602052604081205462010000900460ff1661240757506001919050565b6000828152600460205260409020600101546001600160a01b0316806124305750600192915050565b604051636b915d9160e01b8152600481018490523360248201526001600160a01b03821690636b915d9190604401602060405180830381865afa15801561247b573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108109190613389565b6124a8836127fb565b6001600160a01b031663216666a483836124c1876126a3565b6040518463ffffffff1660e01b81526004016124df93929190613500565b600060405180830381600087803b1580156124f957600080fd5b505af115801561250d573d6000803e3d6000fd5b50505050505050565b600081815260046020526040902060078101546001909101546001600160a01b039182169116811561259d57604051633512293b60e21b8152600481018490526001600160a01b0383169063d448a4ec90602401600060405180830381600087803b15801561258457600080fd5b505af1158015612598573d6000803e3d6000fd5b505050505b6001600160a01b03811615611df857604051633512293b60e21b8152600481018490526001600160a01b0382169063d448a4ec906024016124df565b6040516302abf57960e61b8152721259195b9d1a599a595c95da1a5d195b1a5cdd606a1b60048201526000907f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03169063aafd5e4090602401611fda565b6040516302abf57960e61b81527210dbdb1b185d195c985b15da1a5d195b1a5cdd606a1b60048201526000907f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03169063aafd5e4090602401611fda565b606061141c6126e5604051806020016040528060008152506040518060400160405280600b81526020016a185cdcd95c9d1a5bdb925960aa1b81525085612843565b604080518082018252600a81526937b7a0b9b9b2b93a32b960b11b6020808301919091526000878152600490915291909120600201546001600160a01b0316612889565b600061277e826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b03166128a49092919063ffffffff16565b805190915015611df8578080602001905181019061279c9190613389565b611df85760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b606482015260840161088d565b60008181526004602052604081205460ff1615612832576000828152600460205260409020600101546001600160a01b031661141c565b50506001546001600160a01b031690565b6060600061285185856128b3565b9050848161285e856128f5565b60405160200161287093929190613603565b6040516020818303038152906040529150509392505050565b6060600061289785856128b3565b9050848161285e85612936565b606061080d848460008561298d565b8151606090156128e457816040516020016128ce9190613646565b604051602081830303815290604052905061141c565b816040516020016128ce919061367a565b6060612904608083901c612abe565b61290d83612abe565b6040805160208101939093528201526060015b6040516020818303038152906040529050919050565b606061294e6001600160801b03602084901c16612abe565b6129698360601b6bffffffffffffffffffffffff1916612abe565b6040516020016129209291909182526001600160c01b031916602082015260280190565b6060824710156129ee5760405162461bcd60e51b815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f6044820152651c8818d85b1b60d21b606482015260840161088d565b6001600160a01b0385163b612a455760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000604482015260640161088d565b600080866001600160a01b03168587604051612a61919061369f565b60006040518083038185875af1925050503d8060008114612a9e576040519150601f19603f3d011682016040523d82523d6000602084013e612aa3565b606091505b5091509150612ab3828286612c57565b979650505050505050565b6000808260001c9050806001600160801b03169050806801000000000000000002811777ffffffffffffffff0000000000000000ffffffffffffffff169050806401000000000281177bffffffff00000000ffffffff00000000ffffffff00000000ffffffff16905080620100000281177dffff0000ffff0000ffff0000ffff0000ffff0000ffff0000ffff0000ffff169050806101000281177eff00ff00ff00ff00ff00ff00ff00ff00ff00ff00ff00ff00ff00ff00ff00ff1690508060100281177f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f16905060006008827f08080808080808080808080808080808080808080808080808080808080808081681612bd957612bd961325a565b0460047f040404040404040404040404040404040404040404040404040404040404040484160460027f020202020202020202020202020202020202020202020202020202020202020285160417166027029091017f3030303030303030303030303030303030303030303030303030303030303030019392505050565b60608315612c66575081610810565b825115612c765782518084602001fd5b8160405162461bcd60e51b815260040161088d9190613191565b600060208284031215612ca257600080fd5b5035919050565b6001600160a01b0381168114610bde57600080fd5b8035612cc981612ca9565b919050565b600080600060408486031215612ce357600080fd5b83356001600160401b0380821115612cfa57600080fd5b818601915086601f830112612d0e57600080fd5b813581811115612d1d57600080fd5b876020828501011115612d2f57600080fd5b60209283019550935050840135612d4581612ca9565b809150509250925092565b600060208284031215612d6257600080fd5b813561081081612ca9565b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f191681016001600160401b0381118282101715612dab57612dab612d6d565b604052919050565b60006001600160401b03821115612dcc57612dcc612d6d565b50601f01601f191660200190565b80356001600160401b0381168114612cc957600080fd5b60008060008060008060008060006101208a8c031215612e1057600080fd5b89356001600160401b03811115612e2657600080fd5b8a01601f81018c13612e3757600080fd5b8035612e4a612e4582612db3565b612d83565b8181528d6020838501011115612e5f57600080fd5b81602084016020830137600060208383010152809b50505050612e8460208b01612cbe565b9750612e9260408b01612cbe565b9650612ea060608b01612cbe565b9550612eae60808b01612dda565b9450612ebc60a08b01612cbe565b935060c08a0135925060e08a013591506101008a013590509295985092959850929598565b600080600060608486031215612ef657600080fd5b8335612f0181612ca9565b9250612f0f60208501612dda565b9150604084013590509250925092565b8051151582526020808201511515908301526040808201511515908301526060808201516001600160a01b039081169184019190915260809182015116910152565b600061020082019050612f75828451612f1f565b60208301516001600160a01b0390811660a084015260408401516001600160401b031660c08401526060840151151560e084015260808401519081166101008085019190915260a08501519150610120612fd9818601846001600160401b03169052565b60c08601519250610140612ff08187018515159052565b60e08701516101608781019190915292870151610180870152908601516101a08601528501516001600160a01b039081166101c0860152908501519081166101e08501529050611a85565b6000806040838503121561304e57600080fd5b82359150602083013561306081612ca9565b809150509250929050565b6000806020838503121561307e57600080fd5b82356001600160401b038082111561309557600080fd5b818501915085601f8301126130a957600080fd5b8135818111156130b857600080fd5b8660208260051b85010111156130cd57600080fd5b60209290920196919550909350505050565b60005b838110156130fa5781810151838201526020016130e2565b50506000910152565b6000815180845261311b8160208601602086016130df565b601f01601f19169290920160200192915050565b6000602080830181845280855180835260408601915060408160051b870101925083870160005b8281101561318457603f19888603018452613172858351613103565b94509285019290850190600101613156565b5092979650505050505050565b6020815260006108106020830184613103565b61020081016131b3828f612f1f565b6001600160a01b039c8d1660a08301526001600160401b039b8c1660c083015299151560e0820152978b16610100890152959098166101208701529215156101408601526101608501919091526101808401526101a08301529284166101c0820152919092166101e090910152919050565b634e487b7160e01b600052601160045260246000fd5b600081600019048311821515161561325557613255613225565b500290565b634e487b7160e01b600052601260045260246000fd5b60008261328d57634e487b7160e01b600052601260045260246000fd5b500490565b8181038181111561141c5761141c613225565b6001600160401b03818116838216019080821115611a8557611a85613225565b60006101008a83528060208401526132df8184018b613103565b6001600160a01b03998a1660408501529789166060840152505093861660808501526001600160401b039290921660a084015290931660c082015260e0019190915292915050565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b60006020828403121561336e57600080fd5b815161081081612ca9565b80518015158114612cc957600080fd5b60006020828403121561339b57600080fd5b61081082613379565b6000602082840312156133b657600080fd5b604051602081018181106001600160401b03821117156133d8576133d8612d6d565b6040529151825250919050565b634e487b7160e01b600052603260045260246000fd5b6000808335601e1984360301811261341257600080fd5b8301803591506001600160401b0382111561342c57600080fd5b60200191503681900382131561344157600080fd5b9250929050565b8183823760009101908152919050565b60006020828403121561346a57600080fd5b81516001600160401b0381111561348057600080fd5b8201601f8101841361349157600080fd5b805161349f612e4582612db3565b8181528560208385010111156134b457600080fd5b6134c58260208301602086016130df565b95945050505050565b6000600182016134e0576134e0613225565b5060010190565b6000602082840312156134f957600080fd5b5051919050565b8381528260208201526060604082015260006134c56060830184613103565b60006101208083526135338184018d613103565b602084019b909b52505060408101979097526001600160401b039590951660608701526001600160a01b03938416608087015291831660a0860152821660c085015260e08401521661010090910152919050565b60006080828403121561359957600080fd5b604051608081018181106001600160401b03821117156135bb576135bb612d6d565b6040526135c783613379565b81526135d560208401613379565b60208201526135e660408401613379565b60408201526135f760608401613379565b60608201529392505050565b600084516136158184602089016130df565b8451908301906136298183602089016130df565b845191019061363c8183602088016130df565b0195945050505050565b600b60fa1b8152600082516136628160018501602087016130df565b601d60f91b6001939091019283015250600201919050565b6000825161368c8184602087016130df565b601d60f91b920191825250600101919050565b600082516136b18184602087016130df565b919091019291505056fea26469706673582212208308750472ceb2de8177ffaad79e9d6970ffe4f59d11183bf06a5727259eab7064736f6c63430008100033a26469706673582212207fdd7511568be4055da51babd1036239ffe3588af60945cd826026d56069d15b64736f6c6343000810003360a060405234801561001057600080fd5b5060405161087838038061087883398101604081905261002f91610040565b6001600160a01b0316608052610070565b60006020828403121561005257600080fd5b81516001600160a01b038116811461006957600080fd5b9392505050565b6080516107e861009060003960008181607b015260b701526107e86000f3fe608060405234801561001057600080fd5b506004361061002b5760003560e01c8063025ac24f14610030575b600080fd5b61004361003e36600461057b565b610055565b60405190815260200160405180910390f35b600061006c6001600160a01b03861633308761014c565b6100a06001600160a01b0386167f0000000000000000000000000000000000000000000000000000000000000000866101bd565b604051636457c97960e01b81526001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001690636457c979906100fc908c9033908d908d908d908d908d908d908d906004016106da565b6020604051808303816000875af115801561011b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061013f9190610748565b9998505050505050505050565b6040516001600160a01b03808516602483015283166044820152606481018290526101b79085906323b872dd60e01b906084015b60408051601f198184030181529190526020810180516001600160e01b03166001600160e01b0319909316929092179091526102dc565b50505050565b8015806102375750604051636eb1769f60e11b81523060048201526001600160a01b03838116602483015284169063dd62ed3e90604401602060405180830381865afa158015610211573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102359190610748565b155b6102a75760405162461bcd60e51b815260206004820152603660248201527f5361666545524332303a20617070726f76652066726f6d206e6f6e2d7a65726f60448201527520746f206e6f6e2d7a65726f20616c6c6f77616e636560501b60648201526084015b60405180910390fd5b6040516001600160a01b0383166024820152604481018290526102d790849063095ea7b360e01b90606401610180565b505050565b6000610331826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b03166103ae9092919063ffffffff16565b8051909150156102d7578080602001905181019061034f9190610761565b6102d75760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b606482015260840161029e565b60606103bd84846000856103c7565b90505b9392505050565b6060824710156104285760405162461bcd60e51b815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f6044820152651c8818d85b1b60d21b606482015260840161029e565b6001600160a01b0385163b61047f5760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000604482015260640161029e565b600080866001600160a01b0316858760405161049b9190610783565b60006040518083038185875af1925050503d80600081146104d8576040519150601f19603f3d011682016040523d82523d6000602084013e6104dd565b606091505b50915091506104ed8282866104f8565b979650505050505050565b606083156105075750816103c0565b8251156105175782518084602001fd5b8160405162461bcd60e51b815260040161029e919061079f565b634e487b7160e01b600052604160045260246000fd5b80356001600160a01b038116811461055e57600080fd5b919050565b803567ffffffffffffffff8116811461055e57600080fd5b600080600080600080600080610100898b03121561059857600080fd5b883567ffffffffffffffff808211156105b057600080fd5b818b0191508b601f8301126105c457600080fd5b8135818111156105d6576105d6610531565b604051601f8201601f19908116603f011681019083821181831017156105fe576105fe610531565b816040528281528e602084870101111561061757600080fd5b82602086016020830137600060208483010152809c50505050505061063e60208a01610547565b965061064c60408a01610547565b955061065a60608a01610563565b945061066860808a01610547565b979a969950949793969560a0850135955060c08501359460e001359350915050565b60005b838110156106a557818101518382015260200161068d565b50506000910152565b600081518084526106c681602086016020860161068a565b601f01601f19169290920160200192915050565b60006101208083526106ee8184018d6106ae565b6001600160a01b039b8c166020850152998b1660408401525050958816606087015267ffffffffffffffff9490941660808601529190951660a084015260c083019490945260e08201939093526101000191909152919050565b60006020828403121561075a57600080fd5b5051919050565b60006020828403121561077357600080fd5b815180151581146103c057600080fd5b6000825161079581846020870161068a565b9190910192915050565b6020815260006103c060208301846106ae56fea264697066735822122040fd4937917989d4e157fb0795bc9dc886b180a95780126fdd27487a425c565f64736f6c634300081000336101006040523480156200001257600080fd5b5060405162004acd38038062004acd833981016040819052620000359162000242565b6001600160a01b0383166080526200004c62000190565b604051631d1d5b3960e11b81526001600160a01b0384811660048301529190911690633a3ab67290602401602060405180830381865afa15801562000095573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620000bb91906200028c565b6200010c5760405162461bcd60e51b815260206004820152601460248201527f556e737570706f727465642063757272656e6379000000000000000000000000604482015260640160405180910390fd5b6001600160a01b0380831660a052811660c08190526040805163d509b01760e01b8152905163d509b017916004808201926020929091908290030181865afa1580156200015d573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620001839190620002b7565b60e05250620002ef915050565b6080516040516302abf57960e61b81527f436f6c6c61746572616c57686974656c6973740000000000000000000000000060048201526000916001600160a01b03169063aafd5e4090602401602060405180830381865afa158015620001fa573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620002209190620002d1565b905090565b80516001600160a01b03811681146200023d57600080fd5b919050565b6000806000606084860312156200025857600080fd5b620002638462000225565b9250620002736020850162000225565b9150620002836040850162000225565b90509250925092565b6000602082840312156200029f57600080fd5b81518015158114620002b057600080fd5b9392505050565b600060208284031215620002ca57600080fd5b5051919050565b600060208284031215620002e457600080fd5b620002b08262000225565b60805160a05160c05160e0516147426200038b600039600081816103330152611c530152600081816101cf0152818161055b015281816106f5015281816118b60152611bf501526000818161035b015281816105300152818161069c015281816106d301528181610d04015281816110c9015281816111770152818161158c015281816119720152611c2f0152600061027b01526147426000f3fe60806040523480156200001157600080fd5b5060043610620001155760003560e01c8063b75d4e2411620000a3578063d448a4ec116200006e578063d448a4ec1462000319578063d509b017146200032d578063e5a6b10f1462000355578063f1b156b2146200037d57600080fd5b8063b75d4e241462000251578063b9a3c84c1462000275578063c3c95c7b146200029d578063d410764514620002c357600080fd5b80638921a61411620000e45780638921a61414620001c95780639d2edf46146200020a5780639d5bacfd1462000223578063acd98e29146200023a57600080fd5b80630880c65a146200011a578063565429a8146200015e5780635cb1cc0b14620001845780637564912b146200019b575b600080fd5b620001466040518060400160405280600c81526020016b556e7265736f6c7661626c6560a01b81525081565b60405162000155919062002112565b60405180910390f35b620001756200016f366004620021d2565b62000394565b60405190815260200162000155565b62000175620001953660046200221d565b620007b3565b620001b2620001ac366004620022c1565b62000d7e565b6040516200015599989796959493929190620022db565b620001f17f000000000000000000000000000000000000000000000000000000000000000081565b6040516001600160a01b03909116815260200162000155565b620002216200021b36600462002364565b62000f8a565b005b620002216200023436600462002364565b6200112e565b620001756200024b366004620022c1565b620012cb565b6200025b611c2081565b60405167ffffffffffffffff909116815260200162000155565b620001f17f000000000000000000000000000000000000000000000000000000000000000081565b620002b4620002ae366004620022c1565b62001601565b60405162000155919062002387565b620002f9620002d4366004620022c1565b600160208190526000918252604090912080549101546001600160a01b039091169082565b604080516001600160a01b03909316835260208301919091520162000155565b620002216200032a366004620022c1565b50565b620001757f000000000000000000000000000000000000000000000000000000000000000081565b620001f17f000000000000000000000000000000000000000000000000000000000000000081565b620002216200038e36600462002463565b620018ab565b600082815260208190526040812060028101546001600160a01b0316620003d85760405162461bcd60e51b8152600401620003cf9062002496565b60405180910390fd5b82516020840120600182015415620004335760405162461bcd60e51b815260206004820152601c60248201527f417373657274696f6e20616374697665206f72207265736f6c766564000000006044820152606401620003cf565b8160060160405162000446919062002501565b6040518091039020811480620004755750816007016040516200046a919062002501565b604051809103902081145b80620004c4575060408051808201909152600c81526b556e7265736f6c7661626c6560a01b6020909101527fffa5c42fda42ac0bea9ca62d68dcc08a4b371f06b6e71afb99dee2ce276cbe4e81145b620005125760405162461bcd60e51b815260206004820152601860248201527f496e76616c6964206173736572746564206f7574636f6d6500000000000000006044820152606401620003cf565b60018201819055604051634360af3d60e01b81526001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000811660048301526000917f000000000000000000000000000000000000000000000000000000000000000090911690634360af3d90602401602060405180830381865afa158015620005a5573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620005cb91906200257f565b9050600081846005015411620005e25781620005e8565b83600501545b905060006200068c878660080180546200060290620024c5565b80601f01602080910402602001604051908101604052809291908181526020018280546200063090620024c5565b8015620006815780601f10620006555761010080835404028352916020019162000681565b820191906000526020600020905b8154815290600101906020018083116200066357829003601f168201915b505050505062001a0b565b9050620006c56001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001633308562001a46565b6200071b6001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000167f00000000000000000000000000000000000000000000000000000000000000008462001ab9565b62000727818362001bdb565b60408051808201825233815260208082018c81526000858152600192839052849020925183546001600160a01b0319166001600160a01b039091161783555191015551909650869089907fc55c01025649b2056980da18d75125fed301d8a2f7cf93d2151fab07bfe2a49290620007a0908b9062002112565b60405180910390a3505050505092915050565b600080865111620007fd5760405162461bcd60e51b8152602060048201526013602482015272456d707479206669727374206f7574636f6d6560681b6044820152606401620003cf565b6000855111620008475760405162461bcd60e51b8152602060048201526014602482015273456d707479207365636f6e64206f7574636f6d6560601b6044820152606401620003cf565b84805190602001208680519060200120036200089e5760405162461bcd60e51b81526020600482015260156024820152744f7574636f6d657320617265207468652073616d6560581b6044820152606401620003cf565b6000845111620008e55760405162461bcd60e51b815260206004820152601160248201527022b6b83a3c903232b9b1b934b83a34b7b760791b6044820152606401620003cf565b4384604051602001620008fa92919062002599565b60408051601f1981840301815291815281516020928301206000818152928390529120600201549091506001600160a01b031615620009745760405162461bcd60e51b81526020600482015260156024820152744d61726b657420616c72656164792065786973747360581b6044820152606401620003cf565b600086604051602001620009899190620025b4565b6040516020818303038152906040526012604051620009a890620020b0565b620009b5929190620025e0565b604051809103906000f080158015620009d2573d6000803e3d6000fd5b509050600086604051602001620009ea9190620025b4565b604051602081830303815290604052601260405162000a0990620020b0565b62000a1692919062002624565b604051809103906000f08015801562000a33573d6000803e3d6000fd5b50604051634c1d96ab60e11b81523060048201529091506001600160a01b0383169063983b2d5690602401600060405180830381600087803b15801562000a7957600080fd5b505af115801562000a8e573d6000803e3d6000fd5b5050604051634c1d96ab60e11b81523060048201526001600160a01b038416925063983b2d569150602401600060405180830381600087803b15801562000ad457600080fd5b505af115801562000ae9573d6000803e3d6000fd5b5050604051637a231bdd60e11b81523060048201526001600160a01b038516925063f44637ba9150602401600060405180830381600087803b15801562000b2f57600080fd5b505af115801562000b44573d6000803e3d6000fd5b5050604051637a231bdd60e11b81523060048201526001600160a01b038416925063f44637ba9150602401600060405180830381600087803b15801562000b8a57600080fd5b505af115801562000b9f573d6000803e3d6000fd5b505050506040518061012001604052806000151581526020016000801b8152602001836001600160a01b03168152602001826001600160a01b031681526020018681526020018581526020018981526020018881526020018781525060008085815260200190815260200160002060008201518160000160006101000a81548160ff0219169083151502179055506020820151816001015560408201518160020160006101000a8154816001600160a01b0302191690836001600160a01b0316021790555060608201518160030160006101000a8154816001600160a01b0302191690836001600160a01b031602179055506080820151816004015560a0820151816005015560c082015181600601908162000cbc9190620026ba565b5060e0820151600782019062000cd39082620026ba565b50610100820151600882019062000ceb9082620026ba565b50508515905062000d2d5762000d2d6001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001633308862001a46565b827f7669fe199a3ccd4081193361fbf7ef7b3e82937c8b39c4ec55af2235be28307189898986868b8b60405162000d6b979695949392919062002787565b60405180910390a2505095945050505050565b600060208190529081526040902080546001820154600283015460038401546004850154600586015460068701805460ff9097169795966001600160a01b039586169694909516949293919262000dd590620024c5565b80601f016020809104026020016040519081016040528092919081815260200182805462000e0390620024c5565b801562000e545780601f1062000e285761010080835404028352916020019162000e54565b820191906000526020600020905b81548152906001019060200180831162000e3657829003601f168201915b50505050509080600701805462000e6b90620024c5565b80601f016020809104026020016040519081016040528092919081815260200182805462000e9990620024c5565b801562000eea5780601f1062000ebe5761010080835404028352916020019162000eea565b820191906000526020600020905b81548152906001019060200180831162000ecc57829003601f168201915b50505050509080600801805462000f0190620024c5565b80601f016020809104026020016040519081016040528092919081815260200182805462000f2f90620024c5565b801562000f805780601f1062000f545761010080835404028352916020019162000f80565b820191906000526020600020905b81548152906001019060200180831162000f6257829003601f168201915b5050505050905089565b600082815260208190526040902060028101546001600160a01b031662000fc55760405162461bcd60e51b8152600401620003cf9062002496565b600281015460405163079cc67960e41b8152336004820152602481018490526001600160a01b03909116906379cc6790906044016020604051808303816000875af115801562001019573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200103f9190620027f6565b50600381015460405163079cc67960e41b8152336004820152602481018490526001600160a01b03909116906379cc6790906044016020604051808303816000875af115801562001094573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620010ba9190620027f6565b50620010f16001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016338462001ccb565b604051828152339084907f48bc562be531fa6322b3cb3a9333ca19d2e3c63c1793fcb5ce885d02d6e0226e906020015b60405180910390a3505050565b600082815260208190526040902060028101546001600160a01b0316620011695760405162461bcd60e51b8152600401620003cf9062002496565b620011a06001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001633308562001a46565b60028101546040516340c10f1960e01b8152336004820152602481018490526001600160a01b03909116906340c10f19906044016020604051808303816000875af1158015620011f4573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200121a9190620027f6565b5060038101546040516340c10f1960e01b8152336004820152602481018490526001600160a01b03909116906340c10f19906044016020604051808303816000875af11580156200126f573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620012959190620027f6565b50604051828152339084907fa1a00dd4222724941c9d085479758183928d765e55583d239c414b0f09c5da4b9060200162001121565b6000818152602081905260408120805460ff16620013225760405162461bcd60e51b815260206004820152601360248201527213585c9ad95d081b9bdd081c995cdbdb1d9959606a1b6044820152606401620003cf565b60028101546040516370a0823160e01b81523360048201526000916001600160a01b0316906370a0823190602401602060405180830381865afa1580156200136e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200139491906200257f565b60038301546040516370a0823160e01b81523360048201529192506000916001600160a01b03909116906370a0823190602401602060405180830381865afa158015620013e5573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200140b91906200257f565b90508260060160405162001420919062002501565b60405180910390208360010154036200143c5781935062001488565b826007016040516200144f919062002501565b60405180910390208360010154036200146b5780935062001488565b60026200147982846200282c565b62001485919062002842565b93505b600283015460405163079cc67960e41b8152336004820152602481018490526001600160a01b03909116906379cc6790906044016020604051808303816000875af1158015620014dc573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620015029190620027f6565b50600383015460405163079cc67960e41b8152336004820152602481018390526001600160a01b03909116906379cc6790906044016020604051808303816000875af115801562001557573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200157d9190620027f6565b50620015b46001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016338662001ccb565b6040805185815260208101849052908101829052339086907f25ffdbe909949aba86fccc6c8a3f5d94d7ab78bc67a3cc1327908845235874eb9060600160405180910390a3505050919050565b620016686040518061012001604052806000151581526020016000801916815260200160006001600160a01b0316815260200160006001600160a01b0316815260200160008152602001600081526020016060815260200160608152602001606081525090565b60008281526020818152604091829020825161012081018452815460ff161515815260018201549281019290925260028101546001600160a01b03908116938301939093526003810154909216606082015260048201546080820152600582015460a082015260068201805491929160c084019190620016e890620024c5565b80601f01602080910402602001604051908101604052809291908181526020018280546200171690620024c5565b8015620017675780601f106200173b5761010080835404028352916020019162001767565b820191906000526020600020905b8154815290600101906020018083116200174957829003601f168201915b505050505081526020016007820180546200178290620024c5565b80601f0160208091040260200160405190810160405280929190818152602001828054620017b090620024c5565b8015620018015780601f10620017d55761010080835404028352916020019162001801565b820191906000526020600020905b815481529060010190602001808311620017e357829003601f168201915b505050505081526020016008820180546200181c90620024c5565b80601f01602080910402602001604051908101604052809291908181526020018280546200184a90620024c5565b80156200189b5780601f106200186f576101008083540402835291602001916200189b565b820191906000526020600020905b8154815290600101906020018083116200187d57829003601f168201915b5050505050815250509050919050565b336001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001614620019165760405162461bcd60e51b815260206004820152600e60248201526d139bdd08185d5d1a1bdc9a5e995960921b6044820152606401620003cf565b600082815260016020818152604080842090920154835282905290208115620019df57805460ff191660011781556004810154156200199d5760008381526001602052604090205460048201546200199d916001600160a01b037f000000000000000000000000000000000000000000000000000000000000000081169291169062001ccb565b600083815260016020819052604080832090910154905190917fe9146184308c5e4b8f243047cc6f81dce88e004d7980502e123b02f887ab514491a2620019e7565b600060018201555b50506000908152600160208190526040822080546001600160a01b03191681550155565b606062001a184262001cfd565b838360405160200162001a2e9392919062002865565b60405160208183030381529060405290505b92915050565b6040516001600160a01b038085166024830152831660448201526064810182905262001ab39085906323b872dd60e01b906084015b60408051601f198184030181529190526020810180516001600160e01b03166001600160e01b03199093169290921790915262001e45565b50505050565b80158062001b375750604051636eb1769f60e11b81523060048201526001600160a01b03838116602483015284169063dd62ed3e90604401602060405180830381865afa15801562001b0f573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062001b3591906200257f565b155b62001ba45760405162461bcd60e51b815260206004820152603660248201527f5361666545524332303a20617070726f76652066726f6d206e6f6e2d7a65726f60448201527520746f206e6f6e2d7a65726f20616c6c6f77616e636560501b6064820152608401620003cf565b6040516001600160a01b03831660248201526044810182905262001bd690849063095ea7b360e01b9060640162001a7b565b505050565b604051636457c97960e01b81526000906001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001690636457c9799062001c7e908690339030908790611c20907f0000000000000000000000000000000000000000000000000000000000000000908b907f000000000000000000000000000000000000000000000000000000000000000090859060040162002942565b6020604051808303816000875af115801562001c9e573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062001cc491906200257f565b9392505050565b6040516001600160a01b03831660248201526044810182905262001bd690849063a9059cbb60e01b9060640162001a7b565b60608160000362001d255750506040805180820190915260018152600360fc1b602082015290565b8160005b811562001d55578062001d3c81620029b2565b915062001d4d9050600a8362002842565b915062001d29565b60008167ffffffffffffffff81111562001d735762001d7362002127565b6040519080825280601f01601f19166020018201604052801562001d9e576020820181803683370190505b509050815b851562001e3c5762001db7600182620029ce565b9050600062001dc8600a8862002842565b62001dd590600a620029e4565b62001de19088620029ce565b62001dee90603062002a06565b905060008160f81b90508084848151811062001e0e5762001e0e62002a22565b60200101906001600160f81b031916908160001a90535062001e32600a8962002842565b9750505062001da3565b50949350505050565b600062001e9c826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b031662001f1e9092919063ffffffff16565b80519091501562001bd6578080602001905181019062001ebd9190620027f6565b62001bd65760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b6064820152608401620003cf565b606062001f2f848460008562001f37565b949350505050565b60608247101562001f9a5760405162461bcd60e51b815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f6044820152651c8818d85b1b60d21b6064820152608401620003cf565b6001600160a01b0385163b62001ff35760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e74726163740000006044820152606401620003cf565b600080866001600160a01b0316858760405162002011919062002a38565b60006040518083038185875af1925050503d806000811462002050576040519150601f19603f3d011682016040523d82523d6000602084013e62002055565b606091505b50915091506200206782828662002072565b979650505050505050565b606083156200208357508162001cc4565b825115620020945782518084602001fd5b8160405162461bcd60e51b8152600401620003cf919062002112565b611cb68062002a5783390190565b60005b83811015620020db578181015183820152602001620020c1565b50506000910152565b60008151808452620020fe816020860160208601620020be565b601f01601f19169290920160200192915050565b60208152600062001cc46020830184620020e4565b634e487b7160e01b600052604160045260246000fd5b600082601f8301126200214f57600080fd5b813567ffffffffffffffff808211156200216d576200216d62002127565b604051601f8301601f19908116603f0116810190828211818310171562002198576200219862002127565b81604052838152866020858801011115620021b257600080fd5b836020870160208301376000602085830101528094505050505092915050565b60008060408385031215620021e657600080fd5b82359150602083013567ffffffffffffffff8111156200220557600080fd5b62002213858286016200213d565b9150509250929050565b600080600080600060a086880312156200223657600080fd5b853567ffffffffffffffff808211156200224f57600080fd5b6200225d89838a016200213d565b965060208801359150808211156200227457600080fd5b6200228289838a016200213d565b955060408801359150808211156200229957600080fd5b50620022a8888289016200213d565b9598949750949560608101359550608001359392505050565b600060208284031215620022d457600080fd5b5035919050565b8915158152602081018990526001600160a01b038881166040830152871660608201526080810186905260a0810185905261012060c082018190526000906200232783820187620020e4565b905082810360e08401526200233d8186620020e4565b9050828103610100840152620023548185620020e4565b9c9b505050505050505050505050565b600080604083850312156200237857600080fd5b50508035926020909101359150565b602081526200239b60208201835115159052565b6020820151604082015260006040830151620023c260608401826001600160a01b03169052565b5060608301516001600160a01b038116608084015250608083015160a083015260a083015160c083015260c08301516101208060e08501526200240a610140850183620020e4565b915060e0850151601f196101008187860301818801526200242c8584620020e4565b9088015187820390920184880152935090506200244a8382620020e4565b9695505050505050565b80151581146200032a57600080fd5b600080604083850312156200247757600080fd5b8235915060208301356200248b8162002454565b809150509250929050565b60208082526015908201527413585c9ad95d08191bd95cc81b9bdd08195e1a5cdd605a1b604082015260600190565b600181811c90821680620024da57607f821691505b602082108103620024fb57634e487b7160e01b600052602260045260246000fd5b50919050565b60008083546200251181620024c5565b600182811680156200252c5760018114620025425762002573565b60ff198416875282151583028701945062002573565b8760005260208060002060005b858110156200256a5781548a8201529084019082016200254f565b50505082870194505b50929695505050505050565b6000602082840312156200259257600080fd5b5051919050565b82815260406020820152600062001f2f6040830184620020e4565b60008251620025c8818460208701620020be565b65102a37b5b2b760d11b920191825250600601919050565b606081526000620025f56060830185620020e4565b8281036020840152600381526213cc5560ea1b60208201526040810191505060ff831660408301529392505050565b606081526000620026396060830185620020e4565b8281036020840152600381526213cc9560ea1b60208201526040810191505060ff831660408301529392505050565b601f82111562001bd657600081815260208120601f850160051c81016020861015620026915750805b601f850160051c820191505b81811015620026b2578281556001016200269d565b505050505050565b815167ffffffffffffffff811115620026d757620026d762002127565b620026ef81620026e88454620024c5565b8462002668565b602080601f8311600181146200272757600084156200270e5750858301515b600019600386901b1c1916600185901b178555620026b2565b600085815260208120601f198616915b82811015620027585788860151825594840194600190910190840162002737565b5085821015620027775787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b60e0815260006200279c60e083018a620020e4565b8281036020840152620027b0818a620020e4565b90508281036040840152620027c68189620020e4565b6001600160a01b0397881660608501529590961660808301525060a081019290925260c090910152949350505050565b6000602082840312156200280957600080fd5b815162001cc48162002454565b634e487b7160e01b600052601160045260246000fd5b8082018082111562001a405762001a4062002816565b6000826200286057634e487b7160e01b600052601260045260246000fd5b500490565b7f4173206f6620617373657274696f6e2074696d657374616d70200000000000008152600084516200289f81601a850160208901620020be565b7f2c20746865206465736372696265642070726564696374696f6e206d61726b65601a918401918201526d03a1037baba31b7b6b29034b99d160951b603a8201528451620028f5816048840160208901620020be565b7f2e20546865206d61726b6574206465736372697074696f6e2069733a2000000060489290910191820152835162002935816065840160208801620020be565b0160650195945050505050565b6000610120808352620029588184018d620020e4565b6001600160a01b039b8c166020850152998b1660408401525050958816606087015267ffffffffffffffff9490941660808601529190951660a084015260c083019490945260e08201939093526101000191909152919050565b600060018201620029c757620029c762002816565b5060010190565b8181038181111562001a405762001a4062002816565b600081600019048311821515161562002a015762002a0162002816565b500290565b60ff818116838216019081111562001a405762001a4062002816565b634e487b7160e01b600052603260045260246000fd5b6000825162002a4c818460208701620020be565b919091019291505056fe60806040523480156200001157600080fd5b5060405162001cb638038062001cb6833981016040819052620000349162000563565b8282600362000044838262000676565b50600462000053828262000676565b50506006805460ff191660ff8416179055506200007360008033620000a5565b6200009060015b60408051600080825260208201909252620001f5565b6200009c60026200007a565b50505062000796565b826000808281526005602052604090206001015460ff166002811115620000d057620000d062000742565b14620001235760405162461bcd60e51b815260206004820152601e60248201527f43616e6e6f74207573652061207072652d6578697374696e6720726f6c65000060448201526064015b60405180910390fd5b60008481526005602052604090206001808201805460ff1916828002179055508381556200016160028201846200033b602090811b62000a6617901c565b60008481526005602052604081206001015460ff1660028111156200018a576200018a62000742565b03620001ee5760405162461bcd60e51b815260206004820152603c602482015260008051602062001c9683398151915260448201527f20746f206d616e61676520616e206578636c757369766520726f6c650000000060648201526084016200011a565b5050505050565b826000808281526005602052604090206001015460ff16600281111562000220576200022062000742565b146200026f5760405162461bcd60e51b815260206004820152601e60248201527f43616e6e6f74207573652061207072652d6578697374696e6720726f6c65000060448201526064016200011a565b600084815260056020908152604090912060018101805460ff1916600217905584815590620002ae906003830190859062000a706200034b821b17901c565b60008481526005602052604081206001015460ff166002811115620002d757620002d762000742565b03620001ee5760405162461bcd60e51b8152602060048201526038602482015260008051602062001c9683398151915260448201527f20746f206d616e61676520612073686172656420726f6c65000000000000000060648201526084016200011a565b620003478282620003a0565b5050565b60005b81518110156200039b57620003868383838151811062000372576200037262000758565b60200260200101516200042160201b60201c565b8062000392816200076e565b9150506200034e565b505050565b6001600160a01b038116620004045760405162461bcd60e51b815260206004820152602360248201527f43616e6e6f742073657420616e206578636c757369766520726f6c6520746f2060448201526203078360ec1b60648201526084016200011a565b81546001600160a01b0319166001600160a01b0391909116179055565b6001600160a01b038116620004795760405162461bcd60e51b815260206004820152601f60248201527f43616e6e6f74206164642030783020746f20612073686172656420726f6c650060448201526064016200011a565b6001600160a01b0316600090815260209190915260409020805460ff19166001179055565b634e487b7160e01b600052604160045260246000fd5b600082601f830112620004c657600080fd5b81516001600160401b0380821115620004e357620004e36200049e565b604051601f8301601f19908116603f011681019082821181831017156200050e576200050e6200049e565b816040528381526020925086838588010111156200052b57600080fd5b600091505b838210156200054f578582018301518183018401529082019062000530565b600093810190920192909252949350505050565b6000806000606084860312156200057957600080fd5b83516001600160401b03808211156200059157600080fd5b6200059f87838801620004b4565b94506020860151915080821115620005b657600080fd5b50620005c586828701620004b4565b925050604084015160ff81168114620005dd57600080fd5b809150509250925092565b600181811c90821680620005fd57607f821691505b6020821081036200061e57634e487b7160e01b600052602260045260246000fd5b50919050565b601f8211156200039b57600081815260208120601f850160051c810160208610156200064d5750805b601f850160051c820191505b818110156200066e5782815560010162000659565b505050505050565b81516001600160401b038111156200069257620006926200049e565b620006aa81620006a38454620005e8565b8462000624565b602080601f831160018114620006e25760008415620006c95750858301515b600019600386901b1c1916600185901b1785556200066e565b600085815260208120601f198616915b828110156200071357888601518255948401946001909101908401620006f2565b5085821015620007325787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b634e487b7160e01b600052602160045260246000fd5b634e487b7160e01b600052603260045260246000fd5b6000600182016200078f57634e487b7160e01b600052601160045260246000fd5b5060010190565b6114f080620007a66000396000f3fe608060405234801561001057600080fd5b506004361061014d5760003560e01c806374d0a676116100c3578063a9059cbb1161007c578063a9059cbb146102be578063aaa14ca3146102d1578063ab3545e5146102e4578063d97c05be1461030f578063dd62ed3e14610322578063f44637ba1461035b57600080fd5b806374d0a6761461025757806379cc67901461026a5780637cdc1cb91461027d57806395d89b4114610290578063983b2d5614610298578063a457c2d7146102ab57600080fd5b8063395093511161011557806339509351146101cd57806340c10f19146101e057806342966c68146101f35780636be7658b1461020857806370a082311461021b57806373cc802a1461024457600080fd5b806306fdde0314610152578063095ea7b31461017057806318160ddd1461019357806323b872dd146101a5578063313ce567146101b8575b600080fd5b61015a61036e565b6040516101679190611183565b60405180910390f35b61018361017e3660046111ed565b610400565b6040519015158152602001610167565b6002545b604051908152602001610167565b6101836101b3366004611217565b61041a565b60065460405160ff9091168152602001610167565b6101836101db3660046111ed565b61043e565b6101836101ee3660046111ed565b61047d565b610206610201366004611253565b6104ba565b005b61020661021636600461126c565b6104f0565b610197610229366004611298565b6001600160a01b031660009081526020819052604090205490565b610206610252366004611298565b6105c6565b61020661026536600461126c565b6105d4565b6101836102783660046111ed565b6106aa565b61018361028b36600461126c565b6106de565b61015a6107a3565b6102066102a6366004611298565b6107b2565b6101836102b93660046111ed565b6107be565b6101836102cc3660046111ed565b610850565b6102066102df366004611253565b61085e565b6102f76102f2366004611253565b61091a565b6040516001600160a01b039091168152602001610167565b61020661031d36600461126c565b610986565b6101976103303660046112ba565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b610206610369366004611298565b610a5c565b60606003805461037d906112e4565b80601f01602080910402602001604051908101604052809291908181526020018280546103a9906112e4565b80156103f65780601f106103cb576101008083540402835291602001916103f6565b820191906000526020600020905b8154815290600101906020018083116103d957829003601f168201915b5050505050905090565b60003361040e818585610ab6565b60019150505b92915050565b600033610428858285610bda565b610433858585610c6c565b506001949350505050565b3360008181526001602090815260408083206001600160a01b038716845290915281205490919061040e908290869061047890879061132e565b610ab6565b6000600161048b81336106de565b6104b05760405162461bcd60e51b81526004016104a790611357565b60405180910390fd5b61040e8484610e3a565b60026104c681336106de565b6104e25760405162461bcd60e51b81526004016104a790611357565b6104ec3383610f19565b5050565b81600260008281526005602052604090206001015460ff16600281111561051957610519611341565b146105365760405162461bcd60e51b81526004016104a790611399565b600083815260056020526040902054839061055190336106de565b61056d5760405162461bcd60e51b81526004016104a7906113e5565b60008481526005602052604090206105889060030184611067565b60405133906001600160a01b0385169086907feb3e33034c392e69263b04ec0fa376dc12784a41b6676c7f31b936cbc0fbb5af90600090a450505050565b6105d1600082610986565b50565b81600260008281526005602052604090206001015460ff1660028111156105fd576105fd611341565b1461061a5760405162461bcd60e51b81526004016104a790611399565b600083815260056020526040902054839061063590336106de565b6106515760405162461bcd60e51b81526004016104a7906113e5565b600084815260056020526040902061066c9060030184611089565b60405133906001600160a01b0385169086907f63502af7324ff6db91ab38f8236a648727d9385ea6c782073dd4882d8a61a48f90600090a450505050565b600060026106b881336106de565b6106d45760405162461bcd60e51b81526004016104a790611357565b61040e8484610f19565b600082815260056020526040812060018082015460ff16600281111561070657610706611341565b036107275760028101546001600160a01b038481169116145b915050610414565b6002600182015460ff16600281111561074257610742611341565b0361076a576001600160a01b038316600090815260038201602052604090205460ff1661071f565b60405162461bcd60e51b815260206004820152600e60248201526d125b9d985b1a59081c9bdb19525960921b60448201526064016104a7565b60606004805461037d906112e4565b6105d160015b826105d4565b3360008181526001602090815260408083206001600160a01b0387168452909152812054909190838110156108435760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b60648201526084016104a7565b6104338286868403610ab6565b60003361040e818585610c6c565b80600260008281526005602052604090206001015460ff16600281111561088757610887611341565b146108a45760405162461bcd60e51b81526004016104a790611399565b816108af81336106de565b6108cb5760405162461bcd60e51b81526004016104a790611357565b60008381526005602052604090206108e69060030133611067565b6040513390819085907feb3e33034c392e69263b04ec0fa376dc12784a41b6676c7f31b936cbc0fbb5af90600090a4505050565b600081600160008281526005602052604090206001015460ff16600281111561094557610945611341565b146109625760405162461bcd60e51b81526004016104a790611429565b6000838152600560205260409020600201546001600160a01b031691505b50919050565b81600160008281526005602052604090206001015460ff1660028111156109af576109af611341565b146109cc5760405162461bcd60e51b81526004016104a790611429565b60008381526005602052604090205483906109e790336106de565b610a035760405162461bcd60e51b81526004016104a7906113e5565b6000848152600560205260409020610a1e9060020184611104565b60405133906001600160a01b0385169086907f3b855c56b409b671c7112789d022675eb639d0bcb8896f1b6197c132f799e74690600090a450505050565b6105d160026107b8565b6104ec8282611104565b60005b8151811015610ab157610a9f83838381518110610a9257610a92611478565b6020026020010151611089565b80610aa98161148e565b915050610a73565b505050565b6001600160a01b038316610b185760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b60648201526084016104a7565b6001600160a01b038216610b795760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b60648201526084016104a7565b6001600160a01b0383811660008181526001602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b6001600160a01b038381166000908152600160209081526040808320938616835292905220546000198114610c665781811015610c595760405162461bcd60e51b815260206004820152601d60248201527f45524332303a20696e73756666696369656e7420616c6c6f77616e636500000060448201526064016104a7565b610c668484848403610ab6565b50505050565b6001600160a01b038316610cd05760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b60648201526084016104a7565b6001600160a01b038216610d325760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b60648201526084016104a7565b6001600160a01b03831660009081526020819052604090205481811015610daa5760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b60648201526084016104a7565b6001600160a01b03808516600090815260208190526040808220858503905591851681529081208054849290610de190849061132e565b92505081905550826001600160a01b0316846001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef84604051610e2d91815260200190565b60405180910390a3610c66565b6001600160a01b038216610e905760405162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f20616464726573730060448201526064016104a7565b8060026000828254610ea2919061132e565b90915550506001600160a01b03821660009081526020819052604081208054839290610ecf90849061132e565b90915550506040518181526001600160a01b038316906000907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9060200160405180910390a35050565b6001600160a01b038216610f795760405162461bcd60e51b815260206004820152602160248201527f45524332303a206275726e2066726f6d20746865207a65726f206164647265736044820152607360f81b60648201526084016104a7565b6001600160a01b03821660009081526020819052604090205481811015610fed5760405162461bcd60e51b815260206004820152602260248201527f45524332303a206275726e20616d6f756e7420657863656564732062616c616e604482015261636560f01b60648201526084016104a7565b6001600160a01b038316600090815260208190526040812083830390556002805484929061101c9084906114a7565b90915550506040518281526000906001600160a01b038516907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9060200160405180910390a3505050565b6001600160a01b0316600090815260209190915260409020805460ff19169055565b6001600160a01b0381166110df5760405162461bcd60e51b815260206004820152601f60248201527f43616e6e6f74206164642030783020746f20612073686172656420726f6c650060448201526064016104a7565b6001600160a01b0316600090815260209190915260409020805460ff19166001179055565b6001600160a01b0381166111665760405162461bcd60e51b815260206004820152602360248201527f43616e6e6f742073657420616e206578636c757369766520726f6c6520746f2060448201526203078360ec1b60648201526084016104a7565b81546001600160a01b0319166001600160a01b0391909116179055565b600060208083528351808285015260005b818110156111b057858101830151858201604001528201611194565b506000604082860101526040601f19601f8301168501019250505092915050565b80356001600160a01b03811681146111e857600080fd5b919050565b6000806040838503121561120057600080fd5b611209836111d1565b946020939093013593505050565b60008060006060848603121561122c57600080fd5b611235846111d1565b9250611243602085016111d1565b9150604084013590509250925092565b60006020828403121561126557600080fd5b5035919050565b6000806040838503121561127f57600080fd5b8235915061128f602084016111d1565b90509250929050565b6000602082840312156112aa57600080fd5b6112b3826111d1565b9392505050565b600080604083850312156112cd57600080fd5b6112d6836111d1565b915061128f602084016111d1565b600181811c908216806112f857607f821691505b60208210810361098057634e487b7160e01b600052602260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b8082018082111561041457610414611318565b634e487b7160e01b600052602160045260246000fd5b60208082526022908201527f53656e64657220646f6573206e6f7420686f6c6420726571756972656420726f6040820152616c6560f01b606082015260800190565b6020808252602c908201527f4d7573742062652063616c6c6564206f6e20616e20696e697469616c697a656460408201526b2053686172656420726f6c6560a01b606082015260800190565b60208082526024908201527f43616e206f6e6c792062652063616c6c6564206279206120726f6c65206d616e60408201526330b3b2b960e11b606082015260800190565b6020808252602f908201527f4d7573742062652063616c6c6564206f6e20616e20696e697469616c697a656460408201526e204578636c757369766520726f6c6560881b606082015260800190565b634e487b7160e01b600052603260045260246000fd5b6000600182016114a0576114a0611318565b5060010190565b818103818111156104145761041461131856fea26469706673582212208961104dd3923b79c08fd49fd308093d4ed7792f1229905fa0e9f300d355f10d64736f6c63430008100033417474656d7074656420746f2075736520616e20696e76616c696420726f6c65a2646970667358221220086c5aa3f96334e34488d41ae357f364e0ea84dbbacc4679565813aae47714e164736f6c634300081000330000000000000000000000007109709ecfa91a80626ff3989d68f67f5b1dd12da264697066735822122054b7ebd042da71bf8b48372991969c24ad54e82923d99b088ce443bf9eed2eff64736f6c63430008100033",
    "sourceMap": "107:4846:61:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;203:111;;;:::i;:::-;;2452:134:6;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;320:1079:61;;;:::i;3360:151:6:-;;;:::i;:::-;;;;;;;:::i;3221:133::-;;;:::i;2922:141::-;;;:::i;2678:1242:61:-;;;:::i;2738:178:6:-;;;:::i;:::-;;;;;;;:::i;2591:802:62:-;;;:::i;2592:140:6:-;;;:::i;:::-;;;;;;;:::i;3069:146::-;;;:::i;574:434:58:-;;;:::i;9047:462:62:-;;;;;;:::i;:::-;;:::i;2157:141:6:-;;;:::i;1819:584:0:-;;;:::i;:::-;;;6161:14:69;;6154:22;6136:41;;6124:2;6109:18;1819:584:0;5996:187:69;1405:1267:61;;;:::i;330:40:58:-;;;;;-1:-1:-1;;;;;330:40:58;;;;;;-1:-1:-1;;;;;6378:32:69;;;6360:51;;6348:2;6333:18;330:40:58;6188:229:69;2304:142:6;;;:::i;3926:1025:61:-;;;:::i;7315:523:62:-;;;;;;:::i;:::-;;:::i;:::-;;;8502:25:69;;;8490:2;8475:18;7315:523:62;8356:177:69;1572:26:0;;;;;;;;;203:111:61;237:30;:28;:30::i;:::-;288:19;:17;:19::i;:::-;277:8;:30;203:111::o;2452:134:6:-;2499:33;2563:16;2544:35;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2544:35:6;;;;;;;;;;;;;;;;;;;;;;;2452:134;:::o;320:1079:61:-;376:19;398:33;412:8;;422;398:33;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:13;:33::i;:::-;473:15;;:47;;-1:-1:-1;;;473:47:61;;186:3:64;473:47:61;;;6360:51:69;376:55:61;;-1:-1:-1;441:29:61;;-1:-1:-1;;;;;473:15:61;;;;:25;;6333:18:69;;473:47:61;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;651:5;;697:15;;672:22;;;-1:-1:-1;;;672:22:61;;;;441:79;;-1:-1:-1;;;;;;651:5:61;;;;:20;;-1:-1:-1;;;;;697:15:61;;;;651:5;;672:20;;:22;;;;;;;;;;;;;;;651:5;672:22;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:40;;;;:::i;:::-;651:62;;;;;;;;;;;;;8502:25:69;;8490:2;8475:18;;8356:177;651:62:61;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;758:16:61;;789:79;;;;;;9897:25:69;;;758:16:61;9938:18:69;;;;9931:50;;;;789:79:61;;;;;;;;;;9870:18:69;;;;789:79:61;;;;;;;-1:-1:-1;;;;;789:79:61;-1:-1:-1;;;789:79:61;;;723:155;;-1:-1:-1;;;723:155:61;;-1:-1:-1;;;;;;;;;;;723:13:61;-1:-1:-1;723:13:61;;-1:-1:-1;723:155:61;;-1:-1:-1;;;;;758:16:61;;789:79;723:155;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;899:18:61;;:59;;-1:-1:-1;;;899:59:61;;;;;8502:25:69;;;888:71:61;;-1:-1:-1;;;;;;899:18:61;;;;-1:-1:-1;899:46:61;;8475:18:69;;899:59:61;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;888:10;:71::i;:::-;1045:15;;:47;;-1:-1:-1;;;1045:47:61;;186:3:64;1045:47:61;;;6360:51:69;1036:104:61;;-1:-1:-1;;;;;1045:15:61;;:25;;6333:18:69;;1045:47:61;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1133:6;;1118:12;;1094:36;;:21;:36;:::i;:::-;:45;;;;:::i;:::-;1036:8;:104::i;:::-;1247:16;;1274:8;;1247:36;;-1:-1:-1;;;1247:36:61;;;;;8502:25:69;;;;1207:37:61;;-1:-1:-1;;;;;1247:16:61;;:26;;8475:18:69;;1247:36:61;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1247:36:61;;;;;;;;;;;;:::i;:::-;1207:76;;1293:27;1304:6;:15;;;1293:10;:27::i;:::-;1330:62;1339:6;:24;;;1381:8;1365:26;;;;;;:::i;:::-;;;;;;;;1330:8;:62::i;:::-;366:1033;;;320:1079::o;3360:151:6:-;3409:42;3485:19;3463:41;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;3463:41:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3360:151;:::o;3221:133::-;3267:33;3331:16;3312:35;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;3312:35:6;;;;;;;;;;;;;;;;;;;;;;3221:133;:::o;2922:141::-;2970:35;3038:18;3017:39;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;3017:39:6;;;;;;;;;;;;;;;;;;;;;;2922:141;:::o;2678:1242:61:-;2739:19;2761:33;2775:8;;2785;2761:33;;;;;:::i;:::-;2830:15;;2864:16;;2830:52;;-1:-1:-1;;;2830:52:61;;-1:-1:-1;;;;;2864:16:61;;;2830:52;;;6360:51:69;2739:55:61;;-1:-1:-1;2804:23:61;;2830:15;;;:25;;6333:18:69;;2830:52:61;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2804:78;;3016:34;3053:54;3081:11;3094:12;;3053:27;:54::i;:::-;3145:10;;3016:91;;-1:-1:-1;3117:62:61;;-1:-1:-1;;;;;3145:10:61;3016:91;3145:10;3117:19;:62::i;:::-;3224:16;;3255:80;;;;;;9897:25:69;;;309:37:1;9938:18:69;;;;9931:50;;;;3255:80:61;;;;;;;;;;9870:18:69;;;;3255:80:61;;;;;;;-1:-1:-1;;;;;3255:80:61;-1:-1:-1;;;3255:80:61;;;3189:156;;-1:-1:-1;;;3189:156:61;;-1:-1:-1;;;;;;;;;;;3189:13:61;;;:156;;-1:-1:-1;;;;;3224:16:61;;;;3189:156;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;3367:18:61;;:59;;-1:-1:-1;;;3367:59:61;;;;;8502:25:69;;;3355:72:61;;-1:-1:-1;;;;;;3367:18:61;;;;-1:-1:-1;3367:46:61;;8475:18:69;;3367:59:61;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;3355:11;:72::i;:::-;3508:15;;3542:16;;3508:52;;-1:-1:-1;;;3508:52:61;;-1:-1:-1;;;;;3542:16:61;;;3508:52;;;6360:51:69;3499:79:61;;3508:15;;;;;:25;;6333:18:69;;3508:52:61;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;3562:15;3499:8;:79::i;:::-;3597:15;;3631:16;;3597:52;;-1:-1:-1;;;3597:52:61;;-1:-1:-1;;;;;3631:16:61;;;3597:52;;;6360:51:69;3588:70:61;;3597:15;;;;;:25;;6333:18:69;;3597:52:61;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;3651:6;;3588:8;:70::i;:::-;3783:16;;3810:8;;3783:36;;-1:-1:-1;;;3783:36:61;;;;;8502:25:69;;;;3743:37:61;;-1:-1:-1;;;;;3783:16:61;;:26;;8475:18:69;;3783:36:61;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;3783:36:61;;;;;;;;;;;;:::i;:::-;3743:76;;3829:28;3841:6;:15;;;3829:11;:28::i;:::-;3876:24;;;;3867:46;;3910:1;3867:8;:46::i;:::-;2729:1191;;;;2678:1242::o;2738:178:6:-;2794:48;2883:26;2854:55;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2854:55:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2854:55:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2591:802:62;2632:72;2719:31;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2719:37:62;;:39;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2789:30;;;;2768:18;:51;;-1:-1:-1;;;;;;2768:51:62;;;-1:-1:-1;;;;;2768:51:62;;;;;;;;;2847:27;;;;2829:15;:45;;;;;;;;;;;;;2897:22;;;;2884:10;:35;;;;;;;;;;;;;2937:17;;2929:5;:25;;;;;;;;;;;;;2973:18;;;2964:6;:27;;;;;;;;;;;;;3009:17;;;;;3001:5;:25;;;;;;;;;;;;;3054:43;;2789:30;;-1:-1:-1;2768:51:62;3054:43;;;:::i;:::-;-1:-1:-1;;;;;6378:32:69;;;6360:51;;6348:2;6333:18;3054:43:62;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;3036:15:62;:61;;-1:-1:-1;;;;;;3036:61:62;-1:-1:-1;;;;;3036:61:62;;;;;;3130:18;;:41;;;-1:-1:-1;;;3130:41:62;;;;:18;;;;;:39;;:41;;;;;;;;;;;;;;:18;:41;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;3107:20;:64;3195:18;;3237:15;;3195:59;;-1:-1:-1;;;3195:59:62;;-1:-1:-1;;;;;3237:15:62;;;3195:59;;;6360:51:69;3195:18:62;;;:33;;6333:18:69;;3195:59:62;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;3181:11;:73;3282:18;;:36;;;-1:-1:-1;;;3282:36:62;;;;-1:-1:-1;;;;;3282:18:62;;;;:34;;:36;;;;;;;;;;;;;;;:18;:36;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;3264:15;:54;;-1:-1:-1;;3264:54:62;-1:-1:-1;;;;;3264:54:62;;;;;;;;;;3348:18;;:38;;;-1:-1:-1;;;3348:38:62;;;;-1:-1:-1;;;;;3348:18:62;;;;:36;;:38;;;;;;;;;;;;;;;:18;:38;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;3328:17;:58;-1:-1:-1;2591:802:62:o;2592:140:6:-;2640:34;2707:18;2686:39;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3069:146;3117:40;3190:18;3169:39;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;3169:39:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;3169:39:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;574:434:58;631:14;:12;:14::i;:::-;703:6;;720:15;;746:18;;674:92;;-1:-1:-1;;;;;703:6:58;;;;720:15;;;;746:18;;;;674:92;;;:::i;:::-;-1:-1:-1;;;;;15886:15:69;;;15868:34;;15938:15;;;15933:2;15918:18;;15911:43;15990:15;;;15985:2;15970:18;;15963:43;15818:2;15803:18;674:92:58;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;655:16:58;:111;;-1:-1:-1;;;;;;655:111:58;-1:-1:-1;;;;;655:111:58;;;;;;798:18;;840:15;;798:59;;-1:-1:-1;;;798:59:58;;840:15;;;798:59;;;6360:51:69;-1:-1:-1;;798:18:58;;;;;:33;;6333:18:69;;798:59:58;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;776:81;;896:7;882:11;:21;:45;;916:11;882:45;;;906:7;882:45;867:12;:60;974:27;:25;:27::i;:::-;621:387;574:434::o;9047:462:62:-;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;9220:73:62;;-1:-1:-1;;;9220:73:62;9371:86;;;;;;8502:25:69;;;9371:86:62;;;;;;;;;;8475:18:69;;;;9371:86:62;;;;;;;-1:-1:-1;;;;;9371:86:62;-1:-1:-1;;;9371:86:62;;;9471:21;;-1:-1:-1;;;;;;;;;;;;;9303:11:62;;;1434:4;;9371:86;9471:21;;-1:-1:-1;;9471:21:62;;:::i;:::-;;;;;;;;;;;;;9303:199;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;9146:363;9047:462;;:::o;2157:141:6:-;2206:34;2273:18;2252:39;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1819:584:0;1873:7;;1853:4;;1873:7;;;;;1869:528;;;-1:-1:-1;1903:7:0;;;;;;;;1819:584::o;1869:528::-;1941:17;-1:-1:-1;;;;;;;;;;;2985:55:0;3066:16;1980:374;;2196:43;;;-1:-1:-1;;;;;;;;;;;2196:43:0;;;18796:51:69;;;-1:-1:-1;;;18863:18:69;;;18856:34;2196:43:0;;;;;;;;;18769:18:69;;;2196:43:0;;;-1:-1:-1;;1671:64:0;;2086:175;;2135:34;;2086:175;;;:::i;:::-;;;;-1:-1:-1;;2086:175:0;;;;;;;;;;2047:232;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2020:259;;;2323:7;2312:27;;;;;;;;;;;;:::i;:::-;2297:42;;2002:352;1980:374;2374:12;1819:584;-1:-1:-1;1819:584:0:o;1405:1267:61:-;1468:19;1490:33;1504:8;;1514;1490:33;;;;;:::i;:::-;1565:15;;:47;;-1:-1:-1;;;1565:47:61;;186:3:64;1565:47:61;;;6360:51:69;1468:55:61;;-1:-1:-1;1533:29:61;;-1:-1:-1;;;;;1565:15:61;;;;:25;;6333:18:69;;1565:47:61;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1533:79;;1748:34;1785:54;1813:11;1826:12;;1785:27;:54::i;:::-;1877:10;;1748:91;;-1:-1:-1;1849:61:61;;-1:-1:-1;;;;;1877:10:61;1748:91;1877:10;1849:19;:61::i;:::-;1955:16;;1986:79;;;;;;9897:25:69;;;1955:16:61;9938:18:69;;;;9931:50;;;;1986:79:61;;;;;;;;;;9870:18:69;;;;1986:79:61;;;;;;;-1:-1:-1;;;;;1986:79:61;-1:-1:-1;;;1986:79:61;;;1920:155;;-1:-1:-1;;;1920:155:61;;-1:-1:-1;;;;;;;;;;;1920:13:61;;;:155;;-1:-1:-1;;;;;1955:16:61;;;;1920:155;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;2096:18:61;;:59;;-1:-1:-1;;;2096:59:61;;;;;8502:25:69;;;2085:71:61;;-1:-1:-1;;;;;;2096:18:61;;;;-1:-1:-1;2096:46:61;;8475:18:69;;2096:59:61;8356:177:69;2085:71:61;2278:15;;:47;;-1:-1:-1;;;2278:47:61;;186:3:64;2278:47:61;;;6360:51:69;2256:157:61;;-1:-1:-1;;;;;2278:15:61;;:25;;6333:18:69;;2278:47:61;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2402:1;2387:12;;:16;;;;:::i;:::-;2378:6;;2363:12;;2339:36;;:21;:36;:::i;:::-;:45;;;;:::i;2256:157::-;2520:16;;2547:8;;2520:36;;-1:-1:-1;;;2520:36:61;;;;;8502:25:69;;;;2480:37:61;;-1:-1:-1;;;;;2520:16:61;;:26;;8475:18:69;;2520:36:61;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;2520:36:61;;;;;;;;;;;;:::i;:::-;2480:76;;2566:27;2577:6;:15;;;2566:10;:27::i;:::-;2603:62;2612:6;:24;;;2654:8;2638:26;;;;;;:::i;2304:142:6:-;2353:35;2421:18;2400:39;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2400:39:6;;;;;;;;;;;;;;;;;;;;;;2304:142;:::o;3926:1025:61:-;3992:19;4014:33;4028:8;;4038;4014:33;;;;;:::i;:::-;3992:55;;4128:34;4165:54;4193:11;4206:12;;4165:27;:54::i;:::-;4257:10;;4128:91;;-1:-1:-1;4229:62:61;;-1:-1:-1;;;;;4257:10:61;4128:91;4257:10;4229:19;:62::i;:::-;4313:18;;:59;;-1:-1:-1;;;4313:59:61;;;;;8502:25:69;;;4301:72:61;;-1:-1:-1;;;;;4313:18:61;;:46;;8475:18:69;;4313:59:61;8356:177:69;4301:72:61;4452:25;4480:33;4494:8;;4504;4480:33;;;;;:::i;:::-;4523:5;;4569:15;;4544:22;;;-1:-1:-1;;;4544:22:61;;;;4452:61;;-1:-1:-1;;;;;;4523:5:61;;;;:20;;-1:-1:-1;;;;;4569:15:61;;;;4523:5;;4544:20;;:22;;;;;;;;;;;;;;;4523:5;4544:22;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:40;;;;:::i;:::-;4523:62;;;;;;;;;;;;;8502:25:69;;8490:2;8475:18;;8356:177;4523:62:61;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;4607:18:61;;:65;;-1:-1:-1;;;4607:65:61;;;;;8502:25:69;;;4596:77:61;;-1:-1:-1;;;;;;4607:18:61;;;;-1:-1:-1;4607:46:61;;8475:18:69;;4607:65:61;8356:177:69;4596:77:61;4799:16;;4826:8;;4799:36;;-1:-1:-1;;;4799:36:61;;;;;8502:25:69;;;;4759:37:61;;-1:-1:-1;;;;;4799:16:61;;:26;;8475:18:69;;4799:36:61;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;4799:36:61;;;;;;;;;;;;:::i;:::-;4759:76;;4845:27;4856:6;:15;;;4845:10;:27::i;:::-;4882:62;4891:6;:24;;;4933:8;4917:26;;;;;;:::i;7315:523:62:-;7437:23;;-1:-1:-1;;;7437:23:62;;-1:-1:-1;;;;;6378:32:69;;7437:23:62;;;6360:51:69;7406:19:62;;-1:-1:-1;;;;;;;;;;;7437:13:62;;;6333:18:69;;7437:23:62;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;7470:15:62;;7507:18;;:59;;-1:-1:-1;;;7507:59:62;;-1:-1:-1;;;;;7470:15:62;;;7507:59;;;6360:51:69;;;7470:15:62;-1:-1:-1;7470:26:62;;-1:-1:-1;7497:8:62;;7507:18;;;;:33;;6333:18:69;;7507:59:62;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;7470:97;;-1:-1:-1;;;;;;7470:97:62;;;;;;;-1:-1:-1;;;;;18814:32:69;;;7470:97:62;;;18796:51:69;18863:18;;;18856:34;18769:18;;7470:97:62;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;7577:15:62;;7622:18;;7655:59;;-1:-1:-1;;;7655:59:62;;-1:-1:-1;;;;;7577:15:62;;;7655:59;;;6360:51:69;;;7577:15:62;-1:-1:-1;7577:23:62;;-1:-1:-1;7622:18:62;;;;;7655:33;;6333:18:69;;7655:59:62;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;7577:147;;-1:-1:-1;;;;;;7577:147:62;;;;;;;-1:-1:-1;;;;;18814:32:69;;;7577:147:62;;;18796:51:69;18863:18;;;18856:34;18769:18;;7577:147:62;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;7748:18:62;;:59;;-1:-1:-1;;;7748:59:62;;-1:-1:-1;;;;;7748:18:62;;;;:42;;:59;;7791:5;;7798:8;;7748:59;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;7734:73;;317:28:1;309:37;;-1:-1:-1;;;;;7817:12:62;;:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7315:523;;;;:::o;1241:242:58:-;1288:7;1307:27;:25;:27::i;:::-;1344;;-1:-1:-1;;;1344:27:58;;133:3:64;1344:27:58;;;6360:51:69;-1:-1:-1;;;;;;;;;;;1344:8:58;;;6333:18:69;;1344:27:58;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1388:16:58;;1455:6;;1463:12;;1388:88;;-1:-1:-1;;;1388:88:58;;-1:-1:-1;;;;;1388:16:58;;;;-1:-1:-1;1388:33:58;;-1:-1:-1;1388:88:58;;1422:8;;1432;;1442:11;;1388:88;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1381:95;;1241:242;:::o;1727:252::-;1809:19;1840:20;:18;:20::i;:::-;1870:30;;-1:-1:-1;;;1870:30:58;;186:3:64;1870:30:58;;;6360:51:69;-1:-1:-1;;;;;;;;;;;1870:8:58;;;6333:18:69;;1870:30:58;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1924:16:58;;:48;;-1:-1:-1;;;1924:48:58;;-1:-1:-1;;;;;1924:16:58;;;;-1:-1:-1;1924:29:58;;-1:-1:-1;1924:48:58;;1954:8;;1964:7;;1924:48;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1910:62;1727:252;-1:-1:-1;;;1727:252:58:o;3262:157:0:-;3322:9;3317:96;;3352:30;;;;;22389:2:69;22371:21;;;22428:2;22408:18;;;22401:30;22467:25;22462:2;22447:18;;22440:53;22525:2;22510:18;;22187:347;3352:30:0;;;;;;;;3396:6;:4;:6::i;5209:262::-;5271:1;5266;:6;5262:203;;5293:41;;;;;22741:2:69;22723:21;;;22780:2;22760:18;;;22753:30;22819:34;22814:2;22799:18;;22792:62;-1:-1:-1;;;22885:2:69;22870:18;;22863:32;22927:3;22912:19;;22539:398;5293:41:0;;;;;;;;5353:31;5382:1;5353:31;;;;;;:::i;:::-;;;;;;;;5403;5432:1;5403:31;;;;;;:::i;:::-;;;;;;;;5448:6;:4;:6::i;:::-;5209:262;;:::o;4095:277::-;4163:1;4158;:6;4154:212;;4185:44;;;;;24178:2:69;24160:21;;;24217:2;24197:18;;;24190:30;24256:34;24251:2;24236:18;;24229:62;-1:-1:-1;;;24322:2:69;24307:18;;24300:35;24367:3;24352:19;;23976:401;4185:44:0;;;;;;;;4248:34;4280:1;4248:34;;;;;;:::i;:::-;;;;;;;;4301;4333:1;4301:34;;;;;;:::i;6391:918:62:-;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;;;6621:18:62;;:44;;-1:-1:-1;;;6621:44:62;;;;;8502:25:69;;;6564:54:62;;-1:-1:-1;;;;;6621:18:62;;:31;;8475:18:69;;6621:44:62;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;6564:101;;6675:34;6724:223;;;;;;;;6768:18;;;;;;;;;-1:-1:-1;;;;;6768:18:62;-1:-1:-1;;;;;6768:36:62;;:38;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;6724:223;;6830:23;;;;;-1:-1:-1;;;;;6724:223:62;;;;;6886:18;;:46;;-1:-1:-1;;;6886:46:62;;;;;8502:25:69;;;6724:223:62;;;;;-1:-1:-1;;;;;6886:18:62;;:33;;8475:18:69;;6886:46:62;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;6886:46:62;;;;;;;;;;;;:::i;:::-;6724:223;;7001:35;;-1:-1:-1;;;7001:35:62;;239:3:64;7001:35:62;;;6360:51:69;6675:272:62;;-1:-1:-1;;;;;;;;;;;;7001:13:62;;;6333:18:69;;7001:35:62;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;7046:15:62;;:54;;-1:-1:-1;;;7046:54:62;;239:3:64;7046:54:62;;;18796:51:69;18863:18;;;18856:34;;;-1:-1:-1;;;;;7046:15:62;;;;-1:-1:-1;7046:26:62;;-1:-1:-1;18769:18:69;;7046:54:62;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;7110:15:62;;7142:18;;7110:58;;-1:-1:-1;;;7110:58:62;;-1:-1:-1;;;;;7142:18:62;;;7110:58;;;18796:51:69;18863:18;;;18856:34;;;7110:15:62;;;-1:-1:-1;7110:23:62;;-1:-1:-1;18769:18:69;;7110:58:62;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;7178:18:62;;:70;;-1:-1:-1;;;7178:70:62;;;;;27826:25:69;;;239:3:64;27867:18:69;;;27860:60;-1:-1:-1;;;;;7178:18:62;;;;:35;;27799:18:69;;7178:70:62;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;317:28:1;309:37;;-1:-1:-1;;;;;7258:12:62;;:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;7289:13:62;;-1:-1:-1;;;;;6391:918:62;;;;;:::o;4656:591::-;5041:24;;5083:18;;;;5119:27;;;;;4946:214;;-1:-1:-1;;;;;;;;;;;4901:11:62;;;4926:6;;-1:-1:-1;;;4986:37:62;4946:214;;5041:24;5083:18;5119:27;4946:214;;;:::i;:::-;;;;-1:-1:-1;;4946:214:62;;;;;;;;;;;;;;-1:-1:-1;;;;;4946:214:62;-1:-1:-1;;;;;;4946:214:62;;;;;;;;;;5185:17;:44;;5227:1;5185:44;;;5212:4;5185:44;5174:56;;;;;;8502:25:69;;8490:2;8475:18;;8356:177;587:83:2;646:17;658:4;657:5;646:10;:17::i;1014:221:58:-;1070:15;;1116:6;;1070:53;;-1:-1:-1;;;1070:53:58;;:15;:53;;;18796:51:69;18863:18;;;18856:34;;;;-1:-1:-1;;;;;1070:15:58;;;;:26;;18769:18:69;;1070:53:58;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1133:27:58;;-1:-1:-1;;;1133:27:58;;133:3:64;1133:27:58;;;6360:51:69;-1:-1:-1;;;;;;;;;;;1133:8:58;-1:-1:-1;1133:8:58;;-1:-1:-1;6333:18:69;;1133:27:58;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1170:15:58;;1202:16;;1221:6;;1170:58;;-1:-1:-1;;;1170:58:58;;-1:-1:-1;;;;;1202:16:58;;;1170:58;;;18796:51:69;18863:18;;;18856:34;;;;1170:15:58;;;-1:-1:-1;1170:23:58;;-1:-1:-1;18769:18:69;;1170:58:58;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;1489:232::-;1538:15;;1587:12;;1538:62;;-1:-1:-1;;;1538:62:58;;186:3:64;1538:62:58;;;18796:51:69;18863:18;;;18856:34;;;;-1:-1:-1;;;;;1538:15:58;;;;:26;;18769:18:69;;1538:62:58;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1610:30:58;;-1:-1:-1;;;1610:30:58;;186:3:64;1610:30:58;;;6360:51:69;-1:-1:-1;;;;;;;;;;;1610:8:58;-1:-1:-1;1610:8:58;;-1:-1:-1;6333:18:69;;1610:30:58;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1650:15:58;;1682:16;;1701:12;;1650:64;;-1:-1:-1;;;1650:64:58;;-1:-1:-1;;;;;1682:16:58;;;1650:64;;;18796:51:69;18863:18;;;18856:34;;;;1650:15:58;;;-1:-1:-1;1650:23:58;;-1:-1:-1;18769:18:69;;1650:64:58;18622:274:69;2409:432:0;-1:-1:-1;;;;;;;;;;;2985:55:0;3066:16;2452:359;;2652:67;;;-1:-1:-1;;;;;;;;;;;2652:67:0;;;28678:51:69;;;-1:-1:-1;;;28745:18:69;;;28738:34;;;;2712:4:0;28788:18:69;;;28781:34;2489:11:0;;1671:64;2586:43;;28651:18:69;;2652:67:0;;;-1:-1:-1;;2652:67:0;;;;;;;;;;2541:196;;;2652:67;2541:196;;:::i;:::-;;;;-1:-1:-1;;2541:196:0;;;;;;;;;;2506:245;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;2452:359:0;2820:7;:14;;-1:-1:-1;;2820:14:0;;;;;2409:432::o;-1:-1:-1:-;;;;;;;;:::o;:::-;;;;;;;;:::o;:::-;;;;;;;;:::o;123:658:69:-;294:2;346:21;;;416:13;;319:18;;;438:22;;;265:4;;294:2;517:15;;;;491:2;476:18;;;265:4;560:195;574:6;571:1;568:13;560:195;;;639:13;;-1:-1:-1;;;;;635:39:69;623:52;;730:15;;;;695:12;;;;671:1;589:9;560:195;;;-1:-1:-1;772:3:69;;123:658;-1:-1:-1;;;;;;123:658:69:o;786:250::-;871:1;881:113;895:6;892:1;889:13;881:113;;;971:11;;;965:18;952:11;;;945:39;917:2;910:10;881:113;;;-1:-1:-1;;1028:1:69;1010:16;;1003:27;786:250::o;1041:271::-;1083:3;1121:5;1115:12;1148:6;1143:3;1136:19;1164:76;1233:6;1226:4;1221:3;1217:14;1210:4;1203:5;1199:16;1164:76;:::i;:::-;1294:2;1273:15;-1:-1:-1;;1269:29:69;1260:39;;;;1301:4;1256:50;;1041:271;-1:-1:-1;;1041:271:69:o;1317:1742::-;1550:2;1602:21;;;1672:13;;1575:18;;;1694:22;;;1521:4;;1550:2;1735;;1753:18;;;;1790:1;1833:15;;;1818:31;;1814:40;;1877:15;;;1521:4;;1941:1089;1957:6;1952:3;1949:15;1941:1089;;;-1:-1:-1;;2026:22:69;;;2022:36;2010:49;;2082:13;;2169:9;;-1:-1:-1;;;;;2165:35:69;2150:51;;2240:11;;2234:18;2272:15;;;2265:27;;;2353:19;;2122:15;;;2385:24;;;2566:21;;;;2432:2;2514:17;;;2502:30;;2498:39;;;2456:15;;;;2611:1;2625:296;2641:8;2636:3;2633:17;2625:296;;;2747:2;2743:7;2734:6;2726;2722:19;2718:33;2711:5;2704:48;2779:42;2814:6;2803:8;2797:15;2779:42;:::i;:::-;2850:17;;;;2769:52;-1:-1:-1;2893:14:69;;;;2669:1;2660:11;2625:296;;;-1:-1:-1;;;3008:12:69;;;;2944:6;-1:-1:-1;;2973:15:69;;;;1983:1;1974:11;1941:1089;;;-1:-1:-1;3047:6:69;;1317:1742;-1:-1:-1;;;;;;;;;;1317:1742:69:o;3064:1567::-;3266:4;3295:2;3335;3324:9;3320:18;3365:2;3354:9;3347:21;3388:6;3423;3417:13;3454:6;3446;3439:22;3480:2;3470:12;;3513:2;3502:9;3498:18;3491:25;;3575:2;3565:6;3562:1;3558:14;3547:9;3543:30;3539:39;3613:2;3605:6;3601:15;3634:1;3655;3665:937;3681:6;3676:3;3673:15;3665:937;;;3750:22;;;-1:-1:-1;;3746:36:69;3734:49;;3806:13;;3893:9;;-1:-1:-1;;;;;3889:35:69;3874:51;;3964:11;;3958:18;3996:15;;;3989:27;;;4077:19;;3846:15;;;4109:24;;;4199:21;;;;4244:1;;4167:2;4155:15;;;4258:236;4274:8;4269:3;4266:17;4258:236;;;4355:15;;-1:-1:-1;;;;;;4351:42:69;4337:57;;4463:17;;;;4302:1;4293:11;;;;;4420:14;;;;4258:236;;;-1:-1:-1;4580:12:69;;;;4517:5;-1:-1:-1;;;4545:15:69;;;;3707:1;3698:11;3665:937;;;-1:-1:-1;4619:6:69;;3064:1567;-1:-1:-1;;;;;;;;;3064:1567:69:o;4636:803::-;4798:4;4827:2;4867;4856:9;4852:18;4897:2;4886:9;4879:21;4920:6;4955;4949:13;4986:6;4978;4971:22;5024:2;5013:9;5009:18;5002:25;;5086:2;5076:6;5073:1;5069:14;5058:9;5054:30;5050:39;5036:53;;5124:2;5116:6;5112:15;5145:1;5155:255;5169:6;5166:1;5163:13;5155:255;;;5262:2;5258:7;5246:9;5238:6;5234:22;5230:36;5225:3;5218:49;5290:40;5323:6;5314;5308:13;5290:40;:::i;:::-;5280:50;-1:-1:-1;5388:12:69;;;;5353:15;;;;5191:1;5184:9;5155:255;;5444:131;-1:-1:-1;;;;;5519:31:69;;5509:42;;5499:70;;5565:1;5562;5555:12;5580:315;5648:6;5656;5709:2;5697:9;5688:7;5684:23;5680:32;5677:52;;;5725:1;5722;5715:12;5677:52;5764:9;5751:23;5783:31;5808:5;5783:31;:::i;:::-;5833:5;5885:2;5870:18;;;;5857:32;;-1:-1:-1;;;5580:315:69:o;6422:127::-;6483:10;6478:3;6474:20;6471:1;6464:31;6514:4;6511:1;6504:15;6538:4;6535:1;6528:15;6554:255;6626:2;6620:9;6668:6;6656:19;;-1:-1:-1;;;;;6690:34:69;;6726:22;;;6687:62;6684:88;;;6752:18;;:::i;:::-;6788:2;6781:22;6554:255;:::o;6814:::-;6886:2;6880:9;6928:6;6916:19;;-1:-1:-1;;;;;6950:34:69;;6986:22;;;6947:62;6944:88;;;7012:18;;:::i;7074:275::-;7145:2;7139:9;7210:2;7191:13;;-1:-1:-1;;7187:27:69;7175:40;;-1:-1:-1;;;;;7230:34:69;;7266:22;;;7227:62;7224:88;;;7292:18;;:::i;:::-;7328:2;7321:22;7074:275;;-1:-1:-1;7074:275:69:o;7354:186::-;7402:4;-1:-1:-1;;;;;7427:6:69;7424:30;7421:56;;;7457:18;;:::i;:::-;-1:-1:-1;7523:2:69;7502:15;-1:-1:-1;;7498:29:69;7529:4;7494:40;;7354:186::o;7545:806::-;7622:6;7630;7683:2;7671:9;7662:7;7658:23;7654:32;7651:52;;;7699:1;7696;7689:12;7651:52;7738:9;7725:23;7757:31;7782:5;7757:31;:::i;:::-;7807:5;-1:-1:-1;7863:2:69;7848:18;;7835:32;-1:-1:-1;;;;;7879:30:69;;7876:50;;;7922:1;7919;7912:12;7876:50;7945:22;;7998:4;7990:13;;7986:27;-1:-1:-1;7976:55:69;;8027:1;8024;8017:12;7976:55;8063:2;8050:16;8088:48;8104:31;8132:2;8104:31;:::i;:::-;8088:48;:::i;:::-;8159:2;8152:5;8145:17;8199:7;8194:2;8189;8185;8181:11;8177:20;8174:33;8171:53;;;8220:1;8217;8210:12;8171:53;8275:2;8270;8266;8262:11;8257:2;8250:5;8246:14;8233:45;8319:1;8314:2;8309;8302:5;8298:14;8294:23;8287:34;8340:5;8330:15;;;;;7545:806;;;;;:::o;8538:380::-;8617:1;8613:12;;;;8660;;;8681:61;;8735:4;8727:6;8723:17;8713:27;;8681:61;8788:2;8780:6;8777:14;8757:18;8754:38;8751:161;;8834:10;8829:3;8825:20;8822:1;8815:31;8869:4;8866:1;8859:15;8897:4;8894:1;8887:15;8751:161;;8538:380;;;:::o;9131:184::-;9201:6;9254:2;9242:9;9233:7;9229:23;9225:32;9222:52;;;9270:1;9267;9260:12;9222:52;-1:-1:-1;9293:16:69;;9131:184;-1:-1:-1;9131:184:69:o;9320:222::-;9385:9;;;9406:10;;;9403:133;;;9458:10;9453:3;9449:20;9446:1;9439:31;9493:4;9490:1;9483:15;9521:4;9518:1;9511:15;9992:315;-1:-1:-1;;;;;10167:32:69;;10149:51;;10236:2;10231;10216:18;;10209:30;;;-1:-1:-1;;10256:45:69;;10282:18;;10274:6;10256:45;:::i;:::-;10248:53;9992:315;-1:-1:-1;;;;9992:315:69:o;10312:164::-;10388:13;;10437;;10430:21;10420:32;;10410:60;;10466:1;10463;10456:12;10481:202;10548:6;10601:2;10589:9;10580:7;10576:23;10572:32;10569:52;;;10617:1;10614;10607:12;10569:52;10640:37;10667:9;10640:37;:::i;10688:154::-;10783:13;;10805:31;10783:13;10805:31;:::i;10847:441::-;10900:5;10953:3;10946:4;10938:6;10934:17;10930:27;10920:55;;10971:1;10968;10961:12;10920:55;11000:6;10994:13;11031:48;11047:31;11075:2;11047:31;:::i;11031:48::-;11104:2;11095:7;11088:19;11150:3;11143:4;11138:2;11130:6;11126:15;11122:26;11119:35;11116:55;;;11167:1;11164;11157:12;11116:55;11180:77;11254:2;11247:4;11238:7;11234:18;11227:4;11219:6;11215:17;11180:77;:::i;11293:1407::-;11388:6;11441:2;11429:9;11420:7;11416:23;11412:32;11409:52;;;11457:1;11454;11447:12;11409:52;11490:9;11484:16;-1:-1:-1;;;;;11560:2:69;11552:6;11549:14;11546:34;;;11576:1;11573;11566:12;11546:34;11599:22;;;;11655:6;11637:16;;;11633:29;11630:49;;;11675:1;11672;11665:12;11630:49;11701:22;;:::i;:::-;11746:30;11773:2;11746:30;:::i;:::-;11739:5;11732:45;11823:2;11819;11815:11;11809:18;11804:2;11797:5;11793:14;11786:42;11860:58;11914:2;11910;11906:11;11860:58;:::i;:::-;11855:2;11848:5;11844:14;11837:82;11951:58;12005:2;12001;11997:11;11951:58;:::i;:::-;11946:2;11939:5;11935:14;11928:82;12057:3;12053:2;12049:12;12043:19;12037:3;12030:5;12026:15;12019:44;12110:3;12106:2;12102:12;12096:19;12090:3;12083:5;12079:15;12072:44;12155:3;12151:2;12147:12;12141:19;12185:2;12175:8;12172:16;12169:36;;;12201:1;12198;12191:12;12169:36;12238:55;12285:7;12274:8;12270:2;12266:17;12238:55;:::i;:::-;12232:3;12225:5;12221:15;12214:80;;12333:3;12329:2;12325:12;12319:19;12363:2;12353:8;12350:16;12347:36;;;12379:1;12376;12369:12;12347:36;12416:55;12463:7;12452:8;12448:2;12444:17;12416:55;:::i;:::-;12410:3;12403:5;12399:15;12392:80;;12491:3;12533:2;12529;12525:11;12519:18;12562:2;12552:8;12549:16;12546:36;;;12578:1;12575;12568:12;12546:36;12614:55;12661:7;12650:8;12646:2;12642:17;12614:55;:::i;:::-;12598:14;;;12591:79;;;;-1:-1:-1;12602:5:69;11293:1407;-1:-1:-1;;;;;11293:1407:69:o;12705:844::-;12835:3;12864:1;12897:6;12891:13;12927:36;12953:9;12927:36;:::i;:::-;12982:1;12999:18;;;13026:133;;;;13173:1;13168:356;;;;12992:532;;13026:133;-1:-1:-1;;13059:24:69;;13047:37;;13132:14;;13125:22;13113:35;;13104:45;;;-1:-1:-1;13026:133:69;;13168:356;13199:6;13196:1;13189:17;13229:4;13274:2;13271:1;13261:16;13299:1;13313:165;13327:6;13324:1;13321:13;13313:165;;;13405:14;;13392:11;;;13385:35;13448:16;;;;13342:10;;13313:165;;;13317:3;;;13507:6;13502:3;13498:16;13491:23;;12992:532;-1:-1:-1;13540:3:69;;12705:844;-1:-1:-1;;;;;;12705:844:69:o;13554:1253::-;13670:6;13701:3;13745:2;13733:9;13724:7;13720:23;13716:32;13713:52;;;13761:1;13758;13751:12;13713:52;13794:2;13788:9;13824:15;;;;-1:-1:-1;;;;;13854:34:69;;13890:22;;;13851:62;13848:88;;;13916:18;;:::i;:::-;13956:10;13952:2;13945:22;13995:9;13989:16;13976:29;;14014:31;14039:5;14014:31;:::i;:::-;14069:5;14061:6;14054:21;14108:65;14169:2;14158:9;14154:18;14108:65;:::i;:::-;14103:2;14095:6;14091:15;14084:90;14207:65;14268:2;14257:9;14253:18;14207:65;:::i;:::-;14202:2;14194:6;14190:15;14183:90;14306:65;14367:2;14356:9;14352:18;14306:65;:::i;:::-;14301:2;14293:6;14289:15;14282:90;14406:66;14467:3;14456:9;14452:19;14406:66;:::i;:::-;14400:3;14392:6;14388:16;14381:92;14507:66;14568:3;14557:9;14553:19;14507:66;:::i;:::-;14501:3;14493:6;14489:16;14482:92;14608:66;14669:3;14658:9;14654:19;14608:66;:::i;:::-;14602:3;14594:6;14590:16;14583:92;14709:66;14770:3;14759:9;14755:19;14709:66;:::i;:::-;14703:3;14691:16;;14684:92;14695:6;13554:1253;-1:-1:-1;;;;13554:1253:69:o;15048:175::-;15126:13;;-1:-1:-1;;;;;15168:30:69;;15158:41;;15148:69;;15213:1;15210;15203:12;15228:206;15297:6;15350:2;15338:9;15329:7;15325:23;15321:32;15318:52;;;15366:1;15363;15356:12;15318:52;15389:39;15418:9;15389:39;:::i;16608:1528::-;16855:13;;16122:12;;16115:20;16108:28;16096:41;;16200:4;16189:16;;;16183:23;16176:31;16169:39;16153:14;;;16146:63;16272:4;16261:16;;;16255:23;16248:31;16241:39;16225:14;;;16218:63;16327:4;16316:16;;;16310:23;-1:-1:-1;;;;;16403:21:69;;;16387:14;;;16380:45;16478:4;16467:16;;;16461:23;16457:32;;16441:14;;;16434:56;16915:17;;;16909:24;80:31;;16990:4;16975:20;;68:44;17033:17;;;17027:24;-1:-1:-1;;;;;16566:30:69;17109:4;17094:20;;16554:43;17152:17;;17146:24;5970:13;5963:21;17226:4;17211:20;;5951:34;17269:17;;;17263:24;80:31;;;17306:6;17356:18;;;68:44;;;;16798:3;16783:19;;;17263:24;17424:4;17416:6;17412:17;17406:24;17384:46;;17449:6;17464:53;17513:2;17502:9;17498:18;17482:14;-1:-1:-1;;;;;16566:30:69;16554:43;;16501:102;17464:53;17566:4;17558:6;17554:17;17548:24;17526:46;;17591:6;17606:51;17653:2;17642:9;17638:18;17622:14;5970:13;5963:21;5951:34;;5900:91;17606:51;17694:4;17682:17;;17676:24;17719:6;17741:18;;;17734:30;;;;17810:15;;;17804:22;17795:6;17780:22;;17773:54;17873:15;;;17867:22;17858:6;17843:22;;17836:54;17927:15;;17921:22;-1:-1:-1;;;;;80:31:69;;;18002:6;17987:22;;68:44;18047:15;;18041:22;80:31;;;18122:6;18107:22;;;68:44;;;;16608:1528;;-1:-1:-1;16608:1528:69:o;18141:476::-;-1:-1:-1;;;;;18362:32:69;;18344:51;;18431:2;18426;18411:18;;18404:30;;;-1:-1:-1;;18457:45:69;;18483:18;;18475:6;18457:45;:::i;:::-;18550:9;18542:6;18538:22;18533:2;18522:9;18518:18;18511:50;18578:33;18604:6;18596;18578:33;:::i;:::-;18570:41;18141:476;-1:-1:-1;;;;;;18141:476:69:o;18901:384::-;-1:-1:-1;;;;;;19086:33:69;;19074:46;;19143:13;;19056:3;;19165:74;19143:13;19228:1;19219:11;;19212:4;19200:17;;19165:74;:::i;:::-;19259:16;;;;19277:1;19255:24;;18901:384;-1:-1:-1;;;18901:384:69:o;19290:287::-;19419:3;19457:6;19451:13;19473:66;19532:6;19527:3;19520:4;19512:6;19508:17;19473:66;:::i;:::-;19555:16;;;;;19290:287;-1:-1:-1;;19290:287:69:o;19582:217::-;19622:1;19648;19638:132;;19692:10;19687:3;19683:20;19680:1;19673:31;19727:4;19724:1;19717:15;19755:4;19752:1;19745:15;19638:132;-1:-1:-1;19784:9:69;;19582:217::o;20083:315::-;20258:2;20247:9;20240:21;20221:4;20278:45;20319:2;20308:9;20304:18;20296:6;20278:45;:::i;:::-;20270:53;;20388:1;20384;20379:3;20375:11;20371:19;20363:6;20359:32;20354:2;20343:9;20339:18;20332:60;20083:315;;;;;:::o;20403:772::-;20453:3;20494:5;20488:12;20523:36;20549:9;20523:36;:::i;:::-;20568:19;;;20606:4;20629:1;20646:18;;;20673:146;;;;20833:1;20828:341;;;;20639:530;;20673:146;-1:-1:-1;;20715:24:69;;20701:12;;;20694:46;20787:14;;20780:22;20777:1;20773:30;20764:40;;20760:49;;;-1:-1:-1;20673:146:69;;20828:341;20859:5;20856:1;20849:16;20906:2;20903:1;20893:16;20931:1;20945:174;20959:6;20956:1;20953:13;20945:174;;;21046:14;;21028:11;;;21024:20;;21017:44;21089:16;;;;20974:10;;20945:174;;;21143:11;;21139:20;;;-1:-1:-1;;20639:530:69;;;;;;20403:772;;;;:::o;21180:706::-;21472:3;21461:9;21454:22;21435:4;21499:54;21548:3;21537:9;21533:19;21525:6;21499:54;:::i;:::-;21601:9;21593:6;21589:22;21584:2;21573:9;21569:18;21562:50;21635:41;21669:6;21661;21635:41;:::i;:::-;21621:55;;21724:9;21716:6;21712:22;21707:2;21696:9;21692:18;21685:50;21752:41;21786:6;21778;21752:41;:::i;:::-;21824:2;21809:18;;21802:34;;;;-1:-1:-1;;21867:3:69;21852:19;21845:35;21744:49;21180:706;-1:-1:-1;;;21180:706:69:o;21891:291::-;22068:6;22057:9;22050:25;22111:2;22106;22095:9;22091:18;22084:30;22031:4;22131:45;22172:2;22161:9;22157:18;22149:6;22131:45;:::i;23106:348::-;23336:2;23325:9;23318:21;23299:4;23356:49;23401:2;23390:9;23386:18;23019:2;23007:15;;-1:-1:-1;;;23047:4:69;23038:14;;23031:36;23092:2;23083:12;;22942:159;23356:49;23348:57;;23441:6;23436:2;23425:9;23421:18;23414:34;23106:348;;;;:::o;23623:::-;23853:2;23842:9;23835:21;23816:4;23873:49;23918:2;23907:9;23903:18;23536:2;23524:15;;-1:-1:-1;;;23564:4:69;23555:14;;23548:36;23609:2;23600:12;;23459:159;25088:875;25171:5;25219:4;25207:9;25202:3;25198:19;25194:30;25191:50;;;25237:1;25234;25227:12;25191:50;25270:2;25264:9;25312:4;25304:6;25300:17;25383:6;25371:10;25368:22;-1:-1:-1;;;;;25335:10:69;25332:34;25329:62;25326:88;;;25394:18;;:::i;:::-;25430:2;25423:22;25463:6;-1:-1:-1;25463:6:69;25493:37;25520:9;25493:37;:::i;:::-;25485:6;25478:53;25564:46;25606:2;25595:9;25591:18;25564:46;:::i;:::-;25559:2;25551:6;25547:15;25540:71;25644:46;25686:2;25675:9;25671:18;25644:46;:::i;:::-;25639:2;25631:6;25627:15;25620:71;25736:2;25725:9;25721:18;25715:25;25749:33;25774:7;25749:33;:::i;:::-;25810:2;25798:15;;25791:32;25868:3;25853:19;;25847:26;25882:33;25847:26;25882:33;:::i;:::-;25943:3;25931:16;;;;25924:33;25088:875;;-1:-1:-1;;25088:875:69:o;25968:1339::-;26066:6;26119:3;26107:9;26098:7;26094:23;26090:33;26087:53;;;26136:1;26133;26126:12;26087:53;26162:22;;:::i;:::-;26207:74;26273:7;26262:9;26207:74;:::i;:::-;26200:5;26193:89;26316:66;26377:3;26366:9;26362:19;26316:66;:::i;:::-;26309:4;26302:5;26298:16;26291:92;26417:49;26461:3;26450:9;26446:19;26417:49;:::i;:::-;26410:4;26403:5;26399:16;26392:75;26501:47;26543:3;26532:9;26528:19;26501:47;:::i;:::-;26494:4;26487:5;26483:16;26476:73;26568:3;26605:65;26666:2;26655:9;26651:18;26605:65;:::i;:::-;26598:4;26591:5;26587:16;26580:91;26690:3;26726:48;26770:2;26759:9;26755:18;26726:48;:::i;:::-;26720:3;26713:5;26709:15;26702:73;26794:3;26830:46;26872:2;26861:9;26857:18;26830:46;:::i;:::-;26824:3;26817:5;26813:15;26806:71;26896:3;26953:2;26942:9;26938:18;26932:25;26926:3;26919:5;26915:15;26908:50;27011:6;27000:9;26996:22;26990:29;26985:2;26978:5;26974:14;26967:53;27073:3;27062:9;27058:19;27052:26;27047:2;27040:5;27036:14;27029:50;27111:66;27172:3;27161:9;27157:19;27111:66;:::i;:::-;27106:2;27099:5;27095:14;27088:90;27210:66;27271:3;27260:9;27256:19;27210:66;:::i;:::-;27194:14;;;27187:90;-1:-1:-1;27198:5:69;;25968:1339;-1:-1:-1;;;;;25968:1339:69:o;27312:335::-;27391:6;27444:2;27432:9;27423:7;27419:23;27415:32;27412:52;;;27460:1;27457;27450:12;27412:52;27493:9;27487:16;-1:-1:-1;;;;;27518:6:69;27515:30;27512:50;;;27558:1;27555;27548:12;27512:50;27581:60;27633:7;27624:6;27613:9;27609:22;27581:60;:::i;27931:360::-;28134:6;28123:9;28116:25;28177:6;28172:2;28161:9;28157:18;28150:34;28220:2;28215;28204:9;28200:18;28193:30;28097:4;28240:45;28281:2;28270:9;28266:18;28258:6;28240:45;:::i;:::-;28232:53;27931:360;-1:-1:-1;;;;;27931:360:69:o",
    "linkReferences": {}
  },
  "methodIdentifiers": {
    "IS_TEST()": "fa7626d4",
    "_allocateBondAndAssertTruth(address,bytes)": "f4096671",
    "_commonPredictionMarketSetUp()": "a3fe4243",
    "_commonSetup()": "6906f5f5",
    "_mockGetAssertionAssertingCaller(address,bytes32)": "ab30d35a",
    "excludeArtifacts()": "b5508aa9",
    "excludeContracts()": "e20c9f71",
    "excludeSenders()": "1ed7831c",
    "failed()": "ba414fa6",
    "predictionMarket()": "def114b6",
    "setUp()": "0a9254e4",
    "targetArtifactSelectors()": "66d9a9a0",
    "targetArtifacts()": "85226c81",
    "targetContracts()": "3f7286f4",
    "targetInterfaces()": "2ade3880",
    "targetSelectors()": "916a17c6",
    "targetSenders()": "3e5e3c23",
    "test_AssertionWithCorrectDispute()": "635e6115",
    "test_ResolveMarketAfterCorrectDispute()": "eeec8397",
    "test_ResolveMarketNoDispute()": "217356c6",
    "test_ResolveMarketWithWrongDispute()": "dbd07b77"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.16+commit.07a7930e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"assertingCaller\",\"type\":\"address\"}],\"name\":\"AssertingCallerSet\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"assertionId\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"caller\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"disputer\",\"type\":\"address\"}],\"name\":\"AssertionDisputed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"assertionId\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"domainId\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"claim\",\"type\":\"bytes\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"asserter\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"callbackRecipient\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"escalationManager\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"caller\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"expirationTime\",\"type\":\"uint64\"},{\"indexed\":false,\"internalType\":\"contract IERC20\",\"name\":\"currency\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"bond\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"identifier\",\"type\":\"bytes32\"}],\"name\":\"AssertionMade\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"assertionId\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"bondRecipient\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"disputed\",\"type\":\"bool\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"settlementResolution\",\"type\":\"bool\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"settleCaller\",\"type\":\"address\"}],\"name\":\"AssertionSettled\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"requester\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"identifier\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"time\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"ancillaryData\",\"type\":\"bytes\"}],\"name\":\"PriceRequestAdded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"name\":\"log\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"log_address\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"val\",\"type\":\"uint256[]\"}],\"name\":\"log_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"int256[]\",\"name\":\"val\",\"type\":\"int256[]\"}],\"name\":\"log_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address[]\",\"name\":\"val\",\"type\":\"address[]\"}],\"name\":\"log_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"log_bytes\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"name\":\"log_bytes32\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"\",\"type\":\"int256\"}],\"name\":\"log_int\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"val\",\"type\":\"address\"}],\"name\":\"log_named_address\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"val\",\"type\":\"uint256[]\"}],\"name\":\"log_named_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"int256[]\",\"name\":\"val\",\"type\":\"int256[]\"}],\"name\":\"log_named_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"address[]\",\"name\":\"val\",\"type\":\"address[]\"}],\"name\":\"log_named_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"val\",\"type\":\"bytes\"}],\"name\":\"log_named_bytes\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"val\",\"type\":\"bytes32\"}],\"name\":\"log_named_bytes32\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"val\",\"type\":\"int256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"}],\"name\":\"log_named_decimal_int\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"val\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"}],\"name\":\"log_named_decimal_uint\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"val\",\"type\":\"int256\"}],\"name\":\"log_named_int\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"val\",\"type\":\"string\"}],\"name\":\"log_named_string\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"val\",\"type\":\"uint256\"}],\"name\":\"log_named_uint\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"name\":\"log_string\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"log_uint\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"logs\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"IS_TEST\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"asserter\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"claim\",\"type\":\"bytes\"}],\"name\":\"_allocateBondAndAssertTruth\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"assertionId\",\"type\":\"bytes32\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"_commonPredictionMarketSetUp\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"_commonSetup\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"mockAssertingCaller\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"assertionId\",\"type\":\"bytes32\"}],\"name\":\"_mockGetAssertionAssertingCaller\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"excludeArtifacts\",\"outputs\":[{\"internalType\":\"string[]\",\"name\":\"excludedArtifacts_\",\"type\":\"string[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"excludeContracts\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"excludedContracts_\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"excludeSenders\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"excludedSenders_\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"failed\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"predictionMarket\",\"outputs\":[{\"internalType\":\"contract PredictionMarket\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"setUp\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"targetArtifactSelectors\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"},{\"internalType\":\"bytes4[]\",\"name\":\"selectors\",\"type\":\"bytes4[]\"}],\"internalType\":\"struct StdInvariant.FuzzSelector[]\",\"name\":\"targetedArtifactSelectors_\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"targetArtifacts\",\"outputs\":[{\"internalType\":\"string[]\",\"name\":\"targetedArtifacts_\",\"type\":\"string[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"targetContracts\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"targetedContracts_\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"targetInterfaces\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"},{\"internalType\":\"string[]\",\"name\":\"artifacts\",\"type\":\"string[]\"}],\"internalType\":\"struct StdInvariant.FuzzInterface[]\",\"name\":\"targetedInterfaces_\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"targetSelectors\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"},{\"internalType\":\"bytes4[]\",\"name\":\"selectors\",\"type\":\"bytes4[]\"}],\"internalType\":\"struct StdInvariant.FuzzSelector[]\",\"name\":\"targetedSelectors_\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"targetSenders\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"targetedSenders_\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"test_AssertionWithCorrectDispute\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"test_ResolveMarketAfterCorrectDispute\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"test_ResolveMarketNoDispute\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"test_ResolveMarketWithWrongDispute\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"test/PredictionMarket.Resolve.t.sol\":\"PredictionMarketResolveTest\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@across-protocol/=node_modules/@across-protocol/\",\":@ensdomains/=node_modules/@ensdomains/\",\":@eth-optimism/=node_modules/@across-protocol/contracts/node_modules/@eth-optimism/\",\":@gnosis.pm/=node_modules/@gnosis.pm/\",\":@maticnetwork/=node_modules/@maticnetwork/\",\":@openzeppelin/=node_modules/@openzeppelin/\",\":@uma/=node_modules/@uma/\",\":@uniswap/=node_modules/@uniswap/\",\":base64-sol/=node_modules/base64-sol/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":eth-gas-reporter/=node_modules/eth-gas-reporter/\",\":forge-std/=lib/forge-std/src/\",\":hardhat-deploy/=node_modules/hardhat-deploy/\",\":hardhat/=node_modules/hardhat/\"]},\"sources\":{\"lib/forge-std/lib/ds-test/src/test.sol\":{\"keccak256\":\"0x8758531bbac3972efcf1fa46383dbe1d276406fe527bc7abb2f236486278e83b\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://1f64264d61506847acf8761e84aff690cebe830958eac00bac7924d8be569240\",\"dweb:/ipfs/QmSekDJvJ82MZAmr63n7YvfLzQ7gS4NLSHPmHL3GN3rw8k\"]},\"lib/forge-std/src/Base.sol\":{\"keccak256\":\"0x4ff1a785311017d1eedb1b4737956fa383067ad34eb439abfec1d989754dde1c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f553622969b9fdb930246704a4c10dfaee6b1a4468c142fa7eb9dc292a438224\",\"dweb:/ipfs/QmcxqHnqdQsMVtgsfH9VNLmZ3g7GhgNagfq7yvNCDcCHFK\"]},\"lib/forge-std/src/StdAssertions.sol\":{\"keccak256\":\"0x1a0dee4d8b2c81e9318e87dd85ef009467ebf7dba6575530d1fce94d34dbae60\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ddd790c86ddde1013d1f7a552a80168eacf2e9244077f96799180644ad523a5b\",\"dweb:/ipfs/QmYinBFt9uEVFXP9ytT9CDoNpzWieQVgLWRFRNiypMzJaL\"]},\"lib/forge-std/src/StdChains.sol\":{\"keccak256\":\"0xdbb593a36db1fde25c398f38312cfedc5b39c4bad1c65c2f58b7515c4dd76be8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://afc49471af92a1fd12686e2757ad0cbeb5bfe3cc95b8b6b5a5a91af83a8bcfd1\",\"dweb:/ipfs/QmcAQ5WesfLBUChNGuRMGQsDYf44q35Ln7Xb3jmyQgdESU\"]},\"lib/forge-std/src/StdCheats.sol\":{\"keccak256\":\"0xa0bac08b3d12d561fadf74c83c69f3ee54fe40e0c7766611766f6db70c202373\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://292f1e61a3a60f9f4075d0b567f5123d159b0541b7787e4523597ab57331eb08\",\"dweb:/ipfs/QmatxDNPiYVtLap2nn4Hp3AxzkSzkdAQDirbc5QKCDfde5\"]},\"lib/forge-std/src/StdError.sol\":{\"keccak256\":\"0xbf477b11a42d7611696956546bcfaa29317d1166bf65e402344599c05943fc77\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bc2e117d1135e030862b96a6526a43feb38d396cc79857f1fb696d4eff0e5fd6\",\"dweb:/ipfs/QmdSuQ5RrQudTLsNmWXGEeVJX8gR5U9XPm6m4dwwuQnJrj\"]},\"lib/forge-std/src/StdInvariant.sol\":{\"keccak256\":\"0x67299bfacd77fddfa2a67b8e2b901e0e333618a4975fb94850b07475e51f6de6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1b61121d310f4053ce344b345b4a9ccf43b059daf9097ec2647f594beaca896d\",\"dweb:/ipfs/QmZUCoTtXBM9zfAZVbj2dFPPnKaV1CSZzXE7zictyg3Gfz\"]},\"lib/forge-std/src/StdJson.sol\":{\"keccak256\":\"0x8f914dbd016bd0e318fe2b8bd556fbc8256c7cddc24e3e4fcb9f3c1c1935592d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://19e704df493dde38323303b07d18cadfeb4dcadf1ddc2301add4aea9474fbb5e\",\"dweb:/ipfs/QmZasuGiLK8LHwWtvpqEBxUR6QFY6GdzLMTJ9q7CMf8PNZ\"]},\"lib/forge-std/src/StdMath.sol\":{\"keccak256\":\"0xd90ad4fd8aeaeb8929964e686e769fdedd5eded3fc3815df194a0ab9f91a3fb2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7919b70f636c7b805223992f28ad1ad0145d6c1385b5931a3589aface5fe6c92\",\"dweb:/ipfs/QmY7FRaULwoGgFteF8GawjQJRfasNgpWnU2aiMsFrYpuTC\"]},\"lib/forge-std/src/StdStorage.sol\":{\"keccak256\":\"0x4298f3f4cedaedb07029820b1daad2c03af45379559392201f7bf3ec71105811\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6e062f36d8d1ae3c383ef8975757926eaa9c4de3a92b5f1fe2d12748bcd8db32\",\"dweb:/ipfs/QmcWkv3ia5Ew4DZNcudMNSTNXZ3W2QiXTZunRd44e9BT8z\"]},\"lib/forge-std/src/StdStyle.sol\":{\"keccak256\":\"0x43e2a8a9b9c2574dabe74f11adf6f782df218f463540e3b5b563609fe108597d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://51363ca97404cf4128e1141428949768c31929e75e014b02c85e887fbbb4f1b8\",\"dweb:/ipfs/QmVhtbQc2fU4rRmbcfBtz34mAgG4BAZBsbna1Ca4SkoPsK\"]},\"lib/forge-std/src/StdUtils.sol\":{\"keccak256\":\"0x8758c42ba9d9e46868b796e2330ac239006ede07bd438a4b36dd6f2c47d27dc1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://11f5752e0187b1e3631b875efdbe05d45929d05f1c1717105a9115d0a6628140\",\"dweb:/ipfs/QmUKkx9jfsUvjyYBw45RvrW1hTFXDXi2Jv5tbHP86mnzpi\"]},\"lib/forge-std/src/Test.sol\":{\"keccak256\":\"0x39b1729d5868c8e94ab8af16751eb500a17fe3870dc627d2b7ddcd5df18d7ad0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1568c82aff125cc4b0fc168be9d67ac313f469a3c7405c5493caecaaaecfb765\",\"dweb:/ipfs/QmXByuZReJsdu1jDcxj1FcmpcUnzoBcqybn9kWgDAECWri\"]},\"lib/forge-std/src/Vm.sol\":{\"keccak256\":\"0x039a59e16791fb3595615f1ad19d614cdb1f1e567ed3bfc1a35d97177387be68\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://da3d0bfe99104664a3a053665578ad1277ea79e0704519d3b7ff98b3b7054155\",\"dweb:/ipfs/QmesLHpsvzvC6DoTFLdgNibRU5sfeNggYtyaRfA64t2PsD\"]},\"lib/forge-std/src/console.sol\":{\"keccak256\":\"0x91d5413c2434ca58fd278b6e1e79fd98d10c83931cc2596a6038eee4daeb34ba\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://91ccea707361e48b9b7a161fe81f496b9932bc471e9c4e4e1e9c283f2453cc70\",\"dweb:/ipfs/QmcB66sZhQ6Kz7MUHcLE78YXRUZxoZnnxZjN6yATsbB2ec\"]},\"lib/forge-std/src/console2.sol\":{\"keccak256\":\"0x954646445d1014c3cd85c7918f5e7adeeca5ee44b68c00bafa237e597a4e35ea\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://516fa3be52da4763147175bfba4be0aa011fadbb0c1afb01f97265bd4cee7973\",\"dweb:/ipfs/QmdixAyMJefx7qePChgdxcBH5MxhmN7vsqPuPLx3CgrVmF\"]},\"lib/forge-std/src/interfaces/IMulticall3.sol\":{\"keccak256\":\"0x7aac1389150499a922d1f9ef5749c908cef127cb2075b92fa17e9cb611263d0a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d95ebb7c7c463e08ebc12dab639945752fb2480acfc6e86da32f72732a7fd0c0\",\"dweb:/ipfs/QmNXK8P8oPWwajsQHvAHw3JPyQidPLCGQN3hWu1Lk6PBL2\"]},\"lib/forge-std/src/safeconsole.sol\":{\"keccak256\":\"0xbaf41fdc6c54297e7cd8250e48b0f20eaac918e342a1028cef3f9a52ac086381\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a500ad81dea226f9910e6b50f99a9ff930105e393a692cbfb2185e4cdb4424ae\",\"dweb:/ipfs/QmVbUQpXNMmMWRiy4FvBNczzq46BMGfUoBikvSHNiCxVTq\"]},\"node_modules/@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0x24e0364e503a9bbde94c715d26573a76f14cd2a202d45f96f52134ab806b67b9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e12cbaa7378fd9b62280e4e1d164bedcb4399ce238f5f98fc0eefb7e50577981\",\"dweb:/ipfs/QmXRoFGUgfsaRkoPT5bxNMtSayKTQ8GZATLPXf69HcRA51\"]},\"node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0xdadd41acb749920eccf40aeaa8d291adf9751399a7343561bad13e7a8d99be0b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://12af4ac016f9fdf3be5d15824f4292272aa11f6b2e0192a0f7320f5ad49bbbf0\",\"dweb:/ipfs/QmRXMpdqCgA3TYuYxBodqs5p9jGbnMW6xa2gvjppvq4TWk\"]},\"node_modules/@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xbbc8ac883ac3c0078ce5ad3e288fbb3ffcc8a30c3a98c0fda0114d64fc44fca2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87a7a5d2f6f63f84598af02b8c50ca2df2631cb8ba2453e8d95fcb17e4be9824\",\"dweb:/ipfs/QmR76hqtAcRqoFj33tmNjcWTLrgNsAaakYwnKZ8zoJtKei\"]},\"node_modules/@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x8de418a5503946cabe331f35fe242d3201a73f67f77aaeb7110acb1f30423aca\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a376d3dda2cb70536c0a45c208b29b34ac560c4cb4f513a42079f96ba47d2dd\",\"dweb:/ipfs/QmZQg6gn1sUpM8wHzwNvSnihumUCAhxD119MpXeKp8B9s8\"]},\"node_modules/@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0xc3d946432c0ddbb1f846a0d3985be71299df331b91d06732152117f62f0be2b5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4632c341a06ba5c079b51ca5a915efab4e6ab57735b37839b3e8365ff806a43e\",\"dweb:/ipfs/QmTHT3xHYed2wajEoA5qu7ii2BxLpPhQZHwAhtLK5Z7ANK\"]},\"node_modules/@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0x2ccf9d2313a313d41a791505f2b5abfdc62191b5d4334f7f7a82691c088a1c87\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b3a57d0854b2fdce6ebff933a48dca2445643d1eccfc27f00292e937f26c6a58\",\"dweb:/ipfs/QmW45rZooS9TqR4YXUbjRbtf2Bpb5ouSarBvfW1LdGprvV\"]},\"node_modules/@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"node_modules/@openzeppelin/contracts/utils/math/SafeMath.sol\":{\"keccak256\":\"0xa2f576be637946f767aa56601c26d717f48a0aff44f82e46f13807eea1009a21\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://973868f808e88e21a1a0a01d4839314515ee337ad096286c88e41b74dcc11fc2\",\"dweb:/ipfs/QmfYuZxRfx2J2xdk4EXN7jKg4bUYEMTaYk9BAw9Bqn4o2Y\"]},\"node_modules/@openzeppelin/contracts/utils/math/SignedSafeMath.sol\":{\"keccak256\":\"0x62f53f262fabbbc6d8ab49488d8fce36370351aff2b8d3898d499d68995a71c2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://efd599513c2f313a3f5e9536beb2b80a0d2b3dd34202c174a707d81b7dc751ce\",\"dweb:/ipfs/QmdDiENVFSyWjfFskNLnViMH77DHg3oDthkSZk7dMzNNKB\"]},\"node_modules/@uma/core/contracts/common/implementation/AddressWhitelist.sol\":{\"keccak256\":\"0xc1f20b925f9d37230aaf7bbee536f9a9b08e4772864f0a243ff1b69b54710fee\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://55bc6782bd269463214dbafa8702b2ff33910fd4a51ab24d775aabb15e278bcc\",\"dweb:/ipfs/QmV41DnGByGBtg8gk7MG6Nr3xYo5R5varZ8cewywdKNATQ\"]},\"node_modules/@uma/core/contracts/common/implementation/AncillaryData.sol\":{\"keccak256\":\"0x8ff33ac32d3e6de25de9e0ac2c0ff9a621f187fa97e9ee84092b327471baa3ce\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://0bbaed49756e8cf7ef405e132f441cd7a735ac6186a200b0179147e7d137b74a\",\"dweb:/ipfs/QmeSBJX5a61LZPxbkUKS2NF4LSxemgDwjD65fCAmyP7PX2\"]},\"node_modules/@uma/core/contracts/common/implementation/ExpandedERC20.sol\":{\"keccak256\":\"0x8201459d3f78a1f97da7c421f2fbb859924d4facfc5fc235ba65d85bf12b2229\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://990c055523abe059c0e3e9dc0d631b17db960899dbfcfb2c562bc1ed9de8f140\",\"dweb:/ipfs/QmNgQP68bBrZvP2Rs4TdpESS3LFxqGgtTELZ1wm5mZqh4K\"]},\"node_modules/@uma/core/contracts/common/implementation/FixedPoint.sol\":{\"keccak256\":\"0x996b97cc4fa5da4064e3aee500edc6972485d59a9334ceec81155e2c2f484dae\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://8d7c028926dc2b27e7dc103363dca8a43f60b3351f4a14bcb702660f95c68663\",\"dweb:/ipfs/QmXz4ieFjP5RxJ35F8GbPryYEGvFmxc4Gqx8EK7N57ixzT\"]},\"node_modules/@uma/core/contracts/common/implementation/Lockable.sol\":{\"keccak256\":\"0x41d78fcce54598ad5f26bc0b778c0f4fedbd836401625e49e736979f69a87ef0\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://4ce111bb50441ef5125e7d42284f6debbc17fd589515d7b8cede7e9d1d5f0ede\",\"dweb:/ipfs/QmaXiXACWVEDDHoCHNXdVBoNpf8QNHkUZ1kf5MfbxfL6jj\"]},\"node_modules/@uma/core/contracts/common/implementation/MultiCaller.sol\":{\"keccak256\":\"0x9f6afe5bafc5e16fe8d63010a740ec3a88a9f00a7236ea7e5b039a2f50eb346e\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://a971572a4a9ed32e5ec15ac384af593d9499778f6ec593dbdba67d44ced4c7d8\",\"dweb:/ipfs/QmbdpfhhnUyoHWe7TPFBZxT6R6zyxJEDcGBNwDt5ncweRv\"]},\"node_modules/@uma/core/contracts/common/implementation/MultiRole.sol\":{\"keccak256\":\"0x134c5a2f847832705be631f2b4eb2a3e23a91a2f0e63560abb481e85eeebfae6\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://f1267c6ad560d1eb896575919ecca13759bf50bb82d1215e03fc1f0424ec37a6\",\"dweb:/ipfs/QmXewGxpSmSMGYmT6ZUyxCVzy2cybxicbnyCn8w87m5mo3\"]},\"node_modules/@uma/core/contracts/common/implementation/Testable.sol\":{\"keccak256\":\"0x0254b45747293bb800373a58d123969adec0428f7be79dc941cab10fcad09918\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://537d694e3753596f507d071f283be9caeaad0010c444c9c9955d729affeb4907\",\"dweb:/ipfs/QmZ1WfVTBao11QaN6aygMhnt45UjRq77ZwfKPFmHiVSdaJ\"]},\"node_modules/@uma/core/contracts/common/implementation/TestnetERC20.sol\":{\"keccak256\":\"0xea7c79b7d7b55b6d88d878ac44837c691641e727511f82adbfb399f5cbe77319\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://6acd45d4b58f8e150eb2dcc0d8314b38766b31671ce0aa6e1055a2f8ba93db80\",\"dweb:/ipfs/QmdsjVSVsXCidcbNeT5AzEM76jMKJ53DUD7zEcFetfdE6P\"]},\"node_modules/@uma/core/contracts/common/implementation/Timer.sol\":{\"keccak256\":\"0x9e0dd7389718bd5d1da910273a6f4cee98ee22bfc0c92bde0f0955c0e23adb5e\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://7ddac8d3cb76f8811156a11a7702d7c05b15a0f18c22b5abdc318723193f9266\",\"dweb:/ipfs/QmPxL7AU8NkURJaZ6WxXNcw88wGMSoPX4jbt7SMdPJqtYv\"]},\"node_modules/@uma/core/contracts/common/implementation/Withdrawable.sol\":{\"keccak256\":\"0x0cffa58907ae0c4b2948f225723e5f4346276c0f1484452fb5c78fc90b79c630\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://e832b3f09aa18ef687a34ffc754f9e9d1200c63da8f1550e46111a44a2b2433d\",\"dweb:/ipfs/QmdqUvbxXtea2w3msKp9PRAhxs3YsJCWX31bWRHSuq54Vr\"]},\"node_modules/@uma/core/contracts/common/interfaces/AddressWhitelistInterface.sol\":{\"keccak256\":\"0x22fb8588dff1d5cff76a28111d6c9b190765d99facd93c8ff3b54771f245c0d8\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://5ecd993f00de290a3c7bf21da23a9439cf2ccb22028316df92b79780ac8aa533\",\"dweb:/ipfs/QmTZ7x7U4EEzTacqapzSdFs2np5WNsqm4XeUBqzQxxDJei\"]},\"node_modules/@uma/core/contracts/common/interfaces/ExpandedIERC20.sol\":{\"keccak256\":\"0xb8252039cba45f1c19cd677f150a9823a5d6e1845cad90e3041d97c96f273c26\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://95106656c95e12c30a2a4c482a859df6df55c3b56bb9f7835eb5c685ca3175d3\",\"dweb:/ipfs/QmcuJoX7T53vTCDcQK8WcCJdT1LzHS35vPmSVfg1DG32cd\"]},\"node_modules/@uma/core/contracts/data-verification-mechanism/implementation/Constants.sol\":{\"keccak256\":\"0xe40957105a9240c6bcb9753fd0011fe9f382c437cd6771c57bf7a96f8ceb9c84\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://cbf0d25e841b1f5c4022d09fb29220cb428139443cb29c4ab8dbfff71dffcc05\",\"dweb:/ipfs/QmSVVr5wH1tZi6WmKyuy1K8yS6JN4DeK5kWaZpPKtXiqkK\"]},\"node_modules/@uma/core/contracts/data-verification-mechanism/implementation/Finder.sol\":{\"keccak256\":\"0x0dfa6eda28743755f159de563ee2350b7edf81e4173e6bc3e35da7ad22c54dcb\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://5fecfe0b81cb3437fde85798730bdcc9e9b124e4c22a7acb146fcc4b86f77702\",\"dweb:/ipfs/QmTCe8RfRihRXP9cuhM3Kgn36kR3JosoLzD1JQ3hWjdf65\"]},\"node_modules/@uma/core/contracts/data-verification-mechanism/implementation/IdentifierWhitelist.sol\":{\"keccak256\":\"0x77ad704fca2d76e187bbc72ed48323cf5b483dbee6c86afe023103d6fc7129eb\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://6c8a7765d146c7133c5028b40b4a7a060a030425299d8d6622a06af5c44d4aa8\",\"dweb:/ipfs/QmU5TDtc3XHDgp25WxFmKbYGycY7NsT5EtHJ6DH5Q2YWgt\"]},\"node_modules/@uma/core/contracts/data-verification-mechanism/implementation/Store.sol\":{\"keccak256\":\"0x6a2b6982a9bbe9860c73c6c542e2021050b1127b28f887c329f36cc71c20dad2\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://977406313978d803c0e5327f52c594f044c231fa3e9e6ab265ce19e457a06678\",\"dweb:/ipfs/QmY7en5NPTBvpriHZMKiWgzG9T3hNopR11d7VsBBPZaaVD\"]},\"node_modules/@uma/core/contracts/data-verification-mechanism/interfaces/FinderInterface.sol\":{\"keccak256\":\"0x9166fbfe08e954eb86d33c114fcde7ce4fd0dda5d9d28b31210582bfc769fa86\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://e611e12bcaaebfdf65b67c566ff1d34708e757f01a445bd87c55862e89383b81\",\"dweb:/ipfs/QmYNSq5oopTShdS6j4VWKqoLxmQSRKmWebCxw6K4LfmKrf\"]},\"node_modules/@uma/core/contracts/data-verification-mechanism/interfaces/IdentifierWhitelistInterface.sol\":{\"keccak256\":\"0x9ae86a30dd1a8c03fb2c6d27be570bb30c4c0b13ac63cde8620b7e4b51d88dc9\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://a71d2aff48e075ecab56a9c9767775d1d77e04ec9191fed124e71003220549e3\",\"dweb:/ipfs/QmYPWsZXro6fzqpZY6UxQ5X8znEXfLp2sun8oXzdz8bTyc\"]},\"node_modules/@uma/core/contracts/data-verification-mechanism/interfaces/OracleAncillaryInterface.sol\":{\"keccak256\":\"0xd58b41fe1e389f7871db7c04f2c05c1aac1d0455bbc521534da81fd657016a1f\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://cc532e9c550bb1bba0daa33fda748590cd06ce94a9566fe65dac04e7d40977bc\",\"dweb:/ipfs/QmZKvfRW2LJFt5MWZbKuU9ujkXnS2hkPUJVj8wwJWcuZGX\"]},\"node_modules/@uma/core/contracts/data-verification-mechanism/interfaces/StoreInterface.sol\":{\"keccak256\":\"0xbb73671684309c91ad5ef3da1474051d03f2e7d5882bed7f5c4317e5d4c768df\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://32386544d3119fd0187a8c4e8b01c739f508ab863faa04345cabc2544081f9e8\",\"dweb:/ipfs/QmYszDURs1x75rsejZkGt9zCkASXnJtufbNsL3XHe2eJPQ\"]},\"node_modules/@uma/core/contracts/data-verification-mechanism/test/MockOracleAncillary.sol\":{\"keccak256\":\"0x5ee630bcd6467ad0077f2d61baf77c59b7cf581a2c00fe816910d98b013ad0aa\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://f525c98da45397f68920ef61b8f9ac512690cb46f4192b4a50edfd6b49ad5199\",\"dweb:/ipfs/Qma2mSJu2XHXbzhkwbyRmoJcdnwE3w2N8pTiBkt9u9dwzd\"]},\"node_modules/@uma/core/contracts/optimistic-oracle-v3/implementation/ClaimData.sol\":{\"keccak256\":\"0x6e887a70326e5ede4a8c5002d4123a8c77b477ce58cf92533c38cd3dc6142cb5\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://bdafa7c59d0825da944c46664bddb1203bb4158dd0e1ddd6bbdeb276e66be0f8\",\"dweb:/ipfs/QmVb496JWqBib55HX6G3iPkAMv64Bj2UDegeVEYiNcYuDZ\"]},\"node_modules/@uma/core/contracts/optimistic-oracle-v3/implementation/OptimisticOracleV3.sol\":{\"keccak256\":\"0xeba5082c48c3d891f2422b8c0d1d5d6552ab47b5d538db7ff05ffb2f3db25ffc\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://d818630e1c094792613a0539aa0a7677ca8fa92a5308eaf4ff7cf8ea8a4c547e\",\"dweb:/ipfs/QmSM78A3afY6osh4VAmyJX2E4Qyg4qcY1KwY5uFnSK4Yia\"]},\"node_modules/@uma/core/contracts/optimistic-oracle-v3/implementation/test/AssertingCallerTest.sol\":{\"keccak256\":\"0x212dafde3707bc594b103f3baef2612e521d5cced481d81938938cc5c6fc4068\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://21e87397b59f9529a3e9ed9ef821f83f1a73bf685c2ec37dc70a2fbfc79aa441\",\"dweb:/ipfs/QmRmBzN3ztihHgeHzir1tz2MGsCrLM2Krc7ozQ4MiQe8jt\"]},\"node_modules/@uma/core/contracts/optimistic-oracle-v3/implementation/test/OptimisticOracleV3Test.sol\":{\"keccak256\":\"0xdb817afdd3c786d21ac8dede8e97452905d0ba84f444949cf6f92f77e8c2a38e\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://f88474c7ac47ad72196818aa1d77d3b4bccac18ec77ae008ed53ec48c18f4fee\",\"dweb:/ipfs/QmPxsszotngGGDBv6vCE1kANMtgX8fLD6Xv7YwtZsUKqJQ\"]},\"node_modules/@uma/core/contracts/optimistic-oracle-v3/interfaces/EscalationManagerInterface.sol\":{\"keccak256\":\"0xce31adf62ae47468bab181bf1137b05e8ac0a003f019c343ac137a76ea32efc7\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://eb1b93b648adf4130fdfe7a62d817cda0519e7760a50b90f16a3c46cee4c0967\",\"dweb:/ipfs/QmNPD4TRAm9kqqQDKQabqZgaorkJNov96iLgxsm5HRTSZN\"]},\"node_modules/@uma/core/contracts/optimistic-oracle-v3/interfaces/OptimisticOracleV3CallbackRecipientInterface.sol\":{\"keccak256\":\"0x79f90bc84ed5d394380e99f0a5d1b219abd9016bc3a02fad0099014af08af03e\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://dc1b7b847eb711750bc76ab45a13294b05fc09e361294a6bdffb90cb15f50b63\",\"dweb:/ipfs/QmQSs2R7mmGojGdNkqP75Vf7LajRkfJ1oGuYAUCHYGmPEQ\"]},\"node_modules/@uma/core/contracts/optimistic-oracle-v3/interfaces/OptimisticOracleV3Interface.sol\":{\"keccak256\":\"0xf31322bfd64854f0bfa92051d6ec711c1eed15d8042f394f5c24c05378218367\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://535bc2a6060e86a49524fd3c0062afcf83077530cefb3c1b8179b832f03ca81e\",\"dweb:/ipfs/QmQZhqn6oUiebSWEKbqcmiMGkqAb8B59WsRAyFU8WY84ct\"]},\"src/PredictionMarket.sol\":{\"keccak256\":\"0x3a9ee7e920ec40bcec82853152740bd9dc759c5f165656df182a7fe28a404cfa\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://c515e5a01952042a85356af0c757c5805b9736eeb8772ded9b0f445064bfac7f\",\"dweb:/ipfs/QmTCVgaW4zykmFMvc8wbKB1VWn9JPhp4yWDqAhpfcWghWd\"]},\"test/PredictionMarket.Common.sol\":{\"keccak256\":\"0x5da478ffeb40a1a996f3224ad13856165ccb53a2bbac1a48b17b0f3c13994dbd\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://884b3e87a8279fd030ecd98bde5358f30d1ec8d13fe0574225bf6c2c501491bc\",\"dweb:/ipfs/QmbB93pCwoiX4gCjQkA1RtZkb7Ai28Dq8nPMkDfBCzy9dw\"]},\"test/PredictionMarket.Resolve.t.sol\":{\"keccak256\":\"0x2535c6668fa41e8ef25dda7725580703384f08b49f36572fc8fce1275fc7da42\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://74b407e78e111073a39b534bbe7d42eba4e046a75b0cb6eb23bb3f33508f0f21\",\"dweb:/ipfs/QmVkWWbHSXVMPn2HNxu8RqtferdaERrK534HeyVDBfKryL\"]},\"test/common/CommonOptimisticOracleV3Test.sol\":{\"keccak256\":\"0xef9f5c2c5c37257681e697148b5f724bc9a683e801be4803c555625edee60d5b\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://35278764f5977e9f0161420f35681121958d409f5fe2a1299b1c7ad930e27467\",\"dweb:/ipfs/QmcNrmrzpGYyRzLbkKnrj8HBVH8qLeZSrcRiRDHbiqCoPe\"]},\"test/fixtures/common/CommonTestBase.sol\":{\"keccak256\":\"0xef45684397f61b92c77ef51e8a23579bca93a332c784e5b2f4e2a3c9343f9b50\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://8a35ad0d9814f198b93e72031517350fc230a2d4ad20fa05a805bd4abc4adc75\",\"dweb:/ipfs/QmbNJoPfRsFstJV5S1jMCzMwCN7qvFzc631PSSMPnQnBno\"]},\"test/fixtures/common/TestAddress.sol\":{\"keccak256\":\"0x30f53e79e844909966fa5b92246c74d8585ff5d540f099c7a99461cc6ebf9d99\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://8e58f9210e67b7efdb5633d9d67834ec5b52c5b48de0e0388b0ecd8f5853227b\",\"dweb:/ipfs/QmZaTBTkBx3QYPBzhRMb7nTdhfZCctwmrAVL9hST6Xw3bn\"]},\"test/fixtures/common/TimerFixture.sol\":{\"keccak256\":\"0x9f0b735cb4d2d494d670be9875082c9e7944e4e9e1989a99524b9dffbddeb9cb\",\"urls\":[\"bzz-raw://a2e53b878c9f8bdc88cb91cfb1b1631d1fec6d7c3009a1954e3215989c05d937\",\"dweb:/ipfs/QmRSi291avEMxygy47inL8VXCyJ4PSgqvx9iRZwbo19rnx\"]},\"test/fixtures/dvm/BaseDvmFixture.sol\":{\"keccak256\":\"0x84d096fe2fe9c507a772831db59b3b4ad023c791ca5334c4c6ac29c03854d56a\",\"urls\":[\"bzz-raw://bbcf3381ac7b375c93d734d9591a6cb1fb0ba8445e3d141e36d809b97e8e46ff\",\"dweb:/ipfs/QmczTUkTzjcFM9kCHbcKpK6gdxChsABaFBSz8tsFkrU4fZ\"]},\"test/fixtures/dvm/MockDvmFixture.sol\":{\"keccak256\":\"0xde8cfa220b09bb8576733acff3ff12989753698743b25b3b51ccdb84a009c5b1\",\"urls\":[\"bzz-raw://b436588048b11b68fa27a4bab1e2623ee0a3102d46e28d67ea8fae4989661512\",\"dweb:/ipfs/QmZU56VYo9cpyBNv8hLadNJAj4jNWFxQJJQgV3NpPcTgd2\"]},\"test/fixtures/optimistic-oracle-v3/OptimisticOracleV3Fixture.sol\":{\"keccak256\":\"0x4dbc410556ebf8c68d4053e40df6ced58c3ad2bcd3c7b07a38d6e45db64f6a9f\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://e1c1f054e8fe6207a132b2c101f3a103cc2527f2edfc52fcec465f1f45e8bdd3\",\"dweb:/ipfs/QmYqFoT2H2hXGpqFs6yBRCbJ8tyBwHekWvqFFsKvfSwKLf\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.16+commit.07a7930e"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "assertingCaller",
              "type": "address",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "AssertingCallerSet",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "assertionId",
              "type": "bytes32",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "caller",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "disputer",
              "type": "address",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "AssertionDisputed",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "assertionId",
              "type": "bytes32",
              "indexed": true
            },
            {
              "internalType": "bytes32",
              "name": "domainId",
              "type": "bytes32",
              "indexed": false
            },
            {
              "internalType": "bytes",
              "name": "claim",
              "type": "bytes",
              "indexed": false
            },
            {
              "internalType": "address",
              "name": "asserter",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "callbackRecipient",
              "type": "address",
              "indexed": false
            },
            {
              "internalType": "address",
              "name": "escalationManager",
              "type": "address",
              "indexed": false
            },
            {
              "internalType": "address",
              "name": "caller",
              "type": "address",
              "indexed": false
            },
            {
              "internalType": "uint64",
              "name": "expirationTime",
              "type": "uint64",
              "indexed": false
            },
            {
              "internalType": "contract IERC20",
              "name": "currency",
              "type": "address",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "bond",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "bytes32",
              "name": "identifier",
              "type": "bytes32",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "AssertionMade",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "assertionId",
              "type": "bytes32",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "bondRecipient",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "bool",
              "name": "disputed",
              "type": "bool",
              "indexed": false
            },
            {
              "internalType": "bool",
              "name": "settlementResolution",
              "type": "bool",
              "indexed": false
            },
            {
              "internalType": "address",
              "name": "settleCaller",
              "type": "address",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "AssertionSettled",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "requester",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "bytes32",
              "name": "identifier",
              "type": "bytes32",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "time",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "bytes",
              "name": "ancillaryData",
              "type": "bytes",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "PriceRequestAdded",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_address",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256[]",
              "name": "val",
              "type": "uint256[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_array",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "int256[]",
              "name": "val",
              "type": "int256[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_array",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address[]",
              "name": "val",
              "type": "address[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_array",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes",
              "name": "",
              "type": "bytes",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_bytes",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "",
              "type": "bytes32",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_bytes32",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "int256",
              "name": "",
              "type": "int256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_int",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "address",
              "name": "val",
              "type": "address",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_address",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "uint256[]",
              "name": "val",
              "type": "uint256[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_array",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "int256[]",
              "name": "val",
              "type": "int256[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_array",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "address[]",
              "name": "val",
              "type": "address[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_array",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "bytes",
              "name": "val",
              "type": "bytes",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_bytes",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "bytes32",
              "name": "val",
              "type": "bytes32",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_bytes32",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "int256",
              "name": "val",
              "type": "int256",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "decimals",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_decimal_int",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "val",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "decimals",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_decimal_uint",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "int256",
              "name": "val",
              "type": "int256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_int",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "string",
              "name": "val",
              "type": "string",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_string",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "val",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_uint",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_string",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_uint",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes",
              "name": "",
              "type": "bytes",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "logs",
          "anonymous": false
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "IS_TEST",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "asserter",
              "type": "address"
            },
            {
              "internalType": "bytes",
              "name": "claim",
              "type": "bytes"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "_allocateBondAndAssertTruth",
          "outputs": [
            {
              "internalType": "bytes32",
              "name": "assertionId",
              "type": "bytes32"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "_commonPredictionMarketSetUp"
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "_commonSetup"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "mockAssertingCaller",
              "type": "address"
            },
            {
              "internalType": "bytes32",
              "name": "assertionId",
              "type": "bytes32"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "_mockGetAssertionAssertingCaller"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "excludeArtifacts",
          "outputs": [
            {
              "internalType": "string[]",
              "name": "excludedArtifacts_",
              "type": "string[]"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "excludeContracts",
          "outputs": [
            {
              "internalType": "address[]",
              "name": "excludedContracts_",
              "type": "address[]"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "excludeSenders",
          "outputs": [
            {
              "internalType": "address[]",
              "name": "excludedSenders_",
              "type": "address[]"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "failed",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "predictionMarket",
          "outputs": [
            {
              "internalType": "contract PredictionMarket",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setUp"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "targetArtifactSelectors",
          "outputs": [
            {
              "internalType": "struct StdInvariant.FuzzSelector[]",
              "name": "targetedArtifactSelectors_",
              "type": "tuple[]",
              "components": [
                {
                  "internalType": "address",
                  "name": "addr",
                  "type": "address"
                },
                {
                  "internalType": "bytes4[]",
                  "name": "selectors",
                  "type": "bytes4[]"
                }
              ]
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "targetArtifacts",
          "outputs": [
            {
              "internalType": "string[]",
              "name": "targetedArtifacts_",
              "type": "string[]"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "targetContracts",
          "outputs": [
            {
              "internalType": "address[]",
              "name": "targetedContracts_",
              "type": "address[]"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "targetInterfaces",
          "outputs": [
            {
              "internalType": "struct StdInvariant.FuzzInterface[]",
              "name": "targetedInterfaces_",
              "type": "tuple[]",
              "components": [
                {
                  "internalType": "address",
                  "name": "addr",
                  "type": "address"
                },
                {
                  "internalType": "string[]",
                  "name": "artifacts",
                  "type": "string[]"
                }
              ]
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "targetSelectors",
          "outputs": [
            {
              "internalType": "struct StdInvariant.FuzzSelector[]",
              "name": "targetedSelectors_",
              "type": "tuple[]",
              "components": [
                {
                  "internalType": "address",
                  "name": "addr",
                  "type": "address"
                },
                {
                  "internalType": "bytes4[]",
                  "name": "selectors",
                  "type": "bytes4[]"
                }
              ]
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "targetSenders",
          "outputs": [
            {
              "internalType": "address[]",
              "name": "targetedSenders_",
              "type": "address[]"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "test_AssertionWithCorrectDispute"
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "test_ResolveMarketAfterCorrectDispute"
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "test_ResolveMarketNoDispute"
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "test_ResolveMarketWithWrongDispute"
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {},
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {},
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        "@across-protocol/=node_modules/@across-protocol/",
        "@ensdomains/=node_modules/@ensdomains/",
        "@eth-optimism/=node_modules/@across-protocol/contracts/node_modules/@eth-optimism/",
        "@gnosis.pm/=node_modules/@gnosis.pm/",
        "@maticnetwork/=node_modules/@maticnetwork/",
        "@openzeppelin/=node_modules/@openzeppelin/",
        "@uma/=node_modules/@uma/",
        "@uniswap/=node_modules/@uniswap/",
        "base64-sol/=node_modules/base64-sol/",
        "ds-test/=lib/forge-std/lib/ds-test/src/",
        "eth-gas-reporter/=node_modules/eth-gas-reporter/",
        "forge-std/=lib/forge-std/src/",
        "hardhat-deploy/=node_modules/hardhat-deploy/",
        "hardhat/=node_modules/hardhat/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 200
      },
      "metadata": {
        "bytecodeHash": "ipfs"
      },
      "compilationTarget": {
        "test/PredictionMarket.Resolve.t.sol": "PredictionMarketResolveTest"
      },
      "libraries": {}
    },
    "sources": {
      "lib/forge-std/lib/ds-test/src/test.sol": {
        "keccak256": "0x8758531bbac3972efcf1fa46383dbe1d276406fe527bc7abb2f236486278e83b",
        "urls": [
          "bzz-raw://1f64264d61506847acf8761e84aff690cebe830958eac00bac7924d8be569240",
          "dweb:/ipfs/QmSekDJvJ82MZAmr63n7YvfLzQ7gS4NLSHPmHL3GN3rw8k"
        ],
        "license": "GPL-3.0-or-later"
      },
      "lib/forge-std/src/Base.sol": {
        "keccak256": "0x4ff1a785311017d1eedb1b4737956fa383067ad34eb439abfec1d989754dde1c",
        "urls": [
          "bzz-raw://f553622969b9fdb930246704a4c10dfaee6b1a4468c142fa7eb9dc292a438224",
          "dweb:/ipfs/QmcxqHnqdQsMVtgsfH9VNLmZ3g7GhgNagfq7yvNCDcCHFK"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdAssertions.sol": {
        "keccak256": "0x1a0dee4d8b2c81e9318e87dd85ef009467ebf7dba6575530d1fce94d34dbae60",
        "urls": [
          "bzz-raw://ddd790c86ddde1013d1f7a552a80168eacf2e9244077f96799180644ad523a5b",
          "dweb:/ipfs/QmYinBFt9uEVFXP9ytT9CDoNpzWieQVgLWRFRNiypMzJaL"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdChains.sol": {
        "keccak256": "0xdbb593a36db1fde25c398f38312cfedc5b39c4bad1c65c2f58b7515c4dd76be8",
        "urls": [
          "bzz-raw://afc49471af92a1fd12686e2757ad0cbeb5bfe3cc95b8b6b5a5a91af83a8bcfd1",
          "dweb:/ipfs/QmcAQ5WesfLBUChNGuRMGQsDYf44q35Ln7Xb3jmyQgdESU"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdCheats.sol": {
        "keccak256": "0xa0bac08b3d12d561fadf74c83c69f3ee54fe40e0c7766611766f6db70c202373",
        "urls": [
          "bzz-raw://292f1e61a3a60f9f4075d0b567f5123d159b0541b7787e4523597ab57331eb08",
          "dweb:/ipfs/QmatxDNPiYVtLap2nn4Hp3AxzkSzkdAQDirbc5QKCDfde5"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdError.sol": {
        "keccak256": "0xbf477b11a42d7611696956546bcfaa29317d1166bf65e402344599c05943fc77",
        "urls": [
          "bzz-raw://bc2e117d1135e030862b96a6526a43feb38d396cc79857f1fb696d4eff0e5fd6",
          "dweb:/ipfs/QmdSuQ5RrQudTLsNmWXGEeVJX8gR5U9XPm6m4dwwuQnJrj"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdInvariant.sol": {
        "keccak256": "0x67299bfacd77fddfa2a67b8e2b901e0e333618a4975fb94850b07475e51f6de6",
        "urls": [
          "bzz-raw://1b61121d310f4053ce344b345b4a9ccf43b059daf9097ec2647f594beaca896d",
          "dweb:/ipfs/QmZUCoTtXBM9zfAZVbj2dFPPnKaV1CSZzXE7zictyg3Gfz"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdJson.sol": {
        "keccak256": "0x8f914dbd016bd0e318fe2b8bd556fbc8256c7cddc24e3e4fcb9f3c1c1935592d",
        "urls": [
          "bzz-raw://19e704df493dde38323303b07d18cadfeb4dcadf1ddc2301add4aea9474fbb5e",
          "dweb:/ipfs/QmZasuGiLK8LHwWtvpqEBxUR6QFY6GdzLMTJ9q7CMf8PNZ"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdMath.sol": {
        "keccak256": "0xd90ad4fd8aeaeb8929964e686e769fdedd5eded3fc3815df194a0ab9f91a3fb2",
        "urls": [
          "bzz-raw://7919b70f636c7b805223992f28ad1ad0145d6c1385b5931a3589aface5fe6c92",
          "dweb:/ipfs/QmY7FRaULwoGgFteF8GawjQJRfasNgpWnU2aiMsFrYpuTC"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdStorage.sol": {
        "keccak256": "0x4298f3f4cedaedb07029820b1daad2c03af45379559392201f7bf3ec71105811",
        "urls": [
          "bzz-raw://6e062f36d8d1ae3c383ef8975757926eaa9c4de3a92b5f1fe2d12748bcd8db32",
          "dweb:/ipfs/QmcWkv3ia5Ew4DZNcudMNSTNXZ3W2QiXTZunRd44e9BT8z"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdStyle.sol": {
        "keccak256": "0x43e2a8a9b9c2574dabe74f11adf6f782df218f463540e3b5b563609fe108597d",
        "urls": [
          "bzz-raw://51363ca97404cf4128e1141428949768c31929e75e014b02c85e887fbbb4f1b8",
          "dweb:/ipfs/QmVhtbQc2fU4rRmbcfBtz34mAgG4BAZBsbna1Ca4SkoPsK"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdUtils.sol": {
        "keccak256": "0x8758c42ba9d9e46868b796e2330ac239006ede07bd438a4b36dd6f2c47d27dc1",
        "urls": [
          "bzz-raw://11f5752e0187b1e3631b875efdbe05d45929d05f1c1717105a9115d0a6628140",
          "dweb:/ipfs/QmUKkx9jfsUvjyYBw45RvrW1hTFXDXi2Jv5tbHP86mnzpi"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/Test.sol": {
        "keccak256": "0x39b1729d5868c8e94ab8af16751eb500a17fe3870dc627d2b7ddcd5df18d7ad0",
        "urls": [
          "bzz-raw://1568c82aff125cc4b0fc168be9d67ac313f469a3c7405c5493caecaaaecfb765",
          "dweb:/ipfs/QmXByuZReJsdu1jDcxj1FcmpcUnzoBcqybn9kWgDAECWri"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/Vm.sol": {
        "keccak256": "0x039a59e16791fb3595615f1ad19d614cdb1f1e567ed3bfc1a35d97177387be68",
        "urls": [
          "bzz-raw://da3d0bfe99104664a3a053665578ad1277ea79e0704519d3b7ff98b3b7054155",
          "dweb:/ipfs/QmesLHpsvzvC6DoTFLdgNibRU5sfeNggYtyaRfA64t2PsD"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/console.sol": {
        "keccak256": "0x91d5413c2434ca58fd278b6e1e79fd98d10c83931cc2596a6038eee4daeb34ba",
        "urls": [
          "bzz-raw://91ccea707361e48b9b7a161fe81f496b9932bc471e9c4e4e1e9c283f2453cc70",
          "dweb:/ipfs/QmcB66sZhQ6Kz7MUHcLE78YXRUZxoZnnxZjN6yATsbB2ec"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/console2.sol": {
        "keccak256": "0x954646445d1014c3cd85c7918f5e7adeeca5ee44b68c00bafa237e597a4e35ea",
        "urls": [
          "bzz-raw://516fa3be52da4763147175bfba4be0aa011fadbb0c1afb01f97265bd4cee7973",
          "dweb:/ipfs/QmdixAyMJefx7qePChgdxcBH5MxhmN7vsqPuPLx3CgrVmF"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/interfaces/IMulticall3.sol": {
        "keccak256": "0x7aac1389150499a922d1f9ef5749c908cef127cb2075b92fa17e9cb611263d0a",
        "urls": [
          "bzz-raw://d95ebb7c7c463e08ebc12dab639945752fb2480acfc6e86da32f72732a7fd0c0",
          "dweb:/ipfs/QmNXK8P8oPWwajsQHvAHw3JPyQidPLCGQN3hWu1Lk6PBL2"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/safeconsole.sol": {
        "keccak256": "0xbaf41fdc6c54297e7cd8250e48b0f20eaac918e342a1028cef3f9a52ac086381",
        "urls": [
          "bzz-raw://a500ad81dea226f9910e6b50f99a9ff930105e393a692cbfb2185e4cdb4424ae",
          "dweb:/ipfs/QmVbUQpXNMmMWRiy4FvBNczzq46BMGfUoBikvSHNiCxVTq"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/access/Ownable.sol": {
        "keccak256": "0x24e0364e503a9bbde94c715d26573a76f14cd2a202d45f96f52134ab806b67b9",
        "urls": [
          "bzz-raw://e12cbaa7378fd9b62280e4e1d164bedcb4399ce238f5f98fc0eefb7e50577981",
          "dweb:/ipfs/QmXRoFGUgfsaRkoPT5bxNMtSayKTQ8GZATLPXf69HcRA51"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol": {
        "keccak256": "0xdadd41acb749920eccf40aeaa8d291adf9751399a7343561bad13e7a8d99be0b",
        "urls": [
          "bzz-raw://12af4ac016f9fdf3be5d15824f4292272aa11f6b2e0192a0f7320f5ad49bbbf0",
          "dweb:/ipfs/QmRXMpdqCgA3TYuYxBodqs5p9jGbnMW6xa2gvjppvq4TWk"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/token/ERC20/IERC20.sol": {
        "keccak256": "0xbbc8ac883ac3c0078ce5ad3e288fbb3ffcc8a30c3a98c0fda0114d64fc44fca2",
        "urls": [
          "bzz-raw://87a7a5d2f6f63f84598af02b8c50ca2df2631cb8ba2453e8d95fcb17e4be9824",
          "dweb:/ipfs/QmR76hqtAcRqoFj33tmNjcWTLrgNsAaakYwnKZ8zoJtKei"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
        "keccak256": "0x8de418a5503946cabe331f35fe242d3201a73f67f77aaeb7110acb1f30423aca",
        "urls": [
          "bzz-raw://5a376d3dda2cb70536c0a45c208b29b34ac560c4cb4f513a42079f96ba47d2dd",
          "dweb:/ipfs/QmZQg6gn1sUpM8wHzwNvSnihumUCAhxD119MpXeKp8B9s8"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol": {
        "keccak256": "0xc3d946432c0ddbb1f846a0d3985be71299df331b91d06732152117f62f0be2b5",
        "urls": [
          "bzz-raw://4632c341a06ba5c079b51ca5a915efab4e6ab57735b37839b3e8365ff806a43e",
          "dweb:/ipfs/QmTHT3xHYed2wajEoA5qu7ii2BxLpPhQZHwAhtLK5Z7ANK"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/utils/Address.sol": {
        "keccak256": "0x2ccf9d2313a313d41a791505f2b5abfdc62191b5d4334f7f7a82691c088a1c87",
        "urls": [
          "bzz-raw://b3a57d0854b2fdce6ebff933a48dca2445643d1eccfc27f00292e937f26c6a58",
          "dweb:/ipfs/QmW45rZooS9TqR4YXUbjRbtf2Bpb5ouSarBvfW1LdGprvV"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/utils/Context.sol": {
        "keccak256": "0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7",
        "urls": [
          "bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92",
          "dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/utils/math/SafeMath.sol": {
        "keccak256": "0xa2f576be637946f767aa56601c26d717f48a0aff44f82e46f13807eea1009a21",
        "urls": [
          "bzz-raw://973868f808e88e21a1a0a01d4839314515ee337ad096286c88e41b74dcc11fc2",
          "dweb:/ipfs/QmfYuZxRfx2J2xdk4EXN7jKg4bUYEMTaYk9BAw9Bqn4o2Y"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/utils/math/SignedSafeMath.sol": {
        "keccak256": "0x62f53f262fabbbc6d8ab49488d8fce36370351aff2b8d3898d499d68995a71c2",
        "urls": [
          "bzz-raw://efd599513c2f313a3f5e9536beb2b80a0d2b3dd34202c174a707d81b7dc751ce",
          "dweb:/ipfs/QmdDiENVFSyWjfFskNLnViMH77DHg3oDthkSZk7dMzNNKB"
        ],
        "license": "MIT"
      },
      "node_modules/@uma/core/contracts/common/implementation/AddressWhitelist.sol": {
        "keccak256": "0xc1f20b925f9d37230aaf7bbee536f9a9b08e4772864f0a243ff1b69b54710fee",
        "urls": [
          "bzz-raw://55bc6782bd269463214dbafa8702b2ff33910fd4a51ab24d775aabb15e278bcc",
          "dweb:/ipfs/QmV41DnGByGBtg8gk7MG6Nr3xYo5R5varZ8cewywdKNATQ"
        ],
        "license": "AGPL-3.0-only"
      },
      "node_modules/@uma/core/contracts/common/implementation/AncillaryData.sol": {
        "keccak256": "0x8ff33ac32d3e6de25de9e0ac2c0ff9a621f187fa97e9ee84092b327471baa3ce",
        "urls": [
          "bzz-raw://0bbaed49756e8cf7ef405e132f441cd7a735ac6186a200b0179147e7d137b74a",
          "dweb:/ipfs/QmeSBJX5a61LZPxbkUKS2NF4LSxemgDwjD65fCAmyP7PX2"
        ],
        "license": "AGPL-3.0-only"
      },
      "node_modules/@uma/core/contracts/common/implementation/ExpandedERC20.sol": {
        "keccak256": "0x8201459d3f78a1f97da7c421f2fbb859924d4facfc5fc235ba65d85bf12b2229",
        "urls": [
          "bzz-raw://990c055523abe059c0e3e9dc0d631b17db960899dbfcfb2c562bc1ed9de8f140",
          "dweb:/ipfs/QmNgQP68bBrZvP2Rs4TdpESS3LFxqGgtTELZ1wm5mZqh4K"
        ],
        "license": "AGPL-3.0-only"
      },
      "node_modules/@uma/core/contracts/common/implementation/FixedPoint.sol": {
        "keccak256": "0x996b97cc4fa5da4064e3aee500edc6972485d59a9334ceec81155e2c2f484dae",
        "urls": [
          "bzz-raw://8d7c028926dc2b27e7dc103363dca8a43f60b3351f4a14bcb702660f95c68663",
          "dweb:/ipfs/QmXz4ieFjP5RxJ35F8GbPryYEGvFmxc4Gqx8EK7N57ixzT"
        ],
        "license": "AGPL-3.0-only"
      },
      "node_modules/@uma/core/contracts/common/implementation/Lockable.sol": {
        "keccak256": "0x41d78fcce54598ad5f26bc0b778c0f4fedbd836401625e49e736979f69a87ef0",
        "urls": [
          "bzz-raw://4ce111bb50441ef5125e7d42284f6debbc17fd589515d7b8cede7e9d1d5f0ede",
          "dweb:/ipfs/QmaXiXACWVEDDHoCHNXdVBoNpf8QNHkUZ1kf5MfbxfL6jj"
        ],
        "license": "AGPL-3.0-only"
      },
      "node_modules/@uma/core/contracts/common/implementation/MultiCaller.sol": {
        "keccak256": "0x9f6afe5bafc5e16fe8d63010a740ec3a88a9f00a7236ea7e5b039a2f50eb346e",
        "urls": [
          "bzz-raw://a971572a4a9ed32e5ec15ac384af593d9499778f6ec593dbdba67d44ced4c7d8",
          "dweb:/ipfs/QmbdpfhhnUyoHWe7TPFBZxT6R6zyxJEDcGBNwDt5ncweRv"
        ],
        "license": "AGPL-3.0-only"
      },
      "node_modules/@uma/core/contracts/common/implementation/MultiRole.sol": {
        "keccak256": "0x134c5a2f847832705be631f2b4eb2a3e23a91a2f0e63560abb481e85eeebfae6",
        "urls": [
          "bzz-raw://f1267c6ad560d1eb896575919ecca13759bf50bb82d1215e03fc1f0424ec37a6",
          "dweb:/ipfs/QmXewGxpSmSMGYmT6ZUyxCVzy2cybxicbnyCn8w87m5mo3"
        ],
        "license": "AGPL-3.0-only"
      },
      "node_modules/@uma/core/contracts/common/implementation/Testable.sol": {
        "keccak256": "0x0254b45747293bb800373a58d123969adec0428f7be79dc941cab10fcad09918",
        "urls": [
          "bzz-raw://537d694e3753596f507d071f283be9caeaad0010c444c9c9955d729affeb4907",
          "dweb:/ipfs/QmZ1WfVTBao11QaN6aygMhnt45UjRq77ZwfKPFmHiVSdaJ"
        ],
        "license": "AGPL-3.0-only"
      },
      "node_modules/@uma/core/contracts/common/implementation/TestnetERC20.sol": {
        "keccak256": "0xea7c79b7d7b55b6d88d878ac44837c691641e727511f82adbfb399f5cbe77319",
        "urls": [
          "bzz-raw://6acd45d4b58f8e150eb2dcc0d8314b38766b31671ce0aa6e1055a2f8ba93db80",
          "dweb:/ipfs/QmdsjVSVsXCidcbNeT5AzEM76jMKJ53DUD7zEcFetfdE6P"
        ],
        "license": "AGPL-3.0-only"
      },
      "node_modules/@uma/core/contracts/common/implementation/Timer.sol": {
        "keccak256": "0x9e0dd7389718bd5d1da910273a6f4cee98ee22bfc0c92bde0f0955c0e23adb5e",
        "urls": [
          "bzz-raw://7ddac8d3cb76f8811156a11a7702d7c05b15a0f18c22b5abdc318723193f9266",
          "dweb:/ipfs/QmPxL7AU8NkURJaZ6WxXNcw88wGMSoPX4jbt7SMdPJqtYv"
        ],
        "license": "AGPL-3.0-only"
      },
      "node_modules/@uma/core/contracts/common/implementation/Withdrawable.sol": {
        "keccak256": "0x0cffa58907ae0c4b2948f225723e5f4346276c0f1484452fb5c78fc90b79c630",
        "urls": [
          "bzz-raw://e832b3f09aa18ef687a34ffc754f9e9d1200c63da8f1550e46111a44a2b2433d",
          "dweb:/ipfs/QmdqUvbxXtea2w3msKp9PRAhxs3YsJCWX31bWRHSuq54Vr"
        ],
        "license": "AGPL-3.0-only"
      },
      "node_modules/@uma/core/contracts/common/interfaces/AddressWhitelistInterface.sol": {
        "keccak256": "0x22fb8588dff1d5cff76a28111d6c9b190765d99facd93c8ff3b54771f245c0d8",
        "urls": [
          "bzz-raw://5ecd993f00de290a3c7bf21da23a9439cf2ccb22028316df92b79780ac8aa533",
          "dweb:/ipfs/QmTZ7x7U4EEzTacqapzSdFs2np5WNsqm4XeUBqzQxxDJei"
        ],
        "license": "AGPL-3.0-only"
      },
      "node_modules/@uma/core/contracts/common/interfaces/ExpandedIERC20.sol": {
        "keccak256": "0xb8252039cba45f1c19cd677f150a9823a5d6e1845cad90e3041d97c96f273c26",
        "urls": [
          "bzz-raw://95106656c95e12c30a2a4c482a859df6df55c3b56bb9f7835eb5c685ca3175d3",
          "dweb:/ipfs/QmcuJoX7T53vTCDcQK8WcCJdT1LzHS35vPmSVfg1DG32cd"
        ],
        "license": "AGPL-3.0-only"
      },
      "node_modules/@uma/core/contracts/data-verification-mechanism/implementation/Constants.sol": {
        "keccak256": "0xe40957105a9240c6bcb9753fd0011fe9f382c437cd6771c57bf7a96f8ceb9c84",
        "urls": [
          "bzz-raw://cbf0d25e841b1f5c4022d09fb29220cb428139443cb29c4ab8dbfff71dffcc05",
          "dweb:/ipfs/QmSVVr5wH1tZi6WmKyuy1K8yS6JN4DeK5kWaZpPKtXiqkK"
        ],
        "license": "AGPL-3.0-only"
      },
      "node_modules/@uma/core/contracts/data-verification-mechanism/implementation/Finder.sol": {
        "keccak256": "0x0dfa6eda28743755f159de563ee2350b7edf81e4173e6bc3e35da7ad22c54dcb",
        "urls": [
          "bzz-raw://5fecfe0b81cb3437fde85798730bdcc9e9b124e4c22a7acb146fcc4b86f77702",
          "dweb:/ipfs/QmTCe8RfRihRXP9cuhM3Kgn36kR3JosoLzD1JQ3hWjdf65"
        ],
        "license": "AGPL-3.0-only"
      },
      "node_modules/@uma/core/contracts/data-verification-mechanism/implementation/IdentifierWhitelist.sol": {
        "keccak256": "0x77ad704fca2d76e187bbc72ed48323cf5b483dbee6c86afe023103d6fc7129eb",
        "urls": [
          "bzz-raw://6c8a7765d146c7133c5028b40b4a7a060a030425299d8d6622a06af5c44d4aa8",
          "dweb:/ipfs/QmU5TDtc3XHDgp25WxFmKbYGycY7NsT5EtHJ6DH5Q2YWgt"
        ],
        "license": "AGPL-3.0-only"
      },
      "node_modules/@uma/core/contracts/data-verification-mechanism/implementation/Store.sol": {
        "keccak256": "0x6a2b6982a9bbe9860c73c6c542e2021050b1127b28f887c329f36cc71c20dad2",
        "urls": [
          "bzz-raw://977406313978d803c0e5327f52c594f044c231fa3e9e6ab265ce19e457a06678",
          "dweb:/ipfs/QmY7en5NPTBvpriHZMKiWgzG9T3hNopR11d7VsBBPZaaVD"
        ],
        "license": "AGPL-3.0-only"
      },
      "node_modules/@uma/core/contracts/data-verification-mechanism/interfaces/FinderInterface.sol": {
        "keccak256": "0x9166fbfe08e954eb86d33c114fcde7ce4fd0dda5d9d28b31210582bfc769fa86",
        "urls": [
          "bzz-raw://e611e12bcaaebfdf65b67c566ff1d34708e757f01a445bd87c55862e89383b81",
          "dweb:/ipfs/QmYNSq5oopTShdS6j4VWKqoLxmQSRKmWebCxw6K4LfmKrf"
        ],
        "license": "AGPL-3.0-only"
      },
      "node_modules/@uma/core/contracts/data-verification-mechanism/interfaces/IdentifierWhitelistInterface.sol": {
        "keccak256": "0x9ae86a30dd1a8c03fb2c6d27be570bb30c4c0b13ac63cde8620b7e4b51d88dc9",
        "urls": [
          "bzz-raw://a71d2aff48e075ecab56a9c9767775d1d77e04ec9191fed124e71003220549e3",
          "dweb:/ipfs/QmYPWsZXro6fzqpZY6UxQ5X8znEXfLp2sun8oXzdz8bTyc"
        ],
        "license": "AGPL-3.0-only"
      },
      "node_modules/@uma/core/contracts/data-verification-mechanism/interfaces/OracleAncillaryInterface.sol": {
        "keccak256": "0xd58b41fe1e389f7871db7c04f2c05c1aac1d0455bbc521534da81fd657016a1f",
        "urls": [
          "bzz-raw://cc532e9c550bb1bba0daa33fda748590cd06ce94a9566fe65dac04e7d40977bc",
          "dweb:/ipfs/QmZKvfRW2LJFt5MWZbKuU9ujkXnS2hkPUJVj8wwJWcuZGX"
        ],
        "license": "AGPL-3.0-only"
      },
      "node_modules/@uma/core/contracts/data-verification-mechanism/interfaces/StoreInterface.sol": {
        "keccak256": "0xbb73671684309c91ad5ef3da1474051d03f2e7d5882bed7f5c4317e5d4c768df",
        "urls": [
          "bzz-raw://32386544d3119fd0187a8c4e8b01c739f508ab863faa04345cabc2544081f9e8",
          "dweb:/ipfs/QmYszDURs1x75rsejZkGt9zCkASXnJtufbNsL3XHe2eJPQ"
        ],
        "license": "AGPL-3.0-only"
      },
      "node_modules/@uma/core/contracts/data-verification-mechanism/test/MockOracleAncillary.sol": {
        "keccak256": "0x5ee630bcd6467ad0077f2d61baf77c59b7cf581a2c00fe816910d98b013ad0aa",
        "urls": [
          "bzz-raw://f525c98da45397f68920ef61b8f9ac512690cb46f4192b4a50edfd6b49ad5199",
          "dweb:/ipfs/Qma2mSJu2XHXbzhkwbyRmoJcdnwE3w2N8pTiBkt9u9dwzd"
        ],
        "license": "AGPL-3.0-only"
      },
      "node_modules/@uma/core/contracts/optimistic-oracle-v3/implementation/ClaimData.sol": {
        "keccak256": "0x6e887a70326e5ede4a8c5002d4123a8c77b477ce58cf92533c38cd3dc6142cb5",
        "urls": [
          "bzz-raw://bdafa7c59d0825da944c46664bddb1203bb4158dd0e1ddd6bbdeb276e66be0f8",
          "dweb:/ipfs/QmVb496JWqBib55HX6G3iPkAMv64Bj2UDegeVEYiNcYuDZ"
        ],
        "license": "AGPL-3.0-only"
      },
      "node_modules/@uma/core/contracts/optimistic-oracle-v3/implementation/OptimisticOracleV3.sol": {
        "keccak256": "0xeba5082c48c3d891f2422b8c0d1d5d6552ab47b5d538db7ff05ffb2f3db25ffc",
        "urls": [
          "bzz-raw://d818630e1c094792613a0539aa0a7677ca8fa92a5308eaf4ff7cf8ea8a4c547e",
          "dweb:/ipfs/QmSM78A3afY6osh4VAmyJX2E4Qyg4qcY1KwY5uFnSK4Yia"
        ],
        "license": "AGPL-3.0-only"
      },
      "node_modules/@uma/core/contracts/optimistic-oracle-v3/implementation/test/AssertingCallerTest.sol": {
        "keccak256": "0x212dafde3707bc594b103f3baef2612e521d5cced481d81938938cc5c6fc4068",
        "urls": [
          "bzz-raw://21e87397b59f9529a3e9ed9ef821f83f1a73bf685c2ec37dc70a2fbfc79aa441",
          "dweb:/ipfs/QmRmBzN3ztihHgeHzir1tz2MGsCrLM2Krc7ozQ4MiQe8jt"
        ],
        "license": "AGPL-3.0-only"
      },
      "node_modules/@uma/core/contracts/optimistic-oracle-v3/implementation/test/OptimisticOracleV3Test.sol": {
        "keccak256": "0xdb817afdd3c786d21ac8dede8e97452905d0ba84f444949cf6f92f77e8c2a38e",
        "urls": [
          "bzz-raw://f88474c7ac47ad72196818aa1d77d3b4bccac18ec77ae008ed53ec48c18f4fee",
          "dweb:/ipfs/QmPxsszotngGGDBv6vCE1kANMtgX8fLD6Xv7YwtZsUKqJQ"
        ],
        "license": "AGPL-3.0-only"
      },
      "node_modules/@uma/core/contracts/optimistic-oracle-v3/interfaces/EscalationManagerInterface.sol": {
        "keccak256": "0xce31adf62ae47468bab181bf1137b05e8ac0a003f019c343ac137a76ea32efc7",
        "urls": [
          "bzz-raw://eb1b93b648adf4130fdfe7a62d817cda0519e7760a50b90f16a3c46cee4c0967",
          "dweb:/ipfs/QmNPD4TRAm9kqqQDKQabqZgaorkJNov96iLgxsm5HRTSZN"
        ],
        "license": "AGPL-3.0-only"
      },
      "node_modules/@uma/core/contracts/optimistic-oracle-v3/interfaces/OptimisticOracleV3CallbackRecipientInterface.sol": {
        "keccak256": "0x79f90bc84ed5d394380e99f0a5d1b219abd9016bc3a02fad0099014af08af03e",
        "urls": [
          "bzz-raw://dc1b7b847eb711750bc76ab45a13294b05fc09e361294a6bdffb90cb15f50b63",
          "dweb:/ipfs/QmQSs2R7mmGojGdNkqP75Vf7LajRkfJ1oGuYAUCHYGmPEQ"
        ],
        "license": "AGPL-3.0-only"
      },
      "node_modules/@uma/core/contracts/optimistic-oracle-v3/interfaces/OptimisticOracleV3Interface.sol": {
        "keccak256": "0xf31322bfd64854f0bfa92051d6ec711c1eed15d8042f394f5c24c05378218367",
        "urls": [
          "bzz-raw://535bc2a6060e86a49524fd3c0062afcf83077530cefb3c1b8179b832f03ca81e",
          "dweb:/ipfs/QmQZhqn6oUiebSWEKbqcmiMGkqAb8B59WsRAyFU8WY84ct"
        ],
        "license": "AGPL-3.0-only"
      },
      "src/PredictionMarket.sol": {
        "keccak256": "0x3a9ee7e920ec40bcec82853152740bd9dc759c5f165656df182a7fe28a404cfa",
        "urls": [
          "bzz-raw://c515e5a01952042a85356af0c757c5805b9736eeb8772ded9b0f445064bfac7f",
          "dweb:/ipfs/QmTCVgaW4zykmFMvc8wbKB1VWn9JPhp4yWDqAhpfcWghWd"
        ],
        "license": "AGPL-3.0-only"
      },
      "test/PredictionMarket.Common.sol": {
        "keccak256": "0x5da478ffeb40a1a996f3224ad13856165ccb53a2bbac1a48b17b0f3c13994dbd",
        "urls": [
          "bzz-raw://884b3e87a8279fd030ecd98bde5358f30d1ec8d13fe0574225bf6c2c501491bc",
          "dweb:/ipfs/QmbB93pCwoiX4gCjQkA1RtZkb7Ai28Dq8nPMkDfBCzy9dw"
        ],
        "license": "AGPL-3.0-only"
      },
      "test/PredictionMarket.Resolve.t.sol": {
        "keccak256": "0x2535c6668fa41e8ef25dda7725580703384f08b49f36572fc8fce1275fc7da42",
        "urls": [
          "bzz-raw://74b407e78e111073a39b534bbe7d42eba4e046a75b0cb6eb23bb3f33508f0f21",
          "dweb:/ipfs/QmVkWWbHSXVMPn2HNxu8RqtferdaERrK534HeyVDBfKryL"
        ],
        "license": "AGPL-3.0-only"
      },
      "test/common/CommonOptimisticOracleV3Test.sol": {
        "keccak256": "0xef9f5c2c5c37257681e697148b5f724bc9a683e801be4803c555625edee60d5b",
        "urls": [
          "bzz-raw://35278764f5977e9f0161420f35681121958d409f5fe2a1299b1c7ad930e27467",
          "dweb:/ipfs/QmcNrmrzpGYyRzLbkKnrj8HBVH8qLeZSrcRiRDHbiqCoPe"
        ],
        "license": "AGPL-3.0-only"
      },
      "test/fixtures/common/CommonTestBase.sol": {
        "keccak256": "0xef45684397f61b92c77ef51e8a23579bca93a332c784e5b2f4e2a3c9343f9b50",
        "urls": [
          "bzz-raw://8a35ad0d9814f198b93e72031517350fc230a2d4ad20fa05a805bd4abc4adc75",
          "dweb:/ipfs/QmbNJoPfRsFstJV5S1jMCzMwCN7qvFzc631PSSMPnQnBno"
        ],
        "license": "AGPL-3.0-only"
      },
      "test/fixtures/common/TestAddress.sol": {
        "keccak256": "0x30f53e79e844909966fa5b92246c74d8585ff5d540f099c7a99461cc6ebf9d99",
        "urls": [
          "bzz-raw://8e58f9210e67b7efdb5633d9d67834ec5b52c5b48de0e0388b0ecd8f5853227b",
          "dweb:/ipfs/QmZaTBTkBx3QYPBzhRMb7nTdhfZCctwmrAVL9hST6Xw3bn"
        ],
        "license": "AGPL-3.0-only"
      },
      "test/fixtures/common/TimerFixture.sol": {
        "keccak256": "0x9f0b735cb4d2d494d670be9875082c9e7944e4e9e1989a99524b9dffbddeb9cb",
        "urls": [
          "bzz-raw://a2e53b878c9f8bdc88cb91cfb1b1631d1fec6d7c3009a1954e3215989c05d937",
          "dweb:/ipfs/QmRSi291avEMxygy47inL8VXCyJ4PSgqvx9iRZwbo19rnx"
        ],
        "license": null
      },
      "test/fixtures/dvm/BaseDvmFixture.sol": {
        "keccak256": "0x84d096fe2fe9c507a772831db59b3b4ad023c791ca5334c4c6ac29c03854d56a",
        "urls": [
          "bzz-raw://bbcf3381ac7b375c93d734d9591a6cb1fb0ba8445e3d141e36d809b97e8e46ff",
          "dweb:/ipfs/QmczTUkTzjcFM9kCHbcKpK6gdxChsABaFBSz8tsFkrU4fZ"
        ],
        "license": null
      },
      "test/fixtures/dvm/MockDvmFixture.sol": {
        "keccak256": "0xde8cfa220b09bb8576733acff3ff12989753698743b25b3b51ccdb84a009c5b1",
        "urls": [
          "bzz-raw://b436588048b11b68fa27a4bab1e2623ee0a3102d46e28d67ea8fae4989661512",
          "dweb:/ipfs/QmZU56VYo9cpyBNv8hLadNJAj4jNWFxQJJQgV3NpPcTgd2"
        ],
        "license": null
      },
      "test/fixtures/optimistic-oracle-v3/OptimisticOracleV3Fixture.sol": {
        "keccak256": "0x4dbc410556ebf8c68d4053e40df6ced58c3ad2bcd3c7b07a38d6e45db64f6a9f",
        "urls": [
          "bzz-raw://e1c1f054e8fe6207a132b2c101f3a103cc2527f2edfc52fcec465f1f45e8bdd3",
          "dweb:/ipfs/QmYqFoT2H2hXGpqFs6yBRCbJ8tyBwHekWvqFFsKvfSwKLf"
        ],
        "license": "AGPL-3.0-only"
      }
    },
    "version": 1
  },
  "ast": {
    "absolutePath": "test/PredictionMarket.Resolve.t.sol",
    "id": 54338,
    "exportedSymbols": {
      "Address": [
        44663
      ],
      "AddressWhitelist": [
        45279
      ],
      "AddressWhitelistInterface": [
        48609
      ],
      "AncillaryData": [
        45687
      ],
      "AssertingCallerTest": [
        51152
      ],
      "BaseDvmFixture": [
        55302
      ],
      "BaseDvmFixtureTest": [
        55378
      ],
      "ClaimData": [
        45687
      ],
      "CommonOptimisticOracleV3Test": [
        55103
      ],
      "CommonTestBase": [
        55110
      ],
      "Context": [
        44685
      ],
      "DSTest": [
        2291
      ],
      "ERC20": [
        44041
      ],
      "EscalationManagerInterface": [
        51256
      ],
      "Exclusive": [
        47772
      ],
      "ExpandedERC20": [
        45910
      ],
      "ExpandedIERC20": [
        48657
      ],
      "Finder": [
        48782
      ],
      "FinderInterface": [
        49231
      ],
      "FixedPoint": [
        47543
      ],
      "IERC20": [
        44119
      ],
      "IERC20Metadata": [
        44144
      ],
      "IdentifierWhitelist": [
        48869
      ],
      "IdentifierWhitelistInterface": [
        49255
      ],
      "Lockable": [
        47620
      ],
      "MockDvmFixture": [
        55475
      ],
      "MockDvmFixtureTest": [
        55573
      ],
      "MockOracleAncillary": [
        49768
      ],
      "MultiCaller": [
        47699
      ],
      "MultiRole": [
        48324
      ],
      "OptimisticOracleConstraints": [
        48711
      ],
      "OptimisticOracleV3": [
        51069
      ],
      "OptimisticOracleV3CallbackRecipientInterface": [
        51274
      ],
      "OptimisticOracleV3Fixture": [
        55724
      ],
      "OptimisticOracleV3FixtureTest": [
        55799
      ],
      "OptimisticOracleV3Interface": [
        51464
      ],
      "OptimisticOracleV3Test": [
        51199
      ],
      "OracleAncillaryInterface": [
        49293
      ],
      "OracleInterfaces": [
        48706
      ],
      "Ownable": [
        43453
      ],
      "PredictionMarket": [
        52420
      ],
      "PredictionMarketResolveTest": [
        54337
      ],
      "PredictionMarketTestCommon": [
        53254
      ],
      "SafeERC20": [
        44368
      ],
      "SafeMath": [
        44997
      ],
      "Shared": [
        47868
      ],
      "SignedSafeMath": [
        45061
      ],
      "StdAssertions": [
        3784
      ],
      "StdChains": [
        4522
      ],
      "StdCheats": [
        7375
      ],
      "StdInvariant": [
        7700
      ],
      "StdStorage": [
        8466
      ],
      "StdStyle": [
        11316
      ],
      "StdUtils": [
        12164
      ],
      "Store": [
        49211
      ],
      "StoreInterface": [
        49338
      ],
      "Test": [
        12215
      ],
      "TestAddress": [
        55143
      ],
      "TestBase": [
        2357
      ],
      "Testable": [
        48397
      ],
      "TestnetERC20": [
        48449
      ],
      "Timer": [
        48484
      ],
      "TimerFixture": [
        55159
      ],
      "Vm": [
        13921
      ],
      "Withdrawable": [
        48583
      ],
      "console": [
        21985
      ],
      "console2": [
        30110
      ],
      "safeconsole": [
        43348
      ],
      "stdError": [
        7441
      ],
      "stdJson": [
        8292
      ],
      "stdMath": [
        8434
      ],
      "stdStorage": [
        10105
      ]
    },
    "nodeType": "SourceUnit",
    "src": "42:4912:61",
    "nodes": [
      {
        "id": 53931,
        "nodeType": "PragmaDirective",
        "src": "42:23:61",
        "nodes": [],
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ]
      },
      {
        "id": 53932,
        "nodeType": "ImportDirective",
        "src": "66:39:61",
        "nodes": [],
        "absolutePath": "test/PredictionMarket.Common.sol",
        "file": "./PredictionMarket.Common.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 54338,
        "sourceUnit": 53255,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 54337,
        "nodeType": "ContractDefinition",
        "src": "107:4846:61",
        "nodes": [
          {
            "id": 53936,
            "nodeType": "VariableDeclaration",
            "src": "180:16:61",
            "nodes": [],
            "constant": false,
            "mutability": "mutable",
            "name": "marketId",
            "nameLocation": "188:8:61",
            "scope": 54337,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bytes32",
              "typeString": "bytes32"
            },
            "typeName": {
              "id": 53935,
              "name": "bytes32",
              "nodeType": "ElementaryTypeName",
              "src": "180:7:61",
              "typeDescriptions": {
                "typeIdentifier": "t_bytes32",
                "typeString": "bytes32"
              }
            },
            "visibility": "internal"
          },
          {
            "id": 53948,
            "nodeType": "FunctionDefinition",
            "src": "203:111:61",
            "nodes": [],
            "body": {
              "id": 53947,
              "nodeType": "Block",
              "src": "227:87:61",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 53939,
                      "name": "_commonPredictionMarketSetUp",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 52863,
                      "src": "237:28:61",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 53940,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "237:30:61",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 53941,
                  "nodeType": "ExpressionStatement",
                  "src": "237:30:61"
                },
                {
                  "expression": {
                    "id": 53945,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 53942,
                      "name": "marketId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 53936,
                      "src": "277:8:61",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 53943,
                        "name": "_initializeMarket",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 52917,
                        "src": "288:17:61",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_nonpayable$__$returns$_t_bytes32_$",
                          "typeString": "function () returns (bytes32)"
                        }
                      },
                      "id": 53944,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "288:19:61",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "src": "277:30:61",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "id": 53946,
                  "nodeType": "ExpressionStatement",
                  "src": "277:30:61"
                }
              ]
            },
            "functionSelector": "0a9254e4",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "setUp",
            "nameLocation": "212:5:61",
            "parameters": {
              "id": 53937,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "217:2:61"
            },
            "returnParameters": {
              "id": 53938,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "227:0:61"
            },
            "scope": 54337,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 54040,
            "nodeType": "FunctionDefinition",
            "src": "320:1079:61",
            "nodes": [],
            "body": {
              "id": 54039,
              "nodeType": "Block",
              "src": "366:1033:61",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    53952
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 53952,
                      "mutability": "mutable",
                      "name": "assertionId",
                      "nameLocation": "384:11:61",
                      "nodeType": "VariableDeclaration",
                      "scope": 54039,
                      "src": "376:19:61",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 53951,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "376:7:61",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 53957,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 53954,
                        "name": "marketId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 53936,
                        "src": "412:8:61",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "id": 53955,
                        "name": "outcome1",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 52801,
                        "src": "422:8:61",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_storage",
                          "typeString": "string storage ref"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_string_storage",
                          "typeString": "string storage ref"
                        }
                      ],
                      "id": 53953,
                      "name": "_assertMarket",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 52974,
                      "src": "398:13:61",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_string_memory_ptr_$returns$_t_bytes32_$",
                        "typeString": "function (bytes32,string memory) returns (bytes32)"
                      }
                    },
                    "id": 53956,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "398:33:61",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "376:55:61"
                },
                {
                  "assignments": [
                    53959
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 53959,
                      "mutability": "mutable",
                      "name": "asserterBalanceBefore",
                      "nameLocation": "449:21:61",
                      "nodeType": "VariableDeclaration",
                      "scope": 54039,
                      "src": "441:29:61",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 53958,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "441:7:61",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 53965,
                  "initialValue": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 53962,
                          "name": "TestAddress",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 55143,
                          "src": "499:11:61",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_TestAddress_$55143_$",
                            "typeString": "type(library TestAddress)"
                          }
                        },
                        "id": 53963,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "memberLocation": "511:8:61",
                        "memberName": "account1",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 55124,
                        "src": "499:20:61",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 53960,
                        "name": "defaultCurrency",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 54368,
                        "src": "473:15:61",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_TestnetERC20_$48449",
                          "typeString": "contract TestnetERC20"
                        }
                      },
                      "id": 53961,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "489:9:61",
                      "memberName": "balanceOf",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 43552,
                      "src": "473:25:61",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) view external returns (uint256)"
                      }
                    },
                    "id": 53964,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "473:47:61",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "441:79:61"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 53973,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "expression": {
                              "id": 53969,
                              "name": "timer",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 54371,
                              "src": "672:5:61",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_Timer_$48484",
                                "typeString": "contract Timer"
                              }
                            },
                            "id": 53970,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "678:14:61",
                            "memberName": "getCurrentTime",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 48483,
                            "src": "672:20:61",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$",
                              "typeString": "function () view external returns (uint256)"
                            }
                          },
                          "id": 53971,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "672:22:61",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "+",
                        "rightExpression": {
                          "id": 53972,
                          "name": "defaultLiveness",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 54401,
                          "src": "697:15:61",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint64",
                            "typeString": "uint64"
                          }
                        },
                        "src": "672:40:61",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 53966,
                        "name": "timer",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 54371,
                        "src": "651:5:61",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Timer_$48484",
                          "typeString": "contract Timer"
                        }
                      },
                      "id": 53968,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "657:14:61",
                      "memberName": "setCurrentTime",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 48474,
                      "src": "651:20:61",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256) external"
                      }
                    },
                    "id": 53974,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "651:62:61",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 53975,
                  "nodeType": "ExpressionStatement",
                  "src": "651:62:61"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 53981,
                            "name": "predictionMarket",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 52798,
                            "src": "758:16:61",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_PredictionMarket_$52420",
                              "typeString": "contract PredictionMarket"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_PredictionMarket_$52420",
                              "typeString": "contract PredictionMarket"
                            }
                          ],
                          "id": 53980,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "750:7:61",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 53979,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "750:7:61",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 53982,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "750:25:61",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "expression": {
                              "id": 53985,
                              "name": "predictionMarket",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 52798,
                              "src": "804:16:61",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_PredictionMarket_$52420",
                                "typeString": "contract PredictionMarket"
                              }
                            },
                            "id": 53986,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "821:25:61",
                            "memberName": "assertionResolvedCallback",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 52100,
                            "src": "804:42:61",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_bytes32_$_t_bool_$returns$__$",
                              "typeString": "function (bytes32,bool) external"
                            }
                          },
                          {
                            "components": [
                              {
                                "id": 53987,
                                "name": "assertionId",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 53952,
                                "src": "849:11:61",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes32",
                                  "typeString": "bytes32"
                                }
                              },
                              {
                                "hexValue": "74727565",
                                "id": 53988,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "bool",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "862:4:61",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                },
                                "value": "true"
                              }
                            ],
                            "id": 53989,
                            "isConstant": false,
                            "isInlineArray": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "TupleExpression",
                            "src": "848:19:61",
                            "typeDescriptions": {
                              "typeIdentifier": "t_tuple$_t_bytes32_$_t_bool_$",
                              "typeString": "tuple(bytes32,bool)"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_function_external_nonpayable$_t_bytes32_$_t_bool_$returns$__$",
                              "typeString": "function (bytes32,bool) external"
                            },
                            {
                              "typeIdentifier": "t_tuple$_t_bytes32_$_t_bool_$",
                              "typeString": "tuple(bytes32,bool)"
                            }
                          ],
                          "expression": {
                            "id": 53983,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -1,
                            "src": "789:3:61",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 53984,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberLocation": "793:10:61",
                          "memberName": "encodeCall",
                          "nodeType": "MemberAccess",
                          "src": "789:14:61",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function () pure returns (bytes memory)"
                          }
                        },
                        "id": 53990,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "789:79:61",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "expression": {
                        "id": 53976,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2350,
                        "src": "723:2:61",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$13921",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 53978,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "726:10:61",
                      "memberName": "expectCall",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 13779,
                      "src": "723:13:61",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (address,bytes memory) external"
                      }
                    },
                    "id": 53991,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "723:155:61",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 53992,
                  "nodeType": "ExpressionStatement",
                  "src": "723:155:61"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 53996,
                            "name": "assertionId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 53952,
                            "src": "946:11:61",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          ],
                          "expression": {
                            "id": 53994,
                            "name": "optimisticOracleV3",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 54365,
                            "src": "899:18:61",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_OptimisticOracleV3_$51069",
                              "typeString": "contract OptimisticOracleV3"
                            }
                          },
                          "id": 53995,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "918:27:61",
                          "memberName": "settleAndGetAssertionResult",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 50480,
                          "src": "899:46:61",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_nonpayable$_t_bytes32_$returns$_t_bool_$",
                            "typeString": "function (bytes32) external returns (bool)"
                          }
                        },
                        "id": 53997,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "899:59:61",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 53993,
                      "name": "assertTrue",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        269,
                        290
                      ],
                      "referencedDeclaration": 269,
                      "src": "888:10:61",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bool_$returns$__$",
                        "typeString": "function (bool)"
                      }
                    },
                    "id": 53998,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "888:71:61",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 53999,
                  "nodeType": "ExpressionStatement",
                  "src": "888:71:61"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "expression": {
                              "id": 54003,
                              "name": "TestAddress",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 55143,
                              "src": "1071:11:61",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_TestAddress_$55143_$",
                                "typeString": "type(library TestAddress)"
                              }
                            },
                            "id": 54004,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberLocation": "1083:8:61",
                            "memberName": "account1",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 55124,
                            "src": "1071:20:61",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 54001,
                            "name": "defaultCurrency",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 54368,
                            "src": "1045:15:61",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TestnetERC20_$48449",
                              "typeString": "contract TestnetERC20"
                            }
                          },
                          "id": 54002,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "1061:9:61",
                          "memberName": "balanceOf",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 43552,
                          "src": "1045:25:61",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (address) view external returns (uint256)"
                          }
                        },
                        "id": 54005,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1045:47:61",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 54010,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 54008,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 54006,
                            "name": "asserterBalanceBefore",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 53959,
                            "src": "1094:21:61",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "+",
                          "rightExpression": {
                            "id": 54007,
                            "name": "requiredBond",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 52812,
                            "src": "1118:12:61",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "1094:36:61",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "+",
                        "rightExpression": {
                          "id": 54009,
                          "name": "reward",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 52810,
                          "src": "1133:6:61",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "1094:45:61",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 54000,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        2485,
                        2510,
                        2523,
                        2539,
                        2581,
                        2623,
                        2665,
                        2702,
                        2739,
                        2776,
                        320,
                        345,
                        375,
                        400,
                        459,
                        484,
                        514,
                        539,
                        2012,
                        2047
                      ],
                      "referencedDeclaration": 514,
                      "src": "1036:8:61",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 54011,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1036:104:61",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 54012,
                  "nodeType": "ExpressionStatement",
                  "src": "1036:104:61"
                },
                {
                  "assignments": [
                    54017
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 54017,
                      "mutability": "mutable",
                      "name": "market",
                      "nameLocation": "1238:6:61",
                      "nodeType": "VariableDeclaration",
                      "scope": 54039,
                      "src": "1207:37:61",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Market_$51501_memory_ptr",
                        "typeString": "struct PredictionMarket.Market"
                      },
                      "typeName": {
                        "id": 54016,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 54015,
                          "name": "PredictionMarket.Market",
                          "nameLocations": [
                            "1207:16:61",
                            "1224:6:61"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 51501,
                          "src": "1207:23:61"
                        },
                        "referencedDeclaration": 51501,
                        "src": "1207:23:61",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Market_$51501_storage_ptr",
                          "typeString": "struct PredictionMarket.Market"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 54022,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 54020,
                        "name": "marketId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 53936,
                        "src": "1274:8:61",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      ],
                      "expression": {
                        "id": 54018,
                        "name": "predictionMarket",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 52798,
                        "src": "1247:16:61",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_PredictionMarket_$52420",
                          "typeString": "contract PredictionMarket"
                        }
                      },
                      "id": 54019,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "1264:9:61",
                      "memberName": "getMarket",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 51647,
                      "src": "1247:26:61",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_bytes32_$returns$_t_struct$_Market_$51501_memory_ptr_$",
                        "typeString": "function (bytes32) view external returns (struct PredictionMarket.Market memory)"
                      }
                    },
                    "id": 54021,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1247:36:61",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Market_$51501_memory_ptr",
                      "typeString": "struct PredictionMarket.Market memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1207:76:61"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 54024,
                          "name": "market",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 54017,
                          "src": "1304:6:61",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Market_$51501_memory_ptr",
                            "typeString": "struct PredictionMarket.Market memory"
                          }
                        },
                        "id": 54025,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "1311:8:61",
                        "memberName": "resolved",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 51482,
                        "src": "1304:15:61",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 54023,
                      "name": "assertTrue",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        269,
                        290
                      ],
                      "referencedDeclaration": 269,
                      "src": "1293:10:61",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bool_$returns$__$",
                        "typeString": "function (bool)"
                      }
                    },
                    "id": 54026,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1293:27:61",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 54027,
                  "nodeType": "ExpressionStatement",
                  "src": "1293:27:61"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 54029,
                          "name": "market",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 54017,
                          "src": "1339:6:61",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Market_$51501_memory_ptr",
                            "typeString": "struct PredictionMarket.Market memory"
                          }
                        },
                        "id": 54030,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "1346:17:61",
                        "memberName": "assertedOutcomeId",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 51484,
                        "src": "1339:24:61",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "id": 54034,
                                "name": "outcome1",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 52801,
                                "src": "1381:8:61",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_string_storage",
                                  "typeString": "string storage ref"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_string_storage",
                                  "typeString": "string storage ref"
                                }
                              ],
                              "id": 54033,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "1375:5:61",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
                                "typeString": "type(bytes storage pointer)"
                              },
                              "typeName": {
                                "id": 54032,
                                "name": "bytes",
                                "nodeType": "ElementaryTypeName",
                                "src": "1375:5:61",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 54035,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "1375:15:61",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_storage_ptr",
                              "typeString": "bytes storage pointer"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes_storage_ptr",
                              "typeString": "bytes storage pointer"
                            }
                          ],
                          "id": 54031,
                          "name": "keccak256",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -8,
                          "src": "1365:9:61",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                            "typeString": "function (bytes memory) pure returns (bytes32)"
                          }
                        },
                        "id": 54036,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1365:26:61",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      ],
                      "id": 54028,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        2485,
                        2510,
                        2523,
                        2539,
                        2581,
                        2623,
                        2665,
                        2702,
                        2739,
                        2776,
                        320,
                        345,
                        375,
                        400,
                        459,
                        484,
                        514,
                        539,
                        2012,
                        2047
                      ],
                      "referencedDeclaration": 375,
                      "src": "1330:8:61",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_bytes32_$returns$__$",
                        "typeString": "function (bytes32,bytes32)"
                      }
                    },
                    "id": 54037,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1330:62:61",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 54038,
                  "nodeType": "ExpressionStatement",
                  "src": "1330:62:61"
                }
              ]
            },
            "functionSelector": "217356c6",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "test_ResolveMarketNoDispute",
            "nameLocation": "329:27:61",
            "parameters": {
              "id": 53949,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "356:2:61"
            },
            "returnParameters": {
              "id": 53950,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "366:0:61"
            },
            "scope": 54337,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 54143,
            "nodeType": "FunctionDefinition",
            "src": "1405:1267:61",
            "nodes": [],
            "body": {
              "id": 54142,
              "nodeType": "Block",
              "src": "1458:1214:61",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    54044
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 54044,
                      "mutability": "mutable",
                      "name": "assertionId",
                      "nameLocation": "1476:11:61",
                      "nodeType": "VariableDeclaration",
                      "scope": 54142,
                      "src": "1468:19:61",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 54043,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "1468:7:61",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 54049,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 54046,
                        "name": "marketId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 53936,
                        "src": "1504:8:61",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "id": 54047,
                        "name": "outcome1",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 52801,
                        "src": "1514:8:61",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_storage",
                          "typeString": "string storage ref"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_string_storage",
                          "typeString": "string storage ref"
                        }
                      ],
                      "id": 54045,
                      "name": "_assertMarket",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 52974,
                      "src": "1490:13:61",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_string_memory_ptr_$returns$_t_bytes32_$",
                        "typeString": "function (bytes32,string memory) returns (bytes32)"
                      }
                    },
                    "id": 54048,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1490:33:61",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1468:55:61"
                },
                {
                  "assignments": [
                    54051
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 54051,
                      "mutability": "mutable",
                      "name": "asserterBalanceBefore",
                      "nameLocation": "1541:21:61",
                      "nodeType": "VariableDeclaration",
                      "scope": 54142,
                      "src": "1533:29:61",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 54050,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "1533:7:61",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 54057,
                  "initialValue": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 54054,
                          "name": "TestAddress",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 55143,
                          "src": "1591:11:61",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_TestAddress_$55143_$",
                            "typeString": "type(library TestAddress)"
                          }
                        },
                        "id": 54055,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "memberLocation": "1603:8:61",
                        "memberName": "account1",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 55124,
                        "src": "1591:20:61",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 54052,
                        "name": "defaultCurrency",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 54368,
                        "src": "1565:15:61",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_TestnetERC20_$48449",
                          "typeString": "contract TestnetERC20"
                        }
                      },
                      "id": 54053,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "1581:9:61",
                      "memberName": "balanceOf",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 43552,
                      "src": "1565:25:61",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) view external returns (uint256)"
                      }
                    },
                    "id": 54056,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1565:47:61",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1533:79:61"
                },
                {
                  "assignments": [
                    54060
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 54060,
                      "mutability": "mutable",
                      "name": "oracleRequest",
                      "nameLocation": "1769:13:61",
                      "nodeType": "VariableDeclaration",
                      "scope": 54142,
                      "src": "1748:34:61",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_OracleRequest_$54352_memory_ptr",
                        "typeString": "struct CommonOptimisticOracleV3Test.OracleRequest"
                      },
                      "typeName": {
                        "id": 54059,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 54058,
                          "name": "OracleRequest",
                          "nameLocations": [
                            "1748:13:61"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 54352,
                          "src": "1748:13:61"
                        },
                        "referencedDeclaration": 54352,
                        "src": "1748:13:61",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_OracleRequest_$54352_storage_ptr",
                          "typeString": "struct CommonOptimisticOracleV3Test.OracleRequest"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 54065,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 54062,
                        "name": "assertionId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 54044,
                        "src": "1813:11:61",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "id": 54063,
                        "name": "requiredBond",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 52812,
                        "src": "1826:12:61",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 54061,
                      "name": "_disputeAndGetOracleRequest",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 54808,
                      "src": "1785:27:61",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_uint256_$returns$_t_struct$_OracleRequest_$54352_memory_ptr_$",
                        "typeString": "function (bytes32,uint256) returns (struct CommonOptimisticOracleV3Test.OracleRequest memory)"
                      }
                    },
                    "id": 54064,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1785:54:61",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_OracleRequest_$54352_memory_ptr",
                      "typeString": "struct CommonOptimisticOracleV3Test.OracleRequest memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1748:91:61"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 54069,
                            "name": "mockOracle",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 54377,
                            "src": "1877:10:61",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_MockOracleAncillary_$49768",
                              "typeString": "contract MockOracleAncillary"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_MockOracleAncillary_$49768",
                              "typeString": "contract MockOracleAncillary"
                            }
                          ],
                          "id": 54068,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1869:7:61",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 54067,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "1869:7:61",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 54070,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1869:19:61",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 54071,
                        "name": "oracleRequest",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 54060,
                        "src": "1890:13:61",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_OracleRequest_$54352_memory_ptr",
                          "typeString": "struct CommonOptimisticOracleV3Test.OracleRequest memory"
                        }
                      },
                      {
                        "hexValue": "74727565",
                        "id": 54072,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1905:4:61",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "true"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_struct$_OracleRequest_$54352_memory_ptr",
                          "typeString": "struct CommonOptimisticOracleV3Test.OracleRequest memory"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 54066,
                      "name": "_mockOracleResolved",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 54666,
                      "src": "1849:19:61",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_struct$_OracleRequest_$54352_memory_ptr_$_t_bool_$returns$__$",
                        "typeString": "function (address,struct CommonOptimisticOracleV3Test.OracleRequest memory,bool)"
                      }
                    },
                    "id": 54073,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1849:61:61",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 54074,
                  "nodeType": "ExpressionStatement",
                  "src": "1849:61:61"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 54080,
                            "name": "predictionMarket",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 52798,
                            "src": "1955:16:61",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_PredictionMarket_$52420",
                              "typeString": "contract PredictionMarket"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_PredictionMarket_$52420",
                              "typeString": "contract PredictionMarket"
                            }
                          ],
                          "id": 54079,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1947:7:61",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 54078,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "1947:7:61",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 54081,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1947:25:61",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "expression": {
                              "id": 54084,
                              "name": "predictionMarket",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 52798,
                              "src": "2001:16:61",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_PredictionMarket_$52420",
                                "typeString": "contract PredictionMarket"
                              }
                            },
                            "id": 54085,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "2018:25:61",
                            "memberName": "assertionResolvedCallback",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 52100,
                            "src": "2001:42:61",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_bytes32_$_t_bool_$returns$__$",
                              "typeString": "function (bytes32,bool) external"
                            }
                          },
                          {
                            "components": [
                              {
                                "id": 54086,
                                "name": "assertionId",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 54044,
                                "src": "2046:11:61",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes32",
                                  "typeString": "bytes32"
                                }
                              },
                              {
                                "hexValue": "74727565",
                                "id": 54087,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "bool",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "2059:4:61",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                },
                                "value": "true"
                              }
                            ],
                            "id": 54088,
                            "isConstant": false,
                            "isInlineArray": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "TupleExpression",
                            "src": "2045:19:61",
                            "typeDescriptions": {
                              "typeIdentifier": "t_tuple$_t_bytes32_$_t_bool_$",
                              "typeString": "tuple(bytes32,bool)"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_function_external_nonpayable$_t_bytes32_$_t_bool_$returns$__$",
                              "typeString": "function (bytes32,bool) external"
                            },
                            {
                              "typeIdentifier": "t_tuple$_t_bytes32_$_t_bool_$",
                              "typeString": "tuple(bytes32,bool)"
                            }
                          ],
                          "expression": {
                            "id": 54082,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -1,
                            "src": "1986:3:61",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 54083,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberLocation": "1990:10:61",
                          "memberName": "encodeCall",
                          "nodeType": "MemberAccess",
                          "src": "1986:14:61",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function () pure returns (bytes memory)"
                          }
                        },
                        "id": 54089,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1986:79:61",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "expression": {
                        "id": 54075,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2350,
                        "src": "1920:2:61",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$13921",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 54077,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "1923:10:61",
                      "memberName": "expectCall",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 13779,
                      "src": "1920:13:61",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (address,bytes memory) external"
                      }
                    },
                    "id": 54090,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1920:155:61",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 54091,
                  "nodeType": "ExpressionStatement",
                  "src": "1920:155:61"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 54095,
                            "name": "assertionId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 54044,
                            "src": "2143:11:61",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          ],
                          "expression": {
                            "id": 54093,
                            "name": "optimisticOracleV3",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 54365,
                            "src": "2096:18:61",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_OptimisticOracleV3_$51069",
                              "typeString": "contract OptimisticOracleV3"
                            }
                          },
                          "id": 54094,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "2115:27:61",
                          "memberName": "settleAndGetAssertionResult",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 50480,
                          "src": "2096:46:61",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_nonpayable$_t_bytes32_$returns$_t_bool_$",
                            "typeString": "function (bytes32) external returns (bool)"
                          }
                        },
                        "id": 54096,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2096:59:61",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 54092,
                      "name": "assertTrue",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        269,
                        290
                      ],
                      "referencedDeclaration": 269,
                      "src": "2085:10:61",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bool_$returns$__$",
                        "typeString": "function (bool)"
                      }
                    },
                    "id": 54097,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2085:71:61",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 54098,
                  "nodeType": "ExpressionStatement",
                  "src": "2085:71:61"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "expression": {
                              "id": 54102,
                              "name": "TestAddress",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 55143,
                              "src": "2304:11:61",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_TestAddress_$55143_$",
                                "typeString": "type(library TestAddress)"
                              }
                            },
                            "id": 54103,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberLocation": "2316:8:61",
                            "memberName": "account1",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 55124,
                            "src": "2304:20:61",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 54100,
                            "name": "defaultCurrency",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 54368,
                            "src": "2278:15:61",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TestnetERC20_$48449",
                              "typeString": "contract TestnetERC20"
                            }
                          },
                          "id": 54101,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "2294:9:61",
                          "memberName": "balanceOf",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 43552,
                          "src": "2278:25:61",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (address) view external returns (uint256)"
                          }
                        },
                        "id": 54104,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2278:47:61",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 54113,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 54109,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 54107,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "id": 54105,
                              "name": "asserterBalanceBefore",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 54051,
                              "src": "2339:21:61",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "+",
                            "rightExpression": {
                              "id": 54106,
                              "name": "requiredBond",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 52812,
                              "src": "2363:12:61",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "2339:36:61",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "+",
                          "rightExpression": {
                            "id": 54108,
                            "name": "reward",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 52810,
                            "src": "2378:6:61",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "2339:45:61",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "+",
                        "rightExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 54112,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 54110,
                            "name": "requiredBond",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 52812,
                            "src": "2387:12:61",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "/",
                          "rightExpression": {
                            "hexValue": "32",
                            "id": 54111,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "2402:1:61",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_2_by_1",
                              "typeString": "int_const 2"
                            },
                            "value": "2"
                          },
                          "src": "2387:16:61",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "2339:64:61",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 54099,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        2485,
                        2510,
                        2523,
                        2539,
                        2581,
                        2623,
                        2665,
                        2702,
                        2739,
                        2776,
                        320,
                        345,
                        375,
                        400,
                        459,
                        484,
                        514,
                        539,
                        2012,
                        2047
                      ],
                      "referencedDeclaration": 514,
                      "src": "2256:8:61",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 54114,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2256:157:61",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 54115,
                  "nodeType": "ExpressionStatement",
                  "src": "2256:157:61"
                },
                {
                  "assignments": [
                    54120
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 54120,
                      "mutability": "mutable",
                      "name": "market",
                      "nameLocation": "2511:6:61",
                      "nodeType": "VariableDeclaration",
                      "scope": 54142,
                      "src": "2480:37:61",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Market_$51501_memory_ptr",
                        "typeString": "struct PredictionMarket.Market"
                      },
                      "typeName": {
                        "id": 54119,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 54118,
                          "name": "PredictionMarket.Market",
                          "nameLocations": [
                            "2480:16:61",
                            "2497:6:61"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 51501,
                          "src": "2480:23:61"
                        },
                        "referencedDeclaration": 51501,
                        "src": "2480:23:61",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Market_$51501_storage_ptr",
                          "typeString": "struct PredictionMarket.Market"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 54125,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 54123,
                        "name": "marketId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 53936,
                        "src": "2547:8:61",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      ],
                      "expression": {
                        "id": 54121,
                        "name": "predictionMarket",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 52798,
                        "src": "2520:16:61",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_PredictionMarket_$52420",
                          "typeString": "contract PredictionMarket"
                        }
                      },
                      "id": 54122,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "2537:9:61",
                      "memberName": "getMarket",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 51647,
                      "src": "2520:26:61",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_bytes32_$returns$_t_struct$_Market_$51501_memory_ptr_$",
                        "typeString": "function (bytes32) view external returns (struct PredictionMarket.Market memory)"
                      }
                    },
                    "id": 54124,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2520:36:61",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Market_$51501_memory_ptr",
                      "typeString": "struct PredictionMarket.Market memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2480:76:61"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 54127,
                          "name": "market",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 54120,
                          "src": "2577:6:61",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Market_$51501_memory_ptr",
                            "typeString": "struct PredictionMarket.Market memory"
                          }
                        },
                        "id": 54128,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "2584:8:61",
                        "memberName": "resolved",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 51482,
                        "src": "2577:15:61",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 54126,
                      "name": "assertTrue",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        269,
                        290
                      ],
                      "referencedDeclaration": 269,
                      "src": "2566:10:61",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bool_$returns$__$",
                        "typeString": "function (bool)"
                      }
                    },
                    "id": 54129,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2566:27:61",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 54130,
                  "nodeType": "ExpressionStatement",
                  "src": "2566:27:61"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 54132,
                          "name": "market",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 54120,
                          "src": "2612:6:61",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Market_$51501_memory_ptr",
                            "typeString": "struct PredictionMarket.Market memory"
                          }
                        },
                        "id": 54133,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "2619:17:61",
                        "memberName": "assertedOutcomeId",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 51484,
                        "src": "2612:24:61",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "id": 54137,
                                "name": "outcome1",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 52801,
                                "src": "2654:8:61",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_string_storage",
                                  "typeString": "string storage ref"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_string_storage",
                                  "typeString": "string storage ref"
                                }
                              ],
                              "id": 54136,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "2648:5:61",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
                                "typeString": "type(bytes storage pointer)"
                              },
                              "typeName": {
                                "id": 54135,
                                "name": "bytes",
                                "nodeType": "ElementaryTypeName",
                                "src": "2648:5:61",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 54138,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "2648:15:61",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_storage_ptr",
                              "typeString": "bytes storage pointer"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes_storage_ptr",
                              "typeString": "bytes storage pointer"
                            }
                          ],
                          "id": 54134,
                          "name": "keccak256",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -8,
                          "src": "2638:9:61",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                            "typeString": "function (bytes memory) pure returns (bytes32)"
                          }
                        },
                        "id": 54139,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2638:26:61",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      ],
                      "id": 54131,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        2485,
                        2510,
                        2523,
                        2539,
                        2581,
                        2623,
                        2665,
                        2702,
                        2739,
                        2776,
                        320,
                        345,
                        375,
                        400,
                        459,
                        484,
                        514,
                        539,
                        2012,
                        2047
                      ],
                      "referencedDeclaration": 375,
                      "src": "2603:8:61",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_bytes32_$returns$__$",
                        "typeString": "function (bytes32,bytes32)"
                      }
                    },
                    "id": 54140,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2603:62:61",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 54141,
                  "nodeType": "ExpressionStatement",
                  "src": "2603:62:61"
                }
              ]
            },
            "functionSelector": "dbd07b77",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "test_ResolveMarketWithWrongDispute",
            "nameLocation": "1414:34:61",
            "parameters": {
              "id": 54041,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1448:2:61"
            },
            "returnParameters": {
              "id": 54042,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1458:0:61"
            },
            "scope": 54337,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 54251,
            "nodeType": "FunctionDefinition",
            "src": "2678:1242:61",
            "nodes": [],
            "body": {
              "id": 54250,
              "nodeType": "Block",
              "src": "2729:1191:61",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    54147
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 54147,
                      "mutability": "mutable",
                      "name": "assertionId",
                      "nameLocation": "2747:11:61",
                      "nodeType": "VariableDeclaration",
                      "scope": 54250,
                      "src": "2739:19:61",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 54146,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "2739:7:61",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 54152,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 54149,
                        "name": "marketId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 53936,
                        "src": "2775:8:61",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "id": 54150,
                        "name": "outcome1",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 52801,
                        "src": "2785:8:61",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_storage",
                          "typeString": "string storage ref"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_string_storage",
                          "typeString": "string storage ref"
                        }
                      ],
                      "id": 54148,
                      "name": "_assertMarket",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 52974,
                      "src": "2761:13:61",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_string_memory_ptr_$returns$_t_bytes32_$",
                        "typeString": "function (bytes32,string memory) returns (bytes32)"
                      }
                    },
                    "id": 54151,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2761:33:61",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2739:55:61"
                },
                {
                  "assignments": [
                    54154
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 54154,
                      "mutability": "mutable",
                      "name": "pmBalanceBefore",
                      "nameLocation": "2812:15:61",
                      "nodeType": "VariableDeclaration",
                      "scope": 54250,
                      "src": "2804:23:61",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 54153,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "2804:7:61",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 54162,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 54159,
                            "name": "predictionMarket",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 52798,
                            "src": "2864:16:61",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_PredictionMarket_$52420",
                              "typeString": "contract PredictionMarket"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_PredictionMarket_$52420",
                              "typeString": "contract PredictionMarket"
                            }
                          ],
                          "id": 54158,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "2856:7:61",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 54157,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "2856:7:61",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 54160,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2856:25:61",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 54155,
                        "name": "defaultCurrency",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 54368,
                        "src": "2830:15:61",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_TestnetERC20_$48449",
                          "typeString": "contract TestnetERC20"
                        }
                      },
                      "id": 54156,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "2846:9:61",
                      "memberName": "balanceOf",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 43552,
                      "src": "2830:25:61",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) view external returns (uint256)"
                      }
                    },
                    "id": 54161,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2830:52:61",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2804:78:61"
                },
                {
                  "assignments": [
                    54165
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 54165,
                      "mutability": "mutable",
                      "name": "oracleRequest",
                      "nameLocation": "3037:13:61",
                      "nodeType": "VariableDeclaration",
                      "scope": 54250,
                      "src": "3016:34:61",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_OracleRequest_$54352_memory_ptr",
                        "typeString": "struct CommonOptimisticOracleV3Test.OracleRequest"
                      },
                      "typeName": {
                        "id": 54164,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 54163,
                          "name": "OracleRequest",
                          "nameLocations": [
                            "3016:13:61"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 54352,
                          "src": "3016:13:61"
                        },
                        "referencedDeclaration": 54352,
                        "src": "3016:13:61",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_OracleRequest_$54352_storage_ptr",
                          "typeString": "struct CommonOptimisticOracleV3Test.OracleRequest"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 54170,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 54167,
                        "name": "assertionId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 54147,
                        "src": "3081:11:61",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "id": 54168,
                        "name": "requiredBond",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 52812,
                        "src": "3094:12:61",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 54166,
                      "name": "_disputeAndGetOracleRequest",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 54808,
                      "src": "3053:27:61",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_uint256_$returns$_t_struct$_OracleRequest_$54352_memory_ptr_$",
                        "typeString": "function (bytes32,uint256) returns (struct CommonOptimisticOracleV3Test.OracleRequest memory)"
                      }
                    },
                    "id": 54169,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3053:54:61",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_OracleRequest_$54352_memory_ptr",
                      "typeString": "struct CommonOptimisticOracleV3Test.OracleRequest memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3016:91:61"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 54174,
                            "name": "mockOracle",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 54377,
                            "src": "3145:10:61",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_MockOracleAncillary_$49768",
                              "typeString": "contract MockOracleAncillary"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_MockOracleAncillary_$49768",
                              "typeString": "contract MockOracleAncillary"
                            }
                          ],
                          "id": 54173,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "3137:7:61",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 54172,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "3137:7:61",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 54175,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3137:19:61",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 54176,
                        "name": "oracleRequest",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 54165,
                        "src": "3158:13:61",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_OracleRequest_$54352_memory_ptr",
                          "typeString": "struct CommonOptimisticOracleV3Test.OracleRequest memory"
                        }
                      },
                      {
                        "hexValue": "66616c7365",
                        "id": 54177,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3173:5:61",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "false"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_struct$_OracleRequest_$54352_memory_ptr",
                          "typeString": "struct CommonOptimisticOracleV3Test.OracleRequest memory"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 54171,
                      "name": "_mockOracleResolved",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 54666,
                      "src": "3117:19:61",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_struct$_OracleRequest_$54352_memory_ptr_$_t_bool_$returns$__$",
                        "typeString": "function (address,struct CommonOptimisticOracleV3Test.OracleRequest memory,bool)"
                      }
                    },
                    "id": 54178,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3117:62:61",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 54179,
                  "nodeType": "ExpressionStatement",
                  "src": "3117:62:61"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 54185,
                            "name": "predictionMarket",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 52798,
                            "src": "3224:16:61",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_PredictionMarket_$52420",
                              "typeString": "contract PredictionMarket"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_PredictionMarket_$52420",
                              "typeString": "contract PredictionMarket"
                            }
                          ],
                          "id": 54184,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "3216:7:61",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 54183,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "3216:7:61",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 54186,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3216:25:61",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "expression": {
                              "id": 54189,
                              "name": "predictionMarket",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 52798,
                              "src": "3270:16:61",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_PredictionMarket_$52420",
                                "typeString": "contract PredictionMarket"
                              }
                            },
                            "id": 54190,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "3287:25:61",
                            "memberName": "assertionResolvedCallback",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 52100,
                            "src": "3270:42:61",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_bytes32_$_t_bool_$returns$__$",
                              "typeString": "function (bytes32,bool) external"
                            }
                          },
                          {
                            "components": [
                              {
                                "id": 54191,
                                "name": "assertionId",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 54147,
                                "src": "3315:11:61",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes32",
                                  "typeString": "bytes32"
                                }
                              },
                              {
                                "hexValue": "66616c7365",
                                "id": 54192,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "bool",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "3328:5:61",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                },
                                "value": "false"
                              }
                            ],
                            "id": 54193,
                            "isConstant": false,
                            "isInlineArray": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "TupleExpression",
                            "src": "3314:20:61",
                            "typeDescriptions": {
                              "typeIdentifier": "t_tuple$_t_bytes32_$_t_bool_$",
                              "typeString": "tuple(bytes32,bool)"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_function_external_nonpayable$_t_bytes32_$_t_bool_$returns$__$",
                              "typeString": "function (bytes32,bool) external"
                            },
                            {
                              "typeIdentifier": "t_tuple$_t_bytes32_$_t_bool_$",
                              "typeString": "tuple(bytes32,bool)"
                            }
                          ],
                          "expression": {
                            "id": 54187,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -1,
                            "src": "3255:3:61",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 54188,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberLocation": "3259:10:61",
                          "memberName": "encodeCall",
                          "nodeType": "MemberAccess",
                          "src": "3255:14:61",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function () pure returns (bytes memory)"
                          }
                        },
                        "id": 54194,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3255:80:61",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "expression": {
                        "id": 54180,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2350,
                        "src": "3189:2:61",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$13921",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 54182,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "3192:10:61",
                      "memberName": "expectCall",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 13779,
                      "src": "3189:13:61",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (address,bytes memory) external"
                      }
                    },
                    "id": 54195,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3189:156:61",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 54196,
                  "nodeType": "ExpressionStatement",
                  "src": "3189:156:61"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 54200,
                            "name": "assertionId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 54147,
                            "src": "3414:11:61",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          ],
                          "expression": {
                            "id": 54198,
                            "name": "optimisticOracleV3",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 54365,
                            "src": "3367:18:61",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_OptimisticOracleV3_$51069",
                              "typeString": "contract OptimisticOracleV3"
                            }
                          },
                          "id": 54199,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "3386:27:61",
                          "memberName": "settleAndGetAssertionResult",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 50480,
                          "src": "3367:46:61",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_nonpayable$_t_bytes32_$returns$_t_bool_$",
                            "typeString": "function (bytes32) external returns (bool)"
                          }
                        },
                        "id": 54201,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3367:59:61",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 54197,
                      "name": "assertFalse",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        2435,
                        2449
                      ],
                      "referencedDeclaration": 2435,
                      "src": "3355:11:61",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bool_$returns$__$",
                        "typeString": "function (bool)"
                      }
                    },
                    "id": 54202,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3355:72:61",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 54203,
                  "nodeType": "ExpressionStatement",
                  "src": "3355:72:61"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "id": 54209,
                                "name": "predictionMarket",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 52798,
                                "src": "3542:16:61",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_PredictionMarket_$52420",
                                  "typeString": "contract PredictionMarket"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_PredictionMarket_$52420",
                                  "typeString": "contract PredictionMarket"
                                }
                              ],
                              "id": 54208,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "3534:7:61",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 54207,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "3534:7:61",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 54210,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "3534:25:61",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 54205,
                            "name": "defaultCurrency",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 54368,
                            "src": "3508:15:61",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TestnetERC20_$48449",
                              "typeString": "contract TestnetERC20"
                            }
                          },
                          "id": 54206,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "3524:9:61",
                          "memberName": "balanceOf",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 43552,
                          "src": "3508:25:61",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (address) view external returns (uint256)"
                          }
                        },
                        "id": 54211,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3508:52:61",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 54212,
                        "name": "pmBalanceBefore",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 54154,
                        "src": "3562:15:61",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 54204,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        2485,
                        2510,
                        2523,
                        2539,
                        2581,
                        2623,
                        2665,
                        2702,
                        2739,
                        2776,
                        320,
                        345,
                        375,
                        400,
                        459,
                        484,
                        514,
                        539,
                        2012,
                        2047
                      ],
                      "referencedDeclaration": 514,
                      "src": "3499:8:61",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 54213,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3499:79:61",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 54214,
                  "nodeType": "ExpressionStatement",
                  "src": "3499:79:61"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "id": 54220,
                                "name": "predictionMarket",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 52798,
                                "src": "3631:16:61",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_PredictionMarket_$52420",
                                  "typeString": "contract PredictionMarket"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_PredictionMarket_$52420",
                                  "typeString": "contract PredictionMarket"
                                }
                              ],
                              "id": 54219,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "3623:7:61",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 54218,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "3623:7:61",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 54221,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "3623:25:61",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 54216,
                            "name": "defaultCurrency",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 54368,
                            "src": "3597:15:61",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TestnetERC20_$48449",
                              "typeString": "contract TestnetERC20"
                            }
                          },
                          "id": 54217,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "3613:9:61",
                          "memberName": "balanceOf",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 43552,
                          "src": "3597:25:61",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (address) view external returns (uint256)"
                          }
                        },
                        "id": 54222,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3597:52:61",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 54223,
                        "name": "reward",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 52810,
                        "src": "3651:6:61",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 54215,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        2485,
                        2510,
                        2523,
                        2539,
                        2581,
                        2623,
                        2665,
                        2702,
                        2739,
                        2776,
                        320,
                        345,
                        375,
                        400,
                        459,
                        484,
                        514,
                        539,
                        2012,
                        2047
                      ],
                      "referencedDeclaration": 514,
                      "src": "3588:8:61",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 54224,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3588:70:61",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 54225,
                  "nodeType": "ExpressionStatement",
                  "src": "3588:70:61"
                },
                {
                  "assignments": [
                    54230
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 54230,
                      "mutability": "mutable",
                      "name": "market",
                      "nameLocation": "3774:6:61",
                      "nodeType": "VariableDeclaration",
                      "scope": 54250,
                      "src": "3743:37:61",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Market_$51501_memory_ptr",
                        "typeString": "struct PredictionMarket.Market"
                      },
                      "typeName": {
                        "id": 54229,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 54228,
                          "name": "PredictionMarket.Market",
                          "nameLocations": [
                            "3743:16:61",
                            "3760:6:61"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 51501,
                          "src": "3743:23:61"
                        },
                        "referencedDeclaration": 51501,
                        "src": "3743:23:61",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Market_$51501_storage_ptr",
                          "typeString": "struct PredictionMarket.Market"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 54235,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 54233,
                        "name": "marketId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 53936,
                        "src": "3810:8:61",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      ],
                      "expression": {
                        "id": 54231,
                        "name": "predictionMarket",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 52798,
                        "src": "3783:16:61",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_PredictionMarket_$52420",
                          "typeString": "contract PredictionMarket"
                        }
                      },
                      "id": 54232,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "3800:9:61",
                      "memberName": "getMarket",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 51647,
                      "src": "3783:26:61",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_bytes32_$returns$_t_struct$_Market_$51501_memory_ptr_$",
                        "typeString": "function (bytes32) view external returns (struct PredictionMarket.Market memory)"
                      }
                    },
                    "id": 54234,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3783:36:61",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Market_$51501_memory_ptr",
                      "typeString": "struct PredictionMarket.Market memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3743:76:61"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 54237,
                          "name": "market",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 54230,
                          "src": "3841:6:61",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Market_$51501_memory_ptr",
                            "typeString": "struct PredictionMarket.Market memory"
                          }
                        },
                        "id": 54238,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "3848:8:61",
                        "memberName": "resolved",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 51482,
                        "src": "3841:15:61",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 54236,
                      "name": "assertFalse",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        2435,
                        2449
                      ],
                      "referencedDeclaration": 2435,
                      "src": "3829:11:61",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bool_$returns$__$",
                        "typeString": "function (bool)"
                      }
                    },
                    "id": 54239,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3829:28:61",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 54240,
                  "nodeType": "ExpressionStatement",
                  "src": "3829:28:61"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 54242,
                          "name": "market",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 54230,
                          "src": "3876:6:61",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Market_$51501_memory_ptr",
                            "typeString": "struct PredictionMarket.Market memory"
                          }
                        },
                        "id": 54243,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "3883:17:61",
                        "memberName": "assertedOutcomeId",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 51484,
                        "src": "3876:24:61",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "hexValue": "30",
                            "id": 54246,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "3910:1:61",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 54245,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "3902:7:61",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_bytes32_$",
                            "typeString": "type(bytes32)"
                          },
                          "typeName": {
                            "id": 54244,
                            "name": "bytes32",
                            "nodeType": "ElementaryTypeName",
                            "src": "3902:7:61",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 54247,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3902:10:61",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      ],
                      "id": 54241,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        2485,
                        2510,
                        2523,
                        2539,
                        2581,
                        2623,
                        2665,
                        2702,
                        2739,
                        2776,
                        320,
                        345,
                        375,
                        400,
                        459,
                        484,
                        514,
                        539,
                        2012,
                        2047
                      ],
                      "referencedDeclaration": 375,
                      "src": "3867:8:61",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_bytes32_$returns$__$",
                        "typeString": "function (bytes32,bytes32)"
                      }
                    },
                    "id": 54248,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3867:46:61",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 54249,
                  "nodeType": "ExpressionStatement",
                  "src": "3867:46:61"
                }
              ]
            },
            "functionSelector": "635e6115",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "test_AssertionWithCorrectDispute",
            "nameLocation": "2687:32:61",
            "parameters": {
              "id": 54144,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2719:2:61"
            },
            "returnParameters": {
              "id": 54145,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2729:0:61"
            },
            "scope": 54337,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 54336,
            "nodeType": "FunctionDefinition",
            "src": "3926:1025:61",
            "nodes": [],
            "body": {
              "id": 54335,
              "nodeType": "Block",
              "src": "3982:969:61",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    54255
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 54255,
                      "mutability": "mutable",
                      "name": "assertionId",
                      "nameLocation": "4000:11:61",
                      "nodeType": "VariableDeclaration",
                      "scope": 54335,
                      "src": "3992:19:61",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 54254,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "3992:7:61",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 54260,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 54257,
                        "name": "marketId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 53936,
                        "src": "4028:8:61",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "id": 54258,
                        "name": "outcome1",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 52801,
                        "src": "4038:8:61",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_storage",
                          "typeString": "string storage ref"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_string_storage",
                          "typeString": "string storage ref"
                        }
                      ],
                      "id": 54256,
                      "name": "_assertMarket",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 52974,
                      "src": "4014:13:61",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_string_memory_ptr_$returns$_t_bytes32_$",
                        "typeString": "function (bytes32,string memory) returns (bytes32)"
                      }
                    },
                    "id": 54259,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4014:33:61",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3992:55:61"
                },
                {
                  "assignments": [
                    54263
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 54263,
                      "mutability": "mutable",
                      "name": "oracleRequest",
                      "nameLocation": "4149:13:61",
                      "nodeType": "VariableDeclaration",
                      "scope": 54335,
                      "src": "4128:34:61",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_OracleRequest_$54352_memory_ptr",
                        "typeString": "struct CommonOptimisticOracleV3Test.OracleRequest"
                      },
                      "typeName": {
                        "id": 54262,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 54261,
                          "name": "OracleRequest",
                          "nameLocations": [
                            "4128:13:61"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 54352,
                          "src": "4128:13:61"
                        },
                        "referencedDeclaration": 54352,
                        "src": "4128:13:61",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_OracleRequest_$54352_storage_ptr",
                          "typeString": "struct CommonOptimisticOracleV3Test.OracleRequest"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 54268,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 54265,
                        "name": "assertionId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 54255,
                        "src": "4193:11:61",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "id": 54266,
                        "name": "requiredBond",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 52812,
                        "src": "4206:12:61",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 54264,
                      "name": "_disputeAndGetOracleRequest",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 54808,
                      "src": "4165:27:61",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_uint256_$returns$_t_struct$_OracleRequest_$54352_memory_ptr_$",
                        "typeString": "function (bytes32,uint256) returns (struct CommonOptimisticOracleV3Test.OracleRequest memory)"
                      }
                    },
                    "id": 54267,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4165:54:61",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_OracleRequest_$54352_memory_ptr",
                      "typeString": "struct CommonOptimisticOracleV3Test.OracleRequest memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4128:91:61"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 54272,
                            "name": "mockOracle",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 54377,
                            "src": "4257:10:61",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_MockOracleAncillary_$49768",
                              "typeString": "contract MockOracleAncillary"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_MockOracleAncillary_$49768",
                              "typeString": "contract MockOracleAncillary"
                            }
                          ],
                          "id": 54271,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "4249:7:61",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 54270,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "4249:7:61",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 54273,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4249:19:61",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 54274,
                        "name": "oracleRequest",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 54263,
                        "src": "4270:13:61",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_OracleRequest_$54352_memory_ptr",
                          "typeString": "struct CommonOptimisticOracleV3Test.OracleRequest memory"
                        }
                      },
                      {
                        "hexValue": "66616c7365",
                        "id": 54275,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4285:5:61",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "false"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_struct$_OracleRequest_$54352_memory_ptr",
                          "typeString": "struct CommonOptimisticOracleV3Test.OracleRequest memory"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 54269,
                      "name": "_mockOracleResolved",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 54666,
                      "src": "4229:19:61",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_struct$_OracleRequest_$54352_memory_ptr_$_t_bool_$returns$__$",
                        "typeString": "function (address,struct CommonOptimisticOracleV3Test.OracleRequest memory,bool)"
                      }
                    },
                    "id": 54276,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4229:62:61",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 54277,
                  "nodeType": "ExpressionStatement",
                  "src": "4229:62:61"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 54281,
                            "name": "assertionId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 54255,
                            "src": "4360:11:61",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          ],
                          "expression": {
                            "id": 54279,
                            "name": "optimisticOracleV3",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 54365,
                            "src": "4313:18:61",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_OptimisticOracleV3_$51069",
                              "typeString": "contract OptimisticOracleV3"
                            }
                          },
                          "id": 54280,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "4332:27:61",
                          "memberName": "settleAndGetAssertionResult",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 50480,
                          "src": "4313:46:61",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_nonpayable$_t_bytes32_$returns$_t_bool_$",
                            "typeString": "function (bytes32) external returns (bool)"
                          }
                        },
                        "id": 54282,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4313:59:61",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 54278,
                      "name": "assertFalse",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        2435,
                        2449
                      ],
                      "referencedDeclaration": 2435,
                      "src": "4301:11:61",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bool_$returns$__$",
                        "typeString": "function (bool)"
                      }
                    },
                    "id": 54283,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4301:72:61",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 54284,
                  "nodeType": "ExpressionStatement",
                  "src": "4301:72:61"
                },
                {
                  "assignments": [
                    54286
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 54286,
                      "mutability": "mutable",
                      "name": "secondAssertionId",
                      "nameLocation": "4460:17:61",
                      "nodeType": "VariableDeclaration",
                      "scope": 54335,
                      "src": "4452:25:61",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 54285,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "4452:7:61",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 54291,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 54288,
                        "name": "marketId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 53936,
                        "src": "4494:8:61",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "id": 54289,
                        "name": "outcome2",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 52804,
                        "src": "4504:8:61",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_storage",
                          "typeString": "string storage ref"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_string_storage",
                          "typeString": "string storage ref"
                        }
                      ],
                      "id": 54287,
                      "name": "_assertMarket",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 52974,
                      "src": "4480:13:61",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_string_memory_ptr_$returns$_t_bytes32_$",
                        "typeString": "function (bytes32,string memory) returns (bytes32)"
                      }
                    },
                    "id": 54290,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4480:33:61",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4452:61:61"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 54299,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "expression": {
                              "id": 54295,
                              "name": "timer",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 54371,
                              "src": "4544:5:61",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_Timer_$48484",
                                "typeString": "contract Timer"
                              }
                            },
                            "id": 54296,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "4550:14:61",
                            "memberName": "getCurrentTime",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 48483,
                            "src": "4544:20:61",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$",
                              "typeString": "function () view external returns (uint256)"
                            }
                          },
                          "id": 54297,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4544:22:61",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "+",
                        "rightExpression": {
                          "id": 54298,
                          "name": "defaultLiveness",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 54401,
                          "src": "4569:15:61",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint64",
                            "typeString": "uint64"
                          }
                        },
                        "src": "4544:40:61",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 54292,
                        "name": "timer",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 54371,
                        "src": "4523:5:61",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Timer_$48484",
                          "typeString": "contract Timer"
                        }
                      },
                      "id": 54294,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "4529:14:61",
                      "memberName": "setCurrentTime",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 48474,
                      "src": "4523:20:61",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256) external"
                      }
                    },
                    "id": 54300,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4523:62:61",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 54301,
                  "nodeType": "ExpressionStatement",
                  "src": "4523:62:61"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 54305,
                            "name": "secondAssertionId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 54286,
                            "src": "4654:17:61",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          ],
                          "expression": {
                            "id": 54303,
                            "name": "optimisticOracleV3",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 54365,
                            "src": "4607:18:61",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_OptimisticOracleV3_$51069",
                              "typeString": "contract OptimisticOracleV3"
                            }
                          },
                          "id": 54304,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "4626:27:61",
                          "memberName": "settleAndGetAssertionResult",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 50480,
                          "src": "4607:46:61",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_nonpayable$_t_bytes32_$returns$_t_bool_$",
                            "typeString": "function (bytes32) external returns (bool)"
                          }
                        },
                        "id": 54306,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4607:65:61",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 54302,
                      "name": "assertTrue",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        269,
                        290
                      ],
                      "referencedDeclaration": 269,
                      "src": "4596:10:61",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bool_$returns$__$",
                        "typeString": "function (bool)"
                      }
                    },
                    "id": 54307,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4596:77:61",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 54308,
                  "nodeType": "ExpressionStatement",
                  "src": "4596:77:61"
                },
                {
                  "assignments": [
                    54313
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 54313,
                      "mutability": "mutable",
                      "name": "market",
                      "nameLocation": "4790:6:61",
                      "nodeType": "VariableDeclaration",
                      "scope": 54335,
                      "src": "4759:37:61",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Market_$51501_memory_ptr",
                        "typeString": "struct PredictionMarket.Market"
                      },
                      "typeName": {
                        "id": 54312,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 54311,
                          "name": "PredictionMarket.Market",
                          "nameLocations": [
                            "4759:16:61",
                            "4776:6:61"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 51501,
                          "src": "4759:23:61"
                        },
                        "referencedDeclaration": 51501,
                        "src": "4759:23:61",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Market_$51501_storage_ptr",
                          "typeString": "struct PredictionMarket.Market"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 54318,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 54316,
                        "name": "marketId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 53936,
                        "src": "4826:8:61",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      ],
                      "expression": {
                        "id": 54314,
                        "name": "predictionMarket",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 52798,
                        "src": "4799:16:61",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_PredictionMarket_$52420",
                          "typeString": "contract PredictionMarket"
                        }
                      },
                      "id": 54315,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "4816:9:61",
                      "memberName": "getMarket",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 51647,
                      "src": "4799:26:61",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_bytes32_$returns$_t_struct$_Market_$51501_memory_ptr_$",
                        "typeString": "function (bytes32) view external returns (struct PredictionMarket.Market memory)"
                      }
                    },
                    "id": 54317,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4799:36:61",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Market_$51501_memory_ptr",
                      "typeString": "struct PredictionMarket.Market memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4759:76:61"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 54320,
                          "name": "market",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 54313,
                          "src": "4856:6:61",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Market_$51501_memory_ptr",
                            "typeString": "struct PredictionMarket.Market memory"
                          }
                        },
                        "id": 54321,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "4863:8:61",
                        "memberName": "resolved",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 51482,
                        "src": "4856:15:61",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 54319,
                      "name": "assertTrue",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        269,
                        290
                      ],
                      "referencedDeclaration": 269,
                      "src": "4845:10:61",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bool_$returns$__$",
                        "typeString": "function (bool)"
                      }
                    },
                    "id": 54322,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4845:27:61",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 54323,
                  "nodeType": "ExpressionStatement",
                  "src": "4845:27:61"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 54325,
                          "name": "market",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 54313,
                          "src": "4891:6:61",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Market_$51501_memory_ptr",
                            "typeString": "struct PredictionMarket.Market memory"
                          }
                        },
                        "id": 54326,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "4898:17:61",
                        "memberName": "assertedOutcomeId",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 51484,
                        "src": "4891:24:61",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "id": 54330,
                                "name": "outcome2",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 52804,
                                "src": "4933:8:61",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_string_storage",
                                  "typeString": "string storage ref"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_string_storage",
                                  "typeString": "string storage ref"
                                }
                              ],
                              "id": 54329,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "4927:5:61",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
                                "typeString": "type(bytes storage pointer)"
                              },
                              "typeName": {
                                "id": 54328,
                                "name": "bytes",
                                "nodeType": "ElementaryTypeName",
                                "src": "4927:5:61",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 54331,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "4927:15:61",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_storage_ptr",
                              "typeString": "bytes storage pointer"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes_storage_ptr",
                              "typeString": "bytes storage pointer"
                            }
                          ],
                          "id": 54327,
                          "name": "keccak256",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -8,
                          "src": "4917:9:61",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                            "typeString": "function (bytes memory) pure returns (bytes32)"
                          }
                        },
                        "id": 54332,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4917:26:61",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      ],
                      "id": 54324,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        2485,
                        2510,
                        2523,
                        2539,
                        2581,
                        2623,
                        2665,
                        2702,
                        2739,
                        2776,
                        320,
                        345,
                        375,
                        400,
                        459,
                        484,
                        514,
                        539,
                        2012,
                        2047
                      ],
                      "referencedDeclaration": 375,
                      "src": "4882:8:61",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_bytes32_$returns$__$",
                        "typeString": "function (bytes32,bytes32)"
                      }
                    },
                    "id": 54333,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4882:62:61",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 54334,
                  "nodeType": "ExpressionStatement",
                  "src": "4882:62:61"
                }
              ]
            },
            "functionSelector": "eeec8397",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "test_ResolveMarketAfterCorrectDispute",
            "nameLocation": "3935:37:61",
            "parameters": {
              "id": 54252,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3972:2:61"
            },
            "returnParameters": {
              "id": 54253,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3982:0:61"
            },
            "scope": 54337,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 53933,
              "name": "PredictionMarketTestCommon",
              "nameLocations": [
                "147:26:61"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 53254,
              "src": "147:26:61"
            },
            "id": 53934,
            "nodeType": "InheritanceSpecifier",
            "src": "147:26:61"
          }
        ],
        "canonicalName": "PredictionMarketResolveTest",
        "contractDependencies": [
          51152,
          52420,
          55724
        ],
        "contractKind": "contract",
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          54337,
          53254,
          55103,
          55110,
          12215,
          12164,
          7700,
          7375,
          6582,
          4522,
          3784,
          2291,
          2357,
          2354
        ],
        "name": "PredictionMarketResolveTest",
        "nameLocation": "116:27:61",
        "scope": 54338,
        "usedErrors": []
      }
    ],
    "license": "AGPL-3.0-only"
  },
  "id": 61
}