{
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_finder",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_currency",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_optimisticOracleV3",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "marketId",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "creditsMinted",
          "type": "uint256"
        }
      ],
      "name": "CreditsMinted",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "marketId",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "assertionId",
          "type": "bytes32"
        }
      ],
      "name": "FalsePromisedDeclared",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "marketId",
          "type": "bytes32"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "description",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "reward",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "requiredBond",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        }
      ],
      "name": "MarketInitialized",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "marketId",
          "type": "bytes32"
        }
      ],
      "name": "MarketResolved",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "marketId",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "individualReward",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "creditReceived",
          "type": "uint256"
        }
      ],
      "name": "MarketSettled",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "marketId",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "ValidatorRegistered",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "accountBalance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "name": "assertedMarkets",
      "outputs": [
        {
          "internalType": "address",
          "name": "asserter",
          "type": "address"
        },
        {
          "internalType": "bytes32",
          "name": "marketId",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "assertionId",
          "type": "bytes32"
        }
      ],
      "name": "assertionDisputedCallback",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "assertionLiveness",
      "outputs": [
        {
          "internalType": "uint64",
          "name": "",
          "type": "uint64"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "assertionId",
          "type": "bytes32"
        },
        {
          "internalType": "bool",
          "name": "assertedTruthfully",
          "type": "bool"
        }
      ],
      "name": "assertionResolvedCallback",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "marketId",
          "type": "bytes32"
        }
      ],
      "name": "carbonCreditBalance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "marketId",
          "type": "bytes32"
        },
        {
          "internalType": "uint64",
          "name": "state",
          "type": "uint64"
        }
      ],
      "name": "changeMarketState",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "marketId",
          "type": "bytes32"
        }
      ],
      "name": "convertibleCarbonCreditBalance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "currency",
      "outputs": [
        {
          "internalType": "contract IERC20",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "data_oo",
      "outputs": [
        {
          "internalType": "contract OptimisticOracleV3Interface",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "marketId",
          "type": "bytes32"
        }
      ],
      "name": "declareFalsePromise",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "assertionId",
          "type": "bytes32"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "defaultIdentifier",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "finder",
      "outputs": [
        {
          "internalType": "contract FinderInterface",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "marketId",
          "type": "bytes32"
        }
      ],
      "name": "getMarket",
      "outputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "owner",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "requiredBond",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "reward",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "creditCap",
              "type": "uint256"
            },
            {
              "internalType": "contract ExpandedIERC20",
              "name": "carbonCredit",
              "type": "address"
            },
            {
              "internalType": "contract ExpandedIERC20",
              "name": "convertibleCarbonCredit",
              "type": "address"
            },
            {
              "internalType": "contract ExpandedIERC20",
              "name": "validatorToken",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "startingTime",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "openingPeriod",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "auditPeriod",
              "type": "uint256"
            },
            {
              "internalType": "string",
              "name": "description",
              "type": "string"
            },
            {
              "internalType": "bool",
              "name": "promiseDelivered",
              "type": "bool"
            },
            {
              "internalType": "uint64",
              "name": "marketState",
              "type": "uint64"
            }
          ],
          "internalType": "struct CarbonUMArket.Market",
          "name": "",
          "type": "tuple"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "marketId",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "data_optimisticOracleV3",
          "type": "address"
        }
      ],
      "name": "initializeDataPool",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_reward",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_requiredBond",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_creditCap",
          "type": "uint256"
        },
        {
          "internalType": "string",
          "name": "_description",
          "type": "string"
        },
        {
          "internalType": "uint256",
          "name": "_openingPeriod",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_auditPeriod",
          "type": "uint256"
        }
      ],
      "name": "initializeMarket",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "marketId",
          "type": "bytes32"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "name": "markets",
      "outputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "requiredBond",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "reward",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "creditCap",
          "type": "uint256"
        },
        {
          "internalType": "contract ExpandedIERC20",
          "name": "carbonCredit",
          "type": "address"
        },
        {
          "internalType": "contract ExpandedIERC20",
          "name": "convertibleCarbonCredit",
          "type": "address"
        },
        {
          "internalType": "contract ExpandedIERC20",
          "name": "validatorToken",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "startingTime",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "openingPeriod",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "auditPeriod",
          "type": "uint256"
        },
        {
          "internalType": "string",
          "name": "description",
          "type": "string"
        },
        {
          "internalType": "bool",
          "name": "promiseDelivered",
          "type": "bool"
        },
        {
          "internalType": "uint64",
          "name": "marketState",
          "type": "uint64"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "marketId",
          "type": "bytes32"
        },
        {
          "internalType": "uint256",
          "name": "creditToCreate",
          "type": "uint256"
        }
      ],
      "name": "mintCredit",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "oo",
      "outputs": [
        {
          "internalType": "contract OptimisticOracleV3Interface",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "marketId",
          "type": "bytes32"
        }
      ],
      "name": "registerValidator",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "marketId",
          "type": "bytes32"
        }
      ],
      "name": "settleMarket",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "marketId",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "dataAsserterAddress",
          "type": "address"
        }
      ],
      "name": "settleValidatorToken",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "marketId",
          "type": "bytes32"
        },
        {
          "internalType": "bytes32",
          "name": "dataId",
          "type": "bytes32"
        },
        {
          "internalType": "string",
          "name": "dataPath",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "description",
          "type": "string"
        },
        {
          "internalType": "address",
          "name": "dataAsserterAddress",
          "type": "address"
        }
      ],
      "name": "submitAndAssertData",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "assertionId",
          "type": "bytes32"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "validatorFee",
      "outputs": [
        {
          "internalType": "uint64",
          "name": "",
          "type": "uint64"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "bytecode": {
    "object": "",
    "sourceMap": "895:13822:0:-:0;;;3289:309;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;3405:33:0;;;;;3448:28;;;;;3486:53;;;;;;3569:22;;;-1:-1:-1;;;3569:22:0;;;;:20;;:22;;;;;;;;;;;;;;;3486:53;3569:22;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;3549:42;;-1:-1:-1;895:13822:0;;-1:-1:-1;;895:13822:0;14:177:73;93:13;;-1:-1:-1;;;;;135:31:73;;125:42;;115:70;;181:1;178;171:12;115:70;14:177;;;:::o;196:378::-;284:6;292;300;353:2;341:9;332:7;328:23;324:32;321:52;;;369:1;366;359:12;321:52;392:40;422:9;392:40;:::i;:::-;382:50;;451:49;496:2;485:9;481:18;451:49;:::i;:::-;441:59;;519:49;564:2;553:9;549:18;519:49;:::i;:::-;509:59;;196:378;;;;;:::o;579:184::-;649:6;702:2;690:9;681:7;677:23;673:32;670:52;;;718:1;715;708:12;670:52;-1:-1:-1;741:16:73;;579:184;-1:-1:-1;579:184:73:o;:::-;895:13822:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x60806040523480156200001157600080fd5b5060043610620001755760003560e01c8063b0a1c1c411620000d3578063d448a4ec1162000086578063d448a4ec14620003b4578063d509b01714620003c8578063d79318d414620003f0578063e039c00e1462000407578063e5a6b10f146200041e578063f1b156b2146200044657600080fd5b8063b0a1c1c414620002f6578063b75d4e241462000300578063b9a3c84c1462000309578063bac6d3c11462000331578063c3c95c7b1462000348578063d4107645146200036e57600080fd5b80638921a614116200012c5780638921a61414620002455780638b5735241462000286578063a7f0de81146200029d578063ad7be66814620002b4578063aea59c7414620002cb578063af2b57ce14620002e257600080fd5b80631122cca3146200017a5780633f6d825614620001a4578063481e9c6b14620001cc578063607049d814620001e55780637564912b14620001fc57806382f7b9ac146200022e575b600080fd5b620001916200018b366004620030bf565b6200045d565b6040519081526020015b60405180910390f35b620001b366038d7ea4c6800081565b6040516001600160401b0390911681526020016200019b565b620001e3620001dd366004620030d9565b62000932565b005b620001e3620001f6366004620030bf565b62000a2a565b620002136200020d366004620030bf565b62000cad565b6040516200019b9d9c9b9a999897969594939291906200316b565b620001916200023f366004620030bf565b62000dc5565b6200026d7f000000000000000000000000000000000000000000000000000000000000000081565b6040516001600160a01b0390911681526020016200019b565b620001e36200029736600462003219565b62000e4e565b620001e3620002ae36600462003241565b6200108b565b62000191620002c53660046200327a565b62001468565b62000191620002dc366004620033ae565b62001ac1565b6000546200026d906001600160a01b031681565b6200019162001f14565b620001b3607881565b6200026d7f000000000000000000000000000000000000000000000000000000000000000081565b6200019162000342366004620030bf565b62001fa7565b6200035f62000359366004620030bf565b62001fe7565b6040516200019b91906200344d565b620003a46200037f366004620030bf565b600260205260009081526040902080546001909101546001600160a01b039091169082565b6040516200019b92919062003547565b620001e3620003c5366004620030bf565b50565b620001917f000000000000000000000000000000000000000000000000000000000000000081565b6200026d6200040136600462003219565b620021ad565b620001e362000418366004620030bf565b6200238d565b6200026d7f000000000000000000000000000000000000000000000000000000000000000081565b620001e3620004573660046200356f565b6200286f565b600081815260016020526040812060088101546007820154620004819190620035ad565b4210158015620004b65750806009015481600801548260070154620004a79190620035ad565b620004b39190620035ad565b42105b80620004d55750600b8101546001600160401b03610100909104166001145b620005335760405162461bcd60e51b815260206004820152602360248201527f50726f6a656374206973206e6f7420726561647920666f72206175646974207960448201526265742160e81b60648201526084015b60405180910390fd5b80546001600160a01b0316620005855760405162461bcd60e51b815260206004820152601660248201527513585c9ad95d081b9bdd081a5b9a5d1a585b1a5e995960521b60448201526064016200052a565b6000838152600260205260409020546001600160a01b031615620005ec5760405162461bcd60e51b815260206004820152601760248201527f4d61726b657420616c726561647920617373657274656400000000000000000060448201526064016200052a565b604051634360af3d60e01b81526001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000811660048301526000917f000000000000000000000000000000000000000000000000000000000000000090911690634360af3d90602401602060405180830381865afa15801562000678573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200069e9190620035c3565b9050600081836001015411620006b55781620006bb565b82600101545b9050620006f46001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001633308462002b6f565b6200074a6001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000167f00000000000000000000000000000000000000000000000000000000000000008362002be2565b604051636457c97960e01b8152610120600482015260436101248201527f54686520696e737469747574696f6e2063616e6e6f742064656c6976657220746101448201527f68652070726f6d6973656420616d6f756e74206f6620636172626f6e2063726561016482015262191a5d60ea1b610184820152336024820152306044820152600060648201819052607860848301526001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000811660a484015260c483018490527f000000000000000000000000000000000000000000000000000000000000000060e48401526101048301919091527f00000000000000000000000000000000000000000000000000000000000000001690636457c979906101a4016020604051808303816000875af115801562000891573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620008b79190620035c3565b604080518082018252338152602080820189815260008581526002909252838220925183546001600160a01b0319166001600160a01b03909116178355516001909201919091559051919550859187917f584cc08a71081fce3cb80c249a3f322d34332812916fce18435e2d1a4468fa7091a3505050919050565b6000828152600160205260409020546001600160a01b03163314620009a55760405162461bcd60e51b815260206004820152602260248201527f4f6e6c79206f776e65722063616e206368616e6765206d61726b657420737461604482015261746560f01b60648201526084016200052a565b6002816001600160401b03161115620009f15760405162461bcd60e51b815260206004820152600d60248201526c496e76616c696420737461746560981b60448201526064016200052a565b600091825260016020526040909120600b0180546001600160401b039092166101000268ffffffffffffffff0019909216919091179055565b600081815260016020526040902060098101546008820154600783015462000a539190620035ad565b62000a5f9190620035ad565b42108062000a805750600b81015460026101009091046001600160401b0316105b62000a9f5760405162461bcd60e51b81526004016200052a90620035dd565b80546001600160a01b031662000af45760405162461bcd60e51b815260206004820152601960248201527813585c9ad95d081a5cc81b9bdd081a5b9a5d1a585b1a5e9959603a1b60448201526064016200052a565b60068101546040516370a0823160e01b81523360048201526001600160a01b03909116906370a0823190602401602060405180830381865afa15801562000b3f573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062000b659190620035c3565b1562000bc05760405162461bcd60e51b8152602060048201526024808201527f56616c696461746f722063616e207265676973746572206f6e6c79206f6e652060448201526374696d6560e01b60648201526084016200052a565b60068101546040516340c10f1960e01b81526001600160a01b03909116906340c10f199062000bf790339060019060040162003547565b6020604051808303816000875af115801562000c17573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062000c3d919062003609565b5062000c7c6001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016333066038d7ea4c6800062002b6f565b604051339083907fd2eefd4ce8a0e3945e0e703d5d36e37c6dfaa66a08807564ef3d863f76400a9190600090a35050565b600160208190526000918252604090912080549181015460028201546003830154600484015460058501546006860154600787015460088801546009890154600a8a0180546001600160a01b039c8d169c9a9b999a98999789169896871697969095169593949293919262000d229062003629565b80601f016020809104026020016040519081016040528092919081815260200182805462000d509062003629565b801562000da15780601f1062000d755761010080835404028352916020019162000da1565b820191906000526020600020905b81548152906001019060200180831162000d8357829003601f168201915b505050600b909301549192505060ff8116906001600160401b03610100909104168d565b60008181526001602052604080822060049081015491516370a0823160e01b815233918101919091526001600160a01b03909116906370a08231906024015b602060405180830381865afa15801562000e22573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062000e489190620035c3565b92915050565b6001600160a01b03811662000ea65760405162461bcd60e51b815260206004820152601960248201527f4461746120706f6f6c206e6f7420696e697469616c697a65640000000000000060448201526064016200052a565b600082815260016020526040902060098101546008820154600783015462000ecf9190620035ad565b62000edb9190620035ad565b4210158062000efc5750600b81015461010090046001600160401b03166002145b62000f4a5760405162461bcd60e51b815260206004820152601c60248201527f4d61726b6574206e6f7420726561647920666f7220736574746c65210000000060448201526064016200052a565b6000826001600160a01b0316634f7310876040518163ffffffff1660e01b8152600401602060405180830381865afa15801562000f8b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062000fb19190620035c3565b9050826001600160a01b031663faa0a2646040518163ffffffff1660e01b8152600401600060405180830381600087803b15801562000fef57600080fd5b505af115801562001004573d6000803e3d6000fd5b50505060068301546040516340c10f1960e01b81526001600160a01b0390911691506340c10f19906200103e903390859060040162003547565b6020604051808303816000875af11580156200105e573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062001084919062003609565b5050505050565b600082815260016020526040902060078101544210801590620010c2575080600801548160070154620010bf9190620035ad565b42105b80620010de5750600b81015461010090046001600160401b0316155b620011205760405162461bcd60e51b81526020600482015260116024820152704d61726b657420697320636c6f7365642160781b60448201526064016200052a565b80546001600160a01b0316620011755760405162461bcd60e51b815260206004820152601960248201527813585c9ad95d081a5cc81b9bdd081a5b9a5d1a585b1a5e9959603a1b60448201526064016200052a565b60008211620011e65760405162461bcd60e51b815260206004820152603660248201527f546865206e756d626572206f66206372656469742067656e65726174656420736044820152750686f756c6420626520626967676572207468616e20360541b60648201526084016200052a565b60008160040160009054906101000a90046001600160a01b03166001600160a01b03166318160ddd6040518163ffffffff1660e01b8152600401602060405180830381865afa1580156200123e573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620012649190620035c3565b6003830154909150620012788483620035ad565b11156200129682846003015462001290919062003665565b62002cf4565b604051602001620012a891906200367b565b60405160208183030381529060405290620012d85760405162461bcd60e51b81526004016200052a9190620036c1565b508154620013329033906001600160a01b0316620012ff86670de0b6b3a7640000620036d6565b6001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001692919062002b6f565b6004808301546040516340c10f1960e01b81526001600160a01b03909116916340c10f19916200136791309188910162003547565b6020604051808303816000875af115801562001387573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620013ad919062003609565b5060058201546040516340c10f1960e01b81526001600160a01b03909116906340c10f1990620013e4903390879060040162003547565b6020604051808303816000875af115801562001404573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200142a919062003609565b50604051838152339085907fb33c99b82010ff18b32d024f038afefb8096ad49050d8896e20cdd6df4e401ee9060200160405180910390a350505050565b600043853386604051602001620014839493929190620036f8565b60408051601f198184030181529181528151602092830120600081815260019093529120549091506001600160a01b031615620014fb5760405162461bcd60e51b81526020600482015260156024820152744d61726b657420616c72656164792065786973747360581b60448201526064016200052a565b60008460405160200162001510919062003731565b60405160208183030381529060405260016040516200152f90620030a3565b6200153c9291906200375e565b604051809103906000f08015801562001559573d6000803e3d6000fd5b509050600085604051602001620015719190620037a1565b60405160208183030381529060405260016040516200159090620030a3565b6200159d929190620037da565b604051809103906000f080158015620015ba573d6000803e3d6000fd5b509050600086604051602001620015d291906200381e565b6040516020818303038152906040526001604051620015f190620030a3565b620015fe92919062003854565b604051809103906000f0801580156200161b573d6000803e3d6000fd5b50604051634c1d96ab60e11b81523060048201529091506001600160a01b0384169063983b2d5690602401600060405180830381600087803b1580156200166157600080fd5b505af115801562001676573d6000803e3d6000fd5b5050604051634c1d96ab60e11b81523060048201526001600160a01b038516925063983b2d569150602401600060405180830381600087803b158015620016bc57600080fd5b505af1158015620016d1573d6000803e3d6000fd5b5050604051634c1d96ab60e11b81523060048201526001600160a01b038416925063983b2d569150602401600060405180830381600087803b1580156200171757600080fd5b505af11580156200172c573d6000803e3d6000fd5b5050604051637a231bdd60e11b81523060048201526001600160a01b038616925063f44637ba9150602401600060405180830381600087803b1580156200177257600080fd5b505af115801562001787573d6000803e3d6000fd5b5050604051637a231bdd60e11b81523060048201526001600160a01b038516925063f44637ba9150602401600060405180830381600087803b158015620017cd57600080fd5b505af1158015620017e2573d6000803e3d6000fd5b5050604051637a231bdd60e11b81523060048201526001600160a01b038416925063f44637ba9150602401600060405180830381600087803b1580156200182857600080fd5b505af11580156200183d573d6000803e3d6000fd5b505050506000429050604051806101a00160405280336001600160a01b031681526020018b81526020018c81526020018a8152602001856001600160a01b03168152602001846001600160a01b03168152602001836001600160a01b0316815260200182815260200188815260200187815260200189815260200160011515815260200160006001600160401b03168152506001600087815260200190815260200160002060008201518160000160006101000a8154816001600160a01b0302191690836001600160a01b0316021790555060208201518160010155604082015181600201556060820151816003015560808201518160040160006101000a8154816001600160a01b0302191690836001600160a01b0316021790555060a08201518160050160006101000a8154816001600160a01b0302191690836001600160a01b0316021790555060c08201518160060160006101000a8154816001600160a01b0302191690836001600160a01b0316021790555060e082015181600701556101008201518160080155610120820151816009015561014082015181600a019081620019ec9190620038e9565b50610160820151600b9091018054610180909301516001600160401b03166101000268ffffffffffffffff00199215159290921668ffffffffffffffffff1990931692909217179055891562001a735762001a736001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001633308d62002b6f565b847f1a49307b6f6ab1604ebafd15886fc4caa9e917f99e76d07d6b73e45f5713a22d898d8d3360405162001aab9493929190620039b5565b60405180910390a2505050509695505050505050565b60006001600160a01b03821662001b1b5760405162461bcd60e51b815260206004820152601860248201527f44617461706f6f6c206e6f7420696e697469616c697a6564000000000000000060448201526064016200052a565b600088815260016020526040902060098101546008820154600783015462001b449190620035ad565b62001b509190620035ad565b42108062001b715750600b81015460026101009091046001600160401b0316105b62001b905760405162461bcd60e51b81526004016200052a90620035dd565b600089815260016020526040908190206006015490516370a0823160e01b81523360048201526001600160a01b03909116906370a0823190602401602060405180830381865afa15801562001be9573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062001c0f9190620035c3565b60011462001c605760405162461bcd60e51b815260206004820152601e60248201527f4f6e6c792076616c696461746f722063616e207375626d69742064617461000060448201526064016200052a565b600083905062001d5f3330836001600160a01b0316638921a6146040518163ffffffff1660e01b8152600401602060405180830381865afa15801562001caa573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062001cd09190620039ef565b604051634360af3d60e01b81526001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000811660048301529190911690634360af3d90602401602060405180830381865afa15801562001d39573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620012ff9190620035c3565b62001e8a84826001600160a01b0316638921a6146040518163ffffffff1660e01b8152600401602060405180830381865afa15801562001da3573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062001dc99190620039ef565b604051634360af3d60e01b81526001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000811660048301529190911690634360af3d90602401602060405180830381865afa15801562001e32573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062001e589190620035c3565b6001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016919062002be2565b604051636f40874b60e11b81526001600160a01b0382169063de810e969062001ec0908c908c908c908c908c9060040162003a38565b6020604051808303816000875af115801562001ee0573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062001f069190620035c3565b9a9950505050505050505050565b6040516370a0823160e01b81523360048201526000907f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316906370a0823190602401602060405180830381865afa15801562001f7c573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062001fa29190620035c3565b905090565b6000818152600160205260408082206005015490516370a0823160e01b81523360048201526001600160a01b03909116906370a082319060240162000e04565b604080516101a08101825260008082526020820181905291810182905260608082018390526080820183905260a0820183905260c0820183905260e0820183905261010082018390526101208201839052610140820152610160810182905261018081019190915260008281526001602081815260409283902083516101a08101855281546001600160a01b0390811682529382015492810192909252600281015493820193909352600383015460608201526004830154821660808201526005830154821660a0820152600683015490911660c0820152600782015460e082015260088201546101008201526009820154610120820152600a8201805491929161014084019190620020fa9062003629565b80601f0160208091040260200160405190810160405280929190818152602001828054620021289062003629565b8015620021795780601f106200214d5761010080835404028352916020019162002179565b820191906000526020600020905b8154815290600101906020018083116200215b57829003601f168201915b5050509183525050600b919091015460ff81161515602083015261010090046001600160401b031660409091015292915050565b6000828152600160205260408082206006015490516370a0823160e01b81523360048201526001600160a01b03909116906370a0823190602401602060405180830381865afa15801562002205573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200222b9190620035c3565b6001146200228c5760405162461bcd60e51b815260206004820152602760248201527f4f6e6c792076616c696461746f722063616e20696e697469616c697a652064616044820152661d18481c1bdbdb60ca1b60648201526084016200052a565b6000838152600160205260409020600981015460088201546007830154620022b59190620035ad565b620022c19190620035ad565b421080620022e25750600b81015460026101009091046001600160401b0316105b620023015760405162461bcd60e51b81526004016200052a90620035dd565b600080546001600160a01b0319166001600160a01b03851690811782556040517f000000000000000000000000000000000000000000000000000000000000000091906200234f90620030b1565b6001600160a01b03928316815291166020820152604001604051809103906000f08015801562002383573d6000803e3d6000fd5b5095945050505050565b6000818152600160205260409020600981015460088201546007830154620023b69190620035ad565b620023c29190620035ad565b42101580620023e35750600b81015461010090046001600160401b03166002145b620024315760405162461bcd60e51b815260206004820152601c60248201527f4d61726b6574206e6f7420726561647920666f7220736574746c65210000000060448201526064016200052a565b60058101546040516370a0823160e01b81523360048201526000916001600160a01b0316906370a0823190602401602060405180830381865afa1580156200247d573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620024a39190620035c3565b60068301546040516370a0823160e01b815233600482015291925060009182916001600160a01b0316906370a0823190602401602060405180830381865afa158015620024f4573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200251a9190620035c3565b90506000808560060160009054906101000a90046001600160a01b03166001600160a01b03166318160ddd6040518163ffffffff1660e01b8152600401602060405180830381865afa15801562002575573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200259b9190620035c3565b11620025a9576000620026b3565b8460060160009054906101000a90046001600160a01b03166001600160a01b03166318160ddd6040518163ffffffff1660e01b8152600401602060405180830381865afa158015620025ff573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620026259190620035c3565b60068601546040516370a0823160e01b81523360048201526001600160a01b03909116906370a0823190602401602060405180830381865afa15801562002670573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620026969190620035c3565b8660020154620026a79190620036d6565b620026b3919062003a8b565b600586015460405163079cc67960e41b81529192506001600160a01b0316906379cc679090620026ea903390889060040162003547565b6020604051808303816000875af11580156200270a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062002730919062003609565b50600685015460405163079cc67960e41b81526001600160a01b03909116906379cc67909062002767903390869060040162003547565b6020604051808303816000875af115801562002787573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620027ad919062003609565b50600b85015460ff1615620027e7578392508215620027e1576004850154620027e1906001600160a01b0316338562002e14565b6200282a565b80156200282a5784546200282a906001600160a01b037f000000000000000000000000000000000000000000000000000000000000000081169116338462002b6f565b6040805182815260208101859052339188917f64e88f38de745da960b2de2db645d82947a21a405c4943480e05ee1ca974a907910160405180910390a3505050505050565b336001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001614620028e95760405162461bcd60e51b815260206004820181905260248201527f4f6e6c79204f4f76332063616e2063616c6c20746869732066756e6374696f6e60448201526064016200052a565b600082815260026020908152604080832060019081015484529091529020811562002b1857600b8101805460ff19169055604051634360af3d60e01b81526001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000811660048301526000917f000000000000000000000000000000000000000000000000000000000000000090911690634360af3d90602401602060405180830381865afa158015620029a6573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620029cc9190620035c3565b9050600081836001015411620029e35781620029e9565b82600101545b600480850154604080516318160ddd60e01b815290519394506001600160a01b03909116926379cc679092309285926318160ddd928281019260209291908290030181865afa15801562002a41573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062002a679190620035c3565b6040518363ffffffff1660e01b815260040162002a8692919062003547565b6020604051808303816000875af115801562002aa6573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062002acc919062003609565b5060008581526002602052604090205462002b15906001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000811691168362002e14565b50505b600b8101805468ffffffffffffffff00191661020017905560008381526002602052604080822060010154905190917fe9146184308c5e4b8f243047cc6f81dce88e004d7980502e123b02f887ab514491a2505050565b6040516001600160a01b038085166024830152831660448201526064810182905262002bdc9085906323b872dd60e01b906084015b60408051601f198184030181529190526020810180516001600160e01b03166001600160e01b03199093169290921790915262002e36565b50505050565b80158062002c605750604051636eb1769f60e11b81523060048201526001600160a01b03838116602483015284169063dd62ed3e90604401602060405180830381865afa15801562002c38573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062002c5e9190620035c3565b155b62002ccd5760405162461bcd60e51b815260206004820152603660248201527f5361666545524332303a20617070726f76652066726f6d206e6f6e2d7a65726f60448201527520746f206e6f6e2d7a65726f20616c6c6f77616e636560501b60648201526084016200052a565b62002cef8363095ea7b360e01b848460405160240162002ba492919062003547565b505050565b60608160000362002d1c5750506040805180820190915260018152600360fc1b602082015290565b8160005b811562002d4c578062002d338162003aa2565b915062002d449050600a8362003a8b565b915062002d20565b6000816001600160401b0381111562002d695762002d6962003264565b6040519080825280601f01601f19166020018201604052801562002d94576020820181803683370190505b5090505b841562002e0c5762002dac60018362003665565b915062002dbb600a8662003abe565b62002dc8906030620035ad565b60f81b81838151811062002de05762002de062003ad5565b60200101906001600160f81b031916908160001a90535062002e04600a8662003a8b565b945062002d98565b949350505050565b62002cef8363a9059cbb60e01b848460405160240162002ba492919062003547565b600062002e8d826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b031662002f0f9092919063ffffffff16565b80519091501562002cef578080602001905181019062002eae919062003609565b62002cef5760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b60648201526084016200052a565b606062002f20848460008562002f2a565b90505b9392505050565b60608247101562002f8d5760405162461bcd60e51b815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f6044820152651c8818d85b1b60d21b60648201526084016200052a565b6001600160a01b0385163b62002fe65760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e747261637400000060448201526064016200052a565b600080866001600160a01b0316858760405162003004919062003aeb565b60006040518083038185875af1925050503d806000811462003043576040519150601f19603f3d011682016040523d82523d6000602084013e62003048565b606091505b50915091506200305a82828662003065565b979650505050505050565b606083156200307657508162002f23565b825115620030875782518084602001fd5b8160405162461bcd60e51b81526004016200052a9190620036c1565b611cb68062003b0a83390190565b613b5c80620057c083390190565b600060208284031215620030d257600080fd5b5035919050565b60008060408385031215620030ed57600080fd5b8235915060208301356001600160401b03811681146200310c57600080fd5b809150509250929050565b60005b83811015620031345781810151838201526020016200311a565b50506000910152565b600081518084526200315781602086016020860162003117565b601f01601f19169290920160200192915050565b6001600160a01b038e81168252602082018e9052604082018d9052606082018c90528a8116608083015289811660a0830152881660c082015260e08101879052610100810186905261012081018590526101a06101408201819052600090620031d7908301866200313d565b931515610160830152506001600160401b0391909116610180909101529b9a5050505050505050505050565b6001600160a01b0381168114620003c557600080fd5b600080604083850312156200322d57600080fd5b8235915060208301356200310c8162003203565b600080604083850312156200325557600080fd5b50508035926020909101359150565b634e487b7160e01b600052604160045260246000fd5b60008060008060008060c087890312156200329457600080fd5b86359550602087013594506040870135935060608701356001600160401b0380821115620032c157600080fd5b818901915089601f830112620032d657600080fd5b813581811115620032eb57620032eb62003264565b604051601f8201601f19908116603f0116810190838211818310171562003316576200331662003264565b816040528281528c60208487010111156200333057600080fd5b8260208601602083013760006020848301015280975050505050506080870135915060a087013590509295509295509295565b60008083601f8401126200337657600080fd5b5081356001600160401b038111156200338e57600080fd5b602083019150836020828501011115620033a757600080fd5b9250929050565b600080600080600080600060a0888a031215620033ca57600080fd5b873596506020880135955060408801356001600160401b0380821115620033f057600080fd5b620033fe8b838c0162003363565b909750955060608a01359150808211156200341857600080fd5b50620034278a828b0162003363565b90945092505060808801356200343d8162003203565b8091505092959891949750929550565b60208152620034686020820183516001600160a01b03169052565b60208201516040820152604082015160608201526060820151608082015260006080830151620034a360a08401826001600160a01b03169052565b5060a08301516001600160a01b03811660c08401525060c08301516001600160a01b03811660e08401525060e08301516101008381019190915283015161012080840191909152830151610140808401919091528301516101a0610160808501829052620035166101c08601846200313d565b908601519092506101806200352e8682018315159052565b909501516001600160401b031693019290925250919050565b6001600160a01b03929092168252602082015260400190565b8015158114620003c557600080fd5b600080604083850312156200358357600080fd5b8235915060208301356200310c8162003560565b634e487b7160e01b600052601160045260246000fd5b8082018082111562000e485762000e4862003597565b600060208284031215620035d657600080fd5b5051919050565b6020808252601290820152714d61726b657420697320617564697465642160701b604082015260600190565b6000602082840312156200361c57600080fd5b815162002f238162003560565b600181811c908216806200363e57607f821691505b6020821081036200365f57634e487b7160e01b600052602260045260246000fd5b50919050565b8181038181111562000e485762000e4862003597565b64027b7363c960dd1b8152600082516200369d81600585016020870162003117565b6c20746f6b656e73206c6566742160981b6005939091019283015250601201919050565b60208152600062002f2360208301846200313d565b6000816000190483118215151615620036f357620036f362003597565b500290565b84815283602082015260018060a01b03831660408201526080606082015260006200372760808301846200313d565b9695505050505050565b600082516200374581846020870162003117565b660810dc99591a5d60ca1b920191825250600701919050565b6060815260006200377360608301856200313d565b82810360208401526002815261434360f01b60208201526040810191505060ff831660408301529392505050565b60008251620037b581846020870162003117565b720810dbdb9d995c9d1a589b194810dc99591a5d606a1b920191825250601301919050565b606081526000620037ef60608301856200313d565b8281036020840152600381526243434360e81b60208201526040810191505060ff831660408301529392505050565b600082516200383281846020870162003117565b6f102b30b634b230ba37b9102a37b5b2b760811b920191825250601001919050565b6060815260006200386960608301856200313d565b82810360208401526002815261159560f21b60208201526040810191505060ff831660408301529392505050565b601f82111562002cef57600081815260208120601f850160051c81016020861015620038c05750805b601f850160051c820191505b81811015620038e157828155600101620038cc565b505050505050565b81516001600160401b0381111562003905576200390562003264565b6200391d8162003916845462003629565b8462003897565b602080601f8311600181146200395557600084156200393c5750858301515b600019600386901b1c1916600185901b178555620038e1565b600085815260208120601f198616915b82811015620039865788860151825594840194600190910190840162003965565b5085821015620039a55787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b608081526000620039ca60808301876200313d565b60208301959095525060408101929092526001600160a01b0316606090910152919050565b60006020828403121562003a0257600080fd5b815162002f238162003203565b81835281816020850137506000828201602090810191909152601f909101601f19169091010190565b85815260606020820152600062003a5460608301868862003a0f565b828103604084015262003a6981858762003a0f565b98975050505050505050565b634e487b7160e01b600052601260045260246000fd5b60008262003a9d5762003a9d62003a75565b500490565b60006001820162003ab75762003ab762003597565b5060010190565b60008262003ad05762003ad062003a75565b500690565b634e487b7160e01b600052603260045260246000fd5b6000825162003aff81846020870162003117565b919091019291505056fe60806040523480156200001157600080fd5b5060405162001cb638038062001cb6833981016040819052620000349162000563565b8282600362000044838262000676565b50600462000053828262000676565b50506006805460ff191660ff8416179055506200007360008033620000a5565b6200009060015b60408051600080825260208201909252620001f5565b6200009c60026200007a565b50505062000796565b826000808281526005602052604090206001015460ff166002811115620000d057620000d062000742565b14620001235760405162461bcd60e51b815260206004820152601e60248201527f43616e6e6f74207573652061207072652d6578697374696e6720726f6c65000060448201526064015b60405180910390fd5b60008481526005602052604090206001808201805460ff1916828002179055508381556200016160028201846200033b602090811b62000a6617901c565b60008481526005602052604081206001015460ff1660028111156200018a576200018a62000742565b03620001ee5760405162461bcd60e51b815260206004820152603c602482015260008051602062001c9683398151915260448201527f20746f206d616e61676520616e206578636c757369766520726f6c650000000060648201526084016200011a565b5050505050565b826000808281526005602052604090206001015460ff16600281111562000220576200022062000742565b146200026f5760405162461bcd60e51b815260206004820152601e60248201527f43616e6e6f74207573652061207072652d6578697374696e6720726f6c65000060448201526064016200011a565b600084815260056020908152604090912060018101805460ff1916600217905584815590620002ae906003830190859062000a706200034b821b17901c565b60008481526005602052604081206001015460ff166002811115620002d757620002d762000742565b03620001ee5760405162461bcd60e51b8152602060048201526038602482015260008051602062001c9683398151915260448201527f20746f206d616e61676520612073686172656420726f6c65000000000000000060648201526084016200011a565b620003478282620003a0565b5050565b60005b81518110156200039b57620003868383838151811062000372576200037262000758565b60200260200101516200042160201b60201c565b8062000392816200076e565b9150506200034e565b505050565b6001600160a01b038116620004045760405162461bcd60e51b815260206004820152602360248201527f43616e6e6f742073657420616e206578636c757369766520726f6c6520746f2060448201526203078360ec1b60648201526084016200011a565b81546001600160a01b0319166001600160a01b0391909116179055565b6001600160a01b038116620004795760405162461bcd60e51b815260206004820152601f60248201527f43616e6e6f74206164642030783020746f20612073686172656420726f6c650060448201526064016200011a565b6001600160a01b0316600090815260209190915260409020805460ff19166001179055565b634e487b7160e01b600052604160045260246000fd5b600082601f830112620004c657600080fd5b81516001600160401b0380821115620004e357620004e36200049e565b604051601f8301601f19908116603f011681019082821181831017156200050e576200050e6200049e565b816040528381526020925086838588010111156200052b57600080fd5b600091505b838210156200054f578582018301518183018401529082019062000530565b600093810190920192909252949350505050565b6000806000606084860312156200057957600080fd5b83516001600160401b03808211156200059157600080fd5b6200059f87838801620004b4565b94506020860151915080821115620005b657600080fd5b50620005c586828701620004b4565b925050604084015160ff81168114620005dd57600080fd5b809150509250925092565b600181811c90821680620005fd57607f821691505b6020821081036200061e57634e487b7160e01b600052602260045260246000fd5b50919050565b601f8211156200039b57600081815260208120601f850160051c810160208610156200064d5750805b601f850160051c820191505b818110156200066e5782815560010162000659565b505050505050565b81516001600160401b038111156200069257620006926200049e565b620006aa81620006a38454620005e8565b8462000624565b602080601f831160018114620006e25760008415620006c95750858301515b600019600386901b1c1916600185901b1785556200066e565b600085815260208120601f198616915b828110156200071357888601518255948401946001909101908401620006f2565b5085821015620007325787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b634e487b7160e01b600052602160045260246000fd5b634e487b7160e01b600052603260045260246000fd5b6000600182016200078f57634e487b7160e01b600052601160045260246000fd5b5060010190565b6114f080620007a66000396000f3fe608060405234801561001057600080fd5b506004361061014d5760003560e01c806374d0a676116100c3578063a9059cbb1161007c578063a9059cbb146102be578063aaa14ca3146102d1578063ab3545e5146102e4578063d97c05be1461030f578063dd62ed3e14610322578063f44637ba1461035b57600080fd5b806374d0a6761461025757806379cc67901461026a5780637cdc1cb91461027d57806395d89b4114610290578063983b2d5614610298578063a457c2d7146102ab57600080fd5b8063395093511161011557806339509351146101cd57806340c10f19146101e057806342966c68146101f35780636be7658b1461020857806370a082311461021b57806373cc802a1461024457600080fd5b806306fdde0314610152578063095ea7b31461017057806318160ddd1461019357806323b872dd146101a5578063313ce567146101b8575b600080fd5b61015a61036e565b6040516101679190611183565b60405180910390f35b61018361017e3660046111ed565b610400565b6040519015158152602001610167565b6002545b604051908152602001610167565b6101836101b3366004611217565b61041a565b60065460405160ff9091168152602001610167565b6101836101db3660046111ed565b61043e565b6101836101ee3660046111ed565b61047d565b610206610201366004611253565b6104ba565b005b61020661021636600461126c565b6104f0565b610197610229366004611298565b6001600160a01b031660009081526020819052604090205490565b610206610252366004611298565b6105c6565b61020661026536600461126c565b6105d4565b6101836102783660046111ed565b6106aa565b61018361028b36600461126c565b6106de565b61015a6107a3565b6102066102a6366004611298565b6107b2565b6101836102b93660046111ed565b6107be565b6101836102cc3660046111ed565b610850565b6102066102df366004611253565b61085e565b6102f76102f2366004611253565b61091a565b6040516001600160a01b039091168152602001610167565b61020661031d36600461126c565b610986565b6101976103303660046112ba565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b610206610369366004611298565b610a5c565b60606003805461037d906112e4565b80601f01602080910402602001604051908101604052809291908181526020018280546103a9906112e4565b80156103f65780601f106103cb576101008083540402835291602001916103f6565b820191906000526020600020905b8154815290600101906020018083116103d957829003601f168201915b5050505050905090565b60003361040e818585610ab6565b60019150505b92915050565b600033610428858285610bda565b610433858585610c6c565b506001949350505050565b3360008181526001602090815260408083206001600160a01b038716845290915281205490919061040e908290869061047890879061132e565b610ab6565b6000600161048b81336106de565b6104b05760405162461bcd60e51b81526004016104a790611357565b60405180910390fd5b61040e8484610e3a565b60026104c681336106de565b6104e25760405162461bcd60e51b81526004016104a790611357565b6104ec3383610f19565b5050565b81600260008281526005602052604090206001015460ff16600281111561051957610519611341565b146105365760405162461bcd60e51b81526004016104a790611399565b600083815260056020526040902054839061055190336106de565b61056d5760405162461bcd60e51b81526004016104a7906113e5565b60008481526005602052604090206105889060030184611067565b60405133906001600160a01b0385169086907feb3e33034c392e69263b04ec0fa376dc12784a41b6676c7f31b936cbc0fbb5af90600090a450505050565b6105d1600082610986565b50565b81600260008281526005602052604090206001015460ff1660028111156105fd576105fd611341565b1461061a5760405162461bcd60e51b81526004016104a790611399565b600083815260056020526040902054839061063590336106de565b6106515760405162461bcd60e51b81526004016104a7906113e5565b600084815260056020526040902061066c9060030184611089565b60405133906001600160a01b0385169086907f63502af7324ff6db91ab38f8236a648727d9385ea6c782073dd4882d8a61a48f90600090a450505050565b600060026106b881336106de565b6106d45760405162461bcd60e51b81526004016104a790611357565b61040e8484610f19565b600082815260056020526040812060018082015460ff16600281111561070657610706611341565b036107275760028101546001600160a01b038481169116145b915050610414565b6002600182015460ff16600281111561074257610742611341565b0361076a576001600160a01b038316600090815260038201602052604090205460ff1661071f565b60405162461bcd60e51b815260206004820152600e60248201526d125b9d985b1a59081c9bdb19525960921b60448201526064016104a7565b60606004805461037d906112e4565b6105d160015b826105d4565b3360008181526001602090815260408083206001600160a01b0387168452909152812054909190838110156108435760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b60648201526084016104a7565b6104338286868403610ab6565b60003361040e818585610c6c565b80600260008281526005602052604090206001015460ff16600281111561088757610887611341565b146108a45760405162461bcd60e51b81526004016104a790611399565b816108af81336106de565b6108cb5760405162461bcd60e51b81526004016104a790611357565b60008381526005602052604090206108e69060030133611067565b6040513390819085907feb3e33034c392e69263b04ec0fa376dc12784a41b6676c7f31b936cbc0fbb5af90600090a4505050565b600081600160008281526005602052604090206001015460ff16600281111561094557610945611341565b146109625760405162461bcd60e51b81526004016104a790611429565b6000838152600560205260409020600201546001600160a01b031691505b50919050565b81600160008281526005602052604090206001015460ff1660028111156109af576109af611341565b146109cc5760405162461bcd60e51b81526004016104a790611429565b60008381526005602052604090205483906109e790336106de565b610a035760405162461bcd60e51b81526004016104a7906113e5565b6000848152600560205260409020610a1e9060020184611104565b60405133906001600160a01b0385169086907f3b855c56b409b671c7112789d022675eb639d0bcb8896f1b6197c132f799e74690600090a450505050565b6105d160026107b8565b6104ec8282611104565b60005b8151811015610ab157610a9f83838381518110610a9257610a92611478565b6020026020010151611089565b80610aa98161148e565b915050610a73565b505050565b6001600160a01b038316610b185760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b60648201526084016104a7565b6001600160a01b038216610b795760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b60648201526084016104a7565b6001600160a01b0383811660008181526001602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b6001600160a01b038381166000908152600160209081526040808320938616835292905220546000198114610c665781811015610c595760405162461bcd60e51b815260206004820152601d60248201527f45524332303a20696e73756666696369656e7420616c6c6f77616e636500000060448201526064016104a7565b610c668484848403610ab6565b50505050565b6001600160a01b038316610cd05760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b60648201526084016104a7565b6001600160a01b038216610d325760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b60648201526084016104a7565b6001600160a01b03831660009081526020819052604090205481811015610daa5760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b60648201526084016104a7565b6001600160a01b03808516600090815260208190526040808220858503905591851681529081208054849290610de190849061132e565b92505081905550826001600160a01b0316846001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef84604051610e2d91815260200190565b60405180910390a3610c66565b6001600160a01b038216610e905760405162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f20616464726573730060448201526064016104a7565b8060026000828254610ea2919061132e565b90915550506001600160a01b03821660009081526020819052604081208054839290610ecf90849061132e565b90915550506040518181526001600160a01b038316906000907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9060200160405180910390a35050565b6001600160a01b038216610f795760405162461bcd60e51b815260206004820152602160248201527f45524332303a206275726e2066726f6d20746865207a65726f206164647265736044820152607360f81b60648201526084016104a7565b6001600160a01b03821660009081526020819052604090205481811015610fed5760405162461bcd60e51b815260206004820152602260248201527f45524332303a206275726e20616d6f756e7420657863656564732062616c616e604482015261636560f01b60648201526084016104a7565b6001600160a01b038316600090815260208190526040812083830390556002805484929061101c9084906114a7565b90915550506040518281526000906001600160a01b038516907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9060200160405180910390a3505050565b6001600160a01b0316600090815260209190915260409020805460ff19169055565b6001600160a01b0381166110df5760405162461bcd60e51b815260206004820152601f60248201527f43616e6e6f74206164642030783020746f20612073686172656420726f6c650060448201526064016104a7565b6001600160a01b0316600090815260209190915260409020805460ff19166001179055565b6001600160a01b0381166111665760405162461bcd60e51b815260206004820152602360248201527f43616e6e6f742073657420616e206578636c757369766520726f6c6520746f2060448201526203078360ec1b60648201526084016104a7565b81546001600160a01b0319166001600160a01b0391909116179055565b600060208083528351808285015260005b818110156111b057858101830151858201604001528201611194565b506000604082860101526040601f19601f8301168501019250505092915050565b80356001600160a01b03811681146111e857600080fd5b919050565b6000806040838503121561120057600080fd5b611209836111d1565b946020939093013593505050565b60008060006060848603121561122c57600080fd5b611235846111d1565b9250611243602085016111d1565b9150604084013590509250925092565b60006020828403121561126557600080fd5b5035919050565b6000806040838503121561127f57600080fd5b8235915061128f602084016111d1565b90509250929050565b6000602082840312156112aa57600080fd5b6112b3826111d1565b9392505050565b600080604083850312156112cd57600080fd5b6112d6836111d1565b915061128f602084016111d1565b600181811c908216806112f857607f821691505b60208210810361098057634e487b7160e01b600052602260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b8082018082111561041457610414611318565b634e487b7160e01b600052602160045260246000fd5b60208082526022908201527f53656e64657220646f6573206e6f7420686f6c6420726571756972656420726f6040820152616c6560f01b606082015260800190565b6020808252602c908201527f4d7573742062652063616c6c6564206f6e20616e20696e697469616c697a656460408201526b2053686172656420726f6c6560a01b606082015260800190565b60208082526024908201527f43616e206f6e6c792062652063616c6c6564206279206120726f6c65206d616e60408201526330b3b2b960e11b606082015260800190565b6020808252602f908201527f4d7573742062652063616c6c6564206f6e20616e20696e697469616c697a656460408201526e204578636c757369766520726f6c6560881b606082015260800190565b634e487b7160e01b600052603260045260246000fd5b6000600182016114a0576114a0611318565b5060010190565b818103818111156104145761041461131856fea26469706673582212208961104dd3923b79c08fd49fd308093d4ed7792f1229905fa0e9f300d355f10d64736f6c63430008100033417474656d7074656420746f2075736520616e20696e76616c696420726f6c6560e06040523480156200001157600080fd5b5060405162003b5c38038062003b5c83398101604081905262000034916200029b565b6001600160a01b03808316608052811660a08190526040805163d509b01760e01b8152905163d509b017916004808201926020929091908290030181865afa15801562000085573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620000ab9190620002d3565b60c052604051600190620000bf9062000270565b6060808252601c908201527f4461746141737365727465722056616c696461746f7220546f6b656e00000000608082015260a060208201819052600490820152631110559560e21b60c082015260ff909116604082015260e001604051809103906000f08015801562000136573d6000803e3d6000fd5b50600080546001600160a01b0319166001600160a01b03929092169182179055604051634c1d96ab60e11b815230600482015263983b2d5690602401600060405180830381600087803b1580156200018d57600080fd5b505af1158015620001a2573d6000803e3d6000fd5b5050600054604051637a231bdd60e11b81523060048201526001600160a01b03909116925063f44637ba9150602401600060405180830381600087803b158015620001ec57600080fd5b505af115801562000201573d6000803e3d6000fd5b505060005460a051604051634c1d96ab60e11b81526001600160a01b0391821660048201529116925063983b2d569150602401600060405180830381600087803b1580156200024f57600080fd5b505af115801562000264573d6000803e3d6000fd5b505050505050620002ed565b611cb68062001ea683390190565b80516001600160a01b03811681146200029657600080fd5b919050565b60008060408385031215620002af57600080fd5b620002ba836200027e565b9150620002ca602084016200027e565b90509250929050565b600060208284031215620002e657600080fd5b5051919050565b60805160a05160c051611b4b6200035b600039600081816101cd015261079501526000818161014d015281816105de015281816106af015281816106d601526108f601526000818160ee015281816105b1015281816106580152818161068d01526107710152611b4b6000f3fe608060405234801561001057600080fd5b50600436106100b45760003560e01c8063b75d4e2411610071578063b75d4e2414610193578063d448a4ec146101b5578063d509b017146101c8578063de810e96146101ef578063f1b156b214610202578063faa0a2641461021557600080fd5b806318e557aa146100b957806320402e1d146100e95780634f7310871461011057806354f6127f146101265780638921a61414610148578063b33893da1461016f575b600080fd5b6000546100cc906001600160a01b031681565b6040516001600160a01b0390911681526020015b60405180910390f35b6100cc7f000000000000000000000000000000000000000000000000000000000000000081565b61011861021d565b6040519081526020016100e0565b610139610134366004611448565b61028f565b6040516100e0939291906114b1565b6100cc7f000000000000000000000000000000000000000000000000000000000000000081565b61018261017d366004611448565b61044c565b6040516100e09594939291906114e8565b61019c611c2081565b60405167ffffffffffffffff90911681526020016100e0565b6101c66101c3366004611448565b50565b005b6101187f000000000000000000000000000000000000000000000000000000000000000081565b6101186101fd3660046115d9565b61059a565b6101c6610210366004611654565b6108eb565b6101c6610bd3565b600080546040516370a0823160e01b81523360048201526001600160a01b03909116906370a0823190602401602060405180830381865afa158015610266573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061028a9190611684565b905090565b6000818152600160205260408120600301546060908190600160a01b900460ff1661030b5760006040518060400160405280600781526020016615313630b7359560c91b8152506040518060400160405280601181526020017011185d18481b9bdd081c995cdbdb1d9959607a1b815250925092509250610445565b6000848152600160208190526040909120808201805490916002019082906103329061169d565b80601f016020809104026020016040519081016040528092919081815260200182805461035e9061169d565b80156103ab5780601f10610380576101008083540402835291602001916103ab565b820191906000526020600020905b81548152906001019060200180831161038e57829003601f168201915b505050505091508080546103be9061169d565b80601f01602080910402602001604051908101604052809291908181526020018280546103ea9061169d565b80156104375780601f1061040c57610100808354040283529160200191610437565b820191906000526020600020905b81548152906001019060200180831161041a57829003601f168201915b505050505090509250925092505b9193909250565b60016020819052600091825260409091208054918101805461046d9061169d565b80601f01602080910402602001604051908101604052809291908181526020018280546104999061169d565b80156104e65780601f106104bb576101008083540402835291602001916104e6565b820191906000526020600020905b8154815290600101906020018083116104c957829003601f168201915b5050505050908060020180546104fb9061169d565b80601f01602080910402602001604051908101604052809291908181526020018280546105279061169d565b80156105745780601f1061054957610100808354040283529160200191610574565b820191906000526020600020905b81548152906001019060200180831161055757829003601f168201915b505050600390930154919250506001600160a01b0381169060ff600160a01b9091041685565b604051634360af3d60e01b81526001600160a01b037f00000000000000000000000000000000000000000000000000000000000000008116600483015260009182917f00000000000000000000000000000000000000000000000000000000000000001690634360af3d90602401602060405180830381865afa158015610625573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106499190611684565b90506106806001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016333084610cb8565b6106d46001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000167f000000000000000000000000000000000000000000000000000000000000000083610d29565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316636457c979858561070e89610e48565b61071733610e89565b61072042610ee0565b61072930610e89565b60405160200161073e969594939291906116f3565b60408051601f19818403018152908290526001600160e01b031960e084901b1682526107bf9133903090600090611c20907f0000000000000000000000000000000000000000000000000000000000000000908a907f0000000000000000000000000000000000000000000000000000000000000000908590600401611851565b6020604051808303816000875af11580156107de573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108029190611684565b6040805160a081018252878152602080820188815282840188905233606084015260006080840181905285815260019283905293909320825181559251939550909290820190610852908261190d565b5060408201516002820190610867908261190d565b506060820151600390910180546080909301511515600160a01b026001600160a81b03199093166001600160a01b03909216919091179190911790556040518290339087907f657936090f7950624cc4d0e1efd75ff2392aea9d1aaf742ac689d3db7cb20e72906108db90899089906119cd565b60405180910390a4509392505050565b336001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000161461092057600080fd5b8015610b8e5760008281526001602081905260408083206003018054600160a01b60ff60a01b19821617909155925490516340c10f1960e01b81526001600160a01b039384166004820152602481019290925291909116906340c10f19906044016020604051808303816000875af11580156109a0573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109c491906119fb565b506000828152600160208181526040808420815160a081019092528054825292830180549193928401916109f79061169d565b80601f0160208091040260200160405190810160405280929190818152602001828054610a239061169d565b8015610a705780601f10610a4557610100808354040283529160200191610a70565b820191906000526020600020905b815481529060010190602001808311610a5357829003601f168201915b50505050508152602001600282018054610a899061169d565b80601f0160208091040260200160405190810160405280929190818152602001828054610ab59061169d565b8015610b025780601f10610ad757610100808354040283529160200191610b02565b820191906000526020600020905b815481529060010190602001808311610ae557829003601f168201915b5050509183525050600391909101546001600160a01b03808216602080850191909152600160a01b90920460ff1615156040938401526060840151845192850151858501519451959650889591909216937f36a2ca3a13b47a72af0f9bf95abd3c906882059e42e6c1c6b5b312e9da2064d792610b81929091906119cd565b60405180910390a4505050565b600082815260016020819052604082208281559190610baf908301826113fa565b610bbd6002830160006113fa565b5060030180546001600160a81b03191690555050565b6000546040516370a0823160e01b815233600482018190526001600160a01b03909216916379cc67909183906370a0823190602401602060405180830381865afa158015610c25573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c499190611684565b6040516001600160e01b031960e085901b1681526001600160a01b03909216600483015260248201526044016020604051808303816000875af1158015610c94573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906101c391906119fb565b6040516001600160a01b0380851660248301528316604482015260648101829052610d239085906323b872dd60e01b906084015b60408051601f198184030181529190526020810180516001600160e01b03166001600160e01b03199093169290921790915261100c565b50505050565b801580610da35750604051636eb1769f60e11b81523060048201526001600160a01b03838116602483015284169063dd62ed3e90604401602060405180830381865afa158015610d7d573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610da19190611684565b155b610e135760405162461bcd60e51b815260206004820152603660248201527f5361666545524332303a20617070726f76652066726f6d206e6f6e2d7a65726f60448201527520746f206e6f6e2d7a65726f20616c6c6f77616e636560501b60648201526084015b60405180910390fd5b6040516001600160a01b038316602482015260448101829052610e4390849063095ea7b360e01b90606401610cec565b505050565b6060610e57608083901c6110de565b610e60836110de565b6040805160208101939093528201526060015b6040516020818303038152906040529050919050565b6060610ea16001600160801b03602084901c166110de565b610ebc8360601b6bffffffffffffffffffffffff19166110de565b604051602001610e739291909182526001600160c01b031916602082015260280190565b606081600003610f075750506040805180820190915260018152600360fc1b602082015290565b8160005b8115610f315780610f1b81611a2e565b9150610f2a9050600a83611a5d565b9150610f0b565b60008167ffffffffffffffff811115610f4c57610f4c611536565b6040519080825280601f01601f191660200182016040528015610f76576020820181803683370190505b509050815b851561100357610f8c600182611a7f565b90506000610f9b600a88611a5d565b610fa690600a611a98565b610fb09088611a7f565b610fbb906030611ab7565b905060008160f81b905080848481518110610fd857610fd8611ad0565b60200101906001600160f81b031916908160001a905350610ffa600a89611a5d565b97505050610f7b565b50949350505050565b6000611061826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b03166112779092919063ffffffff16565b805190915015610e43578080602001905181019061107f91906119fb565b610e435760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b6064820152608401610e0a565b6000808260001c9050806001600160801b03169050806801000000000000000002811777ffffffffffffffff0000000000000000ffffffffffffffff169050806401000000000281177bffffffff00000000ffffffff00000000ffffffff00000000ffffffff16905080620100000281177dffff0000ffff0000ffff0000ffff0000ffff0000ffff0000ffff0000ffff169050806101000281177eff00ff00ff00ff00ff00ff00ff00ff00ff00ff00ff00ff00ff00ff00ff00ff1690508060100281177f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f16905060006008827f080808080808080808080808080808080808080808080808080808080808080816816111f9576111f9611a47565b0460047f040404040404040404040404040404040404040404040404040404040404040484160460027f020202020202020202020202020202020202020202020202020202020202020285160417166027029091017f3030303030303030303030303030303030303030303030303030303030303030019392505050565b60606112868484600085611290565b90505b9392505050565b6060824710156112f15760405162461bcd60e51b815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f6044820152651c8818d85b1b60d21b6064820152608401610e0a565b6001600160a01b0385163b6113485760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e74726163740000006044820152606401610e0a565b600080866001600160a01b031685876040516113649190611ae6565b60006040518083038185875af1925050503d80600081146113a1576040519150601f19603f3d011682016040523d82523d6000602084013e6113a6565b606091505b50915091506113b68282866113c1565b979650505050505050565b606083156113d0575081611289565b8251156113e05782518084602001fd5b8160405162461bcd60e51b8152600401610e0a9190611b02565b5080546114069061169d565b6000825580601f10611416575050565b601f0160209004906000526020600020908101906101c391905b808211156114445760008155600101611430565b5090565b60006020828403121561145a57600080fd5b5035919050565b60005b8381101561147c578181015183820152602001611464565b50506000910152565b6000815180845261149d816020860160208601611461565b601f01601f19169290920160200192915050565b83151581526060602082015260006114cc6060830185611485565b82810360408401526114de8185611485565b9695505050505050565b85815260a06020820152600061150160a0830187611485565b82810360408401526115138187611485565b6001600160a01b0395909516606084015250509015156080909101529392505050565b634e487b7160e01b600052604160045260246000fd5b600082601f83011261155d57600080fd5b813567ffffffffffffffff8082111561157857611578611536565b604051601f8301601f19908116603f011681019082821181831017156115a0576115a0611536565b816040528381528660208588010111156115b957600080fd5b836020870160208301376000602085830101528094505050505092915050565b6000806000606084860312156115ee57600080fd5b83359250602084013567ffffffffffffffff8082111561160d57600080fd5b6116198783880161154c565b9350604086013591508082111561162f57600080fd5b5061163c8682870161154c565b9150509250925092565b80151581146101c357600080fd5b6000806040838503121561166757600080fd5b82359150602083013561167981611646565b809150509250929050565b60006020828403121561169657600080fd5b5051919050565b600181811c908216806116b157607f821691505b6020821081036116d157634e487b7160e01b600052602260045260246000fd5b50919050565b600081516116e9818560208601611461565b9290920192915050565b7002230ba309030b9b9b2b93a32b21030ba1607d1b81526000875161171f816011850160208c01611461565b710103bb4ba34103232b9b1b934b83a34b7b7160751b6011918401918201528751611751816023840160208c01611461565b6e040ccdee440c8c2e8c292c8744060f608b1b602392909101918201528651611781816032840160208b01611461565b70040c2dcc840c2e6e6cae4e8cae4744060f607b1b6032929091019182015285516117b3816043840160208a01611461565b6e01030ba103a34b6b2b9ba30b6b81d1608d1b6043929091019182015284516117e3816052840160208901611461565b61184361182d6118276052848601017f20696e207468652044617461417373657274657220636f6e747261637420617481526204060f60eb1b602082015260230190565b876116d7565b691034b9903b30b634b21760b11b8152600a0190565b9a9950505050505050505050565b60006101208083526118658184018d611485565b6001600160a01b039b8c166020850152998b1660408401525050958816606087015267ffffffffffffffff9490941660808601529190951660a084015260c083019490945260e08201939093526101000191909152919050565b601f821115610e4357600081815260208120601f850160051c810160208610156118e65750805b601f850160051c820191505b81811015611905578281556001016118f2565b505050505050565b815167ffffffffffffffff81111561192757611927611536565b61193b81611935845461169d565b846118bf565b602080601f83116001811461197057600084156119585750858301515b600019600386901b1c1916600185901b178555611905565b600085815260208120601f198616915b8281101561199f57888601518255948401946001909101908401611980565b50858210156119bd5787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b6040815260006119e06040830185611485565b82810360208401526119f28185611485565b95945050505050565b600060208284031215611a0d57600080fd5b815161128981611646565b634e487b7160e01b600052601160045260246000fd5b600060018201611a4057611a40611a18565b5060010190565b634e487b7160e01b600052601260045260246000fd5b600082611a7a57634e487b7160e01b600052601260045260246000fd5b500490565b81810381811115611a9257611a92611a18565b92915050565b6000816000190483118215151615611ab257611ab2611a18565b500290565b60ff8181168382160190811115611a9257611a92611a18565b634e487b7160e01b600052603260045260246000fd5b60008251611af8818460208701611461565b9190910192915050565b602081526000611289602083018461148556fea264697066735822122052ead0a1319f36aa3a765a3c6aef447df122d7208d51128fc0f1ccda5445fba164736f6c6343000810003360806040523480156200001157600080fd5b5060405162001cb638038062001cb6833981016040819052620000349162000563565b8282600362000044838262000676565b50600462000053828262000676565b50506006805460ff191660ff8416179055506200007360008033620000a5565b6200009060015b60408051600080825260208201909252620001f5565b6200009c60026200007a565b50505062000796565b826000808281526005602052604090206001015460ff166002811115620000d057620000d062000742565b14620001235760405162461bcd60e51b815260206004820152601e60248201527f43616e6e6f74207573652061207072652d6578697374696e6720726f6c65000060448201526064015b60405180910390fd5b60008481526005602052604090206001808201805460ff1916828002179055508381556200016160028201846200033b602090811b62000a6617901c565b60008481526005602052604081206001015460ff1660028111156200018a576200018a62000742565b03620001ee5760405162461bcd60e51b815260206004820152603c602482015260008051602062001c9683398151915260448201527f20746f206d616e61676520616e206578636c757369766520726f6c650000000060648201526084016200011a565b5050505050565b826000808281526005602052604090206001015460ff16600281111562000220576200022062000742565b146200026f5760405162461bcd60e51b815260206004820152601e60248201527f43616e6e6f74207573652061207072652d6578697374696e6720726f6c65000060448201526064016200011a565b600084815260056020908152604090912060018101805460ff1916600217905584815590620002ae906003830190859062000a706200034b821b17901c565b60008481526005602052604081206001015460ff166002811115620002d757620002d762000742565b03620001ee5760405162461bcd60e51b8152602060048201526038602482015260008051602062001c9683398151915260448201527f20746f206d616e61676520612073686172656420726f6c65000000000000000060648201526084016200011a565b620003478282620003a0565b5050565b60005b81518110156200039b57620003868383838151811062000372576200037262000758565b60200260200101516200042160201b60201c565b8062000392816200076e565b9150506200034e565b505050565b6001600160a01b038116620004045760405162461bcd60e51b815260206004820152602360248201527f43616e6e6f742073657420616e206578636c757369766520726f6c6520746f2060448201526203078360ec1b60648201526084016200011a565b81546001600160a01b0319166001600160a01b0391909116179055565b6001600160a01b038116620004795760405162461bcd60e51b815260206004820152601f60248201527f43616e6e6f74206164642030783020746f20612073686172656420726f6c650060448201526064016200011a565b6001600160a01b0316600090815260209190915260409020805460ff19166001179055565b634e487b7160e01b600052604160045260246000fd5b600082601f830112620004c657600080fd5b81516001600160401b0380821115620004e357620004e36200049e565b604051601f8301601f19908116603f011681019082821181831017156200050e576200050e6200049e565b816040528381526020925086838588010111156200052b57600080fd5b600091505b838210156200054f578582018301518183018401529082019062000530565b600093810190920192909252949350505050565b6000806000606084860312156200057957600080fd5b83516001600160401b03808211156200059157600080fd5b6200059f87838801620004b4565b94506020860151915080821115620005b657600080fd5b50620005c586828701620004b4565b925050604084015160ff81168114620005dd57600080fd5b809150509250925092565b600181811c90821680620005fd57607f821691505b6020821081036200061e57634e487b7160e01b600052602260045260246000fd5b50919050565b601f8211156200039b57600081815260208120601f850160051c810160208610156200064d5750805b601f850160051c820191505b818110156200066e5782815560010162000659565b505050505050565b81516001600160401b038111156200069257620006926200049e565b620006aa81620006a38454620005e8565b8462000624565b602080601f831160018114620006e25760008415620006c95750858301515b600019600386901b1c1916600185901b1785556200066e565b600085815260208120601f198616915b828110156200071357888601518255948401946001909101908401620006f2565b5085821015620007325787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b634e487b7160e01b600052602160045260246000fd5b634e487b7160e01b600052603260045260246000fd5b6000600182016200078f57634e487b7160e01b600052601160045260246000fd5b5060010190565b6114f080620007a66000396000f3fe608060405234801561001057600080fd5b506004361061014d5760003560e01c806374d0a676116100c3578063a9059cbb1161007c578063a9059cbb146102be578063aaa14ca3146102d1578063ab3545e5146102e4578063d97c05be1461030f578063dd62ed3e14610322578063f44637ba1461035b57600080fd5b806374d0a6761461025757806379cc67901461026a5780637cdc1cb91461027d57806395d89b4114610290578063983b2d5614610298578063a457c2d7146102ab57600080fd5b8063395093511161011557806339509351146101cd57806340c10f19146101e057806342966c68146101f35780636be7658b1461020857806370a082311461021b57806373cc802a1461024457600080fd5b806306fdde0314610152578063095ea7b31461017057806318160ddd1461019357806323b872dd146101a5578063313ce567146101b8575b600080fd5b61015a61036e565b6040516101679190611183565b60405180910390f35b61018361017e3660046111ed565b610400565b6040519015158152602001610167565b6002545b604051908152602001610167565b6101836101b3366004611217565b61041a565b60065460405160ff9091168152602001610167565b6101836101db3660046111ed565b61043e565b6101836101ee3660046111ed565b61047d565b610206610201366004611253565b6104ba565b005b61020661021636600461126c565b6104f0565b610197610229366004611298565b6001600160a01b031660009081526020819052604090205490565b610206610252366004611298565b6105c6565b61020661026536600461126c565b6105d4565b6101836102783660046111ed565b6106aa565b61018361028b36600461126c565b6106de565b61015a6107a3565b6102066102a6366004611298565b6107b2565b6101836102b93660046111ed565b6107be565b6101836102cc3660046111ed565b610850565b6102066102df366004611253565b61085e565b6102f76102f2366004611253565b61091a565b6040516001600160a01b039091168152602001610167565b61020661031d36600461126c565b610986565b6101976103303660046112ba565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b610206610369366004611298565b610a5c565b60606003805461037d906112e4565b80601f01602080910402602001604051908101604052809291908181526020018280546103a9906112e4565b80156103f65780601f106103cb576101008083540402835291602001916103f6565b820191906000526020600020905b8154815290600101906020018083116103d957829003601f168201915b5050505050905090565b60003361040e818585610ab6565b60019150505b92915050565b600033610428858285610bda565b610433858585610c6c565b506001949350505050565b3360008181526001602090815260408083206001600160a01b038716845290915281205490919061040e908290869061047890879061132e565b610ab6565b6000600161048b81336106de565b6104b05760405162461bcd60e51b81526004016104a790611357565b60405180910390fd5b61040e8484610e3a565b60026104c681336106de565b6104e25760405162461bcd60e51b81526004016104a790611357565b6104ec3383610f19565b5050565b81600260008281526005602052604090206001015460ff16600281111561051957610519611341565b146105365760405162461bcd60e51b81526004016104a790611399565b600083815260056020526040902054839061055190336106de565b61056d5760405162461bcd60e51b81526004016104a7906113e5565b60008481526005602052604090206105889060030184611067565b60405133906001600160a01b0385169086907feb3e33034c392e69263b04ec0fa376dc12784a41b6676c7f31b936cbc0fbb5af90600090a450505050565b6105d1600082610986565b50565b81600260008281526005602052604090206001015460ff1660028111156105fd576105fd611341565b1461061a5760405162461bcd60e51b81526004016104a790611399565b600083815260056020526040902054839061063590336106de565b6106515760405162461bcd60e51b81526004016104a7906113e5565b600084815260056020526040902061066c9060030184611089565b60405133906001600160a01b0385169086907f63502af7324ff6db91ab38f8236a648727d9385ea6c782073dd4882d8a61a48f90600090a450505050565b600060026106b881336106de565b6106d45760405162461bcd60e51b81526004016104a790611357565b61040e8484610f19565b600082815260056020526040812060018082015460ff16600281111561070657610706611341565b036107275760028101546001600160a01b038481169116145b915050610414565b6002600182015460ff16600281111561074257610742611341565b0361076a576001600160a01b038316600090815260038201602052604090205460ff1661071f565b60405162461bcd60e51b815260206004820152600e60248201526d125b9d985b1a59081c9bdb19525960921b60448201526064016104a7565b60606004805461037d906112e4565b6105d160015b826105d4565b3360008181526001602090815260408083206001600160a01b0387168452909152812054909190838110156108435760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b60648201526084016104a7565b6104338286868403610ab6565b60003361040e818585610c6c565b80600260008281526005602052604090206001015460ff16600281111561088757610887611341565b146108a45760405162461bcd60e51b81526004016104a790611399565b816108af81336106de565b6108cb5760405162461bcd60e51b81526004016104a790611357565b60008381526005602052604090206108e69060030133611067565b6040513390819085907feb3e33034c392e69263b04ec0fa376dc12784a41b6676c7f31b936cbc0fbb5af90600090a4505050565b600081600160008281526005602052604090206001015460ff16600281111561094557610945611341565b146109625760405162461bcd60e51b81526004016104a790611429565b6000838152600560205260409020600201546001600160a01b031691505b50919050565b81600160008281526005602052604090206001015460ff1660028111156109af576109af611341565b146109cc5760405162461bcd60e51b81526004016104a790611429565b60008381526005602052604090205483906109e790336106de565b610a035760405162461bcd60e51b81526004016104a7906113e5565b6000848152600560205260409020610a1e9060020184611104565b60405133906001600160a01b0385169086907f3b855c56b409b671c7112789d022675eb639d0bcb8896f1b6197c132f799e74690600090a450505050565b6105d160026107b8565b6104ec8282611104565b60005b8151811015610ab157610a9f83838381518110610a9257610a92611478565b6020026020010151611089565b80610aa98161148e565b915050610a73565b505050565b6001600160a01b038316610b185760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b60648201526084016104a7565b6001600160a01b038216610b795760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b60648201526084016104a7565b6001600160a01b0383811660008181526001602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b6001600160a01b038381166000908152600160209081526040808320938616835292905220546000198114610c665781811015610c595760405162461bcd60e51b815260206004820152601d60248201527f45524332303a20696e73756666696369656e7420616c6c6f77616e636500000060448201526064016104a7565b610c668484848403610ab6565b50505050565b6001600160a01b038316610cd05760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b60648201526084016104a7565b6001600160a01b038216610d325760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b60648201526084016104a7565b6001600160a01b03831660009081526020819052604090205481811015610daa5760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b60648201526084016104a7565b6001600160a01b03808516600090815260208190526040808220858503905591851681529081208054849290610de190849061132e565b92505081905550826001600160a01b0316846001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef84604051610e2d91815260200190565b60405180910390a3610c66565b6001600160a01b038216610e905760405162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f20616464726573730060448201526064016104a7565b8060026000828254610ea2919061132e565b90915550506001600160a01b03821660009081526020819052604081208054839290610ecf90849061132e565b90915550506040518181526001600160a01b038316906000907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9060200160405180910390a35050565b6001600160a01b038216610f795760405162461bcd60e51b815260206004820152602160248201527f45524332303a206275726e2066726f6d20746865207a65726f206164647265736044820152607360f81b60648201526084016104a7565b6001600160a01b03821660009081526020819052604090205481811015610fed5760405162461bcd60e51b815260206004820152602260248201527f45524332303a206275726e20616d6f756e7420657863656564732062616c616e604482015261636560f01b60648201526084016104a7565b6001600160a01b038316600090815260208190526040812083830390556002805484929061101c9084906114a7565b90915550506040518281526000906001600160a01b038516907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9060200160405180910390a3505050565b6001600160a01b0316600090815260209190915260409020805460ff19169055565b6001600160a01b0381166110df5760405162461bcd60e51b815260206004820152601f60248201527f43616e6e6f74206164642030783020746f20612073686172656420726f6c650060448201526064016104a7565b6001600160a01b0316600090815260209190915260409020805460ff19166001179055565b6001600160a01b0381166111665760405162461bcd60e51b815260206004820152602360248201527f43616e6e6f742073657420616e206578636c757369766520726f6c6520746f2060448201526203078360ec1b60648201526084016104a7565b81546001600160a01b0319166001600160a01b0391909116179055565b600060208083528351808285015260005b818110156111b057858101830151858201604001528201611194565b506000604082860101526040601f19601f8301168501019250505092915050565b80356001600160a01b03811681146111e857600080fd5b919050565b6000806040838503121561120057600080fd5b611209836111d1565b946020939093013593505050565b60008060006060848603121561122c57600080fd5b611235846111d1565b9250611243602085016111d1565b9150604084013590509250925092565b60006020828403121561126557600080fd5b5035919050565b6000806040838503121561127f57600080fd5b8235915061128f602084016111d1565b90509250929050565b6000602082840312156112aa57600080fd5b6112b3826111d1565b9392505050565b600080604083850312156112cd57600080fd5b6112d6836111d1565b915061128f602084016111d1565b600181811c908216806112f857607f821691505b60208210810361098057634e487b7160e01b600052602260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b8082018082111561041457610414611318565b634e487b7160e01b600052602160045260246000fd5b60208082526022908201527f53656e64657220646f6573206e6f7420686f6c6420726571756972656420726f6040820152616c6560f01b606082015260800190565b6020808252602c908201527f4d7573742062652063616c6c6564206f6e20616e20696e697469616c697a656460408201526b2053686172656420726f6c6560a01b606082015260800190565b60208082526024908201527f43616e206f6e6c792062652063616c6c6564206279206120726f6c65206d616e60408201526330b3b2b960e11b606082015260800190565b6020808252602f908201527f4d7573742062652063616c6c6564206f6e20616e20696e697469616c697a656460408201526e204578636c757369766520726f6c6560881b606082015260800190565b634e487b7160e01b600052603260045260246000fd5b6000600182016114a0576114a0611318565b5060010190565b818103818111156104145761041461131856fea26469706673582212208961104dd3923b79c08fd49fd308093d4ed7792f1229905fa0e9f300d355f10d64736f6c63430008100033417474656d7074656420746f2075736520616e20696e76616c696420726f6c65a26469706673582212209ed959ab7c307867c38697ffefbcb73a28d3986a8e6cce2984d2b25a9a36283564736f6c63430008100033",
    "sourceMap": "895:13822:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6639:1643;;;;;;:::i;:::-;;:::i;:::-;;;345:25:73;;;333:2;318:18;6639:1643:0;;;;;;;;1246:46;;1284:8;1246:46;;;;;-1:-1:-1;;;;;650:31:73;;;632:50;;620:2;605:18;1246:46:0;488:200:73;6373:260:0;;;;;;:::i;:::-;;:::i;:::-;;10350:666;;;;;;:::i;:::-;;:::i;2316:42::-;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;;;;;;;;;;;:::i;5917:153::-;;;;;;:::i;:::-;;:::i;1087:47::-;;;;;;;;-1:-1:-1;;;;;3458:32:73;;;3440:51;;3428:2;3413:18;1087:47:0;3257:240:73;12701:647:0;;;;;;:::i;:::-;;:::i;9275:1069::-;;;;;;:::i;:::-;;:::i;3724:2187::-;;;;;;:::i;:::-;;:::i;11701:994::-;;;;;;:::i;:::-;;:::i;1140:42::-;;;;;-1:-1:-1;;;;;1140:42:0;;;6257:110;;;:::i;1188:52::-;;1231:9;1188:52;;1004:39;;;;;6076:175;;;;;;:::i;:::-;;:::i;3604:114::-;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;2365:58::-;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2365:58:0;;;;;;;;;;;;;;:::i;9204:65::-;;;;;;:::i;:::-;;;1298:42;;;;;11022:673;;;;;;:::i;:::-;;:::i;13354:1361::-;;;;;;:::i;:::-;;:::i;1049:32::-;;;;;8288:872;;;;;;:::i;:::-;;:::i;6639:1643::-;6702:19;6756:17;;;:7;:17;;;;;6842:20;;;;6820:19;;;;:42;;6842:20;6820:42;:::i;:::-;6801:15;:61;;:146;;;;;6929:6;:18;;;6906:6;:20;;;6884:6;:19;;;:42;;;;:::i;:::-;:63;;;;:::i;:::-;6866:15;:81;6801:146;6800:197;;;-1:-1:-1;6974:18:0;;;;-1:-1:-1;;;;;6974:18:0;;;;;;:23;6800:197;6792:266;;;;-1:-1:-1;;;6792:266:0;;10383:2:73;6792:266:0;;;10365:21:73;10422:2;10402:18;;;10395:30;10461:34;10441:18;;;10434:62;-1:-1:-1;;;10512:18:73;;;10505:33;10555:19;;6792:266:0;;;;;;;;;7076:12;;-1:-1:-1;;;;;7076:12:0;7068:61;;;;-1:-1:-1;;;7068:61:0;;10787:2:73;7068:61:0;;;10769:21:73;10826:2;10806:18;;;10799:30;-1:-1:-1;;;10845:18:73;;;10838:52;10907:18;;7068:61:0;10585:346:73;7068:61:0;7194:1;7148:25;;;:15;:25;;;;;:34;-1:-1:-1;;;;;7148:34:0;:48;7140:84;;;;-1:-1:-1;;;7140:84:0;;11138:2:73;7140:84:0;;;11120:21:73;11177:2;11157:18;;;11150:30;11216:25;11196:18;;;11189:53;11259:18;;7140:84:0;10936:347:73;7140:84:0;7332:36;;-1:-1:-1;;;7332:36:0;;-1:-1:-1;;;;;7358:8:0;3458:32:73;;7332:36:0;;;3440:51:73;-1:-1:-1;;7332:2:0;:17;;;;;;3413:18:73;;7332:36:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;7310:58;;7413:12;7450:11;7428:6;:19;;;:33;:69;;7486:11;7428:69;;;7464:6;:19;;;7428:69;7413:84;-1:-1:-1;7544:58:0;-1:-1:-1;;;;;7544:8:0;:25;7570:10;7590:4;7413:84;7544:25;:58::i;:::-;7612:39;-1:-1:-1;;;;;7612:8:0;:20;7641:2;7646:4;7612:20;:39::i;:::-;7683:398;;-1:-1:-1;;;7683:398:0;;11908:3:73;7683:398:0;;;11920:21:73;11977:2;11957:18;;;11950:30;12017:34;11996:19;;;11989:63;12089:34;12068:19;;;12061:63;-1:-1:-1;;;12140:19:73;;;12133:34;7794:10:0;12257:20:73;;;12250:45;7838:4:0;12311:18:73;;;12304:43;-1:-1:-1;12383:18:73;;;1104:44;;;1231:9:0;12437:19:73;;;434:43;-1:-1:-1;;;;;7976:8:0;1116:31:73;;12493:19;;;1104:44;12529:19;;;12522:35;;;8016:17:0;12573:19:73;;;12566:35;12617:19;;;12610:35;;;;7683:2:0;:14;;;;12184:19:73;;7683:398:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;8123:92;;;;;;;;8162:10;8123:92;;;;;;;;;-1:-1:-1;8092:28:0;;;:15;:28;;;;;;:123;;;;-1:-1:-1;;;;;;8092:123:0;-1:-1:-1;;;;;8092:123:0;;;;;;;-1:-1:-1;8092:123:0;;;;;;;8231:44;;8092:28;;-1:-1:-1;8092:28:0;;8123:92;;8231:44;;;6722:1560;;;6639:1643;;;:::o;6373:260::-;6457:17;;;;:7;:17;;;;;:23;-1:-1:-1;;;;;6457:23:0;6484:10;6457:37;6449:84;;;;-1:-1:-1;;;6449:84:0;;13047:2:73;6449:84:0;;;13029:21:73;13086:2;13066:18;;;13059:30;13125:34;13105:18;;;13098:62;-1:-1:-1;;;13176:18:73;;;13169:32;13218:19;;6449:84:0;12845:398:73;6449:84:0;6560:1;6551:5;-1:-1:-1;;;;;6551:10:0;;;6543:36;;;;-1:-1:-1;;;6543:36:0;;13450:2:73;6543:36:0;;;13432:21:73;13489:2;13469:18;;;13462:30;-1:-1:-1;;;13508:18:73;;;13501:43;13561:18;;6543:36:0;13248:337:73;6543:36:0;6589:17;;;;:7;:17;;;;;;:29;;:37;;-1:-1:-1;;;;;6589:37:0;;;;;-1:-1:-1;;6589:37:0;;;;;;;;;6373:260::o;10350:666::-;10412:21;10436:17;;;:7;:17;;;;;10534:18;;;;10511:20;;;;10489:19;;;;:42;;10511:20;10489:42;:::i;:::-;:63;;;;:::i;:::-;10471:15;:81;:123;;;-1:-1:-1;10572:18:0;;;;10593:1;10572:18;;;;-1:-1:-1;;;;;10572:18:0;:22;10471:123;10463:171;;;;-1:-1:-1;;;10463:171:0;;;;;;;:::i;:::-;10652:12;;-1:-1:-1;;;;;10652:12:0;10644:64;;;;-1:-1:-1;;;10644:64:0;;14139:2:73;10644:64:0;;;14121:21:73;14178:2;14158:18;;;14151:30;-1:-1:-1;;;14197:18:73;;;14190:55;14262:18;;10644:64:0;13937:349:73;10644:64:0;10726:21;;;;:43;;-1:-1:-1;;;10726:43:0;;10758:10;10726:43;;;3440:51:73;-1:-1:-1;;;;;10726:21:0;;;;:31;;3413:18:73;;10726:43:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:48;10718:97;;;;-1:-1:-1;;;10718:97:0;;14493:2:73;10718:97:0;;;14475:21:73;14532:2;14512:18;;;14505:30;14571:34;14551:18;;;14544:62;-1:-1:-1;;;14622:18:73;;;14615:34;14666:19;;10718:97:0;14291:400:73;10718:97:0;10825:21;;;;:41;;-1:-1:-1;;;10825:41:0;;-1:-1:-1;;;;;10825:21:0;;;;:26;;:41;;10852:10;;10825:21;;:41;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;10877:66:0;-1:-1:-1;;;;;10877:8:0;:25;10903:10;10923:4;1284:8;10877:25;:66::i;:::-;10968:41;;10998:10;;10988:8;;10968:41;;;;;10402:614;10350:666;:::o;2316:42::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2316:42:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;2316:42:0;;;;;;;-1:-1:-1;;2316:42:0;;;;-1:-1:-1;;;;;2316:42:0;;;;;;:::o;5917:153::-;5985:7;6011:17;;;:7;:17;;;;;;:30;;;;;:52;;-1:-1:-1;;;6011:52:0;;6052:10;6011:52;;;3440:51:73;;;;-1:-1:-1;;;;;6011:30:0;;;;:40;;3413:18:73;;6011:52:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;6004:59;5917:153;-1:-1:-1;;5917:153:0:o;12701:647::-;-1:-1:-1;;;;;12812:33:0;;12804:71;;;;-1:-1:-1;;;12804:71:0;;15820:2:73;12804:71:0;;;15802:21:73;15859:2;15839:18;;;15832:30;15898:27;15878:18;;;15871:55;15943:18;;12804:71:0;15618:349:73;12804:71:0;12885:21;12909:17;;;:7;:17;;;;;13008:18;;;;12985:20;;;;12963:19;;;;:42;;12985:20;12963:42;:::i;:::-;:63;;;;:::i;:::-;12944:15;:82;;:126;;;-1:-1:-1;13047:18:0;;;;;;;-1:-1:-1;;;;;13047:18:0;13069:1;13047:23;12944:126;12936:184;;;;-1:-1:-1;;;12936:184:0;;16174:2:73;12936:184:0;;;16156:21:73;16213:2;16193:18;;;16186:30;16252;16232:18;;;16225:58;16300:18;;12936:184:0;15972:352:73;12936:184:0;13130:29;13175:19;-1:-1:-1;;;;;13162:51:0;;:53;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;13130:85;;13238:19;-1:-1:-1;;;;;13225:43:0;;:45;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;13280:21:0;;;;:61;;-1:-1:-1;;;13280:61:0;;-1:-1:-1;;;;;13280:21:0;;;;-1:-1:-1;13280:26:0;;:61;;13307:10;;13319:21;;13280:61;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;12785:563;;12701:647;;:::o;9275:1069::-;9354:21;9378:17;;;:7;:17;;;;;9433:19;;;;9414:15;:38;;;;:102;;;9496:6;:20;;;9474:6;:19;;;:42;;;;:::i;:::-;9456:15;:60;9414:102;9413:151;;;-1:-1:-1;9541:18:0;;;;;;;-1:-1:-1;;;;;9541:18:0;:23;9413:151;9405:202;;;;-1:-1:-1;;;9405:202:0;;16810:2:73;9405:202:0;;;16792:21:73;16849:2;16829:18;;;16822:30;-1:-1:-1;;;16868:18:73;;;16861:47;16925:18;;9405:202:0;16608:341:73;9405:202:0;9625:12;;-1:-1:-1;;;;;9625:12:0;9617:64;;;;-1:-1:-1;;;9617:64:0;;14139:2:73;9617:64:0;;;14121:21:73;14178:2;14158:18;;;14151:30;-1:-1:-1;;;14197:18:73;;;14190:55;14262:18;;9617:64:0;13937:349:73;9617:64:0;9716:1;9699:14;:18;9691:85;;;;-1:-1:-1;;;9691:85:0;;17156:2:73;9691:85:0;;;17138:21:73;17195:2;17175:18;;;17168:30;17234:34;17214:18;;;17207:62;-1:-1:-1;;;17285:18:73;;;17278:52;17347:19;;9691:85:0;16954:418:73;9691:85:0;9786:33;9822:6;:19;;;;;;;;;;-1:-1:-1;;;;;9822:19:0;-1:-1:-1;;;;;9822:31:0;;:33;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;9919:16;;;;9786:69;;-1:-1:-1;9873:42:0;9901:14;9786:69;9873:42;:::i;:::-;:62;;9960;9996:25;9977:6;:16;;;:44;;;;:::i;:::-;9960:16;:62::i;:::-;9937:103;;;;;;;;:::i;:::-;;;;;;;;;;;;;9865:176;;;;;-1:-1:-1;;;9865:176:0;;;;;;;;:::i;:::-;-1:-1:-1;10090:12:0;;10052:72;;10078:10;;-1:-1:-1;;;;;10090:12:0;10104:19;:14;10119:4;10104:19;:::i;:::-;-1:-1:-1;;;;;10052:8:0;:25;;:72;;:25;:72::i;:::-;10134:19;;;;;:55;;-1:-1:-1;;;10134:55:0;;-1:-1:-1;;;;;10134:19:0;;;;:24;;:55;;10167:4;;10174:14;;10134:55;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;10199:30:0;;;;:63;;-1:-1:-1;;;10199:63:0;;-1:-1:-1;;;;;10199:30:0;;;;:35;;:63;;10235:10;;10247:14;;10199:63;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;10286:51:0;;345:25:73;;;10310:10:0;;10300:8;;10286:51;;333:2:73;318:18;10286:51:0;;;;;;;9344:1000;;9275:1069;;:::o;3724:2187::-;4109:16;4169:12;4183:10;4195;4207:12;4158:62;;;;;;;;;;;:::i;:::-;;;;-1:-1:-1;;4158:62:0;;;;;;;;;4148:73;;4158:62;4148:73;;;;4274:1;4239:17;;;:7;:17;;;;;:23;4148:73;;-1:-1:-1;;;;;;4239:23:0;:37;4231:71;;;;-1:-1:-1;;;4231:71:0;;19162:2:73;4231:71:0;;;19144:21:73;19201:2;19181:18;;;19174:30;-1:-1:-1;;;19220:18:73;;;19213:51;19281:18;;4231:71:0;18960:345:73;4231:71:0;4321:27;4393:12;4376:41;;;;;;;;:::i;:::-;;;;;;;;;;;;;4426:1;4351:77;;;;;:::i;:::-;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;4321:107;;4438:38;4521:12;4504:53;;;;;;;;:::i;:::-;;;;;;;;;;;;;4567:1;4479:90;;;;;:::i;:::-;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;4438:131;;4579:29;4653:12;4636:50;;;;;;;;:::i;:::-;;;;;;;;;;;;;4695:1;4611:86;;;;;:::i;:::-;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;4708:37:0;;-1:-1:-1;;;4708:37:0;;4739:4;4708:37;;;3440:51:73;4579:118:0;;-1:-1:-1;;;;;;4708:22:0;;;;;3413:18:73;;4708:37:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;4755:48:0;;-1:-1:-1;;;4755:48:0;;4797:4;4755:48;;;3440:51:73;-1:-1:-1;;;;;4755:33:0;;;-1:-1:-1;4755:33:0;;-1:-1:-1;3413:18:73;;4755:48:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;4813:39:0;;-1:-1:-1;;;4813:39:0;;4846:4;4813:39;;;3440:51:73;-1:-1:-1;;;;;4813:24:0;;;-1:-1:-1;4813:24:0;;-1:-1:-1;3413:18:73;;4813:39:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;4871:37:0;;-1:-1:-1;;;4871:37:0;;4902:4;4871:37;;;3440:51:73;-1:-1:-1;;;;;4871:22:0;;;-1:-1:-1;4871:22:0;;-1:-1:-1;3413:18:73;;4871:37:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;4918:48:0;;-1:-1:-1;;;4918:48:0;;4960:4;4918:48;;;3440:51:73;-1:-1:-1;;;;;4918:33:0;;;-1:-1:-1;4918:33:0;;-1:-1:-1;3413:18:73;;4918:48:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;4976:39:0;;-1:-1:-1;;;4976:39:0;;5009:4;4976:39;;;3440:51:73;-1:-1:-1;;;;;4976:24:0;;;-1:-1:-1;4976:24:0;;-1:-1:-1;3413:18:73;;4976:39:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5026:20;5049:15;5026:38;;5095:525;;;;;;;;5123:10;-1:-1:-1;;;;;5095:525:0;;;;;5161:13;5095:525;;;;5196:7;5095:525;;;;5228:10;5095:525;;;;5266:12;-1:-1:-1;;;;;5095:525:0;;;;;5317:23;-1:-1:-1;;;;;5095:525:0;;;;;5370:14;-1:-1:-1;;;;;5095:525:0;;;;;5412:12;5095:525;;;;5453:14;5095:525;;;;5494:12;5095:525;;;;5533:12;5095:525;;;;5577:4;5095:525;;;;;;5608:1;-1:-1:-1;;;;;5095:525:0;;;;5075:7;:17;5083:8;5075:17;;;;;;;;;;;:545;;;;;;;;;;;;;-1:-1:-1;;;;;5075:545:0;;;;;-1:-1:-1;;;;;5075:545:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;5075:545:0;;;;;-1:-1:-1;;;;;5075:545:0;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;5075:545:0;;;;;-1:-1:-1;;;;;5075:545:0;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;5075:545:0;;;;;-1:-1:-1;;;;;5075:545:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;5075:545:0;;;;;;;;;;;;;;;-1:-1:-1;;;;;5075:545:0;;;-1:-1:-1;;5075:545:0;;;;;;;-1:-1:-1;;5075:545:0;;;;;;;;;;5635:17;;5631:90;;5654:67;-1:-1:-1;;;;;5654:8:0;:25;5680:10;5700:4;5707:13;5654:25;:67::i;:::-;5784:8;5753:151;5807:12;5833:7;5855:13;5883:10;5753:151;;;;;;;;;:::i;:::-;;;;;;;;4127:1784;;;;3724:2187;;;;;;;;:::o;11701:994::-;11864:19;-1:-1:-1;;;;;11903:33:0;;11895:70;;;;-1:-1:-1;;;11895:70:0;;25320:2:73;11895:70:0;;;25302:21:73;25359:2;25339:18;;;25332:30;25398:26;25378:18;;;25371:54;25442:18;;11895:70:0;25118:348:73;11895:70:0;11975:21;11999:17;;;:7;:17;;;;;12097:18;;;;12074:20;;;;12052:19;;;;:42;;12074:20;12052:42;:::i;:::-;:63;;;;:::i;:::-;12034:15;:81;:123;;;-1:-1:-1;12135:18:0;;;;12156:1;12135:18;;;;-1:-1:-1;;;;;12135:18:0;:22;12034:123;12026:171;;;;-1:-1:-1;;;12026:171:0;;;;;;;:::i;:::-;12222:17;;;;:7;:17;;;;;;;:32;;;12215:62;;-1:-1:-1;;;12215:62:0;;12266:10;12215:62;;;3440:51:73;-1:-1:-1;;;;;12222:32:0;;;;12215:50;;3413:18:73;;12215:62:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;12281:1;12215:67;12207:110;;;;-1:-1:-1;;;12207:110:0;;25673:2:73;12207:110:0;;;25655:21:73;25712:2;25692:18;;;25685:30;25751:32;25731:18;;;25724:60;25801:18;;12207:110:0;25471:354:73;12207:110:0;12327:25;12368:19;12327:61;;12398:105;12424:10;12444:4;12451:12;-1:-1:-1;;;;;12451:15:0;;:17;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:51;;-1:-1:-1;;;12451:51:0;;-1:-1:-1;;;;;12492:8:0;3458:32:73;;12451:51:0;;;3440::73;12451:32:0;;;;;;;3413:18:73;;12451:51:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;12398:105::-;12513:94;12534:19;12555:12;-1:-1:-1;;;;;12555:15:0;;:17;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:51;;-1:-1:-1;;;12555:51:0;;-1:-1:-1;;;;;12596:8:0;3458:32:73;;12555:51:0;;;3440::73;12555:32:0;;;;;;;3413:18:73;;12555:51:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;12513:8:0;:20;;:94;:20;:94::i;:::-;12631:57;;-1:-1:-1;;;12631:57:0;;-1:-1:-1;;;;;12631:26:0;;;;;:57;;12658:6;;12666:8;;;;12676:11;;;;12631:57;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;12617:71;11701:994;-1:-1:-1;;;;;;;;;;11701:994:0:o;6257:110::-;6330:30;;-1:-1:-1;;;6330:30:0;;6349:10;6330:30;;;3440:51:73;6304:7:0;;6330:8;-1:-1:-1;;;;;6330:18:0;;;;3413::73;;6330:30:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;6323:37;;6257:110;:::o;6076:175::-;6155:7;6181:17;;;:7;:17;;;;;;:41;;;:63;;-1:-1:-1;;;6181:63:0;;6233:10;6181:63;;;3440:51:73;-1:-1:-1;;;;;6181:41:0;;;;:51;;3413:18:73;;6181:63:0;3257:240:73;3604:114:0;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3694:17:0;;;;:7;:17;;;;;;;;;3687:24;;;;;;;;;-1:-1:-1;;;;;3687:24:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3694:17;3687:24;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;3687:24:0;;;-1:-1:-1;;3687:24:0;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;3687:24:0;;;;;;;;-1:-1:-1;;3604:114:0:o;11022:673::-;11117:7;11151:17;;;:7;:17;;;;;;:32;;;11144:62;;-1:-1:-1;;;11144:62:0;;11195:10;11144:62;;;3440:51:73;-1:-1:-1;;;;;11151:32:0;;;;11144:50;;3413:18:73;;11144:62:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;11210:1;11144:67;11136:119;;;;-1:-1:-1;;;11136:119:0;;27110:2:73;11136:119:0;;;27092:21:73;27149:2;27129:18;;;27122:30;27188:34;27168:18;;;27161:62;-1:-1:-1;;;27239:18:73;;;27232:37;27286:19;;11136:119:0;26908:403:73;11136:119:0;11265:21;11289:17;;;:7;:17;;;;;11387:18;;;;11364:20;;;;11342:19;;;;:42;;11364:20;11342:42;:::i;:::-;:63;;;;:::i;:::-;11324:15;:81;:123;;;-1:-1:-1;11425:18:0;;;;11446:1;11425:18;;;;-1:-1:-1;;;;;11425:18:0;:22;11324:123;11316:171;;;;-1:-1:-1;;;11316:171:0;;;;;;;:::i;:::-;11497:7;:62;;-1:-1:-1;;;;;;11497:62:0;-1:-1:-1;;;;;11497:62:0;;;;;;;11597:53;;11622:8;;11497:62;11597:53;;;:::i;:::-;-1:-1:-1;;;;;27546:15:73;;;27528:34;;27598:15;;27593:2;27578:18;;27571:43;27478:2;27463:18;11597:53:0;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;11569:81:0;11022:673;-1:-1:-1;;;;;11022:673:0:o;13354:1361::-;13411:21;13435:17;;;:7;:17;;;;;13534:18;;;;13511:20;;;;13489:19;;;;:42;;13511:20;13489:42;:::i;:::-;:63;;;;:::i;:::-;13470:15;:82;;:126;;;-1:-1:-1;13573:18:0;;;;;;;-1:-1:-1;;;;;13573:18:0;13595:1;13573:23;13470:126;13462:184;;;;-1:-1:-1;;;13462:184:0;;16174:2:73;13462:184:0;;;16156:21:73;16213:2;16193:18;;;16186:30;16252;16232:18;;;16225:58;16300:18;;13462:184:0;15972:352:73;13462:184:0;13688:30;;;;13681:60;;-1:-1:-1;;;13681:60:0;;13730:10;13681:60;;;3440:51:73;13657:21:0;;-1:-1:-1;;;;;13688:30:0;;13681:48;;3413:18:73;;13681:60:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;13821:21;;;;:43;;-1:-1:-1;;;13821:43:0;;13853:10;13821:43;;;3440:51:73;13657:84:0;;-1:-1:-1;13751:23:0;;;;-1:-1:-1;;;;;13821:21:0;;:31;;3413:18:73;;13821:43:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;13789:75;;13875:24;13940:1;13902:6;:21;;;;;;;;;;-1:-1:-1;;;;;13902:21:0;-1:-1:-1;;;;;13902:33:0;;:35;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:39;:143;;14044:1;13902:143;;;14006:6;:21;;;;;;;;;;-1:-1:-1;;;;;14006:21:0;-1:-1:-1;;;;;14006:33:0;;:35;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;13960:21;;;;:43;;-1:-1:-1;;;13960:43:0;;13992:10;13960:43;;;3440:51:73;-1:-1:-1;;;;;13960:21:0;;;;:31;;3413:18:73;;13960:43:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;13944:6;:13;;;:59;;;;:::i;:::-;:97;;;;:::i;:::-;14056:30;;;;:66;;-1:-1:-1;;;14056:66:0;;13875:170;;-1:-1:-1;;;;;;14056:30:0;;:39;;:66;;14096:10;;14108:13;;14056:66;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;14136:21:0;;;;:65;;-1:-1:-1;;;14136:65:0;;-1:-1:-1;;;;;14136:21:0;;;;:30;;:65;;14167:10;;14179:21;;14136:65;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;14215:23:0;;;;;;14212:398;;;14271:13;;-1:-1:-1;14302:19:0;;14298:127;;14348:19;;;;14341:69;;-1:-1:-1;;;;;14348:19:0;14382:10;14394:15;14341:40;:69::i;:::-;14212:398;;;14477:20;;14474:126;;14542:12;;14516:69;;-1:-1:-1;;;;;14516:8:0;:25;;;14542:12;14556:10;14568:16;14516:25;:69::i;:::-;14634:70;;;28056:25:73;;;28112:2;28097:18;;28090:34;;;14658:10:0;;14648:8;;14634:70;;28029:18:73;14634:70:0;;;;;;;13401:1314;;;;;13354:1361;:::o;8288:872::-;8395:10;-1:-1:-1;;;;;8417:2:0;8395:25;;8387:70;;;;-1:-1:-1;;;8387:70:0;;28337:2:73;8387:70:0;;;28319:21:73;;;28356:18;;;28349:30;28415:34;28395:18;;;28388:62;28467:18;;8387:70:0;28135:356:73;8387:70:0;8467:21;8499:28;;;:15;:28;;;;;;;;8491:7;8499:37;;;;8491:46;;;;;;;8556:497;;;;8594:23;;;:31;;-1:-1:-1;;8594:31:0;;;8673:36;;-1:-1:-1;;;8673:36:0;;-1:-1:-1;;;;;8699:8:0;3458:32:73;;8673:36:0;;;3440:51:73;-1:-1:-1;;8673:2:0;:17;;;;;;3413:18:73;;8673:36:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;8651:58;;8758:12;8795:11;8773:6;:19;;;:33;:69;;8831:11;8773:69;;;8809:6;:19;;;8773:69;8856:19;;;;;8900:33;;;-1:-1:-1;;;8900:33:0;;;;8758:84;;-1:-1:-1;;;;;;8856:19:0;;;;:28;;8893:4;;8856:19;;8900:31;;:33;;;;;;;;;;;;;8856:19;8900:33;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;8856:78;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;8970:28:0;;;;:15;:28;;;;;:37;8948:66;;-1:-1:-1;;;;;8948:8:0;:21;;;8970:37;9009:4;8948:21;:66::i;:::-;8580:473;;8556:497;9062:18;;;:22;;-1:-1:-1;;9062:22:0;;;;;-1:-1:-1;9115:28:0;;;9083:1;9115:28;;;;;;-1:-1:-1;9115:37:0;;9100:53;;9115:37;;9100:53;;;8377:783;8288:872;;:::o;912:241:24:-;1077:68;;-1:-1:-1;;;;;28754:15:73;;;1077:68:24;;;28736:34:73;28806:15;;28786:18;;;28779:43;28838:18;;;28831:34;;;1050:96:24;;1070:5;;-1:-1:-1;;;1100:27:24;28671:18:73;;1077:68:24;;;;-1:-1:-1;;1077:68:24;;;;;;;;;;;;;;-1:-1:-1;;;;;1077:68:24;-1:-1:-1;;;;;;1077:68:24;;;;;;;;;;1050:19;:96::i;:::-;912:241;;;;:::o;1413:603::-;1768:10;;;1767:62;;-1:-1:-1;1784:39:24;;-1:-1:-1;;;1784:39:24;;1808:4;1784:39;;;27528:34:73;-1:-1:-1;;;;;27598:15:73;;;27578:18;;;27571:43;1784:15:24;;;;;27463:18:73;;1784:39:24;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:44;1767:62;1746:163;;;;-1:-1:-1;;;1746:163:24;;29078:2:73;1746:163:24;;;29060:21:73;29117:2;29097:18;;;29090:30;29156:34;29136:18;;;29129:62;-1:-1:-1;;;29207:18:73;;;29200:52;29269:19;;1746:163:24;28876:418:73;1746:163:24;1919:90;1939:5;1969:22;;;1993:7;2002:5;1946:62;;;;;;;;;:::i;1919:90::-;1413:603;;;:::o;328:703:27:-;384:13;601:5;610:1;601:10;597:51;;-1:-1:-1;;627:10:27;;;;;;;;;;;;-1:-1:-1;;;627:10:27;;;;;328:703::o;597:51::-;672:5;657:12;711:75;718:9;;711:75;;743:8;;;;:::i;:::-;;-1:-1:-1;765:10:27;;-1:-1:-1;773:2:27;765:10;;:::i;:::-;;;711:75;;;795:19;827:6;-1:-1:-1;;;;;817:17:27;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;817:17:27;;795:39;;844:150;851:10;;844:150;;877:11;887:1;877:11;;:::i;:::-;;-1:-1:-1;945:10:27;953:2;945:5;:10;:::i;:::-;932:24;;:2;:24;:::i;:::-;919:39;;902:6;909;902:14;;;;;;;;:::i;:::-;;;;:56;-1:-1:-1;;;;;902:56:27;;;;;;;;-1:-1:-1;972:11:27;981:2;972:11;;:::i;:::-;;;844:150;;;1017:6;328:703;-1:-1:-1;;;;328:703:27:o;701:205:24:-;813:86;833:5;863:23;;;888:2;892:5;840:58;;;;;;;;;:::i;3207:706::-;3626:23;3652:69;3680:4;3652:69;;;;;;;;;;;;;;;;;3660:5;-1:-1:-1;;;;;3652:27:24;;;:69;;;;;:::i;:::-;3735:17;;3626:95;;-1:-1:-1;3735:21:24;3731:176;;3830:10;3819:30;;;;;;;;;;;;:::i;:::-;3811:85;;;;-1:-1:-1;;;3811:85:24;;29890:2:73;3811:85:24;;;29872:21:73;29929:2;29909:18;;;29902:30;29968:34;29948:18;;;29941:62;-1:-1:-1;;;30019:18:73;;;30012:40;30069:19;;3811:85:24;29688:406:73;3861:223:25;3994:12;4025:52;4047:6;4055:4;4061:1;4064:12;4025:21;:52::i;:::-;4018:59;;3861:223;;;;;;:::o;4948:499::-;5113:12;5170:5;5145:21;:30;;5137:81;;;;-1:-1:-1;;;5137:81:25;;30301:2:73;5137:81:25;;;30283:21:73;30340:2;30320:18;;;30313:30;30379:34;30359:18;;;30352:62;-1:-1:-1;;;30430:18:73;;;30423:36;30476:19;;5137:81:25;30099:402:73;5137:81:25;-1:-1:-1;;;;;1465:19:25;;;5228:60;;;;-1:-1:-1;;;5228:60:25;;30708:2:73;5228:60:25;;;30690:21:73;30747:2;30727:18;;;30720:30;30786:31;30766:18;;;30759:59;30835:18;;5228:60:25;30506:353:73;5228:60:25;5300:12;5314:23;5341:6;-1:-1:-1;;;;;5341:11:25;5360:5;5367:4;5341:31;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5299:73;;;;5389:51;5406:7;5415:10;5427:12;5389:16;:51::i;:::-;5382:58;4948:499;-1:-1:-1;;;;;;;4948:499:25:o;7561:692::-;7707:12;7735:7;7731:516;;;-1:-1:-1;7765:10:25;7758:17;;7731:516;7876:17;;:21;7872:365;;8070:10;8064:17;8130:15;8117:10;8113:2;8109:19;8102:44;7872:365;8209:12;8202:20;;-1:-1:-1;;;8202:20:25;;;;;;;;:::i;-1:-1:-1:-;;;;;;;;:::o;:::-;;;;;;;;:::o;14:180:73:-;73:6;126:2;114:9;105:7;101:23;97:32;94:52;;;142:1;139;132:12;94:52;-1:-1:-1;165:23:73;;14:180;-1:-1:-1;14:180:73:o;693:352::-;760:6;768;821:2;809:9;800:7;796:23;792:32;789:52;;;837:1;834;827:12;789:52;873:9;860:23;850:33;;933:2;922:9;918:18;905:32;-1:-1:-1;;;;;970:5:73;966:30;959:5;956:41;946:69;;1011:1;1008;1001:12;946:69;1034:5;1024:15;;;693:352;;;;;:::o;1159:250::-;1244:1;1254:113;1268:6;1265:1;1262:13;1254:113;;;1344:11;;;1338:18;1325:11;;;1318:39;1290:2;1283:10;1254:113;;;-1:-1:-1;;1401:1:73;1383:16;;1376:27;1159:250::o;1414:271::-;1456:3;1494:5;1488:12;1521:6;1516:3;1509:19;1537:76;1606:6;1599:4;1594:3;1590:14;1583:4;1576:5;1572:16;1537:76;:::i;:::-;1667:2;1646:15;-1:-1:-1;;1642:29:73;1633:39;;;;1674:4;1629:50;;1414:271;-1:-1:-1;;1414:271:73:o;1786:1284::-;-1:-1:-1;;;;;2338:32:73;;;2320:51;;2402:2;2387:18;;2380:34;;;2445:2;2430:18;;2423:34;;;2488:2;2473:18;;2466:34;;;2537:32;;;2531:3;2516:19;;2509:61;2607:32;;;2358:3;2586:19;;2579:61;2677:32;;2671:3;2656:19;;2649:61;2741:3;2726:19;;2719:35;;;2785:3;2770:19;;2763:35;;;2829:3;2814:19;;2807:35;;;2879:3;2873;2858:19;;2851:32;;;-1:-1:-1;;2900:47:73;;2927:19;;2918:7;2900:47;:::i;:::-;2991:15;;2984:23;2978:3;2963:19;;2956:52;-1:-1:-1;;;;;;446:30:73;;;;3059:3;3044:19;;;434:43;2892:55;1786:1284;-1:-1:-1;;;;;;;;;;;1786:1284:73:o;3502:131::-;-1:-1:-1;;;;;3577:31:73;;3567:42;;3557:70;;3623:1;3620;3613:12;3638:315;3706:6;3714;3767:2;3755:9;3746:7;3742:23;3738:32;3735:52;;;3783:1;3780;3773:12;3735:52;3819:9;3806:23;3796:33;;3879:2;3868:9;3864:18;3851:32;3892:31;3917:5;3892:31;:::i;3958:248::-;4026:6;4034;4087:2;4075:9;4066:7;4062:23;4058:32;4055:52;;;4103:1;4100;4093:12;4055:52;-1:-1:-1;;4126:23:73;;;4196:2;4181:18;;;4168:32;;-1:-1:-1;3958:248:73:o;4211:127::-;4272:10;4267:3;4263:20;4260:1;4253:31;4303:4;4300:1;4293:15;4327:4;4324:1;4317:15;4343:1265;4457:6;4465;4473;4481;4489;4497;4550:3;4538:9;4529:7;4525:23;4521:33;4518:53;;;4567:1;4564;4557:12;4518:53;4603:9;4590:23;4580:33;;4660:2;4649:9;4645:18;4632:32;4622:42;;4711:2;4700:9;4696:18;4683:32;4673:42;;4766:2;4755:9;4751:18;4738:32;-1:-1:-1;;;;;4830:2:73;4822:6;4819:14;4816:34;;;4846:1;4843;4836:12;4816:34;4884:6;4873:9;4869:22;4859:32;;4929:7;4922:4;4918:2;4914:13;4910:27;4900:55;;4951:1;4948;4941:12;4900:55;4987:2;4974:16;5009:2;5005;5002:10;4999:36;;;5015:18;;:::i;:::-;5090:2;5084:9;5058:2;5144:13;;-1:-1:-1;;5140:22:73;;;5164:2;5136:31;5132:40;5120:53;;;5188:18;;;5208:22;;;5185:46;5182:72;;;5234:18;;:::i;:::-;5274:10;5270:2;5263:22;5309:2;5301:6;5294:18;5349:7;5344:2;5339;5335;5331:11;5327:20;5324:33;5321:53;;;5370:1;5367;5360:12;5321:53;5426:2;5421;5417;5413:11;5408:2;5400:6;5396:15;5383:46;5471:1;5466:2;5461;5453:6;5449:15;5445:24;5438:35;5492:6;5482:16;;;;;;;5545:3;5534:9;5530:19;5517:33;5507:43;;5597:3;5586:9;5582:19;5569:33;5559:43;;4343:1265;;;;;;;;:::o;5613:348::-;5665:8;5675:6;5729:3;5722:4;5714:6;5710:17;5706:27;5696:55;;5747:1;5744;5737:12;5696:55;-1:-1:-1;5770:20:73;;-1:-1:-1;;;;;5802:30:73;;5799:50;;;5845:1;5842;5835:12;5799:50;5882:4;5874:6;5870:17;5858:29;;5934:3;5927:4;5918:6;5910;5906:19;5902:30;5899:39;5896:59;;;5951:1;5948;5941:12;5896:59;5613:348;;;;;:::o;5966:994::-;6085:6;6093;6101;6109;6117;6125;6133;6186:3;6174:9;6165:7;6161:23;6157:33;6154:53;;;6203:1;6200;6193:12;6154:53;6239:9;6226:23;6216:33;;6296:2;6285:9;6281:18;6268:32;6258:42;;6351:2;6340:9;6336:18;6323:32;-1:-1:-1;;;;;6415:2:73;6407:6;6404:14;6401:34;;;6431:1;6428;6421:12;6401:34;6470:59;6521:7;6512:6;6501:9;6497:22;6470:59;:::i;:::-;6548:8;;-1:-1:-1;6444:85:73;-1:-1:-1;6636:2:73;6621:18;;6608:32;;-1:-1:-1;6652:16:73;;;6649:36;;;6681:1;6678;6671:12;6649:36;;6720:61;6773:7;6762:8;6751:9;6747:24;6720:61;:::i;:::-;6800:8;;-1:-1:-1;6694:87:73;-1:-1:-1;;6885:3:73;6870:19;;6857:33;6899:31;6857:33;6899:31;:::i;:::-;6949:5;6939:15;;;5966:994;;;;;;;;;;:::o;7198:1568::-;7371:2;7360:9;7353:21;7383:53;7432:2;7421:9;7417:18;7408:6;7402:13;-1:-1:-1;;;;;1116:31:73;1104:44;;1050:104;7383:53;7490:2;7482:6;7478:15;7472:22;7467:2;7456:9;7452:18;7445:50;7549:2;7541:6;7537:15;7531:22;7526:2;7515:9;7511:18;7504:50;7609:2;7601:6;7597:15;7591:22;7585:3;7574:9;7570:19;7563:51;7334:4;7661:3;7653:6;7649:16;7643:23;7675:53;7723:3;7712:9;7708:19;7694:12;-1:-1:-1;;;;;1116:31:73;1104:44;;1050:104;7675:53;-1:-1:-1;7777:3:73;7765:16;;7759:23;-1:-1:-1;;;;;1116:31:73;;7841:3;7826:19;;1104:44;-1:-1:-1;7895:3:73;7883:16;;7877:23;-1:-1:-1;;;;;1116:31:73;;7959:3;7944:19;;1104:44;-1:-1:-1;8001:3:73;7989:16;;7983:23;8025:3;8044:18;;;8037:30;;;;8092:15;;8086:22;8127:3;8146:18;;;8139:30;;;;8194:15;;8188:22;8229:3;8248:18;;;8241:30;;;;8308:15;;8302:22;8343:6;8368:3;8387:18;;;8380:30;;;8433:54;8482:3;8467:19;;8302:22;8433:54;:::i;:::-;8524:15;;;8518:22;8419:68;;-1:-1:-1;8559:3:73;8571:51;8603:18;;;8518:22;1760:13;1753:21;1741:34;;1690:91;8571:51;8659:15;;;8653:22;-1:-1:-1;;;;;446:30:73;8718:18;;434:43;;;;-1:-1:-1;8754:6:73;;-1:-1:-1;7198:1568:73:o;8771:274::-;-1:-1:-1;;;;;8963:32:73;;;;8945:51;;9027:2;9012:18;;9005:34;8933:2;8918:18;;8771:274::o;9482:118::-;9568:5;9561:13;9554:21;9547:5;9544:32;9534:60;;9590:1;9587;9580:12;9605:309;9670:6;9678;9731:2;9719:9;9710:7;9706:23;9702:32;9699:52;;;9747:1;9744;9737:12;9699:52;9783:9;9770:23;9760:33;;9843:2;9832:9;9828:18;9815:32;9856:28;9878:5;9856:28;:::i;9919:127::-;9980:10;9975:3;9971:20;9968:1;9961:31;10011:4;10008:1;10001:15;10035:4;10032:1;10025:15;10051:125;10116:9;;;10137:10;;;10134:36;;;10150:18;;:::i;11288:184::-;11358:6;11411:2;11399:9;11390:7;11386:23;11382:32;11379:52;;;11427:1;11424;11417:12;11379:52;-1:-1:-1;11450:16:73;;11288:184;-1:-1:-1;11288:184:73:o;13590:342::-;13792:2;13774:21;;;13831:2;13811:18;;;13804:30;-1:-1:-1;;;13865:2:73;13850:18;;13843:48;13923:2;13908:18;;13590:342::o;14983:245::-;15050:6;15103:2;15091:9;15082:7;15078:23;15074:32;15071:52;;;15119:1;15116;15109:12;15071:52;15151:9;15145:16;15170:28;15192:5;15170:28;:::i;15233:380::-;15312:1;15308:12;;;;15355;;;15376:61;;15430:4;15422:6;15418:17;15408:27;;15376:61;15483:2;15475:6;15472:14;15452:18;15449:38;15446:161;;15529:10;15524:3;15520:20;15517:1;15510:31;15564:4;15561:1;15554:15;15592:4;15589:1;15582:15;15446:161;;15233:380;;;:::o;17377:128::-;17444:9;;;17465:11;;;17462:37;;;17479:18;;:::i;17510:581::-;-1:-1:-1;;;17847:3:73;17840:20;17822:3;17889:6;17883:13;17905:74;17972:6;17968:1;17963:3;17959:11;17952:4;17944:6;17940:17;17905:74;:::i;:::-;-1:-1:-1;;;18038:1:73;17998:16;;;;18030:10;;;18023:35;-1:-1:-1;18082:2:73;18074:11;;17510:581;-1:-1:-1;17510:581:73:o;18096:220::-;18245:2;18234:9;18227:21;18208:4;18265:45;18306:2;18295:9;18291:18;18283:6;18265:45;:::i;18321:168::-;18361:7;18427:1;18423;18419:6;18415:14;18412:1;18409:21;18404:1;18397:9;18390:17;18386:45;18383:71;;;18434:18;;:::i;:::-;-1:-1:-1;18474:9:73;;18321:168::o;18494:461::-;18727:6;18716:9;18709:25;18770:6;18765:2;18754:9;18750:18;18743:34;18842:1;18838;18833:3;18829:11;18825:19;18817:6;18813:32;18808:2;18797:9;18793:18;18786:60;18882:3;18877:2;18866:9;18862:18;18855:31;18690:4;18903:46;18944:3;18933:9;18929:19;18921:6;18903:46;:::i;:::-;18895:54;18494:461;-1:-1:-1;;;;;;18494:461:73:o;19310:458::-;19542:3;19580:6;19574:13;19596:66;19655:6;19650:3;19643:4;19635:6;19631:17;19596:66;:::i;:::-;-1:-1:-1;;;19684:16:73;;19709:24;;;-1:-1:-1;19760:1:73;19749:13;;19310:458;-1:-1:-1;19310:458:73:o;19773:570::-;20057:2;20046:9;20039:21;20020:4;20083:45;20124:2;20113:9;20109:18;20101:6;20083:45;:::i;:::-;20176:9;20168:6;20164:22;20159:2;20148:9;20144:18;20137:50;20211:1;20203:6;20196:17;-1:-1:-1;;;20241:2:73;20233:6;20229:15;20222:29;20280:2;20272:6;20268:15;20260:23;;;20331:4;20323:6;20319:17;20314:2;20303:9;20299:18;20292:45;19773:570;;;;;:::o;20348:471::-;20580:3;20618:6;20612:13;20634:66;20693:6;20688:3;20681:4;20673:6;20669:17;20634:66;:::i;:::-;-1:-1:-1;;;20722:16:73;;20747:36;;;-1:-1:-1;20810:2:73;20799:14;;20348:471;-1:-1:-1;20348:471:73:o;20824:571::-;21108:2;21097:9;21090:21;21071:4;21134:45;21175:2;21164:9;21160:18;21152:6;21134:45;:::i;:::-;21227:9;21219:6;21215:22;21210:2;21199:9;21195:18;21188:50;21262:1;21254:6;21247:17;-1:-1:-1;;;21292:2:73;21284:6;21280:15;21273:30;21332:2;21324:6;21320:15;21312:23;;;21383:4;21375:6;21371:17;21366:2;21355:9;21351:18;21344:45;20824:571;;;;;:::o;21400:468::-;21632:3;21670:6;21664:13;21686:66;21745:6;21740:3;21733:4;21725:6;21721:17;21686:66;:::i;:::-;-1:-1:-1;;;21774:16:73;;21799:33;;;-1:-1:-1;21859:2:73;21848:14;;21400:468;-1:-1:-1;21400:468:73:o;21873:570::-;22157:2;22146:9;22139:21;22120:4;22183:45;22224:2;22213:9;22209:18;22201:6;22183:45;:::i;:::-;22276:9;22268:6;22264:22;22259:2;22248:9;22244:18;22237:50;22311:1;22303:6;22296:17;-1:-1:-1;;;22341:2:73;22333:6;22329:15;22322:29;22380:2;22372:6;22368:15;22360:23;;;22431:4;22423:6;22419:17;22414:2;22403:9;22399:18;22392:45;21873:570;;;;;:::o;22574:545::-;22676:2;22671:3;22668:11;22665:448;;;22712:1;22737:5;22733:2;22726:17;22782:4;22778:2;22768:19;22852:2;22840:10;22836:19;22833:1;22829:27;22823:4;22819:38;22888:4;22876:10;22873:20;22870:47;;;-1:-1:-1;22911:4:73;22870:47;22966:2;22961:3;22957:12;22954:1;22950:20;22944:4;22940:31;22930:41;;23021:82;23039:2;23032:5;23029:13;23021:82;;;23084:17;;;23065:1;23054:13;23021:82;;;23025:3;;;22574:545;;;:::o;23295:1352::-;23421:3;23415:10;-1:-1:-1;;;;;23440:6:73;23437:30;23434:56;;;23470:18;;:::i;:::-;23499:97;23589:6;23549:38;23581:4;23575:11;23549:38;:::i;:::-;23543:4;23499:97;:::i;:::-;23651:4;;23715:2;23704:14;;23732:1;23727:663;;;;24434:1;24451:6;24448:89;;;-1:-1:-1;24503:19:73;;;24497:26;24448:89;-1:-1:-1;;23252:1:73;23248:11;;;23244:24;23240:29;23230:40;23276:1;23272:11;;;23227:57;24550:81;;23697:944;;23727:663;22521:1;22514:14;;;22558:4;22545:18;;-1:-1:-1;;23763:20:73;;;23881:236;23895:7;23892:1;23889:14;23881:236;;;23984:19;;;23978:26;23963:42;;24076:27;;;;24044:1;24032:14;;;;23911:19;;23881:236;;;23885:3;24145:6;24136:7;24133:19;24130:201;;;24206:19;;;24200:26;-1:-1:-1;;24289:1:73;24285:14;;;24301:3;24281:24;24277:37;24273:42;24258:58;24243:74;;24130:201;-1:-1:-1;;;;;24377:1:73;24361:14;;;24357:22;24344:36;;-1:-1:-1;23295:1352:73:o;24652:461::-;24885:3;24874:9;24867:22;24848:4;24906:46;24947:3;24936:9;24932:19;24924:6;24906:46;:::i;:::-;24983:2;24968:18;;24961:34;;;;-1:-1:-1;25026:2:73;25011:18;;25004:34;;;;-1:-1:-1;;;;;25074:32:73;25069:2;25054:18;;;25047:60;24898:54;24652:461;-1:-1:-1;24652:461:73:o;25830:288::-;25937:6;25990:2;25978:9;25969:7;25965:23;25961:32;25958:52;;;26006:1;26003;25996:12;25958:52;26038:9;26032:16;26057:31;26082:5;26057:31;:::i;26123:267::-;26212:6;26207:3;26200:19;26264:6;26257:5;26250:4;26245:3;26241:14;26228:43;-1:-1:-1;26316:1:73;26291:16;;;26309:4;26287:27;;;26280:38;;;;26372:2;26351:15;;;-1:-1:-1;;26347:29:73;26338:39;;;26334:50;;26123:267::o;26395:508::-;26640:6;26629:9;26622:25;26683:2;26678;26667:9;26663:18;26656:30;26603:4;26709:62;26767:2;26756:9;26752:18;26744:6;26736;26709:62;:::i;:::-;26819:9;26811:6;26807:22;26802:2;26791:9;26787:18;26780:50;26847;26890:6;26882;26874;26847:50;:::i;:::-;26839:58;26395:508;-1:-1:-1;;;;;;;;26395:508:73:o;27625:127::-;27686:10;27681:3;27677:20;27674:1;27667:31;27717:4;27714:1;27707:15;27741:4;27738:1;27731:15;27757:120;27797:1;27823;27813:35;;27828:18;;:::i;:::-;-1:-1:-1;27862:9:73;;27757:120::o;29299:135::-;29338:3;29359:17;;;29356:43;;29379:18;;:::i;:::-;-1:-1:-1;29426:1:73;29415:13;;29299:135::o;29439:112::-;29471:1;29497;29487:35;;29502:18;;:::i;:::-;-1:-1:-1;29536:9:73;;29439:112::o;29556:127::-;29617:10;29612:3;29608:20;29605:1;29598:31;29648:4;29645:1;29638:15;29672:4;29669:1;29662:15;30864:287;30993:3;31031:6;31025:13;31047:66;31106:6;31101:3;31094:4;31086:6;31082:17;31047:66;:::i;:::-;31129:16;;;;;30864:287;-1:-1:-1;;30864:287:73:o",
    "linkReferences": {},
    "immutableReferences": {
      "20": [
        {
          "start": 783,
          "length": 32
        }
      ],
      "23": [
        {
          "start": 1060,
          "length": 32
        },
        {
          "start": 1539,
          "length": 32
        },
        {
          "start": 1739,
          "length": 32
        },
        {
          "start": 1794,
          "length": 32
        },
        {
          "start": 2024,
          "length": 32
        },
        {
          "start": 3148,
          "length": 32
        },
        {
          "start": 4873,
          "length": 32
        },
        {
          "start": 6730,
          "length": 32
        },
        {
          "start": 7399,
          "length": 32
        },
        {
          "start": 7648,
          "length": 32
        },
        {
          "start": 7778,
          "length": 32
        },
        {
          "start": 7980,
          "length": 32
        },
        {
          "start": 8995,
          "length": 32
        },
        {
          "start": 10239,
          "length": 32
        },
        {
          "start": 10545,
          "length": 32
        },
        {
          "start": 10987,
          "length": 32
        }
      ],
      "26": [
        {
          "start": 587,
          "length": 32
        },
        {
          "start": 1582,
          "length": 32
        },
        {
          "start": 1828,
          "length": 32
        },
        {
          "start": 2118,
          "length": 32
        },
        {
          "start": 10362,
          "length": 32
        },
        {
          "start": 10588,
          "length": 32
        }
      ],
      "37": [
        {
          "start": 974,
          "length": 32
        },
        {
          "start": 2071,
          "length": 32
        }
      ]
    }
  },
  "methodIdentifiers": {
    "accountBalance()": "b0a1c1c4",
    "assertedMarkets(bytes32)": "d4107645",
    "assertionDisputedCallback(bytes32)": "d448a4ec",
    "assertionLiveness()": "b75d4e24",
    "assertionResolvedCallback(bytes32,bool)": "f1b156b2",
    "carbonCreditBalance(bytes32)": "82f7b9ac",
    "changeMarketState(bytes32,uint64)": "481e9c6b",
    "convertibleCarbonCreditBalance(bytes32)": "bac6d3c1",
    "currency()": "e5a6b10f",
    "data_oo()": "af2b57ce",
    "declareFalsePromise(bytes32)": "1122cca3",
    "defaultIdentifier()": "d509b017",
    "finder()": "b9a3c84c",
    "getMarket(bytes32)": "c3c95c7b",
    "initializeDataPool(bytes32,address)": "d79318d4",
    "initializeMarket(uint256,uint256,uint256,string,uint256,uint256)": "ad7be668",
    "markets(bytes32)": "7564912b",
    "mintCredit(bytes32,uint256)": "a7f0de81",
    "oo()": "8921a614",
    "registerValidator(bytes32)": "607049d8",
    "settleMarket(bytes32)": "e039c00e",
    "settleValidatorToken(bytes32,address)": "8b573524",
    "submitAndAssertData(bytes32,bytes32,string,string,address)": "aea59c74",
    "validatorFee()": "3f6d8256"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.16+commit.07a7930e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_finder\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_currency\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_optimisticOracleV3\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"marketId\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"creditsMinted\",\"type\":\"uint256\"}],\"name\":\"CreditsMinted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"marketId\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"assertionId\",\"type\":\"bytes32\"}],\"name\":\"FalsePromisedDeclared\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"marketId\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"description\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"reward\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"requiredBond\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"MarketInitialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"marketId\",\"type\":\"bytes32\"}],\"name\":\"MarketResolved\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"marketId\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"individualReward\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"creditReceived\",\"type\":\"uint256\"}],\"name\":\"MarketSettled\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"marketId\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"ValidatorRegistered\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"accountBalance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"name\":\"assertedMarkets\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"asserter\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"marketId\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"assertionId\",\"type\":\"bytes32\"}],\"name\":\"assertionDisputedCallback\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"assertionLiveness\",\"outputs\":[{\"internalType\":\"uint64\",\"name\":\"\",\"type\":\"uint64\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"assertionId\",\"type\":\"bytes32\"},{\"internalType\":\"bool\",\"name\":\"assertedTruthfully\",\"type\":\"bool\"}],\"name\":\"assertionResolvedCallback\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"marketId\",\"type\":\"bytes32\"}],\"name\":\"carbonCreditBalance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"marketId\",\"type\":\"bytes32\"},{\"internalType\":\"uint64\",\"name\":\"state\",\"type\":\"uint64\"}],\"name\":\"changeMarketState\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"marketId\",\"type\":\"bytes32\"}],\"name\":\"convertibleCarbonCreditBalance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"currency\",\"outputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"data_oo\",\"outputs\":[{\"internalType\":\"contract OptimisticOracleV3Interface\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"marketId\",\"type\":\"bytes32\"}],\"name\":\"declareFalsePromise\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"assertionId\",\"type\":\"bytes32\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"defaultIdentifier\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"finder\",\"outputs\":[{\"internalType\":\"contract FinderInterface\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"marketId\",\"type\":\"bytes32\"}],\"name\":\"getMarket\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"requiredBond\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"reward\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"creditCap\",\"type\":\"uint256\"},{\"internalType\":\"contract ExpandedIERC20\",\"name\":\"carbonCredit\",\"type\":\"address\"},{\"internalType\":\"contract ExpandedIERC20\",\"name\":\"convertibleCarbonCredit\",\"type\":\"address\"},{\"internalType\":\"contract ExpandedIERC20\",\"name\":\"validatorToken\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"startingTime\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"openingPeriod\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"auditPeriod\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"description\",\"type\":\"string\"},{\"internalType\":\"bool\",\"name\":\"promiseDelivered\",\"type\":\"bool\"},{\"internalType\":\"uint64\",\"name\":\"marketState\",\"type\":\"uint64\"}],\"internalType\":\"struct CarbonUMArket.Market\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"marketId\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"data_optimisticOracleV3\",\"type\":\"address\"}],\"name\":\"initializeDataPool\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_reward\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_requiredBond\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_creditCap\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"_description\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"_openingPeriod\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_auditPeriod\",\"type\":\"uint256\"}],\"name\":\"initializeMarket\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"marketId\",\"type\":\"bytes32\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"name\":\"markets\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"requiredBond\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"reward\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"creditCap\",\"type\":\"uint256\"},{\"internalType\":\"contract ExpandedIERC20\",\"name\":\"carbonCredit\",\"type\":\"address\"},{\"internalType\":\"contract ExpandedIERC20\",\"name\":\"convertibleCarbonCredit\",\"type\":\"address\"},{\"internalType\":\"contract ExpandedIERC20\",\"name\":\"validatorToken\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"startingTime\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"openingPeriod\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"auditPeriod\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"description\",\"type\":\"string\"},{\"internalType\":\"bool\",\"name\":\"promiseDelivered\",\"type\":\"bool\"},{\"internalType\":\"uint64\",\"name\":\"marketState\",\"type\":\"uint64\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"marketId\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"creditToCreate\",\"type\":\"uint256\"}],\"name\":\"mintCredit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"oo\",\"outputs\":[{\"internalType\":\"contract OptimisticOracleV3Interface\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"marketId\",\"type\":\"bytes32\"}],\"name\":\"registerValidator\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"marketId\",\"type\":\"bytes32\"}],\"name\":\"settleMarket\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"marketId\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"dataAsserterAddress\",\"type\":\"address\"}],\"name\":\"settleValidatorToken\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"marketId\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"dataId\",\"type\":\"bytes32\"},{\"internalType\":\"string\",\"name\":\"dataPath\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"description\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"dataAsserterAddress\",\"type\":\"address\"}],\"name\":\"submitAndAssertData\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"assertionId\",\"type\":\"bytes32\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"validatorFee\",\"outputs\":[{\"internalType\":\"uint64\",\"name\":\"\",\"type\":\"uint64\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"assertionDisputedCallback(bytes32)\":{\"params\":{\"assertionId\":\"The identifier of the assertion that was disputed.\"}},\"assertionResolvedCallback(bytes32,bool)\":{\"params\":{\"assertedTruthfully\":\"Whether the assertion was resolved as truthful or not.\",\"assertionId\":\"The identifier of the assertion that was resolved.\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"assertionDisputedCallback(bytes32)\":{\"notice\":\"Callback function that is called by Optimistic Oracle V3 when an assertion is disputed.\"},\"assertionResolvedCallback(bytes32,bool)\":{\"notice\":\"Callback function that is called by Optimistic Oracle V3 when an assertion is resolved.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/CarbonUMArket.sol\":\"CarbonUMArket\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@across-protocol/=node_modules/@across-protocol/\",\":@ensdomains/=node_modules/@ensdomains/\",\":@eth-optimism/=node_modules/@across-protocol/contracts/node_modules/@eth-optimism/\",\":@gnosis.pm/=node_modules/@gnosis.pm/\",\":@maticnetwork/=node_modules/@maticnetwork/\",\":@openzeppelin/=node_modules/@openzeppelin/\",\":@uma/=node_modules/@uma/\",\":@uniswap/=node_modules/@uniswap/\",\":base64-sol/=node_modules/base64-sol/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":eth-gas-reporter/=node_modules/eth-gas-reporter/\",\":forge-std/=lib/forge-std/src/\",\":hardhat-deploy/=node_modules/hardhat-deploy/\",\":hardhat/=node_modules/hardhat/\"]},\"sources\":{\"contracts/CarbonUMArket.sol\":{\"keccak256\":\"0x251a6f76b62235866904fcfb36882c3905b266ec0decae391e853bc087ff9b6b\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://02ee1fc307744c7132f4b2183809592ced526d0de5baef334690b3f80b1212d7\",\"dweb:/ipfs/QmY63fAHyRcZV1QbhaJL7PuvpY4b7dPgWqEQuJKhkKvKsM\"]},\"contracts/DataAsserter.sol\":{\"keccak256\":\"0xd59e29ecdc9bcf1c689067ff20eb0d8ff6da313e9e9c6b3f5222e1a0c3049f4f\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://f477d11db1e86ee259d603261540d22a6798a5d58acfea68261e908096b8a697\",\"dweb:/ipfs/QmXVUx7PZDhzj4NJ57V5HaFjD2RbWKtA6q6Yrt1zgFMGUQ\"]},\"node_modules/@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0x24e0364e503a9bbde94c715d26573a76f14cd2a202d45f96f52134ab806b67b9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e12cbaa7378fd9b62280e4e1d164bedcb4399ce238f5f98fc0eefb7e50577981\",\"dweb:/ipfs/QmXRoFGUgfsaRkoPT5bxNMtSayKTQ8GZATLPXf69HcRA51\"]},\"node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0xdadd41acb749920eccf40aeaa8d291adf9751399a7343561bad13e7a8d99be0b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://12af4ac016f9fdf3be5d15824f4292272aa11f6b2e0192a0f7320f5ad49bbbf0\",\"dweb:/ipfs/QmRXMpdqCgA3TYuYxBodqs5p9jGbnMW6xa2gvjppvq4TWk\"]},\"node_modules/@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xbbc8ac883ac3c0078ce5ad3e288fbb3ffcc8a30c3a98c0fda0114d64fc44fca2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87a7a5d2f6f63f84598af02b8c50ca2df2631cb8ba2453e8d95fcb17e4be9824\",\"dweb:/ipfs/QmR76hqtAcRqoFj33tmNjcWTLrgNsAaakYwnKZ8zoJtKei\"]},\"node_modules/@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x8de418a5503946cabe331f35fe242d3201a73f67f77aaeb7110acb1f30423aca\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a376d3dda2cb70536c0a45c208b29b34ac560c4cb4f513a42079f96ba47d2dd\",\"dweb:/ipfs/QmZQg6gn1sUpM8wHzwNvSnihumUCAhxD119MpXeKp8B9s8\"]},\"node_modules/@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0xc3d946432c0ddbb1f846a0d3985be71299df331b91d06732152117f62f0be2b5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4632c341a06ba5c079b51ca5a915efab4e6ab57735b37839b3e8365ff806a43e\",\"dweb:/ipfs/QmTHT3xHYed2wajEoA5qu7ii2BxLpPhQZHwAhtLK5Z7ANK\"]},\"node_modules/@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0x2ccf9d2313a313d41a791505f2b5abfdc62191b5d4334f7f7a82691c088a1c87\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b3a57d0854b2fdce6ebff933a48dca2445643d1eccfc27f00292e937f26c6a58\",\"dweb:/ipfs/QmW45rZooS9TqR4YXUbjRbtf2Bpb5ouSarBvfW1LdGprvV\"]},\"node_modules/@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"node_modules/@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x32c202bd28995dd20c4347b7c6467a6d3241c74c8ad3edcbb610cd9205916c45\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8179c356adb19e70d6b31a1eedc8c5c7f0c00e669e2540f4099e3844c6074d30\",\"dweb:/ipfs/QmWFbivarEobbqhS1go64ootVuHfVohBseerYy9FTEd1W2\"]},\"node_modules/@uma/core/contracts/common/implementation/AddressWhitelist.sol\":{\"keccak256\":\"0xc1f20b925f9d37230aaf7bbee536f9a9b08e4772864f0a243ff1b69b54710fee\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://55bc6782bd269463214dbafa8702b2ff33910fd4a51ab24d775aabb15e278bcc\",\"dweb:/ipfs/QmV41DnGByGBtg8gk7MG6Nr3xYo5R5varZ8cewywdKNATQ\"]},\"node_modules/@uma/core/contracts/common/implementation/AncillaryData.sol\":{\"keccak256\":\"0x8ff33ac32d3e6de25de9e0ac2c0ff9a621f187fa97e9ee84092b327471baa3ce\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://0bbaed49756e8cf7ef405e132f441cd7a735ac6186a200b0179147e7d137b74a\",\"dweb:/ipfs/QmeSBJX5a61LZPxbkUKS2NF4LSxemgDwjD65fCAmyP7PX2\"]},\"node_modules/@uma/core/contracts/common/implementation/ExpandedERC20.sol\":{\"keccak256\":\"0x8201459d3f78a1f97da7c421f2fbb859924d4facfc5fc235ba65d85bf12b2229\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://990c055523abe059c0e3e9dc0d631b17db960899dbfcfb2c562bc1ed9de8f140\",\"dweb:/ipfs/QmNgQP68bBrZvP2Rs4TdpESS3LFxqGgtTELZ1wm5mZqh4K\"]},\"node_modules/@uma/core/contracts/common/implementation/Lockable.sol\":{\"keccak256\":\"0x41d78fcce54598ad5f26bc0b778c0f4fedbd836401625e49e736979f69a87ef0\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://4ce111bb50441ef5125e7d42284f6debbc17fd589515d7b8cede7e9d1d5f0ede\",\"dweb:/ipfs/QmaXiXACWVEDDHoCHNXdVBoNpf8QNHkUZ1kf5MfbxfL6jj\"]},\"node_modules/@uma/core/contracts/common/implementation/MultiRole.sol\":{\"keccak256\":\"0x134c5a2f847832705be631f2b4eb2a3e23a91a2f0e63560abb481e85eeebfae6\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://f1267c6ad560d1eb896575919ecca13759bf50bb82d1215e03fc1f0424ec37a6\",\"dweb:/ipfs/QmXewGxpSmSMGYmT6ZUyxCVzy2cybxicbnyCn8w87m5mo3\"]},\"node_modules/@uma/core/contracts/common/interfaces/AddressWhitelistInterface.sol\":{\"keccak256\":\"0x22fb8588dff1d5cff76a28111d6c9b190765d99facd93c8ff3b54771f245c0d8\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://5ecd993f00de290a3c7bf21da23a9439cf2ccb22028316df92b79780ac8aa533\",\"dweb:/ipfs/QmTZ7x7U4EEzTacqapzSdFs2np5WNsqm4XeUBqzQxxDJei\"]},\"node_modules/@uma/core/contracts/common/interfaces/ExpandedIERC20.sol\":{\"keccak256\":\"0xb8252039cba45f1c19cd677f150a9823a5d6e1845cad90e3041d97c96f273c26\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://95106656c95e12c30a2a4c482a859df6df55c3b56bb9f7835eb5c685ca3175d3\",\"dweb:/ipfs/QmcuJoX7T53vTCDcQK8WcCJdT1LzHS35vPmSVfg1DG32cd\"]},\"node_modules/@uma/core/contracts/data-verification-mechanism/implementation/Constants.sol\":{\"keccak256\":\"0xe40957105a9240c6bcb9753fd0011fe9f382c437cd6771c57bf7a96f8ceb9c84\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://cbf0d25e841b1f5c4022d09fb29220cb428139443cb29c4ab8dbfff71dffcc05\",\"dweb:/ipfs/QmSVVr5wH1tZi6WmKyuy1K8yS6JN4DeK5kWaZpPKtXiqkK\"]},\"node_modules/@uma/core/contracts/data-verification-mechanism/interfaces/FinderInterface.sol\":{\"keccak256\":\"0x9166fbfe08e954eb86d33c114fcde7ce4fd0dda5d9d28b31210582bfc769fa86\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://e611e12bcaaebfdf65b67c566ff1d34708e757f01a445bd87c55862e89383b81\",\"dweb:/ipfs/QmYNSq5oopTShdS6j4VWKqoLxmQSRKmWebCxw6K4LfmKrf\"]},\"node_modules/@uma/core/contracts/optimistic-oracle-v3/implementation/ClaimData.sol\":{\"keccak256\":\"0x6e887a70326e5ede4a8c5002d4123a8c77b477ce58cf92533c38cd3dc6142cb5\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://bdafa7c59d0825da944c46664bddb1203bb4158dd0e1ddd6bbdeb276e66be0f8\",\"dweb:/ipfs/QmVb496JWqBib55HX6G3iPkAMv64Bj2UDegeVEYiNcYuDZ\"]},\"node_modules/@uma/core/contracts/optimistic-oracle-v3/interfaces/OptimisticOracleV3CallbackRecipientInterface.sol\":{\"keccak256\":\"0x79f90bc84ed5d394380e99f0a5d1b219abd9016bc3a02fad0099014af08af03e\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://dc1b7b847eb711750bc76ab45a13294b05fc09e361294a6bdffb90cb15f50b63\",\"dweb:/ipfs/QmQSs2R7mmGojGdNkqP75Vf7LajRkfJ1oGuYAUCHYGmPEQ\"]},\"node_modules/@uma/core/contracts/optimistic-oracle-v3/interfaces/OptimisticOracleV3Interface.sol\":{\"keccak256\":\"0xf31322bfd64854f0bfa92051d6ec711c1eed15d8042f394f5c24c05378218367\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://535bc2a6060e86a49524fd3c0062afcf83077530cefb3c1b8179b832f03ca81e\",\"dweb:/ipfs/QmQZhqn6oUiebSWEKbqcmiMGkqAb8B59WsRAyFU8WY84ct\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.16+commit.07a7930e"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_finder",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "_currency",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "_optimisticOracleV3",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "constructor"
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "marketId",
              "type": "bytes32",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "account",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "creditsMinted",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "CreditsMinted",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "marketId",
              "type": "bytes32",
              "indexed": true
            },
            {
              "internalType": "bytes32",
              "name": "assertionId",
              "type": "bytes32",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "FalsePromisedDeclared",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "marketId",
              "type": "bytes32",
              "indexed": true
            },
            {
              "internalType": "string",
              "name": "description",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "reward",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "requiredBond",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "address",
              "name": "owner",
              "type": "address",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "MarketInitialized",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "marketId",
              "type": "bytes32",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "MarketResolved",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "marketId",
              "type": "bytes32",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "account",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "individualReward",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "creditReceived",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "MarketSettled",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "marketId",
              "type": "bytes32",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "account",
              "type": "address",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "ValidatorRegistered",
          "anonymous": false
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "accountBalance",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "",
              "type": "bytes32"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "assertedMarkets",
          "outputs": [
            {
              "internalType": "address",
              "name": "asserter",
              "type": "address"
            },
            {
              "internalType": "bytes32",
              "name": "marketId",
              "type": "bytes32"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "assertionId",
              "type": "bytes32"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "assertionDisputedCallback"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "assertionLiveness",
          "outputs": [
            {
              "internalType": "uint64",
              "name": "",
              "type": "uint64"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "assertionId",
              "type": "bytes32"
            },
            {
              "internalType": "bool",
              "name": "assertedTruthfully",
              "type": "bool"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "assertionResolvedCallback"
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "marketId",
              "type": "bytes32"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "carbonCreditBalance",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "marketId",
              "type": "bytes32"
            },
            {
              "internalType": "uint64",
              "name": "state",
              "type": "uint64"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "changeMarketState"
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "marketId",
              "type": "bytes32"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "convertibleCarbonCreditBalance",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "currency",
          "outputs": [
            {
              "internalType": "contract IERC20",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "data_oo",
          "outputs": [
            {
              "internalType": "contract OptimisticOracleV3Interface",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "marketId",
              "type": "bytes32"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "declareFalsePromise",
          "outputs": [
            {
              "internalType": "bytes32",
              "name": "assertionId",
              "type": "bytes32"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "defaultIdentifier",
          "outputs": [
            {
              "internalType": "bytes32",
              "name": "",
              "type": "bytes32"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "finder",
          "outputs": [
            {
              "internalType": "contract FinderInterface",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "marketId",
              "type": "bytes32"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getMarket",
          "outputs": [
            {
              "internalType": "struct CarbonUMArket.Market",
              "name": "",
              "type": "tuple",
              "components": [
                {
                  "internalType": "address",
                  "name": "owner",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "requiredBond",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "reward",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "creditCap",
                  "type": "uint256"
                },
                {
                  "internalType": "contract ExpandedIERC20",
                  "name": "carbonCredit",
                  "type": "address"
                },
                {
                  "internalType": "contract ExpandedIERC20",
                  "name": "convertibleCarbonCredit",
                  "type": "address"
                },
                {
                  "internalType": "contract ExpandedIERC20",
                  "name": "validatorToken",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "startingTime",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "openingPeriod",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "auditPeriod",
                  "type": "uint256"
                },
                {
                  "internalType": "string",
                  "name": "description",
                  "type": "string"
                },
                {
                  "internalType": "bool",
                  "name": "promiseDelivered",
                  "type": "bool"
                },
                {
                  "internalType": "uint64",
                  "name": "marketState",
                  "type": "uint64"
                }
              ]
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "marketId",
              "type": "bytes32"
            },
            {
              "internalType": "address",
              "name": "data_optimisticOracleV3",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "initializeDataPool",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "_reward",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "_requiredBond",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "_creditCap",
              "type": "uint256"
            },
            {
              "internalType": "string",
              "name": "_description",
              "type": "string"
            },
            {
              "internalType": "uint256",
              "name": "_openingPeriod",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "_auditPeriod",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "initializeMarket",
          "outputs": [
            {
              "internalType": "bytes32",
              "name": "marketId",
              "type": "bytes32"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "",
              "type": "bytes32"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "markets",
          "outputs": [
            {
              "internalType": "address",
              "name": "owner",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "requiredBond",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "reward",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "creditCap",
              "type": "uint256"
            },
            {
              "internalType": "contract ExpandedIERC20",
              "name": "carbonCredit",
              "type": "address"
            },
            {
              "internalType": "contract ExpandedIERC20",
              "name": "convertibleCarbonCredit",
              "type": "address"
            },
            {
              "internalType": "contract ExpandedIERC20",
              "name": "validatorToken",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "startingTime",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "openingPeriod",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "auditPeriod",
              "type": "uint256"
            },
            {
              "internalType": "string",
              "name": "description",
              "type": "string"
            },
            {
              "internalType": "bool",
              "name": "promiseDelivered",
              "type": "bool"
            },
            {
              "internalType": "uint64",
              "name": "marketState",
              "type": "uint64"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "marketId",
              "type": "bytes32"
            },
            {
              "internalType": "uint256",
              "name": "creditToCreate",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "mintCredit"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "oo",
          "outputs": [
            {
              "internalType": "contract OptimisticOracleV3Interface",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "marketId",
              "type": "bytes32"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "registerValidator"
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "marketId",
              "type": "bytes32"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "settleMarket"
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "marketId",
              "type": "bytes32"
            },
            {
              "internalType": "address",
              "name": "dataAsserterAddress",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "settleValidatorToken"
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "marketId",
              "type": "bytes32"
            },
            {
              "internalType": "bytes32",
              "name": "dataId",
              "type": "bytes32"
            },
            {
              "internalType": "string",
              "name": "dataPath",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "description",
              "type": "string"
            },
            {
              "internalType": "address",
              "name": "dataAsserterAddress",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "submitAndAssertData",
          "outputs": [
            {
              "internalType": "bytes32",
              "name": "assertionId",
              "type": "bytes32"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "validatorFee",
          "outputs": [
            {
              "internalType": "uint64",
              "name": "",
              "type": "uint64"
            }
          ]
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {
          "assertionDisputedCallback(bytes32)": {
            "params": {
              "assertionId": "The identifier of the assertion that was disputed."
            }
          },
          "assertionResolvedCallback(bytes32,bool)": {
            "params": {
              "assertedTruthfully": "Whether the assertion was resolved as truthful or not.",
              "assertionId": "The identifier of the assertion that was resolved."
            }
          }
        },
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {
          "assertionDisputedCallback(bytes32)": {
            "notice": "Callback function that is called by Optimistic Oracle V3 when an assertion is disputed."
          },
          "assertionResolvedCallback(bytes32,bool)": {
            "notice": "Callback function that is called by Optimistic Oracle V3 when an assertion is resolved."
          }
        },
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        "@across-protocol/=node_modules/@across-protocol/",
        "@ensdomains/=node_modules/@ensdomains/",
        "@eth-optimism/=node_modules/@across-protocol/contracts/node_modules/@eth-optimism/",
        "@gnosis.pm/=node_modules/@gnosis.pm/",
        "@maticnetwork/=node_modules/@maticnetwork/",
        "@openzeppelin/=node_modules/@openzeppelin/",
        "@uma/=node_modules/@uma/",
        "@uniswap/=node_modules/@uniswap/",
        "base64-sol/=node_modules/base64-sol/",
        "ds-test/=lib/forge-std/lib/ds-test/src/",
        "eth-gas-reporter/=node_modules/eth-gas-reporter/",
        "forge-std/=lib/forge-std/src/",
        "hardhat-deploy/=node_modules/hardhat-deploy/",
        "hardhat/=node_modules/hardhat/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 200
      },
      "metadata": {
        "bytecodeHash": "ipfs"
      },
      "compilationTarget": {
        "contracts/CarbonUMArket.sol": "CarbonUMArket"
      },
      "libraries": {}
    },
    "sources": {
      "contracts/CarbonUMArket.sol": {
        "keccak256": "0x251a6f76b62235866904fcfb36882c3905b266ec0decae391e853bc087ff9b6b",
        "urls": [
          "bzz-raw://02ee1fc307744c7132f4b2183809592ced526d0de5baef334690b3f80b1212d7",
          "dweb:/ipfs/QmY63fAHyRcZV1QbhaJL7PuvpY4b7dPgWqEQuJKhkKvKsM"
        ],
        "license": "AGPL-3.0-only"
      },
      "contracts/DataAsserter.sol": {
        "keccak256": "0xd59e29ecdc9bcf1c689067ff20eb0d8ff6da313e9e9c6b3f5222e1a0c3049f4f",
        "urls": [
          "bzz-raw://f477d11db1e86ee259d603261540d22a6798a5d58acfea68261e908096b8a697",
          "dweb:/ipfs/QmXVUx7PZDhzj4NJ57V5HaFjD2RbWKtA6q6Yrt1zgFMGUQ"
        ],
        "license": "AGPL-3.0-only"
      },
      "node_modules/@openzeppelin/contracts/access/Ownable.sol": {
        "keccak256": "0x24e0364e503a9bbde94c715d26573a76f14cd2a202d45f96f52134ab806b67b9",
        "urls": [
          "bzz-raw://e12cbaa7378fd9b62280e4e1d164bedcb4399ce238f5f98fc0eefb7e50577981",
          "dweb:/ipfs/QmXRoFGUgfsaRkoPT5bxNMtSayKTQ8GZATLPXf69HcRA51"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol": {
        "keccak256": "0xdadd41acb749920eccf40aeaa8d291adf9751399a7343561bad13e7a8d99be0b",
        "urls": [
          "bzz-raw://12af4ac016f9fdf3be5d15824f4292272aa11f6b2e0192a0f7320f5ad49bbbf0",
          "dweb:/ipfs/QmRXMpdqCgA3TYuYxBodqs5p9jGbnMW6xa2gvjppvq4TWk"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/token/ERC20/IERC20.sol": {
        "keccak256": "0xbbc8ac883ac3c0078ce5ad3e288fbb3ffcc8a30c3a98c0fda0114d64fc44fca2",
        "urls": [
          "bzz-raw://87a7a5d2f6f63f84598af02b8c50ca2df2631cb8ba2453e8d95fcb17e4be9824",
          "dweb:/ipfs/QmR76hqtAcRqoFj33tmNjcWTLrgNsAaakYwnKZ8zoJtKei"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
        "keccak256": "0x8de418a5503946cabe331f35fe242d3201a73f67f77aaeb7110acb1f30423aca",
        "urls": [
          "bzz-raw://5a376d3dda2cb70536c0a45c208b29b34ac560c4cb4f513a42079f96ba47d2dd",
          "dweb:/ipfs/QmZQg6gn1sUpM8wHzwNvSnihumUCAhxD119MpXeKp8B9s8"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol": {
        "keccak256": "0xc3d946432c0ddbb1f846a0d3985be71299df331b91d06732152117f62f0be2b5",
        "urls": [
          "bzz-raw://4632c341a06ba5c079b51ca5a915efab4e6ab57735b37839b3e8365ff806a43e",
          "dweb:/ipfs/QmTHT3xHYed2wajEoA5qu7ii2BxLpPhQZHwAhtLK5Z7ANK"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/utils/Address.sol": {
        "keccak256": "0x2ccf9d2313a313d41a791505f2b5abfdc62191b5d4334f7f7a82691c088a1c87",
        "urls": [
          "bzz-raw://b3a57d0854b2fdce6ebff933a48dca2445643d1eccfc27f00292e937f26c6a58",
          "dweb:/ipfs/QmW45rZooS9TqR4YXUbjRbtf2Bpb5ouSarBvfW1LdGprvV"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/utils/Context.sol": {
        "keccak256": "0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7",
        "urls": [
          "bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92",
          "dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/utils/Strings.sol": {
        "keccak256": "0x32c202bd28995dd20c4347b7c6467a6d3241c74c8ad3edcbb610cd9205916c45",
        "urls": [
          "bzz-raw://8179c356adb19e70d6b31a1eedc8c5c7f0c00e669e2540f4099e3844c6074d30",
          "dweb:/ipfs/QmWFbivarEobbqhS1go64ootVuHfVohBseerYy9FTEd1W2"
        ],
        "license": "MIT"
      },
      "node_modules/@uma/core/contracts/common/implementation/AddressWhitelist.sol": {
        "keccak256": "0xc1f20b925f9d37230aaf7bbee536f9a9b08e4772864f0a243ff1b69b54710fee",
        "urls": [
          "bzz-raw://55bc6782bd269463214dbafa8702b2ff33910fd4a51ab24d775aabb15e278bcc",
          "dweb:/ipfs/QmV41DnGByGBtg8gk7MG6Nr3xYo5R5varZ8cewywdKNATQ"
        ],
        "license": "AGPL-3.0-only"
      },
      "node_modules/@uma/core/contracts/common/implementation/AncillaryData.sol": {
        "keccak256": "0x8ff33ac32d3e6de25de9e0ac2c0ff9a621f187fa97e9ee84092b327471baa3ce",
        "urls": [
          "bzz-raw://0bbaed49756e8cf7ef405e132f441cd7a735ac6186a200b0179147e7d137b74a",
          "dweb:/ipfs/QmeSBJX5a61LZPxbkUKS2NF4LSxemgDwjD65fCAmyP7PX2"
        ],
        "license": "AGPL-3.0-only"
      },
      "node_modules/@uma/core/contracts/common/implementation/ExpandedERC20.sol": {
        "keccak256": "0x8201459d3f78a1f97da7c421f2fbb859924d4facfc5fc235ba65d85bf12b2229",
        "urls": [
          "bzz-raw://990c055523abe059c0e3e9dc0d631b17db960899dbfcfb2c562bc1ed9de8f140",
          "dweb:/ipfs/QmNgQP68bBrZvP2Rs4TdpESS3LFxqGgtTELZ1wm5mZqh4K"
        ],
        "license": "AGPL-3.0-only"
      },
      "node_modules/@uma/core/contracts/common/implementation/Lockable.sol": {
        "keccak256": "0x41d78fcce54598ad5f26bc0b778c0f4fedbd836401625e49e736979f69a87ef0",
        "urls": [
          "bzz-raw://4ce111bb50441ef5125e7d42284f6debbc17fd589515d7b8cede7e9d1d5f0ede",
          "dweb:/ipfs/QmaXiXACWVEDDHoCHNXdVBoNpf8QNHkUZ1kf5MfbxfL6jj"
        ],
        "license": "AGPL-3.0-only"
      },
      "node_modules/@uma/core/contracts/common/implementation/MultiRole.sol": {
        "keccak256": "0x134c5a2f847832705be631f2b4eb2a3e23a91a2f0e63560abb481e85eeebfae6",
        "urls": [
          "bzz-raw://f1267c6ad560d1eb896575919ecca13759bf50bb82d1215e03fc1f0424ec37a6",
          "dweb:/ipfs/QmXewGxpSmSMGYmT6ZUyxCVzy2cybxicbnyCn8w87m5mo3"
        ],
        "license": "AGPL-3.0-only"
      },
      "node_modules/@uma/core/contracts/common/interfaces/AddressWhitelistInterface.sol": {
        "keccak256": "0x22fb8588dff1d5cff76a28111d6c9b190765d99facd93c8ff3b54771f245c0d8",
        "urls": [
          "bzz-raw://5ecd993f00de290a3c7bf21da23a9439cf2ccb22028316df92b79780ac8aa533",
          "dweb:/ipfs/QmTZ7x7U4EEzTacqapzSdFs2np5WNsqm4XeUBqzQxxDJei"
        ],
        "license": "AGPL-3.0-only"
      },
      "node_modules/@uma/core/contracts/common/interfaces/ExpandedIERC20.sol": {
        "keccak256": "0xb8252039cba45f1c19cd677f150a9823a5d6e1845cad90e3041d97c96f273c26",
        "urls": [
          "bzz-raw://95106656c95e12c30a2a4c482a859df6df55c3b56bb9f7835eb5c685ca3175d3",
          "dweb:/ipfs/QmcuJoX7T53vTCDcQK8WcCJdT1LzHS35vPmSVfg1DG32cd"
        ],
        "license": "AGPL-3.0-only"
      },
      "node_modules/@uma/core/contracts/data-verification-mechanism/implementation/Constants.sol": {
        "keccak256": "0xe40957105a9240c6bcb9753fd0011fe9f382c437cd6771c57bf7a96f8ceb9c84",
        "urls": [
          "bzz-raw://cbf0d25e841b1f5c4022d09fb29220cb428139443cb29c4ab8dbfff71dffcc05",
          "dweb:/ipfs/QmSVVr5wH1tZi6WmKyuy1K8yS6JN4DeK5kWaZpPKtXiqkK"
        ],
        "license": "AGPL-3.0-only"
      },
      "node_modules/@uma/core/contracts/data-verification-mechanism/interfaces/FinderInterface.sol": {
        "keccak256": "0x9166fbfe08e954eb86d33c114fcde7ce4fd0dda5d9d28b31210582bfc769fa86",
        "urls": [
          "bzz-raw://e611e12bcaaebfdf65b67c566ff1d34708e757f01a445bd87c55862e89383b81",
          "dweb:/ipfs/QmYNSq5oopTShdS6j4VWKqoLxmQSRKmWebCxw6K4LfmKrf"
        ],
        "license": "AGPL-3.0-only"
      },
      "node_modules/@uma/core/contracts/optimistic-oracle-v3/implementation/ClaimData.sol": {
        "keccak256": "0x6e887a70326e5ede4a8c5002d4123a8c77b477ce58cf92533c38cd3dc6142cb5",
        "urls": [
          "bzz-raw://bdafa7c59d0825da944c46664bddb1203bb4158dd0e1ddd6bbdeb276e66be0f8",
          "dweb:/ipfs/QmVb496JWqBib55HX6G3iPkAMv64Bj2UDegeVEYiNcYuDZ"
        ],
        "license": "AGPL-3.0-only"
      },
      "node_modules/@uma/core/contracts/optimistic-oracle-v3/interfaces/OptimisticOracleV3CallbackRecipientInterface.sol": {
        "keccak256": "0x79f90bc84ed5d394380e99f0a5d1b219abd9016bc3a02fad0099014af08af03e",
        "urls": [
          "bzz-raw://dc1b7b847eb711750bc76ab45a13294b05fc09e361294a6bdffb90cb15f50b63",
          "dweb:/ipfs/QmQSs2R7mmGojGdNkqP75Vf7LajRkfJ1oGuYAUCHYGmPEQ"
        ],
        "license": "AGPL-3.0-only"
      },
      "node_modules/@uma/core/contracts/optimistic-oracle-v3/interfaces/OptimisticOracleV3Interface.sol": {
        "keccak256": "0xf31322bfd64854f0bfa92051d6ec711c1eed15d8042f394f5c24c05378218367",
        "urls": [
          "bzz-raw://535bc2a6060e86a49524fd3c0062afcf83077530cefb3c1b8179b832f03ca81e",
          "dweb:/ipfs/QmQZhqn6oUiebSWEKbqcmiMGkqAb8B59WsRAyFU8WY84ct"
        ],
        "license": "AGPL-3.0-only"
      }
    },
    "version": 1
  },
  "ast": {
    "absolutePath": "contracts/CarbonUMArket.sol",
    "id": 1344,
    "exportedSymbols": {
      "Address": [
        46393
      ],
      "AddressWhitelist": [
        47212
      ],
      "AddressWhitelistInterface": [
        50542
      ],
      "CarbonUMArket": [
        1343
      ],
      "ClaimData": [
        47620
      ],
      "Context": [
        46415
      ],
      "DataAsserter": [
        1729
      ],
      "ERC20": [
        45771
      ],
      "Exclusive": [
        49705
      ],
      "ExpandedERC20": [
        47843
      ],
      "ExpandedIERC20": [
        50590
      ],
      "FinderInterface": [
        51164
      ],
      "IERC20": [
        45849
      ],
      "IERC20Metadata": [
        45874
      ],
      "Lockable": [
        49553
      ],
      "MultiRole": [
        50257
      ],
      "OptimisticOracleConstraints": [
        50644
      ],
      "OptimisticOracleV3CallbackRecipientInterface": [
        53207
      ],
      "OptimisticOracleV3Interface": [
        53397
      ],
      "OracleInterfaces": [
        50639
      ],
      "Ownable": [
        45183
      ],
      "SafeERC20": [
        46098
      ],
      "Shared": [
        49801
      ],
      "Strings": [
        46618
      ]
    },
    "nodeType": "SourceUnit",
    "src": "42:14676:0",
    "nodes": [
      {
        "id": 1,
        "nodeType": "PragmaDirective",
        "src": "42:24:0",
        "nodes": [],
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".12"
        ]
      },
      {
        "id": 2,
        "nodeType": "ImportDirective",
        "src": "143:72:0",
        "nodes": [],
        "absolutePath": "node_modules/@uma/core/contracts/common/implementation/AddressWhitelist.sol",
        "file": "@uma/core/contracts/common/implementation/AddressWhitelist.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 1344,
        "sourceUnit": 47213,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 3,
        "nodeType": "ImportDirective",
        "src": "216:69:0",
        "nodes": [],
        "absolutePath": "node_modules/@uma/core/contracts/common/implementation/ExpandedERC20.sol",
        "file": "@uma/core/contracts/common/implementation/ExpandedERC20.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 1344,
        "sourceUnit": 47844,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 4,
        "nodeType": "ImportDirective",
        "src": "286:86:0",
        "nodes": [],
        "absolutePath": "node_modules/@uma/core/contracts/data-verification-mechanism/implementation/Constants.sol",
        "file": "@uma/core/contracts/data-verification-mechanism/implementation/Constants.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 1344,
        "sourceUnit": 50645,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 5,
        "nodeType": "ImportDirective",
        "src": "373:88:0",
        "nodes": [],
        "absolutePath": "node_modules/@uma/core/contracts/data-verification-mechanism/interfaces/FinderInterface.sol",
        "file": "@uma/core/contracts/data-verification-mechanism/interfaces/FinderInterface.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 1344,
        "sourceUnit": 51165,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 6,
        "nodeType": "ImportDirective",
        "src": "462:79:0",
        "nodes": [],
        "absolutePath": "node_modules/@uma/core/contracts/optimistic-oracle-v3/implementation/ClaimData.sol",
        "file": "@uma/core/contracts/optimistic-oracle-v3/implementation/ClaimData.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 1344,
        "sourceUnit": 51706,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 7,
        "nodeType": "ImportDirective",
        "src": "542:93:0",
        "nodes": [],
        "absolutePath": "node_modules/@uma/core/contracts/optimistic-oracle-v3/interfaces/OptimisticOracleV3Interface.sol",
        "file": "@uma/core/contracts/optimistic-oracle-v3/interfaces/OptimisticOracleV3Interface.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 1344,
        "sourceUnit": 53398,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 8,
        "nodeType": "ImportDirective",
        "src": "636:110:0",
        "nodes": [],
        "absolutePath": "node_modules/@uma/core/contracts/optimistic-oracle-v3/interfaces/OptimisticOracleV3CallbackRecipientInterface.sol",
        "file": "@uma/core/contracts/optimistic-oracle-v3/interfaces/OptimisticOracleV3CallbackRecipientInterface.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 1344,
        "sourceUnit": 53208,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 9,
        "nodeType": "ImportDirective",
        "src": "747:65:0",
        "nodes": [],
        "absolutePath": "node_modules/@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
        "file": "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 1344,
        "sourceUnit": 46099,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 10,
        "nodeType": "ImportDirective",
        "src": "813:51:0",
        "nodes": [],
        "absolutePath": "node_modules/@openzeppelin/contracts/utils/Strings.sol",
        "file": "@openzeppelin/contracts/utils/Strings.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 1344,
        "sourceUnit": 46619,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 11,
        "nodeType": "ImportDirective",
        "src": "865:28:0",
        "nodes": [],
        "absolutePath": "contracts/DataAsserter.sol",
        "file": "./DataAsserter.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 1344,
        "sourceUnit": 1730,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 1343,
        "nodeType": "ContractDefinition",
        "src": "895:13822:0",
        "nodes": [
          {
            "id": 17,
            "nodeType": "UsingForDirective",
            "src": "972:27:0",
            "nodes": [],
            "global": false,
            "libraryName": {
              "id": 14,
              "name": "SafeERC20",
              "nameLocations": [
                "978:9:0"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 46098,
              "src": "978:9:0"
            },
            "typeName": {
              "id": 16,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 15,
                "name": "IERC20",
                "nameLocations": [
                  "992:6:0"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 45849,
                "src": "992:6:0"
              },
              "referencedDeclaration": 45849,
              "src": "992:6:0",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IERC20_$45849",
                "typeString": "contract IERC20"
              }
            }
          },
          {
            "id": 20,
            "nodeType": "VariableDeclaration",
            "src": "1004:39:0",
            "nodes": [],
            "constant": false,
            "functionSelector": "b9a3c84c",
            "mutability": "immutable",
            "name": "finder",
            "nameLocation": "1037:6:0",
            "scope": 1343,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_FinderInterface_$51164",
              "typeString": "contract FinderInterface"
            },
            "typeName": {
              "id": 19,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 18,
                "name": "FinderInterface",
                "nameLocations": [
                  "1004:15:0"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 51164,
                "src": "1004:15:0"
              },
              "referencedDeclaration": 51164,
              "src": "1004:15:0",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_FinderInterface_$51164",
                "typeString": "contract FinderInterface"
              }
            },
            "visibility": "public"
          },
          {
            "id": 23,
            "nodeType": "VariableDeclaration",
            "src": "1049:32:0",
            "nodes": [],
            "constant": false,
            "functionSelector": "e5a6b10f",
            "mutability": "immutable",
            "name": "currency",
            "nameLocation": "1073:8:0",
            "scope": 1343,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_IERC20_$45849",
              "typeString": "contract IERC20"
            },
            "typeName": {
              "id": 22,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 21,
                "name": "IERC20",
                "nameLocations": [
                  "1049:6:0"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 45849,
                "src": "1049:6:0"
              },
              "referencedDeclaration": 45849,
              "src": "1049:6:0",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IERC20_$45849",
                "typeString": "contract IERC20"
              }
            },
            "visibility": "public"
          },
          {
            "id": 26,
            "nodeType": "VariableDeclaration",
            "src": "1087:47:0",
            "nodes": [],
            "constant": false,
            "functionSelector": "8921a614",
            "mutability": "immutable",
            "name": "oo",
            "nameLocation": "1132:2:0",
            "scope": 1343,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_OptimisticOracleV3Interface_$53397",
              "typeString": "contract OptimisticOracleV3Interface"
            },
            "typeName": {
              "id": 25,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 24,
                "name": "OptimisticOracleV3Interface",
                "nameLocations": [
                  "1087:27:0"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 53397,
                "src": "1087:27:0"
              },
              "referencedDeclaration": 53397,
              "src": "1087:27:0",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_OptimisticOracleV3Interface_$53397",
                "typeString": "contract OptimisticOracleV3Interface"
              }
            },
            "visibility": "public"
          },
          {
            "id": 29,
            "nodeType": "VariableDeclaration",
            "src": "1140:42:0",
            "nodes": [],
            "constant": false,
            "functionSelector": "af2b57ce",
            "mutability": "mutable",
            "name": "data_oo",
            "nameLocation": "1175:7:0",
            "scope": 1343,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_OptimisticOracleV3Interface_$53397",
              "typeString": "contract OptimisticOracleV3Interface"
            },
            "typeName": {
              "id": 28,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 27,
                "name": "OptimisticOracleV3Interface",
                "nameLocations": [
                  "1140:27:0"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 53397,
                "src": "1140:27:0"
              },
              "referencedDeclaration": 53397,
              "src": "1140:27:0",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_OptimisticOracleV3Interface_$53397",
                "typeString": "contract OptimisticOracleV3Interface"
              }
            },
            "visibility": "public"
          },
          {
            "id": 32,
            "nodeType": "VariableDeclaration",
            "src": "1188:52:0",
            "nodes": [],
            "constant": true,
            "functionSelector": "b75d4e24",
            "mutability": "constant",
            "name": "assertionLiveness",
            "nameLocation": "1211:17:0",
            "scope": 1343,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint64",
              "typeString": "uint64"
            },
            "typeName": {
              "id": 30,
              "name": "uint64",
              "nodeType": "ElementaryTypeName",
              "src": "1188:6:0",
              "typeDescriptions": {
                "typeIdentifier": "t_uint64",
                "typeString": "uint64"
              }
            },
            "value": {
              "hexValue": "32",
              "id": 31,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "1231:9:0",
              "subdenomination": "minutes",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_120_by_1",
                "typeString": "int_const 120"
              },
              "value": "2"
            },
            "visibility": "public"
          },
          {
            "id": 35,
            "nodeType": "VariableDeclaration",
            "src": "1246:46:0",
            "nodes": [],
            "constant": true,
            "functionSelector": "3f6d8256",
            "mutability": "constant",
            "name": "validatorFee",
            "nameLocation": "1269:12:0",
            "scope": 1343,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint64",
              "typeString": "uint64"
            },
            "typeName": {
              "id": 33,
              "name": "uint64",
              "nodeType": "ElementaryTypeName",
              "src": "1246:6:0",
              "typeDescriptions": {
                "typeIdentifier": "t_uint64",
                "typeString": "uint64"
              }
            },
            "value": {
              "hexValue": "302e303031653138",
              "id": 34,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "1284:8:0",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_1000000000000000_by_1",
                "typeString": "int_const 1000000000000000"
              },
              "value": "0.001e18"
            },
            "visibility": "public"
          },
          {
            "id": 37,
            "nodeType": "VariableDeclaration",
            "src": "1298:42:0",
            "nodes": [],
            "constant": false,
            "functionSelector": "d509b017",
            "mutability": "immutable",
            "name": "defaultIdentifier",
            "nameLocation": "1323:17:0",
            "scope": 1343,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bytes32",
              "typeString": "bytes32"
            },
            "typeName": {
              "id": 36,
              "name": "bytes32",
              "nodeType": "ElementaryTypeName",
              "src": "1298:7:0",
              "typeDescriptions": {
                "typeIdentifier": "t_bytes32",
                "typeString": "bytes32"
              }
            },
            "visibility": "public"
          },
          {
            "id": 67,
            "nodeType": "StructDefinition",
            "src": "1352:871:0",
            "nodes": [],
            "canonicalName": "CarbonUMArket.Market",
            "members": [
              {
                "constant": false,
                "id": 39,
                "mutability": "mutable",
                "name": "owner",
                "nameLocation": "1384:5:0",
                "nodeType": "VariableDeclaration",
                "scope": 67,
                "src": "1376:13:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                },
                "typeName": {
                  "id": 38,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "1376:7:0",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 41,
                "mutability": "mutable",
                "name": "requiredBond",
                "nameLocation": "1407:12:0",
                "nodeType": "VariableDeclaration",
                "scope": 67,
                "src": "1399:20:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 40,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "1399:7:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 43,
                "mutability": "mutable",
                "name": "reward",
                "nameLocation": "1437:6:0",
                "nodeType": "VariableDeclaration",
                "scope": 67,
                "src": "1429:14:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 42,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "1429:7:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 45,
                "mutability": "mutable",
                "name": "creditCap",
                "nameLocation": "1544:9:0",
                "nodeType": "VariableDeclaration",
                "scope": 67,
                "src": "1536:17:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 44,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "1536:7:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 48,
                "mutability": "mutable",
                "name": "carbonCredit",
                "nameLocation": "1587:12:0",
                "nodeType": "VariableDeclaration",
                "scope": 67,
                "src": "1572:27:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_contract$_ExpandedIERC20_$50590",
                  "typeString": "contract ExpandedIERC20"
                },
                "typeName": {
                  "id": 47,
                  "nodeType": "UserDefinedTypeName",
                  "pathNode": {
                    "id": 46,
                    "name": "ExpandedIERC20",
                    "nameLocations": [
                      "1572:14:0"
                    ],
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 50590,
                    "src": "1572:14:0"
                  },
                  "referencedDeclaration": 50590,
                  "src": "1572:14:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_ExpandedIERC20_$50590",
                    "typeString": "contract ExpandedIERC20"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 51,
                "mutability": "mutable",
                "name": "convertibleCarbonCredit",
                "nameLocation": "1695:23:0",
                "nodeType": "VariableDeclaration",
                "scope": 67,
                "src": "1680:38:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_contract$_ExpandedIERC20_$50590",
                  "typeString": "contract ExpandedIERC20"
                },
                "typeName": {
                  "id": 50,
                  "nodeType": "UserDefinedTypeName",
                  "pathNode": {
                    "id": 49,
                    "name": "ExpandedIERC20",
                    "nameLocations": [
                      "1680:14:0"
                    ],
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 50590,
                    "src": "1680:14:0"
                  },
                  "referencedDeclaration": 50590,
                  "src": "1680:14:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_ExpandedIERC20_$50590",
                    "typeString": "contract ExpandedIERC20"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 54,
                "mutability": "mutable",
                "name": "validatorToken",
                "nameLocation": "1824:14:0",
                "nodeType": "VariableDeclaration",
                "scope": 67,
                "src": "1809:29:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_contract$_ExpandedIERC20_$50590",
                  "typeString": "contract ExpandedIERC20"
                },
                "typeName": {
                  "id": 53,
                  "nodeType": "UserDefinedTypeName",
                  "pathNode": {
                    "id": 52,
                    "name": "ExpandedIERC20",
                    "nameLocations": [
                      "1809:14:0"
                    ],
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 50590,
                    "src": "1809:14:0"
                  },
                  "referencedDeclaration": 50590,
                  "src": "1809:14:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_ExpandedIERC20_$50590",
                    "typeString": "contract ExpandedIERC20"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 56,
                "mutability": "mutable",
                "name": "startingTime",
                "nameLocation": "1946:12:0",
                "nodeType": "VariableDeclaration",
                "scope": 67,
                "src": "1938:20:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 55,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "1938:7:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 58,
                "mutability": "mutable",
                "name": "openingPeriod",
                "nameLocation": "1976:13:0",
                "nodeType": "VariableDeclaration",
                "scope": 67,
                "src": "1968:21:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 57,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "1968:7:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 60,
                "mutability": "mutable",
                "name": "auditPeriod",
                "nameLocation": "2007:11:0",
                "nodeType": "VariableDeclaration",
                "scope": 67,
                "src": "1999:19:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 59,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "1999:7:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 62,
                "mutability": "mutable",
                "name": "description",
                "nameLocation": "2036:11:0",
                "nodeType": "VariableDeclaration",
                "scope": 67,
                "src": "2029:18:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage_ptr",
                  "typeString": "string"
                },
                "typeName": {
                  "id": 61,
                  "name": "string",
                  "nodeType": "ElementaryTypeName",
                  "src": "2029:6:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_storage_ptr",
                    "typeString": "string"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 64,
                "mutability": "mutable",
                "name": "promiseDelivered",
                "nameLocation": "2062:16:0",
                "nodeType": "VariableDeclaration",
                "scope": 67,
                "src": "2057:21:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                },
                "typeName": {
                  "id": 63,
                  "name": "bool",
                  "nodeType": "ElementaryTypeName",
                  "src": "2057:4:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 66,
                "mutability": "mutable",
                "name": "marketState",
                "nameLocation": "2095:11:0",
                "nodeType": "VariableDeclaration",
                "scope": 67,
                "src": "2088:18:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint64",
                  "typeString": "uint64"
                },
                "typeName": {
                  "id": 65,
                  "name": "uint64",
                  "nodeType": "ElementaryTypeName",
                  "src": "2088:6:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint64",
                    "typeString": "uint64"
                  }
                },
                "visibility": "internal"
              }
            ],
            "name": "Market",
            "nameLocation": "1359:6:0",
            "scope": 1343,
            "visibility": "public"
          },
          {
            "id": 72,
            "nodeType": "StructDefinition",
            "src": "2229:81:0",
            "nodes": [],
            "canonicalName": "CarbonUMArket.AssertedMarket",
            "members": [
              {
                "constant": false,
                "id": 69,
                "mutability": "mutable",
                "name": "asserter",
                "nameLocation": "2269:8:0",
                "nodeType": "VariableDeclaration",
                "scope": 72,
                "src": "2261:16:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                },
                "typeName": {
                  "id": 68,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "2261:7:0",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 71,
                "mutability": "mutable",
                "name": "marketId",
                "nameLocation": "2295:8:0",
                "nodeType": "VariableDeclaration",
                "scope": 72,
                "src": "2287:16:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_bytes32",
                  "typeString": "bytes32"
                },
                "typeName": {
                  "id": 70,
                  "name": "bytes32",
                  "nodeType": "ElementaryTypeName",
                  "src": "2287:7:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  }
                },
                "visibility": "internal"
              }
            ],
            "name": "AssertedMarket",
            "nameLocation": "2236:14:0",
            "scope": 1343,
            "visibility": "public"
          },
          {
            "id": 77,
            "nodeType": "VariableDeclaration",
            "src": "2316:42:0",
            "nodes": [],
            "constant": false,
            "functionSelector": "7564912b",
            "mutability": "mutable",
            "name": "markets",
            "nameLocation": "2351:7:0",
            "scope": 1343,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_Market_$67_storage_$",
              "typeString": "mapping(bytes32 => struct CarbonUMArket.Market)"
            },
            "typeName": {
              "id": 76,
              "keyType": {
                "id": 73,
                "name": "bytes32",
                "nodeType": "ElementaryTypeName",
                "src": "2325:7:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_bytes32",
                  "typeString": "bytes32"
                }
              },
              "nodeType": "Mapping",
              "src": "2316:27:0",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_Market_$67_storage_$",
                "typeString": "mapping(bytes32 => struct CarbonUMArket.Market)"
              },
              "valueType": {
                "id": 75,
                "nodeType": "UserDefinedTypeName",
                "pathNode": {
                  "id": 74,
                  "name": "Market",
                  "nameLocations": [
                    "2336:6:0"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 67,
                  "src": "2336:6:0"
                },
                "referencedDeclaration": 67,
                "src": "2336:6:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_Market_$67_storage_ptr",
                  "typeString": "struct CarbonUMArket.Market"
                }
              }
            },
            "visibility": "public"
          },
          {
            "id": 82,
            "nodeType": "VariableDeclaration",
            "src": "2365:58:0",
            "nodes": [],
            "constant": false,
            "functionSelector": "d4107645",
            "mutability": "mutable",
            "name": "assertedMarkets",
            "nameLocation": "2408:15:0",
            "scope": 1343,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_AssertedMarket_$72_storage_$",
              "typeString": "mapping(bytes32 => struct CarbonUMArket.AssertedMarket)"
            },
            "typeName": {
              "id": 81,
              "keyType": {
                "id": 78,
                "name": "bytes32",
                "nodeType": "ElementaryTypeName",
                "src": "2374:7:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_bytes32",
                  "typeString": "bytes32"
                }
              },
              "nodeType": "Mapping",
              "src": "2365:35:0",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_AssertedMarket_$72_storage_$",
                "typeString": "mapping(bytes32 => struct CarbonUMArket.AssertedMarket)"
              },
              "valueType": {
                "id": 80,
                "nodeType": "UserDefinedTypeName",
                "pathNode": {
                  "id": 79,
                  "name": "AssertedMarket",
                  "nameLocations": [
                    "2385:14:0"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 72,
                  "src": "2385:14:0"
                },
                "referencedDeclaration": 72,
                "src": "2385:14:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_AssertedMarket_$72_storage_ptr",
                  "typeString": "struct CarbonUMArket.AssertedMarket"
                }
              }
            },
            "visibility": "public"
          },
          {
            "id": 94,
            "nodeType": "EventDefinition",
            "src": "2430:379:0",
            "nodes": [],
            "anonymous": false,
            "eventSelector": "1a49307b6f6ab1604ebafd15886fc4caa9e917f99e76d07d6b73e45f5713a22d",
            "name": "MarketInitialized",
            "nameLocation": "2436:17:0",
            "parameters": {
              "id": 93,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 84,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "marketId",
                  "nameLocation": "2479:8:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 94,
                  "src": "2463:24:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 83,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "2463:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 86,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "description",
                  "nameLocation": "2504:11:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 94,
                  "src": "2497:18:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 85,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "2497:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 88,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "reward",
                  "nameLocation": "2632:6:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 94,
                  "src": "2624:14:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 87,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2624:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 90,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "requiredBond",
                  "nameLocation": "2656:12:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 94,
                  "src": "2648:20:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 89,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2648:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 92,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "owner",
                  "nameLocation": "2686:5:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 94,
                  "src": "2678:13:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 91,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2678:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2453:355:0"
            }
          },
          {
            "id": 100,
            "nodeType": "EventDefinition",
            "src": "2815:105:0",
            "nodes": [],
            "anonymous": false,
            "eventSelector": "584cc08a71081fce3cb80c249a3f322d34332812916fce18435e2d1a4468fa70",
            "name": "FalsePromisedDeclared",
            "nameLocation": "2821:21:0",
            "parameters": {
              "id": 99,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 96,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "marketId",
                  "nameLocation": "2868:8:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 100,
                  "src": "2852:24:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 95,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "2852:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 98,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "assertionId",
                  "nameLocation": "2902:11:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 100,
                  "src": "2886:27:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 97,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "2886:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2842:77:0"
            }
          },
          {
            "id": 104,
            "nodeType": "EventDefinition",
            "src": "2926:47:0",
            "nodes": [],
            "anonymous": false,
            "eventSelector": "e9146184308c5e4b8f243047cc6f81dce88e004d7980502e123b02f887ab5144",
            "name": "MarketResolved",
            "nameLocation": "2932:14:0",
            "parameters": {
              "id": 103,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 102,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "marketId",
                  "nameLocation": "2963:8:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 104,
                  "src": "2947:24:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 101,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "2947:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2946:26:0"
            }
          },
          {
            "id": 112,
            "nodeType": "EventDefinition",
            "src": "2979:94:0",
            "nodes": [],
            "anonymous": false,
            "eventSelector": "b33c99b82010ff18b32d024f038afefb8096ad49050d8896e20cdd6df4e401ee",
            "name": "CreditsMinted",
            "nameLocation": "2985:13:0",
            "parameters": {
              "id": 111,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 106,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "marketId",
                  "nameLocation": "3015:8:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 112,
                  "src": "2999:24:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 105,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "2999:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 108,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "account",
                  "nameLocation": "3041:7:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 112,
                  "src": "3025:23:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 107,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3025:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 110,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "creditsMinted",
                  "nameLocation": "3058:13:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 112,
                  "src": "3050:21:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 109,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3050:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2998:74:0"
            }
          },
          {
            "id": 118,
            "nodeType": "EventDefinition",
            "src": "3079:77:0",
            "nodes": [],
            "anonymous": false,
            "eventSelector": "d2eefd4ce8a0e3945e0e703d5d36e37c6dfaa66a08807564ef3d863f76400a91",
            "name": "ValidatorRegistered",
            "nameLocation": "3085:19:0",
            "parameters": {
              "id": 117,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 114,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "marketId",
                  "nameLocation": "3121:8:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 118,
                  "src": "3105:24:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 113,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "3105:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 116,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "account",
                  "nameLocation": "3147:7:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 118,
                  "src": "3131:23:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 115,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3131:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3104:51:0"
            }
          },
          {
            "id": 128,
            "nodeType": "EventDefinition",
            "src": "3162:121:0",
            "nodes": [],
            "anonymous": false,
            "eventSelector": "64e88f38de745da960b2de2db645d82947a21a405c4943480e05ee1ca974a907",
            "name": "MarketSettled",
            "nameLocation": "3168:13:0",
            "parameters": {
              "id": 127,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 120,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "marketId",
                  "nameLocation": "3198:8:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 128,
                  "src": "3182:24:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 119,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "3182:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 122,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "account",
                  "nameLocation": "3224:7:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 128,
                  "src": "3208:23:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 121,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3208:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 124,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "individualReward",
                  "nameLocation": "3241:16:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 128,
                  "src": "3233:24:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 123,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3233:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 126,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "creditReceived",
                  "nameLocation": "3267:14:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 128,
                  "src": "3259:22:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 125,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3259:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3181:101:0"
            }
          },
          {
            "id": 162,
            "nodeType": "FunctionDefinition",
            "src": "3289:309:0",
            "nodes": [],
            "body": {
              "id": 161,
              "nodeType": "Block",
              "src": "3395:203:0",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 141,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 137,
                      "name": "finder",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 20,
                      "src": "3405:6:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_FinderInterface_$51164",
                        "typeString": "contract FinderInterface"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 139,
                          "name": "_finder",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 130,
                          "src": "3430:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 138,
                        "name": "FinderInterface",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 51164,
                        "src": "3414:15:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_FinderInterface_$51164_$",
                          "typeString": "type(contract FinderInterface)"
                        }
                      },
                      "id": 140,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "3414:24:0",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_FinderInterface_$51164",
                        "typeString": "contract FinderInterface"
                      }
                    },
                    "src": "3405:33:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_FinderInterface_$51164",
                      "typeString": "contract FinderInterface"
                    }
                  },
                  "id": 142,
                  "nodeType": "ExpressionStatement",
                  "src": "3405:33:0"
                },
                {
                  "expression": {
                    "id": 147,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 143,
                      "name": "currency",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 23,
                      "src": "3448:8:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20_$45849",
                        "typeString": "contract IERC20"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 145,
                          "name": "_currency",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 132,
                          "src": "3466:9:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 144,
                        "name": "IERC20",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 45849,
                        "src": "3459:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_IERC20_$45849_$",
                          "typeString": "type(contract IERC20)"
                        }
                      },
                      "id": 146,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "3459:17:0",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20_$45849",
                        "typeString": "contract IERC20"
                      }
                    },
                    "src": "3448:28:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$45849",
                      "typeString": "contract IERC20"
                    }
                  },
                  "id": 148,
                  "nodeType": "ExpressionStatement",
                  "src": "3448:28:0"
                },
                {
                  "expression": {
                    "id": 153,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 149,
                      "name": "oo",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 26,
                      "src": "3486:2:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_OptimisticOracleV3Interface_$53397",
                        "typeString": "contract OptimisticOracleV3Interface"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 151,
                          "name": "_optimisticOracleV3",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 134,
                          "src": "3519:19:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 150,
                        "name": "OptimisticOracleV3Interface",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 53397,
                        "src": "3491:27:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_OptimisticOracleV3Interface_$53397_$",
                          "typeString": "type(contract OptimisticOracleV3Interface)"
                        }
                      },
                      "id": 152,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "3491:48:0",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_OptimisticOracleV3Interface_$53397",
                        "typeString": "contract OptimisticOracleV3Interface"
                      }
                    },
                    "src": "3486:53:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_OptimisticOracleV3Interface_$53397",
                      "typeString": "contract OptimisticOracleV3Interface"
                    }
                  },
                  "id": 154,
                  "nodeType": "ExpressionStatement",
                  "src": "3486:53:0"
                },
                {
                  "expression": {
                    "id": 159,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 155,
                      "name": "defaultIdentifier",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 37,
                      "src": "3549:17:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "expression": {
                          "id": 156,
                          "name": "oo",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 26,
                          "src": "3569:2:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_OptimisticOracleV3Interface_$53397",
                            "typeString": "contract OptimisticOracleV3Interface"
                          }
                        },
                        "id": 157,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "3572:17:0",
                        "memberName": "defaultIdentifier",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 53260,
                        "src": "3569:20:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_view$__$returns$_t_bytes32_$",
                          "typeString": "function () view external returns (bytes32)"
                        }
                      },
                      "id": 158,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "3569:22:0",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "src": "3549:42:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "id": 160,
                  "nodeType": "ExpressionStatement",
                  "src": "3549:42:0"
                }
              ]
            },
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "parameters": {
              "id": 135,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 130,
                  "mutability": "mutable",
                  "name": "_finder",
                  "nameLocation": "3318:7:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 162,
                  "src": "3310:15:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 129,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3310:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 132,
                  "mutability": "mutable",
                  "name": "_currency",
                  "nameLocation": "3343:9:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 162,
                  "src": "3335:17:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 131,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3335:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 134,
                  "mutability": "mutable",
                  "name": "_optimisticOracleV3",
                  "nameLocation": "3370:19:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 162,
                  "src": "3362:27:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 133,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3362:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3300:95:0"
            },
            "returnParameters": {
              "id": 136,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3395:0:0"
            },
            "scope": 1343,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 175,
            "nodeType": "FunctionDefinition",
            "src": "3604:114:0",
            "nodes": [],
            "body": {
              "id": 174,
              "nodeType": "Block",
              "src": "3677:41:0",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "baseExpression": {
                      "id": 170,
                      "name": "markets",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 77,
                      "src": "3694:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_Market_$67_storage_$",
                        "typeString": "mapping(bytes32 => struct CarbonUMArket.Market storage ref)"
                      }
                    },
                    "id": 172,
                    "indexExpression": {
                      "id": 171,
                      "name": "marketId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 164,
                      "src": "3702:8:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "3694:17:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Market_$67_storage",
                      "typeString": "struct CarbonUMArket.Market storage ref"
                    }
                  },
                  "functionReturnParameters": 169,
                  "id": 173,
                  "nodeType": "Return",
                  "src": "3687:24:0"
                }
              ]
            },
            "functionSelector": "c3c95c7b",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getMarket",
            "nameLocation": "3613:9:0",
            "parameters": {
              "id": 165,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 164,
                  "mutability": "mutable",
                  "name": "marketId",
                  "nameLocation": "3631:8:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 175,
                  "src": "3623:16:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 163,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "3623:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3622:18:0"
            },
            "returnParameters": {
              "id": 169,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 168,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 175,
                  "src": "3662:13:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Market_$67_memory_ptr",
                    "typeString": "struct CarbonUMArket.Market"
                  },
                  "typeName": {
                    "id": 167,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 166,
                      "name": "Market",
                      "nameLocations": [
                        "3662:6:0"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 67,
                      "src": "3662:6:0"
                    },
                    "referencedDeclaration": 67,
                    "src": "3662:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Market_$67_storage_ptr",
                      "typeString": "struct CarbonUMArket.Market"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3661:15:0"
            },
            "scope": 1343,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 379,
            "nodeType": "FunctionDefinition",
            "src": "3724:2187:0",
            "nodes": [],
            "body": {
              "id": 378,
              "nodeType": "Block",
              "src": "4127:1784:0",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 204,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 192,
                      "name": "marketId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 190,
                      "src": "4137:8:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "expression": {
                                "id": 196,
                                "name": "block",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -4,
                                "src": "4169:5:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_block",
                                  "typeString": "block"
                                }
                              },
                              "id": 197,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "4175:6:0",
                              "memberName": "number",
                              "nodeType": "MemberAccess",
                              "src": "4169:12:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "id": 198,
                              "name": "_creditCap",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 181,
                              "src": "4183:10:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "expression": {
                                "id": 199,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "4195:3:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 200,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "4199:6:0",
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "4195:10:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 201,
                              "name": "_description",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 183,
                              "src": "4207:12:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              }
                            ],
                            "expression": {
                              "id": 194,
                              "name": "abi",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -1,
                              "src": "4158:3:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_abi",
                                "typeString": "abi"
                              }
                            },
                            "id": 195,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberLocation": "4162:6:0",
                            "memberName": "encode",
                            "nodeType": "MemberAccess",
                            "src": "4158:10:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$",
                              "typeString": "function () pure returns (bytes memory)"
                            }
                          },
                          "id": 202,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4158:62:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_memory_ptr",
                            "typeString": "bytes memory"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_bytes_memory_ptr",
                            "typeString": "bytes memory"
                          }
                        ],
                        "id": 193,
                        "name": "keccak256",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -8,
                        "src": "4148:9:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                          "typeString": "function (bytes memory) pure returns (bytes32)"
                        }
                      },
                      "id": 203,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "4148:73:0",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "src": "4137:84:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "id": 205,
                  "nodeType": "ExpressionStatement",
                  "src": "4137:84:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 215,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "baseExpression": {
                              "id": 207,
                              "name": "markets",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 77,
                              "src": "4239:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_Market_$67_storage_$",
                                "typeString": "mapping(bytes32 => struct CarbonUMArket.Market storage ref)"
                              }
                            },
                            "id": 209,
                            "indexExpression": {
                              "id": 208,
                              "name": "marketId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 190,
                              "src": "4247:8:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "4239:17:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Market_$67_storage",
                              "typeString": "struct CarbonUMArket.Market storage ref"
                            }
                          },
                          "id": 210,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "4257:5:0",
                          "memberName": "owner",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 39,
                          "src": "4239:23:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 213,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "4274:1:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 212,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "4266:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 211,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "4266:7:0",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 214,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4266:10:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "4239:37:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4d61726b657420616c726561647920657869737473",
                        "id": 216,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4278:23:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_46ed0acc43a739f69f3ca66bde80e2f591498fec7f2def66fe3bfb78561afc27",
                          "typeString": "literal_string \"Market already exists\""
                        },
                        "value": "Market already exists"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_46ed0acc43a739f69f3ca66bde80e2f591498fec7f2def66fe3bfb78561afc27",
                          "typeString": "literal_string \"Market already exists\""
                        }
                      ],
                      "id": 206,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "4231:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 217,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4231:71:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 218,
                  "nodeType": "ExpressionStatement",
                  "src": "4231:71:0"
                },
                {
                  "assignments": [
                    221
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 221,
                      "mutability": "mutable",
                      "name": "carbonCredit",
                      "nameLocation": "4336:12:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 378,
                      "src": "4321:27:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ExpandedIERC20_$50590",
                        "typeString": "contract ExpandedIERC20"
                      },
                      "typeName": {
                        "id": 220,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 219,
                          "name": "ExpandedIERC20",
                          "nameLocations": [
                            "4321:14:0"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 50590,
                          "src": "4321:14:0"
                        },
                        "referencedDeclaration": 50590,
                        "src": "4321:14:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ExpandedIERC20_$50590",
                          "typeString": "contract ExpandedIERC20"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 236,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "id": 229,
                                "name": "_description",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 183,
                                "src": "4393:12:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_string_memory_ptr",
                                  "typeString": "string memory"
                                }
                              },
                              {
                                "hexValue": "20437265646974",
                                "id": 230,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "string",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "4407:9:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_stringliteral_424540d8d72b4ea1b95d74c4e6d495aefbf3ebfe119210b86c59c07a76cec992",
                                  "typeString": "literal_string \" Credit\""
                                },
                                "value": " Credit"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_string_memory_ptr",
                                  "typeString": "string memory"
                                },
                                {
                                  "typeIdentifier": "t_stringliteral_424540d8d72b4ea1b95d74c4e6d495aefbf3ebfe119210b86c59c07a76cec992",
                                  "typeString": "literal_string \" Credit\""
                                }
                              ],
                              "expression": {
                                "id": 227,
                                "name": "abi",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -1,
                                "src": "4376:3:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_abi",
                                  "typeString": "abi"
                                }
                              },
                              "id": 228,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "memberLocation": "4380:12:0",
                              "memberName": "encodePacked",
                              "nodeType": "MemberAccess",
                              "src": "4376:16:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                                "typeString": "function () pure returns (bytes memory)"
                              }
                            },
                            "id": 231,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "4376:41:0",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          ],
                          "id": 226,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "4369:6:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_string_storage_ptr_$",
                            "typeString": "type(string storage pointer)"
                          },
                          "typeName": {
                            "id": 225,
                            "name": "string",
                            "nodeType": "ElementaryTypeName",
                            "src": "4369:6:0",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 232,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4369:49:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      {
                        "hexValue": "4343",
                        "id": 233,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4420:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_56d96069d0c85d21b8d789da2cd39ba97ceec51143707e32ecb8343eb4258a9c",
                          "typeString": "literal_string \"CC\""
                        },
                        "value": "CC"
                      },
                      {
                        "hexValue": "31",
                        "id": 234,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4426:1:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_56d96069d0c85d21b8d789da2cd39ba97ceec51143707e32ecb8343eb4258a9c",
                          "typeString": "literal_string \"CC\""
                        },
                        {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        }
                      ],
                      "id": 224,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "NewExpression",
                      "src": "4351:17:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_creation_nonpayable$_t_string_memory_ptr_$_t_string_memory_ptr_$_t_uint8_$returns$_t_contract$_ExpandedERC20_$47843_$",
                        "typeString": "function (string memory,string memory,uint8) returns (contract ExpandedERC20)"
                      },
                      "typeName": {
                        "id": 223,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 222,
                          "name": "ExpandedERC20",
                          "nameLocations": [
                            "4355:13:0"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 47843,
                          "src": "4355:13:0"
                        },
                        "referencedDeclaration": 47843,
                        "src": "4355:13:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ExpandedERC20_$47843",
                          "typeString": "contract ExpandedERC20"
                        }
                      }
                    },
                    "id": 235,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4351:77:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ExpandedERC20_$47843",
                      "typeString": "contract ExpandedERC20"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4321:107:0"
                },
                {
                  "assignments": [
                    239
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 239,
                      "mutability": "mutable",
                      "name": "convertibleCarbonCredit",
                      "nameLocation": "4453:23:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 378,
                      "src": "4438:38:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ExpandedIERC20_$50590",
                        "typeString": "contract ExpandedIERC20"
                      },
                      "typeName": {
                        "id": 238,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 237,
                          "name": "ExpandedIERC20",
                          "nameLocations": [
                            "4438:14:0"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 50590,
                          "src": "4438:14:0"
                        },
                        "referencedDeclaration": 50590,
                        "src": "4438:14:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ExpandedIERC20_$50590",
                          "typeString": "contract ExpandedIERC20"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 254,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "id": 247,
                                "name": "_description",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 183,
                                "src": "4521:12:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_string_memory_ptr",
                                  "typeString": "string memory"
                                }
                              },
                              {
                                "hexValue": "20436f6e7665727469626c6520437265646974",
                                "id": 248,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "string",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "4535:21:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_stringliteral_2546059d5732cbcc857546a8a27cd3a6c65f15ee2f244e67cd7becebf076d2a4",
                                  "typeString": "literal_string \" Convertible Credit\""
                                },
                                "value": " Convertible Credit"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_string_memory_ptr",
                                  "typeString": "string memory"
                                },
                                {
                                  "typeIdentifier": "t_stringliteral_2546059d5732cbcc857546a8a27cd3a6c65f15ee2f244e67cd7becebf076d2a4",
                                  "typeString": "literal_string \" Convertible Credit\""
                                }
                              ],
                              "expression": {
                                "id": 245,
                                "name": "abi",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -1,
                                "src": "4504:3:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_abi",
                                  "typeString": "abi"
                                }
                              },
                              "id": 246,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "memberLocation": "4508:12:0",
                              "memberName": "encodePacked",
                              "nodeType": "MemberAccess",
                              "src": "4504:16:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                                "typeString": "function () pure returns (bytes memory)"
                              }
                            },
                            "id": 249,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "4504:53:0",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          ],
                          "id": 244,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "4497:6:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_string_storage_ptr_$",
                            "typeString": "type(string storage pointer)"
                          },
                          "typeName": {
                            "id": 243,
                            "name": "string",
                            "nodeType": "ElementaryTypeName",
                            "src": "4497:6:0",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 250,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4497:61:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      {
                        "hexValue": "434343",
                        "id": 251,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4560:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_2a696f0da6ad70d56f54aa53d0287d8d7fc5a236636c48db25d77485f1e76fb4",
                          "typeString": "literal_string \"CCC\""
                        },
                        "value": "CCC"
                      },
                      {
                        "hexValue": "31",
                        "id": 252,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4567:1:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_2a696f0da6ad70d56f54aa53d0287d8d7fc5a236636c48db25d77485f1e76fb4",
                          "typeString": "literal_string \"CCC\""
                        },
                        {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        }
                      ],
                      "id": 242,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "NewExpression",
                      "src": "4479:17:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_creation_nonpayable$_t_string_memory_ptr_$_t_string_memory_ptr_$_t_uint8_$returns$_t_contract$_ExpandedERC20_$47843_$",
                        "typeString": "function (string memory,string memory,uint8) returns (contract ExpandedERC20)"
                      },
                      "typeName": {
                        "id": 241,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 240,
                          "name": "ExpandedERC20",
                          "nameLocations": [
                            "4483:13:0"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 47843,
                          "src": "4483:13:0"
                        },
                        "referencedDeclaration": 47843,
                        "src": "4483:13:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ExpandedERC20_$47843",
                          "typeString": "contract ExpandedERC20"
                        }
                      }
                    },
                    "id": 253,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4479:90:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ExpandedERC20_$47843",
                      "typeString": "contract ExpandedERC20"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4438:131:0"
                },
                {
                  "assignments": [
                    257
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 257,
                      "mutability": "mutable",
                      "name": "validatorToken",
                      "nameLocation": "4594:14:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 378,
                      "src": "4579:29:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ExpandedIERC20_$50590",
                        "typeString": "contract ExpandedIERC20"
                      },
                      "typeName": {
                        "id": 256,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 255,
                          "name": "ExpandedIERC20",
                          "nameLocations": [
                            "4579:14:0"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 50590,
                          "src": "4579:14:0"
                        },
                        "referencedDeclaration": 50590,
                        "src": "4579:14:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ExpandedIERC20_$50590",
                          "typeString": "contract ExpandedIERC20"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 272,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "id": 265,
                                "name": "_description",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 183,
                                "src": "4653:12:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_string_memory_ptr",
                                  "typeString": "string memory"
                                }
                              },
                              {
                                "hexValue": "2056616c696461746f7220546f6b656e",
                                "id": 266,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "string",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "4667:18:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_stringliteral_ed13702698f546a5fbffb712c8493cea018bcc92439c2680fa6a578a2f2de71b",
                                  "typeString": "literal_string \" Validator Token\""
                                },
                                "value": " Validator Token"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_string_memory_ptr",
                                  "typeString": "string memory"
                                },
                                {
                                  "typeIdentifier": "t_stringliteral_ed13702698f546a5fbffb712c8493cea018bcc92439c2680fa6a578a2f2de71b",
                                  "typeString": "literal_string \" Validator Token\""
                                }
                              ],
                              "expression": {
                                "id": 263,
                                "name": "abi",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -1,
                                "src": "4636:3:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_abi",
                                  "typeString": "abi"
                                }
                              },
                              "id": 264,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "memberLocation": "4640:12:0",
                              "memberName": "encodePacked",
                              "nodeType": "MemberAccess",
                              "src": "4636:16:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                                "typeString": "function () pure returns (bytes memory)"
                              }
                            },
                            "id": 267,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "4636:50:0",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          ],
                          "id": 262,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "4629:6:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_string_storage_ptr_$",
                            "typeString": "type(string storage pointer)"
                          },
                          "typeName": {
                            "id": 261,
                            "name": "string",
                            "nodeType": "ElementaryTypeName",
                            "src": "4629:6:0",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 268,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4629:58:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      {
                        "hexValue": "5654",
                        "id": 269,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4689:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_fb5bac070e56bbdb9efaedc013f6db4d6a9a7aa99ac0c2ecd00a4ebddcf8275b",
                          "typeString": "literal_string \"VT\""
                        },
                        "value": "VT"
                      },
                      {
                        "hexValue": "31",
                        "id": 270,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4695:1:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_fb5bac070e56bbdb9efaedc013f6db4d6a9a7aa99ac0c2ecd00a4ebddcf8275b",
                          "typeString": "literal_string \"VT\""
                        },
                        {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        }
                      ],
                      "id": 260,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "NewExpression",
                      "src": "4611:17:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_creation_nonpayable$_t_string_memory_ptr_$_t_string_memory_ptr_$_t_uint8_$returns$_t_contract$_ExpandedERC20_$47843_$",
                        "typeString": "function (string memory,string memory,uint8) returns (contract ExpandedERC20)"
                      },
                      "typeName": {
                        "id": 259,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 258,
                          "name": "ExpandedERC20",
                          "nameLocations": [
                            "4615:13:0"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 47843,
                          "src": "4615:13:0"
                        },
                        "referencedDeclaration": 47843,
                        "src": "4615:13:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ExpandedERC20_$47843",
                          "typeString": "contract ExpandedERC20"
                        }
                      }
                    },
                    "id": 271,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4611:86:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ExpandedERC20_$47843",
                      "typeString": "contract ExpandedERC20"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4579:118:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 278,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "4739:4:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_CarbonUMArket_$1343",
                              "typeString": "contract CarbonUMArket"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_CarbonUMArket_$1343",
                              "typeString": "contract CarbonUMArket"
                            }
                          ],
                          "id": 277,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "4731:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 276,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "4731:7:0",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 279,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4731:13:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 273,
                        "name": "carbonCredit",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 221,
                        "src": "4708:12:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ExpandedIERC20_$50590",
                          "typeString": "contract ExpandedIERC20"
                        }
                      },
                      "id": 275,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "4721:9:0",
                      "memberName": "addMinter",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 50579,
                      "src": "4708:22:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 280,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4708:37:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 281,
                  "nodeType": "ExpressionStatement",
                  "src": "4708:37:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 287,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "4797:4:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_CarbonUMArket_$1343",
                              "typeString": "contract CarbonUMArket"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_CarbonUMArket_$1343",
                              "typeString": "contract CarbonUMArket"
                            }
                          ],
                          "id": 286,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "4789:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 285,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "4789:7:0",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 288,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4789:13:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 282,
                        "name": "convertibleCarbonCredit",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 239,
                        "src": "4755:23:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ExpandedIERC20_$50590",
                          "typeString": "contract ExpandedIERC20"
                        }
                      },
                      "id": 284,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "4779:9:0",
                      "memberName": "addMinter",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 50579,
                      "src": "4755:33:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 289,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4755:48:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 290,
                  "nodeType": "ExpressionStatement",
                  "src": "4755:48:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 296,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "4846:4:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_CarbonUMArket_$1343",
                              "typeString": "contract CarbonUMArket"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_CarbonUMArket_$1343",
                              "typeString": "contract CarbonUMArket"
                            }
                          ],
                          "id": 295,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "4838:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 294,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "4838:7:0",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 297,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4838:13:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 291,
                        "name": "validatorToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 257,
                        "src": "4813:14:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ExpandedIERC20_$50590",
                          "typeString": "contract ExpandedIERC20"
                        }
                      },
                      "id": 293,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "4828:9:0",
                      "memberName": "addMinter",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 50579,
                      "src": "4813:24:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 298,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4813:39:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 299,
                  "nodeType": "ExpressionStatement",
                  "src": "4813:39:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 305,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "4902:4:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_CarbonUMArket_$1343",
                              "typeString": "contract CarbonUMArket"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_CarbonUMArket_$1343",
                              "typeString": "contract CarbonUMArket"
                            }
                          ],
                          "id": 304,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "4894:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 303,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "4894:7:0",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 306,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4894:13:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 300,
                        "name": "carbonCredit",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 221,
                        "src": "4871:12:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ExpandedIERC20_$50590",
                          "typeString": "contract ExpandedIERC20"
                        }
                      },
                      "id": 302,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "4884:9:0",
                      "memberName": "addBurner",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 50584,
                      "src": "4871:22:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 307,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4871:37:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 308,
                  "nodeType": "ExpressionStatement",
                  "src": "4871:37:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 314,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "4960:4:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_CarbonUMArket_$1343",
                              "typeString": "contract CarbonUMArket"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_CarbonUMArket_$1343",
                              "typeString": "contract CarbonUMArket"
                            }
                          ],
                          "id": 313,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "4952:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 312,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "4952:7:0",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 315,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4952:13:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 309,
                        "name": "convertibleCarbonCredit",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 239,
                        "src": "4918:23:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ExpandedIERC20_$50590",
                          "typeString": "contract ExpandedIERC20"
                        }
                      },
                      "id": 311,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "4942:9:0",
                      "memberName": "addBurner",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 50584,
                      "src": "4918:33:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 316,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4918:48:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 317,
                  "nodeType": "ExpressionStatement",
                  "src": "4918:48:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 323,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "5009:4:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_CarbonUMArket_$1343",
                              "typeString": "contract CarbonUMArket"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_CarbonUMArket_$1343",
                              "typeString": "contract CarbonUMArket"
                            }
                          ],
                          "id": 322,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "5001:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 321,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "5001:7:0",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 324,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5001:13:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 318,
                        "name": "validatorToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 257,
                        "src": "4976:14:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ExpandedIERC20_$50590",
                          "typeString": "contract ExpandedIERC20"
                        }
                      },
                      "id": 320,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "4991:9:0",
                      "memberName": "addBurner",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 50584,
                      "src": "4976:24:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 325,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4976:39:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 326,
                  "nodeType": "ExpressionStatement",
                  "src": "4976:39:0"
                },
                {
                  "assignments": [
                    328
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 328,
                      "mutability": "mutable",
                      "name": "startingTime",
                      "nameLocation": "5034:12:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 378,
                      "src": "5026:20:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 327,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "5026:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 331,
                  "initialValue": {
                    "expression": {
                      "id": 329,
                      "name": "block",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": -4,
                      "src": "5049:5:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_magic_block",
                        "typeString": "block"
                      }
                    },
                    "id": 330,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberLocation": "5055:9:0",
                    "memberName": "timestamp",
                    "nodeType": "MemberAccess",
                    "src": "5049:15:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5026:38:0"
                },
                {
                  "expression": {
                    "id": 351,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 332,
                        "name": "markets",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 77,
                        "src": "5075:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_Market_$67_storage_$",
                          "typeString": "mapping(bytes32 => struct CarbonUMArket.Market storage ref)"
                        }
                      },
                      "id": 334,
                      "indexExpression": {
                        "id": 333,
                        "name": "marketId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 190,
                        "src": "5083:8:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "5075:17:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Market_$67_storage",
                        "typeString": "struct CarbonUMArket.Market storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "expression": {
                            "id": 336,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "5123:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 337,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "5127:6:0",
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "5123:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        {
                          "id": 338,
                          "name": "_requiredBond",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 179,
                          "src": "5161:13:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "id": 339,
                          "name": "_reward",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 177,
                          "src": "5196:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "id": 340,
                          "name": "_creditCap",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 181,
                          "src": "5228:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "id": 341,
                          "name": "carbonCredit",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 221,
                          "src": "5266:12:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_ExpandedIERC20_$50590",
                            "typeString": "contract ExpandedIERC20"
                          }
                        },
                        {
                          "id": 342,
                          "name": "convertibleCarbonCredit",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 239,
                          "src": "5317:23:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_ExpandedIERC20_$50590",
                            "typeString": "contract ExpandedIERC20"
                          }
                        },
                        {
                          "id": 343,
                          "name": "validatorToken",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 257,
                          "src": "5370:14:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_ExpandedIERC20_$50590",
                            "typeString": "contract ExpandedIERC20"
                          }
                        },
                        {
                          "id": 344,
                          "name": "startingTime",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 328,
                          "src": "5412:12:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "id": 345,
                          "name": "_openingPeriod",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 185,
                          "src": "5453:14:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "id": 346,
                          "name": "_auditPeriod",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 187,
                          "src": "5494:12:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "id": 347,
                          "name": "_description",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 183,
                          "src": "5533:12:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_memory_ptr",
                            "typeString": "string memory"
                          }
                        },
                        {
                          "hexValue": "74727565",
                          "id": 348,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "5577:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "true"
                        },
                        {
                          "hexValue": "30",
                          "id": 349,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "5608:1:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_contract$_ExpandedIERC20_$50590",
                            "typeString": "contract ExpandedIERC20"
                          },
                          {
                            "typeIdentifier": "t_contract$_ExpandedIERC20_$50590",
                            "typeString": "contract ExpandedIERC20"
                          },
                          {
                            "typeIdentifier": "t_contract$_ExpandedIERC20_$50590",
                            "typeString": "contract ExpandedIERC20"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_string_memory_ptr",
                            "typeString": "string memory"
                          },
                          {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          }
                        ],
                        "id": 335,
                        "name": "Market",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 67,
                        "src": "5095:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_struct$_Market_$67_storage_ptr_$",
                          "typeString": "type(struct CarbonUMArket.Market storage pointer)"
                        }
                      },
                      "id": 350,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "structConstructorCall",
                      "lValueRequested": false,
                      "nameLocations": [
                        "5116:5:0",
                        "5147:12:0",
                        "5188:6:0",
                        "5217:9:0",
                        "5252:12:0",
                        "5292:23:0",
                        "5354:14:0",
                        "5398:12:0",
                        "5438:13:0",
                        "5481:11:0",
                        "5520:11:0",
                        "5559:16:0",
                        "5595:11:0"
                      ],
                      "names": [
                        "owner",
                        "requiredBond",
                        "reward",
                        "creditCap",
                        "carbonCredit",
                        "convertibleCarbonCredit",
                        "validatorToken",
                        "startingTime",
                        "openingPeriod",
                        "auditPeriod",
                        "description",
                        "promiseDelivered",
                        "marketState"
                      ],
                      "nodeType": "FunctionCall",
                      "src": "5095:525:0",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Market_$67_memory_ptr",
                        "typeString": "struct CarbonUMArket.Market memory"
                      }
                    },
                    "src": "5075:545:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Market_$67_storage",
                      "typeString": "struct CarbonUMArket.Market storage ref"
                    }
                  },
                  "id": 352,
                  "nodeType": "ExpressionStatement",
                  "src": "5075:545:0"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 355,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 353,
                      "name": "_requiredBond",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 179,
                      "src": "5635:13:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 354,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "5651:1:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "5635:17:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 368,
                  "nodeType": "IfStatement",
                  "src": "5631:90:0",
                  "trueBody": {
                    "expression": {
                      "arguments": [
                        {
                          "expression": {
                            "id": 359,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "5680:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 360,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "5684:6:0",
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "5680:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        {
                          "arguments": [
                            {
                              "id": 363,
                              "name": "this",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -28,
                              "src": "5700:4:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_CarbonUMArket_$1343",
                                "typeString": "contract CarbonUMArket"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_CarbonUMArket_$1343",
                                "typeString": "contract CarbonUMArket"
                              }
                            ],
                            "id": 362,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "5692:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 361,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "5692:7:0",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 364,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5692:13:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        {
                          "id": 365,
                          "name": "_requiredBond",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 179,
                          "src": "5707:13:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "id": 356,
                          "name": "currency",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 23,
                          "src": "5654:8:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IERC20_$45849",
                            "typeString": "contract IERC20"
                          }
                        },
                        "id": 358,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "5663:16:0",
                        "memberName": "safeTransferFrom",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 45931,
                        "src": "5654:25:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$45849_$_t_address_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20_$45849_$",
                          "typeString": "function (contract IERC20,address,address,uint256)"
                        }
                      },
                      "id": 366,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "5654:67:0",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$__$",
                        "typeString": "tuple()"
                      }
                    },
                    "id": 367,
                    "nodeType": "ExpressionStatement",
                    "src": "5654:67:0"
                  }
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 370,
                        "name": "marketId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 190,
                        "src": "5784:8:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "id": 371,
                        "name": "_description",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 183,
                        "src": "5807:12:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      {
                        "id": 372,
                        "name": "_reward",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 177,
                        "src": "5833:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 373,
                        "name": "_requiredBond",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 179,
                        "src": "5855:13:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "expression": {
                          "id": 374,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "5883:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 375,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "5887:6:0",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "5883:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 369,
                      "name": "MarketInitialized",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 94,
                      "src": "5753:17:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_bytes32_$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$_t_address_$returns$__$",
                        "typeString": "function (bytes32,string memory,uint256,uint256,address)"
                      }
                    },
                    "id": 376,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5753:151:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 377,
                  "nodeType": "EmitStatement",
                  "src": "5748:156:0"
                }
              ]
            },
            "functionSelector": "ad7be668",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "initializeMarket",
            "nameLocation": "3733:16:0",
            "parameters": {
              "id": 188,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 177,
                  "mutability": "mutable",
                  "name": "_reward",
                  "nameLocation": "3767:7:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 379,
                  "src": "3759:15:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 176,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3759:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 179,
                  "mutability": "mutable",
                  "name": "_requiredBond",
                  "nameLocation": "3876:13:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 379,
                  "src": "3868:21:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 178,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3868:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 181,
                  "mutability": "mutable",
                  "name": "_creditCap",
                  "nameLocation": "3978:10:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 379,
                  "src": "3970:18:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 180,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3970:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 183,
                  "mutability": "mutable",
                  "name": "_description",
                  "nameLocation": "4012:12:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 379,
                  "src": "3998:26:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 182,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "3998:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 185,
                  "mutability": "mutable",
                  "name": "_openingPeriod",
                  "nameLocation": "4042:14:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 379,
                  "src": "4034:22:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 184,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4034:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 187,
                  "mutability": "mutable",
                  "name": "_auditPeriod",
                  "nameLocation": "4074:12:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 379,
                  "src": "4066:20:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 186,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4066:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3749:343:0"
            },
            "returnParameters": {
              "id": 191,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 190,
                  "mutability": "mutable",
                  "name": "marketId",
                  "nameLocation": "4117:8:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 379,
                  "src": "4109:16:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 189,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "4109:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4108:18:0"
            },
            "scope": 1343,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 396,
            "nodeType": "FunctionDefinition",
            "src": "5917:153:0",
            "nodes": [],
            "body": {
              "id": 395,
              "nodeType": "Block",
              "src": "5994:76:0",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 391,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "6052:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 392,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "6056:6:0",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "6052:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "expression": {
                          "baseExpression": {
                            "id": 386,
                            "name": "markets",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 77,
                            "src": "6011:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_Market_$67_storage_$",
                              "typeString": "mapping(bytes32 => struct CarbonUMArket.Market storage ref)"
                            }
                          },
                          "id": 388,
                          "indexExpression": {
                            "id": 387,
                            "name": "marketId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 381,
                            "src": "6019:8:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "6011:17:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Market_$67_storage",
                            "typeString": "struct CarbonUMArket.Market storage ref"
                          }
                        },
                        "id": 389,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "6029:12:0",
                        "memberName": "carbonCredit",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 48,
                        "src": "6011:30:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ExpandedIERC20_$50590",
                          "typeString": "contract ExpandedIERC20"
                        }
                      },
                      "id": 390,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "6042:9:0",
                      "memberName": "balanceOf",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 45788,
                      "src": "6011:40:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) view external returns (uint256)"
                      }
                    },
                    "id": 393,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6011:52:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 385,
                  "id": 394,
                  "nodeType": "Return",
                  "src": "6004:59:0"
                }
              ]
            },
            "functionSelector": "82f7b9ac",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "carbonCreditBalance",
            "nameLocation": "5926:19:0",
            "parameters": {
              "id": 382,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 381,
                  "mutability": "mutable",
                  "name": "marketId",
                  "nameLocation": "5954:8:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 396,
                  "src": "5946:16:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 380,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "5946:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5945:18:0"
            },
            "returnParameters": {
              "id": 385,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 384,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 396,
                  "src": "5985:7:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 383,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5985:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5984:9:0"
            },
            "scope": 1343,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 413,
            "nodeType": "FunctionDefinition",
            "src": "6076:175:0",
            "nodes": [],
            "body": {
              "id": 412,
              "nodeType": "Block",
              "src": "6164:87:0",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 408,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "6233:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 409,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "6237:6:0",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "6233:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "expression": {
                          "baseExpression": {
                            "id": 403,
                            "name": "markets",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 77,
                            "src": "6181:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_Market_$67_storage_$",
                              "typeString": "mapping(bytes32 => struct CarbonUMArket.Market storage ref)"
                            }
                          },
                          "id": 405,
                          "indexExpression": {
                            "id": 404,
                            "name": "marketId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 398,
                            "src": "6189:8:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "6181:17:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Market_$67_storage",
                            "typeString": "struct CarbonUMArket.Market storage ref"
                          }
                        },
                        "id": 406,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "6199:23:0",
                        "memberName": "convertibleCarbonCredit",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 51,
                        "src": "6181:41:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ExpandedIERC20_$50590",
                          "typeString": "contract ExpandedIERC20"
                        }
                      },
                      "id": 407,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "6223:9:0",
                      "memberName": "balanceOf",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 45788,
                      "src": "6181:51:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) view external returns (uint256)"
                      }
                    },
                    "id": 410,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6181:63:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 402,
                  "id": 411,
                  "nodeType": "Return",
                  "src": "6174:70:0"
                }
              ]
            },
            "functionSelector": "bac6d3c1",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "convertibleCarbonCreditBalance",
            "nameLocation": "6085:30:0",
            "parameters": {
              "id": 399,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 398,
                  "mutability": "mutable",
                  "name": "marketId",
                  "nameLocation": "6124:8:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 413,
                  "src": "6116:16:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 397,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "6116:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6115:18:0"
            },
            "returnParameters": {
              "id": 402,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 401,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 413,
                  "src": "6155:7:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 400,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6155:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6154:9:0"
            },
            "scope": 1343,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 425,
            "nodeType": "FunctionDefinition",
            "src": "6257:110:0",
            "nodes": [],
            "body": {
              "id": 424,
              "nodeType": "Block",
              "src": "6313:54:0",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 420,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "6349:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 421,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "6353:6:0",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "6349:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 418,
                        "name": "currency",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 23,
                        "src": "6330:8:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$45849",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 419,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "6339:9:0",
                      "memberName": "balanceOf",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 45788,
                      "src": "6330:18:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) view external returns (uint256)"
                      }
                    },
                    "id": 422,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6330:30:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 417,
                  "id": 423,
                  "nodeType": "Return",
                  "src": "6323:37:0"
                }
              ]
            },
            "functionSelector": "b0a1c1c4",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "accountBalance",
            "nameLocation": "6266:14:0",
            "parameters": {
              "id": 414,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6280:2:0"
            },
            "returnParameters": {
              "id": 417,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 416,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 425,
                  "src": "6304:7:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 415,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6304:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6303:9:0"
            },
            "scope": 1343,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 458,
            "nodeType": "FunctionDefinition",
            "src": "6373:260:0",
            "nodes": [],
            "body": {
              "id": 457,
              "nodeType": "Block",
              "src": "6439:194:0",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 439,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "baseExpression": {
                              "id": 433,
                              "name": "markets",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 77,
                              "src": "6457:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_Market_$67_storage_$",
                                "typeString": "mapping(bytes32 => struct CarbonUMArket.Market storage ref)"
                              }
                            },
                            "id": 435,
                            "indexExpression": {
                              "id": 434,
                              "name": "marketId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 427,
                              "src": "6465:8:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "6457:17:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Market_$67_storage",
                              "typeString": "struct CarbonUMArket.Market storage ref"
                            }
                          },
                          "id": 436,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "6475:5:0",
                          "memberName": "owner",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 39,
                          "src": "6457:23:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "expression": {
                            "id": 437,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "6484:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 438,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "6488:6:0",
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "6484:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "6457:37:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4f6e6c79206f776e65722063616e206368616e6765206d61726b6574207374617465",
                        "id": 440,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6496:36:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_3eeb38566e568aaf291a5371698df5b4ccce153c57a2c3f65ffc31c685eab49d",
                          "typeString": "literal_string \"Only owner can change market state\""
                        },
                        "value": "Only owner can change market state"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_3eeb38566e568aaf291a5371698df5b4ccce153c57a2c3f65ffc31c685eab49d",
                          "typeString": "literal_string \"Only owner can change market state\""
                        }
                      ],
                      "id": 432,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "6449:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 441,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6449:84:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 442,
                  "nodeType": "ExpressionStatement",
                  "src": "6449:84:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint64",
                          "typeString": "uint64"
                        },
                        "id": 446,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 444,
                          "name": "state",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 429,
                          "src": "6551:5:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint64",
                            "typeString": "uint64"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<=",
                        "rightExpression": {
                          "hexValue": "32",
                          "id": 445,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "6560:1:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_2_by_1",
                            "typeString": "int_const 2"
                          },
                          "value": "2"
                        },
                        "src": "6551:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "496e76616c6964207374617465",
                        "id": 447,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6563:15:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_93c7bfb09523d58f01b6a32948850d1d1f88882bc86f0ef13b8b0537eea45f60",
                          "typeString": "literal_string \"Invalid state\""
                        },
                        "value": "Invalid state"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_93c7bfb09523d58f01b6a32948850d1d1f88882bc86f0ef13b8b0537eea45f60",
                          "typeString": "literal_string \"Invalid state\""
                        }
                      ],
                      "id": 443,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "6543:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 448,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6543:36:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 449,
                  "nodeType": "ExpressionStatement",
                  "src": "6543:36:0"
                },
                {
                  "expression": {
                    "id": 455,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "baseExpression": {
                          "id": 450,
                          "name": "markets",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 77,
                          "src": "6589:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_Market_$67_storage_$",
                            "typeString": "mapping(bytes32 => struct CarbonUMArket.Market storage ref)"
                          }
                        },
                        "id": 452,
                        "indexExpression": {
                          "id": 451,
                          "name": "marketId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 427,
                          "src": "6597:8:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "6589:17:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Market_$67_storage",
                          "typeString": "struct CarbonUMArket.Market storage ref"
                        }
                      },
                      "id": 453,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberLocation": "6607:11:0",
                      "memberName": "marketState",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 66,
                      "src": "6589:29:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint64",
                        "typeString": "uint64"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 454,
                      "name": "state",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 429,
                      "src": "6621:5:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint64",
                        "typeString": "uint64"
                      }
                    },
                    "src": "6589:37:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint64",
                      "typeString": "uint64"
                    }
                  },
                  "id": 456,
                  "nodeType": "ExpressionStatement",
                  "src": "6589:37:0"
                }
              ]
            },
            "functionSelector": "481e9c6b",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "changeMarketState",
            "nameLocation": "6382:17:0",
            "parameters": {
              "id": 430,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 427,
                  "mutability": "mutable",
                  "name": "marketId",
                  "nameLocation": "6408:8:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 458,
                  "src": "6400:16:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 426,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "6400:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 429,
                  "mutability": "mutable",
                  "name": "state",
                  "nameLocation": "6425:5:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 458,
                  "src": "6418:12:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint64",
                    "typeString": "uint64"
                  },
                  "typeName": {
                    "id": 428,
                    "name": "uint64",
                    "nodeType": "ElementaryTypeName",
                    "src": "6418:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint64",
                      "typeString": "uint64"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6399:32:0"
            },
            "returnParameters": {
              "id": 431,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6439:0:0"
            },
            "scope": 1343,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 610,
            "nodeType": "FunctionDefinition",
            "src": "6639:1643:0",
            "nodes": [],
            "body": {
              "id": 609,
              "nodeType": "Block",
              "src": "6722:1560:0",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    467
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 467,
                      "mutability": "mutable",
                      "name": "market",
                      "nameLocation": "6747:6:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 609,
                      "src": "6732:21:0",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Market_$67_storage_ptr",
                        "typeString": "struct CarbonUMArket.Market"
                      },
                      "typeName": {
                        "id": 466,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 465,
                          "name": "Market",
                          "nameLocations": [
                            "6732:6:0"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 67,
                          "src": "6732:6:0"
                        },
                        "referencedDeclaration": 67,
                        "src": "6732:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Market_$67_storage_ptr",
                          "typeString": "struct CarbonUMArket.Market"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 471,
                  "initialValue": {
                    "baseExpression": {
                      "id": 468,
                      "name": "markets",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 77,
                      "src": "6756:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_Market_$67_storage_$",
                        "typeString": "mapping(bytes32 => struct CarbonUMArket.Market storage ref)"
                      }
                    },
                    "id": 470,
                    "indexExpression": {
                      "id": 469,
                      "name": "marketId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 460,
                      "src": "6764:8:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "6756:17:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Market_$67_storage",
                      "typeString": "struct CarbonUMArket.Market storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "6732:41:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 498,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "components": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              "id": 492,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 480,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "expression": {
                                    "id": 473,
                                    "name": "block",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": -4,
                                    "src": "6801:5:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_magic_block",
                                      "typeString": "block"
                                    }
                                  },
                                  "id": 474,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberLocation": "6807:9:0",
                                  "memberName": "timestamp",
                                  "nodeType": "MemberAccess",
                                  "src": "6801:15:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": ">=",
                                "rightExpression": {
                                  "commonType": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "id": 479,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "expression": {
                                      "id": 475,
                                      "name": "market",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 467,
                                      "src": "6820:6:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_Market_$67_storage_ptr",
                                        "typeString": "struct CarbonUMArket.Market storage pointer"
                                      }
                                    },
                                    "id": 476,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberLocation": "6827:12:0",
                                    "memberName": "startingTime",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 56,
                                    "src": "6820:19:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "+",
                                  "rightExpression": {
                                    "expression": {
                                      "id": 477,
                                      "name": "market",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 467,
                                      "src": "6842:6:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_Market_$67_storage_ptr",
                                        "typeString": "struct CarbonUMArket.Market storage pointer"
                                      }
                                    },
                                    "id": 478,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberLocation": "6849:13:0",
                                    "memberName": "openingPeriod",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 58,
                                    "src": "6842:20:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "src": "6820:42:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "6801:61:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "&&",
                              "rightExpression": {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 491,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "expression": {
                                    "id": 481,
                                    "name": "block",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": -4,
                                    "src": "6866:5:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_magic_block",
                                      "typeString": "block"
                                    }
                                  },
                                  "id": 482,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberLocation": "6872:9:0",
                                  "memberName": "timestamp",
                                  "nodeType": "MemberAccess",
                                  "src": "6866:15:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "<",
                                "rightExpression": {
                                  "commonType": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "id": 490,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "commonType": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    "id": 487,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftExpression": {
                                      "expression": {
                                        "id": 483,
                                        "name": "market",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 467,
                                        "src": "6884:6:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_struct$_Market_$67_storage_ptr",
                                          "typeString": "struct CarbonUMArket.Market storage pointer"
                                        }
                                      },
                                      "id": 484,
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberLocation": "6891:12:0",
                                      "memberName": "startingTime",
                                      "nodeType": "MemberAccess",
                                      "referencedDeclaration": 56,
                                      "src": "6884:19:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "nodeType": "BinaryOperation",
                                    "operator": "+",
                                    "rightExpression": {
                                      "expression": {
                                        "id": 485,
                                        "name": "market",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 467,
                                        "src": "6906:6:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_struct$_Market_$67_storage_ptr",
                                          "typeString": "struct CarbonUMArket.Market storage pointer"
                                        }
                                      },
                                      "id": 486,
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberLocation": "6913:13:0",
                                      "memberName": "openingPeriod",
                                      "nodeType": "MemberAccess",
                                      "referencedDeclaration": 58,
                                      "src": "6906:20:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "src": "6884:42:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "+",
                                  "rightExpression": {
                                    "expression": {
                                      "id": 488,
                                      "name": "market",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 467,
                                      "src": "6929:6:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_Market_$67_storage_ptr",
                                        "typeString": "struct CarbonUMArket.Market storage pointer"
                                      }
                                    },
                                    "id": 489,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberLocation": "6936:11:0",
                                    "memberName": "auditPeriod",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 60,
                                    "src": "6929:18:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "src": "6884:63:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "6866:81:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "src": "6801:146:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            }
                          ],
                          "id": 493,
                          "isConstant": false,
                          "isInlineArray": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "TupleExpression",
                          "src": "6800:149:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "||",
                        "rightExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint64",
                            "typeString": "uint64"
                          },
                          "id": 497,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "expression": {
                              "id": 494,
                              "name": "market",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 467,
                              "src": "6974:6:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Market_$67_storage_ptr",
                                "typeString": "struct CarbonUMArket.Market storage pointer"
                              }
                            },
                            "id": 495,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "6981:11:0",
                            "memberName": "marketState",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 66,
                            "src": "6974:18:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint64",
                              "typeString": "uint64"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "hexValue": "31",
                            "id": 496,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "6996:1:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_1_by_1",
                              "typeString": "int_const 1"
                            },
                            "value": "1"
                          },
                          "src": "6974:23:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "6800:197:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "50726f6a656374206973206e6f7420726561647920666f722061756469742079657421",
                        "id": 499,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7020:37:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c53e728b62b741ee175d6c5281b04a10473eec5e937891c9646bf92609a60671",
                          "typeString": "literal_string \"Project is not ready for audit yet!\""
                        },
                        "value": "Project is not ready for audit yet!"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_c53e728b62b741ee175d6c5281b04a10473eec5e937891c9646bf92609a60671",
                          "typeString": "literal_string \"Project is not ready for audit yet!\""
                        }
                      ],
                      "id": 472,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "6792:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 500,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6792:266:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 501,
                  "nodeType": "ExpressionStatement",
                  "src": "6792:266:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 509,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 503,
                            "name": "market",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 467,
                            "src": "7076:6:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Market_$67_storage_ptr",
                              "typeString": "struct CarbonUMArket.Market storage pointer"
                            }
                          },
                          "id": 504,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "7083:5:0",
                          "memberName": "owner",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 39,
                          "src": "7076:12:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 507,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "7100:1:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 506,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "7092:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 505,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "7092:7:0",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 508,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "7092:10:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "7076:26:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4d61726b6574206e6f7420696e697469616c697a6564",
                        "id": 510,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7104:24:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_164eebb807dff45efd6d5720746c07bf7eb5f76debf860059225594abc768c14",
                          "typeString": "literal_string \"Market not initialized\""
                        },
                        "value": "Market not initialized"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_164eebb807dff45efd6d5720746c07bf7eb5f76debf860059225594abc768c14",
                          "typeString": "literal_string \"Market not initialized\""
                        }
                      ],
                      "id": 502,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "7068:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 511,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7068:61:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 512,
                  "nodeType": "ExpressionStatement",
                  "src": "7068:61:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 522,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "baseExpression": {
                              "id": 514,
                              "name": "assertedMarkets",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 82,
                              "src": "7148:15:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_AssertedMarket_$72_storage_$",
                                "typeString": "mapping(bytes32 => struct CarbonUMArket.AssertedMarket storage ref)"
                              }
                            },
                            "id": 516,
                            "indexExpression": {
                              "id": 515,
                              "name": "marketId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 460,
                              "src": "7164:8:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "7148:25:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_AssertedMarket_$72_storage",
                              "typeString": "struct CarbonUMArket.AssertedMarket storage ref"
                            }
                          },
                          "id": 517,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "7174:8:0",
                          "memberName": "asserter",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 69,
                          "src": "7148:34:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 520,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "7194:1:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 519,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "7186:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 518,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "7186:7:0",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 521,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "7186:10:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "7148:48:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4d61726b657420616c7265616479206173736572746564",
                        "id": 523,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7198:25:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_d511bbfb79b029838ef29b7f5cbd550daa7f6f933c8eab8d2404f9e83f5deb2c",
                          "typeString": "literal_string \"Market already asserted\""
                        },
                        "value": "Market already asserted"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_d511bbfb79b029838ef29b7f5cbd550daa7f6f933c8eab8d2404f9e83f5deb2c",
                          "typeString": "literal_string \"Market already asserted\""
                        }
                      ],
                      "id": 513,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "7140:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 524,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7140:84:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 525,
                  "nodeType": "ExpressionStatement",
                  "src": "7140:84:0"
                },
                {
                  "assignments": [
                    527
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 527,
                      "mutability": "mutable",
                      "name": "minimumBond",
                      "nameLocation": "7318:11:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 609,
                      "src": "7310:19:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 526,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "7310:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 535,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 532,
                            "name": "currency",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 23,
                            "src": "7358:8:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IERC20_$45849",
                              "typeString": "contract IERC20"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_IERC20_$45849",
                              "typeString": "contract IERC20"
                            }
                          ],
                          "id": 531,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "7350:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 530,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "7350:7:0",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 533,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "7350:17:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 528,
                        "name": "oo",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 26,
                        "src": "7332:2:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_OptimisticOracleV3Interface_$53397",
                          "typeString": "contract OptimisticOracleV3Interface"
                        }
                      },
                      "id": 529,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "7335:14:0",
                      "memberName": "getMinimumBond",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 53342,
                      "src": "7332:17:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) view external returns (uint256)"
                      }
                    },
                    "id": 534,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7332:36:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "7310:58:0"
                },
                {
                  "assignments": [
                    537
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 537,
                      "mutability": "mutable",
                      "name": "bond",
                      "nameLocation": "7421:4:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 609,
                      "src": "7413:12:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 536,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "7413:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 546,
                  "initialValue": {
                    "condition": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 541,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "expression": {
                          "id": 538,
                          "name": "market",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 467,
                          "src": "7428:6:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Market_$67_storage_ptr",
                            "typeString": "struct CarbonUMArket.Market storage pointer"
                          }
                        },
                        "id": 539,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "7435:12:0",
                        "memberName": "requiredBond",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 41,
                        "src": "7428:19:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": ">",
                      "rightExpression": {
                        "id": 540,
                        "name": "minimumBond",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 527,
                        "src": "7450:11:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "7428:33:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "falseExpression": {
                      "id": 544,
                      "name": "minimumBond",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 527,
                      "src": "7486:11:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 545,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "Conditional",
                    "src": "7428:69:0",
                    "trueExpression": {
                      "expression": {
                        "id": 542,
                        "name": "market",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 467,
                        "src": "7464:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Market_$67_storage_ptr",
                          "typeString": "struct CarbonUMArket.Market storage pointer"
                        }
                      },
                      "id": 543,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "7471:12:0",
                      "memberName": "requiredBond",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 41,
                      "src": "7464:19:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "7413:84:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 550,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "7570:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 551,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "7574:6:0",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "7570:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 554,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "7590:4:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_CarbonUMArket_$1343",
                              "typeString": "contract CarbonUMArket"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_CarbonUMArket_$1343",
                              "typeString": "contract CarbonUMArket"
                            }
                          ],
                          "id": 553,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "7582:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 552,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "7582:7:0",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 555,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "7582:13:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 556,
                        "name": "bond",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 537,
                        "src": "7597:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 547,
                        "name": "currency",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 23,
                        "src": "7544:8:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$45849",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 549,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "7553:16:0",
                      "memberName": "safeTransferFrom",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 45931,
                      "src": "7544:25:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$45849_$_t_address_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20_$45849_$",
                        "typeString": "function (contract IERC20,address,address,uint256)"
                      }
                    },
                    "id": 557,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7544:58:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 558,
                  "nodeType": "ExpressionStatement",
                  "src": "7544:58:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 564,
                            "name": "oo",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 26,
                            "src": "7641:2:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_OptimisticOracleV3Interface_$53397",
                              "typeString": "contract OptimisticOracleV3Interface"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_OptimisticOracleV3Interface_$53397",
                              "typeString": "contract OptimisticOracleV3Interface"
                            }
                          ],
                          "id": 563,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "7633:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 562,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "7633:7:0",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 565,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "7633:11:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 566,
                        "name": "bond",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 537,
                        "src": "7646:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 559,
                        "name": "currency",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 23,
                        "src": "7612:8:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$45849",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 561,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "7621:11:0",
                      "memberName": "safeApprove",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 45975,
                      "src": "7612:20:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$45849_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20_$45849_$",
                        "typeString": "function (contract IERC20,address,uint256)"
                      }
                    },
                    "id": 567,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7612:39:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 568,
                  "nodeType": "ExpressionStatement",
                  "src": "7612:39:0"
                },
                {
                  "expression": {
                    "id": 592,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 569,
                      "name": "assertionId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 463,
                      "src": "7669:11:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "hexValue": "54686520696e737469747574696f6e2063616e6e6f742064656c69766572207468652070726f6d6973656420616d6f756e74206f6620636172626f6e20637265646974",
                          "id": 572,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "string",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "7711:69:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_stringliteral_54ec24c240053f511d90ebd1a99b7fee571509c4555764d7be12c6fdd5b4dc55",
                            "typeString": "literal_string \"The institution cannot deliver the promised amount of carbon credit\""
                          },
                          "value": "The institution cannot deliver the promised amount of carbon credit"
                        },
                        {
                          "expression": {
                            "id": 573,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "7794:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 574,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "7798:6:0",
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "7794:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        {
                          "arguments": [
                            {
                              "id": 577,
                              "name": "this",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -28,
                              "src": "7838:4:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_CarbonUMArket_$1343",
                                "typeString": "contract CarbonUMArket"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_CarbonUMArket_$1343",
                                "typeString": "contract CarbonUMArket"
                              }
                            ],
                            "id": 576,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "7830:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 575,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "7830:7:0",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 578,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "7830:13:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 581,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "7903:1:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 580,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "7895:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 579,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "7895:7:0",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 582,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "7895:10:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        {
                          "id": 583,
                          "name": "assertionLiveness",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 32,
                          "src": "7945:17:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint64",
                            "typeString": "uint64"
                          }
                        },
                        {
                          "id": 584,
                          "name": "currency",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 23,
                          "src": "7976:8:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IERC20_$45849",
                            "typeString": "contract IERC20"
                          }
                        },
                        {
                          "id": 585,
                          "name": "bond",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 537,
                          "src": "7998:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "id": 586,
                          "name": "defaultIdentifier",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 37,
                          "src": "8016:17:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 589,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "8055:1:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 588,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "8047:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_bytes32_$",
                              "typeString": "type(bytes32)"
                            },
                            "typeName": {
                              "id": 587,
                              "name": "bytes32",
                              "nodeType": "ElementaryTypeName",
                              "src": "8047:7:0",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 590,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "8047:10:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_stringliteral_54ec24c240053f511d90ebd1a99b7fee571509c4555764d7be12c6fdd5b4dc55",
                            "typeString": "literal_string \"The institution cannot deliver the promised amount of carbon credit\""
                          },
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          {
                            "typeIdentifier": "t_uint64",
                            "typeString": "uint64"
                          },
                          {
                            "typeIdentifier": "t_contract$_IERC20_$45849",
                            "typeString": "contract IERC20"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          },
                          {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        ],
                        "expression": {
                          "id": 570,
                          "name": "oo",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 26,
                          "src": "7683:2:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_OptimisticOracleV3Interface_$53397",
                            "typeString": "contract OptimisticOracleV3Interface"
                          }
                        },
                        "id": 571,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "7686:11:0",
                        "memberName": "assertTruth",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 53304,
                        "src": "7683:14:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_nonpayable$_t_bytes_memory_ptr_$_t_address_$_t_address_$_t_address_$_t_uint64_$_t_contract$_IERC20_$45849_$_t_uint256_$_t_bytes32_$_t_bytes32_$returns$_t_bytes32_$",
                          "typeString": "function (bytes memory,address,address,address,uint64,contract IERC20,uint256,bytes32,bytes32) external returns (bytes32)"
                        }
                      },
                      "id": 591,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "7683:398:0",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "src": "7669:412:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "id": 593,
                  "nodeType": "ExpressionStatement",
                  "src": "7669:412:0"
                },
                {
                  "expression": {
                    "id": 602,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 594,
                        "name": "assertedMarkets",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 82,
                        "src": "8092:15:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_AssertedMarket_$72_storage_$",
                          "typeString": "mapping(bytes32 => struct CarbonUMArket.AssertedMarket storage ref)"
                        }
                      },
                      "id": 596,
                      "indexExpression": {
                        "id": 595,
                        "name": "assertionId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 463,
                        "src": "8108:11:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "8092:28:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_AssertedMarket_$72_storage",
                        "typeString": "struct CarbonUMArket.AssertedMarket storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "expression": {
                            "id": 598,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "8162:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 599,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "8166:6:0",
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "8162:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        {
                          "id": 600,
                          "name": "marketId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 460,
                          "src": "8196:8:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        ],
                        "id": 597,
                        "name": "AssertedMarket",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 72,
                        "src": "8123:14:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_struct$_AssertedMarket_$72_storage_ptr_$",
                          "typeString": "type(struct CarbonUMArket.AssertedMarket storage pointer)"
                        }
                      },
                      "id": 601,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "structConstructorCall",
                      "lValueRequested": false,
                      "nameLocations": [
                        "8152:8:0",
                        "8186:8:0"
                      ],
                      "names": [
                        "asserter",
                        "marketId"
                      ],
                      "nodeType": "FunctionCall",
                      "src": "8123:92:0",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_AssertedMarket_$72_memory_ptr",
                        "typeString": "struct CarbonUMArket.AssertedMarket memory"
                      }
                    },
                    "src": "8092:123:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_AssertedMarket_$72_storage",
                      "typeString": "struct CarbonUMArket.AssertedMarket storage ref"
                    }
                  },
                  "id": 603,
                  "nodeType": "ExpressionStatement",
                  "src": "8092:123:0"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 605,
                        "name": "marketId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 460,
                        "src": "8253:8:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "id": 606,
                        "name": "assertionId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 463,
                        "src": "8263:11:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      ],
                      "id": 604,
                      "name": "FalsePromisedDeclared",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 100,
                      "src": "8231:21:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_bytes32_$_t_bytes32_$returns$__$",
                        "typeString": "function (bytes32,bytes32)"
                      }
                    },
                    "id": 607,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8231:44:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 608,
                  "nodeType": "EmitStatement",
                  "src": "8226:49:0"
                }
              ]
            },
            "functionSelector": "1122cca3",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "declareFalsePromise",
            "nameLocation": "6648:19:0",
            "parameters": {
              "id": 461,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 460,
                  "mutability": "mutable",
                  "name": "marketId",
                  "nameLocation": "6676:8:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 610,
                  "src": "6668:16:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 459,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "6668:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6667:18:0"
            },
            "returnParameters": {
              "id": 464,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 463,
                  "mutability": "mutable",
                  "name": "assertionId",
                  "nameLocation": "6710:11:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 610,
                  "src": "6702:19:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 462,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "6702:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6701:21:0"
            },
            "scope": 1343,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 707,
            "nodeType": "FunctionDefinition",
            "src": "8288:872:0",
            "nodes": [],
            "body": {
              "id": 706,
              "nodeType": "Block",
              "src": "8377:783:0",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 624,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 618,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "8395:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 619,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "8399:6:0",
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "8395:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "arguments": [
                            {
                              "id": 622,
                              "name": "oo",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 26,
                              "src": "8417:2:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_OptimisticOracleV3Interface_$53397",
                                "typeString": "contract OptimisticOracleV3Interface"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_OptimisticOracleV3Interface_$53397",
                                "typeString": "contract OptimisticOracleV3Interface"
                              }
                            ],
                            "id": 621,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "8409:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 620,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "8409:7:0",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 623,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "8409:11:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "8395:25:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4f6e6c79204f4f76332063616e2063616c6c20746869732066756e6374696f6e",
                        "id": 625,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "8422:34:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_55f7cd8e3d29a5df364596edec7d862e0510e2e14e392755269785b4162ad535",
                          "typeString": "literal_string \"Only OOv3 can call this function\""
                        },
                        "value": "Only OOv3 can call this function"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_55f7cd8e3d29a5df364596edec7d862e0510e2e14e392755269785b4162ad535",
                          "typeString": "literal_string \"Only OOv3 can call this function\""
                        }
                      ],
                      "id": 617,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "8387:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 626,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8387:70:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 627,
                  "nodeType": "ExpressionStatement",
                  "src": "8387:70:0"
                },
                {
                  "assignments": [
                    630
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 630,
                      "mutability": "mutable",
                      "name": "market",
                      "nameLocation": "8482:6:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 706,
                      "src": "8467:21:0",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Market_$67_storage_ptr",
                        "typeString": "struct CarbonUMArket.Market"
                      },
                      "typeName": {
                        "id": 629,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 628,
                          "name": "Market",
                          "nameLocations": [
                            "8467:6:0"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 67,
                          "src": "8467:6:0"
                        },
                        "referencedDeclaration": 67,
                        "src": "8467:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Market_$67_storage_ptr",
                          "typeString": "struct CarbonUMArket.Market"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 637,
                  "initialValue": {
                    "baseExpression": {
                      "id": 631,
                      "name": "markets",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 77,
                      "src": "8491:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_Market_$67_storage_$",
                        "typeString": "mapping(bytes32 => struct CarbonUMArket.Market storage ref)"
                      }
                    },
                    "id": 636,
                    "indexExpression": {
                      "expression": {
                        "baseExpression": {
                          "id": 632,
                          "name": "assertedMarkets",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 82,
                          "src": "8499:15:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_AssertedMarket_$72_storage_$",
                            "typeString": "mapping(bytes32 => struct CarbonUMArket.AssertedMarket storage ref)"
                          }
                        },
                        "id": 634,
                        "indexExpression": {
                          "id": 633,
                          "name": "assertionId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 612,
                          "src": "8515:11:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "8499:28:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_AssertedMarket_$72_storage",
                          "typeString": "struct CarbonUMArket.AssertedMarket storage ref"
                        }
                      },
                      "id": 635,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "8528:8:0",
                      "memberName": "marketId",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 71,
                      "src": "8499:37:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "8491:46:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Market_$67_storage",
                      "typeString": "struct CarbonUMArket.Market storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "8467:70:0"
                },
                {
                  "condition": {
                    "id": 638,
                    "name": "assertedTruthfully",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 614,
                    "src": "8560:18:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 692,
                  "nodeType": "IfStatement",
                  "src": "8556:497:0",
                  "trueBody": {
                    "id": 691,
                    "nodeType": "Block",
                    "src": "8580:473:0",
                    "statements": [
                      {
                        "expression": {
                          "id": 643,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "expression": {
                              "id": 639,
                              "name": "market",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 630,
                              "src": "8594:6:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Market_$67_storage_ptr",
                                "typeString": "struct CarbonUMArket.Market storage pointer"
                              }
                            },
                            "id": 641,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberLocation": "8601:16:0",
                            "memberName": "promiseDelivered",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 64,
                            "src": "8594:23:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "hexValue": "66616c7365",
                            "id": 642,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "bool",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "8620:5:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "value": "false"
                          },
                          "src": "8594:31:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 644,
                        "nodeType": "ExpressionStatement",
                        "src": "8594:31:0"
                      },
                      {
                        "assignments": [
                          646
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 646,
                            "mutability": "mutable",
                            "name": "minimumBond",
                            "nameLocation": "8659:11:0",
                            "nodeType": "VariableDeclaration",
                            "scope": 691,
                            "src": "8651:19:0",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 645,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "8651:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 654,
                        "initialValue": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "id": 651,
                                  "name": "currency",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 23,
                                  "src": "8699:8:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_IERC20_$45849",
                                    "typeString": "contract IERC20"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_IERC20_$45849",
                                    "typeString": "contract IERC20"
                                  }
                                ],
                                "id": 650,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "8691:7:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 649,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "8691:7:0",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 652,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "8691:17:0",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "expression": {
                              "id": 647,
                              "name": "oo",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 26,
                              "src": "8673:2:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_OptimisticOracleV3Interface_$53397",
                                "typeString": "contract OptimisticOracleV3Interface"
                              }
                            },
                            "id": 648,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "8676:14:0",
                            "memberName": "getMinimumBond",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 53342,
                            "src": "8673:17:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                              "typeString": "function (address) view external returns (uint256)"
                            }
                          },
                          "id": 653,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "8673:36:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "8651:58:0"
                      },
                      {
                        "assignments": [
                          656
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 656,
                            "mutability": "mutable",
                            "name": "bond",
                            "nameLocation": "8766:4:0",
                            "nodeType": "VariableDeclaration",
                            "scope": 691,
                            "src": "8758:12:0",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 655,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "8758:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 665,
                        "initialValue": {
                          "condition": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 660,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "expression": {
                                "id": 657,
                                "name": "market",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 630,
                                "src": "8773:6:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Market_$67_storage_ptr",
                                  "typeString": "struct CarbonUMArket.Market storage pointer"
                                }
                              },
                              "id": 658,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "8780:12:0",
                              "memberName": "requiredBond",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 41,
                              "src": "8773:19:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": ">",
                            "rightExpression": {
                              "id": 659,
                              "name": "minimumBond",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 646,
                              "src": "8795:11:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "8773:33:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "falseExpression": {
                            "id": 663,
                            "name": "minimumBond",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 646,
                            "src": "8831:11:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 664,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "Conditional",
                          "src": "8773:69:0",
                          "trueExpression": {
                            "expression": {
                              "id": 661,
                              "name": "market",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 630,
                              "src": "8809:6:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Market_$67_storage_ptr",
                                "typeString": "struct CarbonUMArket.Market storage pointer"
                              }
                            },
                            "id": 662,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "8816:12:0",
                            "memberName": "requiredBond",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 41,
                            "src": "8809:19:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "8758:84:0"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "id": 673,
                                  "name": "this",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -28,
                                  "src": "8893:4:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_CarbonUMArket_$1343",
                                    "typeString": "contract CarbonUMArket"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_CarbonUMArket_$1343",
                                    "typeString": "contract CarbonUMArket"
                                  }
                                ],
                                "id": 672,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "8885:7:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 671,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "8885:7:0",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 674,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "8885:13:0",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "arguments": [],
                              "expression": {
                                "argumentTypes": [],
                                "expression": {
                                  "expression": {
                                    "id": 675,
                                    "name": "market",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 630,
                                    "src": "8900:6:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_Market_$67_storage_ptr",
                                      "typeString": "struct CarbonUMArket.Market storage pointer"
                                    }
                                  },
                                  "id": 676,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberLocation": "8907:12:0",
                                  "memberName": "carbonCredit",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 48,
                                  "src": "8900:19:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_ExpandedIERC20_$50590",
                                    "typeString": "contract ExpandedIERC20"
                                  }
                                },
                                "id": 677,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "8920:11:0",
                                "memberName": "totalSupply",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 45780,
                                "src": "8900:31:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$",
                                  "typeString": "function () view external returns (uint256)"
                                }
                              },
                              "id": 678,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "8900:33:0",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "expression": {
                                "id": 666,
                                "name": "market",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 630,
                                "src": "8856:6:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Market_$67_storage_ptr",
                                  "typeString": "struct CarbonUMArket.Market storage pointer"
                                }
                              },
                              "id": 669,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "8863:12:0",
                              "memberName": "carbonCredit",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 48,
                              "src": "8856:19:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_ExpandedIERC20_$50590",
                                "typeString": "contract ExpandedIERC20"
                              }
                            },
                            "id": 670,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "8876:8:0",
                            "memberName": "burnFrom",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 50564,
                            "src": "8856:28:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                              "typeString": "function (address,uint256) external returns (bool)"
                            }
                          },
                          "id": 679,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "8856:78:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 680,
                        "nodeType": "ExpressionStatement",
                        "src": "8856:78:0"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "expression": {
                                "baseExpression": {
                                  "id": 684,
                                  "name": "assertedMarkets",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 82,
                                  "src": "8970:15:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_AssertedMarket_$72_storage_$",
                                    "typeString": "mapping(bytes32 => struct CarbonUMArket.AssertedMarket storage ref)"
                                  }
                                },
                                "id": 686,
                                "indexExpression": {
                                  "id": 685,
                                  "name": "assertionId",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 612,
                                  "src": "8986:11:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes32",
                                    "typeString": "bytes32"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "8970:28:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_AssertedMarket_$72_storage",
                                  "typeString": "struct CarbonUMArket.AssertedMarket storage ref"
                                }
                              },
                              "id": 687,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "8999:8:0",
                              "memberName": "asserter",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 69,
                              "src": "8970:37:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 688,
                              "name": "bond",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 656,
                              "src": "9009:4:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "id": 681,
                              "name": "currency",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 23,
                              "src": "8948:8:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC20_$45849",
                                "typeString": "contract IERC20"
                              }
                            },
                            "id": 683,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "8957:12:0",
                            "memberName": "safeTransfer",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 45905,
                            "src": "8948:21:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$45849_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20_$45849_$",
                              "typeString": "function (contract IERC20,address,uint256)"
                            }
                          },
                          "id": 689,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "8948:66:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 690,
                        "nodeType": "ExpressionStatement",
                        "src": "8948:66:0"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "id": 697,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 693,
                        "name": "market",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 630,
                        "src": "9062:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Market_$67_storage_ptr",
                          "typeString": "struct CarbonUMArket.Market storage pointer"
                        }
                      },
                      "id": 695,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberLocation": "9069:11:0",
                      "memberName": "marketState",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 66,
                      "src": "9062:18:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint64",
                        "typeString": "uint64"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "32",
                      "id": 696,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "9083:1:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_2_by_1",
                        "typeString": "int_const 2"
                      },
                      "value": "2"
                    },
                    "src": "9062:22:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint64",
                      "typeString": "uint64"
                    }
                  },
                  "id": 698,
                  "nodeType": "ExpressionStatement",
                  "src": "9062:22:0"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "expression": {
                          "baseExpression": {
                            "id": 700,
                            "name": "assertedMarkets",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 82,
                            "src": "9115:15:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_AssertedMarket_$72_storage_$",
                              "typeString": "mapping(bytes32 => struct CarbonUMArket.AssertedMarket storage ref)"
                            }
                          },
                          "id": 702,
                          "indexExpression": {
                            "id": 701,
                            "name": "assertionId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 612,
                            "src": "9131:11:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "9115:28:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_AssertedMarket_$72_storage",
                            "typeString": "struct CarbonUMArket.AssertedMarket storage ref"
                          }
                        },
                        "id": 703,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "9144:8:0",
                        "memberName": "marketId",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 71,
                        "src": "9115:37:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      ],
                      "id": 699,
                      "name": "MarketResolved",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 104,
                      "src": "9100:14:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_bytes32_$returns$__$",
                        "typeString": "function (bytes32)"
                      }
                    },
                    "id": 704,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9100:53:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 705,
                  "nodeType": "EmitStatement",
                  "src": "9095:58:0"
                }
              ]
            },
            "baseFunctions": [
              53200
            ],
            "functionSelector": "f1b156b2",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "assertionResolvedCallback",
            "nameLocation": "8297:25:0",
            "parameters": {
              "id": 615,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 612,
                  "mutability": "mutable",
                  "name": "assertionId",
                  "nameLocation": "8332:11:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 707,
                  "src": "8324:19:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 611,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "8324:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 614,
                  "mutability": "mutable",
                  "name": "assertedTruthfully",
                  "nameLocation": "8350:18:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 707,
                  "src": "8345:23:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 613,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "8345:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8322:47:0"
            },
            "returnParameters": {
              "id": 616,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "8377:0:0"
            },
            "scope": 1343,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 713,
            "nodeType": "FunctionDefinition",
            "src": "9204:65:0",
            "nodes": [],
            "body": {
              "id": 712,
              "nodeType": "Block",
              "src": "9267:2:0",
              "nodes": [],
              "statements": []
            },
            "baseFunctions": [
              53206
            ],
            "functionSelector": "d448a4ec",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "assertionDisputedCallback",
            "nameLocation": "9213:25:0",
            "parameters": {
              "id": 710,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 709,
                  "mutability": "mutable",
                  "name": "assertionId",
                  "nameLocation": "9247:11:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 713,
                  "src": "9239:19:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 708,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "9239:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "9238:21:0"
            },
            "returnParameters": {
              "id": 711,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "9267:0:0"
            },
            "scope": 1343,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 840,
            "nodeType": "FunctionDefinition",
            "src": "9275:1069:0",
            "nodes": [],
            "body": {
              "id": 839,
              "nodeType": "Block",
              "src": "9344:1000:0",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    722
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 722,
                      "mutability": "mutable",
                      "name": "market",
                      "nameLocation": "9369:6:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 839,
                      "src": "9354:21:0",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Market_$67_storage_ptr",
                        "typeString": "struct CarbonUMArket.Market"
                      },
                      "typeName": {
                        "id": 721,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 720,
                          "name": "Market",
                          "nameLocations": [
                            "9354:6:0"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 67,
                          "src": "9354:6:0"
                        },
                        "referencedDeclaration": 67,
                        "src": "9354:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Market_$67_storage_ptr",
                          "typeString": "struct CarbonUMArket.Market"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 726,
                  "initialValue": {
                    "baseExpression": {
                      "id": 723,
                      "name": "markets",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 77,
                      "src": "9378:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_Market_$67_storage_$",
                        "typeString": "mapping(bytes32 => struct CarbonUMArket.Market storage ref)"
                      }
                    },
                    "id": 725,
                    "indexExpression": {
                      "id": 724,
                      "name": "marketId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 715,
                      "src": "9386:8:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "9378:17:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Market_$67_storage",
                      "typeString": "struct CarbonUMArket.Market storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "9354:41:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 747,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "components": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              "id": 741,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 732,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "expression": {
                                    "id": 728,
                                    "name": "block",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": -4,
                                    "src": "9414:5:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_magic_block",
                                      "typeString": "block"
                                    }
                                  },
                                  "id": 729,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberLocation": "9420:9:0",
                                  "memberName": "timestamp",
                                  "nodeType": "MemberAccess",
                                  "src": "9414:15:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": ">=",
                                "rightExpression": {
                                  "expression": {
                                    "id": 730,
                                    "name": "market",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 722,
                                    "src": "9433:6:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_Market_$67_storage_ptr",
                                      "typeString": "struct CarbonUMArket.Market storage pointer"
                                    }
                                  },
                                  "id": 731,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberLocation": "9440:12:0",
                                  "memberName": "startingTime",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 56,
                                  "src": "9433:19:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "9414:38:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "&&",
                              "rightExpression": {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 740,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "expression": {
                                    "id": 733,
                                    "name": "block",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": -4,
                                    "src": "9456:5:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_magic_block",
                                      "typeString": "block"
                                    }
                                  },
                                  "id": 734,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberLocation": "9462:9:0",
                                  "memberName": "timestamp",
                                  "nodeType": "MemberAccess",
                                  "src": "9456:15:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "<",
                                "rightExpression": {
                                  "commonType": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "id": 739,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "expression": {
                                      "id": 735,
                                      "name": "market",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 722,
                                      "src": "9474:6:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_Market_$67_storage_ptr",
                                        "typeString": "struct CarbonUMArket.Market storage pointer"
                                      }
                                    },
                                    "id": 736,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberLocation": "9481:12:0",
                                    "memberName": "startingTime",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 56,
                                    "src": "9474:19:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "+",
                                  "rightExpression": {
                                    "expression": {
                                      "id": 737,
                                      "name": "market",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 722,
                                      "src": "9496:6:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_Market_$67_storage_ptr",
                                        "typeString": "struct CarbonUMArket.Market storage pointer"
                                      }
                                    },
                                    "id": 738,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberLocation": "9503:13:0",
                                    "memberName": "openingPeriod",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 58,
                                    "src": "9496:20:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "src": "9474:42:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "9456:60:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "src": "9414:102:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            }
                          ],
                          "id": 742,
                          "isConstant": false,
                          "isInlineArray": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "TupleExpression",
                          "src": "9413:104:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "||",
                        "rightExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint64",
                            "typeString": "uint64"
                          },
                          "id": 746,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "expression": {
                              "id": 743,
                              "name": "market",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 722,
                              "src": "9541:6:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Market_$67_storage_ptr",
                                "typeString": "struct CarbonUMArket.Market storage pointer"
                              }
                            },
                            "id": 744,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "9548:11:0",
                            "memberName": "marketState",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 66,
                            "src": "9541:18:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint64",
                              "typeString": "uint64"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "hexValue": "30",
                            "id": 745,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "9563:1:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "src": "9541:23:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "9413:151:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4d61726b657420697320636c6f73656421",
                        "id": 748,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "9587:19:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_2a7da93754b5997e873feeb9865851f9c3987117a70a3b2400729ae8c7bd5905",
                          "typeString": "literal_string \"Market is closed!\""
                        },
                        "value": "Market is closed!"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_2a7da93754b5997e873feeb9865851f9c3987117a70a3b2400729ae8c7bd5905",
                          "typeString": "literal_string \"Market is closed!\""
                        }
                      ],
                      "id": 727,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "9405:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 749,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9405:202:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 750,
                  "nodeType": "ExpressionStatement",
                  "src": "9405:202:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 758,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 752,
                            "name": "market",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 722,
                            "src": "9625:6:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Market_$67_storage_ptr",
                              "typeString": "struct CarbonUMArket.Market storage pointer"
                            }
                          },
                          "id": 753,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "9632:5:0",
                          "memberName": "owner",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 39,
                          "src": "9625:12:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 756,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "9649:1:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 755,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "9641:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 754,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "9641:7:0",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 757,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "9641:10:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "9625:26:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4d61726b6574206973206e6f7420696e697469616c697a6564",
                        "id": 759,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "9653:27:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_808af0af2523cbb6cb28126d69a5d2969c0ea69f4e938ad0e828598d140f1628",
                          "typeString": "literal_string \"Market is not initialized\""
                        },
                        "value": "Market is not initialized"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_808af0af2523cbb6cb28126d69a5d2969c0ea69f4e938ad0e828598d140f1628",
                          "typeString": "literal_string \"Market is not initialized\""
                        }
                      ],
                      "id": 751,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "9617:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 760,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9617:64:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 761,
                  "nodeType": "ExpressionStatement",
                  "src": "9617:64:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 765,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 763,
                          "name": "creditToCreate",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 717,
                          "src": "9699:14:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 764,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "9716:1:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "9699:18:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "546865206e756d626572206f66206372656469742067656e6572617465642073686f756c6420626520626967676572207468616e2030",
                        "id": 766,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "9719:56:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_7f70e9528b0264b91c93e018ea374adf5a68d0fa447317535dd41b8704ccb06b",
                          "typeString": "literal_string \"The number of credit generated should be bigger than 0\""
                        },
                        "value": "The number of credit generated should be bigger than 0"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_7f70e9528b0264b91c93e018ea374adf5a68d0fa447317535dd41b8704ccb06b",
                          "typeString": "literal_string \"The number of credit generated should be bigger than 0\""
                        }
                      ],
                      "id": 762,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "9691:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 767,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9691:85:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 768,
                  "nodeType": "ExpressionStatement",
                  "src": "9691:85:0"
                },
                {
                  "assignments": [
                    770
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 770,
                      "mutability": "mutable",
                      "name": "totalSupplyOfCarbonCredit",
                      "nameLocation": "9794:25:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 839,
                      "src": "9786:33:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 769,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "9786:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 775,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "expression": {
                          "id": 771,
                          "name": "market",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 722,
                          "src": "9822:6:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Market_$67_storage_ptr",
                            "typeString": "struct CarbonUMArket.Market storage pointer"
                          }
                        },
                        "id": 772,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "9829:12:0",
                        "memberName": "carbonCredit",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 48,
                        "src": "9822:19:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ExpandedIERC20_$50590",
                          "typeString": "contract ExpandedIERC20"
                        }
                      },
                      "id": 773,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "9842:11:0",
                      "memberName": "totalSupply",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 45780,
                      "src": "9822:31:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$",
                        "typeString": "function () view external returns (uint256)"
                      }
                    },
                    "id": 774,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9822:33:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "9786:69:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 782,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 779,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 777,
                            "name": "totalSupplyOfCarbonCredit",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 770,
                            "src": "9873:25:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "+",
                          "rightExpression": {
                            "id": 778,
                            "name": "creditToCreate",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 717,
                            "src": "9901:14:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "9873:42:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<=",
                        "rightExpression": {
                          "expression": {
                            "id": 780,
                            "name": "market",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 722,
                            "src": "9919:6:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Market_$67_storage_ptr",
                              "typeString": "struct CarbonUMArket.Market storage pointer"
                            }
                          },
                          "id": 781,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "9926:9:0",
                          "memberName": "creditCap",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 45,
                          "src": "9919:16:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "9873:62:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "hexValue": "4f6e6c7920",
                            "id": 786,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "string",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "9951:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_stringliteral_f75c09dcaed3e77d5e0fd731099ac5b856e283255484bb26ac8acc677b09f88c",
                              "typeString": "literal_string \"Only \""
                            },
                            "value": "Only "
                          },
                          {
                            "arguments": [
                              {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 792,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "expression": {
                                    "id": 789,
                                    "name": "market",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 722,
                                    "src": "9977:6:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_Market_$67_storage_ptr",
                                      "typeString": "struct CarbonUMArket.Market storage pointer"
                                    }
                                  },
                                  "id": 790,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberLocation": "9984:9:0",
                                  "memberName": "creditCap",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 45,
                                  "src": "9977:16:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "-",
                                "rightExpression": {
                                  "id": 791,
                                  "name": "totalSupplyOfCarbonCredit",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 770,
                                  "src": "9996:25:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "9977:44:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "expression": {
                                "id": 787,
                                "name": "Strings",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 46618,
                                "src": "9960:7:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_Strings_$46618_$",
                                  "typeString": "type(library Strings)"
                                }
                              },
                              "id": 788,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "9968:8:0",
                              "memberName": "toString",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 46500,
                              "src": "9960:16:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$",
                                "typeString": "function (uint256) pure returns (string memory)"
                              }
                            },
                            "id": 793,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "9960:62:0",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            }
                          },
                          {
                            "hexValue": "20746f6b656e73206c65667421",
                            "id": 794,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "string",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "10024:15:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_stringliteral_4fa471dd76af46a433f1bb0fde3358b7332fe584c534b38df0d3623a0d204d20",
                              "typeString": "literal_string \" tokens left!\""
                            },
                            "value": " tokens left!"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_stringliteral_f75c09dcaed3e77d5e0fd731099ac5b856e283255484bb26ac8acc677b09f88c",
                              "typeString": "literal_string \"Only \""
                            },
                            {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            },
                            {
                              "typeIdentifier": "t_stringliteral_4fa471dd76af46a433f1bb0fde3358b7332fe584c534b38df0d3623a0d204d20",
                              "typeString": "literal_string \" tokens left!\""
                            }
                          ],
                          "expression": {
                            "id": 784,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "9937:6:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_string_storage_ptr_$",
                              "typeString": "type(string storage pointer)"
                            },
                            "typeName": {
                              "id": 783,
                              "name": "string",
                              "nodeType": "ElementaryTypeName",
                              "src": "9937:6:0",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 785,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "9944:6:0",
                          "memberName": "concat",
                          "nodeType": "MemberAccess",
                          "src": "9937:13:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_stringconcat_pure$__$returns$_t_string_memory_ptr_$",
                            "typeString": "function () pure returns (string memory)"
                          }
                        },
                        "id": 795,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "9937:103:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      ],
                      "id": 776,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "9865:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 796,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9865:176:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 797,
                  "nodeType": "ExpressionStatement",
                  "src": "9865:176:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 801,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "10078:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 802,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "10082:6:0",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "10078:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "id": 803,
                          "name": "market",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 722,
                          "src": "10090:6:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Market_$67_storage_ptr",
                            "typeString": "struct CarbonUMArket.Market storage pointer"
                          }
                        },
                        "id": 804,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "10097:5:0",
                        "memberName": "owner",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 39,
                        "src": "10090:12:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 807,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 805,
                          "name": "creditToCreate",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 717,
                          "src": "10104:14:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "*",
                        "rightExpression": {
                          "hexValue": "31653138",
                          "id": 806,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "10119:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1000000000000000000_by_1",
                            "typeString": "int_const 1000000000000000000"
                          },
                          "value": "1e18"
                        },
                        "src": "10104:19:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 798,
                        "name": "currency",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 23,
                        "src": "10052:8:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$45849",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 800,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "10061:16:0",
                      "memberName": "safeTransferFrom",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 45931,
                      "src": "10052:25:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$45849_$_t_address_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20_$45849_$",
                        "typeString": "function (contract IERC20,address,address,uint256)"
                      }
                    },
                    "id": 808,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10052:72:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 809,
                  "nodeType": "ExpressionStatement",
                  "src": "10052:72:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 817,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "10167:4:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_CarbonUMArket_$1343",
                              "typeString": "contract CarbonUMArket"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_CarbonUMArket_$1343",
                              "typeString": "contract CarbonUMArket"
                            }
                          ],
                          "id": 816,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "10159:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 815,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "10159:7:0",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 818,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "10159:13:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 819,
                        "name": "creditToCreate",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 717,
                        "src": "10174:14:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "expression": {
                          "id": 810,
                          "name": "market",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 722,
                          "src": "10134:6:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Market_$67_storage_ptr",
                            "typeString": "struct CarbonUMArket.Market storage pointer"
                          }
                        },
                        "id": 813,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "10141:12:0",
                        "memberName": "carbonCredit",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 48,
                        "src": "10134:19:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ExpandedIERC20_$50590",
                          "typeString": "contract ExpandedIERC20"
                        }
                      },
                      "id": 814,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "10154:4:0",
                      "memberName": "mint",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 50574,
                      "src": "10134:24:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,uint256) external returns (bool)"
                      }
                    },
                    "id": 820,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10134:55:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 821,
                  "nodeType": "ExpressionStatement",
                  "src": "10134:55:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 827,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "10235:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 828,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "10239:6:0",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "10235:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 829,
                        "name": "creditToCreate",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 717,
                        "src": "10247:14:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "expression": {
                          "id": 822,
                          "name": "market",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 722,
                          "src": "10199:6:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Market_$67_storage_ptr",
                            "typeString": "struct CarbonUMArket.Market storage pointer"
                          }
                        },
                        "id": 825,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "10206:23:0",
                        "memberName": "convertibleCarbonCredit",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 51,
                        "src": "10199:30:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ExpandedIERC20_$50590",
                          "typeString": "contract ExpandedIERC20"
                        }
                      },
                      "id": 826,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "10230:4:0",
                      "memberName": "mint",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 50574,
                      "src": "10199:35:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,uint256) external returns (bool)"
                      }
                    },
                    "id": 830,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10199:63:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 831,
                  "nodeType": "ExpressionStatement",
                  "src": "10199:63:0"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 833,
                        "name": "marketId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 715,
                        "src": "10300:8:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "expression": {
                          "id": 834,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "10310:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 835,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "10314:6:0",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "10310:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 836,
                        "name": "creditToCreate",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 717,
                        "src": "10322:14:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 832,
                      "name": "CreditsMinted",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 112,
                      "src": "10286:13:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_bytes32_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (bytes32,address,uint256)"
                      }
                    },
                    "id": 837,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10286:51:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 838,
                  "nodeType": "EmitStatement",
                  "src": "10281:56:0"
                }
              ]
            },
            "functionSelector": "a7f0de81",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "mintCredit",
            "nameLocation": "9284:10:0",
            "parameters": {
              "id": 718,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 715,
                  "mutability": "mutable",
                  "name": "marketId",
                  "nameLocation": "9303:8:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 840,
                  "src": "9295:16:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 714,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "9295:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 717,
                  "mutability": "mutable",
                  "name": "creditToCreate",
                  "nameLocation": "9321:14:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 840,
                  "src": "9313:22:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 716,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "9313:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "9294:42:0"
            },
            "returnParameters": {
              "id": 719,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "9344:0:0"
            },
            "scope": 1343,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 924,
            "nodeType": "FunctionDefinition",
            "src": "10350:666:0",
            "nodes": [],
            "body": {
              "id": 923,
              "nodeType": "Block",
              "src": "10402:614:0",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    847
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 847,
                      "mutability": "mutable",
                      "name": "market",
                      "nameLocation": "10427:6:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 923,
                      "src": "10412:21:0",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Market_$67_storage_ptr",
                        "typeString": "struct CarbonUMArket.Market"
                      },
                      "typeName": {
                        "id": 846,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 845,
                          "name": "Market",
                          "nameLocations": [
                            "10412:6:0"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 67,
                          "src": "10412:6:0"
                        },
                        "referencedDeclaration": 67,
                        "src": "10412:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Market_$67_storage_ptr",
                          "typeString": "struct CarbonUMArket.Market"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 851,
                  "initialValue": {
                    "baseExpression": {
                      "id": 848,
                      "name": "markets",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 77,
                      "src": "10436:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_Market_$67_storage_$",
                        "typeString": "mapping(bytes32 => struct CarbonUMArket.Market storage ref)"
                      }
                    },
                    "id": 850,
                    "indexExpression": {
                      "id": 849,
                      "name": "marketId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 842,
                      "src": "10444:8:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "10436:17:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Market_$67_storage",
                      "typeString": "struct CarbonUMArket.Market storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "10412:41:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 868,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 863,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "expression": {
                              "id": 853,
                              "name": "block",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -4,
                              "src": "10471:5:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_block",
                                "typeString": "block"
                              }
                            },
                            "id": 854,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "10477:9:0",
                            "memberName": "timestamp",
                            "nodeType": "MemberAccess",
                            "src": "10471:15:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "<",
                          "rightExpression": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 862,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 859,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "expression": {
                                  "id": 855,
                                  "name": "market",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 847,
                                  "src": "10489:6:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_Market_$67_storage_ptr",
                                    "typeString": "struct CarbonUMArket.Market storage pointer"
                                  }
                                },
                                "id": 856,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "10496:12:0",
                                "memberName": "startingTime",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 56,
                                "src": "10489:19:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "+",
                              "rightExpression": {
                                "expression": {
                                  "id": 857,
                                  "name": "market",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 847,
                                  "src": "10511:6:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_Market_$67_storage_ptr",
                                    "typeString": "struct CarbonUMArket.Market storage pointer"
                                  }
                                },
                                "id": 858,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "10518:13:0",
                                "memberName": "openingPeriod",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 58,
                                "src": "10511:20:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "10489:42:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "+",
                            "rightExpression": {
                              "expression": {
                                "id": 860,
                                "name": "market",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 847,
                                "src": "10534:6:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Market_$67_storage_ptr",
                                  "typeString": "struct CarbonUMArket.Market storage pointer"
                                }
                              },
                              "id": 861,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "10541:11:0",
                              "memberName": "auditPeriod",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 60,
                              "src": "10534:18:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "10489:63:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "10471:81:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "||",
                        "rightExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint64",
                            "typeString": "uint64"
                          },
                          "id": 867,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "expression": {
                              "id": 864,
                              "name": "market",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 847,
                              "src": "10572:6:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Market_$67_storage_ptr",
                                "typeString": "struct CarbonUMArket.Market storage pointer"
                              }
                            },
                            "id": 865,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "10579:11:0",
                            "memberName": "marketState",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 66,
                            "src": "10572:18:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint64",
                              "typeString": "uint64"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "<",
                          "rightExpression": {
                            "hexValue": "32",
                            "id": 866,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "10593:1:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_2_by_1",
                              "typeString": "int_const 2"
                            },
                            "value": "2"
                          },
                          "src": "10572:22:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "10471:123:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4d61726b6574206973206175646974656421",
                        "id": 869,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "10613:20:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_aec570d71594aed0773dd9b60b98f40511a3c404149d1dcf6759d097b8f2a069",
                          "typeString": "literal_string \"Market is audited!\""
                        },
                        "value": "Market is audited!"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_aec570d71594aed0773dd9b60b98f40511a3c404149d1dcf6759d097b8f2a069",
                          "typeString": "literal_string \"Market is audited!\""
                        }
                      ],
                      "id": 852,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "10463:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 870,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10463:171:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 871,
                  "nodeType": "ExpressionStatement",
                  "src": "10463:171:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 879,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 873,
                            "name": "market",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 847,
                            "src": "10652:6:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Market_$67_storage_ptr",
                              "typeString": "struct CarbonUMArket.Market storage pointer"
                            }
                          },
                          "id": 874,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "10659:5:0",
                          "memberName": "owner",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 39,
                          "src": "10652:12:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 877,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "10676:1:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 876,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "10668:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 875,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "10668:7:0",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 878,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "10668:10:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "10652:26:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4d61726b6574206973206e6f7420696e697469616c697a6564",
                        "id": 880,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "10680:27:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_808af0af2523cbb6cb28126d69a5d2969c0ea69f4e938ad0e828598d140f1628",
                          "typeString": "literal_string \"Market is not initialized\""
                        },
                        "value": "Market is not initialized"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_808af0af2523cbb6cb28126d69a5d2969c0ea69f4e938ad0e828598d140f1628",
                          "typeString": "literal_string \"Market is not initialized\""
                        }
                      ],
                      "id": 872,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "10644:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 881,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10644:64:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 882,
                  "nodeType": "ExpressionStatement",
                  "src": "10644:64:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 891,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 887,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "10758:3:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 888,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "10762:6:0",
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "10758:10:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "expression": {
                              "expression": {
                                "id": 884,
                                "name": "market",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 847,
                                "src": "10726:6:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Market_$67_storage_ptr",
                                  "typeString": "struct CarbonUMArket.Market storage pointer"
                                }
                              },
                              "id": 885,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "10733:14:0",
                              "memberName": "validatorToken",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 54,
                              "src": "10726:21:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_ExpandedIERC20_$50590",
                                "typeString": "contract ExpandedIERC20"
                              }
                            },
                            "id": 886,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "10748:9:0",
                            "memberName": "balanceOf",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 45788,
                            "src": "10726:31:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                              "typeString": "function (address) view external returns (uint256)"
                            }
                          },
                          "id": 889,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "10726:43:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 890,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "10773:1:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "10726:48:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "56616c696461746f722063616e207265676973746572206f6e6c79206f6e652074696d65",
                        "id": 892,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "10776:38:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_6fcc0c9cd483a7e2670ee8abf87503df035f79dc871c2da96580b17318960826",
                          "typeString": "literal_string \"Validator can register only one time\""
                        },
                        "value": "Validator can register only one time"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_6fcc0c9cd483a7e2670ee8abf87503df035f79dc871c2da96580b17318960826",
                          "typeString": "literal_string \"Validator can register only one time\""
                        }
                      ],
                      "id": 883,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "10718:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 893,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10718:97:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 894,
                  "nodeType": "ExpressionStatement",
                  "src": "10718:97:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 900,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "10852:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 901,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "10856:6:0",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "10852:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "31",
                        "id": 902,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "10864:1:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        }
                      ],
                      "expression": {
                        "expression": {
                          "id": 895,
                          "name": "market",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 847,
                          "src": "10825:6:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Market_$67_storage_ptr",
                            "typeString": "struct CarbonUMArket.Market storage pointer"
                          }
                        },
                        "id": 898,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "10832:14:0",
                        "memberName": "validatorToken",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 54,
                        "src": "10825:21:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ExpandedIERC20_$50590",
                          "typeString": "contract ExpandedIERC20"
                        }
                      },
                      "id": 899,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "10847:4:0",
                      "memberName": "mint",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 50574,
                      "src": "10825:26:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,uint256) external returns (bool)"
                      }
                    },
                    "id": 903,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10825:41:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 904,
                  "nodeType": "ExpressionStatement",
                  "src": "10825:41:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 908,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "10903:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 909,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "10907:6:0",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "10903:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 912,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "10923:4:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_CarbonUMArket_$1343",
                              "typeString": "contract CarbonUMArket"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_CarbonUMArket_$1343",
                              "typeString": "contract CarbonUMArket"
                            }
                          ],
                          "id": 911,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "10915:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 910,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "10915:7:0",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 913,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "10915:13:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 914,
                        "name": "validatorFee",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 35,
                        "src": "10930:12:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint64",
                          "typeString": "uint64"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint64",
                          "typeString": "uint64"
                        }
                      ],
                      "expression": {
                        "id": 905,
                        "name": "currency",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 23,
                        "src": "10877:8:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$45849",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 907,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "10886:16:0",
                      "memberName": "safeTransferFrom",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 45931,
                      "src": "10877:25:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$45849_$_t_address_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20_$45849_$",
                        "typeString": "function (contract IERC20,address,address,uint256)"
                      }
                    },
                    "id": 915,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10877:66:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 916,
                  "nodeType": "ExpressionStatement",
                  "src": "10877:66:0"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 918,
                        "name": "marketId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 842,
                        "src": "10988:8:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "expression": {
                          "id": 919,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "10998:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 920,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "11002:6:0",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "10998:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 917,
                      "name": "ValidatorRegistered",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 118,
                      "src": "10968:19:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_bytes32_$_t_address_$returns$__$",
                        "typeString": "function (bytes32,address)"
                      }
                    },
                    "id": 921,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10968:41:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 922,
                  "nodeType": "EmitStatement",
                  "src": "10963:46:0"
                }
              ]
            },
            "functionSelector": "607049d8",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "registerValidator",
            "nameLocation": "10359:17:0",
            "parameters": {
              "id": 843,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 842,
                  "mutability": "mutable",
                  "name": "marketId",
                  "nameLocation": "10385:8:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 924,
                  "src": "10377:16:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 841,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "10377:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "10376:18:0"
            },
            "returnParameters": {
              "id": 844,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "10402:0:0"
            },
            "scope": 1343,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 1004,
            "nodeType": "FunctionDefinition",
            "src": "11022:673:0",
            "nodes": [],
            "body": {
              "id": 1003,
              "nodeType": "Block",
              "src": "11126:569:0",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 945,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 941,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "11195:3:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 942,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "11199:6:0",
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "11195:10:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "expression": {
                              "arguments": [
                                {
                                  "expression": {
                                    "baseExpression": {
                                      "id": 935,
                                      "name": "markets",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 77,
                                      "src": "11151:7:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_Market_$67_storage_$",
                                        "typeString": "mapping(bytes32 => struct CarbonUMArket.Market storage ref)"
                                      }
                                    },
                                    "id": 937,
                                    "indexExpression": {
                                      "id": 936,
                                      "name": "marketId",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 926,
                                      "src": "11159:8:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_bytes32",
                                        "typeString": "bytes32"
                                      }
                                    },
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "IndexAccess",
                                    "src": "11151:17:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_Market_$67_storage",
                                      "typeString": "struct CarbonUMArket.Market storage ref"
                                    }
                                  },
                                  "id": 938,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberLocation": "11169:14:0",
                                  "memberName": "validatorToken",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 54,
                                  "src": "11151:32:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_ExpandedIERC20_$50590",
                                    "typeString": "contract ExpandedIERC20"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_ExpandedIERC20_$50590",
                                    "typeString": "contract ExpandedIERC20"
                                  }
                                ],
                                "id": 934,
                                "name": "IERC20",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 45849,
                                "src": "11144:6:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_IERC20_$45849_$",
                                  "typeString": "type(contract IERC20)"
                                }
                              },
                              "id": 939,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "11144:40:0",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC20_$45849",
                                "typeString": "contract IERC20"
                              }
                            },
                            "id": 940,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "11185:9:0",
                            "memberName": "balanceOf",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 45788,
                            "src": "11144:50:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                              "typeString": "function (address) view external returns (uint256)"
                            }
                          },
                          "id": 943,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "11144:62:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "hexValue": "31",
                          "id": 944,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "11210:1:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          },
                          "value": "1"
                        },
                        "src": "11144:67:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4f6e6c792076616c696461746f722063616e20696e697469616c697a65206461746120706f6f6c",
                        "id": 946,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "11213:41:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_a10e111b719232a50efca05d082e731a77ed338a0133ee58bfff44232d25d59c",
                          "typeString": "literal_string \"Only validator can initialize data pool\""
                        },
                        "value": "Only validator can initialize data pool"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_a10e111b719232a50efca05d082e731a77ed338a0133ee58bfff44232d25d59c",
                          "typeString": "literal_string \"Only validator can initialize data pool\""
                        }
                      ],
                      "id": 933,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "11136:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 947,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11136:119:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 948,
                  "nodeType": "ExpressionStatement",
                  "src": "11136:119:0"
                },
                {
                  "assignments": [
                    951
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 951,
                      "mutability": "mutable",
                      "name": "market",
                      "nameLocation": "11280:6:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 1003,
                      "src": "11265:21:0",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Market_$67_storage_ptr",
                        "typeString": "struct CarbonUMArket.Market"
                      },
                      "typeName": {
                        "id": 950,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 949,
                          "name": "Market",
                          "nameLocations": [
                            "11265:6:0"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 67,
                          "src": "11265:6:0"
                        },
                        "referencedDeclaration": 67,
                        "src": "11265:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Market_$67_storage_ptr",
                          "typeString": "struct CarbonUMArket.Market"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 955,
                  "initialValue": {
                    "baseExpression": {
                      "id": 952,
                      "name": "markets",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 77,
                      "src": "11289:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_Market_$67_storage_$",
                        "typeString": "mapping(bytes32 => struct CarbonUMArket.Market storage ref)"
                      }
                    },
                    "id": 954,
                    "indexExpression": {
                      "id": 953,
                      "name": "marketId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 926,
                      "src": "11297:8:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "11289:17:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Market_$67_storage",
                      "typeString": "struct CarbonUMArket.Market storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "11265:41:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 972,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 967,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "expression": {
                              "id": 957,
                              "name": "block",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -4,
                              "src": "11324:5:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_block",
                                "typeString": "block"
                              }
                            },
                            "id": 958,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "11330:9:0",
                            "memberName": "timestamp",
                            "nodeType": "MemberAccess",
                            "src": "11324:15:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "<",
                          "rightExpression": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 966,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 963,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "expression": {
                                  "id": 959,
                                  "name": "market",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 951,
                                  "src": "11342:6:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_Market_$67_storage_ptr",
                                    "typeString": "struct CarbonUMArket.Market storage pointer"
                                  }
                                },
                                "id": 960,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "11349:12:0",
                                "memberName": "startingTime",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 56,
                                "src": "11342:19:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "+",
                              "rightExpression": {
                                "expression": {
                                  "id": 961,
                                  "name": "market",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 951,
                                  "src": "11364:6:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_Market_$67_storage_ptr",
                                    "typeString": "struct CarbonUMArket.Market storage pointer"
                                  }
                                },
                                "id": 962,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "11371:13:0",
                                "memberName": "openingPeriod",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 58,
                                "src": "11364:20:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "11342:42:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "+",
                            "rightExpression": {
                              "expression": {
                                "id": 964,
                                "name": "market",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 951,
                                "src": "11387:6:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Market_$67_storage_ptr",
                                  "typeString": "struct CarbonUMArket.Market storage pointer"
                                }
                              },
                              "id": 965,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "11394:11:0",
                              "memberName": "auditPeriod",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 60,
                              "src": "11387:18:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "11342:63:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "11324:81:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "||",
                        "rightExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint64",
                            "typeString": "uint64"
                          },
                          "id": 971,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "expression": {
                              "id": 968,
                              "name": "market",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 951,
                              "src": "11425:6:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Market_$67_storage_ptr",
                                "typeString": "struct CarbonUMArket.Market storage pointer"
                              }
                            },
                            "id": 969,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "11432:11:0",
                            "memberName": "marketState",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 66,
                            "src": "11425:18:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint64",
                              "typeString": "uint64"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "<",
                          "rightExpression": {
                            "hexValue": "32",
                            "id": 970,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "11446:1:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_2_by_1",
                              "typeString": "int_const 2"
                            },
                            "value": "2"
                          },
                          "src": "11425:22:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "11324:123:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4d61726b6574206973206175646974656421",
                        "id": 973,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "11466:20:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_aec570d71594aed0773dd9b60b98f40511a3c404149d1dcf6759d097b8f2a069",
                          "typeString": "literal_string \"Market is audited!\""
                        },
                        "value": "Market is audited!"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_aec570d71594aed0773dd9b60b98f40511a3c404149d1dcf6759d097b8f2a069",
                          "typeString": "literal_string \"Market is audited!\""
                        }
                      ],
                      "id": 956,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "11316:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 974,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11316:171:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 975,
                  "nodeType": "ExpressionStatement",
                  "src": "11316:171:0"
                },
                {
                  "expression": {
                    "id": 980,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 976,
                      "name": "data_oo",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 29,
                      "src": "11497:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_OptimisticOracleV3Interface_$53397",
                        "typeString": "contract OptimisticOracleV3Interface"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 978,
                          "name": "data_optimisticOracleV3",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 928,
                          "src": "11535:23:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 977,
                        "name": "OptimisticOracleV3Interface",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 53397,
                        "src": "11507:27:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_OptimisticOracleV3Interface_$53397_$",
                          "typeString": "type(contract OptimisticOracleV3Interface)"
                        }
                      },
                      "id": 979,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "11507:52:0",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_OptimisticOracleV3Interface_$53397",
                        "typeString": "contract OptimisticOracleV3Interface"
                      }
                    },
                    "src": "11497:62:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_OptimisticOracleV3Interface_$53397",
                      "typeString": "contract OptimisticOracleV3Interface"
                    }
                  },
                  "id": 981,
                  "nodeType": "ExpressionStatement",
                  "src": "11497:62:0"
                },
                {
                  "assignments": [
                    984
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 984,
                      "mutability": "mutable",
                      "name": "dataAsserter",
                      "nameLocation": "11582:12:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 1003,
                      "src": "11569:25:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_DataAsserter_$1729",
                        "typeString": "contract DataAsserter"
                      },
                      "typeName": {
                        "id": 983,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 982,
                          "name": "DataAsserter",
                          "nameLocations": [
                            "11569:12:0"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 1729,
                          "src": "11569:12:0"
                        },
                        "referencedDeclaration": 1729,
                        "src": "11569:12:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_DataAsserter_$1729",
                          "typeString": "contract DataAsserter"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 997,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 990,
                            "name": "currency",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 23,
                            "src": "11622:8:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IERC20_$45849",
                              "typeString": "contract IERC20"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_IERC20_$45849",
                              "typeString": "contract IERC20"
                            }
                          ],
                          "id": 989,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "11614:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 988,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "11614:7:0",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 991,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "11614:17:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 994,
                            "name": "data_oo",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 29,
                            "src": "11641:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_OptimisticOracleV3Interface_$53397",
                              "typeString": "contract OptimisticOracleV3Interface"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_OptimisticOracleV3Interface_$53397",
                              "typeString": "contract OptimisticOracleV3Interface"
                            }
                          ],
                          "id": 993,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "11633:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 992,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "11633:7:0",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 995,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "11633:16:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 987,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "NewExpression",
                      "src": "11597:16:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_creation_nonpayable$_t_address_$_t_address_$returns$_t_contract$_DataAsserter_$1729_$",
                        "typeString": "function (address,address) returns (contract DataAsserter)"
                      },
                      "typeName": {
                        "id": 986,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 985,
                          "name": "DataAsserter",
                          "nameLocations": [
                            "11601:12:0"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 1729,
                          "src": "11601:12:0"
                        },
                        "referencedDeclaration": 1729,
                        "src": "11601:12:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_DataAsserter_$1729",
                          "typeString": "contract DataAsserter"
                        }
                      }
                    },
                    "id": 996,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11597:53:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_DataAsserter_$1729",
                      "typeString": "contract DataAsserter"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "11569:81:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 1000,
                        "name": "dataAsserter",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 984,
                        "src": "11675:12:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_DataAsserter_$1729",
                          "typeString": "contract DataAsserter"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_DataAsserter_$1729",
                          "typeString": "contract DataAsserter"
                        }
                      ],
                      "id": 999,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "ElementaryTypeNameExpression",
                      "src": "11667:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_address_$",
                        "typeString": "type(address)"
                      },
                      "typeName": {
                        "id": 998,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "11667:7:0",
                        "typeDescriptions": {}
                      }
                    },
                    "id": 1001,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11667:21:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "functionReturnParameters": 932,
                  "id": 1002,
                  "nodeType": "Return",
                  "src": "11660:28:0"
                }
              ]
            },
            "functionSelector": "d79318d4",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "initializeDataPool",
            "nameLocation": "11031:18:0",
            "parameters": {
              "id": 929,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 926,
                  "mutability": "mutable",
                  "name": "marketId",
                  "nameLocation": "11058:8:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 1004,
                  "src": "11050:16:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 925,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "11050:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 928,
                  "mutability": "mutable",
                  "name": "data_optimisticOracleV3",
                  "nameLocation": "11076:23:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 1004,
                  "src": "11068:31:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 927,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "11068:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "11049:51:0"
            },
            "returnParameters": {
              "id": 932,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 931,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1004,
                  "src": "11117:7:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 930,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "11117:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "11116:9:0"
            },
            "scope": 1343,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 1124,
            "nodeType": "FunctionDefinition",
            "src": "11701:994:0",
            "nodes": [],
            "body": {
              "id": 1123,
              "nodeType": "Block",
              "src": "11885:810:0",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 1025,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 1020,
                          "name": "dataAsserterAddress",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1014,
                          "src": "11903:19:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 1023,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "11934:1:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 1022,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "11926:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 1021,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "11926:7:0",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 1024,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "11926:10:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "11903:33:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "44617461706f6f6c206e6f7420696e697469616c697a6564",
                        "id": 1026,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "11938:26:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_2f01f2900b6e16ab765a09f7992e3cba38758aa8ee907ed7fc4d6fcdff6c6733",
                          "typeString": "literal_string \"Datapool not initialized\""
                        },
                        "value": "Datapool not initialized"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_2f01f2900b6e16ab765a09f7992e3cba38758aa8ee907ed7fc4d6fcdff6c6733",
                          "typeString": "literal_string \"Datapool not initialized\""
                        }
                      ],
                      "id": 1019,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "11895:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1027,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11895:70:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1028,
                  "nodeType": "ExpressionStatement",
                  "src": "11895:70:0"
                },
                {
                  "assignments": [
                    1031
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1031,
                      "mutability": "mutable",
                      "name": "market",
                      "nameLocation": "11990:6:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 1123,
                      "src": "11975:21:0",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Market_$67_storage_ptr",
                        "typeString": "struct CarbonUMArket.Market"
                      },
                      "typeName": {
                        "id": 1030,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 1029,
                          "name": "Market",
                          "nameLocations": [
                            "11975:6:0"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 67,
                          "src": "11975:6:0"
                        },
                        "referencedDeclaration": 67,
                        "src": "11975:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Market_$67_storage_ptr",
                          "typeString": "struct CarbonUMArket.Market"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1035,
                  "initialValue": {
                    "baseExpression": {
                      "id": 1032,
                      "name": "markets",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 77,
                      "src": "11999:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_Market_$67_storage_$",
                        "typeString": "mapping(bytes32 => struct CarbonUMArket.Market storage ref)"
                      }
                    },
                    "id": 1034,
                    "indexExpression": {
                      "id": 1033,
                      "name": "marketId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1006,
                      "src": "12007:8:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "11999:17:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Market_$67_storage",
                      "typeString": "struct CarbonUMArket.Market storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "11975:41:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 1052,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 1047,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "expression": {
                              "id": 1037,
                              "name": "block",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -4,
                              "src": "12034:5:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_block",
                                "typeString": "block"
                              }
                            },
                            "id": 1038,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "12040:9:0",
                            "memberName": "timestamp",
                            "nodeType": "MemberAccess",
                            "src": "12034:15:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "<",
                          "rightExpression": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 1046,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 1043,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "expression": {
                                  "id": 1039,
                                  "name": "market",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1031,
                                  "src": "12052:6:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_Market_$67_storage_ptr",
                                    "typeString": "struct CarbonUMArket.Market storage pointer"
                                  }
                                },
                                "id": 1040,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "12059:12:0",
                                "memberName": "startingTime",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 56,
                                "src": "12052:19:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "+",
                              "rightExpression": {
                                "expression": {
                                  "id": 1041,
                                  "name": "market",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1031,
                                  "src": "12074:6:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_Market_$67_storage_ptr",
                                    "typeString": "struct CarbonUMArket.Market storage pointer"
                                  }
                                },
                                "id": 1042,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "12081:13:0",
                                "memberName": "openingPeriod",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 58,
                                "src": "12074:20:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "12052:42:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "+",
                            "rightExpression": {
                              "expression": {
                                "id": 1044,
                                "name": "market",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1031,
                                "src": "12097:6:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Market_$67_storage_ptr",
                                  "typeString": "struct CarbonUMArket.Market storage pointer"
                                }
                              },
                              "id": 1045,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "12104:11:0",
                              "memberName": "auditPeriod",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 60,
                              "src": "12097:18:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "12052:63:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "12034:81:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "||",
                        "rightExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint64",
                            "typeString": "uint64"
                          },
                          "id": 1051,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "expression": {
                              "id": 1048,
                              "name": "market",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1031,
                              "src": "12135:6:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Market_$67_storage_ptr",
                                "typeString": "struct CarbonUMArket.Market storage pointer"
                              }
                            },
                            "id": 1049,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "12142:11:0",
                            "memberName": "marketState",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 66,
                            "src": "12135:18:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint64",
                              "typeString": "uint64"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "<",
                          "rightExpression": {
                            "hexValue": "32",
                            "id": 1050,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "12156:1:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_2_by_1",
                              "typeString": "int_const 2"
                            },
                            "value": "2"
                          },
                          "src": "12135:22:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "12034:123:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4d61726b6574206973206175646974656421",
                        "id": 1053,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "12176:20:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_aec570d71594aed0773dd9b60b98f40511a3c404149d1dcf6759d097b8f2a069",
                          "typeString": "literal_string \"Market is audited!\""
                        },
                        "value": "Market is audited!"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_aec570d71594aed0773dd9b60b98f40511a3c404149d1dcf6759d097b8f2a069",
                          "typeString": "literal_string \"Market is audited!\""
                        }
                      ],
                      "id": 1036,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "12026:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1054,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12026:171:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1055,
                  "nodeType": "ExpressionStatement",
                  "src": "12026:171:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 1068,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 1064,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "12266:3:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 1065,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "12270:6:0",
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "12266:10:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "expression": {
                              "arguments": [
                                {
                                  "expression": {
                                    "baseExpression": {
                                      "id": 1058,
                                      "name": "markets",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 77,
                                      "src": "12222:7:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_Market_$67_storage_$",
                                        "typeString": "mapping(bytes32 => struct CarbonUMArket.Market storage ref)"
                                      }
                                    },
                                    "id": 1060,
                                    "indexExpression": {
                                      "id": 1059,
                                      "name": "marketId",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1006,
                                      "src": "12230:8:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_bytes32",
                                        "typeString": "bytes32"
                                      }
                                    },
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "IndexAccess",
                                    "src": "12222:17:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_Market_$67_storage",
                                      "typeString": "struct CarbonUMArket.Market storage ref"
                                    }
                                  },
                                  "id": 1061,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberLocation": "12240:14:0",
                                  "memberName": "validatorToken",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 54,
                                  "src": "12222:32:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_ExpandedIERC20_$50590",
                                    "typeString": "contract ExpandedIERC20"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_ExpandedIERC20_$50590",
                                    "typeString": "contract ExpandedIERC20"
                                  }
                                ],
                                "id": 1057,
                                "name": "IERC20",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 45849,
                                "src": "12215:6:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_IERC20_$45849_$",
                                  "typeString": "type(contract IERC20)"
                                }
                              },
                              "id": 1062,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "12215:40:0",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC20_$45849",
                                "typeString": "contract IERC20"
                              }
                            },
                            "id": 1063,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "12256:9:0",
                            "memberName": "balanceOf",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 45788,
                            "src": "12215:50:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                              "typeString": "function (address) view external returns (uint256)"
                            }
                          },
                          "id": 1066,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "12215:62:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "hexValue": "31",
                          "id": 1067,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "12281:1:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          },
                          "value": "1"
                        },
                        "src": "12215:67:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4f6e6c792076616c696461746f722063616e207375626d69742064617461",
                        "id": 1069,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "12284:32:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_e9c72e1207e4adc15406e04b6bc8ca431f046580e1e8318bb42eaabceb077655",
                          "typeString": "literal_string \"Only validator can submit data\""
                        },
                        "value": "Only validator can submit data"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_e9c72e1207e4adc15406e04b6bc8ca431f046580e1e8318bb42eaabceb077655",
                          "typeString": "literal_string \"Only validator can submit data\""
                        }
                      ],
                      "id": 1056,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "12207:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1070,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12207:110:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1071,
                  "nodeType": "ExpressionStatement",
                  "src": "12207:110:0"
                },
                {
                  "assignments": [
                    1074
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1074,
                      "mutability": "mutable",
                      "name": "dataAsserter",
                      "nameLocation": "12340:12:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 1123,
                      "src": "12327:25:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_DataAsserter_$1729",
                        "typeString": "contract DataAsserter"
                      },
                      "typeName": {
                        "id": 1073,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 1072,
                          "name": "DataAsserter",
                          "nameLocations": [
                            "12327:12:0"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 1729,
                          "src": "12327:12:0"
                        },
                        "referencedDeclaration": 1729,
                        "src": "12327:12:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_DataAsserter_$1729",
                          "typeString": "contract DataAsserter"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1078,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 1076,
                        "name": "dataAsserterAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1014,
                        "src": "12368:19:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 1075,
                      "name": "DataAsserter",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1729,
                      "src": "12355:12:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_contract$_DataAsserter_$1729_$",
                        "typeString": "type(contract DataAsserter)"
                      }
                    },
                    "id": 1077,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12355:33:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_DataAsserter_$1729",
                      "typeString": "contract DataAsserter"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "12327:61:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 1082,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "12424:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 1083,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "12428:6:0",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "12424:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 1086,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "12444:4:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_CarbonUMArket_$1343",
                              "typeString": "contract CarbonUMArket"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_CarbonUMArket_$1343",
                              "typeString": "contract CarbonUMArket"
                            }
                          ],
                          "id": 1085,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "12436:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 1084,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "12436:7:0",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 1087,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "12436:13:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "id": 1094,
                                "name": "currency",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 23,
                                "src": "12492:8:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_IERC20_$45849",
                                  "typeString": "contract IERC20"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_IERC20_$45849",
                                  "typeString": "contract IERC20"
                                }
                              ],
                              "id": 1093,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "12484:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 1092,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "12484:7:0",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 1095,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "12484:17:0",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "expression": {
                                "id": 1088,
                                "name": "dataAsserter",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1074,
                                "src": "12451:12:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_DataAsserter_$1729",
                                  "typeString": "contract DataAsserter"
                                }
                              },
                              "id": 1089,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "12464:2:0",
                              "memberName": "oo",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 1367,
                              "src": "12451:15:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_view$__$returns$_t_contract$_OptimisticOracleV3Interface_$53397_$",
                                "typeString": "function () view external returns (contract OptimisticOracleV3Interface)"
                              }
                            },
                            "id": 1090,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "12451:17:0",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_OptimisticOracleV3Interface_$53397",
                              "typeString": "contract OptimisticOracleV3Interface"
                            }
                          },
                          "id": 1091,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "12469:14:0",
                          "memberName": "getMinimumBond",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 53342,
                          "src": "12451:32:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (address) view external returns (uint256)"
                          }
                        },
                        "id": 1096,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "12451:51:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 1079,
                        "name": "currency",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 23,
                        "src": "12398:8:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$45849",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 1081,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "12407:16:0",
                      "memberName": "safeTransferFrom",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 45931,
                      "src": "12398:25:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$45849_$_t_address_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20_$45849_$",
                        "typeString": "function (contract IERC20,address,address,uint256)"
                      }
                    },
                    "id": 1097,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12398:105:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1098,
                  "nodeType": "ExpressionStatement",
                  "src": "12398:105:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 1102,
                        "name": "dataAsserterAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1014,
                        "src": "12534:19:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "id": 1109,
                                "name": "currency",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 23,
                                "src": "12596:8:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_IERC20_$45849",
                                  "typeString": "contract IERC20"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_IERC20_$45849",
                                  "typeString": "contract IERC20"
                                }
                              ],
                              "id": 1108,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "12588:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 1107,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "12588:7:0",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 1110,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "12588:17:0",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "expression": {
                                "id": 1103,
                                "name": "dataAsserter",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1074,
                                "src": "12555:12:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_DataAsserter_$1729",
                                  "typeString": "contract DataAsserter"
                                }
                              },
                              "id": 1104,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "12568:2:0",
                              "memberName": "oo",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 1367,
                              "src": "12555:15:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_view$__$returns$_t_contract$_OptimisticOracleV3Interface_$53397_$",
                                "typeString": "function () view external returns (contract OptimisticOracleV3Interface)"
                              }
                            },
                            "id": 1105,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "12555:17:0",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_OptimisticOracleV3Interface_$53397",
                              "typeString": "contract OptimisticOracleV3Interface"
                            }
                          },
                          "id": 1106,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "12573:14:0",
                          "memberName": "getMinimumBond",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 53342,
                          "src": "12555:32:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (address) view external returns (uint256)"
                          }
                        },
                        "id": 1111,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "12555:51:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 1099,
                        "name": "currency",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 23,
                        "src": "12513:8:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$45849",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 1101,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "12522:11:0",
                      "memberName": "safeApprove",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 45975,
                      "src": "12513:20:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$45849_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20_$45849_$",
                        "typeString": "function (contract IERC20,address,uint256)"
                      }
                    },
                    "id": 1112,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12513:94:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1113,
                  "nodeType": "ExpressionStatement",
                  "src": "12513:94:0"
                },
                {
                  "expression": {
                    "id": 1121,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 1114,
                      "name": "assertionId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1017,
                      "src": "12617:11:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 1117,
                          "name": "dataId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1008,
                          "src": "12658:6:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        {
                          "id": 1118,
                          "name": "dataPath",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1010,
                          "src": "12666:8:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_calldata_ptr",
                            "typeString": "string calldata"
                          }
                        },
                        {
                          "id": 1119,
                          "name": "description",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1012,
                          "src": "12676:11:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_calldata_ptr",
                            "typeString": "string calldata"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          },
                          {
                            "typeIdentifier": "t_string_calldata_ptr",
                            "typeString": "string calldata"
                          },
                          {
                            "typeIdentifier": "t_string_calldata_ptr",
                            "typeString": "string calldata"
                          }
                        ],
                        "expression": {
                          "id": 1115,
                          "name": "dataAsserter",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1074,
                          "src": "12631:12:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_DataAsserter_$1729",
                            "typeString": "contract DataAsserter"
                          }
                        },
                        "id": 1116,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "12644:13:0",
                        "memberName": "assertDataFor",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 1632,
                        "src": "12631:26:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_nonpayable$_t_bytes32_$_t_string_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes32_$",
                          "typeString": "function (bytes32,string memory,string memory) external returns (bytes32)"
                        }
                      },
                      "id": 1120,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "12631:57:0",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "src": "12617:71:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "id": 1122,
                  "nodeType": "ExpressionStatement",
                  "src": "12617:71:0"
                }
              ]
            },
            "functionSelector": "aea59c74",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "submitAndAssertData",
            "nameLocation": "11710:19:0",
            "parameters": {
              "id": 1015,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1006,
                  "mutability": "mutable",
                  "name": "marketId",
                  "nameLocation": "11738:8:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 1124,
                  "src": "11730:16:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 1005,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "11730:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1008,
                  "mutability": "mutable",
                  "name": "dataId",
                  "nameLocation": "11756:6:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 1124,
                  "src": "11748:14:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 1007,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "11748:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1010,
                  "mutability": "mutable",
                  "name": "dataPath",
                  "nameLocation": "11780:8:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 1124,
                  "src": "11764:24:0",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_calldata_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 1009,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "11764:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1012,
                  "mutability": "mutable",
                  "name": "description",
                  "nameLocation": "11806:11:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 1124,
                  "src": "11790:27:0",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_calldata_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 1011,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "11790:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1014,
                  "mutability": "mutable",
                  "name": "dataAsserterAddress",
                  "nameLocation": "11827:19:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 1124,
                  "src": "11819:27:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1013,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "11819:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "11729:118:0"
            },
            "returnParameters": {
              "id": 1018,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1017,
                  "mutability": "mutable",
                  "name": "assertionId",
                  "nameLocation": "11872:11:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 1124,
                  "src": "11864:19:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 1016,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "11864:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "11863:21:0"
            },
            "scope": 1343,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 1193,
            "nodeType": "FunctionDefinition",
            "src": "12701:647:0",
            "nodes": [],
            "body": {
              "id": 1192,
              "nodeType": "Block",
              "src": "12785:563:0",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 1137,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 1132,
                          "name": "dataAsserterAddress",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1128,
                          "src": "12812:19:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 1135,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "12843:1:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 1134,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "12835:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 1133,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "12835:7:0",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 1136,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "12835:10:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "12812:33:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4461746120706f6f6c206e6f7420696e697469616c697a6564",
                        "id": 1138,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "12847:27:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c507a8a22070a9870560d2f761cb840143b859f31393bc8fd5edba8926d8ee58",
                          "typeString": "literal_string \"Data pool not initialized\""
                        },
                        "value": "Data pool not initialized"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_c507a8a22070a9870560d2f761cb840143b859f31393bc8fd5edba8926d8ee58",
                          "typeString": "literal_string \"Data pool not initialized\""
                        }
                      ],
                      "id": 1131,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "12804:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1139,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12804:71:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1140,
                  "nodeType": "ExpressionStatement",
                  "src": "12804:71:0"
                },
                {
                  "assignments": [
                    1143
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1143,
                      "mutability": "mutable",
                      "name": "market",
                      "nameLocation": "12900:6:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 1192,
                      "src": "12885:21:0",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Market_$67_storage_ptr",
                        "typeString": "struct CarbonUMArket.Market"
                      },
                      "typeName": {
                        "id": 1142,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 1141,
                          "name": "Market",
                          "nameLocations": [
                            "12885:6:0"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 67,
                          "src": "12885:6:0"
                        },
                        "referencedDeclaration": 67,
                        "src": "12885:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Market_$67_storage_ptr",
                          "typeString": "struct CarbonUMArket.Market"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1147,
                  "initialValue": {
                    "baseExpression": {
                      "id": 1144,
                      "name": "markets",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 77,
                      "src": "12909:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_Market_$67_storage_$",
                        "typeString": "mapping(bytes32 => struct CarbonUMArket.Market storage ref)"
                      }
                    },
                    "id": 1146,
                    "indexExpression": {
                      "id": 1145,
                      "name": "marketId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1126,
                      "src": "12917:8:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "12909:17:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Market_$67_storage",
                      "typeString": "struct CarbonUMArket.Market storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "12885:41:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 1164,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 1159,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "expression": {
                              "id": 1149,
                              "name": "block",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -4,
                              "src": "12944:5:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_block",
                                "typeString": "block"
                              }
                            },
                            "id": 1150,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "12950:9:0",
                            "memberName": "timestamp",
                            "nodeType": "MemberAccess",
                            "src": "12944:15:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": ">=",
                          "rightExpression": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 1158,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 1155,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "expression": {
                                  "id": 1151,
                                  "name": "market",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1143,
                                  "src": "12963:6:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_Market_$67_storage_ptr",
                                    "typeString": "struct CarbonUMArket.Market storage pointer"
                                  }
                                },
                                "id": 1152,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "12970:12:0",
                                "memberName": "startingTime",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 56,
                                "src": "12963:19:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "+",
                              "rightExpression": {
                                "expression": {
                                  "id": 1153,
                                  "name": "market",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1143,
                                  "src": "12985:6:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_Market_$67_storage_ptr",
                                    "typeString": "struct CarbonUMArket.Market storage pointer"
                                  }
                                },
                                "id": 1154,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "12992:13:0",
                                "memberName": "openingPeriod",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 58,
                                "src": "12985:20:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "12963:42:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "+",
                            "rightExpression": {
                              "expression": {
                                "id": 1156,
                                "name": "market",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1143,
                                "src": "13008:6:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Market_$67_storage_ptr",
                                  "typeString": "struct CarbonUMArket.Market storage pointer"
                                }
                              },
                              "id": 1157,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "13015:11:0",
                              "memberName": "auditPeriod",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 60,
                              "src": "13008:18:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "12963:63:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "12944:82:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "||",
                        "rightExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint64",
                            "typeString": "uint64"
                          },
                          "id": 1163,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "expression": {
                              "id": 1160,
                              "name": "market",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1143,
                              "src": "13047:6:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Market_$67_storage_ptr",
                                "typeString": "struct CarbonUMArket.Market storage pointer"
                              }
                            },
                            "id": 1161,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "13054:11:0",
                            "memberName": "marketState",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 66,
                            "src": "13047:18:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint64",
                              "typeString": "uint64"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "hexValue": "32",
                            "id": 1162,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "13069:1:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_2_by_1",
                              "typeString": "int_const 2"
                            },
                            "value": "2"
                          },
                          "src": "13047:23:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "12944:126:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4d61726b6574206e6f7420726561647920666f7220736574746c6521",
                        "id": 1165,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "13089:30:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_7420b72c2fec7566e66e88ba06dcf0187bbe1cc20b84203a2670fc029d5d6170",
                          "typeString": "literal_string \"Market not ready for settle!\""
                        },
                        "value": "Market not ready for settle!"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_7420b72c2fec7566e66e88ba06dcf0187bbe1cc20b84203a2670fc029d5d6170",
                          "typeString": "literal_string \"Market not ready for settle!\""
                        }
                      ],
                      "id": 1148,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "12936:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1166,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12936:184:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1167,
                  "nodeType": "ExpressionStatement",
                  "src": "12936:184:0"
                },
                {
                  "assignments": [
                    1169
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1169,
                      "mutability": "mutable",
                      "name": "validatorTokenBalance",
                      "nameLocation": "13138:21:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 1192,
                      "src": "13130:29:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1168,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "13130:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1175,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "arguments": [
                          {
                            "id": 1171,
                            "name": "dataAsserterAddress",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1128,
                            "src": "13175:19:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 1170,
                          "name": "DataAsserter",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1729,
                          "src": "13162:12:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_DataAsserter_$1729_$",
                            "typeString": "type(contract DataAsserter)"
                          }
                        },
                        "id": 1172,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "13162:33:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_DataAsserter_$1729",
                          "typeString": "contract DataAsserter"
                        }
                      },
                      "id": 1173,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "13196:17:0",
                      "memberName": "checkTokenBalance",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1644,
                      "src": "13162:51:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$",
                        "typeString": "function () view external returns (uint256)"
                      }
                    },
                    "id": 1174,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "13162:53:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "13130:85:0"
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "arguments": [
                          {
                            "id": 1177,
                            "name": "dataAsserterAddress",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1128,
                            "src": "13238:19:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 1176,
                          "name": "DataAsserter",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1729,
                          "src": "13225:12:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_DataAsserter_$1729_$",
                            "typeString": "type(contract DataAsserter)"
                          }
                        },
                        "id": 1178,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "13225:33:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_DataAsserter_$1729",
                          "typeString": "contract DataAsserter"
                        }
                      },
                      "id": 1179,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "13259:9:0",
                      "memberName": "burnToken",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1660,
                      "src": "13225:43:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$__$returns$__$",
                        "typeString": "function () external"
                      }
                    },
                    "id": 1180,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "13225:45:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1181,
                  "nodeType": "ExpressionStatement",
                  "src": "13225:45:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 1187,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "13307:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 1188,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "13311:6:0",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "13307:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 1189,
                        "name": "validatorTokenBalance",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1169,
                        "src": "13319:21:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "expression": {
                          "id": 1182,
                          "name": "market",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1143,
                          "src": "13280:6:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Market_$67_storage_ptr",
                            "typeString": "struct CarbonUMArket.Market storage pointer"
                          }
                        },
                        "id": 1185,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "13287:14:0",
                        "memberName": "validatorToken",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 54,
                        "src": "13280:21:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ExpandedIERC20_$50590",
                          "typeString": "contract ExpandedIERC20"
                        }
                      },
                      "id": 1186,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "13302:4:0",
                      "memberName": "mint",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 50574,
                      "src": "13280:26:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,uint256) external returns (bool)"
                      }
                    },
                    "id": 1190,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "13280:61:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1191,
                  "nodeType": "ExpressionStatement",
                  "src": "13280:61:0"
                }
              ]
            },
            "functionSelector": "8b573524",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "settleValidatorToken",
            "nameLocation": "12710:20:0",
            "parameters": {
              "id": 1129,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1126,
                  "mutability": "mutable",
                  "name": "marketId",
                  "nameLocation": "12739:8:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 1193,
                  "src": "12731:16:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 1125,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "12731:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1128,
                  "mutability": "mutable",
                  "name": "dataAsserterAddress",
                  "nameLocation": "12757:19:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 1193,
                  "src": "12749:27:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1127,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "12749:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "12730:47:0"
            },
            "returnParameters": {
              "id": 1130,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "12785:0:0"
            },
            "scope": 1343,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 1342,
            "nodeType": "FunctionDefinition",
            "src": "13354:1361:0",
            "nodes": [],
            "body": {
              "id": 1341,
              "nodeType": "Block",
              "src": "13401:1314:0",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    1200
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1200,
                      "mutability": "mutable",
                      "name": "market",
                      "nameLocation": "13426:6:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 1341,
                      "src": "13411:21:0",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Market_$67_storage_ptr",
                        "typeString": "struct CarbonUMArket.Market"
                      },
                      "typeName": {
                        "id": 1199,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 1198,
                          "name": "Market",
                          "nameLocations": [
                            "13411:6:0"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 67,
                          "src": "13411:6:0"
                        },
                        "referencedDeclaration": 67,
                        "src": "13411:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Market_$67_storage_ptr",
                          "typeString": "struct CarbonUMArket.Market"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1204,
                  "initialValue": {
                    "baseExpression": {
                      "id": 1201,
                      "name": "markets",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 77,
                      "src": "13435:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_Market_$67_storage_$",
                        "typeString": "mapping(bytes32 => struct CarbonUMArket.Market storage ref)"
                      }
                    },
                    "id": 1203,
                    "indexExpression": {
                      "id": 1202,
                      "name": "marketId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1195,
                      "src": "13443:8:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "13435:17:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Market_$67_storage",
                      "typeString": "struct CarbonUMArket.Market storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "13411:41:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 1221,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 1216,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "expression": {
                              "id": 1206,
                              "name": "block",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -4,
                              "src": "13470:5:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_block",
                                "typeString": "block"
                              }
                            },
                            "id": 1207,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "13476:9:0",
                            "memberName": "timestamp",
                            "nodeType": "MemberAccess",
                            "src": "13470:15:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": ">=",
                          "rightExpression": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 1215,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 1212,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "expression": {
                                  "id": 1208,
                                  "name": "market",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1200,
                                  "src": "13489:6:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_Market_$67_storage_ptr",
                                    "typeString": "struct CarbonUMArket.Market storage pointer"
                                  }
                                },
                                "id": 1209,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "13496:12:0",
                                "memberName": "startingTime",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 56,
                                "src": "13489:19:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "+",
                              "rightExpression": {
                                "expression": {
                                  "id": 1210,
                                  "name": "market",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1200,
                                  "src": "13511:6:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_Market_$67_storage_ptr",
                                    "typeString": "struct CarbonUMArket.Market storage pointer"
                                  }
                                },
                                "id": 1211,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "13518:13:0",
                                "memberName": "openingPeriod",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 58,
                                "src": "13511:20:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "13489:42:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "+",
                            "rightExpression": {
                              "expression": {
                                "id": 1213,
                                "name": "market",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1200,
                                "src": "13534:6:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Market_$67_storage_ptr",
                                  "typeString": "struct CarbonUMArket.Market storage pointer"
                                }
                              },
                              "id": 1214,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "13541:11:0",
                              "memberName": "auditPeriod",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 60,
                              "src": "13534:18:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "13489:63:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "13470:82:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "||",
                        "rightExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint64",
                            "typeString": "uint64"
                          },
                          "id": 1220,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "expression": {
                              "id": 1217,
                              "name": "market",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1200,
                              "src": "13573:6:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Market_$67_storage_ptr",
                                "typeString": "struct CarbonUMArket.Market storage pointer"
                              }
                            },
                            "id": 1218,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "13580:11:0",
                            "memberName": "marketState",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 66,
                            "src": "13573:18:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint64",
                              "typeString": "uint64"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "hexValue": "32",
                            "id": 1219,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "13595:1:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_2_by_1",
                              "typeString": "int_const 2"
                            },
                            "value": "2"
                          },
                          "src": "13573:23:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "13470:126:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4d61726b6574206e6f7420726561647920666f7220736574746c6521",
                        "id": 1222,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "13615:30:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_7420b72c2fec7566e66e88ba06dcf0187bbe1cc20b84203a2670fc029d5d6170",
                          "typeString": "literal_string \"Market not ready for settle!\""
                        },
                        "value": "Market not ready for settle!"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_7420b72c2fec7566e66e88ba06dcf0187bbe1cc20b84203a2670fc029d5d6170",
                          "typeString": "literal_string \"Market not ready for settle!\""
                        }
                      ],
                      "id": 1205,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "13462:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1223,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "13462:184:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1224,
                  "nodeType": "ExpressionStatement",
                  "src": "13462:184:0"
                },
                {
                  "assignments": [
                    1226
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1226,
                      "mutability": "mutable",
                      "name": "creditBalance",
                      "nameLocation": "13665:13:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 1341,
                      "src": "13657:21:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1225,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "13657:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1235,
                  "initialValue": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 1232,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "13730:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 1233,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "13734:6:0",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "13730:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "expression": {
                              "id": 1228,
                              "name": "market",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1200,
                              "src": "13688:6:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Market_$67_storage_ptr",
                                "typeString": "struct CarbonUMArket.Market storage pointer"
                              }
                            },
                            "id": 1229,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "13695:23:0",
                            "memberName": "convertibleCarbonCredit",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 51,
                            "src": "13688:30:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ExpandedIERC20_$50590",
                              "typeString": "contract ExpandedIERC20"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_ExpandedIERC20_$50590",
                              "typeString": "contract ExpandedIERC20"
                            }
                          ],
                          "id": 1227,
                          "name": "IERC20",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 45849,
                          "src": "13681:6:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IERC20_$45849_$",
                            "typeString": "type(contract IERC20)"
                          }
                        },
                        "id": 1230,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "13681:38:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$45849",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 1231,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "13720:9:0",
                      "memberName": "balanceOf",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 45788,
                      "src": "13681:48:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) view external returns (uint256)"
                      }
                    },
                    "id": 1234,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "13681:60:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "13657:84:0"
                },
                {
                  "assignments": [
                    1237
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1237,
                      "mutability": "mutable",
                      "name": "creditDelivered",
                      "nameLocation": "13759:15:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 1341,
                      "src": "13751:23:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1236,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "13751:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1239,
                  "initialValue": {
                    "hexValue": "30",
                    "id": 1238,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "13777:1:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_0_by_1",
                      "typeString": "int_const 0"
                    },
                    "value": "0"
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "13751:27:0"
                },
                {
                  "assignments": [
                    1241
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1241,
                      "mutability": "mutable",
                      "name": "validatorTokenBalance",
                      "nameLocation": "13797:21:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 1341,
                      "src": "13789:29:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1240,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "13789:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1248,
                  "initialValue": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 1245,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "13853:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 1246,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "13857:6:0",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "13853:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "expression": {
                          "id": 1242,
                          "name": "market",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1200,
                          "src": "13821:6:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Market_$67_storage_ptr",
                            "typeString": "struct CarbonUMArket.Market storage pointer"
                          }
                        },
                        "id": 1243,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "13828:14:0",
                        "memberName": "validatorToken",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 54,
                        "src": "13821:21:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ExpandedIERC20_$50590",
                          "typeString": "contract ExpandedIERC20"
                        }
                      },
                      "id": 1244,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "13843:9:0",
                      "memberName": "balanceOf",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 45788,
                      "src": "13821:31:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) view external returns (uint256)"
                      }
                    },
                    "id": 1247,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "13821:43:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "13789:75:0"
                },
                {
                  "assignments": [
                    1250
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1250,
                      "mutability": "mutable",
                      "name": "individualReward",
                      "nameLocation": "13883:16:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 1341,
                      "src": "13875:24:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1249,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "13875:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1273,
                  "initialValue": {
                    "condition": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 1256,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "expression": {
                            "expression": {
                              "id": 1251,
                              "name": "market",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1200,
                              "src": "13902:6:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Market_$67_storage_ptr",
                                "typeString": "struct CarbonUMArket.Market storage pointer"
                              }
                            },
                            "id": 1252,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "13909:14:0",
                            "memberName": "validatorToken",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 54,
                            "src": "13902:21:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ExpandedIERC20_$50590",
                              "typeString": "contract ExpandedIERC20"
                            }
                          },
                          "id": 1253,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "13924:11:0",
                          "memberName": "totalSupply",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 45780,
                          "src": "13902:33:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$",
                            "typeString": "function () view external returns (uint256)"
                          }
                        },
                        "id": 1254,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "13902:35:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": ">",
                      "rightExpression": {
                        "hexValue": "30",
                        "id": 1255,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "13940:1:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      "src": "13902:39:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "falseExpression": {
                      "hexValue": "30",
                      "id": 1271,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "14044:1:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "id": 1272,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "Conditional",
                    "src": "13902:143:0",
                    "trueExpression": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 1270,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 1265,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 1257,
                            "name": "market",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1200,
                            "src": "13944:6:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Market_$67_storage_ptr",
                              "typeString": "struct CarbonUMArket.Market storage pointer"
                            }
                          },
                          "id": 1258,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "13951:6:0",
                          "memberName": "reward",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 43,
                          "src": "13944:13:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "*",
                        "rightExpression": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 1262,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "13992:3:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 1263,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "13996:6:0",
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "13992:10:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "expression": {
                              "expression": {
                                "id": 1259,
                                "name": "market",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1200,
                                "src": "13960:6:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Market_$67_storage_ptr",
                                  "typeString": "struct CarbonUMArket.Market storage pointer"
                                }
                              },
                              "id": 1260,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "13967:14:0",
                              "memberName": "validatorToken",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 54,
                              "src": "13960:21:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_ExpandedIERC20_$50590",
                                "typeString": "contract ExpandedIERC20"
                              }
                            },
                            "id": 1261,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "13982:9:0",
                            "memberName": "balanceOf",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 45788,
                            "src": "13960:31:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                              "typeString": "function (address) view external returns (uint256)"
                            }
                          },
                          "id": 1264,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "13960:43:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "13944:59:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "/",
                      "rightExpression": {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "expression": {
                            "expression": {
                              "id": 1266,
                              "name": "market",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1200,
                              "src": "14006:6:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Market_$67_storage_ptr",
                                "typeString": "struct CarbonUMArket.Market storage pointer"
                              }
                            },
                            "id": 1267,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "14013:14:0",
                            "memberName": "validatorToken",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 54,
                            "src": "14006:21:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ExpandedIERC20_$50590",
                              "typeString": "contract ExpandedIERC20"
                            }
                          },
                          "id": 1268,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "14028:11:0",
                          "memberName": "totalSupply",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 45780,
                          "src": "14006:33:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$",
                            "typeString": "function () view external returns (uint256)"
                          }
                        },
                        "id": 1269,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "14006:35:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "13944:97:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "13875:170:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 1279,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "14096:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 1280,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "14100:6:0",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "14096:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 1281,
                        "name": "creditBalance",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1226,
                        "src": "14108:13:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "expression": {
                          "id": 1274,
                          "name": "market",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1200,
                          "src": "14056:6:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Market_$67_storage_ptr",
                            "typeString": "struct CarbonUMArket.Market storage pointer"
                          }
                        },
                        "id": 1277,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "14063:23:0",
                        "memberName": "convertibleCarbonCredit",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 51,
                        "src": "14056:30:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ExpandedIERC20_$50590",
                          "typeString": "contract ExpandedIERC20"
                        }
                      },
                      "id": 1278,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "14087:8:0",
                      "memberName": "burnFrom",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 50564,
                      "src": "14056:39:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,uint256) external returns (bool)"
                      }
                    },
                    "id": 1282,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "14056:66:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1283,
                  "nodeType": "ExpressionStatement",
                  "src": "14056:66:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 1289,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "14167:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 1290,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "14171:6:0",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "14167:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 1291,
                        "name": "validatorTokenBalance",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1241,
                        "src": "14179:21:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "expression": {
                          "id": 1284,
                          "name": "market",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1200,
                          "src": "14136:6:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Market_$67_storage_ptr",
                            "typeString": "struct CarbonUMArket.Market storage pointer"
                          }
                        },
                        "id": 1287,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "14143:14:0",
                        "memberName": "validatorToken",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 54,
                        "src": "14136:21:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ExpandedIERC20_$50590",
                          "typeString": "contract ExpandedIERC20"
                        }
                      },
                      "id": 1288,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "14158:8:0",
                      "memberName": "burnFrom",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 50564,
                      "src": "14136:30:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,uint256) external returns (bool)"
                      }
                    },
                    "id": 1292,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "14136:65:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1293,
                  "nodeType": "ExpressionStatement",
                  "src": "14136:65:0"
                },
                {
                  "condition": {
                    "expression": {
                      "id": 1294,
                      "name": "market",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1200,
                      "src": "14215:6:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Market_$67_storage_ptr",
                        "typeString": "struct CarbonUMArket.Market storage pointer"
                      }
                    },
                    "id": 1295,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberLocation": "14222:16:0",
                    "memberName": "promiseDelivered",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 64,
                    "src": "14215:23:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 1331,
                    "nodeType": "Block",
                    "src": "14460:150:0",
                    "statements": [
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 1318,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 1316,
                            "name": "individualReward",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1250,
                            "src": "14477:16:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": ">",
                          "rightExpression": {
                            "hexValue": "30",
                            "id": 1317,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "14496:1:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "src": "14477:20:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 1330,
                        "nodeType": "IfStatement",
                        "src": "14474:126:0",
                        "trueBody": {
                          "id": 1329,
                          "nodeType": "Block",
                          "src": "14498:102:0",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "expression": {
                                      "id": 1322,
                                      "name": "market",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1200,
                                      "src": "14542:6:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_Market_$67_storage_ptr",
                                        "typeString": "struct CarbonUMArket.Market storage pointer"
                                      }
                                    },
                                    "id": 1323,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberLocation": "14549:5:0",
                                    "memberName": "owner",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 39,
                                    "src": "14542:12:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  {
                                    "expression": {
                                      "id": 1324,
                                      "name": "msg",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": -15,
                                      "src": "14556:3:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_magic_message",
                                        "typeString": "msg"
                                      }
                                    },
                                    "id": 1325,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberLocation": "14560:6:0",
                                    "memberName": "sender",
                                    "nodeType": "MemberAccess",
                                    "src": "14556:10:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  {
                                    "id": 1326,
                                    "name": "individualReward",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1250,
                                    "src": "14568:16:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    },
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    },
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  ],
                                  "expression": {
                                    "id": 1319,
                                    "name": "currency",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 23,
                                    "src": "14516:8:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_IERC20_$45849",
                                      "typeString": "contract IERC20"
                                    }
                                  },
                                  "id": 1321,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberLocation": "14525:16:0",
                                  "memberName": "safeTransferFrom",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 45931,
                                  "src": "14516:25:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$45849_$_t_address_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20_$45849_$",
                                    "typeString": "function (contract IERC20,address,address,uint256)"
                                  }
                                },
                                "id": 1327,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "14516:69:0",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 1328,
                              "nodeType": "ExpressionStatement",
                              "src": "14516:69:0"
                            }
                          ]
                        }
                      }
                    ]
                  },
                  "id": 1332,
                  "nodeType": "IfStatement",
                  "src": "14212:398:0",
                  "trueBody": {
                    "id": 1315,
                    "nodeType": "Block",
                    "src": "14239:208:0",
                    "statements": [
                      {
                        "expression": {
                          "id": 1298,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 1296,
                            "name": "creditDelivered",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1237,
                            "src": "14253:15:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 1297,
                            "name": "creditBalance",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1226,
                            "src": "14271:13:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "14253:31:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 1299,
                        "nodeType": "ExpressionStatement",
                        "src": "14253:31:0"
                      },
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 1302,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 1300,
                            "name": "creditDelivered",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1237,
                            "src": "14302:15:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": ">",
                          "rightExpression": {
                            "hexValue": "30",
                            "id": 1301,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "14320:1:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "src": "14302:19:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 1314,
                        "nodeType": "IfStatement",
                        "src": "14298:127:0",
                        "trueBody": {
                          "id": 1313,
                          "nodeType": "Block",
                          "src": "14323:102:0",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "expression": {
                                      "id": 1308,
                                      "name": "msg",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": -15,
                                      "src": "14382:3:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_magic_message",
                                        "typeString": "msg"
                                      }
                                    },
                                    "id": 1309,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberLocation": "14386:6:0",
                                    "memberName": "sender",
                                    "nodeType": "MemberAccess",
                                    "src": "14382:10:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  {
                                    "id": 1310,
                                    "name": "creditDelivered",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1237,
                                    "src": "14394:15:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    },
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  ],
                                  "expression": {
                                    "arguments": [
                                      {
                                        "expression": {
                                          "id": 1304,
                                          "name": "market",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 1200,
                                          "src": "14348:6:0",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_struct$_Market_$67_storage_ptr",
                                            "typeString": "struct CarbonUMArket.Market storage pointer"
                                          }
                                        },
                                        "id": 1305,
                                        "isConstant": false,
                                        "isLValue": true,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "memberLocation": "14355:12:0",
                                        "memberName": "carbonCredit",
                                        "nodeType": "MemberAccess",
                                        "referencedDeclaration": 48,
                                        "src": "14348:19:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_contract$_ExpandedIERC20_$50590",
                                          "typeString": "contract ExpandedIERC20"
                                        }
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_contract$_ExpandedIERC20_$50590",
                                          "typeString": "contract ExpandedIERC20"
                                        }
                                      ],
                                      "id": 1303,
                                      "name": "IERC20",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 45849,
                                      "src": "14341:6:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_contract$_IERC20_$45849_$",
                                        "typeString": "type(contract IERC20)"
                                      }
                                    },
                                    "id": 1306,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "typeConversion",
                                    "lValueRequested": false,
                                    "nameLocations": [],
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "14341:27:0",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_IERC20_$45849",
                                      "typeString": "contract IERC20"
                                    }
                                  },
                                  "id": 1307,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberLocation": "14369:12:0",
                                  "memberName": "safeTransfer",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 45905,
                                  "src": "14341:40:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$45849_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20_$45849_$",
                                    "typeString": "function (contract IERC20,address,uint256)"
                                  }
                                },
                                "id": 1311,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "14341:69:0",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 1312,
                              "nodeType": "ExpressionStatement",
                              "src": "14341:69:0"
                            }
                          ]
                        }
                      }
                    ]
                  }
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 1334,
                        "name": "marketId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1195,
                        "src": "14648:8:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "expression": {
                          "id": 1335,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "14658:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 1336,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "14662:6:0",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "14658:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 1337,
                        "name": "individualReward",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1250,
                        "src": "14670:16:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 1338,
                        "name": "creditDelivered",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1237,
                        "src": "14688:15:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 1333,
                      "name": "MarketSettled",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 128,
                      "src": "14634:13:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_bytes32_$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (bytes32,address,uint256,uint256)"
                      }
                    },
                    "id": 1339,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "14634:70:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1340,
                  "nodeType": "EmitStatement",
                  "src": "14629:75:0"
                }
              ]
            },
            "functionSelector": "e039c00e",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "settleMarket",
            "nameLocation": "13363:12:0",
            "parameters": {
              "id": 1196,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1195,
                  "mutability": "mutable",
                  "name": "marketId",
                  "nameLocation": "13384:8:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 1342,
                  "src": "13376:16:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 1194,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "13376:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "13375:18:0"
            },
            "returnParameters": {
              "id": 1197,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "13401:0:0"
            },
            "scope": 1343,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 12,
              "name": "OptimisticOracleV3CallbackRecipientInterface",
              "nameLocations": [
                "921:44:0"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 53207,
              "src": "921:44:0"
            },
            "id": 13,
            "nodeType": "InheritanceSpecifier",
            "src": "921:44:0"
          }
        ],
        "canonicalName": "CarbonUMArket",
        "contractDependencies": [
          1729,
          47843
        ],
        "contractKind": "contract",
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          1343,
          53207
        ],
        "name": "CarbonUMArket",
        "nameLocation": "904:13:0",
        "scope": 1344,
        "usedErrors": []
      }
    ],
    "license": "AGPL-3.0-only"
  },
  "id": 0
}