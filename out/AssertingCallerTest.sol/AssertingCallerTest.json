{
  "abi": [
    {
      "inputs": [
        {
          "internalType": "contract OptimisticOracleV3",
          "name": "_optimisticOracleV3",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [
        {
          "internalType": "bytes",
          "name": "claim",
          "type": "bytes"
        },
        {
          "internalType": "address",
          "name": "callbackRecipient",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "escalationManager",
          "type": "address"
        },
        {
          "internalType": "uint64",
          "name": "liveness",
          "type": "uint64"
        },
        {
          "internalType": "contract IERC20",
          "name": "currency",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "bond",
          "type": "uint256"
        },
        {
          "internalType": "bytes32",
          "name": "identifier",
          "type": "bytes32"
        },
        {
          "internalType": "bytes32",
          "name": "domainId",
          "type": "bytes32"
        }
      ],
      "name": "assertTruth",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "assertionId",
          "type": "bytes32"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "bytecode": {
    "object": "0x60a060405234801561001057600080fd5b5060405161087838038061087883398101604081905261002f91610040565b6001600160a01b0316608052610070565b60006020828403121561005257600080fd5b81516001600160a01b038116811461006957600080fd5b9392505050565b6080516107e861009060003960008181607b015260b701526107e86000f3fe608060405234801561001057600080fd5b506004361061002b5760003560e01c8063025ac24f14610030575b600080fd5b61004361003e36600461057b565b610055565b60405190815260200160405180910390f35b600061006c6001600160a01b03861633308761014c565b6100a06001600160a01b0386167f0000000000000000000000000000000000000000000000000000000000000000866101bd565b604051636457c97960e01b81526001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001690636457c979906100fc908c9033908d908d908d908d908d908d908d906004016106da565b6020604051808303816000875af115801561011b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061013f9190610748565b9998505050505050505050565b6040516001600160a01b03808516602483015283166044820152606481018290526101b79085906323b872dd60e01b906084015b60408051601f198184030181529190526020810180516001600160e01b03166001600160e01b0319909316929092179091526102dc565b50505050565b8015806102375750604051636eb1769f60e11b81523060048201526001600160a01b03838116602483015284169063dd62ed3e90604401602060405180830381865afa158015610211573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102359190610748565b155b6102a75760405162461bcd60e51b815260206004820152603660248201527f5361666545524332303a20617070726f76652066726f6d206e6f6e2d7a65726f60448201527520746f206e6f6e2d7a65726f20616c6c6f77616e636560501b60648201526084015b60405180910390fd5b6040516001600160a01b0383166024820152604481018290526102d790849063095ea7b360e01b90606401610180565b505050565b6000610331826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b03166103ae9092919063ffffffff16565b8051909150156102d7578080602001905181019061034f9190610761565b6102d75760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b606482015260840161029e565b60606103bd84846000856103c7565b90505b9392505050565b6060824710156104285760405162461bcd60e51b815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f6044820152651c8818d85b1b60d21b606482015260840161029e565b6001600160a01b0385163b61047f5760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000604482015260640161029e565b600080866001600160a01b0316858760405161049b9190610783565b60006040518083038185875af1925050503d80600081146104d8576040519150601f19603f3d011682016040523d82523d6000602084013e6104dd565b606091505b50915091506104ed8282866104f8565b979650505050505050565b606083156105075750816103c0565b8251156105175782518084602001fd5b8160405162461bcd60e51b815260040161029e919061079f565b634e487b7160e01b600052604160045260246000fd5b80356001600160a01b038116811461055e57600080fd5b919050565b803567ffffffffffffffff8116811461055e57600080fd5b600080600080600080600080610100898b03121561059857600080fd5b883567ffffffffffffffff808211156105b057600080fd5b818b0191508b601f8301126105c457600080fd5b8135818111156105d6576105d6610531565b604051601f8201601f19908116603f011681019083821181831017156105fe576105fe610531565b816040528281528e602084870101111561061757600080fd5b82602086016020830137600060208483010152809c50505050505061063e60208a01610547565b965061064c60408a01610547565b955061065a60608a01610563565b945061066860808a01610547565b979a969950949793969560a0850135955060c08501359460e001359350915050565b60005b838110156106a557818101518382015260200161068d565b50506000910152565b600081518084526106c681602086016020860161068a565b601f01601f19169290920160200192915050565b60006101208083526106ee8184018d6106ae565b6001600160a01b039b8c166020850152998b1660408401525050958816606087015267ffffffffffffffff9490941660808601529190951660a084015260c083019490945260e08201939093526101000191909152919050565b60006020828403121561075a57600080fd5b5051919050565b60006020828403121561077357600080fd5b815180151581146103c057600080fd5b6000825161079581846020870161068a565b9190910192915050565b6020815260006103c060208301846106ae56fea264697066735822122040fd4937917989d4e157fb0795bc9dc886b180a95780126fdd27487a425c565f64736f6c63430008100033",
    "sourceMap": "170:1067:52:-:0;;;292:109;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;354:40:52;;;170:1067;;14:318:69;112:6;165:2;153:9;144:7;140:23;136:32;133:52;;;181:1;178;171:12;133:52;207:16;;-1:-1:-1;;;;;252:31:69;;242:42;;232:70;;298:1;295;288:12;232:70;321:5;14:318;-1:-1:-1;;;14:318:69:o;:::-;170:1067:52;;;;;;;;;;;;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x608060405234801561001057600080fd5b506004361061002b5760003560e01c8063025ac24f14610030575b600080fd5b61004361003e36600461057b565b610055565b60405190815260200160405180910390f35b600061006c6001600160a01b03861633308761014c565b6100a06001600160a01b0386167f0000000000000000000000000000000000000000000000000000000000000000866101bd565b604051636457c97960e01b81526001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001690636457c979906100fc908c9033908d908d908d908d908d908d908d906004016106da565b6020604051808303816000875af115801561011b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061013f9190610748565b9998505050505050505050565b6040516001600160a01b03808516602483015283166044820152606481018290526101b79085906323b872dd60e01b906084015b60408051601f198184030181529190526020810180516001600160e01b03166001600160e01b0319909316929092179091526102dc565b50505050565b8015806102375750604051636eb1769f60e11b81523060048201526001600160a01b03838116602483015284169063dd62ed3e90604401602060405180830381865afa158015610211573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102359190610748565b155b6102a75760405162461bcd60e51b815260206004820152603660248201527f5361666545524332303a20617070726f76652066726f6d206e6f6e2d7a65726f60448201527520746f206e6f6e2d7a65726f20616c6c6f77616e636560501b60648201526084015b60405180910390fd5b6040516001600160a01b0383166024820152604481018290526102d790849063095ea7b360e01b90606401610180565b505050565b6000610331826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b03166103ae9092919063ffffffff16565b8051909150156102d7578080602001905181019061034f9190610761565b6102d75760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b606482015260840161029e565b60606103bd84846000856103c7565b90505b9392505050565b6060824710156104285760405162461bcd60e51b815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f6044820152651c8818d85b1b60d21b606482015260840161029e565b6001600160a01b0385163b61047f5760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000604482015260640161029e565b600080866001600160a01b0316858760405161049b9190610783565b60006040518083038185875af1925050503d80600081146104d8576040519150601f19603f3d011682016040523d82523d6000602084013e6104dd565b606091505b50915091506104ed8282866104f8565b979650505050505050565b606083156105075750816103c0565b8251156105175782518084602001fd5b8160405162461bcd60e51b815260040161029e919061079f565b634e487b7160e01b600052604160045260246000fd5b80356001600160a01b038116811461055e57600080fd5b919050565b803567ffffffffffffffff8116811461055e57600080fd5b600080600080600080600080610100898b03121561059857600080fd5b883567ffffffffffffffff808211156105b057600080fd5b818b0191508b601f8301126105c457600080fd5b8135818111156105d6576105d6610531565b604051601f8201601f19908116603f011681019083821181831017156105fe576105fe610531565b816040528281528e602084870101111561061757600080fd5b82602086016020830137600060208483010152809c50505050505061063e60208a01610547565b965061064c60408a01610547565b955061065a60608a01610563565b945061066860808a01610547565b979a969950949793969560a0850135955060c08501359460e001359350915050565b60005b838110156106a557818101518382015260200161068d565b50506000910152565b600081518084526106c681602086016020860161068a565b601f01601f19169290920160200192915050565b60006101208083526106ee8184018d6106ae565b6001600160a01b039b8c166020850152998b1660408401525050958816606087015267ffffffffffffffff9490941660808601529190951660a084015260c083019490945260e08201939093526101000191909152919050565b60006020828403121561075a57600080fd5b5051919050565b60006020828403121561077357600080fd5b815180151581146103c057600080fd5b6000825161079581846020870161068a565b9190910192915050565b6020815260006103c060208301846106ae56fea264697066735822122040fd4937917989d4e157fb0795bc9dc886b180a95780126fdd27487a425c565f64736f6c63430008100033",
    "sourceMap": "170:1067:52:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;529:706;;;;;;:::i;:::-;;:::i;:::-;;;2101:25:69;;;2089:2;2074:18;529:706:52;;;;;;;;796:19;827:58;-1:-1:-1;;;;;827:25:52;;853:10;873:4;880;827:25;:58::i;:::-;895:55;-1:-1:-1;;;;;895:20:52;;924:18;945:4;895:20;:55::i;:::-;975:253;;-1:-1:-1;;;975:253:52;;-1:-1:-1;;;;;975:18:52;:30;;;;:253;;1019:5;;1038:10;;1062:17;;1093;;1124:8;;1146;;1168:4;;1186:10;;1210:8;;975:253;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;961:267;529:706;-1:-1:-1;;;;;;;;;529:706:52:o;912:241:23:-;1077:68;;-1:-1:-1;;;;;4044:15:69;;;1077:68:23;;;4026:34:69;4096:15;;4076:18;;;4069:43;4128:18;;;4121:34;;;1050:96:23;;1070:5;;-1:-1:-1;;;1100:27:23;3961:18:69;;1077:68:23;;;;-1:-1:-1;;1077:68:23;;;;;;;;;;;;;;-1:-1:-1;;;;;1077:68:23;-1:-1:-1;;;;;;1077:68:23;;;;;;;;;;1050:19;:96::i;:::-;912:241;;;;:::o;1413:603::-;1768:10;;;1767:62;;-1:-1:-1;1784:39:23;;-1:-1:-1;;;1784:39:23;;1808:4;1784:39;;;4378:34:69;-1:-1:-1;;;;;4448:15:69;;;4428:18;;;4421:43;1784:15:23;;;;;4313:18:69;;1784:39:23;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:44;1767:62;1746:163;;;;-1:-1:-1;;;1746:163:23;;4866:2:69;1746:163:23;;;4848:21:69;4905:2;4885:18;;;4878:30;4944:34;4924:18;;;4917:62;-1:-1:-1;;;4995:18:69;;;4988:52;5057:19;;1746:163:23;;;;;;;;;1946:62;;-1:-1:-1;;;;;5279:32:69;;1946:62:23;;;5261:51:69;5328:18;;;5321:34;;;1919:90:23;;1939:5;;-1:-1:-1;;;1969:22:23;5234:18:69;;1946:62:23;5087:274:69;1919:90:23;1413:603;;;:::o;3207:706::-;3626:23;3652:69;3680:4;3652:69;;;;;;;;;;;;;;;;;3660:5;-1:-1:-1;;;;;3652:27:23;;;:69;;;;;:::i;:::-;3735:17;;3626:95;;-1:-1:-1;3735:21:23;3731:176;;3830:10;3819:30;;;;;;;;;;;;:::i;:::-;3811:85;;;;-1:-1:-1;;;3811:85:23;;5850:2:69;3811:85:23;;;5832:21:69;5889:2;5869:18;;;5862:30;5928:34;5908:18;;;5901:62;-1:-1:-1;;;5979:18:69;;;5972:40;6029:19;;3811:85:23;5648:406:69;3861:223:24;3994:12;4025:52;4047:6;4055:4;4061:1;4064:12;4025:21;:52::i;:::-;4018:59;;3861:223;;;;;;:::o;4948:499::-;5113:12;5170:5;5145:21;:30;;5137:81;;;;-1:-1:-1;;;5137:81:24;;6261:2:69;5137:81:24;;;6243:21:69;6300:2;6280:18;;;6273:30;6339:34;6319:18;;;6312:62;-1:-1:-1;;;6390:18:69;;;6383:36;6436:19;;5137:81:24;6059:402:69;5137:81:24;-1:-1:-1;;;;;1465:19:24;;;5228:60;;;;-1:-1:-1;;;5228:60:24;;6668:2:69;5228:60:24;;;6650:21:69;6707:2;6687:18;;;6680:30;6746:31;6726:18;;;6719:59;6795:18;;5228:60:24;6466:353:69;5228:60:24;5300:12;5314:23;5341:6;-1:-1:-1;;;;;5341:11:24;5360:5;5367:4;5341:31;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5299:73;;;;5389:51;5406:7;5415:10;5427:12;5389:16;:51::i;:::-;5382:58;4948:499;-1:-1:-1;;;;;;;4948:499:24:o;7561:692::-;7707:12;7735:7;7731:516;;;-1:-1:-1;7765:10:24;7758:17;;7731:516;7876:17;;:21;7872:365;;8070:10;8064:17;8130:15;8117:10;8113:2;8109:19;8102:44;7872:365;8209:12;8202:20;;-1:-1:-1;;;8202:20:24;;;;;;;;:::i;14:127:69:-;75:10;70:3;66:20;63:1;56:31;106:4;103:1;96:15;130:4;127:1;120:15;146:173;214:20;;-1:-1:-1;;;;;263:31:69;;253:42;;243:70;;309:1;306;299:12;243:70;146:173;;;:::o;324:171::-;391:20;;451:18;440:30;;430:41;;420:69;;485:1;482;475:12;500:1450;646:6;654;662;670;678;686;694;702;755:3;743:9;734:7;730:23;726:33;723:53;;;772:1;769;762:12;723:53;812:9;799:23;841:18;882:2;874:6;871:14;868:34;;;898:1;895;888:12;868:34;936:6;925:9;921:22;911:32;;981:7;974:4;970:2;966:13;962:27;952:55;;1003:1;1000;993:12;952:55;1039:2;1026:16;1061:2;1057;1054:10;1051:36;;;1067:18;;:::i;:::-;1142:2;1136:9;1110:2;1196:13;;-1:-1:-1;;1192:22:69;;;1216:2;1188:31;1184:40;1172:53;;;1240:18;;;1260:22;;;1237:46;1234:72;;;1286:18;;:::i;:::-;1326:10;1322:2;1315:22;1361:2;1353:6;1346:18;1403:7;1396:4;1391:2;1387;1383:11;1379:22;1376:35;1373:55;;;1424:1;1421;1414:12;1373:55;1484:2;1477:4;1473:2;1469:13;1462:4;1454:6;1450:17;1437:50;1531:1;1524:4;1519:2;1511:6;1507:15;1503:26;1496:37;1552:6;1542:16;;;;;;;1577:40;1611:4;1600:9;1596:20;1577:40;:::i;:::-;1567:50;;1636:38;1670:2;1659:9;1655:18;1636:38;:::i;:::-;1626:48;;1693:37;1726:2;1715:9;1711:18;1693:37;:::i;:::-;1683:47;;1749:39;1783:3;1772:9;1768:19;1749:39;:::i;:::-;500:1450;;;;-1:-1:-1;500:1450:69;;;;1739:49;1835:3;1820:19;;1807:33;;-1:-1:-1;1887:3:69;1872:19;;1859:33;;1939:3;1924:19;1911:33;;-1:-1:-1;500:1450:69;-1:-1:-1;;500:1450:69:o;2137:250::-;2222:1;2232:113;2246:6;2243:1;2240:13;2232:113;;;2322:11;;;2316:18;2303:11;;;2296:39;2268:2;2261:10;2232:113;;;-1:-1:-1;;2379:1:69;2361:16;;2354:27;2137:250::o;2392:270::-;2433:3;2471:5;2465:12;2498:6;2493:3;2486:19;2514:76;2583:6;2576:4;2571:3;2567:14;2560:4;2553:5;2549:16;2514:76;:::i;:::-;2644:2;2623:15;-1:-1:-1;;2619:29:69;2610:39;;;;2651:4;2606:50;;2392:270;-1:-1:-1;;2392:270:69:o;2667:925::-;3015:4;3044:3;3074:2;3063:9;3056:21;3094:44;3134:2;3123:9;3119:18;3111:6;3094:44;:::i;:::-;-1:-1:-1;;;;;3212:15:69;;;3207:2;3192:18;;3185:43;3264:15;;;3259:2;3244:18;;3237:43;-1:-1:-1;;3316:15:69;;;3311:2;3296:18;;3289:43;3381:18;3369:31;;;;3363:3;3348:19;;3341:60;3438:15;;;;3165:3;3417:19;;3410:44;3485:3;3470:19;;3463:35;;;;3529:3;3514:19;;3507:35;;;;3573:3;3558:19;3551:35;;;;3086:52;2667:925;-1:-1:-1;2667:925:69:o;3597:184::-;3667:6;3720:2;3708:9;3699:7;3695:23;3691:32;3688:52;;;3736:1;3733;3726:12;3688:52;-1:-1:-1;3759:16:69;;3597:184;-1:-1:-1;3597:184:69:o;5366:277::-;5433:6;5486:2;5474:9;5465:7;5461:23;5457:32;5454:52;;;5502:1;5499;5492:12;5454:52;5534:9;5528:16;5587:5;5580:13;5573:21;5566:5;5563:32;5553:60;;5609:1;5606;5599:12;6824:287;6953:3;6991:6;6985:13;7007:66;7066:6;7061:3;7054:4;7046:6;7042:17;7007:66;:::i;:::-;7089:16;;;;;6824:287;-1:-1:-1;;6824:287:69:o;7116:219::-;7265:2;7254:9;7247:21;7228:4;7285:44;7325:2;7314:9;7310:18;7302:6;7285:44;:::i",
    "linkReferences": {},
    "immutableReferences": {
      "52035": [
        {
          "start": 123,
          "length": 32
        },
        {
          "start": 183,
          "length": 32
        }
      ]
    }
  },
  "methodIdentifiers": {
    "assertTruth(bytes,address,address,uint64,address,uint256,bytes32,bytes32)": "025ac24f"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.16+commit.07a7930e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"contract OptimisticOracleV3\",\"name\":\"_optimisticOracleV3\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"claim\",\"type\":\"bytes\"},{\"internalType\":\"address\",\"name\":\"callbackRecipient\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"escalationManager\",\"type\":\"address\"},{\"internalType\":\"uint64\",\"name\":\"liveness\",\"type\":\"uint64\"},{\"internalType\":\"contract IERC20\",\"name\":\"currency\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"bond\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"identifier\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"domainId\",\"type\":\"bytes32\"}],\"name\":\"assertTruth\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"assertionId\",\"type\":\"bytes32\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"node_modules/@uma/core/contracts/optimistic-oracle-v3/implementation/test/AssertingCallerTest.sol\":\"AssertingCallerTest\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@across-protocol/=node_modules/@across-protocol/\",\":@ensdomains/=node_modules/@ensdomains/\",\":@eth-optimism/=node_modules/@across-protocol/contracts/node_modules/@eth-optimism/\",\":@gnosis.pm/=node_modules/@gnosis.pm/\",\":@maticnetwork/=node_modules/@maticnetwork/\",\":@openzeppelin/=node_modules/@openzeppelin/\",\":@uma/=node_modules/@uma/\",\":@uniswap/=node_modules/@uniswap/\",\":base64-sol/=node_modules/base64-sol/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":eth-gas-reporter/=node_modules/eth-gas-reporter/\",\":forge-std/=lib/forge-std/src/\",\":hardhat-deploy/=node_modules/hardhat-deploy/\",\":hardhat/=node_modules/hardhat/\"]},\"sources\":{\"node_modules/@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0x24e0364e503a9bbde94c715d26573a76f14cd2a202d45f96f52134ab806b67b9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e12cbaa7378fd9b62280e4e1d164bedcb4399ce238f5f98fc0eefb7e50577981\",\"dweb:/ipfs/QmXRoFGUgfsaRkoPT5bxNMtSayKTQ8GZATLPXf69HcRA51\"]},\"node_modules/@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xbbc8ac883ac3c0078ce5ad3e288fbb3ffcc8a30c3a98c0fda0114d64fc44fca2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87a7a5d2f6f63f84598af02b8c50ca2df2631cb8ba2453e8d95fcb17e4be9824\",\"dweb:/ipfs/QmR76hqtAcRqoFj33tmNjcWTLrgNsAaakYwnKZ8zoJtKei\"]},\"node_modules/@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0xc3d946432c0ddbb1f846a0d3985be71299df331b91d06732152117f62f0be2b5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4632c341a06ba5c079b51ca5a915efab4e6ab57735b37839b3e8365ff806a43e\",\"dweb:/ipfs/QmTHT3xHYed2wajEoA5qu7ii2BxLpPhQZHwAhtLK5Z7ANK\"]},\"node_modules/@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0x2ccf9d2313a313d41a791505f2b5abfdc62191b5d4334f7f7a82691c088a1c87\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b3a57d0854b2fdce6ebff933a48dca2445643d1eccfc27f00292e937f26c6a58\",\"dweb:/ipfs/QmW45rZooS9TqR4YXUbjRbtf2Bpb5ouSarBvfW1LdGprvV\"]},\"node_modules/@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"node_modules/@openzeppelin/contracts/utils/math/SafeMath.sol\":{\"keccak256\":\"0xa2f576be637946f767aa56601c26d717f48a0aff44f82e46f13807eea1009a21\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://973868f808e88e21a1a0a01d4839314515ee337ad096286c88e41b74dcc11fc2\",\"dweb:/ipfs/QmfYuZxRfx2J2xdk4EXN7jKg4bUYEMTaYk9BAw9Bqn4o2Y\"]},\"node_modules/@openzeppelin/contracts/utils/math/SignedSafeMath.sol\":{\"keccak256\":\"0x62f53f262fabbbc6d8ab49488d8fce36370351aff2b8d3898d499d68995a71c2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://efd599513c2f313a3f5e9536beb2b80a0d2b3dd34202c174a707d81b7dc751ce\",\"dweb:/ipfs/QmdDiENVFSyWjfFskNLnViMH77DHg3oDthkSZk7dMzNNKB\"]},\"node_modules/@uma/core/contracts/common/implementation/AddressWhitelist.sol\":{\"keccak256\":\"0xc1f20b925f9d37230aaf7bbee536f9a9b08e4772864f0a243ff1b69b54710fee\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://55bc6782bd269463214dbafa8702b2ff33910fd4a51ab24d775aabb15e278bcc\",\"dweb:/ipfs/QmV41DnGByGBtg8gk7MG6Nr3xYo5R5varZ8cewywdKNATQ\"]},\"node_modules/@uma/core/contracts/common/implementation/AncillaryData.sol\":{\"keccak256\":\"0x8ff33ac32d3e6de25de9e0ac2c0ff9a621f187fa97e9ee84092b327471baa3ce\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://0bbaed49756e8cf7ef405e132f441cd7a735ac6186a200b0179147e7d137b74a\",\"dweb:/ipfs/QmeSBJX5a61LZPxbkUKS2NF4LSxemgDwjD65fCAmyP7PX2\"]},\"node_modules/@uma/core/contracts/common/implementation/FixedPoint.sol\":{\"keccak256\":\"0x996b97cc4fa5da4064e3aee500edc6972485d59a9334ceec81155e2c2f484dae\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://8d7c028926dc2b27e7dc103363dca8a43f60b3351f4a14bcb702660f95c68663\",\"dweb:/ipfs/QmXz4ieFjP5RxJ35F8GbPryYEGvFmxc4Gqx8EK7N57ixzT\"]},\"node_modules/@uma/core/contracts/common/implementation/Lockable.sol\":{\"keccak256\":\"0x41d78fcce54598ad5f26bc0b778c0f4fedbd836401625e49e736979f69a87ef0\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://4ce111bb50441ef5125e7d42284f6debbc17fd589515d7b8cede7e9d1d5f0ede\",\"dweb:/ipfs/QmaXiXACWVEDDHoCHNXdVBoNpf8QNHkUZ1kf5MfbxfL6jj\"]},\"node_modules/@uma/core/contracts/common/implementation/MultiCaller.sol\":{\"keccak256\":\"0x9f6afe5bafc5e16fe8d63010a740ec3a88a9f00a7236ea7e5b039a2f50eb346e\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://a971572a4a9ed32e5ec15ac384af593d9499778f6ec593dbdba67d44ced4c7d8\",\"dweb:/ipfs/QmbdpfhhnUyoHWe7TPFBZxT6R6zyxJEDcGBNwDt5ncweRv\"]},\"node_modules/@uma/core/contracts/common/interfaces/AddressWhitelistInterface.sol\":{\"keccak256\":\"0x22fb8588dff1d5cff76a28111d6c9b190765d99facd93c8ff3b54771f245c0d8\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://5ecd993f00de290a3c7bf21da23a9439cf2ccb22028316df92b79780ac8aa533\",\"dweb:/ipfs/QmTZ7x7U4EEzTacqapzSdFs2np5WNsqm4XeUBqzQxxDJei\"]},\"node_modules/@uma/core/contracts/data-verification-mechanism/implementation/Constants.sol\":{\"keccak256\":\"0xe40957105a9240c6bcb9753fd0011fe9f382c437cd6771c57bf7a96f8ceb9c84\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://cbf0d25e841b1f5c4022d09fb29220cb428139443cb29c4ab8dbfff71dffcc05\",\"dweb:/ipfs/QmSVVr5wH1tZi6WmKyuy1K8yS6JN4DeK5kWaZpPKtXiqkK\"]},\"node_modules/@uma/core/contracts/data-verification-mechanism/interfaces/FinderInterface.sol\":{\"keccak256\":\"0x9166fbfe08e954eb86d33c114fcde7ce4fd0dda5d9d28b31210582bfc769fa86\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://e611e12bcaaebfdf65b67c566ff1d34708e757f01a445bd87c55862e89383b81\",\"dweb:/ipfs/QmYNSq5oopTShdS6j4VWKqoLxmQSRKmWebCxw6K4LfmKrf\"]},\"node_modules/@uma/core/contracts/data-verification-mechanism/interfaces/IdentifierWhitelistInterface.sol\":{\"keccak256\":\"0x9ae86a30dd1a8c03fb2c6d27be570bb30c4c0b13ac63cde8620b7e4b51d88dc9\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://a71d2aff48e075ecab56a9c9767775d1d77e04ec9191fed124e71003220549e3\",\"dweb:/ipfs/QmYPWsZXro6fzqpZY6UxQ5X8znEXfLp2sun8oXzdz8bTyc\"]},\"node_modules/@uma/core/contracts/data-verification-mechanism/interfaces/OracleAncillaryInterface.sol\":{\"keccak256\":\"0xd58b41fe1e389f7871db7c04f2c05c1aac1d0455bbc521534da81fd657016a1f\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://cc532e9c550bb1bba0daa33fda748590cd06ce94a9566fe65dac04e7d40977bc\",\"dweb:/ipfs/QmZKvfRW2LJFt5MWZbKuU9ujkXnS2hkPUJVj8wwJWcuZGX\"]},\"node_modules/@uma/core/contracts/data-verification-mechanism/interfaces/StoreInterface.sol\":{\"keccak256\":\"0xbb73671684309c91ad5ef3da1474051d03f2e7d5882bed7f5c4317e5d4c768df\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://32386544d3119fd0187a8c4e8b01c739f508ab863faa04345cabc2544081f9e8\",\"dweb:/ipfs/QmYszDURs1x75rsejZkGt9zCkASXnJtufbNsL3XHe2eJPQ\"]},\"node_modules/@uma/core/contracts/optimistic-oracle-v3/implementation/OptimisticOracleV3.sol\":{\"keccak256\":\"0xeba5082c48c3d891f2422b8c0d1d5d6552ab47b5d538db7ff05ffb2f3db25ffc\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://d818630e1c094792613a0539aa0a7677ca8fa92a5308eaf4ff7cf8ea8a4c547e\",\"dweb:/ipfs/QmSM78A3afY6osh4VAmyJX2E4Qyg4qcY1KwY5uFnSK4Yia\"]},\"node_modules/@uma/core/contracts/optimistic-oracle-v3/implementation/test/AssertingCallerTest.sol\":{\"keccak256\":\"0x212dafde3707bc594b103f3baef2612e521d5cced481d81938938cc5c6fc4068\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://21e87397b59f9529a3e9ed9ef821f83f1a73bf685c2ec37dc70a2fbfc79aa441\",\"dweb:/ipfs/QmRmBzN3ztihHgeHzir1tz2MGsCrLM2Krc7ozQ4MiQe8jt\"]},\"node_modules/@uma/core/contracts/optimistic-oracle-v3/interfaces/EscalationManagerInterface.sol\":{\"keccak256\":\"0xce31adf62ae47468bab181bf1137b05e8ac0a003f019c343ac137a76ea32efc7\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://eb1b93b648adf4130fdfe7a62d817cda0519e7760a50b90f16a3c46cee4c0967\",\"dweb:/ipfs/QmNPD4TRAm9kqqQDKQabqZgaorkJNov96iLgxsm5HRTSZN\"]},\"node_modules/@uma/core/contracts/optimistic-oracle-v3/interfaces/OptimisticOracleV3CallbackRecipientInterface.sol\":{\"keccak256\":\"0x79f90bc84ed5d394380e99f0a5d1b219abd9016bc3a02fad0099014af08af03e\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://dc1b7b847eb711750bc76ab45a13294b05fc09e361294a6bdffb90cb15f50b63\",\"dweb:/ipfs/QmQSs2R7mmGojGdNkqP75Vf7LajRkfJ1oGuYAUCHYGmPEQ\"]},\"node_modules/@uma/core/contracts/optimistic-oracle-v3/interfaces/OptimisticOracleV3Interface.sol\":{\"keccak256\":\"0xf31322bfd64854f0bfa92051d6ec711c1eed15d8042f394f5c24c05378218367\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://535bc2a6060e86a49524fd3c0062afcf83077530cefb3c1b8179b832f03ca81e\",\"dweb:/ipfs/QmQZhqn6oUiebSWEKbqcmiMGkqAb8B59WsRAyFU8WY84ct\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.16+commit.07a7930e"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [
            {
              "internalType": "contract OptimisticOracleV3",
              "name": "_optimisticOracleV3",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "constructor"
        },
        {
          "inputs": [
            {
              "internalType": "bytes",
              "name": "claim",
              "type": "bytes"
            },
            {
              "internalType": "address",
              "name": "callbackRecipient",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "escalationManager",
              "type": "address"
            },
            {
              "internalType": "uint64",
              "name": "liveness",
              "type": "uint64"
            },
            {
              "internalType": "contract IERC20",
              "name": "currency",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "bond",
              "type": "uint256"
            },
            {
              "internalType": "bytes32",
              "name": "identifier",
              "type": "bytes32"
            },
            {
              "internalType": "bytes32",
              "name": "domainId",
              "type": "bytes32"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "assertTruth",
          "outputs": [
            {
              "internalType": "bytes32",
              "name": "assertionId",
              "type": "bytes32"
            }
          ]
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {},
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {},
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        "@across-protocol/=node_modules/@across-protocol/",
        "@ensdomains/=node_modules/@ensdomains/",
        "@eth-optimism/=node_modules/@across-protocol/contracts/node_modules/@eth-optimism/",
        "@gnosis.pm/=node_modules/@gnosis.pm/",
        "@maticnetwork/=node_modules/@maticnetwork/",
        "@openzeppelin/=node_modules/@openzeppelin/",
        "@uma/=node_modules/@uma/",
        "@uniswap/=node_modules/@uniswap/",
        "base64-sol/=node_modules/base64-sol/",
        "ds-test/=lib/forge-std/lib/ds-test/src/",
        "eth-gas-reporter/=node_modules/eth-gas-reporter/",
        "forge-std/=lib/forge-std/src/",
        "hardhat-deploy/=node_modules/hardhat-deploy/",
        "hardhat/=node_modules/hardhat/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 200
      },
      "metadata": {
        "bytecodeHash": "ipfs"
      },
      "compilationTarget": {
        "node_modules/@uma/core/contracts/optimistic-oracle-v3/implementation/test/AssertingCallerTest.sol": "AssertingCallerTest"
      },
      "libraries": {}
    },
    "sources": {
      "node_modules/@openzeppelin/contracts/access/Ownable.sol": {
        "keccak256": "0x24e0364e503a9bbde94c715d26573a76f14cd2a202d45f96f52134ab806b67b9",
        "urls": [
          "bzz-raw://e12cbaa7378fd9b62280e4e1d164bedcb4399ce238f5f98fc0eefb7e50577981",
          "dweb:/ipfs/QmXRoFGUgfsaRkoPT5bxNMtSayKTQ8GZATLPXf69HcRA51"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/token/ERC20/IERC20.sol": {
        "keccak256": "0xbbc8ac883ac3c0078ce5ad3e288fbb3ffcc8a30c3a98c0fda0114d64fc44fca2",
        "urls": [
          "bzz-raw://87a7a5d2f6f63f84598af02b8c50ca2df2631cb8ba2453e8d95fcb17e4be9824",
          "dweb:/ipfs/QmR76hqtAcRqoFj33tmNjcWTLrgNsAaakYwnKZ8zoJtKei"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol": {
        "keccak256": "0xc3d946432c0ddbb1f846a0d3985be71299df331b91d06732152117f62f0be2b5",
        "urls": [
          "bzz-raw://4632c341a06ba5c079b51ca5a915efab4e6ab57735b37839b3e8365ff806a43e",
          "dweb:/ipfs/QmTHT3xHYed2wajEoA5qu7ii2BxLpPhQZHwAhtLK5Z7ANK"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/utils/Address.sol": {
        "keccak256": "0x2ccf9d2313a313d41a791505f2b5abfdc62191b5d4334f7f7a82691c088a1c87",
        "urls": [
          "bzz-raw://b3a57d0854b2fdce6ebff933a48dca2445643d1eccfc27f00292e937f26c6a58",
          "dweb:/ipfs/QmW45rZooS9TqR4YXUbjRbtf2Bpb5ouSarBvfW1LdGprvV"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/utils/Context.sol": {
        "keccak256": "0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7",
        "urls": [
          "bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92",
          "dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/utils/math/SafeMath.sol": {
        "keccak256": "0xa2f576be637946f767aa56601c26d717f48a0aff44f82e46f13807eea1009a21",
        "urls": [
          "bzz-raw://973868f808e88e21a1a0a01d4839314515ee337ad096286c88e41b74dcc11fc2",
          "dweb:/ipfs/QmfYuZxRfx2J2xdk4EXN7jKg4bUYEMTaYk9BAw9Bqn4o2Y"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/utils/math/SignedSafeMath.sol": {
        "keccak256": "0x62f53f262fabbbc6d8ab49488d8fce36370351aff2b8d3898d499d68995a71c2",
        "urls": [
          "bzz-raw://efd599513c2f313a3f5e9536beb2b80a0d2b3dd34202c174a707d81b7dc751ce",
          "dweb:/ipfs/QmdDiENVFSyWjfFskNLnViMH77DHg3oDthkSZk7dMzNNKB"
        ],
        "license": "MIT"
      },
      "node_modules/@uma/core/contracts/common/implementation/AddressWhitelist.sol": {
        "keccak256": "0xc1f20b925f9d37230aaf7bbee536f9a9b08e4772864f0a243ff1b69b54710fee",
        "urls": [
          "bzz-raw://55bc6782bd269463214dbafa8702b2ff33910fd4a51ab24d775aabb15e278bcc",
          "dweb:/ipfs/QmV41DnGByGBtg8gk7MG6Nr3xYo5R5varZ8cewywdKNATQ"
        ],
        "license": "AGPL-3.0-only"
      },
      "node_modules/@uma/core/contracts/common/implementation/AncillaryData.sol": {
        "keccak256": "0x8ff33ac32d3e6de25de9e0ac2c0ff9a621f187fa97e9ee84092b327471baa3ce",
        "urls": [
          "bzz-raw://0bbaed49756e8cf7ef405e132f441cd7a735ac6186a200b0179147e7d137b74a",
          "dweb:/ipfs/QmeSBJX5a61LZPxbkUKS2NF4LSxemgDwjD65fCAmyP7PX2"
        ],
        "license": "AGPL-3.0-only"
      },
      "node_modules/@uma/core/contracts/common/implementation/FixedPoint.sol": {
        "keccak256": "0x996b97cc4fa5da4064e3aee500edc6972485d59a9334ceec81155e2c2f484dae",
        "urls": [
          "bzz-raw://8d7c028926dc2b27e7dc103363dca8a43f60b3351f4a14bcb702660f95c68663",
          "dweb:/ipfs/QmXz4ieFjP5RxJ35F8GbPryYEGvFmxc4Gqx8EK7N57ixzT"
        ],
        "license": "AGPL-3.0-only"
      },
      "node_modules/@uma/core/contracts/common/implementation/Lockable.sol": {
        "keccak256": "0x41d78fcce54598ad5f26bc0b778c0f4fedbd836401625e49e736979f69a87ef0",
        "urls": [
          "bzz-raw://4ce111bb50441ef5125e7d42284f6debbc17fd589515d7b8cede7e9d1d5f0ede",
          "dweb:/ipfs/QmaXiXACWVEDDHoCHNXdVBoNpf8QNHkUZ1kf5MfbxfL6jj"
        ],
        "license": "AGPL-3.0-only"
      },
      "node_modules/@uma/core/contracts/common/implementation/MultiCaller.sol": {
        "keccak256": "0x9f6afe5bafc5e16fe8d63010a740ec3a88a9f00a7236ea7e5b039a2f50eb346e",
        "urls": [
          "bzz-raw://a971572a4a9ed32e5ec15ac384af593d9499778f6ec593dbdba67d44ced4c7d8",
          "dweb:/ipfs/QmbdpfhhnUyoHWe7TPFBZxT6R6zyxJEDcGBNwDt5ncweRv"
        ],
        "license": "AGPL-3.0-only"
      },
      "node_modules/@uma/core/contracts/common/interfaces/AddressWhitelistInterface.sol": {
        "keccak256": "0x22fb8588dff1d5cff76a28111d6c9b190765d99facd93c8ff3b54771f245c0d8",
        "urls": [
          "bzz-raw://5ecd993f00de290a3c7bf21da23a9439cf2ccb22028316df92b79780ac8aa533",
          "dweb:/ipfs/QmTZ7x7U4EEzTacqapzSdFs2np5WNsqm4XeUBqzQxxDJei"
        ],
        "license": "AGPL-3.0-only"
      },
      "node_modules/@uma/core/contracts/data-verification-mechanism/implementation/Constants.sol": {
        "keccak256": "0xe40957105a9240c6bcb9753fd0011fe9f382c437cd6771c57bf7a96f8ceb9c84",
        "urls": [
          "bzz-raw://cbf0d25e841b1f5c4022d09fb29220cb428139443cb29c4ab8dbfff71dffcc05",
          "dweb:/ipfs/QmSVVr5wH1tZi6WmKyuy1K8yS6JN4DeK5kWaZpPKtXiqkK"
        ],
        "license": "AGPL-3.0-only"
      },
      "node_modules/@uma/core/contracts/data-verification-mechanism/interfaces/FinderInterface.sol": {
        "keccak256": "0x9166fbfe08e954eb86d33c114fcde7ce4fd0dda5d9d28b31210582bfc769fa86",
        "urls": [
          "bzz-raw://e611e12bcaaebfdf65b67c566ff1d34708e757f01a445bd87c55862e89383b81",
          "dweb:/ipfs/QmYNSq5oopTShdS6j4VWKqoLxmQSRKmWebCxw6K4LfmKrf"
        ],
        "license": "AGPL-3.0-only"
      },
      "node_modules/@uma/core/contracts/data-verification-mechanism/interfaces/IdentifierWhitelistInterface.sol": {
        "keccak256": "0x9ae86a30dd1a8c03fb2c6d27be570bb30c4c0b13ac63cde8620b7e4b51d88dc9",
        "urls": [
          "bzz-raw://a71d2aff48e075ecab56a9c9767775d1d77e04ec9191fed124e71003220549e3",
          "dweb:/ipfs/QmYPWsZXro6fzqpZY6UxQ5X8znEXfLp2sun8oXzdz8bTyc"
        ],
        "license": "AGPL-3.0-only"
      },
      "node_modules/@uma/core/contracts/data-verification-mechanism/interfaces/OracleAncillaryInterface.sol": {
        "keccak256": "0xd58b41fe1e389f7871db7c04f2c05c1aac1d0455bbc521534da81fd657016a1f",
        "urls": [
          "bzz-raw://cc532e9c550bb1bba0daa33fda748590cd06ce94a9566fe65dac04e7d40977bc",
          "dweb:/ipfs/QmZKvfRW2LJFt5MWZbKuU9ujkXnS2hkPUJVj8wwJWcuZGX"
        ],
        "license": "AGPL-3.0-only"
      },
      "node_modules/@uma/core/contracts/data-verification-mechanism/interfaces/StoreInterface.sol": {
        "keccak256": "0xbb73671684309c91ad5ef3da1474051d03f2e7d5882bed7f5c4317e5d4c768df",
        "urls": [
          "bzz-raw://32386544d3119fd0187a8c4e8b01c739f508ab863faa04345cabc2544081f9e8",
          "dweb:/ipfs/QmYszDURs1x75rsejZkGt9zCkASXnJtufbNsL3XHe2eJPQ"
        ],
        "license": "AGPL-3.0-only"
      },
      "node_modules/@uma/core/contracts/optimistic-oracle-v3/implementation/OptimisticOracleV3.sol": {
        "keccak256": "0xeba5082c48c3d891f2422b8c0d1d5d6552ab47b5d538db7ff05ffb2f3db25ffc",
        "urls": [
          "bzz-raw://d818630e1c094792613a0539aa0a7677ca8fa92a5308eaf4ff7cf8ea8a4c547e",
          "dweb:/ipfs/QmSM78A3afY6osh4VAmyJX2E4Qyg4qcY1KwY5uFnSK4Yia"
        ],
        "license": "AGPL-3.0-only"
      },
      "node_modules/@uma/core/contracts/optimistic-oracle-v3/implementation/test/AssertingCallerTest.sol": {
        "keccak256": "0x212dafde3707bc594b103f3baef2612e521d5cced481d81938938cc5c6fc4068",
        "urls": [
          "bzz-raw://21e87397b59f9529a3e9ed9ef821f83f1a73bf685c2ec37dc70a2fbfc79aa441",
          "dweb:/ipfs/QmRmBzN3ztihHgeHzir1tz2MGsCrLM2Krc7ozQ4MiQe8jt"
        ],
        "license": "AGPL-3.0-only"
      },
      "node_modules/@uma/core/contracts/optimistic-oracle-v3/interfaces/EscalationManagerInterface.sol": {
        "keccak256": "0xce31adf62ae47468bab181bf1137b05e8ac0a003f019c343ac137a76ea32efc7",
        "urls": [
          "bzz-raw://eb1b93b648adf4130fdfe7a62d817cda0519e7760a50b90f16a3c46cee4c0967",
          "dweb:/ipfs/QmNPD4TRAm9kqqQDKQabqZgaorkJNov96iLgxsm5HRTSZN"
        ],
        "license": "AGPL-3.0-only"
      },
      "node_modules/@uma/core/contracts/optimistic-oracle-v3/interfaces/OptimisticOracleV3CallbackRecipientInterface.sol": {
        "keccak256": "0x79f90bc84ed5d394380e99f0a5d1b219abd9016bc3a02fad0099014af08af03e",
        "urls": [
          "bzz-raw://dc1b7b847eb711750bc76ab45a13294b05fc09e361294a6bdffb90cb15f50b63",
          "dweb:/ipfs/QmQSs2R7mmGojGdNkqP75Vf7LajRkfJ1oGuYAUCHYGmPEQ"
        ],
        "license": "AGPL-3.0-only"
      },
      "node_modules/@uma/core/contracts/optimistic-oracle-v3/interfaces/OptimisticOracleV3Interface.sol": {
        "keccak256": "0xf31322bfd64854f0bfa92051d6ec711c1eed15d8042f394f5c24c05378218367",
        "urls": [
          "bzz-raw://535bc2a6060e86a49524fd3c0062afcf83077530cefb3c1b8179b832f03ca81e",
          "dweb:/ipfs/QmQZhqn6oUiebSWEKbqcmiMGkqAb8B59WsRAyFU8WY84ct"
        ],
        "license": "AGPL-3.0-only"
      }
    },
    "version": 1
  },
  "ast": {
    "absolutePath": "node_modules/@uma/core/contracts/optimistic-oracle-v3/implementation/test/AssertingCallerTest.sol",
    "id": 52109,
    "exportedSymbols": {
      "Address": [
        45619
      ],
      "AddressWhitelist": [
        46235
      ],
      "AddressWhitelistInterface": [
        49565
      ],
      "AncillaryData": [
        46643
      ],
      "AssertingCallerTest": [
        52108
      ],
      "Context": [
        45641
      ],
      "EscalationManagerInterface": [
        52212
      ],
      "FinderInterface": [
        50187
      ],
      "FixedPoint": [
        48499
      ],
      "IERC20": [
        45075
      ],
      "IdentifierWhitelistInterface": [
        50211
      ],
      "Lockable": [
        48576
      ],
      "MultiCaller": [
        48655
      ],
      "OptimisticOracleConstraints": [
        49667
      ],
      "OptimisticOracleV3": [
        52025
      ],
      "OptimisticOracleV3CallbackRecipientInterface": [
        52230
      ],
      "OptimisticOracleV3Interface": [
        52420
      ],
      "OracleAncillaryInterface": [
        50249
      ],
      "OracleInterfaces": [
        49662
      ],
      "Ownable": [
        44409
      ],
      "SafeERC20": [
        45324
      ],
      "SafeMath": [
        45953
      ],
      "SignedSafeMath": [
        46017
      ],
      "StoreInterface": [
        50294
      ]
    },
    "nodeType": "SourceUnit",
    "src": "42:1196:52",
    "nodes": [
      {
        "id": 52027,
        "nodeType": "PragmaDirective",
        "src": "42:23:52",
        "nodes": [],
        "literals": [
          "solidity",
          "0.8",
          ".16"
        ]
      },
      {
        "id": 52028,
        "nodeType": "ImportDirective",
        "src": "67:35:52",
        "nodes": [],
        "absolutePath": "node_modules/@uma/core/contracts/optimistic-oracle-v3/implementation/OptimisticOracleV3.sol",
        "file": "../OptimisticOracleV3.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 52109,
        "sourceUnit": 52026,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 52108,
        "nodeType": "ContractDefinition",
        "src": "170:1067:52",
        "nodes": [
          {
            "id": 52032,
            "nodeType": "UsingForDirective",
            "src": "205:27:52",
            "nodes": [],
            "global": false,
            "libraryName": {
              "id": 52029,
              "name": "SafeERC20",
              "nameLocations": [
                "211:9:52"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 45324,
              "src": "211:9:52"
            },
            "typeName": {
              "id": 52031,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 52030,
                "name": "IERC20",
                "nameLocations": [
                  "225:6:52"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 45075,
                "src": "225:6:52"
              },
              "referencedDeclaration": 45075,
              "src": "225:6:52",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IERC20_$45075",
                "typeString": "contract IERC20"
              }
            }
          },
          {
            "id": 52035,
            "nodeType": "VariableDeclaration",
            "src": "238:47:52",
            "nodes": [],
            "constant": false,
            "mutability": "immutable",
            "name": "optimisticOracleV3",
            "nameLocation": "267:18:52",
            "scope": 52108,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_OptimisticOracleV3_$52025",
              "typeString": "contract OptimisticOracleV3"
            },
            "typeName": {
              "id": 52034,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 52033,
                "name": "OptimisticOracleV3",
                "nameLocations": [
                  "238:18:52"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 52025,
                "src": "238:18:52"
              },
              "referencedDeclaration": 52025,
              "src": "238:18:52",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_OptimisticOracleV3_$52025",
                "typeString": "contract OptimisticOracleV3"
              }
            },
            "visibility": "internal"
          },
          {
            "id": 52046,
            "nodeType": "FunctionDefinition",
            "src": "292:109:52",
            "nodes": [],
            "body": {
              "id": 52045,
              "nodeType": "Block",
              "src": "344:57:52",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 52043,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 52041,
                      "name": "optimisticOracleV3",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 52035,
                      "src": "354:18:52",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_OptimisticOracleV3_$52025",
                        "typeString": "contract OptimisticOracleV3"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 52042,
                      "name": "_optimisticOracleV3",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 52038,
                      "src": "375:19:52",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_OptimisticOracleV3_$52025",
                        "typeString": "contract OptimisticOracleV3"
                      }
                    },
                    "src": "354:40:52",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_OptimisticOracleV3_$52025",
                      "typeString": "contract OptimisticOracleV3"
                    }
                  },
                  "id": 52044,
                  "nodeType": "ExpressionStatement",
                  "src": "354:40:52"
                }
              ]
            },
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "parameters": {
              "id": 52039,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 52038,
                  "mutability": "mutable",
                  "name": "_optimisticOracleV3",
                  "nameLocation": "323:19:52",
                  "nodeType": "VariableDeclaration",
                  "scope": 52046,
                  "src": "304:38:52",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_OptimisticOracleV3_$52025",
                    "typeString": "contract OptimisticOracleV3"
                  },
                  "typeName": {
                    "id": 52037,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 52036,
                      "name": "OptimisticOracleV3",
                      "nameLocations": [
                        "304:18:52"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 52025,
                      "src": "304:18:52"
                    },
                    "referencedDeclaration": 52025,
                    "src": "304:18:52",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_OptimisticOracleV3_$52025",
                      "typeString": "contract OptimisticOracleV3"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "303:40:52"
            },
            "returnParameters": {
              "id": 52040,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "344:0:52"
            },
            "scope": 52108,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 52107,
            "nodeType": "FunctionDefinition",
            "src": "529:706:52",
            "nodes": [],
            "body": {
              "id": 52106,
              "nodeType": "Block",
              "src": "817:418:52",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 52071,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "853:3:52",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 52072,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "857:6:52",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "853:10:52",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 52075,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "873:4:52",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_AssertingCallerTest_$52108",
                              "typeString": "contract AssertingCallerTest"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_AssertingCallerTest_$52108",
                              "typeString": "contract AssertingCallerTest"
                            }
                          ],
                          "id": 52074,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "865:7:52",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 52073,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "865:7:52",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 52076,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "865:13:52",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 52077,
                        "name": "bond",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 52059,
                        "src": "880:4:52",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 52068,
                        "name": "currency",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 52057,
                        "src": "827:8:52",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$45075",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 52070,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "836:16:52",
                      "memberName": "safeTransferFrom",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 45157,
                      "src": "827:25:52",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$45075_$_t_address_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20_$45075_$",
                        "typeString": "function (contract IERC20,address,address,uint256)"
                      }
                    },
                    "id": 52078,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "827:58:52",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 52079,
                  "nodeType": "ExpressionStatement",
                  "src": "827:58:52"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 52085,
                            "name": "optimisticOracleV3",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 52035,
                            "src": "924:18:52",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_OptimisticOracleV3_$52025",
                              "typeString": "contract OptimisticOracleV3"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_OptimisticOracleV3_$52025",
                              "typeString": "contract OptimisticOracleV3"
                            }
                          ],
                          "id": 52084,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "916:7:52",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 52083,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "916:7:52",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 52086,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "916:27:52",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 52087,
                        "name": "bond",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 52059,
                        "src": "945:4:52",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 52080,
                        "name": "currency",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 52057,
                        "src": "895:8:52",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$45075",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 52082,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "904:11:52",
                      "memberName": "safeApprove",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 45201,
                      "src": "895:20:52",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$45075_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20_$45075_$",
                        "typeString": "function (contract IERC20,address,uint256)"
                      }
                    },
                    "id": 52088,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "895:55:52",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 52089,
                  "nodeType": "ExpressionStatement",
                  "src": "895:55:52"
                },
                {
                  "expression": {
                    "id": 52104,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 52090,
                      "name": "assertionId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 52066,
                      "src": "961:11:52",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 52093,
                          "name": "claim",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 52048,
                          "src": "1019:5:52",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_memory_ptr",
                            "typeString": "bytes memory"
                          }
                        },
                        {
                          "expression": {
                            "id": 52094,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "1038:3:52",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 52095,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "1042:6:52",
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "1038:10:52",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        {
                          "id": 52096,
                          "name": "callbackRecipient",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 52050,
                          "src": "1062:17:52",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        {
                          "id": 52097,
                          "name": "escalationManager",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 52052,
                          "src": "1093:17:52",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        {
                          "id": 52098,
                          "name": "liveness",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 52054,
                          "src": "1124:8:52",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint64",
                            "typeString": "uint64"
                          }
                        },
                        {
                          "id": 52099,
                          "name": "currency",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 52057,
                          "src": "1146:8:52",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IERC20_$45075",
                            "typeString": "contract IERC20"
                          }
                        },
                        {
                          "id": 52100,
                          "name": "bond",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 52059,
                          "src": "1168:4:52",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "id": 52101,
                          "name": "identifier",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 52061,
                          "src": "1186:10:52",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        {
                          "id": 52102,
                          "name": "domainId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 52063,
                          "src": "1210:8:52",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_bytes_memory_ptr",
                            "typeString": "bytes memory"
                          },
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          {
                            "typeIdentifier": "t_uint64",
                            "typeString": "uint64"
                          },
                          {
                            "typeIdentifier": "t_contract$_IERC20_$45075",
                            "typeString": "contract IERC20"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          },
                          {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        ],
                        "expression": {
                          "id": 52091,
                          "name": "optimisticOracleV3",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 52035,
                          "src": "975:18:52",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_OptimisticOracleV3_$52025",
                            "typeString": "contract OptimisticOracleV3"
                          }
                        },
                        "id": 52092,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "994:11:52",
                        "memberName": "assertTruth",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 51106,
                        "src": "975:30:52",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_nonpayable$_t_bytes_memory_ptr_$_t_address_$_t_address_$_t_address_$_t_uint64_$_t_contract$_IERC20_$45075_$_t_uint256_$_t_bytes32_$_t_bytes32_$returns$_t_bytes32_$",
                          "typeString": "function (bytes memory,address,address,address,uint64,contract IERC20,uint256,bytes32,bytes32) external returns (bytes32)"
                        }
                      },
                      "id": 52103,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "975:253:52",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "src": "961:267:52",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "id": 52105,
                  "nodeType": "ExpressionStatement",
                  "src": "961:267:52"
                }
              ]
            },
            "functionSelector": "025ac24f",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "assertTruth",
            "nameLocation": "538:11:52",
            "parameters": {
              "id": 52064,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 52048,
                  "mutability": "mutable",
                  "name": "claim",
                  "nameLocation": "572:5:52",
                  "nodeType": "VariableDeclaration",
                  "scope": 52107,
                  "src": "559:18:52",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 52047,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "559:5:52",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 52050,
                  "mutability": "mutable",
                  "name": "callbackRecipient",
                  "nameLocation": "595:17:52",
                  "nodeType": "VariableDeclaration",
                  "scope": 52107,
                  "src": "587:25:52",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 52049,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "587:7:52",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 52052,
                  "mutability": "mutable",
                  "name": "escalationManager",
                  "nameLocation": "630:17:52",
                  "nodeType": "VariableDeclaration",
                  "scope": 52107,
                  "src": "622:25:52",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 52051,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "622:7:52",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 52054,
                  "mutability": "mutable",
                  "name": "liveness",
                  "nameLocation": "664:8:52",
                  "nodeType": "VariableDeclaration",
                  "scope": 52107,
                  "src": "657:15:52",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint64",
                    "typeString": "uint64"
                  },
                  "typeName": {
                    "id": 52053,
                    "name": "uint64",
                    "nodeType": "ElementaryTypeName",
                    "src": "657:6:52",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint64",
                      "typeString": "uint64"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 52057,
                  "mutability": "mutable",
                  "name": "currency",
                  "nameLocation": "689:8:52",
                  "nodeType": "VariableDeclaration",
                  "scope": 52107,
                  "src": "682:15:52",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IERC20_$45075",
                    "typeString": "contract IERC20"
                  },
                  "typeName": {
                    "id": 52056,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 52055,
                      "name": "IERC20",
                      "nameLocations": [
                        "682:6:52"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 45075,
                      "src": "682:6:52"
                    },
                    "referencedDeclaration": 45075,
                    "src": "682:6:52",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$45075",
                      "typeString": "contract IERC20"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 52059,
                  "mutability": "mutable",
                  "name": "bond",
                  "nameLocation": "715:4:52",
                  "nodeType": "VariableDeclaration",
                  "scope": 52107,
                  "src": "707:12:52",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 52058,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "707:7:52",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 52061,
                  "mutability": "mutable",
                  "name": "identifier",
                  "nameLocation": "737:10:52",
                  "nodeType": "VariableDeclaration",
                  "scope": 52107,
                  "src": "729:18:52",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 52060,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "729:7:52",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 52063,
                  "mutability": "mutable",
                  "name": "domainId",
                  "nameLocation": "765:8:52",
                  "nodeType": "VariableDeclaration",
                  "scope": 52107,
                  "src": "757:16:52",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 52062,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "757:7:52",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "549:230:52"
            },
            "returnParameters": {
              "id": 52067,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 52066,
                  "mutability": "mutable",
                  "name": "assertionId",
                  "nameLocation": "804:11:52",
                  "nodeType": "VariableDeclaration",
                  "scope": 52107,
                  "src": "796:19:52",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 52065,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "796:7:52",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "795:21:52"
            },
            "scope": 52108,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "abstract": false,
        "baseContracts": [],
        "canonicalName": "AssertingCallerTest",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          52108
        ],
        "name": "AssertingCallerTest",
        "nameLocation": "179:19:52",
        "scope": 52109,
        "usedErrors": []
      }
    ],
    "license": "AGPL-3.0-only"
  },
  "id": 52
}