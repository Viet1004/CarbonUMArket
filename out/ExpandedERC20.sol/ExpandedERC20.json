{
  "abi": [
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "_tokenName",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "_tokenSymbol",
          "type": "string"
        },
        {
          "internalType": "uint8",
          "name": "_tokenDecimals",
          "type": "uint8"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "roleId",
          "type": "uint256"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newMember",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "manager",
          "type": "address"
        }
      ],
      "name": "AddedSharedMember",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "roleId",
          "type": "uint256"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "oldMember",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "manager",
          "type": "address"
        }
      ],
      "name": "RemovedSharedMember",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "roleId",
          "type": "uint256"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newMember",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "manager",
          "type": "address"
        }
      ],
      "name": "ResetExclusiveMember",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "addBurner",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "roleId",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "newMember",
          "type": "address"
        }
      ],
      "name": "addMember",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "addMinter",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        }
      ],
      "name": "allowance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "burn",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "recipient",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "burnFrom",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "decimals",
      "outputs": [
        {
          "internalType": "uint8",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "subtractedValue",
          "type": "uint256"
        }
      ],
      "name": "decreaseAllowance",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "roleId",
          "type": "uint256"
        }
      ],
      "name": "getMember",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "roleId",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "memberToCheck",
          "type": "address"
        }
      ],
      "name": "holdsRole",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "addedValue",
          "type": "uint256"
        }
      ],
      "name": "increaseAllowance",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "recipient",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "mint",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "roleId",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "memberToRemove",
          "type": "address"
        }
      ],
      "name": "removeMember",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "roleId",
          "type": "uint256"
        }
      ],
      "name": "renounceMembership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "roleId",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "newMember",
          "type": "address"
        }
      ],
      "name": "resetMember",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "resetOwner",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "symbol",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "totalSupply",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "transfer",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "bytecode": {
    "object": "0x60806040523480156200001157600080fd5b5060405162001cb638038062001cb6833981016040819052620000349162000563565b8282600362000044838262000676565b50600462000053828262000676565b50506006805460ff191660ff8416179055506200007360008033620000a5565b6200009060015b60408051600080825260208201909252620001f5565b6200009c60026200007a565b50505062000796565b826000808281526005602052604090206001015460ff166002811115620000d057620000d062000742565b14620001235760405162461bcd60e51b815260206004820152601e60248201527f43616e6e6f74207573652061207072652d6578697374696e6720726f6c65000060448201526064015b60405180910390fd5b60008481526005602052604090206001808201805460ff1916828002179055508381556200016160028201846200033b602090811b62000a6617901c565b60008481526005602052604081206001015460ff1660028111156200018a576200018a62000742565b03620001ee5760405162461bcd60e51b815260206004820152603c602482015260008051602062001c9683398151915260448201527f20746f206d616e61676520616e206578636c757369766520726f6c650000000060648201526084016200011a565b5050505050565b826000808281526005602052604090206001015460ff16600281111562000220576200022062000742565b146200026f5760405162461bcd60e51b815260206004820152601e60248201527f43616e6e6f74207573652061207072652d6578697374696e6720726f6c65000060448201526064016200011a565b600084815260056020908152604090912060018101805460ff1916600217905584815590620002ae906003830190859062000a706200034b821b17901c565b60008481526005602052604081206001015460ff166002811115620002d757620002d762000742565b03620001ee5760405162461bcd60e51b8152602060048201526038602482015260008051602062001c9683398151915260448201527f20746f206d616e61676520612073686172656420726f6c65000000000000000060648201526084016200011a565b620003478282620003a0565b5050565b60005b81518110156200039b57620003868383838151811062000372576200037262000758565b60200260200101516200042160201b60201c565b8062000392816200076e565b9150506200034e565b505050565b6001600160a01b038116620004045760405162461bcd60e51b815260206004820152602360248201527f43616e6e6f742073657420616e206578636c757369766520726f6c6520746f2060448201526203078360ec1b60648201526084016200011a565b81546001600160a01b0319166001600160a01b0391909116179055565b6001600160a01b038116620004795760405162461bcd60e51b815260206004820152601f60248201527f43616e6e6f74206164642030783020746f20612073686172656420726f6c650060448201526064016200011a565b6001600160a01b0316600090815260209190915260409020805460ff19166001179055565b634e487b7160e01b600052604160045260246000fd5b600082601f830112620004c657600080fd5b81516001600160401b0380821115620004e357620004e36200049e565b604051601f8301601f19908116603f011681019082821181831017156200050e576200050e6200049e565b816040528381526020925086838588010111156200052b57600080fd5b600091505b838210156200054f578582018301518183018401529082019062000530565b600093810190920192909252949350505050565b6000806000606084860312156200057957600080fd5b83516001600160401b03808211156200059157600080fd5b6200059f87838801620004b4565b94506020860151915080821115620005b657600080fd5b50620005c586828701620004b4565b925050604084015160ff81168114620005dd57600080fd5b809150509250925092565b600181811c90821680620005fd57607f821691505b6020821081036200061e57634e487b7160e01b600052602260045260246000fd5b50919050565b601f8211156200039b57600081815260208120601f850160051c810160208610156200064d5750805b601f850160051c820191505b818110156200066e5782815560010162000659565b505050505050565b81516001600160401b038111156200069257620006926200049e565b620006aa81620006a38454620005e8565b8462000624565b602080601f831160018114620006e25760008415620006c95750858301515b600019600386901b1c1916600185901b1785556200066e565b600085815260208120601f198616915b828110156200071357888601518255948401946001909101908401620006f2565b5085821015620007325787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b634e487b7160e01b600052602160045260246000fd5b634e487b7160e01b600052603260045260246000fd5b6000600182016200078f57634e487b7160e01b600052601160045260246000fd5b5060010190565b6114f080620007a66000396000f3fe608060405234801561001057600080fd5b506004361061014d5760003560e01c806374d0a676116100c3578063a9059cbb1161007c578063a9059cbb146102be578063aaa14ca3146102d1578063ab3545e5146102e4578063d97c05be1461030f578063dd62ed3e14610322578063f44637ba1461035b57600080fd5b806374d0a6761461025757806379cc67901461026a5780637cdc1cb91461027d57806395d89b4114610290578063983b2d5614610298578063a457c2d7146102ab57600080fd5b8063395093511161011557806339509351146101cd57806340c10f19146101e057806342966c68146101f35780636be7658b1461020857806370a082311461021b57806373cc802a1461024457600080fd5b806306fdde0314610152578063095ea7b31461017057806318160ddd1461019357806323b872dd146101a5578063313ce567146101b8575b600080fd5b61015a61036e565b6040516101679190611183565b60405180910390f35b61018361017e3660046111ed565b610400565b6040519015158152602001610167565b6002545b604051908152602001610167565b6101836101b3366004611217565b61041a565b60065460405160ff9091168152602001610167565b6101836101db3660046111ed565b61043e565b6101836101ee3660046111ed565b61047d565b610206610201366004611253565b6104ba565b005b61020661021636600461126c565b6104f0565b610197610229366004611298565b6001600160a01b031660009081526020819052604090205490565b610206610252366004611298565b6105c6565b61020661026536600461126c565b6105d4565b6101836102783660046111ed565b6106aa565b61018361028b36600461126c565b6106de565b61015a6107a3565b6102066102a6366004611298565b6107b2565b6101836102b93660046111ed565b6107be565b6101836102cc3660046111ed565b610850565b6102066102df366004611253565b61085e565b6102f76102f2366004611253565b61091a565b6040516001600160a01b039091168152602001610167565b61020661031d36600461126c565b610986565b6101976103303660046112ba565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b610206610369366004611298565b610a5c565b60606003805461037d906112e4565b80601f01602080910402602001604051908101604052809291908181526020018280546103a9906112e4565b80156103f65780601f106103cb576101008083540402835291602001916103f6565b820191906000526020600020905b8154815290600101906020018083116103d957829003601f168201915b5050505050905090565b60003361040e818585610ab6565b60019150505b92915050565b600033610428858285610bda565b610433858585610c6c565b506001949350505050565b3360008181526001602090815260408083206001600160a01b038716845290915281205490919061040e908290869061047890879061132e565b610ab6565b6000600161048b81336106de565b6104b05760405162461bcd60e51b81526004016104a790611357565b60405180910390fd5b61040e8484610e3a565b60026104c681336106de565b6104e25760405162461bcd60e51b81526004016104a790611357565b6104ec3383610f19565b5050565b81600260008281526005602052604090206001015460ff16600281111561051957610519611341565b146105365760405162461bcd60e51b81526004016104a790611399565b600083815260056020526040902054839061055190336106de565b61056d5760405162461bcd60e51b81526004016104a7906113e5565b60008481526005602052604090206105889060030184611067565b60405133906001600160a01b0385169086907feb3e33034c392e69263b04ec0fa376dc12784a41b6676c7f31b936cbc0fbb5af90600090a450505050565b6105d1600082610986565b50565b81600260008281526005602052604090206001015460ff1660028111156105fd576105fd611341565b1461061a5760405162461bcd60e51b81526004016104a790611399565b600083815260056020526040902054839061063590336106de565b6106515760405162461bcd60e51b81526004016104a7906113e5565b600084815260056020526040902061066c9060030184611089565b60405133906001600160a01b0385169086907f63502af7324ff6db91ab38f8236a648727d9385ea6c782073dd4882d8a61a48f90600090a450505050565b600060026106b881336106de565b6106d45760405162461bcd60e51b81526004016104a790611357565b61040e8484610f19565b600082815260056020526040812060018082015460ff16600281111561070657610706611341565b036107275760028101546001600160a01b038481169116145b915050610414565b6002600182015460ff16600281111561074257610742611341565b0361076a576001600160a01b038316600090815260038201602052604090205460ff1661071f565b60405162461bcd60e51b815260206004820152600e60248201526d125b9d985b1a59081c9bdb19525960921b60448201526064016104a7565b60606004805461037d906112e4565b6105d160015b826105d4565b3360008181526001602090815260408083206001600160a01b0387168452909152812054909190838110156108435760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b60648201526084016104a7565b6104338286868403610ab6565b60003361040e818585610c6c565b80600260008281526005602052604090206001015460ff16600281111561088757610887611341565b146108a45760405162461bcd60e51b81526004016104a790611399565b816108af81336106de565b6108cb5760405162461bcd60e51b81526004016104a790611357565b60008381526005602052604090206108e69060030133611067565b6040513390819085907feb3e33034c392e69263b04ec0fa376dc12784a41b6676c7f31b936cbc0fbb5af90600090a4505050565b600081600160008281526005602052604090206001015460ff16600281111561094557610945611341565b146109625760405162461bcd60e51b81526004016104a790611429565b6000838152600560205260409020600201546001600160a01b031691505b50919050565b81600160008281526005602052604090206001015460ff1660028111156109af576109af611341565b146109cc5760405162461bcd60e51b81526004016104a790611429565b60008381526005602052604090205483906109e790336106de565b610a035760405162461bcd60e51b81526004016104a7906113e5565b6000848152600560205260409020610a1e9060020184611104565b60405133906001600160a01b0385169086907f3b855c56b409b671c7112789d022675eb639d0bcb8896f1b6197c132f799e74690600090a450505050565b6105d160026107b8565b6104ec8282611104565b60005b8151811015610ab157610a9f83838381518110610a9257610a92611478565b6020026020010151611089565b80610aa98161148e565b915050610a73565b505050565b6001600160a01b038316610b185760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b60648201526084016104a7565b6001600160a01b038216610b795760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b60648201526084016104a7565b6001600160a01b0383811660008181526001602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b6001600160a01b038381166000908152600160209081526040808320938616835292905220546000198114610c665781811015610c595760405162461bcd60e51b815260206004820152601d60248201527f45524332303a20696e73756666696369656e7420616c6c6f77616e636500000060448201526064016104a7565b610c668484848403610ab6565b50505050565b6001600160a01b038316610cd05760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b60648201526084016104a7565b6001600160a01b038216610d325760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b60648201526084016104a7565b6001600160a01b03831660009081526020819052604090205481811015610daa5760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b60648201526084016104a7565b6001600160a01b03808516600090815260208190526040808220858503905591851681529081208054849290610de190849061132e565b92505081905550826001600160a01b0316846001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef84604051610e2d91815260200190565b60405180910390a3610c66565b6001600160a01b038216610e905760405162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f20616464726573730060448201526064016104a7565b8060026000828254610ea2919061132e565b90915550506001600160a01b03821660009081526020819052604081208054839290610ecf90849061132e565b90915550506040518181526001600160a01b038316906000907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9060200160405180910390a35050565b6001600160a01b038216610f795760405162461bcd60e51b815260206004820152602160248201527f45524332303a206275726e2066726f6d20746865207a65726f206164647265736044820152607360f81b60648201526084016104a7565b6001600160a01b03821660009081526020819052604090205481811015610fed5760405162461bcd60e51b815260206004820152602260248201527f45524332303a206275726e20616d6f756e7420657863656564732062616c616e604482015261636560f01b60648201526084016104a7565b6001600160a01b038316600090815260208190526040812083830390556002805484929061101c9084906114a7565b90915550506040518281526000906001600160a01b038516907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9060200160405180910390a3505050565b6001600160a01b0316600090815260209190915260409020805460ff19169055565b6001600160a01b0381166110df5760405162461bcd60e51b815260206004820152601f60248201527f43616e6e6f74206164642030783020746f20612073686172656420726f6c650060448201526064016104a7565b6001600160a01b0316600090815260209190915260409020805460ff19166001179055565b6001600160a01b0381166111665760405162461bcd60e51b815260206004820152602360248201527f43616e6e6f742073657420616e206578636c757369766520726f6c6520746f2060448201526203078360ec1b60648201526084016104a7565b81546001600160a01b0319166001600160a01b0391909116179055565b600060208083528351808285015260005b818110156111b057858101830151858201604001528201611194565b506000604082860101526040601f19601f8301168501019250505092915050565b80356001600160a01b03811681146111e857600080fd5b919050565b6000806040838503121561120057600080fd5b611209836111d1565b946020939093013593505050565b60008060006060848603121561122c57600080fd5b611235846111d1565b9250611243602085016111d1565b9150604084013590509250925092565b60006020828403121561126557600080fd5b5035919050565b6000806040838503121561127f57600080fd5b8235915061128f602084016111d1565b90509250929050565b6000602082840312156112aa57600080fd5b6112b3826111d1565b9392505050565b600080604083850312156112cd57600080fd5b6112d6836111d1565b915061128f602084016111d1565b600181811c908216806112f857607f821691505b60208210810361098057634e487b7160e01b600052602260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b8082018082111561041457610414611318565b634e487b7160e01b600052602160045260246000fd5b60208082526022908201527f53656e64657220646f6573206e6f7420686f6c6420726571756972656420726f6040820152616c6560f01b606082015260800190565b6020808252602c908201527f4d7573742062652063616c6c6564206f6e20616e20696e697469616c697a656460408201526b2053686172656420726f6c6560a01b606082015260800190565b60208082526024908201527f43616e206f6e6c792062652063616c6c6564206279206120726f6c65206d616e60408201526330b3b2b960e11b606082015260800190565b6020808252602f908201527f4d7573742062652063616c6c6564206f6e20616e20696e697469616c697a656460408201526e204578636c757369766520726f6c6560881b606082015260800190565b634e487b7160e01b600052603260045260246000fd5b6000600182016114a0576114a0611318565b5060010190565b818103818111156104145761041461131856fea26469706673582212208961104dd3923b79c08fd49fd308093d4ed7792f1229905fa0e9f300d355f10d64736f6c63430008100033417474656d7074656420746f2075736520616e20696e76616c696420726f6c65",
    "sourceMap": "348:3222:30:-:0;;;943:459;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1067:10;1079:12;2044:5:20;:13;1067:10:30;2044:5:20;:13;:::i;:::-;-1:-1:-1;2067:7:20;:17;2077:7;2067;:17;:::i;:::-;-1:-1:-1;;1103:9:30::1;:26:::0;;-1:-1:-1;;1103:26:30::1;;::::0;::::1;;::::0;;-1:-1:-1;1139:76:30::1;-1:-1:-1::0;1190:11:30;1204:10:::1;1139:20;:76::i;:::-;1225:80;1251:12;1243:21;1288:16;::::0;;1274:11:::1;1288:16:::0;;;::::1;::::0;::::1;::::0;;;1225:17:::1;:80::i;:::-;1315;1341:12;1333:21;::::0;1315:80:::1;943:459:::0;;;348:3222;;8816:519:34;8964:6;7559:16;7533:13;;;;:5;:13;;;;;:22;;;;;:42;;;;;;;;:::i;:::-;;7525:85;;;;-1:-1:-1;;;7525:85:34;;4631:2:69;7525:85:34;;;4613:21:69;4670:2;4650:18;;;4643:30;4709:32;4689:18;;;4682:60;4759:18;;7525:85:34;;;;;;;;;8982:17:::1;9002:13:::0;;;:5:::1;:13;::::0;;;;9041:18:::1;9025:13:::0;;::::1;:34:::0;;-1:-1:-1;;9025:34:34::1;9041:18:::0;;9025:34:::1;;::::0;;-1:-1:-1;9069:34:34;;;9113:48:::1;:28;::::0;::::1;9147:13:::0;9113:33:::1;;::::0;;::::1;;;:48:::0;::::1;:::i;:::-;9226:16;9192:21:::0;;;:5:::1;:21;::::0;;;;:30:::1;;::::0;::::1;;:50;::::0;::::1;;;;;;:::i;:::-;::::0;9171:157:::1;;;::::0;-1:-1:-1;;;9171:157:34;;4990:2:69;9171:157:34::1;::::0;::::1;4972:21:69::0;5029:2;5009:18;;;5002:30;-1:-1:-1;;;;;;;;;;;5048:18:69;;;5041:62;5139:30;5119:18;;;5112:58;5187:19;;9171:157:34::1;4788:424:69::0;9171:157:34::1;8972:363;8816:519:::0;;;;:::o;7962:517::-;8117:6;7559:16;7533:13;;;;:5;:13;;;;;:22;;;;;:42;;;;;;;;:::i;:::-;;7525:85;;;;-1:-1:-1;;;7525:85:34;;4631:2:69;7525:85:34;;;4613:21:69;4670:2;4650:18;;;4643:30;4709:32;4689:18;;;4682:60;4759:18;;7525:85:34;4429:354:69;7525:85:34;8135:17:::1;8155:13:::0;;;:5:::1;:13;::::0;;;;;;;8178::::1;::::0;::::1;:31:::0;;-1:-1:-1;;8178:31:34::1;8194:15;8178:31;::::0;;8219:34;;;8155:13;8263:46:::1;::::0;:25:::1;::::0;::::1;::::0;8294:14;;8263:30:::1;;::::0;::::1;;:46:::0;::::1;:::i;:::-;8374:16;8340:21:::0;;;:5:::1;:21;::::0;;;;:30:::1;;::::0;::::1;;:50;::::0;::::1;;;;;;:::i;:::-;::::0;8319:153:::1;;;::::0;-1:-1:-1;;;8319:153:34;;5419:2:69;8319:153:34::1;::::0;::::1;5401:21:69::0;5458:2;5438:18;;;5431:30;-1:-1:-1;;;;;;;;;;;5477:18:69;;;5470:62;5568:26;5548:18;;;5541:54;5612:19;;8319:153:34::1;5217:420:69::0;695:144:34;790:42;802:14;818:13;790:11;:42::i;:::-;695:144;;:::o;1514:232::-;1624:9;1619:121;1643:14;:21;1639:1;:25;1619:121;;;1685:44;1695:14;1711;1726:1;1711:17;;;;;;;;:::i;:::-;;;;;;;1685:9;;;:44;;:::i;:::-;1666:3;;;;:::i;:::-;;;;1619:121;;;;1514:232;;:::o;327:221::-;-1:-1:-1;;;;;433:25:34;;425:73;;;;-1:-1:-1;;;425:73:34;;6213:2:69;425:73:34;;;6195:21:69;6252:2;6232:18;;;6225:30;6291:34;6271:18;;;6264:62;-1:-1:-1;;;6342:18:69;;;6335:33;6385:19;;425:73:34;6011:399:69;425:73:34;508:33;;-1:-1:-1;;;;;;508:33:34;-1:-1:-1;;;;;508:33:34;;;;;;;327:221::o;1117:228::-;-1:-1:-1;;;;;1223:27:34;;1215:71;;;;-1:-1:-1;;;1215:71:34;;6617:2:69;1215:71:34;;;6599:21:69;6656:2;6636:18;;;6629:30;6695:33;6675:18;;;6668:61;6746:18;;1215:71:34;6415:355:69;1215:71:34;-1:-1:-1;;;;;1296:35:34;:22;:35;;;;;;;;;;;:42;;-1:-1:-1;;1296:42:34;1334:4;1296:42;;;1117:228::o;14:127:69:-;75:10;70:3;66:20;63:1;56:31;106:4;103:1;96:15;130:4;127:1;120:15;146:840;200:5;253:3;246:4;238:6;234:17;230:27;220:55;;271:1;268;261:12;220:55;294:13;;-1:-1:-1;;;;;356:10:69;;;353:36;;;369:18;;:::i;:::-;444:2;438:9;412:2;498:13;;-1:-1:-1;;494:22:69;;;518:2;490:31;486:40;474:53;;;542:18;;;562:22;;;539:46;536:72;;;588:18;;:::i;:::-;628:10;624:2;617:22;663:2;655:6;648:18;685:4;675:14;;730:3;725:2;720;712:6;708:15;704:24;701:33;698:53;;;747:1;744;737:12;698:53;769:1;760:10;;779:133;793:2;790:1;787:9;779:133;;;881:14;;;877:23;;871:30;850:14;;;846:23;;839:63;804:10;;;;779:133;;;954:1;932:15;;;928:24;;;921:35;;;;936:6;146:840;-1:-1:-1;;;;146:840:69:o;991:712::-;1097:6;1105;1113;1166:2;1154:9;1145:7;1141:23;1137:32;1134:52;;;1182:1;1179;1172:12;1134:52;1209:16;;-1:-1:-1;;;;;1274:14:69;;;1271:34;;;1301:1;1298;1291:12;1271:34;1324:61;1377:7;1368:6;1357:9;1353:22;1324:61;:::i;:::-;1314:71;;1431:2;1420:9;1416:18;1410:25;1394:41;;1460:2;1450:8;1447:16;1444:36;;;1476:1;1473;1466:12;1444:36;;1499:63;1554:7;1543:8;1532:9;1528:24;1499:63;:::i;:::-;1489:73;;;1605:2;1594:9;1590:18;1584:25;1649:4;1642:5;1638:16;1631:5;1628:27;1618:55;;1669:1;1666;1659:12;1618:55;1692:5;1682:15;;;991:712;;;;;:::o;1708:380::-;1787:1;1783:12;;;;1830;;;1851:61;;1905:4;1897:6;1893:17;1883:27;;1851:61;1958:2;1950:6;1947:14;1927:18;1924:38;1921:161;;2004:10;1999:3;1995:20;1992:1;1985:31;2039:4;2036:1;2029:15;2067:4;2064:1;2057:15;1921:161;;1708:380;;;:::o;2219:545::-;2321:2;2316:3;2313:11;2310:448;;;2357:1;2382:5;2378:2;2371:17;2427:4;2423:2;2413:19;2497:2;2485:10;2481:19;2478:1;2474:27;2468:4;2464:38;2533:4;2521:10;2518:20;2515:47;;;-1:-1:-1;2556:4:69;2515:47;2611:2;2606:3;2602:12;2599:1;2595:20;2589:4;2585:31;2575:41;;2666:82;2684:2;2677:5;2674:13;2666:82;;;2729:17;;;2710:1;2699:13;2666:82;;;2670:3;;;2219:545;;;:::o;2940:1352::-;3060:10;;-1:-1:-1;;;;;3082:30:69;;3079:56;;;3115:18;;:::i;:::-;3144:97;3234:6;3194:38;3226:4;3220:11;3194:38;:::i;:::-;3188:4;3144:97;:::i;:::-;3296:4;;3360:2;3349:14;;3377:1;3372:663;;;;4079:1;4096:6;4093:89;;;-1:-1:-1;4148:19:69;;;4142:26;4093:89;-1:-1:-1;;2897:1:69;2893:11;;;2889:24;2885:29;2875:40;2921:1;2917:11;;;2872:57;4195:81;;3342:944;;3372:663;2166:1;2159:14;;;2203:4;2190:18;;-1:-1:-1;;3408:20:69;;;3526:236;3540:7;3537:1;3534:14;3526:236;;;3629:19;;;3623:26;3608:42;;3721:27;;;;3689:1;3677:14;;;;3556:19;;3526:236;;;3530:3;3790:6;3781:7;3778:19;3775:201;;;3851:19;;;3845:26;-1:-1:-1;;3934:1:69;3930:14;;;3946:3;3926:24;3922:37;3918:42;3903:58;3888:74;;3775:201;-1:-1:-1;;;;;4022:1:69;4006:14;;;4002:22;3989:36;;-1:-1:-1;2940:1352:69:o;4297:127::-;4358:10;4353:3;4349:20;4346:1;4339:31;4389:4;4386:1;4379:15;4413:4;4410:1;4403:15;5642:127;5703:10;5698:3;5694:20;5691:1;5684:31;5734:4;5731:1;5724:15;5758:4;5755:1;5748:15;5774:232;5813:3;5834:17;;;5831:140;;5893:10;5888:3;5884:20;5881:1;5874:31;5928:4;5925:1;5918:15;5956:4;5953:1;5946:15;5831:140;-1:-1:-1;5998:1:69;5987:13;;5774:232::o;6415:355::-;348:3222:30;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x608060405234801561001057600080fd5b506004361061014d5760003560e01c806374d0a676116100c3578063a9059cbb1161007c578063a9059cbb146102be578063aaa14ca3146102d1578063ab3545e5146102e4578063d97c05be1461030f578063dd62ed3e14610322578063f44637ba1461035b57600080fd5b806374d0a6761461025757806379cc67901461026a5780637cdc1cb91461027d57806395d89b4114610290578063983b2d5614610298578063a457c2d7146102ab57600080fd5b8063395093511161011557806339509351146101cd57806340c10f19146101e057806342966c68146101f35780636be7658b1461020857806370a082311461021b57806373cc802a1461024457600080fd5b806306fdde0314610152578063095ea7b31461017057806318160ddd1461019357806323b872dd146101a5578063313ce567146101b8575b600080fd5b61015a61036e565b6040516101679190611183565b60405180910390f35b61018361017e3660046111ed565b610400565b6040519015158152602001610167565b6002545b604051908152602001610167565b6101836101b3366004611217565b61041a565b60065460405160ff9091168152602001610167565b6101836101db3660046111ed565b61043e565b6101836101ee3660046111ed565b61047d565b610206610201366004611253565b6104ba565b005b61020661021636600461126c565b6104f0565b610197610229366004611298565b6001600160a01b031660009081526020819052604090205490565b610206610252366004611298565b6105c6565b61020661026536600461126c565b6105d4565b6101836102783660046111ed565b6106aa565b61018361028b36600461126c565b6106de565b61015a6107a3565b6102066102a6366004611298565b6107b2565b6101836102b93660046111ed565b6107be565b6101836102cc3660046111ed565b610850565b6102066102df366004611253565b61085e565b6102f76102f2366004611253565b61091a565b6040516001600160a01b039091168152602001610167565b61020661031d36600461126c565b610986565b6101976103303660046112ba565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b610206610369366004611298565b610a5c565b60606003805461037d906112e4565b80601f01602080910402602001604051908101604052809291908181526020018280546103a9906112e4565b80156103f65780601f106103cb576101008083540402835291602001916103f6565b820191906000526020600020905b8154815290600101906020018083116103d957829003601f168201915b5050505050905090565b60003361040e818585610ab6565b60019150505b92915050565b600033610428858285610bda565b610433858585610c6c565b506001949350505050565b3360008181526001602090815260408083206001600160a01b038716845290915281205490919061040e908290869061047890879061132e565b610ab6565b6000600161048b81336106de565b6104b05760405162461bcd60e51b81526004016104a790611357565b60405180910390fd5b61040e8484610e3a565b60026104c681336106de565b6104e25760405162461bcd60e51b81526004016104a790611357565b6104ec3383610f19565b5050565b81600260008281526005602052604090206001015460ff16600281111561051957610519611341565b146105365760405162461bcd60e51b81526004016104a790611399565b600083815260056020526040902054839061055190336106de565b61056d5760405162461bcd60e51b81526004016104a7906113e5565b60008481526005602052604090206105889060030184611067565b60405133906001600160a01b0385169086907feb3e33034c392e69263b04ec0fa376dc12784a41b6676c7f31b936cbc0fbb5af90600090a450505050565b6105d1600082610986565b50565b81600260008281526005602052604090206001015460ff1660028111156105fd576105fd611341565b1461061a5760405162461bcd60e51b81526004016104a790611399565b600083815260056020526040902054839061063590336106de565b6106515760405162461bcd60e51b81526004016104a7906113e5565b600084815260056020526040902061066c9060030184611089565b60405133906001600160a01b0385169086907f63502af7324ff6db91ab38f8236a648727d9385ea6c782073dd4882d8a61a48f90600090a450505050565b600060026106b881336106de565b6106d45760405162461bcd60e51b81526004016104a790611357565b61040e8484610f19565b600082815260056020526040812060018082015460ff16600281111561070657610706611341565b036107275760028101546001600160a01b038481169116145b915050610414565b6002600182015460ff16600281111561074257610742611341565b0361076a576001600160a01b038316600090815260038201602052604090205460ff1661071f565b60405162461bcd60e51b815260206004820152600e60248201526d125b9d985b1a59081c9bdb19525960921b60448201526064016104a7565b60606004805461037d906112e4565b6105d160015b826105d4565b3360008181526001602090815260408083206001600160a01b0387168452909152812054909190838110156108435760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b60648201526084016104a7565b6104338286868403610ab6565b60003361040e818585610c6c565b80600260008281526005602052604090206001015460ff16600281111561088757610887611341565b146108a45760405162461bcd60e51b81526004016104a790611399565b816108af81336106de565b6108cb5760405162461bcd60e51b81526004016104a790611357565b60008381526005602052604090206108e69060030133611067565b6040513390819085907feb3e33034c392e69263b04ec0fa376dc12784a41b6676c7f31b936cbc0fbb5af90600090a4505050565b600081600160008281526005602052604090206001015460ff16600281111561094557610945611341565b146109625760405162461bcd60e51b81526004016104a790611429565b6000838152600560205260409020600201546001600160a01b031691505b50919050565b81600160008281526005602052604090206001015460ff1660028111156109af576109af611341565b146109cc5760405162461bcd60e51b81526004016104a790611429565b60008381526005602052604090205483906109e790336106de565b610a035760405162461bcd60e51b81526004016104a7906113e5565b6000848152600560205260409020610a1e9060020184611104565b60405133906001600160a01b0385169086907f3b855c56b409b671c7112789d022675eb639d0bcb8896f1b6197c132f799e74690600090a450505050565b6105d160026107b8565b6104ec8282611104565b60005b8151811015610ab157610a9f83838381518110610a9257610a92611478565b6020026020010151611089565b80610aa98161148e565b915050610a73565b505050565b6001600160a01b038316610b185760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b60648201526084016104a7565b6001600160a01b038216610b795760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b60648201526084016104a7565b6001600160a01b0383811660008181526001602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b6001600160a01b038381166000908152600160209081526040808320938616835292905220546000198114610c665781811015610c595760405162461bcd60e51b815260206004820152601d60248201527f45524332303a20696e73756666696369656e7420616c6c6f77616e636500000060448201526064016104a7565b610c668484848403610ab6565b50505050565b6001600160a01b038316610cd05760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b60648201526084016104a7565b6001600160a01b038216610d325760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b60648201526084016104a7565b6001600160a01b03831660009081526020819052604090205481811015610daa5760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b60648201526084016104a7565b6001600160a01b03808516600090815260208190526040808220858503905591851681529081208054849290610de190849061132e565b92505081905550826001600160a01b0316846001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef84604051610e2d91815260200190565b60405180910390a3610c66565b6001600160a01b038216610e905760405162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f20616464726573730060448201526064016104a7565b8060026000828254610ea2919061132e565b90915550506001600160a01b03821660009081526020819052604081208054839290610ecf90849061132e565b90915550506040518181526001600160a01b038316906000907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9060200160405180910390a35050565b6001600160a01b038216610f795760405162461bcd60e51b815260206004820152602160248201527f45524332303a206275726e2066726f6d20746865207a65726f206164647265736044820152607360f81b60648201526084016104a7565b6001600160a01b03821660009081526020819052604090205481811015610fed5760405162461bcd60e51b815260206004820152602260248201527f45524332303a206275726e20616d6f756e7420657863656564732062616c616e604482015261636560f01b60648201526084016104a7565b6001600160a01b038316600090815260208190526040812083830390556002805484929061101c9084906114a7565b90915550506040518281526000906001600160a01b038516907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9060200160405180910390a3505050565b6001600160a01b0316600090815260209190915260409020805460ff19169055565b6001600160a01b0381166110df5760405162461bcd60e51b815260206004820152601f60248201527f43616e6e6f74206164642030783020746f20612073686172656420726f6c650060448201526064016104a7565b6001600160a01b0316600090815260209190915260409020805460ff19166001179055565b6001600160a01b0381166111665760405162461bcd60e51b815260206004820152602360248201527f43616e6e6f742073657420616e206578636c757369766520726f6c6520746f2060448201526203078360ec1b60648201526084016104a7565b81546001600160a01b0319166001600160a01b0391909116179055565b600060208083528351808285015260005b818110156111b057858101830151858201604001528201611194565b506000604082860101526040601f19601f8301168501019250505092915050565b80356001600160a01b03811681146111e857600080fd5b919050565b6000806040838503121561120057600080fd5b611209836111d1565b946020939093013593505050565b60008060006060848603121561122c57600080fd5b611235846111d1565b9250611243602085016111d1565b9150604084013590509250925092565b60006020828403121561126557600080fd5b5035919050565b6000806040838503121561127f57600080fd5b8235915061128f602084016111d1565b90509250929050565b6000602082840312156112aa57600080fd5b6112b3826111d1565b9392505050565b600080604083850312156112cd57600080fd5b6112d6836111d1565b915061128f602084016111d1565b600181811c908216806112f857607f821691505b60208210810361098057634e487b7160e01b600052602260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b8082018082111561041457610414611318565b634e487b7160e01b600052602160045260246000fd5b60208082526022908201527f53656e64657220646f6573206e6f7420686f6c6420726571756972656420726f6040820152616c6560f01b606082015260800190565b6020808252602c908201527f4d7573742062652063616c6c6564206f6e20616e20696e697469616c697a656460408201526b2053686172656420726f6c6560a01b606082015260800190565b60208082526024908201527f43616e206f6e6c792062652063616c6c6564206279206120726f6c65206d616e60408201526330b3b2b960e11b606082015260800190565b6020808252602f908201527f4d7573742062652063616c6c6564206f6e20616e20696e697469616c697a656460408201526e204578636c757369766520726f6c6560881b606082015260800190565b634e487b7160e01b600052603260045260246000fd5b6000600182016114a0576114a0611318565b5060010190565b818103818111156104145761041461131856fea26469706673582212208961104dd3923b79c08fd49fd308093d4ed7792f1229905fa0e9f300d355f10d64736f6c63430008100033",
    "sourceMap": "348:3222:30:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2156:98:20;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4433:197;;;;;;:::i;:::-;;:::i;:::-;;;1169:14:69;;1162:22;1144:41;;1132:2;1117:18;4433:197:20;1004:187:69;3244:106:20;3331:12;;3244:106;;;1342:25:69;;;1330:2;1315:18;3244:106:20;1196:177:69;5192:286:20;;;;;;:::i;:::-;;:::i;1408:105:30:-;1497:9;;1408:105;;1497:9;;;;1853:36:69;;1841:2;1826:18;1408:105:30;1711:184:69;5873:236:20;;;;;;:::i;:::-;;:::i;1754:216:30:-;;;;;;:::i;:::-;;:::i;2094:126::-;;;;;;:::i;:::-;;:::i;:::-;;6404:262:34;;;;;;:::i;:::-;;:::i;3408:125:20:-;;;;;;:::i;:::-;-1:-1:-1;;;;;3508:18:20;3482:7;3508:18;;;;;;;;;;;;3408:125;3446:122:30;;;;;;:::i;:::-;;:::i;5790:239:34:-;;;;;;:::i;:::-;;:::i;2449:220:30:-;;;;;;:::i;:::-;;:::i;3945:428:34:-;;;;;;:::i;:::-;;:::i;2367:102:20:-;;;:::i;2852:120:30:-;;;;;;:::i;:::-;;:::i;6596:429:20:-;;;;;;:::i;:::-;;:::i;3729:189::-;;;;;;:::i;:::-;;:::i;6933:235:34:-;;;;;;:::i;:::-;;:::i;5284:160::-;;;;;;:::i;:::-;;:::i;:::-;;;-1:-1:-1;;;;;2699:32:69;;;2681:51;;2669:2;2654:18;5284:160:34;2535:203:69;4731:252:34;;;;;;:::i;:::-;;:::i;3976:149:20:-;;;;;;:::i;:::-;-1:-1:-1;;;;;4091:18:20;;;4065:7;4091:18;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;3976:149;3155:120:30;;;;;;:::i;:::-;;:::i;2156:98:20:-;2210:13;2242:5;2235:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2156:98;:::o;4433:197::-;4516:4;719:10:25;4570:32:20;719:10:25;4586:7:20;4595:6;4570:8;:32::i;:::-;4619:4;4612:11;;;4433:197;;;;;:::o;5192:286::-;5319:4;719:10:25;5375:38:20;5391:4;719:10:25;5406:6:20;5375:15;:38::i;:::-;5423:27;5433:4;5439:2;5443:6;5423:9;:27::i;:::-;-1:-1:-1;5467:4:20;;5192:286;-1:-1:-1;;;;5192:286:20:o;5873:236::-;719:10:25;5961:4:20;6040:18;;;:11;:18;;;;;;;;-1:-1:-1;;;;;6040:27:20;;;;;;;;;;5961:4;;719:10:25;6015:66:20;;719:10:25;;6040:27:20;;:40;;6070:10;;6040:40;:::i;:::-;6015:8;:66::i;1754:216:30:-;1899:4;1867:12;2713:29:34;2723:6;2731:10;2713:9;:29::i;:::-;2705:76;;;;-1:-1:-1;;;2705:76:34;;;;;;;:::i;:::-;;;;;;;;;1919:23:30::1;1925:9;1936:5;1919;:23::i;2094:126::-:0;2164:12;2713:29:34;2723:6;2731:10;2713:9;:29::i;:::-;2705:76;;;;-1:-1:-1;;;2705:76:34;;;;;;;:::i;:::-;2189:24:30::1;2195:10;2207:5;2189;:24::i;:::-;2094:126:::0;;:::o;6404:262:34:-;6484:6;3551:15;3525:13;;;;:5;:13;;;;;:22;;;;;:41;;;;;;;;:::i;:::-;;3517:98;;;;-1:-1:-1;;;3517:98:34;;;;;;;:::i;:::-;2989:13:::1;::::0;;;:5:::1;:13;::::0;;;;:26;6508:6;;2979:49:::1;::::0;3017:10:::1;2979:9;:49::i;:::-;2971:98;;;;-1:-1:-1::0;;;2971:98:34::1;;;;;;;:::i;:::-;6526:13:::2;::::0;;;:5:::2;:13;::::0;;;;:63:::2;::::0;:34:::2;;6574:14:::0;6526:47:::2;:63::i;:::-;6604:55;::::0;6648:10:::2;::::0;-1:-1:-1;;;;;6604:55:34;::::2;::::0;6624:6;;6604:55:::2;::::0;;;::::2;3625:1:::1;6404:262:::0;;;:::o;3446:122:30:-;3519:42;3539:11;3553:7;3519:11;:42::i;:::-;3446:122;:::o;5790:239:34:-;5862:6;3551:15;3525:13;;;;:5;:13;;;;;:22;;;;;:41;;;;;;;;:::i;:::-;;3517:98;;;;-1:-1:-1;;;3517:98:34;;;;;;;:::i;:::-;2989:13:::1;::::0;;;:5:::1;:13;::::0;;;;:26;5886:6;;2979:49:::1;::::0;3017:10:::1;2979:9;:49::i;:::-;2971:98;;;;-1:-1:-1::0;;;2971:98:34::1;;;;;;;:::i;:::-;5904:13:::2;::::0;;;:5:::2;:13;::::0;;;;:55:::2;::::0;:34:::2;;5949:9:::0;5904:44:::2;:55::i;:::-;5974:48;::::0;6011:10:::2;::::0;-1:-1:-1;;;;;5974:48:34;::::2;::::0;5992:6;;5974:48:::2;::::0;;;::::2;3625:1:::1;5790:239:::0;;;:::o;2449:220:30:-;2598:4;2566:12;2713:29:34;2723:6;2731:10;2713:9;:29::i;:::-;2705:76;;;;-1:-1:-1;;;2705:76:34;;;;;;;:::i;:::-;2618:23:30::1;2624:9;2635:5;2618;:23::i;3945:428:34:-:0;4024:4;4060:13;;;:5;:13;;;;;4104:18;4087:13;;;;;;:35;;;;;;;;:::i;:::-;;4083:250;;4145:28;;;276:21;-1:-1:-1;;;;;276:38:34;;;:21;;:38;4145:52;4138:59;;;;;4083:250;4235:15;4218:13;;;;;;:32;;;;;;;;:::i;:::-;;4214:119;;-1:-1:-1;;;;;1067:37:34;;1044:4;1067:37;;;4273:25;;;1067:37;;;;;;;;4273:49;941:170;4214:119;4342:24;;-1:-1:-1;;;4342:24:34;;5210:2:69;4342:24:34;;;5192:21:69;5249:2;5229:18;;;5222:30;-1:-1:-1;;;5268:18:69;;;5261:44;5322:18;;4342:24:34;5008:338:69;2367:102:20;2423:13;2455:7;2448:14;;;;;:::i;2852:120:30:-;2924:41;2942:12;2934:21;2957:7;2924:9;:41::i;6596:429:20:-;719:10:25;6689:4:20;6770:18;;;:11;:18;;;;;;;;-1:-1:-1;;;;;6770:27:20;;;;;;;;;;6689:4;;719:10:25;6815:35:20;;;;6807:85;;;;-1:-1:-1;;;6807:85:20;;5553:2:69;6807:85:20;;;5535:21:69;5592:2;5572:18;;;5565:30;5631:34;5611:18;;;5604:62;-1:-1:-1;;;5682:18:69;;;5675:35;5727:19;;6807:85:20;5351:401:69;6807:85:20;6926:60;6935:5;6942:7;6970:15;6951:16;:34;6926:8;:60::i;3729:189::-;3808:4;719:10:25;3862:28:20;719:10:25;3879:2:20;3883:6;3862:9;:28::i;6933:235:34:-;6995:6;3551:15;3525:13;;;;:5;:13;;;;;:22;;;;;:41;;;;;;;;:::i;:::-;;3517:98;;;;-1:-1:-1;;;3517:98:34;;;;;;;:::i;:::-;7018:6:::1;2713:29;2723:6;2731:10;2713:9;:29::i;:::-;2705:76;;;;-1:-1:-1::0;;;2705:76:34::1;;;;;;;:::i;:::-;7036:13:::2;::::0;;;:5:::2;:13;::::0;;;;:59:::2;::::0;:34:::2;;7084:10;7036:47;:59::i;:::-;7110:51;::::0;7150:10:::2;::::0;;;7130:6;;7110:51:::2;::::0;;;::::2;3625:1:::1;6933:235:::0;;:::o;5284:160::-;5362:7;5345:6;3278:18;3252:13;;;;:5;:13;;;;;:22;;;;;:44;;;;;;;;:::i;:::-;;3244:104;;;;-1:-1:-1;;;3244:104:34;;;;;;;:::i;:::-;5388:13:::1;::::0;;;:5:::1;:13;::::0;;;;:37:::1;;661:21:::0;-1:-1:-1;;;;;661:21:34;5381:56:::1;;3358:1;5284:160:::0;;;;:::o;4731:252::-;4808:6;3278:18;3252:13;;;;:5;:13;;;;;:22;;;;;:44;;;;;;;;:::i;:::-;;3244:104;;;;-1:-1:-1;;;3244:104:34;;;;;;;:::i;:::-;2989:13:::1;::::0;;;:5:::1;:13;::::0;;;;:26;4832:6;;2979:49:::1;::::0;3017:10:::1;2979:9;:49::i;:::-;2971:98;;;;-1:-1:-1::0;;;2971:98:34::1;;;;;;;:::i;:::-;4850:13:::2;::::0;;;:5:::2;:13;::::0;;;;:60:::2;::::0;:37:::2;;4900:9:::0;4850:49:::2;:60::i;:::-;4925:51;::::0;4965:10:::2;::::0;-1:-1:-1;;;;;4925:51:34;::::2;::::0;4946:6;;4925:51:::2;::::0;;;::::2;3358:1:::1;4731:252:::0;;;:::o;3155:120:30:-;3227:41;3245:12;3237:21;;695:144:34;790:42;802:14;818:13;790:11;:42::i;1514:232::-;1624:9;1619:121;1643:14;:21;1639:1;:25;1619:121;;;1685:44;1695:14;1711;1726:1;1711:17;;;;;;;;:::i;:::-;;;;;;;1685:9;:44::i;:::-;1666:3;;;;:::i;:::-;;;;1619:121;;;;1514:232;;:::o;10123:370:20:-;-1:-1:-1;;;;;10254:19:20;;10246:68;;;;-1:-1:-1;;;10246:68:20;;6647:2:69;10246:68:20;;;6629:21:69;6686:2;6666:18;;;6659:30;6725:34;6705:18;;;6698:62;-1:-1:-1;;;6776:18:69;;;6769:34;6820:19;;10246:68:20;6445:400:69;10246:68:20;-1:-1:-1;;;;;10332:21:20;;10324:68;;;;-1:-1:-1;;;10324:68:20;;7052:2:69;10324:68:20;;;7034:21:69;7091:2;7071:18;;;7064:30;7130:34;7110:18;;;7103:62;-1:-1:-1;;;7181:18:69;;;7174:32;7223:19;;10324:68:20;6850:398:69;10324:68:20;-1:-1:-1;;;;;10403:18:20;;;;;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;:36;;;10454:32;;1342:25:69;;;10454:32:20;;1315:18:69;10454:32:20;;;;;;;10123:370;;;:::o;10770:441::-;-1:-1:-1;;;;;4091:18:20;;;10900:24;4091:18;;;:11;:18;;;;;;;;:27;;;;;;;;;;-1:-1:-1;;10966:37:20;;10962:243;;11047:6;11027:16;:26;;11019:68;;;;-1:-1:-1;;;11019:68:20;;7455:2:69;11019:68:20;;;7437:21:69;7494:2;7474:18;;;7467:30;7533:31;7513:18;;;7506:59;7582:18;;11019:68:20;7253:353:69;11019:68:20;11129:51;11138:5;11145:7;11173:6;11154:16;:25;11129:8;:51::i;:::-;10890:321;10770:441;;;:::o;7488:651::-;-1:-1:-1;;;;;7614:18:20;;7606:68;;;;-1:-1:-1;;;7606:68:20;;7813:2:69;7606:68:20;;;7795:21:69;7852:2;7832:18;;;7825:30;7891:34;7871:18;;;7864:62;-1:-1:-1;;;7942:18:69;;;7935:35;7987:19;;7606:68:20;7611:401:69;7606:68:20;-1:-1:-1;;;;;7692:16:20;;7684:64;;;;-1:-1:-1;;;7684:64:20;;8219:2:69;7684:64:20;;;8201:21:69;8258:2;8238:18;;;8231:30;8297:34;8277:18;;;8270:62;-1:-1:-1;;;8348:18:69;;;8341:33;8391:19;;7684:64:20;8017:399:69;7684:64:20;-1:-1:-1;;;;;7830:15:20;;7808:19;7830:15;;;;;;;;;;;7863:21;;;;7855:72;;;;-1:-1:-1;;;7855:72:20;;8623:2:69;7855:72:20;;;8605:21:69;8662:2;8642:18;;;8635:30;8701:34;8681:18;;;8674:62;-1:-1:-1;;;8752:18:69;;;8745:36;8798:19;;7855:72:20;8421:402:69;7855:72:20;-1:-1:-1;;;;;7961:15:20;;;:9;:15;;;;;;;;;;;7979:20;;;7961:38;;8019:13;;;;;;;;:23;;7993:6;;7961:9;8019:23;;7993:6;;8019:23;:::i;:::-;;;;;;;;8073:2;-1:-1:-1;;;;;8058:26:20;8067:4;-1:-1:-1;;;;;8058:26:20;;8077:6;8058:26;;;;1342:25:69;;1330:2;1315:18;;1196:177;8058:26:20;;;;;;;;8095:37;1514:232:34;8415:389:20;-1:-1:-1;;;;;8498:21:20;;8490:65;;;;-1:-1:-1;;;8490:65:20;;9030:2:69;8490:65:20;;;9012:21:69;9069:2;9049:18;;;9042:30;9108:33;9088:18;;;9081:61;9159:18;;8490:65:20;8828:355:69;8490:65:20;8642:6;8626:12;;:22;;;;;;;:::i;:::-;;;;-1:-1:-1;;;;;;;8658:18:20;;:9;:18;;;;;;;;;;:28;;8680:6;;8658:9;:28;;8680:6;;8658:28;:::i;:::-;;;;-1:-1:-1;;8701:37:20;;1342:25:69;;;-1:-1:-1;;;;;8701:37:20;;;8718:1;;8701:37;;1330:2:69;1315:18;8701:37:20;;;;;;;2094:126:30;;:::o;9124:576:20:-;-1:-1:-1;;;;;9207:21:20;;9199:67;;;;-1:-1:-1;;;9199:67:20;;9390:2:69;9199:67:20;;;9372:21:69;9429:2;9409:18;;;9402:30;9468:34;9448:18;;;9441:62;-1:-1:-1;;;9519:18:69;;;9512:31;9560:19;;9199:67:20;9188:397:69;9199:67:20;-1:-1:-1;;;;;9362:18:20;;9337:22;9362:18;;;;;;;;;;;9398:24;;;;9390:71;;;;-1:-1:-1;;;9390:71:20;;9792:2:69;9390:71:20;;;9774:21:69;9831:2;9811:18;;;9804:30;9870:34;9850:18;;;9843:62;-1:-1:-1;;;9921:18:69;;;9914:32;9963:19;;9390:71:20;9590:398:69;9390:71:20;-1:-1:-1;;;;;9495:18:20;;:9;:18;;;;;;;;;;9516:23;;;9495:44;;9559:12;:22;;9533:6;;9495:9;9559:22;;9533:6;;9559:22;:::i;:::-;;;;-1:-1:-1;;9597:37:20;;1342:25:69;;;9623:1:20;;-1:-1:-1;;;;;9597:37:20;;;;;1330:2:69;1315:18;9597:37:20;;;;;;;1619:121:34;1514:232;;:::o;1351:157::-;-1:-1:-1;;;;;1455:38:34;1496:5;1455:38;;;;;;;;;;;:46;;-1:-1:-1;;1455:46:34;;;1351:157::o;1117:228::-;-1:-1:-1;;;;;1223:27:34;;1215:71;;;;-1:-1:-1;;;1215:71:34;;10328:2:69;1215:71:34;;;10310:21:69;10367:2;10347:18;;;10340:30;10406:33;10386:18;;;10379:61;10457:18;;1215:71:34;10126:355:69;1215:71:34;-1:-1:-1;;;;;1296:35:34;:22;:35;;;;;;;;;;;:42;;-1:-1:-1;;1296:42:34;1334:4;1296:42;;;1117:228::o;327:221::-;-1:-1:-1;;;;;433:25:34;;425:73;;;;-1:-1:-1;;;425:73:34;;10688:2:69;425:73:34;;;10670:21:69;10727:2;10707:18;;;10700:30;10766:34;10746:18;;;10739:62;-1:-1:-1;;;10817:18:69;;;10810:33;10860:19;;425:73:34;10486:399:69;425:73:34;508:33;;-1:-1:-1;;;;;;508:33:34;-1:-1:-1;;;;;508:33:34;;;;;;;327:221::o;14:548:69:-;126:4;155:2;184;173:9;166:21;216:6;210:13;259:6;254:2;243:9;239:18;232:34;284:1;294:140;308:6;305:1;302:13;294:140;;;403:14;;;399:23;;393:30;369:17;;;388:2;365:26;358:66;323:10;;294:140;;;298:3;483:1;478:2;469:6;458:9;454:22;450:31;443:42;553:2;546;542:7;537:2;529:6;525:15;521:29;510:9;506:45;502:54;494:62;;;;14:548;;;;:::o;567:173::-;635:20;;-1:-1:-1;;;;;684:31:69;;674:42;;664:70;;730:1;727;720:12;664:70;567:173;;;:::o;745:254::-;813:6;821;874:2;862:9;853:7;849:23;845:32;842:52;;;890:1;887;880:12;842:52;913:29;932:9;913:29;:::i;:::-;903:39;989:2;974:18;;;;961:32;;-1:-1:-1;;;745:254:69:o;1378:328::-;1455:6;1463;1471;1524:2;1512:9;1503:7;1499:23;1495:32;1492:52;;;1540:1;1537;1530:12;1492:52;1563:29;1582:9;1563:29;:::i;:::-;1553:39;;1611:38;1645:2;1634:9;1630:18;1611:38;:::i;:::-;1601:48;;1696:2;1685:9;1681:18;1668:32;1658:42;;1378:328;;;;;:::o;1900:180::-;1959:6;2012:2;2000:9;1991:7;1987:23;1983:32;1980:52;;;2028:1;2025;2018:12;1980:52;-1:-1:-1;2051:23:69;;1900:180;-1:-1:-1;1900:180:69:o;2085:254::-;2153:6;2161;2214:2;2202:9;2193:7;2189:23;2185:32;2182:52;;;2230:1;2227;2220:12;2182:52;2266:9;2253:23;2243:33;;2295:38;2329:2;2318:9;2314:18;2295:38;:::i;:::-;2285:48;;2085:254;;;;;:::o;2344:186::-;2403:6;2456:2;2444:9;2435:7;2431:23;2427:32;2424:52;;;2472:1;2469;2462:12;2424:52;2495:29;2514:9;2495:29;:::i;:::-;2485:39;2344:186;-1:-1:-1;;;2344:186:69:o;2743:260::-;2811:6;2819;2872:2;2860:9;2851:7;2847:23;2843:32;2840:52;;;2888:1;2885;2878:12;2840:52;2911:29;2930:9;2911:29;:::i;:::-;2901:39;;2959:38;2993:2;2982:9;2978:18;2959:38;:::i;3008:380::-;3087:1;3083:12;;;;3130;;;3151:61;;3205:4;3197:6;3193:17;3183:27;;3151:61;3258:2;3250:6;3247:14;3227:18;3224:38;3221:161;;3304:10;3299:3;3295:20;3292:1;3285:31;3339:4;3336:1;3329:15;3367:4;3364:1;3357:15;3393:127;3454:10;3449:3;3445:20;3442:1;3435:31;3485:4;3482:1;3475:15;3509:4;3506:1;3499:15;3525:125;3590:9;;;3611:10;;;3608:36;;;3624:18;;:::i;3655:127::-;3716:10;3711:3;3707:20;3704:1;3697:31;3747:4;3744:1;3737:15;3771:4;3768:1;3761:15;3787:398;3989:2;3971:21;;;4028:2;4008:18;;;4001:30;4067:34;4062:2;4047:18;;4040:62;-1:-1:-1;;;4133:2:69;4118:18;;4111:32;4175:3;4160:19;;3787:398::o;4190:408::-;4392:2;4374:21;;;4431:2;4411:18;;;4404:30;4470:34;4465:2;4450:18;;4443:62;-1:-1:-1;;;4536:2:69;4521:18;;4514:42;4588:3;4573:19;;4190:408::o;4603:400::-;4805:2;4787:21;;;4844:2;4824:18;;;4817:30;4883:34;4878:2;4863:18;;4856:62;-1:-1:-1;;;4949:2:69;4934:18;;4927:34;4993:3;4978:19;;4603:400::o;5757:411::-;5959:2;5941:21;;;5998:2;5978:18;;;5971:30;6037:34;6032:2;6017:18;;6010:62;-1:-1:-1;;;6103:2:69;6088:18;;6081:45;6158:3;6143:19;;5757:411::o;6173:127::-;6234:10;6229:3;6225:20;6222:1;6215:31;6265:4;6262:1;6255:15;6289:4;6286:1;6279:15;6305:135;6344:3;6365:17;;;6362:43;;6385:18;;:::i;:::-;-1:-1:-1;6432:1:69;6421:13;;6305:135::o;9993:128::-;10060:9;;;10081:11;;;10078:37;;;10095:18;;:::i",
    "linkReferences": {}
  },
  "methodIdentifiers": {
    "addBurner(address)": "f44637ba",
    "addMember(uint256,address)": "74d0a676",
    "addMinter(address)": "983b2d56",
    "allowance(address,address)": "dd62ed3e",
    "approve(address,uint256)": "095ea7b3",
    "balanceOf(address)": "70a08231",
    "burn(uint256)": "42966c68",
    "burnFrom(address,uint256)": "79cc6790",
    "decimals()": "313ce567",
    "decreaseAllowance(address,uint256)": "a457c2d7",
    "getMember(uint256)": "ab3545e5",
    "holdsRole(uint256,address)": "7cdc1cb9",
    "increaseAllowance(address,uint256)": "39509351",
    "mint(address,uint256)": "40c10f19",
    "name()": "06fdde03",
    "removeMember(uint256,address)": "6be7658b",
    "renounceMembership(uint256)": "aaa14ca3",
    "resetMember(uint256,address)": "d97c05be",
    "resetOwner(address)": "73cc802a",
    "symbol()": "95d89b41",
    "totalSupply()": "18160ddd",
    "transfer(address,uint256)": "a9059cbb",
    "transferFrom(address,address,uint256)": "23b872dd"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.16+commit.07a7930e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_tokenName\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_tokenSymbol\",\"type\":\"string\"},{\"internalType\":\"uint8\",\"name\":\"_tokenDecimals\",\"type\":\"uint8\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"roleId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newMember\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"manager\",\"type\":\"address\"}],\"name\":\"AddedSharedMember\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"roleId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"oldMember\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"manager\",\"type\":\"address\"}],\"name\":\"RemovedSharedMember\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"roleId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newMember\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"manager\",\"type\":\"address\"}],\"name\":\"ResetExclusiveMember\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"addBurner\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"roleId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"newMember\",\"type\":\"address\"}],\"name\":\"addMember\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"addMinter\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"burnFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"roleId\",\"type\":\"uint256\"}],\"name\":\"getMember\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"roleId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"memberToCheck\",\"type\":\"address\"}],\"name\":\"holdsRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"roleId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"memberToRemove\",\"type\":\"address\"}],\"name\":\"removeMember\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"roleId\",\"type\":\"uint256\"}],\"name\":\"renounceMembership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"roleId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"newMember\",\"type\":\"address\"}],\"name\":\"resetMember\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"resetOwner\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"addBurner(address)\":{\"details\":\"The caller must have the Owner role.\",\"params\":{\"account\":\"The address to which the Burner role is added.\"}},\"addMember(uint256,address)\":{\"details\":\"Reverts if `roleId` does not represent an initialized, SharedRole or if the caller is not a member of the managing role for `roleId`.\",\"params\":{\"newMember\":\"the new SharedRole member.\",\"roleId\":\"the SharedRole membership to modify.\"}},\"addMinter(address)\":{\"details\":\"The caller must have the Owner role.\",\"params\":{\"account\":\"The address to which the Minter role is added.\"}},\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"burn(uint256)\":{\"details\":\"Burns `value` tokens owned by `msg.sender`.\",\"params\":{\"value\":\"amount of tokens to burn.\"}},\"burnFrom(address,uint256)\":{\"details\":\"Burns `value` tokens owned by `recipient`.\",\"params\":{\"recipient\":\"address to burn tokens from.\",\"value\":\"amount of tokens to burn.\"},\"returns\":{\"_0\":\"True if the burn succeeded, or False.\"}},\"constructor\":{\"params\":{\"_tokenDecimals\":\"The number of decimals to define token precision.\",\"_tokenName\":\"The name which describes the new token.\",\"_tokenSymbol\":\"The ticker abbreviation of the name. Ideally < 5 chars.\"}},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless this function is overridden; NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"decreaseAllowance(address,uint256)\":{\"details\":\"Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`.\"},\"getMember(uint256)\":{\"details\":\"Reverts if `roleId` does not represent an initialized, exclusive role.\",\"params\":{\"roleId\":\"the ExclusiveRole membership to check.\"},\"returns\":{\"_0\":\"the address of the current ExclusiveRole member.\"}},\"holdsRole(uint256,address)\":{\"details\":\"Reverts if roleId does not correspond to an initialized role.\",\"params\":{\"memberToCheck\":\"the address to check.\",\"roleId\":\"the Role to check.\"},\"returns\":{\"_0\":\"True if `memberToCheck` is a member of `roleId`.\"}},\"increaseAllowance(address,uint256)\":{\"details\":\"Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address.\"},\"mint(address,uint256)\":{\"details\":\"Mints `value` tokens to `recipient`, returning true on success.\",\"params\":{\"recipient\":\"address to mint to.\",\"value\":\"amount of tokens to mint.\"},\"returns\":{\"_0\":\"True if the mint succeeded, or False.\"}},\"name()\":{\"details\":\"Returns the name of the token.\"},\"removeMember(uint256,address)\":{\"details\":\"Reverts if `roleId` does not represent an initialized, SharedRole or if the caller is not a member of the managing role for `roleId`.\",\"params\":{\"memberToRemove\":\"the current SharedRole member to remove.\",\"roleId\":\"the SharedRole membership to modify.\"}},\"renounceMembership(uint256)\":{\"details\":\"Reverts if the caller is not a member of the role for `roleId` or if `roleId` is not an initialized, SharedRole.\",\"params\":{\"roleId\":\"the SharedRole membership to modify.\"}},\"resetMember(uint256,address)\":{\"details\":\"Reverts if the caller is not a member of the managing role for `roleId` or if `roleId` is not an initialized, ExclusiveRole.\",\"params\":{\"newMember\":\"the new ExclusiveRole member.\",\"roleId\":\"the ExclusiveRole membership to modify.\"}},\"resetOwner(address)\":{\"details\":\"The caller must have the Owner role.\",\"params\":{\"account\":\"The new holder of the Owner role.\"}},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `amount`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `amount`. - the caller must have allowance for ``from``'s tokens of at least `amount`.\"}},\"title\":\"An ERC20 with permissioned burning and minting. The contract deployer will initially be the owner who is capable of adding new roles.\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"addBurner(address)\":{\"notice\":\"Add Burner role to account.\"},\"addMember(uint256,address)\":{\"notice\":\"Adds `newMember` to the shared role, `roleId`.\"},\"addMinter(address)\":{\"notice\":\"Add Minter role to account.\"},\"constructor\":{\"notice\":\"Constructs the ExpandedERC20.\"},\"getMember(uint256)\":{\"notice\":\"Gets the current holder of the exclusive role, `roleId`.\"},\"holdsRole(uint256,address)\":{\"notice\":\"Whether `memberToCheck` is a member of roleId.\"},\"removeMember(uint256,address)\":{\"notice\":\"Removes `memberToRemove` from the shared role, `roleId`.\"},\"renounceMembership(uint256)\":{\"notice\":\"Removes caller from the role, `roleId`.\"},\"resetMember(uint256,address)\":{\"notice\":\"Changes the exclusive role holder of `roleId` to `newMember`.\"},\"resetOwner(address)\":{\"notice\":\"Reset Owner role to account.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"node_modules/@uma/core/contracts/common/implementation/ExpandedERC20.sol\":\"ExpandedERC20\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@across-protocol/=node_modules/@across-protocol/\",\":@ensdomains/=node_modules/@ensdomains/\",\":@eth-optimism/=node_modules/@across-protocol/contracts/node_modules/@eth-optimism/\",\":@gnosis.pm/=node_modules/@gnosis.pm/\",\":@maticnetwork/=node_modules/@maticnetwork/\",\":@openzeppelin/=node_modules/@openzeppelin/\",\":@uma/=node_modules/@uma/\",\":@uniswap/=node_modules/@uniswap/\",\":base64-sol/=node_modules/base64-sol/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":eth-gas-reporter/=node_modules/eth-gas-reporter/\",\":forge-std/=lib/forge-std/src/\",\":hardhat-deploy/=node_modules/hardhat-deploy/\",\":hardhat/=node_modules/hardhat/\"]},\"sources\":{\"node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0xdadd41acb749920eccf40aeaa8d291adf9751399a7343561bad13e7a8d99be0b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://12af4ac016f9fdf3be5d15824f4292272aa11f6b2e0192a0f7320f5ad49bbbf0\",\"dweb:/ipfs/QmRXMpdqCgA3TYuYxBodqs5p9jGbnMW6xa2gvjppvq4TWk\"]},\"node_modules/@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xbbc8ac883ac3c0078ce5ad3e288fbb3ffcc8a30c3a98c0fda0114d64fc44fca2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87a7a5d2f6f63f84598af02b8c50ca2df2631cb8ba2453e8d95fcb17e4be9824\",\"dweb:/ipfs/QmR76hqtAcRqoFj33tmNjcWTLrgNsAaakYwnKZ8zoJtKei\"]},\"node_modules/@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x8de418a5503946cabe331f35fe242d3201a73f67f77aaeb7110acb1f30423aca\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a376d3dda2cb70536c0a45c208b29b34ac560c4cb4f513a42079f96ba47d2dd\",\"dweb:/ipfs/QmZQg6gn1sUpM8wHzwNvSnihumUCAhxD119MpXeKp8B9s8\"]},\"node_modules/@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"node_modules/@uma/core/contracts/common/implementation/ExpandedERC20.sol\":{\"keccak256\":\"0x8201459d3f78a1f97da7c421f2fbb859924d4facfc5fc235ba65d85bf12b2229\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://990c055523abe059c0e3e9dc0d631b17db960899dbfcfb2c562bc1ed9de8f140\",\"dweb:/ipfs/QmNgQP68bBrZvP2Rs4TdpESS3LFxqGgtTELZ1wm5mZqh4K\"]},\"node_modules/@uma/core/contracts/common/implementation/MultiRole.sol\":{\"keccak256\":\"0x134c5a2f847832705be631f2b4eb2a3e23a91a2f0e63560abb481e85eeebfae6\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://f1267c6ad560d1eb896575919ecca13759bf50bb82d1215e03fc1f0424ec37a6\",\"dweb:/ipfs/QmXewGxpSmSMGYmT6ZUyxCVzy2cybxicbnyCn8w87m5mo3\"]},\"node_modules/@uma/core/contracts/common/interfaces/ExpandedIERC20.sol\":{\"keccak256\":\"0xb8252039cba45f1c19cd677f150a9823a5d6e1845cad90e3041d97c96f273c26\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://95106656c95e12c30a2a4c482a859df6df55c3b56bb9f7835eb5c685ca3175d3\",\"dweb:/ipfs/QmcuJoX7T53vTCDcQK8WcCJdT1LzHS35vPmSVfg1DG32cd\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.16+commit.07a7930e"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "_tokenName",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "_tokenSymbol",
              "type": "string"
            },
            {
              "internalType": "uint8",
              "name": "_tokenDecimals",
              "type": "uint8"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "constructor"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "roleId",
              "type": "uint256",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "newMember",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "manager",
              "type": "address",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "AddedSharedMember",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "owner",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "spender",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "value",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "Approval",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "roleId",
              "type": "uint256",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "oldMember",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "manager",
              "type": "address",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "RemovedSharedMember",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "roleId",
              "type": "uint256",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "newMember",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "manager",
              "type": "address",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "ResetExclusiveMember",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "from",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "to",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "value",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "Transfer",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "account",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "addBurner"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "roleId",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "newMember",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "addMember"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "account",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "addMinter"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "owner",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "spender",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "allowance",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "spender",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "approve",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "account",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "balanceOf",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "value",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "burn"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "recipient",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "value",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "burnFrom",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "decimals",
          "outputs": [
            {
              "internalType": "uint8",
              "name": "",
              "type": "uint8"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "spender",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "subtractedValue",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "decreaseAllowance",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "roleId",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getMember",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "roleId",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "memberToCheck",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "holdsRole",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "spender",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "addedValue",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "increaseAllowance",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "recipient",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "value",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "mint",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "name",
          "outputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "roleId",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "memberToRemove",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "removeMember"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "roleId",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "renounceMembership"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "roleId",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "newMember",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "resetMember"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "account",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "resetOwner"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "symbol",
          "outputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "totalSupply",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "transfer",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "from",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "transferFrom",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {
          "addBurner(address)": {
            "details": "The caller must have the Owner role.",
            "params": {
              "account": "The address to which the Burner role is added."
            }
          },
          "addMember(uint256,address)": {
            "details": "Reverts if `roleId` does not represent an initialized, SharedRole or if the caller is not a member of the managing role for `roleId`.",
            "params": {
              "newMember": "the new SharedRole member.",
              "roleId": "the SharedRole membership to modify."
            }
          },
          "addMinter(address)": {
            "details": "The caller must have the Owner role.",
            "params": {
              "account": "The address to which the Minter role is added."
            }
          },
          "allowance(address,address)": {
            "details": "See {IERC20-allowance}."
          },
          "approve(address,uint256)": {
            "details": "See {IERC20-approve}. NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
          },
          "balanceOf(address)": {
            "details": "See {IERC20-balanceOf}."
          },
          "burn(uint256)": {
            "details": "Burns `value` tokens owned by `msg.sender`.",
            "params": {
              "value": "amount of tokens to burn."
            }
          },
          "burnFrom(address,uint256)": {
            "details": "Burns `value` tokens owned by `recipient`.",
            "params": {
              "recipient": "address to burn tokens from.",
              "value": "amount of tokens to burn."
            },
            "returns": {
              "_0": "True if the burn succeeded, or False."
            }
          },
          "constructor": {
            "params": {
              "_tokenDecimals": "The number of decimals to define token precision.",
              "_tokenName": "The name which describes the new token.",
              "_tokenSymbol": "The ticker abbreviation of the name. Ideally < 5 chars."
            }
          },
          "decimals()": {
            "details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless this function is overridden; NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
          },
          "decreaseAllowance(address,uint256)": {
            "details": "Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`."
          },
          "getMember(uint256)": {
            "details": "Reverts if `roleId` does not represent an initialized, exclusive role.",
            "params": {
              "roleId": "the ExclusiveRole membership to check."
            },
            "returns": {
              "_0": "the address of the current ExclusiveRole member."
            }
          },
          "holdsRole(uint256,address)": {
            "details": "Reverts if roleId does not correspond to an initialized role.",
            "params": {
              "memberToCheck": "the address to check.",
              "roleId": "the Role to check."
            },
            "returns": {
              "_0": "True if `memberToCheck` is a member of `roleId`."
            }
          },
          "increaseAllowance(address,uint256)": {
            "details": "Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address."
          },
          "mint(address,uint256)": {
            "details": "Mints `value` tokens to `recipient`, returning true on success.",
            "params": {
              "recipient": "address to mint to.",
              "value": "amount of tokens to mint."
            },
            "returns": {
              "_0": "True if the mint succeeded, or False."
            }
          },
          "name()": {
            "details": "Returns the name of the token."
          },
          "removeMember(uint256,address)": {
            "details": "Reverts if `roleId` does not represent an initialized, SharedRole or if the caller is not a member of the managing role for `roleId`.",
            "params": {
              "memberToRemove": "the current SharedRole member to remove.",
              "roleId": "the SharedRole membership to modify."
            }
          },
          "renounceMembership(uint256)": {
            "details": "Reverts if the caller is not a member of the role for `roleId` or if `roleId` is not an initialized, SharedRole.",
            "params": {
              "roleId": "the SharedRole membership to modify."
            }
          },
          "resetMember(uint256,address)": {
            "details": "Reverts if the caller is not a member of the managing role for `roleId` or if `roleId` is not an initialized, ExclusiveRole.",
            "params": {
              "newMember": "the new ExclusiveRole member.",
              "roleId": "the ExclusiveRole membership to modify."
            }
          },
          "resetOwner(address)": {
            "details": "The caller must have the Owner role.",
            "params": {
              "account": "The new holder of the Owner role."
            }
          },
          "symbol()": {
            "details": "Returns the symbol of the token, usually a shorter version of the name."
          },
          "totalSupply()": {
            "details": "See {IERC20-totalSupply}."
          },
          "transfer(address,uint256)": {
            "details": "See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `amount`."
          },
          "transferFrom(address,address,uint256)": {
            "details": "See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `amount`. - the caller must have allowance for ``from``'s tokens of at least `amount`."
          }
        },
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {
          "addBurner(address)": {
            "notice": "Add Burner role to account."
          },
          "addMember(uint256,address)": {
            "notice": "Adds `newMember` to the shared role, `roleId`."
          },
          "addMinter(address)": {
            "notice": "Add Minter role to account."
          },
          "constructor": {
            "notice": "Constructs the ExpandedERC20."
          },
          "getMember(uint256)": {
            "notice": "Gets the current holder of the exclusive role, `roleId`."
          },
          "holdsRole(uint256,address)": {
            "notice": "Whether `memberToCheck` is a member of roleId."
          },
          "removeMember(uint256,address)": {
            "notice": "Removes `memberToRemove` from the shared role, `roleId`."
          },
          "renounceMembership(uint256)": {
            "notice": "Removes caller from the role, `roleId`."
          },
          "resetMember(uint256,address)": {
            "notice": "Changes the exclusive role holder of `roleId` to `newMember`."
          },
          "resetOwner(address)": {
            "notice": "Reset Owner role to account."
          }
        },
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        "@across-protocol/=node_modules/@across-protocol/",
        "@ensdomains/=node_modules/@ensdomains/",
        "@eth-optimism/=node_modules/@across-protocol/contracts/node_modules/@eth-optimism/",
        "@gnosis.pm/=node_modules/@gnosis.pm/",
        "@maticnetwork/=node_modules/@maticnetwork/",
        "@openzeppelin/=node_modules/@openzeppelin/",
        "@uma/=node_modules/@uma/",
        "@uniswap/=node_modules/@uniswap/",
        "base64-sol/=node_modules/base64-sol/",
        "ds-test/=lib/forge-std/lib/ds-test/src/",
        "eth-gas-reporter/=node_modules/eth-gas-reporter/",
        "forge-std/=lib/forge-std/src/",
        "hardhat-deploy/=node_modules/hardhat-deploy/",
        "hardhat/=node_modules/hardhat/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 200
      },
      "metadata": {
        "bytecodeHash": "ipfs"
      },
      "compilationTarget": {
        "node_modules/@uma/core/contracts/common/implementation/ExpandedERC20.sol": "ExpandedERC20"
      },
      "libraries": {}
    },
    "sources": {
      "node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol": {
        "keccak256": "0xdadd41acb749920eccf40aeaa8d291adf9751399a7343561bad13e7a8d99be0b",
        "urls": [
          "bzz-raw://12af4ac016f9fdf3be5d15824f4292272aa11f6b2e0192a0f7320f5ad49bbbf0",
          "dweb:/ipfs/QmRXMpdqCgA3TYuYxBodqs5p9jGbnMW6xa2gvjppvq4TWk"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/token/ERC20/IERC20.sol": {
        "keccak256": "0xbbc8ac883ac3c0078ce5ad3e288fbb3ffcc8a30c3a98c0fda0114d64fc44fca2",
        "urls": [
          "bzz-raw://87a7a5d2f6f63f84598af02b8c50ca2df2631cb8ba2453e8d95fcb17e4be9824",
          "dweb:/ipfs/QmR76hqtAcRqoFj33tmNjcWTLrgNsAaakYwnKZ8zoJtKei"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
        "keccak256": "0x8de418a5503946cabe331f35fe242d3201a73f67f77aaeb7110acb1f30423aca",
        "urls": [
          "bzz-raw://5a376d3dda2cb70536c0a45c208b29b34ac560c4cb4f513a42079f96ba47d2dd",
          "dweb:/ipfs/QmZQg6gn1sUpM8wHzwNvSnihumUCAhxD119MpXeKp8B9s8"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/utils/Context.sol": {
        "keccak256": "0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7",
        "urls": [
          "bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92",
          "dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3"
        ],
        "license": "MIT"
      },
      "node_modules/@uma/core/contracts/common/implementation/ExpandedERC20.sol": {
        "keccak256": "0x8201459d3f78a1f97da7c421f2fbb859924d4facfc5fc235ba65d85bf12b2229",
        "urls": [
          "bzz-raw://990c055523abe059c0e3e9dc0d631b17db960899dbfcfb2c562bc1ed9de8f140",
          "dweb:/ipfs/QmNgQP68bBrZvP2Rs4TdpESS3LFxqGgtTELZ1wm5mZqh4K"
        ],
        "license": "AGPL-3.0-only"
      },
      "node_modules/@uma/core/contracts/common/implementation/MultiRole.sol": {
        "keccak256": "0x134c5a2f847832705be631f2b4eb2a3e23a91a2f0e63560abb481e85eeebfae6",
        "urls": [
          "bzz-raw://f1267c6ad560d1eb896575919ecca13759bf50bb82d1215e03fc1f0424ec37a6",
          "dweb:/ipfs/QmXewGxpSmSMGYmT6ZUyxCVzy2cybxicbnyCn8w87m5mo3"
        ],
        "license": "AGPL-3.0-only"
      },
      "node_modules/@uma/core/contracts/common/interfaces/ExpandedIERC20.sol": {
        "keccak256": "0xb8252039cba45f1c19cd677f150a9823a5d6e1845cad90e3041d97c96f273c26",
        "urls": [
          "bzz-raw://95106656c95e12c30a2a4c482a859df6df55c3b56bb9f7835eb5c685ca3175d3",
          "dweb:/ipfs/QmcuJoX7T53vTCDcQK8WcCJdT1LzHS35vPmSVfg1DG32cd"
        ],
        "license": "AGPL-3.0-only"
      }
    },
    "version": 1
  },
  "ast": {
    "absolutePath": "node_modules/@uma/core/contracts/common/implementation/ExpandedERC20.sol",
    "id": 46867,
    "exportedSymbols": {
      "Context": [
        45641
      ],
      "ERC20": [
        44997
      ],
      "Exclusive": [
        48728
      ],
      "ExpandedERC20": [
        46866
      ],
      "ExpandedIERC20": [
        49613
      ],
      "IERC20": [
        45075
      ],
      "IERC20Metadata": [
        45100
      ],
      "MultiRole": [
        49280
      ],
      "Shared": [
        48824
      ]
    },
    "nodeType": "SourceUnit",
    "src": "42:3529:30",
    "nodes": [
      {
        "id": 46645,
        "nodeType": "PragmaDirective",
        "src": "42:23:30",
        "nodes": [],
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ]
      },
      {
        "id": 46646,
        "nodeType": "ImportDirective",
        "src": "67:55:30",
        "nodes": [],
        "absolutePath": "node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol",
        "file": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 46867,
        "sourceUnit": 44998,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 46647,
        "nodeType": "ImportDirective",
        "src": "123:25:30",
        "nodes": [],
        "absolutePath": "node_modules/@uma/core/contracts/common/implementation/MultiRole.sol",
        "file": "./MultiRole.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 46867,
        "sourceUnit": 49281,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 46648,
        "nodeType": "ImportDirective",
        "src": "149:42:30",
        "nodes": [],
        "absolutePath": "node_modules/@uma/core/contracts/common/interfaces/ExpandedIERC20.sol",
        "file": "../interfaces/ExpandedIERC20.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 46867,
        "sourceUnit": 49614,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 46866,
        "nodeType": "ContractDefinition",
        "src": "348:3222:30",
        "nodes": [
          {
            "id": 46659,
            "nodeType": "EnumDefinition",
            "src": "413:214:30",
            "nodes": [],
            "canonicalName": "ExpandedERC20.Roles",
            "members": [
              {
                "id": 46656,
                "name": "Owner",
                "nameLocation": "476:5:30",
                "nodeType": "EnumValue",
                "src": "476:5:30"
              },
              {
                "id": 46657,
                "name": "Minter",
                "nameLocation": "538:6:30",
                "nodeType": "EnumValue",
                "src": "538:6:30"
              },
              {
                "id": 46658,
                "name": "Burner",
                "nameLocation": "615:6:30",
                "nodeType": "EnumValue",
                "src": "615:6:30"
              }
            ],
            "name": "Roles",
            "nameLocation": "418:5:30"
          },
          {
            "id": 46661,
            "nodeType": "VariableDeclaration",
            "src": "633:15:30",
            "nodes": [],
            "constant": false,
            "mutability": "mutable",
            "name": "_decimals",
            "nameLocation": "639:9:30",
            "scope": 46866,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint8",
              "typeString": "uint8"
            },
            "typeName": {
              "id": 46660,
              "name": "uint8",
              "nodeType": "ElementaryTypeName",
              "src": "633:5:30",
              "typeDescriptions": {
                "typeIdentifier": "t_uint8",
                "typeString": "uint8"
              }
            },
            "visibility": "internal"
          },
          {
            "id": 46731,
            "nodeType": "FunctionDefinition",
            "src": "943:459:30",
            "nodes": [],
            "body": {
              "id": 46730,
              "nodeType": "Block",
              "src": "1093:309:30",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 46677,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 46675,
                      "name": "_decimals",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 46661,
                      "src": "1103:9:30",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 46676,
                      "name": "_tokenDecimals",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 46668,
                      "src": "1115:14:30",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      }
                    },
                    "src": "1103:26:30",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "id": 46678,
                  "nodeType": "ExpressionStatement",
                  "src": "1103:26:30"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "expression": {
                              "id": 46682,
                              "name": "Roles",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 46659,
                              "src": "1168:5:30",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_enum$_Roles_$46659_$",
                                "typeString": "type(enum ExpandedERC20.Roles)"
                              }
                            },
                            "id": 46683,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberLocation": "1174:5:30",
                            "memberName": "Owner",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 46656,
                            "src": "1168:11:30",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_Roles_$46659",
                              "typeString": "enum ExpandedERC20.Roles"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_enum$_Roles_$46659",
                              "typeString": "enum ExpandedERC20.Roles"
                            }
                          ],
                          "id": 46681,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1160:7:30",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_uint256_$",
                            "typeString": "type(uint256)"
                          },
                          "typeName": {
                            "id": 46680,
                            "name": "uint256",
                            "nodeType": "ElementaryTypeName",
                            "src": "1160:7:30",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 46684,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1160:20:30",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "expression": {
                              "id": 46687,
                              "name": "Roles",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 46659,
                              "src": "1190:5:30",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_enum$_Roles_$46659_$",
                                "typeString": "type(enum ExpandedERC20.Roles)"
                              }
                            },
                            "id": 46688,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberLocation": "1196:5:30",
                            "memberName": "Owner",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 46656,
                            "src": "1190:11:30",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_Roles_$46659",
                              "typeString": "enum ExpandedERC20.Roles"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_enum$_Roles_$46659",
                              "typeString": "enum ExpandedERC20.Roles"
                            }
                          ],
                          "id": 46686,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1182:7:30",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_uint256_$",
                            "typeString": "type(uint256)"
                          },
                          "typeName": {
                            "id": 46685,
                            "name": "uint256",
                            "nodeType": "ElementaryTypeName",
                            "src": "1182:7:30",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 46689,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1182:20:30",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "expression": {
                          "id": 46690,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "1204:3:30",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 46691,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "1208:6:30",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "1204:10:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 46679,
                      "name": "_createExclusiveRole",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 49279,
                      "src": "1139:20:30",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$_t_address_$returns$__$",
                        "typeString": "function (uint256,uint256,address)"
                      }
                    },
                    "id": 46692,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1139:76:30",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 46693,
                  "nodeType": "ExpressionStatement",
                  "src": "1139:76:30"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "expression": {
                              "id": 46697,
                              "name": "Roles",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 46659,
                              "src": "1251:5:30",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_enum$_Roles_$46659_$",
                                "typeString": "type(enum ExpandedERC20.Roles)"
                              }
                            },
                            "id": 46698,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberLocation": "1257:6:30",
                            "memberName": "Minter",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 46657,
                            "src": "1251:12:30",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_Roles_$46659",
                              "typeString": "enum ExpandedERC20.Roles"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_enum$_Roles_$46659",
                              "typeString": "enum ExpandedERC20.Roles"
                            }
                          ],
                          "id": 46696,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1243:7:30",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_uint256_$",
                            "typeString": "type(uint256)"
                          },
                          "typeName": {
                            "id": 46695,
                            "name": "uint256",
                            "nodeType": "ElementaryTypeName",
                            "src": "1243:7:30",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 46699,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1243:21:30",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "expression": {
                              "id": 46702,
                              "name": "Roles",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 46659,
                              "src": "1274:5:30",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_enum$_Roles_$46659_$",
                                "typeString": "type(enum ExpandedERC20.Roles)"
                              }
                            },
                            "id": 46703,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberLocation": "1280:5:30",
                            "memberName": "Owner",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 46656,
                            "src": "1274:11:30",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_Roles_$46659",
                              "typeString": "enum ExpandedERC20.Roles"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_enum$_Roles_$46659",
                              "typeString": "enum ExpandedERC20.Roles"
                            }
                          ],
                          "id": 46701,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1266:7:30",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_uint256_$",
                            "typeString": "type(uint256)"
                          },
                          "typeName": {
                            "id": 46700,
                            "name": "uint256",
                            "nodeType": "ElementaryTypeName",
                            "src": "1266:7:30",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 46704,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1266:20:30",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "hexValue": "30",
                            "id": 46708,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "1302:1:30",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 46707,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "NewExpression",
                          "src": "1288:13:30",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_address_$dyn_memory_ptr_$",
                            "typeString": "function (uint256) pure returns (address[] memory)"
                          },
                          "typeName": {
                            "baseType": {
                              "id": 46705,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "1292:7:30",
                              "stateMutability": "nonpayable",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "id": 46706,
                            "nodeType": "ArrayTypeName",
                            "src": "1292:9:30",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                              "typeString": "address[]"
                            }
                          }
                        },
                        "id": 46709,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1288:16:30",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                          "typeString": "address[] memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                          "typeString": "address[] memory"
                        }
                      ],
                      "id": 46694,
                      "name": "_createSharedRole",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 49226,
                      "src": "1225:17:30",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$_t_array$_t_address_$dyn_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,uint256,address[] memory)"
                      }
                    },
                    "id": 46710,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1225:80:30",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 46711,
                  "nodeType": "ExpressionStatement",
                  "src": "1225:80:30"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "expression": {
                              "id": 46715,
                              "name": "Roles",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 46659,
                              "src": "1341:5:30",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_enum$_Roles_$46659_$",
                                "typeString": "type(enum ExpandedERC20.Roles)"
                              }
                            },
                            "id": 46716,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberLocation": "1347:6:30",
                            "memberName": "Burner",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 46658,
                            "src": "1341:12:30",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_Roles_$46659",
                              "typeString": "enum ExpandedERC20.Roles"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_enum$_Roles_$46659",
                              "typeString": "enum ExpandedERC20.Roles"
                            }
                          ],
                          "id": 46714,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1333:7:30",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_uint256_$",
                            "typeString": "type(uint256)"
                          },
                          "typeName": {
                            "id": 46713,
                            "name": "uint256",
                            "nodeType": "ElementaryTypeName",
                            "src": "1333:7:30",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 46717,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1333:21:30",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "expression": {
                              "id": 46720,
                              "name": "Roles",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 46659,
                              "src": "1364:5:30",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_enum$_Roles_$46659_$",
                                "typeString": "type(enum ExpandedERC20.Roles)"
                              }
                            },
                            "id": 46721,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberLocation": "1370:5:30",
                            "memberName": "Owner",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 46656,
                            "src": "1364:11:30",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_Roles_$46659",
                              "typeString": "enum ExpandedERC20.Roles"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_enum$_Roles_$46659",
                              "typeString": "enum ExpandedERC20.Roles"
                            }
                          ],
                          "id": 46719,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1356:7:30",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_uint256_$",
                            "typeString": "type(uint256)"
                          },
                          "typeName": {
                            "id": 46718,
                            "name": "uint256",
                            "nodeType": "ElementaryTypeName",
                            "src": "1356:7:30",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 46722,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1356:20:30",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "hexValue": "30",
                            "id": 46726,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "1392:1:30",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 46725,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "NewExpression",
                          "src": "1378:13:30",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_address_$dyn_memory_ptr_$",
                            "typeString": "function (uint256) pure returns (address[] memory)"
                          },
                          "typeName": {
                            "baseType": {
                              "id": 46723,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "1382:7:30",
                              "stateMutability": "nonpayable",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "id": 46724,
                            "nodeType": "ArrayTypeName",
                            "src": "1382:9:30",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                              "typeString": "address[]"
                            }
                          }
                        },
                        "id": 46727,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1378:16:30",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                          "typeString": "address[] memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                          "typeString": "address[] memory"
                        }
                      ],
                      "id": 46712,
                      "name": "_createSharedRole",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 49226,
                      "src": "1315:17:30",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$_t_array$_t_address_$dyn_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,uint256,address[] memory)"
                      }
                    },
                    "id": 46728,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1315:80:30",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 46729,
                  "nodeType": "ExpressionStatement",
                  "src": "1315:80:30"
                }
              ]
            },
            "documentation": {
              "id": 46662,
              "nodeType": "StructuredDocumentation",
              "src": "655:283:30",
              "text": " @notice Constructs the ExpandedERC20.\n @param _tokenName The name which describes the new token.\n @param _tokenSymbol The ticker abbreviation of the name. Ideally < 5 chars.\n @param _tokenDecimals The number of decimals to define token precision."
            },
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 46671,
                    "name": "_tokenName",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 46664,
                    "src": "1067:10:30",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  },
                  {
                    "id": 46672,
                    "name": "_tokenSymbol",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 46666,
                    "src": "1079:12:30",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  }
                ],
                "id": 46673,
                "kind": "baseConstructorSpecifier",
                "modifierName": {
                  "id": 46670,
                  "name": "ERC20",
                  "nameLocations": [
                    "1061:5:30"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 44997,
                  "src": "1061:5:30"
                },
                "nodeType": "ModifierInvocation",
                "src": "1061:31:30"
              }
            ],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "parameters": {
              "id": 46669,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 46664,
                  "mutability": "mutable",
                  "name": "_tokenName",
                  "nameLocation": "978:10:30",
                  "nodeType": "VariableDeclaration",
                  "scope": 46731,
                  "src": "964:24:30",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 46663,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "964:6:30",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 46666,
                  "mutability": "mutable",
                  "name": "_tokenSymbol",
                  "nameLocation": "1012:12:30",
                  "nodeType": "VariableDeclaration",
                  "scope": 46731,
                  "src": "998:26:30",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 46665,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "998:6:30",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 46668,
                  "mutability": "mutable",
                  "name": "_tokenDecimals",
                  "nameLocation": "1040:14:30",
                  "nodeType": "VariableDeclaration",
                  "scope": 46731,
                  "src": "1034:20:30",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 46667,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "1034:5:30",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "954:106:30"
            },
            "returnParameters": {
              "id": 46674,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1093:0:30"
            },
            "scope": 46866,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 46741,
            "nodeType": "FunctionDefinition",
            "src": "1408:105:30",
            "nodes": [],
            "body": {
              "id": 46740,
              "nodeType": "Block",
              "src": "1480:33:30",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 46738,
                    "name": "_decimals",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 46661,
                    "src": "1497:9:30",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "functionReturnParameters": 46737,
                  "id": 46739,
                  "nodeType": "Return",
                  "src": "1490:16:30"
                }
              ]
            },
            "baseFunctions": [
              44484
            ],
            "functionSelector": "313ce567",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "decimals",
            "nameLocation": "1417:8:30",
            "overrides": {
              "id": 46734,
              "nodeType": "OverrideSpecifier",
              "overrides": [
                {
                  "id": 46733,
                  "name": "ERC20",
                  "nameLocations": [
                    "1457:5:30"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 44997,
                  "src": "1457:5:30"
                }
              ],
              "src": "1448:15:30"
            },
            "parameters": {
              "id": 46732,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1425:2:30"
            },
            "returnParameters": {
              "id": 46737,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 46736,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 46741,
                  "src": "1473:5:30",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 46735,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "1473:5:30",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1472:7:30"
            },
            "scope": 46866,
            "stateMutability": "view",
            "virtual": true,
            "visibility": "public"
          },
          {
            "id": 46767,
            "nodeType": "FunctionDefinition",
            "src": "1754:216:30",
            "nodes": [],
            "body": {
              "id": 46766,
              "nodeType": "Block",
              "src": "1909:61:30",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 46760,
                        "name": "recipient",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 46744,
                        "src": "1925:9:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 46761,
                        "name": "value",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 46746,
                        "src": "1936:5:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 46759,
                      "name": "_mint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 44814,
                      "src": "1919:5:30",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 46762,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1919:23:30",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 46763,
                  "nodeType": "ExpressionStatement",
                  "src": "1919:23:30"
                },
                {
                  "expression": {
                    "hexValue": "74727565",
                    "id": 46764,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "1959:4:30",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "true"
                  },
                  "functionReturnParameters": 46758,
                  "id": 46765,
                  "nodeType": "Return",
                  "src": "1952:11:30"
                }
              ]
            },
            "baseFunctions": [
              49597
            ],
            "documentation": {
              "id": 46742,
              "nodeType": "StructuredDocumentation",
              "src": "1519:230:30",
              "text": " @dev Mints `value` tokens to `recipient`, returning true on success.\n @param recipient address to mint to.\n @param value amount of tokens to mint.\n @return True if the mint succeeded, or False."
            },
            "functionSelector": "40c10f19",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "arguments": [
                      {
                        "expression": {
                          "id": 46752,
                          "name": "Roles",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 46659,
                          "src": "1867:5:30",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_enum$_Roles_$46659_$",
                            "typeString": "type(enum ExpandedERC20.Roles)"
                          }
                        },
                        "id": 46753,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "memberLocation": "1873:6:30",
                        "memberName": "Minter",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 46657,
                        "src": "1867:12:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_Roles_$46659",
                          "typeString": "enum ExpandedERC20.Roles"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_enum$_Roles_$46659",
                          "typeString": "enum ExpandedERC20.Roles"
                        }
                      ],
                      "id": 46751,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "ElementaryTypeNameExpression",
                      "src": "1859:7:30",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_uint256_$",
                        "typeString": "type(uint256)"
                      },
                      "typeName": {
                        "id": 46750,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "1859:7:30",
                        "typeDescriptions": {}
                      }
                    },
                    "id": 46754,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1859:21:30",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  }
                ],
                "id": 46755,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 46749,
                  "name": "onlyRoleHolder",
                  "nameLocations": [
                    "1844:14:30"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 48894,
                  "src": "1844:14:30"
                },
                "nodeType": "ModifierInvocation",
                "src": "1844:37:30"
              }
            ],
            "name": "mint",
            "nameLocation": "1763:4:30",
            "overrides": {
              "id": 46748,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "1827:8:30"
            },
            "parameters": {
              "id": 46747,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 46744,
                  "mutability": "mutable",
                  "name": "recipient",
                  "nameLocation": "1776:9:30",
                  "nodeType": "VariableDeclaration",
                  "scope": 46767,
                  "src": "1768:17:30",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 46743,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1768:7:30",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 46746,
                  "mutability": "mutable",
                  "name": "value",
                  "nameLocation": "1795:5:30",
                  "nodeType": "VariableDeclaration",
                  "scope": 46767,
                  "src": "1787:13:30",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 46745,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1787:7:30",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1767:34:30"
            },
            "returnParameters": {
              "id": 46758,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 46757,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 46767,
                  "src": "1899:4:30",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 46756,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "1899:4:30",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1898:6:30"
            },
            "scope": 46866,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 46788,
            "nodeType": "FunctionDefinition",
            "src": "2094:126:30",
            "nodes": [],
            "body": {
              "id": 46787,
              "nodeType": "Block",
              "src": "2179:41:30",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 46782,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "2195:3:30",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 46783,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "2199:6:30",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "2195:10:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 46784,
                        "name": "value",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 46770,
                        "src": "2207:5:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 46781,
                      "name": "_burn",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 44886,
                      "src": "2189:5:30",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 46785,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2189:24:30",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 46786,
                  "nodeType": "ExpressionStatement",
                  "src": "2189:24:30"
                }
              ]
            },
            "baseFunctions": [
              49577
            ],
            "documentation": {
              "id": 46768,
              "nodeType": "StructuredDocumentation",
              "src": "1976:113:30",
              "text": " @dev Burns `value` tokens owned by `msg.sender`.\n @param value amount of tokens to burn."
            },
            "functionSelector": "42966c68",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "arguments": [
                      {
                        "expression": {
                          "id": 46776,
                          "name": "Roles",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 46659,
                          "src": "2164:5:30",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_enum$_Roles_$46659_$",
                            "typeString": "type(enum ExpandedERC20.Roles)"
                          }
                        },
                        "id": 46777,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "memberLocation": "2170:6:30",
                        "memberName": "Burner",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 46658,
                        "src": "2164:12:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_Roles_$46659",
                          "typeString": "enum ExpandedERC20.Roles"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_enum$_Roles_$46659",
                          "typeString": "enum ExpandedERC20.Roles"
                        }
                      ],
                      "id": 46775,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "ElementaryTypeNameExpression",
                      "src": "2156:7:30",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_uint256_$",
                        "typeString": "type(uint256)"
                      },
                      "typeName": {
                        "id": 46774,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "2156:7:30",
                        "typeDescriptions": {}
                      }
                    },
                    "id": 46778,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2156:21:30",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  }
                ],
                "id": 46779,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 46773,
                  "name": "onlyRoleHolder",
                  "nameLocations": [
                    "2141:14:30"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 48894,
                  "src": "2141:14:30"
                },
                "nodeType": "ModifierInvocation",
                "src": "2141:37:30"
              }
            ],
            "name": "burn",
            "nameLocation": "2103:4:30",
            "overrides": {
              "id": 46772,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "2132:8:30"
            },
            "parameters": {
              "id": 46771,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 46770,
                  "mutability": "mutable",
                  "name": "value",
                  "nameLocation": "2116:5:30",
                  "nodeType": "VariableDeclaration",
                  "scope": 46788,
                  "src": "2108:13:30",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 46769,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2108:7:30",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2107:15:30"
            },
            "returnParameters": {
              "id": 46780,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2179:0:30"
            },
            "scope": 46866,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 46814,
            "nodeType": "FunctionDefinition",
            "src": "2449:220:30",
            "nodes": [],
            "body": {
              "id": 46813,
              "nodeType": "Block",
              "src": "2608:61:30",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 46807,
                        "name": "recipient",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 46791,
                        "src": "2624:9:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 46808,
                        "name": "value",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 46793,
                        "src": "2635:5:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 46806,
                      "name": "_burn",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 44886,
                      "src": "2618:5:30",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 46809,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2618:23:30",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 46810,
                  "nodeType": "ExpressionStatement",
                  "src": "2618:23:30"
                },
                {
                  "expression": {
                    "hexValue": "74727565",
                    "id": 46811,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "2658:4:30",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "true"
                  },
                  "functionReturnParameters": 46805,
                  "id": 46812,
                  "nodeType": "Return",
                  "src": "2651:11:30"
                }
              ]
            },
            "baseFunctions": [
              49587
            ],
            "documentation": {
              "id": 46789,
              "nodeType": "StructuredDocumentation",
              "src": "2226:218:30",
              "text": " @dev Burns `value` tokens owned by `recipient`.\n @param recipient address to burn tokens from.\n @param value amount of tokens to burn.\n @return True if the burn succeeded, or False."
            },
            "functionSelector": "79cc6790",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "arguments": [
                      {
                        "expression": {
                          "id": 46799,
                          "name": "Roles",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 46659,
                          "src": "2566:5:30",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_enum$_Roles_$46659_$",
                            "typeString": "type(enum ExpandedERC20.Roles)"
                          }
                        },
                        "id": 46800,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "memberLocation": "2572:6:30",
                        "memberName": "Burner",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 46658,
                        "src": "2566:12:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_Roles_$46659",
                          "typeString": "enum ExpandedERC20.Roles"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_enum$_Roles_$46659",
                          "typeString": "enum ExpandedERC20.Roles"
                        }
                      ],
                      "id": 46798,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "ElementaryTypeNameExpression",
                      "src": "2558:7:30",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_uint256_$",
                        "typeString": "type(uint256)"
                      },
                      "typeName": {
                        "id": 46797,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "2558:7:30",
                        "typeDescriptions": {}
                      }
                    },
                    "id": 46801,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2558:21:30",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  }
                ],
                "id": 46802,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 46796,
                  "name": "onlyRoleHolder",
                  "nameLocations": [
                    "2543:14:30"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 48894,
                  "src": "2543:14:30"
                },
                "nodeType": "ModifierInvocation",
                "src": "2543:37:30"
              }
            ],
            "name": "burnFrom",
            "nameLocation": "2458:8:30",
            "overrides": {
              "id": 46795,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "2526:8:30"
            },
            "parameters": {
              "id": 46794,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 46791,
                  "mutability": "mutable",
                  "name": "recipient",
                  "nameLocation": "2475:9:30",
                  "nodeType": "VariableDeclaration",
                  "scope": 46814,
                  "src": "2467:17:30",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 46790,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2467:7:30",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 46793,
                  "mutability": "mutable",
                  "name": "value",
                  "nameLocation": "2494:5:30",
                  "nodeType": "VariableDeclaration",
                  "scope": 46814,
                  "src": "2486:13:30",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 46792,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2486:7:30",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2466:34:30"
            },
            "returnParameters": {
              "id": 46805,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 46804,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 46814,
                  "src": "2598:4:30",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 46803,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "2598:4:30",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2597:6:30"
            },
            "scope": 46866,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 46831,
            "nodeType": "FunctionDefinition",
            "src": "2852:120:30",
            "nodes": [],
            "body": {
              "id": 46830,
              "nodeType": "Block",
              "src": "2914:58:30",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "expression": {
                              "id": 46824,
                              "name": "Roles",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 46659,
                              "src": "2942:5:30",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_enum$_Roles_$46659_$",
                                "typeString": "type(enum ExpandedERC20.Roles)"
                              }
                            },
                            "id": 46825,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberLocation": "2948:6:30",
                            "memberName": "Minter",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 46657,
                            "src": "2942:12:30",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_Roles_$46659",
                              "typeString": "enum ExpandedERC20.Roles"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_enum$_Roles_$46659",
                              "typeString": "enum ExpandedERC20.Roles"
                            }
                          ],
                          "id": 46823,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "2934:7:30",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_uint256_$",
                            "typeString": "type(uint256)"
                          },
                          "typeName": {
                            "id": 46822,
                            "name": "uint256",
                            "nodeType": "ElementaryTypeName",
                            "src": "2934:7:30",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 46826,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2934:21:30",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 46827,
                        "name": "account",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 46817,
                        "src": "2957:7:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 46821,
                      "name": "addMember",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 49076,
                      "src": "2924:9:30",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_address_$returns$__$",
                        "typeString": "function (uint256,address)"
                      }
                    },
                    "id": 46828,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2924:41:30",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 46829,
                  "nodeType": "ExpressionStatement",
                  "src": "2924:41:30"
                }
              ]
            },
            "baseFunctions": [
              49602
            ],
            "documentation": {
              "id": 46815,
              "nodeType": "StructuredDocumentation",
              "src": "2675:172:30",
              "text": " @notice Add Minter role to account.\n @dev The caller must have the Owner role.\n @param account The address to which the Minter role is added."
            },
            "functionSelector": "983b2d56",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "addMinter",
            "nameLocation": "2861:9:30",
            "overrides": {
              "id": 46819,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "2905:8:30"
            },
            "parameters": {
              "id": 46818,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 46817,
                  "mutability": "mutable",
                  "name": "account",
                  "nameLocation": "2879:7:30",
                  "nodeType": "VariableDeclaration",
                  "scope": 46831,
                  "src": "2871:15:30",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 46816,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2871:7:30",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2870:17:30"
            },
            "returnParameters": {
              "id": 46820,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2914:0:30"
            },
            "scope": 46866,
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "external"
          },
          {
            "id": 46848,
            "nodeType": "FunctionDefinition",
            "src": "3155:120:30",
            "nodes": [],
            "body": {
              "id": 46847,
              "nodeType": "Block",
              "src": "3217:58:30",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "expression": {
                              "id": 46841,
                              "name": "Roles",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 46659,
                              "src": "3245:5:30",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_enum$_Roles_$46659_$",
                                "typeString": "type(enum ExpandedERC20.Roles)"
                              }
                            },
                            "id": 46842,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberLocation": "3251:6:30",
                            "memberName": "Burner",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 46658,
                            "src": "3245:12:30",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_Roles_$46659",
                              "typeString": "enum ExpandedERC20.Roles"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_enum$_Roles_$46659",
                              "typeString": "enum ExpandedERC20.Roles"
                            }
                          ],
                          "id": 46840,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "3237:7:30",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_uint256_$",
                            "typeString": "type(uint256)"
                          },
                          "typeName": {
                            "id": 46839,
                            "name": "uint256",
                            "nodeType": "ElementaryTypeName",
                            "src": "3237:7:30",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 46843,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3237:21:30",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 46844,
                        "name": "account",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 46834,
                        "src": "3260:7:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 46838,
                      "name": "addMember",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 49076,
                      "src": "3227:9:30",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_address_$returns$__$",
                        "typeString": "function (uint256,address)"
                      }
                    },
                    "id": 46845,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3227:41:30",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 46846,
                  "nodeType": "ExpressionStatement",
                  "src": "3227:41:30"
                }
              ]
            },
            "baseFunctions": [
              49607
            ],
            "documentation": {
              "id": 46832,
              "nodeType": "StructuredDocumentation",
              "src": "2978:172:30",
              "text": " @notice Add Burner role to account.\n @dev The caller must have the Owner role.\n @param account The address to which the Burner role is added."
            },
            "functionSelector": "f44637ba",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "addBurner",
            "nameLocation": "3164:9:30",
            "overrides": {
              "id": 46836,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "3208:8:30"
            },
            "parameters": {
              "id": 46835,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 46834,
                  "mutability": "mutable",
                  "name": "account",
                  "nameLocation": "3182:7:30",
                  "nodeType": "VariableDeclaration",
                  "scope": 46848,
                  "src": "3174:15:30",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 46833,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3174:7:30",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3173:17:30"
            },
            "returnParameters": {
              "id": 46837,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3217:0:30"
            },
            "scope": 46866,
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "external"
          },
          {
            "id": 46865,
            "nodeType": "FunctionDefinition",
            "src": "3446:122:30",
            "nodes": [],
            "body": {
              "id": 46864,
              "nodeType": "Block",
              "src": "3509:59:30",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "expression": {
                              "id": 46858,
                              "name": "Roles",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 46659,
                              "src": "3539:5:30",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_enum$_Roles_$46659_$",
                                "typeString": "type(enum ExpandedERC20.Roles)"
                              }
                            },
                            "id": 46859,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberLocation": "3545:5:30",
                            "memberName": "Owner",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 46656,
                            "src": "3539:11:30",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_Roles_$46659",
                              "typeString": "enum ExpandedERC20.Roles"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_enum$_Roles_$46659",
                              "typeString": "enum ExpandedERC20.Roles"
                            }
                          ],
                          "id": 46857,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "3531:7:30",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_uint256_$",
                            "typeString": "type(uint256)"
                          },
                          "typeName": {
                            "id": 46856,
                            "name": "uint256",
                            "nodeType": "ElementaryTypeName",
                            "src": "3531:7:30",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 46860,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3531:20:30",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 46861,
                        "name": "account",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 46851,
                        "src": "3553:7:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 46855,
                      "name": "resetMember",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 49027,
                      "src": "3519:11:30",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_address_$returns$__$",
                        "typeString": "function (uint256,address)"
                      }
                    },
                    "id": 46862,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3519:42:30",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 46863,
                  "nodeType": "ExpressionStatement",
                  "src": "3519:42:30"
                }
              ]
            },
            "baseFunctions": [
              49612
            ],
            "documentation": {
              "id": 46849,
              "nodeType": "StructuredDocumentation",
              "src": "3281:160:30",
              "text": " @notice Reset Owner role to account.\n @dev The caller must have the Owner role.\n @param account The new holder of the Owner role."
            },
            "functionSelector": "73cc802a",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "resetOwner",
            "nameLocation": "3455:10:30",
            "overrides": {
              "id": 46853,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "3500:8:30"
            },
            "parameters": {
              "id": 46852,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 46851,
                  "mutability": "mutable",
                  "name": "account",
                  "nameLocation": "3474:7:30",
                  "nodeType": "VariableDeclaration",
                  "scope": 46865,
                  "src": "3466:15:30",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 46850,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3466:7:30",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3465:17:30"
            },
            "returnParameters": {
              "id": 46854,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3509:0:30"
            },
            "scope": 46866,
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "external"
          }
        ],
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 46650,
              "name": "ExpandedIERC20",
              "nameLocations": [
                "374:14:30"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 49613,
              "src": "374:14:30"
            },
            "id": 46651,
            "nodeType": "InheritanceSpecifier",
            "src": "374:14:30"
          },
          {
            "baseName": {
              "id": 46652,
              "name": "ERC20",
              "nameLocations": [
                "390:5:30"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 44997,
              "src": "390:5:30"
            },
            "id": 46653,
            "nodeType": "InheritanceSpecifier",
            "src": "390:5:30"
          },
          {
            "baseName": {
              "id": 46654,
              "name": "MultiRole",
              "nameLocations": [
                "397:9:30"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 49280,
              "src": "397:9:30"
            },
            "id": 46655,
            "nodeType": "InheritanceSpecifier",
            "src": "397:9:30"
          }
        ],
        "canonicalName": "ExpandedERC20",
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 46649,
          "nodeType": "StructuredDocumentation",
          "src": "193:154:30",
          "text": " @title An ERC20 with permissioned burning and minting. The contract deployer will initially\n be the owner who is capable of adding new roles."
        },
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          46866,
          49280,
          44997,
          45100,
          49613,
          45075,
          45641
        ],
        "name": "ExpandedERC20",
        "nameLocation": "357:13:30",
        "scope": 46867,
        "usedErrors": []
      }
    ],
    "license": "AGPL-3.0-only"
  },
  "id": 30
}