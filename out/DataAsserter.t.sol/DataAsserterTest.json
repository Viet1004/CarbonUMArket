{
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "assertingCaller",
          "type": "address"
        }
      ],
      "name": "AssertingCallerSet",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "assertionId",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "caller",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "disputer",
          "type": "address"
        }
      ],
      "name": "AssertionDisputed",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "assertionId",
          "type": "bytes32"
        },
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "domainId",
          "type": "bytes32"
        },
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "claim",
          "type": "bytes"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "asserter",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "callbackRecipient",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "escalationManager",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "caller",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint64",
          "name": "expirationTime",
          "type": "uint64"
        },
        {
          "indexed": false,
          "internalType": "contract IERC20",
          "name": "currency",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "bond",
          "type": "uint256"
        },
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "identifier",
          "type": "bytes32"
        }
      ],
      "name": "AssertionMade",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "assertionId",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "bondRecipient",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "bool",
          "name": "disputed",
          "type": "bool"
        },
        {
          "indexed": false,
          "internalType": "bool",
          "name": "settlementResolution",
          "type": "bool"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "settleCaller",
          "type": "address"
        }
      ],
      "name": "AssertionSettled",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "requester",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "identifier",
          "type": "bytes32"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "time",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "ancillaryData",
          "type": "bytes"
        }
      ],
      "name": "PriceRequestAdded",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "name": "log",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "log_address",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256[]",
          "name": "val",
          "type": "uint256[]"
        }
      ],
      "name": "log_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "int256[]",
          "name": "val",
          "type": "int256[]"
        }
      ],
      "name": "log_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address[]",
          "name": "val",
          "type": "address[]"
        }
      ],
      "name": "log_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "name": "log_bytes",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "name": "log_bytes32",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "int256",
          "name": "",
          "type": "int256"
        }
      ],
      "name": "log_int",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "val",
          "type": "address"
        }
      ],
      "name": "log_named_address",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "uint256[]",
          "name": "val",
          "type": "uint256[]"
        }
      ],
      "name": "log_named_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "int256[]",
          "name": "val",
          "type": "int256[]"
        }
      ],
      "name": "log_named_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "address[]",
          "name": "val",
          "type": "address[]"
        }
      ],
      "name": "log_named_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "val",
          "type": "bytes"
        }
      ],
      "name": "log_named_bytes",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "val",
          "type": "bytes32"
        }
      ],
      "name": "log_named_bytes32",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "int256",
          "name": "val",
          "type": "int256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "decimals",
          "type": "uint256"
        }
      ],
      "name": "log_named_decimal_int",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "val",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "decimals",
          "type": "uint256"
        }
      ],
      "name": "log_named_decimal_uint",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "int256",
          "name": "val",
          "type": "int256"
        }
      ],
      "name": "log_named_int",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "val",
          "type": "string"
        }
      ],
      "name": "log_named_string",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "val",
          "type": "uint256"
        }
      ],
      "name": "log_named_uint",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "name": "log_string",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "log_uint",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "name": "logs",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "IS_TEST",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "asserter",
          "type": "address"
        },
        {
          "internalType": "bytes",
          "name": "claim",
          "type": "bytes"
        }
      ],
      "name": "_allocateBondAndAssertTruth",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "assertionId",
          "type": "bytes32"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "_commonSetup",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "mockAssertingCaller",
          "type": "address"
        },
        {
          "internalType": "bytes32",
          "name": "assertionId",
          "type": "bytes32"
        }
      ],
      "name": "_mockGetAssertionAssertingCaller",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "dataAsserter",
      "outputs": [
        {
          "internalType": "contract DataAsserter",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "excludeArtifacts",
      "outputs": [
        {
          "internalType": "string[]",
          "name": "excludedArtifacts_",
          "type": "string[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "excludeContracts",
      "outputs": [
        {
          "internalType": "address[]",
          "name": "excludedContracts_",
          "type": "address[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "excludeSenders",
      "outputs": [
        {
          "internalType": "address[]",
          "name": "excludedSenders_",
          "type": "address[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "failed",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "setUp",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "targetArtifactSelectors",
      "outputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "addr",
              "type": "address"
            },
            {
              "internalType": "bytes4[]",
              "name": "selectors",
              "type": "bytes4[]"
            }
          ],
          "internalType": "struct StdInvariant.FuzzSelector[]",
          "name": "targetedArtifactSelectors_",
          "type": "tuple[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "targetArtifacts",
      "outputs": [
        {
          "internalType": "string[]",
          "name": "targetedArtifacts_",
          "type": "string[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "targetContracts",
      "outputs": [
        {
          "internalType": "address[]",
          "name": "targetedContracts_",
          "type": "address[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "targetInterfaces",
      "outputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "addr",
              "type": "address"
            },
            {
              "internalType": "string[]",
              "name": "artifacts",
              "type": "string[]"
            }
          ],
          "internalType": "struct StdInvariant.FuzzInterface[]",
          "name": "targetedInterfaces_",
          "type": "tuple[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "targetSelectors",
      "outputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "addr",
              "type": "address"
            },
            {
              "internalType": "bytes4[]",
              "name": "selectors",
              "type": "bytes4[]"
            }
          ],
          "internalType": "struct StdInvariant.FuzzSelector[]",
          "name": "targetedSelectors_",
          "type": "tuple[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "targetSenders",
      "outputs": [
        {
          "internalType": "address[]",
          "name": "targetedSenders_",
          "type": "address[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "test_DataAssertionNoDispute",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "test_DataAssertionWithCorrectDispute",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "test_DataAssertionWithWrongDispute",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "bytecode": {
    "object": "0x60078054600160ff199182168117909255600b805490911690911781556519185d18525960d21b602b5560c060405260809081526a636f72726563744461746160a81b60a052602c9062000054908262000174565b5060408051808201909152600d81526c696e636f72726563744461746160981b6020820152602d9062000088908262000174565b5060408051808201909152600b81526a3232b9b1b934b83a34b7b760a91b6020820152602e90620000ba908262000174565b50348015620000c857600080fd5b5062000240565b634e487b7160e01b600052604160045260246000fd5b600181811c90821680620000fa57607f821691505b6020821081036200011b57634e487b7160e01b600052602260045260246000fd5b50919050565b601f8211156200016f57600081815260208120601f850160051c810160208610156200014a5750805b601f850160051c820191505b818110156200016b5782815560010162000156565b5050505b505050565b81516001600160401b03811115620001905762000190620000cf565b620001a881620001a18454620000e5565b8462000121565b602080601f831160018114620001e05760008415620001c75750858301515b600019600386901b1c1916600185901b1785556200016b565b600085815260208120601f198616915b828110156200021157888601518255948401946001909101908401620001f0565b5085821015620002305787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b62014fc280620002516000396000f3fe60806040523480156200001157600080fd5b5060043610620001395760003560e01c8063854e5aa111620000bb578063b5508aa9116200007a578063b5508aa91462000241578063ba414fa6146200024b578063e20c9f711462000266578063f40966711462000270578063fa7626d4146200029657600080fd5b8063854e5aa114620001df578063858897ab14620001e9578063916a17c614620001f35780639ffe332314620001fd578063ab30d35a146200022a57600080fd5b80633f7286f411620001085780633f7286f4146200018f57806352bb1e46146200019957806366d9a9a014620001a35780636906f5f514620001bc57806385226c8114620001c657600080fd5b80630a9254e4146200013e5780631ed7831c146200014a5780632ade3880146200016c5780633e5e3c231462000185575b600080fd5b62000148620002a4565b005b6200015462000329565b604051620001639190620037b4565b60405180910390f35b620001766200038d565b60405162000163919062003857565b62000154620004db565b620001546200053d565b620001486200059f565b620001ad6200129e565b6040516200016391906200391d565b6200014862001388565b620001d0620016e9565b604051620001639190620039d4565b62000148620017c3565b6200014862002163565b620001ad620026e8565b602a5462000211906001600160a01b031681565b6040516001600160a01b03909116815260200162000163565b620001486200023b36600462003a43565b620027d2565b620001d06200292c565b6200025562002a06565b604051901515815260200162000163565b6200015462002b39565b620002876200028136600462003b11565b62002b9b565b60405190815260200162000163565b600754620002559060ff1681565b620002ae62001388565b602054601f546040516001600160a01b039283169290911690620002d2906200378a565b6001600160a01b03928316815291166020820152604001604051809103906000f08015801562000306573d6000803e3d6000fd5b50602a80546001600160a01b0319166001600160a01b0392909216919091179055565b606060148054806020026020016040519081016040528092919081815260200182805480156200038357602002820191906000526020600020905b81546001600160a01b0316815260019091019060200180831162000364575b5050505050905090565b6060601b805480602002602001604051908101604052809291908181526020016000905b82821015620004d257600084815260208082206040805180820182526002870290920180546001600160a01b03168352600181018054835181870281018701909452808452939591948681019491929084015b82821015620004ba578382906000526020600020018054620004269062003bad565b80601f0160208091040260200160405190810160405280929190818152602001828054620004549062003bad565b8015620004a55780601f106200047957610100808354040283529160200191620004a5565b820191906000526020600020905b8154815290600101906020018083116200048757829003601f168201915b50505050508152602001906001019062000404565b505050508152505081526020019060010190620003b1565b50505050905090565b6060601680548060200260200160405190810160405280929190818152602001828054801562000383576020028201919060005260206000209081546001600160a01b0316815260019091019060200180831162000364575050505050905090565b6060601580548060200260200160405190810160405280929190818152602001828054801562000383576020028201919060005260206000209081546001600160a01b0316815260019091019060200180831162000364575050505050905090565b6040516303223eab60e11b81526002600482015260008051602062014f4d833981519152906306447d5690602401600060405180830381600087803b158015620005e857600080fd5b505af1158015620005fd573d6000803e3d6000fd5b5050602054601f54604051634360af3d60e01b81526001600160a01b039283166004820181905294506308bca566935060029290911690634360af3d90602401602060405180830381865afa1580156200065b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062000681919062003be9565b6040518363ffffffff1660e01b8152600401620006a092919062003c03565b600060405180830381600087803b158015620006bb57600080fd5b505af1158015620006d0573d6000803e3d6000fd5b5050602054602a54601f54604051634360af3d60e01b81526001600160a01b0393841660048201819052955063095ea7b39450918316921690634360af3d90602401602060405180830381865afa15801562000730573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062000756919062003be9565b6040518363ffffffff1660e01b81526004016200077592919062003c03565b6020604051808303816000875af115801562000795573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620007bb919062003c2d565b50602a54602b54604051636f40874b60e11b81526000926001600160a01b03169163de810e9691620007f79190602d90602e9060040162003cfe565b6020604051808303816000875af115801562000817573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200083d919062003be9565b905060008051602062014f6d83398151915260001c6001600160a01b03166390c5013b6040518163ffffffff1660e01b8152600401600060405180830381600087803b1580156200088d57600080fd5b505af1158015620008a2573d6000803e3d6000fd5b505050506000602a60009054906101000a90046001600160a01b03166001600160a01b03166318e557aa6040518163ffffffff1660e01b8152600401602060405180830381865afa158015620008fc573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062000922919062003d37565b6040516370a0823160e01b8152600260048201526001600160a01b0391909116906370a0823190602401602060405180830381865afa1580156200096a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062000990919062003be9565b90506000620009a28360275462002ea7565b602354909150620009bf906001600160a01b031682600062003273565b601f54604051638ea2f2ab60e01b81526004810185905262000a3a916001600160a01b031690638ea2f2ab906024016020604051808303816000875af115801562000a0e573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062000a34919062003c2d565b62003312565b602a5460408051630c72abd560e11b8152905162000b22926001600160a01b0316916318e557aa9160048083019260209291908290030181865afa15801562000a87573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062000aad919062003d37565b6040516370a0823160e01b8152600260048201526001600160a01b0391909116906370a0823190602401602060405180830381865afa15801562000af5573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062000b1b919062003be9565b8362003321565b602a5460405163599c49ed60e11b8152600481018590526000916001600160a01b03169063b33893da90602401600060405180830381865afa15801562000b6d573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405262000b97919081019062003dbd565b50935050505062000baa8160006200340b565b602a546040516354f6127f60e01b815260048101869052600091829182916001600160a01b0316906354f6127f90602401600060405180830381865afa15801562000bf9573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405262000c23919081019062003e58565b92509250925062000c348362003312565b60008051602062014f4d83398151915263e5d6bf0262000c5642600162003ed4565b6040518263ffffffff1660e01b815260040162000c7591815260200190565b600060405180830381600087803b15801562000c9057600080fd5b505af115801562000ca5573d6000803e3d6000fd5b50506040516303223eab60e11b81526002600482015260008051602062014f4d83398151915292506306447d569150602401600060405180830381600087803b15801562000cf257600080fd5b505af115801562000d07573d6000803e3d6000fd5b5050602054601f54604051634360af3d60e01b81526001600160a01b039283166004820181905294506308bca566935060029290911690634360af3d90602401602060405180830381865afa15801562000d65573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062000d8b919062003be9565b6040518363ffffffff1660e01b815260040162000daa92919062003c03565b600060405180830381600087803b15801562000dc557600080fd5b505af115801562000dda573d6000803e3d6000fd5b5050602054602a54601f54604051634360af3d60e01b81526001600160a01b0393841660048201819052955063095ea7b39450918316921690634360af3d90602401602060405180830381865afa15801562000e3a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062000e60919062003be9565b6040518363ffffffff1660e01b815260040162000e7f92919062003c03565b6020604051808303816000875af115801562000e9f573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062000ec5919062003c2d565b50602a54602b54604051636f40874b60e11b81526000926001600160a01b03169163de810e969162000f019190602c90602e9060040162003cfe565b6020604051808303816000875af115801562000f21573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062000f47919062003be9565b905060008051602062014f6d83398151915260001c6001600160a01b03166390c5013b6040518163ffffffff1660e01b8152600401600060405180830381600087803b15801562000f9757600080fd5b505af115801562000fac573d6000803e3d6000fd5b5050602154602a5460408051632dd7538960e21b815290516001600160a01b0393841695506322f8e5669450919092169163b75d4e249160048083019260209291908290030181865afa15801562001008573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200102e919062003f0e565b6001600160401b0316602160009054906101000a90046001600160a01b03166001600160a01b03166329cb924d6040518163ffffffff1660e01b8152600401602060405180830381865afa1580156200108b573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620010b1919062003be9565b620010bd919062003ed4565b6040518263ffffffff1660e01b8152600401620010dc91815260200190565b600060405180830381600087803b158015620010f757600080fd5b505af11580156200110c573d6000803e3d6000fd5b5050601f54604051634124beef60e01b8152600481018590526001600160a01b039091169250634124beef9150602401600060405180830381600087803b1580156200115757600080fd5b505af11580156200116c573d6000803e3d6000fd5b5050602a546040516354f6127f60e01b8152600481018590526001600160a01b0390911692506354f6127f9150602401600060405180830381865afa158015620011ba573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052620011e4919081019062003e58565b91955093509150620011f684620034f4565b6200129483602c80546200120a9062003bad565b80601f0160208091040260200160405190810160405280929190818152602001828054620012389062003bad565b8015620012895780601f106200125d5761010080835404028352916020019162001289565b820191906000526020600020905b8154815290600101906020018083116200126b57829003601f168201915b50505050506200355b565b5050505050505050565b60606019805480602002602001604051908101604052809291908181526020016000905b82821015620004d25760008481526020908190206040805180820182526002860290920180546001600160a01b031683526001810180548351818702810187019094528084529394919385830193928301828280156200136f57602002820191906000526020600020906000905b82829054906101000a900460e01b6001600160e01b03191681526020019060040190602082600301049283019260010382029150808411620013305790505b50505050508152505081526020019060010190620012c2565b6000604051620013989062003798565b604051809103906000f080158015620013b5573d6000803e3d6000fd5b506001600160a01b0316630a9254e46040518163ffffffff1660e01b8152600401610100604051808303816000875af1158015620013f7573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200141d919062003f2c565b60e0810151601f80546001600160a01b03199081166001600160a01b0393841690811790925560c084015160208054831691851691909117815560a08501516023805484169186169190911790558451602180548416918616919091179055840151602280548316918516919091179055604080850151602480549093169416939093179055905191925090620014b490620037a6565b6001600160a01b039091168152602001604051809103906000f080158015620014e1573d6000803e3d6000fd5b50602580546001600160a01b0319166001600160a01b03928316179055601f5460408051630473e1f360e11b8152905191909216916308e7c3e69160048083019260209291908290030181865afa15801562001541573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062001567919062003be9565b602655601f54602054604051634360af3d60e01b81526001600160a01b039182166004820152911690634360af3d90602401602060405180830381865afa158015620015b7573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620015dd919062003be9565b602755601f546040805163fe4e198360e01b815290516001600160a01b039092169163fe4e1983916004808201926020929091908290030181865afa1580156200162b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062001651919062003f0e565b6028805467ffffffffffffffff19166001600160401b0392909216919091179055601f546040805163d509b01760e01b815290516001600160a01b039092169163d509b017916004808201926020929091908290030181865afa158015620016bd573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620016e3919062003be9565b60295550565b60606018805480602002602001604051908101604052809291908181526020016000905b82821015620004d25783829060005260206000200180546200172f9062003bad565b80601f01602080910402602001604051908101604052809291908181526020018280546200175d9062003bad565b8015620017ae5780601f106200178257610100808354040283529160200191620017ae565b820191906000526020600020905b8154815290600101906020018083116200179057829003601f168201915b5050505050815260200190600101906200170d565b6040516303223eab60e11b81526002600482015260008051602062014f4d833981519152906306447d5690602401600060405180830381600087803b1580156200180c57600080fd5b505af115801562001821573d6000803e3d6000fd5b5050602054601f54604051634360af3d60e01b81526001600160a01b039283166004820181905294506308bca566935060029290911690634360af3d90602401602060405180830381865afa1580156200187f573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620018a5919062003be9565b6040518363ffffffff1660e01b8152600401620018c492919062003c03565b600060405180830381600087803b158015620018df57600080fd5b505af1158015620018f4573d6000803e3d6000fd5b5050602054602a54601f54604051634360af3d60e01b81526001600160a01b0393841660048201819052955063095ea7b39450918316921690634360af3d90602401602060405180830381865afa15801562001954573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200197a919062003be9565b6040518363ffffffff1660e01b81526004016200199992919062003c03565b6020604051808303816000875af1158015620019b9573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620019df919062003c2d565b50602a54602b54604051636f40874b60e11b81526000926001600160a01b03169163de810e969162001a1b9190602c90602e9060040162003cfe565b6020604051808303816000875af115801562001a3b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062001a61919062003be9565b905060008051602062014f6d83398151915260001c6001600160a01b03166390c5013b6040518163ffffffff1660e01b8152600401600060405180830381600087803b15801562001ab157600080fd5b505af115801562001ac6573d6000803e3d6000fd5b505050506000602a60009054906101000a90046001600160a01b03166001600160a01b03166318e557aa6040518163ffffffff1660e01b8152600401602060405180830381865afa15801562001b20573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062001b46919062003d37565b6040516370a0823160e01b8152600260048201526001600160a01b0391909116906370a0823190602401602060405180830381865afa15801562001b8e573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062001bb4919062003be9565b60405163ca669fa760e01b81526002600482015290915060008051602062014f4d8339815191529063ca669fa790602401600060405180830381600087803b15801562001c0057600080fd5b505af115801562001c15573d6000803e3d6000fd5b5050505062001c9f602a60009054906101000a90046001600160a01b03166001600160a01b0316634f7310876040518163ffffffff1660e01b8152600401602060405180830381865afa15801562001c71573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062001c97919062003be9565b600062003321565b602a546040516354f6127f60e01b815260048101849052600091829182916001600160a01b0316906354f6127f90602401600060405180830381865afa15801562001cee573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405262001d18919081019062003e58565b92509250925062001d298362003312565b602154602a5460408051632dd7538960e21b815290516001600160a01b03938416936322f8e56693169163b75d4e249160048083019260209291908290030181865afa15801562001d7e573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062001da4919062003f0e565b6001600160401b0316602160009054906101000a90046001600160a01b03166001600160a01b03166329cb924d6040518163ffffffff1660e01b8152600401602060405180830381865afa15801562001e01573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062001e27919062003be9565b62001e33919062003ed4565b6040518263ffffffff1660e01b815260040162001e5291815260200190565b600060405180830381600087803b15801562001e6d57600080fd5b505af115801562001e82573d6000803e3d6000fd5b5050601f54604051634124beef60e01b8152600481018990526001600160a01b039091169250634124beef9150602401600060405180830381600087803b15801562001ecd57600080fd5b505af115801562001ee2573d6000803e3d6000fd5b5050602a546040516354f6127f60e01b8152600481018990526001600160a01b0390911692506354f6127f9150602401600060405180830381865afa15801562001f30573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405262001f5a919081019062003e58565b9194509250905062001f6c83620034f4565b62001f8082602c80546200120a9062003bad565b602a5460408051630c72abd560e11b8152905162002074926001600160a01b0316916318e557aa9160048083019260209291908290030181865afa15801562001fcd573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062001ff3919062003d37565b6040516370a0823160e01b8152600260048201526001600160a01b0391909116906370a0823190602401602060405180830381865afa1580156200203b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062002061919062003be9565b6200206e86600162003ed4565b62003321565b60405163ca669fa760e01b81526002600482015260008051602062014f4d8339815191529063ca669fa790602401600060405180830381600087803b158015620020bd57600080fd5b505af1158015620020d2573d6000803e3d6000fd5b505050506200215c602a60009054906101000a90046001600160a01b03166001600160a01b0316634f7310876040518163ffffffff1660e01b8152600401602060405180830381865afa1580156200212e573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062002154919062003be9565b600162003321565b5050505050565b6040516303223eab60e11b81526002600482015260008051602062014f4d833981519152906306447d5690602401600060405180830381600087803b158015620021ac57600080fd5b505af1158015620021c1573d6000803e3d6000fd5b5050602054601f54604051634360af3d60e01b81526001600160a01b039283166004820181905294506308bca566935060029290911690634360af3d90602401602060405180830381865afa1580156200221f573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062002245919062003be9565b6040518363ffffffff1660e01b81526004016200226492919062003c03565b600060405180830381600087803b1580156200227f57600080fd5b505af115801562002294573d6000803e3d6000fd5b5050602054602a54601f54604051634360af3d60e01b81526001600160a01b0393841660048201819052955063095ea7b39450918316921690634360af3d90602401602060405180830381865afa158015620022f4573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200231a919062003be9565b6040518363ffffffff1660e01b81526004016200233992919062003c03565b6020604051808303816000875af115801562002359573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200237f919062003c2d565b50602a54602b54604051636f40874b60e11b81526000926001600160a01b03169163de810e9691620023bb9190602c90602e9060040162003cfe565b6020604051808303816000875af1158015620023db573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062002401919062003be9565b905060008051602062014f6d83398151915260001c6001600160a01b03166390c5013b6040518163ffffffff1660e01b8152600401600060405180830381600087803b1580156200245157600080fd5b505af115801562002466573d6000803e3d6000fd5b505050506000602a60009054906101000a90046001600160a01b03166001600160a01b03166318e557aa6040518163ffffffff1660e01b8152600401602060405180830381865afa158015620024c0573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620024e6919062003d37565b6040516370a0823160e01b8152600260048201526001600160a01b0391909116906370a0823190602401602060405180830381865afa1580156200252e573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062002554919062003be9565b90506000620025668360275462002ea7565b60235490915062002583906001600160a01b031682600162003273565b601f54604051638ea2f2ab60e01b815260048101859052620025fe916001600160a01b031690638ea2f2ab906024016020604051808303816000875af1158015620025d2573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620025f8919062003c2d565b620034f4565b602a546040516354f6127f60e01b81526004810185905260009182916001600160a01b03909116906354f6127f90602401600060405180830381865afa1580156200264d573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405262002677919081019062003e58565b50915091506200268782620034f4565b6200269b81602c80546200120a9062003bad565b602a5460408051630c72abd560e11b815290516200215c926001600160a01b0316916318e557aa9160048083019260209291908290030181865afa15801562001fcd573d6000803e3d6000fd5b6060601a805480602002602001604051908101604052809291908181526020016000905b82821015620004d25760008481526020908190206040805180820182526002860290920180546001600160a01b03168352600181018054835181870281018701909452808452939491938583019392830182828015620027b957602002820191906000526020600020906000905b82829054906101000a900460e01b6001600160e01b031916815260200190600401906020826003010492830192600103820291508084116200277a5790505b505050505081525050815260200190600101906200270c565b6040805161022081018252600061018082018181526101a083018290526101c08301829052610200830182905282526020808301829052828401829052606083018290526080830182905260a0830182905260c0830182905260e083018290526101008301829052610120830182905261014083018290526101608301919091526001600160a01b0385166101e083015282516024808201869052845180830390910181526044909101845280820180516001600160e01b031663220c0a2160e21b1790529251919260008051602062014f4d8339815191529263b96213e49260fa9291620028c49187910162004009565b6040516020818303038152906040526040518463ffffffff1660e01b8152600401620028f3939291906200410c565b600060405180830381600087803b1580156200290e57600080fd5b505af115801562002923573d6000803e3d6000fd5b50505050505050565b60606017805480602002602001604051908101604052809291908181526020016000905b82821015620004d2578382906000526020600020018054620029729062003bad565b80601f0160208091040260200160405190810160405280929190818152602001828054620029a09062003bad565b8015620029f15780601f10620029c557610100808354040283529160200191620029f1565b820191906000526020600020905b815481529060010190602001808311620029d357829003601f168201915b50505050508152602001906001019062002950565b600754600090610100900460ff161562002a295750600754610100900460ff1690565b600060008051602062014f4d8339815191523b1562002b345760405160009060008051602062014f4d833981519152907f667f9d70ca411d70ead50d8d5c22070dafc36ad75f3dcf5e7237b22ade9aecc49062002a969083906519985a5b195960d21b9060200162003c03565b60408051601f198184030181529082905262002ab6929160200162004146565b60408051601f198184030181529082905262002ad29162004179565b6000604051808303816000865af19150503d806000811462002b11576040519150601f19603f3d011682016040523d82523d6000602084013e62002b16565b606091505b509150508080602001905181019062002b30919062003c2d565b9150505b919050565b6060601380548060200260200160405190810160405280929190818152602001828054801562000383576020028201919060005260206000209081546001600160a01b0316815260019091019060200180831162000364575050505050905090565b6040516303223eab60e11b81526001600160a01b038316600482015260009060008051602062014f4d833981519152906306447d5690602401600060405180830381600087803b15801562002bef57600080fd5b505af115801562002c04573d6000803e3d6000fd5b5050602054601f54604051634360af3d60e01b81526001600160a01b039283166004820181905294506308bca5669350879290911690634360af3d90602401602060405180830381865afa15801562002c61573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062002c87919062003be9565b6040518363ffffffff1660e01b815260040162002ca692919062003c03565b600060405180830381600087803b15801562002cc157600080fd5b505af115801562002cd6573d6000803e3d6000fd5b5050602054601f54604051634360af3d60e01b81526001600160a01b0392831660048201819052945063095ea7b393509116908190634360af3d90602401602060405180830381865afa15801562002d32573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062002d58919062003be9565b6040518363ffffffff1660e01b815260040162002d7792919062003c03565b6020604051808303816000875af115801562002d97573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062002dbd919062003c2d565b50601f54604051630dac4ebd60e21b81526001600160a01b03909116906336b13af49062002df2908590879060040162004197565b6020604051808303816000875af115801562002e12573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062002e38919062003be9565b905060008051602062014f6d83398151915260001c6001600160a01b03166390c5013b6040518163ffffffff1660e01b8152600401600060405180830381600087803b15801562002e8857600080fd5b505af115801562002e9d573d6000803e3d6000fd5b5050505092915050565b60408051606080820183526000808352602083015291810191909152601f5460405163220c0a2160e21b8152600481018590526000916001600160a01b03169063883028849060240161020060405180830381865afa15801562002f0f573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062002f35919062004266565b905060006040518060600160405280601f60009054906101000a90046001600160a01b03166001600160a01b031663d509b0176040518163ffffffff1660e01b8152600401602060405180830381865afa15801562002f98573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062002fbe919062003be9565b81526040848101516001600160401b03166020830152601f54815163afedba4f60e01b8152600481018a905291909201916001600160a01b03169063afedba4f90602401600060405180830381865afa15801562003020573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526200304a91908101906200435b565b90526040516303223eab60e11b81526003600482015290915060008051602062014f4d833981519152906306447d5690602401600060405180830381600087803b1580156200309857600080fd5b505af1158015620030ad573d6000803e3d6000fd5b505060205460405163045e52b360e11b81526001600160a01b0390911692506308bca5669150620030e690600390889060040162003c03565b600060405180830381600087803b1580156200310157600080fd5b505af115801562003116573d6000803e3d6000fd5b5050602054601f5460405163095ea7b360e01b81526001600160a01b03928316945063095ea7b39350620031539290911690889060040162003c03565b6020604051808303816000875af115801562003173573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062003199919062003c2d565b50601f5460405163a6a22b4360e01b815260048101879052600360248201526001600160a01b039091169063a6a22b4390604401600060405180830381600087803b158015620031e857600080fd5b505af1158015620031fd573d6000803e3d6000fd5b5050505060008051602062014f6d83398151915260001c6001600160a01b03166390c5013b6040518163ffffffff1660e01b8152600401600060405180830381600087803b1580156200324f57600080fd5b505af115801562003264573d6000803e3d6000fd5b50929450505050505b92915050565b81516020830151604080850151905160008051602062014f4d8339815191529363b96213e49388936338ce36ab60e11b93620032b593929190602401620043b0565b60408051601f198184030181529190526020810180516001600160e01b03166001600160e01b03199093169290921790915284620032f5576000620032ff565b670de0b6b3a76400005b604051602001620028c491815260200190565b6200331e8115620034f4565b50565b808214620034075760008051602062014f2d833981519152604051620033839060208082526022908201527f4572726f723a2061203d3d2062206e6f7420736174697366696564205b75696e604082015261745d60f01b606082015260800190565b60405180910390a17fb2de2fbe801a0df6c0cbddfd448ba3c41d48a040ca35c56c8196ef0fcae721a882604051620033bc9190620043da565b60405180910390a17fb2de2fbe801a0df6c0cbddfd448ba3c41d48a040ca35c56c8196ef0fcae721a881604051620033f5919062004413565b60405180910390a16200340762003681565b5050565b806001600160a01b0316826001600160a01b031614620034075760008051602062014f2d833981519152604051620034829060208082526025908201527f4572726f723a2061203d3d2062206e6f7420736174697366696564205b616464604082015264726573735d60d81b606082015260800190565b60405180910390a17f9c4e8541ca8f0dc1c413f9108f66d82d3cecb1bddbce437a61caa3175c4cc96f82604051620034bb91906200443e565b60405180910390a17f9c4e8541ca8f0dc1c413f9108f66d82d3cecb1bddbce437a61caa3175c4cc96f81604051620033f5919062004483565b806200331e5760008051602062014f2d833981519152604051620035499060208082526017908201527f4572726f723a20417373657274696f6e204661696c6564000000000000000000604082015260600190565b60405180910390a16200331e62003681565b806040516020016200356e919062004179565b604051602081830303815290604052805190602001208260405160200162003597919062004179565b6040516020818303038152906040528051906020012014620034075760008051602062014f2d8339815191526040516200360f9060208082526024908201527f4572726f723a2061203d3d2062206e6f7420736174697366696564205b737472604082015263696e675d60e01b606082015260800190565b60405180910390a17f280f4446b28a1372417dda658d30b95b2992b12ac9c7f378535f29a97acf358382604051620036489190620044ae565b60405180910390a17f280f4446b28a1372417dda658d30b95b2992b12ac9c7f378535f29a97acf358381604051620033f59190620044ed565b60008051602062014f4d8339815191523b1562003779576040805160008051602062014f4d833981519152602082018190526519985a5b195960d21b9282019290925260016060820152600091907f70ca10bbd0dbfd9020a9f4b13402c16cb120705e0d1c0aeab10fa353ae586fc49060800160408051601f198184030181529082905262003714929160200162004146565b60408051601f1981840301815290829052620037309162004179565b6000604051808303816000865af19150503d80600081146200376f576040519150601f19603f3d011682016040523d82523d6000602084013e62003774565b606091505b505050505b6007805461ff001916610100179055565b613b5c806200451983390190565b61c640806200807583390190565b61087880620146b583390190565b6020808252825182820181905260009190848201906040850190845b81811015620037f75783516001600160a01b031683529284019291840191600101620037d0565b50909695505050505050565b60005b838110156200382057818101518382015260200162003806565b50506000910152565b600081518084526200384381602086016020860162003803565b601f01601f19169290920160200192915050565b602080825282518282018190526000919060409081850190600581811b8701840188860187805b858110156200390d57603f198b8503018752825180516001600160a01b031685528901518985018990528051898601819052908a0190606081881b870181019190870190855b81811015620038f657605f19898503018352620038e384865162003829565b948e01949350918d0191600101620038c4565b505050978a0197945050918801916001016200387e565b50919a9950505050505050505050565b60006020808301818452808551808352604092508286019150828160051b8701018488016000805b84811015620039c557898403603f19018652825180516001600160a01b03168552880151888501889052805188860181905290890190839060608701905b80831015620039af5783516001600160e01b0319168252928b019260019290920191908b019062003983565b50978a0197955050509187019160010162003945565b50919998505050505050505050565b6000602080830181845280855180835260408601915060408160051b870101925083870160005b828110156200326457603f1988860301845262003a1a85835162003829565b94509285019290850190600101620039fb565b6001600160a01b03811681146200331e57600080fd5b6000806040838503121562003a5757600080fd5b823562003a648162003a2d565b946020939093013593505050565b634e487b7160e01b600052604160045260246000fd5b60405161018081016001600160401b038111828210171562003aae5762003aae62003a72565b60405290565b604051601f8201601f191681016001600160401b038111828210171562003adf5762003adf62003a72565b604052919050565b60006001600160401b0382111562003b035762003b0362003a72565b50601f01601f191660200190565b6000806040838503121562003b2557600080fd5b823562003b328162003a2d565b915060208301356001600160401b0381111562003b4e57600080fd5b8301601f8101851362003b6057600080fd5b803562003b7762003b718262003ae7565b62003ab4565b81815286602083850101111562003b8d57600080fd5b816020840160208301376000602083830101528093505050509250929050565b600181811c9082168062003bc257607f821691505b60208210810362003be357634e487b7160e01b600052602260045260246000fd5b50919050565b60006020828403121562003bfc57600080fd5b5051919050565b6001600160a01b03929092168252602082015260400190565b8051801515811462002b3457600080fd5b60006020828403121562003c4057600080fd5b62003c4b8262003c1c565b9392505050565b8054600090600181811c908083168062003c6d57607f831692505b6020808410820362003c8f57634e487b7160e01b600052602260045260246000fd5b8388526020880182801562003cad576001811462003cc45762003cf1565b60ff198716825285151560051b8201975062003cf1565b60008981526020902060005b8781101562003ceb5781548482015290860190840162003cd0565b83019850505b5050505050505092915050565b83815260606020820152600062003d19606083018562003c52565b828103604084015262003d2d818562003c52565b9695505050505050565b60006020828403121562003d4a57600080fd5b815162003c4b8162003a2d565b600062003d6862003b718462003ae7565b905082815283838301111562003d7d57600080fd5b62003c4b83602083018462003803565b600082601f83011262003d9f57600080fd5b62003c4b8383516020850162003d57565b805162002b348162003a2d565b600080600080600060a0868803121562003dd657600080fd5b8551945060208601516001600160401b038082111562003df557600080fd5b62003e0389838a0162003d8d565b9550604088015191508082111562003e1a57600080fd5b5062003e298882890162003d8d565b935050606086015162003e3c8162003a2d565b915062003e4c6080870162003c1c565b90509295509295909350565b60008060006060848603121562003e6e57600080fd5b62003e798462003c1c565b925060208401516001600160401b038082111562003e9657600080fd5b62003ea48783880162003d8d565b9350604086015191508082111562003ebb57600080fd5b5062003eca8682870162003d8d565b9150509250925092565b808201808211156200326d57634e487b7160e01b600052601160045260246000fd5b80516001600160401b038116811462002b3457600080fd5b60006020828403121562003f2157600080fd5b62003c4b8262003ef6565b600061010080838503121562003f4157600080fd5b604051908101906001600160401b038211818310171562003f665762003f6662003a72565b816040528351915062003f798262003a2d565b81815262003f8a6020850162003db0565b602082015262003f9d6040850162003db0565b604082015262003fb06060850162003db0565b606082015262003fc36080850162003db0565b608082015262003fd660a0850162003db0565b60a082015262003fe960c0850162003db0565b60c082015262003ffc60e0850162003db0565b60e0820152949350505050565b81518051151582526020808201511515818401526040808301511515818501526060808401516001600160a01b039081168287015260809485015181168587015292860151831660a0860152908501516001600160401b031660c0850152840151151560e084015290830151908116610100808401919091526102008301919060a08501519150610120620040a8818601846001600160401b03169052565b60c08601519250610140620040c08187018515159052565b60e08701516101608781019190915292870151610180870152908601516101a08601528501516001600160a01b039081166101c08601529401519093166101e090920191909152919050565b6001600160a01b0384168152606060208201819052600090620041329083018562003829565b828103604084015262003d2d818562003829565b6001600160e01b03198316815281516000906200416b81600485016020870162003803565b919091016004019392505050565b600082516200418d81846020870162003803565b9190910192915050565b604081526000620041ac604083018562003829565b905060018060a01b03831660208301529392505050565b600060a08284031215620041d657600080fd5b60405160a081018181106001600160401b0382111715620041fb57620041fb62003a72565b6040529050806200420c8362003c1c565b81526200421c6020840162003c1c565b60208201526200422f6040840162003c1c565b60408201526060830151620042448162003a2d565b60608201526080830151620042598162003a2d565b6080919091015292915050565b600061020082840312156200427a57600080fd5b6200428462003a88565b620042908484620041c3565b8152620042a060a0840162003db0565b6020820152620042b360c0840162003ef6565b6040820152620042c660e0840162003c1c565b6060820152610100620042db81850162003db0565b6080830152610120620042f081860162003ef6565b60a08401526101406200430581870162003c1c565b60c08501526101608087015160e0860152610180870151848601526101a087015183860152620043396101c0880162003db0565b828601526200434c6101e0880162003db0565b90850152509195945050505050565b6000602082840312156200436e57600080fd5b81516001600160401b038111156200438557600080fd5b8201601f810184136200439757600080fd5b620043a88482516020840162003d57565b949350505050565b838152826020820152606060408201526000620043d1606083018462003829565b95945050505050565b6040815260006200440560408301600a8152690808080808081319599d60b21b602082015260400190565b905082602083015292915050565b6040815260006200440560408301600a8152690808080808149a59da1d60b21b602082015260400190565b6040815260006200446960408301600a8152690808080808081319599d60b21b602082015260400190565b6001600160a01b0393909316602092909201919091525090565b6040815260006200446960408301600a8152690808080808149a59da1d60b21b602082015260400190565b604081526000620044d960408301600a8152690808080808081319599d60b21b602082015260400190565b8281036020840152620043a8818562003829565b604081526000620044d960408301600a8152690808080808149a59da1d60b21b60208201526040019056fe60e06040523480156200001157600080fd5b5060405162003b5c38038062003b5c83398101604081905262000034916200029b565b6001600160a01b03808316608052811660a08190526040805163d509b01760e01b8152905163d509b017916004808201926020929091908290030181865afa15801562000085573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620000ab9190620002d3565b60c052604051600190620000bf9062000270565b6060808252601c908201527f4461746141737365727465722056616c696461746f7220546f6b656e00000000608082015260a060208201819052600490820152631110559560e21b60c082015260ff909116604082015260e001604051809103906000f08015801562000136573d6000803e3d6000fd5b50600080546001600160a01b0319166001600160a01b03929092169182179055604051634c1d96ab60e11b815230600482015263983b2d5690602401600060405180830381600087803b1580156200018d57600080fd5b505af1158015620001a2573d6000803e3d6000fd5b5050600054604051637a231bdd60e11b81523060048201526001600160a01b03909116925063f44637ba9150602401600060405180830381600087803b158015620001ec57600080fd5b505af115801562000201573d6000803e3d6000fd5b505060005460a051604051634c1d96ab60e11b81526001600160a01b0391821660048201529116925063983b2d569150602401600060405180830381600087803b1580156200024f57600080fd5b505af115801562000264573d6000803e3d6000fd5b505050505050620002ed565b611cb68062001ea683390190565b80516001600160a01b03811681146200029657600080fd5b919050565b60008060408385031215620002af57600080fd5b620002ba836200027e565b9150620002ca602084016200027e565b90509250929050565b600060208284031215620002e657600080fd5b5051919050565b60805160a05160c051611b4b6200035b600039600081816101cd015261079501526000818161014d015281816105de015281816106af015281816106d601526108f601526000818160ee015281816105b1015281816106580152818161068d01526107710152611b4b6000f3fe608060405234801561001057600080fd5b50600436106100b45760003560e01c8063b75d4e2411610071578063b75d4e2414610193578063d448a4ec146101b5578063d509b017146101c8578063de810e96146101ef578063f1b156b214610202578063faa0a2641461021557600080fd5b806318e557aa146100b957806320402e1d146100e95780634f7310871461011057806354f6127f146101265780638921a61414610148578063b33893da1461016f575b600080fd5b6000546100cc906001600160a01b031681565b6040516001600160a01b0390911681526020015b60405180910390f35b6100cc7f000000000000000000000000000000000000000000000000000000000000000081565b61011861021d565b6040519081526020016100e0565b610139610134366004611448565b61028f565b6040516100e0939291906114b1565b6100cc7f000000000000000000000000000000000000000000000000000000000000000081565b61018261017d366004611448565b61044c565b6040516100e09594939291906114e8565b61019c611c2081565b60405167ffffffffffffffff90911681526020016100e0565b6101c66101c3366004611448565b50565b005b6101187f000000000000000000000000000000000000000000000000000000000000000081565b6101186101fd3660046115d9565b61059a565b6101c6610210366004611654565b6108eb565b6101c6610bd3565b600080546040516370a0823160e01b81523360048201526001600160a01b03909116906370a0823190602401602060405180830381865afa158015610266573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061028a9190611684565b905090565b6000818152600160205260408120600301546060908190600160a01b900460ff1661030b5760006040518060400160405280600781526020016615313630b7359560c91b8152506040518060400160405280601181526020017011185d18481b9bdd081c995cdbdb1d9959607a1b815250925092509250610445565b6000848152600160208190526040909120808201805490916002019082906103329061169d565b80601f016020809104026020016040519081016040528092919081815260200182805461035e9061169d565b80156103ab5780601f10610380576101008083540402835291602001916103ab565b820191906000526020600020905b81548152906001019060200180831161038e57829003601f168201915b505050505091508080546103be9061169d565b80601f01602080910402602001604051908101604052809291908181526020018280546103ea9061169d565b80156104375780601f1061040c57610100808354040283529160200191610437565b820191906000526020600020905b81548152906001019060200180831161041a57829003601f168201915b505050505090509250925092505b9193909250565b60016020819052600091825260409091208054918101805461046d9061169d565b80601f01602080910402602001604051908101604052809291908181526020018280546104999061169d565b80156104e65780601f106104bb576101008083540402835291602001916104e6565b820191906000526020600020905b8154815290600101906020018083116104c957829003601f168201915b5050505050908060020180546104fb9061169d565b80601f01602080910402602001604051908101604052809291908181526020018280546105279061169d565b80156105745780601f1061054957610100808354040283529160200191610574565b820191906000526020600020905b81548152906001019060200180831161055757829003601f168201915b505050600390930154919250506001600160a01b0381169060ff600160a01b9091041685565b604051634360af3d60e01b81526001600160a01b037f00000000000000000000000000000000000000000000000000000000000000008116600483015260009182917f00000000000000000000000000000000000000000000000000000000000000001690634360af3d90602401602060405180830381865afa158015610625573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106499190611684565b90506106806001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016333084610cb8565b6106d46001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000167f000000000000000000000000000000000000000000000000000000000000000083610d29565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316636457c979858561070e89610e48565b61071733610e89565b61072042610ee0565b61072930610e89565b60405160200161073e969594939291906116f3565b60408051601f19818403018152908290526001600160e01b031960e084901b1682526107bf9133903090600090611c20907f0000000000000000000000000000000000000000000000000000000000000000908a907f0000000000000000000000000000000000000000000000000000000000000000908590600401611851565b6020604051808303816000875af11580156107de573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108029190611684565b6040805160a081018252878152602080820188815282840188905233606084015260006080840181905285815260019283905293909320825181559251939550909290820190610852908261190d565b5060408201516002820190610867908261190d565b506060820151600390910180546080909301511515600160a01b026001600160a81b03199093166001600160a01b03909216919091179190911790556040518290339087907f657936090f7950624cc4d0e1efd75ff2392aea9d1aaf742ac689d3db7cb20e72906108db90899089906119cd565b60405180910390a4509392505050565b336001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000161461092057600080fd5b8015610b8e5760008281526001602081905260408083206003018054600160a01b60ff60a01b19821617909155925490516340c10f1960e01b81526001600160a01b039384166004820152602481019290925291909116906340c10f19906044016020604051808303816000875af11580156109a0573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109c491906119fb565b506000828152600160208181526040808420815160a081019092528054825292830180549193928401916109f79061169d565b80601f0160208091040260200160405190810160405280929190818152602001828054610a239061169d565b8015610a705780601f10610a4557610100808354040283529160200191610a70565b820191906000526020600020905b815481529060010190602001808311610a5357829003601f168201915b50505050508152602001600282018054610a899061169d565b80601f0160208091040260200160405190810160405280929190818152602001828054610ab59061169d565b8015610b025780601f10610ad757610100808354040283529160200191610b02565b820191906000526020600020905b815481529060010190602001808311610ae557829003601f168201915b5050509183525050600391909101546001600160a01b03808216602080850191909152600160a01b90920460ff1615156040938401526060840151845192850151858501519451959650889591909216937f36a2ca3a13b47a72af0f9bf95abd3c906882059e42e6c1c6b5b312e9da2064d792610b81929091906119cd565b60405180910390a4505050565b600082815260016020819052604082208281559190610baf908301826113fa565b610bbd6002830160006113fa565b5060030180546001600160a81b03191690555050565b6000546040516370a0823160e01b815233600482018190526001600160a01b03909216916379cc67909183906370a0823190602401602060405180830381865afa158015610c25573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c499190611684565b6040516001600160e01b031960e085901b1681526001600160a01b03909216600483015260248201526044016020604051808303816000875af1158015610c94573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906101c391906119fb565b6040516001600160a01b0380851660248301528316604482015260648101829052610d239085906323b872dd60e01b906084015b60408051601f198184030181529190526020810180516001600160e01b03166001600160e01b03199093169290921790915261100c565b50505050565b801580610da35750604051636eb1769f60e11b81523060048201526001600160a01b03838116602483015284169063dd62ed3e90604401602060405180830381865afa158015610d7d573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610da19190611684565b155b610e135760405162461bcd60e51b815260206004820152603660248201527f5361666545524332303a20617070726f76652066726f6d206e6f6e2d7a65726f60448201527520746f206e6f6e2d7a65726f20616c6c6f77616e636560501b60648201526084015b60405180910390fd5b6040516001600160a01b038316602482015260448101829052610e4390849063095ea7b360e01b90606401610cec565b505050565b6060610e57608083901c6110de565b610e60836110de565b6040805160208101939093528201526060015b6040516020818303038152906040529050919050565b6060610ea16001600160801b03602084901c166110de565b610ebc8360601b6bffffffffffffffffffffffff19166110de565b604051602001610e739291909182526001600160c01b031916602082015260280190565b606081600003610f075750506040805180820190915260018152600360fc1b602082015290565b8160005b8115610f315780610f1b81611a2e565b9150610f2a9050600a83611a5d565b9150610f0b565b60008167ffffffffffffffff811115610f4c57610f4c611536565b6040519080825280601f01601f191660200182016040528015610f76576020820181803683370190505b509050815b851561100357610f8c600182611a7f565b90506000610f9b600a88611a5d565b610fa690600a611a98565b610fb09088611a7f565b610fbb906030611ab7565b905060008160f81b905080848481518110610fd857610fd8611ad0565b60200101906001600160f81b031916908160001a905350610ffa600a89611a5d565b97505050610f7b565b50949350505050565b6000611061826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b03166112779092919063ffffffff16565b805190915015610e43578080602001905181019061107f91906119fb565b610e435760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b6064820152608401610e0a565b6000808260001c9050806001600160801b03169050806801000000000000000002811777ffffffffffffffff0000000000000000ffffffffffffffff169050806401000000000281177bffffffff00000000ffffffff00000000ffffffff00000000ffffffff16905080620100000281177dffff0000ffff0000ffff0000ffff0000ffff0000ffff0000ffff0000ffff169050806101000281177eff00ff00ff00ff00ff00ff00ff00ff00ff00ff00ff00ff00ff00ff00ff00ff1690508060100281177f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f16905060006008827f080808080808080808080808080808080808080808080808080808080808080816816111f9576111f9611a47565b0460047f040404040404040404040404040404040404040404040404040404040404040484160460027f020202020202020202020202020202020202020202020202020202020202020285160417166027029091017f3030303030303030303030303030303030303030303030303030303030303030019392505050565b60606112868484600085611290565b90505b9392505050565b6060824710156112f15760405162461bcd60e51b815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f6044820152651c8818d85b1b60d21b6064820152608401610e0a565b6001600160a01b0385163b6113485760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e74726163740000006044820152606401610e0a565b600080866001600160a01b031685876040516113649190611ae6565b60006040518083038185875af1925050503d80600081146113a1576040519150601f19603f3d011682016040523d82523d6000602084013e6113a6565b606091505b50915091506113b68282866113c1565b979650505050505050565b606083156113d0575081611289565b8251156113e05782518084602001fd5b8160405162461bcd60e51b8152600401610e0a9190611b02565b5080546114069061169d565b6000825580601f10611416575050565b601f0160209004906000526020600020908101906101c391905b808211156114445760008155600101611430565b5090565b60006020828403121561145a57600080fd5b5035919050565b60005b8381101561147c578181015183820152602001611464565b50506000910152565b6000815180845261149d816020860160208601611461565b601f01601f19169290920160200192915050565b83151581526060602082015260006114cc6060830185611485565b82810360408401526114de8185611485565b9695505050505050565b85815260a06020820152600061150160a0830187611485565b82810360408401526115138187611485565b6001600160a01b0395909516606084015250509015156080909101529392505050565b634e487b7160e01b600052604160045260246000fd5b600082601f83011261155d57600080fd5b813567ffffffffffffffff8082111561157857611578611536565b604051601f8301601f19908116603f011681019082821181831017156115a0576115a0611536565b816040528381528660208588010111156115b957600080fd5b836020870160208301376000602085830101528094505050505092915050565b6000806000606084860312156115ee57600080fd5b83359250602084013567ffffffffffffffff8082111561160d57600080fd5b6116198783880161154c565b9350604086013591508082111561162f57600080fd5b5061163c8682870161154c565b9150509250925092565b80151581146101c357600080fd5b6000806040838503121561166757600080fd5b82359150602083013561167981611646565b809150509250929050565b60006020828403121561169657600080fd5b5051919050565b600181811c908216806116b157607f821691505b6020821081036116d157634e487b7160e01b600052602260045260246000fd5b50919050565b600081516116e9818560208601611461565b9290920192915050565b7002230ba309030b9b9b2b93a32b21030ba1607d1b81526000875161171f816011850160208c01611461565b710103bb4ba34103232b9b1b934b83a34b7b7160751b6011918401918201528751611751816023840160208c01611461565b6e040ccdee440c8c2e8c292c8744060f608b1b602392909101918201528651611781816032840160208b01611461565b70040c2dcc840c2e6e6cae4e8cae4744060f607b1b6032929091019182015285516117b3816043840160208a01611461565b6e01030ba103a34b6b2b9ba30b6b81d1608d1b6043929091019182015284516117e3816052840160208901611461565b61184361182d6118276052848601017f20696e207468652044617461417373657274657220636f6e747261637420617481526204060f60eb1b602082015260230190565b876116d7565b691034b9903b30b634b21760b11b8152600a0190565b9a9950505050505050505050565b60006101208083526118658184018d611485565b6001600160a01b039b8c166020850152998b1660408401525050958816606087015267ffffffffffffffff9490941660808601529190951660a084015260c083019490945260e08201939093526101000191909152919050565b601f821115610e4357600081815260208120601f850160051c810160208610156118e65750805b601f850160051c820191505b81811015611905578281556001016118f2565b505050505050565b815167ffffffffffffffff81111561192757611927611536565b61193b81611935845461169d565b846118bf565b602080601f83116001811461197057600084156119585750858301515b600019600386901b1c1916600185901b178555611905565b600085815260208120601f198616915b8281101561199f57888601518255948401946001909101908401611980565b50858210156119bd5787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b6040815260006119e06040830185611485565b82810360208401526119f28185611485565b95945050505050565b600060208284031215611a0d57600080fd5b815161128981611646565b634e487b7160e01b600052601160045260246000fd5b600060018201611a4057611a40611a18565b5060010190565b634e487b7160e01b600052601260045260246000fd5b600082611a7a57634e487b7160e01b600052601260045260246000fd5b500490565b81810381811115611a9257611a92611a18565b92915050565b6000816000190483118215151615611ab257611ab2611a18565b500290565b60ff8181168382160190811115611a9257611a92611a18565b634e487b7160e01b600052603260045260246000fd5b60008251611af8818460208701611461565b9190910192915050565b602081526000611289602083018461148556fea264697066735822122052ead0a1319f36aa3a765a3c6aef447df122d7208d51128fc0f1ccda5445fba164736f6c6343000810003360806040523480156200001157600080fd5b5060405162001cb638038062001cb6833981016040819052620000349162000563565b8282600362000044838262000676565b50600462000053828262000676565b50506006805460ff191660ff8416179055506200007360008033620000a5565b6200009060015b60408051600080825260208201909252620001f5565b6200009c60026200007a565b50505062000796565b826000808281526005602052604090206001015460ff166002811115620000d057620000d062000742565b14620001235760405162461bcd60e51b815260206004820152601e60248201527f43616e6e6f74207573652061207072652d6578697374696e6720726f6c65000060448201526064015b60405180910390fd5b60008481526005602052604090206001808201805460ff1916828002179055508381556200016160028201846200033b602090811b62000a6617901c565b60008481526005602052604081206001015460ff1660028111156200018a576200018a62000742565b03620001ee5760405162461bcd60e51b815260206004820152603c602482015260008051602062001c9683398151915260448201527f20746f206d616e61676520616e206578636c757369766520726f6c650000000060648201526084016200011a565b5050505050565b826000808281526005602052604090206001015460ff16600281111562000220576200022062000742565b146200026f5760405162461bcd60e51b815260206004820152601e60248201527f43616e6e6f74207573652061207072652d6578697374696e6720726f6c65000060448201526064016200011a565b600084815260056020908152604090912060018101805460ff1916600217905584815590620002ae906003830190859062000a706200034b821b17901c565b60008481526005602052604081206001015460ff166002811115620002d757620002d762000742565b03620001ee5760405162461bcd60e51b8152602060048201526038602482015260008051602062001c9683398151915260448201527f20746f206d616e61676520612073686172656420726f6c65000000000000000060648201526084016200011a565b620003478282620003a0565b5050565b60005b81518110156200039b57620003868383838151811062000372576200037262000758565b60200260200101516200042160201b60201c565b8062000392816200076e565b9150506200034e565b505050565b6001600160a01b038116620004045760405162461bcd60e51b815260206004820152602360248201527f43616e6e6f742073657420616e206578636c757369766520726f6c6520746f2060448201526203078360ec1b60648201526084016200011a565b81546001600160a01b0319166001600160a01b0391909116179055565b6001600160a01b038116620004795760405162461bcd60e51b815260206004820152601f60248201527f43616e6e6f74206164642030783020746f20612073686172656420726f6c650060448201526064016200011a565b6001600160a01b0316600090815260209190915260409020805460ff19166001179055565b634e487b7160e01b600052604160045260246000fd5b600082601f830112620004c657600080fd5b81516001600160401b0380821115620004e357620004e36200049e565b604051601f8301601f19908116603f011681019082821181831017156200050e576200050e6200049e565b816040528381526020925086838588010111156200052b57600080fd5b600091505b838210156200054f578582018301518183018401529082019062000530565b600093810190920192909252949350505050565b6000806000606084860312156200057957600080fd5b83516001600160401b03808211156200059157600080fd5b6200059f87838801620004b4565b94506020860151915080821115620005b657600080fd5b50620005c586828701620004b4565b925050604084015160ff81168114620005dd57600080fd5b809150509250925092565b600181811c90821680620005fd57607f821691505b6020821081036200061e57634e487b7160e01b600052602260045260246000fd5b50919050565b601f8211156200039b57600081815260208120601f850160051c810160208610156200064d5750805b601f850160051c820191505b818110156200066e5782815560010162000659565b505050505050565b81516001600160401b038111156200069257620006926200049e565b620006aa81620006a38454620005e8565b8462000624565b602080601f831160018114620006e25760008415620006c95750858301515b600019600386901b1c1916600185901b1785556200066e565b600085815260208120601f198616915b828110156200071357888601518255948401946001909101908401620006f2565b5085821015620007325787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b634e487b7160e01b600052602160045260246000fd5b634e487b7160e01b600052603260045260246000fd5b6000600182016200078f57634e487b7160e01b600052601160045260246000fd5b5060010190565b6114f080620007a66000396000f3fe608060405234801561001057600080fd5b506004361061014d5760003560e01c806374d0a676116100c3578063a9059cbb1161007c578063a9059cbb146102be578063aaa14ca3146102d1578063ab3545e5146102e4578063d97c05be1461030f578063dd62ed3e14610322578063f44637ba1461035b57600080fd5b806374d0a6761461025757806379cc67901461026a5780637cdc1cb91461027d57806395d89b4114610290578063983b2d5614610298578063a457c2d7146102ab57600080fd5b8063395093511161011557806339509351146101cd57806340c10f19146101e057806342966c68146101f35780636be7658b1461020857806370a082311461021b57806373cc802a1461024457600080fd5b806306fdde0314610152578063095ea7b31461017057806318160ddd1461019357806323b872dd146101a5578063313ce567146101b8575b600080fd5b61015a61036e565b6040516101679190611183565b60405180910390f35b61018361017e3660046111ed565b610400565b6040519015158152602001610167565b6002545b604051908152602001610167565b6101836101b3366004611217565b61041a565b60065460405160ff9091168152602001610167565b6101836101db3660046111ed565b61043e565b6101836101ee3660046111ed565b61047d565b610206610201366004611253565b6104ba565b005b61020661021636600461126c565b6104f0565b610197610229366004611298565b6001600160a01b031660009081526020819052604090205490565b610206610252366004611298565b6105c6565b61020661026536600461126c565b6105d4565b6101836102783660046111ed565b6106aa565b61018361028b36600461126c565b6106de565b61015a6107a3565b6102066102a6366004611298565b6107b2565b6101836102b93660046111ed565b6107be565b6101836102cc3660046111ed565b610850565b6102066102df366004611253565b61085e565b6102f76102f2366004611253565b61091a565b6040516001600160a01b039091168152602001610167565b61020661031d36600461126c565b610986565b6101976103303660046112ba565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b610206610369366004611298565b610a5c565b60606003805461037d906112e4565b80601f01602080910402602001604051908101604052809291908181526020018280546103a9906112e4565b80156103f65780601f106103cb576101008083540402835291602001916103f6565b820191906000526020600020905b8154815290600101906020018083116103d957829003601f168201915b5050505050905090565b60003361040e818585610ab6565b60019150505b92915050565b600033610428858285610bda565b610433858585610c6c565b506001949350505050565b3360008181526001602090815260408083206001600160a01b038716845290915281205490919061040e908290869061047890879061132e565b610ab6565b6000600161048b81336106de565b6104b05760405162461bcd60e51b81526004016104a790611357565b60405180910390fd5b61040e8484610e3a565b60026104c681336106de565b6104e25760405162461bcd60e51b81526004016104a790611357565b6104ec3383610f19565b5050565b81600260008281526005602052604090206001015460ff16600281111561051957610519611341565b146105365760405162461bcd60e51b81526004016104a790611399565b600083815260056020526040902054839061055190336106de565b61056d5760405162461bcd60e51b81526004016104a7906113e5565b60008481526005602052604090206105889060030184611067565b60405133906001600160a01b0385169086907feb3e33034c392e69263b04ec0fa376dc12784a41b6676c7f31b936cbc0fbb5af90600090a450505050565b6105d1600082610986565b50565b81600260008281526005602052604090206001015460ff1660028111156105fd576105fd611341565b1461061a5760405162461bcd60e51b81526004016104a790611399565b600083815260056020526040902054839061063590336106de565b6106515760405162461bcd60e51b81526004016104a7906113e5565b600084815260056020526040902061066c9060030184611089565b60405133906001600160a01b0385169086907f63502af7324ff6db91ab38f8236a648727d9385ea6c782073dd4882d8a61a48f90600090a450505050565b600060026106b881336106de565b6106d45760405162461bcd60e51b81526004016104a790611357565b61040e8484610f19565b600082815260056020526040812060018082015460ff16600281111561070657610706611341565b036107275760028101546001600160a01b038481169116145b915050610414565b6002600182015460ff16600281111561074257610742611341565b0361076a576001600160a01b038316600090815260038201602052604090205460ff1661071f565b60405162461bcd60e51b815260206004820152600e60248201526d125b9d985b1a59081c9bdb19525960921b60448201526064016104a7565b60606004805461037d906112e4565b6105d160015b826105d4565b3360008181526001602090815260408083206001600160a01b0387168452909152812054909190838110156108435760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b60648201526084016104a7565b6104338286868403610ab6565b60003361040e818585610c6c565b80600260008281526005602052604090206001015460ff16600281111561088757610887611341565b146108a45760405162461bcd60e51b81526004016104a790611399565b816108af81336106de565b6108cb5760405162461bcd60e51b81526004016104a790611357565b60008381526005602052604090206108e69060030133611067565b6040513390819085907feb3e33034c392e69263b04ec0fa376dc12784a41b6676c7f31b936cbc0fbb5af90600090a4505050565b600081600160008281526005602052604090206001015460ff16600281111561094557610945611341565b146109625760405162461bcd60e51b81526004016104a790611429565b6000838152600560205260409020600201546001600160a01b031691505b50919050565b81600160008281526005602052604090206001015460ff1660028111156109af576109af611341565b146109cc5760405162461bcd60e51b81526004016104a790611429565b60008381526005602052604090205483906109e790336106de565b610a035760405162461bcd60e51b81526004016104a7906113e5565b6000848152600560205260409020610a1e9060020184611104565b60405133906001600160a01b0385169086907f3b855c56b409b671c7112789d022675eb639d0bcb8896f1b6197c132f799e74690600090a450505050565b6105d160026107b8565b6104ec8282611104565b60005b8151811015610ab157610a9f83838381518110610a9257610a92611478565b6020026020010151611089565b80610aa98161148e565b915050610a73565b505050565b6001600160a01b038316610b185760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b60648201526084016104a7565b6001600160a01b038216610b795760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b60648201526084016104a7565b6001600160a01b0383811660008181526001602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b6001600160a01b038381166000908152600160209081526040808320938616835292905220546000198114610c665781811015610c595760405162461bcd60e51b815260206004820152601d60248201527f45524332303a20696e73756666696369656e7420616c6c6f77616e636500000060448201526064016104a7565b610c668484848403610ab6565b50505050565b6001600160a01b038316610cd05760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b60648201526084016104a7565b6001600160a01b038216610d325760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b60648201526084016104a7565b6001600160a01b03831660009081526020819052604090205481811015610daa5760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b60648201526084016104a7565b6001600160a01b03808516600090815260208190526040808220858503905591851681529081208054849290610de190849061132e565b92505081905550826001600160a01b0316846001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef84604051610e2d91815260200190565b60405180910390a3610c66565b6001600160a01b038216610e905760405162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f20616464726573730060448201526064016104a7565b8060026000828254610ea2919061132e565b90915550506001600160a01b03821660009081526020819052604081208054839290610ecf90849061132e565b90915550506040518181526001600160a01b038316906000907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9060200160405180910390a35050565b6001600160a01b038216610f795760405162461bcd60e51b815260206004820152602160248201527f45524332303a206275726e2066726f6d20746865207a65726f206164647265736044820152607360f81b60648201526084016104a7565b6001600160a01b03821660009081526020819052604090205481811015610fed5760405162461bcd60e51b815260206004820152602260248201527f45524332303a206275726e20616d6f756e7420657863656564732062616c616e604482015261636560f01b60648201526084016104a7565b6001600160a01b038316600090815260208190526040812083830390556002805484929061101c9084906114a7565b90915550506040518281526000906001600160a01b038516907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9060200160405180910390a3505050565b6001600160a01b0316600090815260209190915260409020805460ff19169055565b6001600160a01b0381166110df5760405162461bcd60e51b815260206004820152601f60248201527f43616e6e6f74206164642030783020746f20612073686172656420726f6c650060448201526064016104a7565b6001600160a01b0316600090815260209190915260409020805460ff19166001179055565b6001600160a01b0381166111665760405162461bcd60e51b815260206004820152602360248201527f43616e6e6f742073657420616e206578636c757369766520726f6c6520746f2060448201526203078360ec1b60648201526084016104a7565b81546001600160a01b0319166001600160a01b0391909116179055565b600060208083528351808285015260005b818110156111b057858101830151858201604001528201611194565b506000604082860101526040601f19601f8301168501019250505092915050565b80356001600160a01b03811681146111e857600080fd5b919050565b6000806040838503121561120057600080fd5b611209836111d1565b946020939093013593505050565b60008060006060848603121561122c57600080fd5b611235846111d1565b9250611243602085016111d1565b9150604084013590509250925092565b60006020828403121561126557600080fd5b5035919050565b6000806040838503121561127f57600080fd5b8235915061128f602084016111d1565b90509250929050565b6000602082840312156112aa57600080fd5b6112b3826111d1565b9392505050565b600080604083850312156112cd57600080fd5b6112d6836111d1565b915061128f602084016111d1565b600181811c908216806112f857607f821691505b60208210810361098057634e487b7160e01b600052602260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b8082018082111561041457610414611318565b634e487b7160e01b600052602160045260246000fd5b60208082526022908201527f53656e64657220646f6573206e6f7420686f6c6420726571756972656420726f6040820152616c6560f01b606082015260800190565b6020808252602c908201527f4d7573742062652063616c6c6564206f6e20616e20696e697469616c697a656460408201526b2053686172656420726f6c6560a01b606082015260800190565b60208082526024908201527f43616e206f6e6c792062652063616c6c6564206279206120726f6c65206d616e60408201526330b3b2b960e11b606082015260800190565b6020808252602f908201527f4d7573742062652063616c6c6564206f6e20616e20696e697469616c697a656460408201526e204578636c757369766520726f6c6560881b606082015260800190565b634e487b7160e01b600052603260045260246000fd5b6000600182016114a0576114a0611318565b5060010190565b818103818111156104145761041461131856fea26469706673582212208961104dd3923b79c08fd49fd308093d4ed7792f1229905fa0e9f300d355f10d64736f6c63430008100033417474656d7074656420746f2075736520616e20696e76616c696420726f6c65608060405260078054600160ff199182168117909255600b8054909116909117905534801561002d57600080fd5b5061c6038061003d6000396000f3fe60806040523480156200001157600080fd5b5060043610620000c35760003560e01c806385226c81116200007a57806385226c8114620001af578063916a17c614620001c8578063b5508aa914620001d2578063ba414fa614620001dc578063e20c9f7114620001f7578063fa7626d4146200020157600080fd5b80630a9254e414620000c85780631ed7831c14620001505780632ade388014620001695780633e5e3c2314620001825780633f7286f4146200018c57806366d9a9a01462000196575b600080fd5b620000d26200020f565b60405162000147919081516001600160a01b03908116825260208084015182169083015260408084015182169083015260608084015182169083015260808084015182169083015260a08084015182169083015260c08084015182169083015260e09283015116918101919091526101000190565b60405180910390f35b6200015a620006af565b60405162000147919062000e70565b6200017362000713565b60405162000147919062000ee5565b6200015a62000861565b6200015a620008c3565b620001a062000925565b60405162000147919062000fc6565b620001b962000a0f565b6040516200014791906200107d565b620001a062000ae9565b620001b962000bd3565b620001e662000cad565b604051901515815260200162000147565b6200015a62000de4565b600754620001e69060ff1681565b6040805161010081018252600080825260208201819052918101829052606081018290526080810182905260a0810182905260c0810182905260e08101919091526000604051620002609062000e46565b604051809103906000f0801580156200027d573d6000803e3d6000fd5b506001600160a01b0316630a9254e46040518163ffffffff1660e01b815260040160c0604051808303816000875af1158015620002be573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620002e4919062001106565b905060006012604051620002f89062000e54565b6060808252601290820152712232b330bab63a102137b732102a37b5b2b760711b608082015260a0602082018190526003908201526211109560ea1b60c082015260ff909116604082015260e001604051809103906000f08015801562000363573d6000803e3d6000fd5b506040516303223eab60e11b815260016004820152909150737109709ecfa91a80626ff3989d68f67f5b1dd12d906306447d5690602401600060405180830381600087803b158015620003b557600080fd5b505af1158015620003ca573d6000803e3d6000fd5b505050606083015160405163e43252d760e01b81526001600160a01b038481166004830152909116915063e43252d790602401600060405180830381600087803b1580156200041857600080fd5b505af11580156200042d573d6000803e3d6000fd5b50505060808301516040516310a7e20160e01b81526b082a6a68aa4a8bea8a4aaa8960a31b60048201526001600160a01b0390911691506310a7e20190602401600060405180830381600087803b1580156200048857600080fd5b505af11580156200049d573d6000803e3d6000fd5b5050505060408281015181516020810183526802b5e3af16b18800008082529251637e7e591d60e01b81526001600160a01b03858116600483015291516024820152611c20929190911690637e7e591d90604401600060405180830381600087803b1580156200050c57600080fd5b505af115801562000521573d6000803e3d6000fd5b505050506000846020015184838760000151604051620005419062000e62565b6001600160a01b039485168152928416602084015267ffffffffffffffff9091166040830152919091166060820152608001604051809103906000f08015801562000590573d6000803e3d6000fd5b5090507f885cb69240a935d632d79c317109709ecfa91a80626ff3989d68f67f5b1dd12d60001c6001600160a01b03166390c5013b6040518163ffffffff1660e01b8152600401600060405180830381600087803b158015620005f257600080fd5b505af115801562000607573d6000803e3d6000fd5b5050505060405180610100016040528086600001516001600160a01b0316815260200186602001516001600160a01b0316815260200186604001516001600160a01b0316815260200186606001516001600160a01b0316815260200186608001516001600160a01b031681526020018660a001516001600160a01b03168152602001856001600160a01b03168152602001826001600160a01b03168152509550505050505090565b606060148054806020026020016040519081016040528092919081815260200182805480156200070957602002820191906000526020600020905b81546001600160a01b03168152600190910190602001808311620006ea575b5050505050905090565b6060601b805480602002602001604051908101604052809291908181526020016000905b828210156200085857600084815260208082206040805180820182526002870290920180546001600160a01b03168352600181018054835181870281018701909452808452939591948681019491929084015b8282101562000840578382906000526020600020018054620007ac90620011c1565b80601f0160208091040260200160405190810160405280929190818152602001828054620007da90620011c1565b80156200082b5780601f10620007ff576101008083540402835291602001916200082b565b820191906000526020600020905b8154815290600101906020018083116200080d57829003601f168201915b5050505050815260200190600101906200078a565b50505050815250508152602001906001019062000737565b50505050905090565b6060601680548060200260200160405190810160405280929190818152602001828054801562000709576020028201919060005260206000209081546001600160a01b03168152600190910190602001808311620006ea575050505050905090565b6060601580548060200260200160405190810160405280929190818152602001828054801562000709576020028201919060005260206000209081546001600160a01b03168152600190910190602001808311620006ea575050505050905090565b60606019805480602002602001604051908101604052809291908181526020016000905b82821015620008585760008481526020908190206040805180820182526002860290920180546001600160a01b03168352600181018054835181870281018701909452808452939491938583019392830182828015620009f657602002820191906000526020600020906000905b82829054906101000a900460e01b6001600160e01b03191681526020019060040190602082600301049283019260010382029150808411620009b75790505b5050505050815250508152602001906001019062000949565b60606018805480602002602001604051908101604052809291908181526020016000905b828210156200085857838290600052602060002001805462000a5590620011c1565b80601f016020809104026020016040519081016040528092919081815260200182805462000a8390620011c1565b801562000ad45780601f1062000aa85761010080835404028352916020019162000ad4565b820191906000526020600020905b81548152906001019060200180831162000ab657829003601f168201915b50505050508152602001906001019062000a33565b6060601a805480602002602001604051908101604052809291908181526020016000905b82821015620008585760008481526020908190206040805180820182526002860290920180546001600160a01b0316835260018101805483518187028101870190945280845293949193858301939283018282801562000bba57602002820191906000526020600020906000905b82829054906101000a900460e01b6001600160e01b0319168152602001906004019060208260030104928301926001038202915080841162000b7b5790505b5050505050815250508152602001906001019062000b0d565b60606017805480602002602001604051908101604052809291908181526020016000905b828210156200085857838290600052602060002001805462000c1990620011c1565b80601f016020809104026020016040519081016040528092919081815260200182805462000c4790620011c1565b801562000c985780601f1062000c6c5761010080835404028352916020019162000c98565b820191906000526020600020905b81548152906001019060200180831162000c7a57829003601f168201915b50505050508152602001906001019062000bf7565b600754600090610100900460ff161562000cd05750600754610100900460ff1690565b6000737109709ecfa91a80626ff3989d68f67f5b1dd12d3b1562000ddf5760408051737109709ecfa91a80626ff3989d68f67f5b1dd12d602082018190526519985a5b195960d21b8284015282518083038401815260608301909352600092909162000d61917f667f9d70ca411d70ead50d8d5c22070dafc36ad75f3dcf5e7237b22ade9aecc491608001620011fd565b60408051601f198184030181529082905262000d7d9162001230565b6000604051808303816000865af19150503d806000811462000dbc576040519150601f19603f3d011682016040523d82523d6000602084013e62000dc1565b606091505b509150508080602001905181019062000ddb91906200124e565b9150505b919050565b6060601380548060200260200160405190810160405280929190818152602001828054801562000709576020028201919060005260206000209081546001600160a01b03168152600190910190602001808311620006ea575050505050905090565b6167bf806200127a83390190565b610cff8062007a3983390190565b613e96806200873883390190565b6020808252825182820181905260009190848201906040850190845b8181101562000eb35783516001600160a01b03168352928401929184019160010162000e8c565b50909695505050505050565b60005b8381101562000edc57818101518382015260200162000ec2565b50506000910152565b6000602080830181845280855180835260408601915060408160051b870101925083870160005b8281101562000fb957603f19888603018452815180516001600160a01b0316865286015160408787018190528151908701819052908701906060600582901b88018101919088019060005b8181101562000fa157898403605f190183528451805180865262000f81818e88018f850162000ebf565b958c0195601f01601f1916949094018b019350918a019160010162000f57565b50919750505093860193509085019060010162000f0c565b5092979650505050505050565b60006020808301818452808551808352604092508286019150828160051b8701018488016000805b848110156200106e57898403603f19018652825180516001600160a01b03168552880151888501889052805188860181905290890190839060608701905b80831015620010585783516001600160e01b0319168252928b019260019290920191908b01906200102c565b50978a0197955050509187019160010162000fee565b50919998505050505050505050565b6000602080830181845280855180835260408601915060408160051b870101925083870160005b8281101562000fb957878503603f1901845281518051808752620010ce818989018a850162000ebf565b601f01601f191695909501860194509285019290850190600101620010a4565b80516001600160a01b038116811462000ddf57600080fd5b600060c082840312156200111957600080fd5b60405160c0810181811067ffffffffffffffff821117156200114b57634e487b7160e01b600052604160045260246000fd5b6040526200115983620010ee565b81526200116960208401620010ee565b60208201526200117c60408401620010ee565b60408201526200118f60608401620010ee565b6060820152620011a260808401620010ee565b6080820152620011b560a08401620010ee565b60a08201529392505050565b600181811c90821680620011d657607f821691505b602082108103620011f757634e487b7160e01b600052602260045260246000fd5b50919050565b6001600160e01b03198316815281516000906200122281600485016020870162000ebf565b919091016004019392505050565b600082516200124481846020870162000ebf565b9190910192915050565b6000602082840312156200126157600080fd5b815180151581146200127257600080fd5b939250505056fe608060405260078054600160ff199182168117909255600b8054909116909117905534801561002d57600080fd5b506167828061003d6000396000f3fe608060405234801561001057600080fd5b50600436106100b45760003560e01c806385226c811161007157806385226c8114610174578063916a17c614610189578063b5508aa914610191578063ba414fa614610199578063e20c9f71146101b1578063fa7626d4146101b957600080fd5b80630a9254e4146100b95780631ed7831c146101255780632ade38801461013a5780633e5e3c231461014f5780633f7286f41461015757806366d9a9a01461015f575b600080fd5b6100c16101c6565b60405161011c919081516001600160a01b03908116825260208084015182169083015260408084015182169083015260608084015182169083015260808084015182169083015260a092830151169181019190915260c00190565b60405180910390f35b61012d61042a565b60405161011c9190610ba1565b61014261048c565b60405161011c9190610c12565b61012d6105ce565b61012d61062e565b61016761068e565b60405161011c9190610ced565b61017c610774565b60405161011c9190610da0565b610167610844565b61017c61092a565b6101a16109fa565b604051901515815260200161011c565b61012d610b27565b6007546101a19060ff1681565b6040805160c081018252600080825260208201819052918101829052606081018290526080810182905260a0810191909152600060405161020690610b87565b604051809103906000f080158015610222573d6000803e3d6000fd5b506001600160a01b0316630a9254e46040518163ffffffff1660e01b815260040160a0604051808303816000875af1158015610262573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102869190610e30565b90506000816020015182600001516040516102a090610b94565b6001600160a01b03928316815291166020820152604001604051809103906000f0801580156102d3573d6000803e3d6000fd5b5060405163ca669fa760e01b815260016004820152909150737109709ecfa91a80626ff3989d68f67f5b1dd12d9063ca669fa790602401600060405180830381600087803b15801561032457600080fd5b505af1158015610338573d6000803e3d6000fd5b50505060208301516040516318fcb32f60e11b8152654f7261636c6560d01b60048201526001600160a01b03848116602483015290911691506331f9665e90604401600060405180830381600087803b15801561039457600080fd5b505af11580156103a8573d6000803e3d6000fd5b505050506040518060c0016040528083600001516001600160a01b0316815260200183602001516001600160a01b0316815260200183604001516001600160a01b0316815260200183606001516001600160a01b0316815260200183608001516001600160a01b03168152602001826001600160a01b03168152509250505090565b6060601480548060200260200160405190810160405280929190818152602001828054801561048257602002820191906000526020600020905b81546001600160a01b03168152600190910190602001808311610464575b5050505050905090565b6060601b805480602002602001604051908101604052809291908181526020016000905b828210156105c557600084815260208082206040805180820182526002870290920180546001600160a01b03168352600181018054835181870281018701909452808452939591948681019491929084015b828210156105ae57838290600052602060002001805461052190610ed0565b80601f016020809104026020016040519081016040528092919081815260200182805461054d90610ed0565b801561059a5780601f1061056f5761010080835404028352916020019161059a565b820191906000526020600020905b81548152906001019060200180831161057d57829003601f168201915b505050505081526020019060010190610502565b5050505081525050815260200190600101906104b0565b50505050905090565b60606016805480602002602001604051908101604052809291908181526020018280548015610482576020028201919060005260206000209081546001600160a01b03168152600190910190602001808311610464575050505050905090565b60606015805480602002602001604051908101604052809291908181526020018280548015610482576020028201919060005260206000209081546001600160a01b03168152600190910190602001808311610464575050505050905090565b60606019805480602002602001604051908101604052809291908181526020016000905b828210156105c55760008481526020908190206040805180820182526002860290920180546001600160a01b0316835260018101805483518187028101870190945280845293949193858301939283018282801561075c57602002820191906000526020600020906000905b82829054906101000a900460e01b6001600160e01b0319168152602001906004019060208260030104928301926001038202915080841161071e5790505b505050505081525050815260200190600101906106b2565b60606018805480602002602001604051908101604052809291908181526020016000905b828210156105c55783829060005260206000200180546107b790610ed0565b80601f01602080910402602001604051908101604052809291908181526020018280546107e390610ed0565b80156108305780601f1061080557610100808354040283529160200191610830565b820191906000526020600020905b81548152906001019060200180831161081357829003601f168201915b505050505081526020019060010190610798565b6060601a805480602002602001604051908101604052809291908181526020016000905b828210156105c55760008481526020908190206040805180820182526002860290920180546001600160a01b0316835260018101805483518187028101870190945280845293949193858301939283018282801561091257602002820191906000526020600020906000905b82829054906101000a900460e01b6001600160e01b031916815260200190600401906020826003010492830192600103820291508084116108d45790505b50505050508152505081526020019060010190610868565b60606017805480602002602001604051908101604052809291908181526020016000905b828210156105c557838290600052602060002001805461096d90610ed0565b80601f016020809104026020016040519081016040528092919081815260200182805461099990610ed0565b80156109e65780601f106109bb576101008083540402835291602001916109e6565b820191906000526020600020905b8154815290600101906020018083116109c957829003601f168201915b50505050508152602001906001019061094e565b600754600090610100900460ff1615610a1c5750600754610100900460ff1690565b6000737109709ecfa91a80626ff3989d68f67f5b1dd12d3b15610b225760408051737109709ecfa91a80626ff3989d68f67f5b1dd12d602082018190526519985a5b195960d21b82840152825180830384018152606083019093526000929091610aaa917f667f9d70ca411d70ead50d8d5c22070dafc36ad75f3dcf5e7237b22ade9aecc491608001610f0a565b60408051601f1981840301815290829052610ac491610f3b565b6000604051808303816000865af19150503d8060008114610b01576040519150601f19603f3d011682016040523d82523d6000602084013e610b06565b606091505b5091505080806020019051810190610b1e9190610f57565b9150505b919050565b60606013805480602002602001604051908101604052809291908181526020018280548015610482576020028201919060005260206000209081546001600160a01b03168152600190910190602001808311610464575050505050905090565b6145b480610f8183390190565b6112188061553583390190565b6020808252825182820181905260009190848201906040850190845b81811015610be25783516001600160a01b031683529284019291840191600101610bbd565b50909695505050505050565b60005b83811015610c09578181015183820152602001610bf1565b50506000910152565b6000602080830181845280855180835260408601915060408160051b870101925083870160005b82811015610ce057603f19888603018452815180516001600160a01b0316865286015160408787018190528151908701819052908701906060600582901b88018101919088019060005b81811015610cc957898403605f1901835284518051808652610caa818e88018f8501610bee565b958c0195601f01601f1916949094018b019350918a0191600101610c83565b509197505050938601935090850190600101610c39565b5092979650505050505050565b60006020808301818452808551808352604092508286019150828160051b8701018488016000805b84811015610d9157898403603f19018652825180516001600160a01b03168552880151888501889052805188860181905290890190839060608701905b80831015610d7c5783516001600160e01b0319168252928b019260019290920191908b0190610d52565b50978a01979550505091870191600101610d15565b50919998505050505050505050565b6000602080830181845280855180835260408601915060408160051b870101925083870160005b82811015610ce057878503603f1901845281518051808752610dee818989018a8501610bee565b601f01601f191695909501860194509285019290850190600101610dc7565b6001600160a01b0381168114610e2257600080fd5b50565b8051610b2281610e0d565b600060a08284031215610e4257600080fd5b60405160a0810181811067ffffffffffffffff82111715610e7357634e487b7160e01b600052604160045260246000fd5b6040528251610e8181610e0d565b81526020830151610e9181610e0d565b6020820152610ea260408401610e25565b6040820152610eb360608401610e25565b6060820152610ec460808401610e25565b60808201529392505050565b600181811c90821680610ee457607f821691505b602082108103610f0457634e487b7160e01b600052602260045260246000fd5b50919050565b6001600160e01b0319831681528151600090610f2d816004850160208701610bee565b919091016004019392505050565b60008251610f4d818460208701610bee565b9190910192915050565b600060208284031215610f6957600080fd5b81518015158114610f7957600080fd5b939250505056fe608060405260078054600160ff199182168117909255600b8054909116909117905534801561002d57600080fd5b506145778061003d6000396000f3fe60806040523480156200001157600080fd5b5060043610620000c35760003560e01c806385226c81116200007a57806385226c81146200018a578063916a17c614620001a3578063b5508aa914620001ad578063ba414fa614620001b7578063e20c9f7114620001d2578063fa7626d414620001dc57600080fd5b80630a9254e414620000c85780631ed7831c146200012b5780632ade388014620001445780633e5e3c23146200015d5780633f7286f4146200016757806366d9a9a01462000171575b600080fd5b620000d2620001ea565b60405162000122919081516001600160a01b039081168252602080840151821690830152604080840151821690830152606080840151821690830152608092830151169181019190915260a00190565b60405180910390f35b6200013562000618565b60405162000122919062000e41565b6200014e6200067c565b60405162000122919062000eb6565b62000135620007ca565b620001356200082c565b6200017b6200088e565b60405162000122919062000f97565b6200019462000978565b6040516200012291906200104e565b6200017b62000a52565b6200019462000b3c565b620001c162000c16565b604051901515815260200162000122565b6200013562000d4d565b600754620001c19060ff1681565b6040805160a08101825260008082526020820181905281830181905260608201819052608082015290516303223eab60e11b815260016004820152737109709ecfa91a80626ff3989d68f67f5b1dd12d906306447d5690602401600060405180830381600087803b1580156200025f57600080fd5b505af115801562000274573d6000803e3d6000fd5b505050506000604051620002889062000dfb565b604051809103906000f080158015620002a5573d6000803e3d6000fd5b506001600160a01b0316630a9254e46040518163ffffffff1660e01b81526004016020604051808303816000875af1158015620002e6573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200030c9190620010bf565b905060006040516200031e9062000e09565b604051809103906000f0801580156200033b573d6000803e3d6000fd5b50905060006200034c600062000daf565b62000358600062000daf565b84604051620003679062000e17565b92518352905160208301526001600160a01b03166040820152606001604051809103906000f080158015620003a0573d6000803e3d6000fd5b5090506000604051620003b39062000e25565b604051809103906000f080158015620003d0573d6000803e3d6000fd5b5090506000604051620003e39062000e33565b604051809103906000f08015801562000400573d6000803e3d6000fd5b506040516318fcb32f60e11b81526453746f726560d81b60048201526001600160a01b038581166024830152919250908516906331f9665e90604401600060405180830381600087803b1580156200045757600080fd5b505af11580156200046c573d6000803e3d6000fd5b50506040516318fcb32f60e11b81527210dbdb1b185d195c985b15da1a5d195b1a5cdd606a1b60048201526001600160a01b038581166024830152871692506331f9665e9150604401600060405180830381600087803b158015620004d057600080fd5b505af1158015620004e5573d6000803e3d6000fd5b50506040516318fcb32f60e11b8152721259195b9d1a599a595c95da1a5d195b1a5cdd606a1b60048201526001600160a01b038481166024830152871692506331f9665e9150604401600060405180830381600087803b1580156200054957600080fd5b505af11580156200055e573d6000803e3d6000fd5b505050507f885cb69240a935d632d79c317109709ecfa91a80626ff3989d68f67f5b1dd12d60001c6001600160a01b03166390c5013b6040518163ffffffff1660e01b8152600401600060405180830381600087803b158015620005c157600080fd5b505af1158015620005d6573d6000803e3d6000fd5b50506040805160a0810182526001600160a01b039889168152968816602088015294871694860194909452509084166060840152909216608082015292915050565b606060148054806020026020016040519081016040528092919081815260200182805480156200067257602002820191906000526020600020905b81546001600160a01b0316815260019091019060200180831162000653575b5050505050905090565b6060601b805480602002602001604051908101604052809291908181526020016000905b82821015620007c157600084815260208082206040805180820182526002870290920180546001600160a01b03168352600181018054835181870281018701909452808452939591948681019491929084015b82821015620007a95783829060005260206000200180546200071590620010ea565b80601f01602080910402602001604051908101604052809291908181526020018280546200074390620010ea565b8015620007945780601f10620007685761010080835404028352916020019162000794565b820191906000526020600020905b8154815290600101906020018083116200077657829003601f168201915b505050505081526020019060010190620006f3565b505050508152505081526020019060010190620006a0565b50505050905090565b6060601680548060200260200160405190810160405280929190818152602001828054801562000672576020028201919060005260206000209081546001600160a01b0316815260019091019060200180831162000653575050505050905090565b6060601580548060200260200160405190810160405280929190818152602001828054801562000672576020028201919060005260206000209081546001600160a01b0316815260019091019060200180831162000653575050505050905090565b60606019805480602002602001604051908101604052809291908181526020016000905b82821015620007c15760008481526020908190206040805180820182526002860290920180546001600160a01b031683526001810180548351818702810187019094528084529394919385830193928301828280156200095f57602002820191906000526020600020906000905b82829054906101000a900460e01b6001600160e01b03191681526020019060040190602082600301049283019260010382029150808411620009205790505b50505050508152505081526020019060010190620008b2565b60606018805480602002602001604051908101604052809291908181526020016000905b82821015620007c1578382906000526020600020018054620009be90620010ea565b80601f0160208091040260200160405190810160405280929190818152602001828054620009ec90620010ea565b801562000a3d5780601f1062000a115761010080835404028352916020019162000a3d565b820191906000526020600020905b81548152906001019060200180831162000a1f57829003601f168201915b5050505050815260200190600101906200099c565b6060601a805480602002602001604051908101604052809291908181526020016000905b82821015620007c15760008481526020908190206040805180820182526002860290920180546001600160a01b0316835260018101805483518187028101870190945280845293949193858301939283018282801562000b2357602002820191906000526020600020906000905b82829054906101000a900460e01b6001600160e01b0319168152602001906004019060208260030104928301926001038202915080841162000ae45790505b5050505050815250508152602001906001019062000a76565b60606017805480602002602001604051908101604052809291908181526020016000905b82821015620007c157838290600052602060002001805462000b8290620010ea565b80601f016020809104026020016040519081016040528092919081815260200182805462000bb090620010ea565b801562000c015780601f1062000bd55761010080835404028352916020019162000c01565b820191906000526020600020905b81548152906001019060200180831162000be357829003601f168201915b50505050508152602001906001019062000b60565b600754600090610100900460ff161562000c395750600754610100900460ff1690565b6000737109709ecfa91a80626ff3989d68f67f5b1dd12d3b1562000d485760408051737109709ecfa91a80626ff3989d68f67f5b1dd12d602082018190526519985a5b195960d21b8284015282518083038401815260608301909352600092909162000cca917f667f9d70ca411d70ead50d8d5c22070dafc36ad75f3dcf5e7237b22ade9aecc49160800162001126565b60408051601f198184030181529082905262000ce69162001159565b6000604051808303816000865af19150503d806000811462000d25576040519150601f19603f3d011682016040523d82523d6000602084013e62000d2a565b606091505b509150508080602001905181019062000d44919062001177565b9150505b919050565b6060601380548060200260200160405190810160405280929190818152602001828054801562000672576020028201919060005260206000209081546001600160a01b0316815260019091019060200180831162000653575050505050905090565b60408051602081019091526000815260408051602081019091528062000dde84670de0b6b3a764000062000de6565b905292915050565b600062000df482846200119b565b9392505050565b6101b580620011ca83390190565b610480806200137f83390190565b611f8b80620017ff83390190565b61095e806200378a83390190565b61045a80620040e883390190565b6020808252825182820181905260009190848201906040850190845b8181101562000e845783516001600160a01b03168352928401929184019160010162000e5d565b50909695505050505050565b60005b8381101562000ead57818101518382015260200162000e93565b50506000910152565b6000602080830181845280855180835260408601915060408160051b870101925083870160005b8281101562000f8a57603f19888603018452815180516001600160a01b0316865286015160408787018190528151908701819052908701906060600582901b88018101919088019060005b8181101562000f7257898403605f190183528451805180865262000f52818e88018f850162000e90565b958c0195601f01601f1916949094018b019350918a019160010162000f28565b50919750505093860193509085019060010162000edd565b5092979650505050505050565b60006020808301818452808551808352604092508286019150828160051b8701018488016000805b848110156200103f57898403603f19018652825180516001600160a01b03168552880151888501889052805188860181905290890190839060608701905b80831015620010295783516001600160e01b0319168252928b019260019290920191908b019062000ffd565b50978a0197955050509187019160010162000fbf565b50919998505050505050505050565b6000602080830181845280855180835260408601915060408160051b870101925083870160005b8281101562000f8a57878503603f19018452815180518087526200109f818989018a850162000e90565b601f01601f19169590950186019450928501929085019060010162001075565b600060208284031215620010d257600080fd5b81516001600160a01b038116811462000df457600080fd5b600181811c90821680620010ff57607f821691505b6020821081036200112057634e487b7160e01b600052602260045260246000fd5b50919050565b6001600160e01b03198316815281516000906200114b81600485016020870162000e90565b919091016004019392505050565b600082516200116d81846020870162000e90565b9190910192915050565b6000602082840312156200118a57600080fd5b8151801515811462000df457600080fd5b6000816000190483118215151615620011c457634e487b7160e01b600052601160045260246000fd5b50029056fe608060405234801561001057600080fd5b50610195806100206000396000f3fe608060405234801561001057600080fd5b506004361061002b5760003560e01c80630a9254e414610030575b600080fd5b610038610054565b6040516001600160a01b03909116815260200160405180910390f35b600060405161006290610084565b604051809103906000f08015801561007e573d6000803e3d6000fd5b50905090565b60cf806100918339019056fe608060405234801561001057600080fd5b504260005560ac806100236000396000f3fe6080604052348015600f57600080fd5b506004361060325760003560e01c806322f8e56614603757806329cb924d146049575b600080fd5b60476042366004605e565b600055565b005b60005460405190815260200160405180910390f35b600060208284031215606f57600080fd5b503591905056fea2646970667358221220ac5277a6d951fefada8e9d179a43cc6317941f75cad69224364e3024cf39f58e64736f6c63430008100033a26469706673582212207d8871378c623a5dea15cfb24a39319d130f503849e860fc71f867f1c69297ba64736f6c63430008100033608060405234801561001057600080fd5b5061001a3361001f565b61006f565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6104028061007e6000396000f3fe608060405234801561001057600080fd5b50600436106100625760003560e01c806331f9665e14610067578063715018a61461007c5780638da5cb5b14610084578063aafd5e40146100ad578063cc48f4db146100c0578063f2fde38b146100e9575b600080fd5b61007a610075366004610330565b6100fc565b005b61007a610188565b6000546001600160a01b03165b6040516001600160a01b03909116815260200160405180910390f35b6100916100bb36600461035c565b6101be565b6100916100ce36600461035c565b6001602052600090815260409020546001600160a01b031681565b61007a6100f7366004610375565b610229565b6000546001600160a01b0316331461012f5760405162461bcd60e51b815260040161012690610397565b60405180910390fd5b60008281526001602052604080822080546001600160a01b0319166001600160a01b0385169081179091559051909184917fb29aa13e555039289e0513962835b00fcc6e4a265ae8f99e68e5b90d5406fe489190a35050565b6000546001600160a01b031633146101b25760405162461bcd60e51b815260040161012690610397565b6101bc60006102c4565b565b6000818152600160205260408120546001600160a01b0316806102235760405162461bcd60e51b815260206004820152601860248201527f496d706c656d656e746174696f6e206e6f7420666f756e6400000000000000006044820152606401610126565b92915050565b6000546001600160a01b031633146102535760405162461bcd60e51b815260040161012690610397565b6001600160a01b0381166102b85760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608401610126565b6102c1816102c4565b50565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b80356001600160a01b038116811461032b57600080fd5b919050565b6000806040838503121561034357600080fd5b8235915061035360208401610314565b90509250929050565b60006020828403121561036e57600080fd5b5035919050565b60006020828403121561038757600080fd5b61039082610314565b9392505050565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260408201526060019056fea26469706673582212200252ff2d138f6d885f918d0a2b22e867dd71bd3438f512cd1d4016487f70090264736f6c6343000810003360806040523480156200001157600080fd5b5060405162001f8b38038062001f8b833981016040819052620000349162000655565b600280546001600160a01b0319166001600160a01b0383161790556200005d600080336200008b565b6200006c6001600033620001ec565b620000778362000203565b620000828262000300565b505050620006f5565b826000808281526020819052604090206001015460ff166002811115620000b657620000b6620006b1565b14620001095760405162461bcd60e51b815260206004820152601e60248201527f43616e6e6f74207573652061207072652d6578697374696e6720726f6c65000060448201526064015b60405180910390fd5b60008481526020819052604090206001808201805460ff191682800217905550838155620001476002820184620003f7602090811b62000dd717901c565b60008481526020819052604081206001015460ff166002811115620001705762000170620006b1565b03620001e55760405162461bcd60e51b815260206004820152603c60248201527f417474656d7074656420746f2075736520616e20696e76616c696420726f6c6560448201527f20746f206d616e61676520616e206578636c757369766520726f6c6500000000606482015260840162000100565b5050505050565b6001839055620001fe8383836200008b565b505050565b600062000211813362000407565b620002595760405162461bcd60e51b8152602060048201526022602482015260008051602062001f6b8339815191526044820152616c6560f01b606482015260840162000100565b62000274600183620004df60201b62000de11790919060201c565b620002c25760405162461bcd60e51b815260206004820152601e60248201527f466565206d757374206265203c203130302520706572207365636f6e642e0000604482015260640162000100565b815160038190556040519081527e41cf46cedaae9927def5c0647b190fd958c8ab8cde4219dad74319bc05d3d9906020015b60405180910390a15050565b60006200030e813362000407565b620003565760405162461bcd60e51b8152602060048201526022602482015260008051602062001f6b8339815191526044820152616c6560f01b606482015260840162000100565b62000371600183620004df60201b62000de11790919060201c565b620003bf5760405162461bcd60e51b815260206004820152601f60248201527f7765656b6c792064656c617920666565206d757374206265203c203130302500604482015260640162000100565b815160048190556040519081527f2e6cd3e6f7808568620c647ac0e652b0e95bef2494692adbc118fbbd02a8e82e90602001620002f4565b620004038282620004f8565b5050565b600082815260208190526040812060018082015460ff166002811115620004325762000432620006b1565b036200045e576200045583826002016200057960201b62000df81790919060201c565b915050620004d9565b6002600182015460ff1660028111156200047c576200047c620006b1565b036200049f576200045583826003016200058c60201b62000e0b1790919060201c565b60405162461bcd60e51b815260206004820152600e60248201526d125b9d985b1a59081c9bdb19525960921b604482015260640162000100565b92915050565b6000620004ec82620005ab565b51835110905092915050565b6001600160a01b0381166200055c5760405162461bcd60e51b815260206004820152602360248201527f43616e6e6f742073657420616e206578636c757369766520726f6c6520746f2060448201526203078360ec1b606482015260840162000100565b81546001600160a01b0319166001600160a01b0391909116179055565b90546001600160a01b0391821691161490565b6001600160a01b03166000908152602091909152604090205460ff1690565b6040805160208101909152600081526040518060200160405280620005e7670de0b6b3a764000085620005ef60201b62000e2a1790919060201c565b905292915050565b6000620005fd8284620006c7565b9392505050565b6000602082840312156200061757600080fd5b604051602081016001600160401b03811182821017156200064857634e487b7160e01b600052604160045260246000fd5b6040529151825250919050565b6000806000606084860312156200066b57600080fd5b62000677858562000604565b925062000688856020860162000604565b60408501519092506001600160a01b0381168114620006a657600080fd5b809150509250925092565b634e487b7160e01b600052602160045260246000fd5b6000816000190483118215151615620006f057634e487b7160e01b600052601160045260246000fd5b500290565b61186680620007056000396000f3fe6080604052600436106101355760003560e01c80637d69dfdb116100ab578063ab3545e51161006f578063ab3545e5146103b1578063acb6f6cb146103d1578063b187487d146103f1578063bd1f4b5214610411578063cd3a9b2414610431578063d97c05be1461043957600080fd5b80637d69dfdb146103235780637e7e591d1461033a57806384ae2a741461035a5780638659d23214610371578063aaa14ca31461039157600080fd5b80635b97aadd116100fd5780635b97aadd146101f35780636be7658b146102515780636f356f4a1461027157806374201feb1461029e57806374d0a676146102d35780637cdc1cb9146102f357600080fd5b80631c39c38d1461013a57806322f8e5661461017757806329cb924d146101995780632e1a7d4d146101bc5780632fee2098146101dc575b600080fd5b34801561014657600080fd5b5060025461015a906001600160a01b031681565b6040516001600160a01b0390911681526020015b60405180910390f35b34801561018357600080fd5b5061019761019236600461142b565b610459565b005b3480156101a557600080fd5b506101ae6104cf565b60405190815260200161016e565b3480156101c857600080fd5b506101976101d736600461142b565b610564565b3480156101e857600080fd5b506003546101ae9081565b3480156101ff57600080fd5b5061024261020e366004611460565b60408051602080820183526000918290526001600160a01b0393909316815260058352819020815192830190915254815290565b6040519051815260200161016e565b34801561025d57600080fd5b5061019761026c36600461147b565b6105a4565b34801561027d57600080fd5b506101ae61028c366004611460565b60056020526000908152604090205481565b3480156102aa57600080fd5b506102be6102b93660046114bf565b61067a565b6040805192518352905160208301520161016e565b3480156102df57600080fd5b506101976102ee36600461147b565b610740565b3480156102ff57600080fd5b5061031361030e36600461147b565b610816565b604051901515815260200161016e565b34801561032f57600080fd5b506004546101ae9081565b34801561034657600080fd5b50610197610355366004611545565b6108cb565b34801561036657600080fd5b506101ae62093a8081565b34801561037d57600080fd5b5061019761038c366004611570565b61094f565b34801561039d57600080fd5b506101976103ac36600461142b565b6109d1565b3480156103bd57600080fd5b5061015a6103cc36600461142b565b610a8d565b3480156103dd57600080fd5b506101976103ec36600461159b565b610af8565b3480156103fd57600080fd5b5061019761040c36600461159b565b610bb5565b34801561041d57600080fd5b5061019761042c3660046115b7565b610c6b565b610197610caf565b34801561044557600080fd5b5061019761045436600461147b565b610d01565b6002546001600160a01b031661046e57600080fd5b60025460405163117c72b360e11b8152600481018390526001600160a01b03909116906322f8e56690602401600060405180830381600087803b1580156104b457600080fd5b505af11580156104c8573d6000803e3d6000fd5b5050505050565b6002546000906001600160a01b03161561055f57600260009054906101000a90046001600160a01b03166001600160a01b03166329cb924d6040518163ffffffff1660e01b8152600401602060405180830381865afa158015610536573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061055a91906115e1565b905090565b504290565b6001546105718133610816565b6105965760405162461bcd60e51b815260040161058d906115fa565b60405180910390fd5b6105a03383610e36565b5050565b81600260008281526020819052604090206001015460ff1660028111156105cd576105cd61163c565b146105ea5760405162461bcd60e51b815260040161058d90611652565b60008381526020819052604090205483906106059033610816565b6106215760405162461bcd60e51b815260040161058d9061169e565b600084815260208190526040902061063c9060030184610f4f565b60405133906001600160a01b0385169086907feb3e33034c392e69263b04ec0fa376dc12784a41b6676c7f31b936cbc0fbb5af90600090a450505050565b60408051602081019091526000815260408051602081019091526000815260006106a48587610f71565b604080516020810190915260035481529091506106da906106d4836106ce3689900389018961159b565b90610f7d565b90610fae565b925060006106f0876106ea6104cf565b90610f71565b9050600061071a6107048362093a80610feb565b6040805160208101909152600454815290610f7d565b9050610733816106d4856106ce368b90038b018b61159b565b9350505050935093915050565b81600260008281526020819052604090206001015460ff1660028111156107695761076961163c565b146107865760405162461bcd60e51b815260040161058d90611652565b60008381526020819052604090205483906107a19033610816565b6107bd5760405162461bcd60e51b815260040161058d9061169e565b60008481526020819052604090206107d89060030184610ff7565b60405133906001600160a01b0385169086907f63502af7324ff6db91ab38f8236a648727d9385ea6c782073dd4882d8a61a48f90600090a450505050565b600082815260208190526040812060018082015460ff16600281111561083e5761083e61163c565b0361085f5760028101546001600160a01b038481169116145b9150506108c5565b6002600182015460ff16600281111561087a5761087a61163c565b0361088c576108576003820184610e0b565b60405162461bcd60e51b815260206004820152600e60248201526d125b9d985b1a59081c9bdb19525960921b604482015260640161058d565b92915050565b60006108d78133610816565b6108f35760405162461bcd60e51b815260040161058d906115fa565b6001600160a01b0383166000908152600560205260409081902083519055517f98c807f575ae6584ff8200eaf3205f3f20abf9c954fff030c152f5e7c5446d6e90610942908451815260200190565b60405180910390a1505050565b8161096a60006109643685900385018561159b565b90611072565b6109b65760405162461bcd60e51b815260206004820152601960248201527f416d6f756e742073656e742063616e2774206265207a65726f00000000000000604482015260640161058d565b6109cc6001600160a01b03821633308535611089565b505050565b80600260008281526020819052604090206001015460ff1660028111156109fa576109fa61163c565b14610a175760405162461bcd60e51b815260040161058d90611652565b81610a228133610816565b610a3e5760405162461bcd60e51b815260040161058d906115fa565b6000838152602081905260409020610a599060030133610f4f565b6040513390819085907feb3e33034c392e69263b04ec0fa376dc12784a41b6676c7f31b936cbc0fbb5af90600090a4505050565b600081600160008281526020819052604090206001015460ff166002811115610ab857610ab861163c565b14610ad55760405162461bcd60e51b815260040161058d906116e2565b6000838152602081905260409020600201546001600160a01b03165b9392505050565b6000610b048133610816565b610b205760405162461bcd60e51b815260040161058d906115fa565b610b2b826001610de1565b610b775760405162461bcd60e51b815260206004820152601e60248201527f466565206d757374206265203c203130302520706572207365636f6e642e0000604482015260640161058d565b815160038190556040519081527e41cf46cedaae9927def5c0647b190fd958c8ab8cde4219dad74319bc05d3d9906020015b60405180910390a15050565b6000610bc18133610816565b610bdd5760405162461bcd60e51b815260040161058d906115fa565b610be8826001610de1565b610c345760405162461bcd60e51b815260206004820152601f60248201527f7765656b6c792064656c617920666565206d757374206265203c203130302500604482015260640161058d565b815160048190556040519081527f2e6cd3e6f7808568620c647ac0e652b0e95bef2494692adbc118fbbd02a8e82e90602001610ba9565b600154610c788133610816565b610c945760405162461bcd60e51b815260040161058d906115fa565b82610ca96001600160a01b03821633856110f4565b50505050565b60003411610cff5760405162461bcd60e51b815260206004820152601860248201527f56616c75652073656e742063616e2774206265207a65726f0000000000000000604482015260640161058d565b565b81600160008281526020819052604090206001015460ff166002811115610d2a57610d2a61163c565b14610d475760405162461bcd60e51b815260040161058d906116e2565b6000838152602081905260409020548390610d629033610816565b610d7e5760405162461bcd60e51b815260040161058d9061169e565b6000848152602081905260409020610d999060020184611124565b60405133906001600160a01b0385169086907f3b855c56b409b671c7112789d022675eb639d0bcb8896f1b6197c132f799e74690600090a450505050565b6105a08282611124565b6000610dec826111a3565b51835110905092915050565b90546001600160a01b0391821691161490565b6001600160a01b03166000908152602091909152604090205460ff1690565b6000610af18284611747565b80471015610e865760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a20696e73756666696369656e742062616c616e6365000000604482015260640161058d565b6000826001600160a01b03168260405160006040518083038185875af1925050503d8060008114610ed3576040519150601f19603f3d011682016040523d82523d6000602084013e610ed8565b606091505b50509050806109cc5760405162461bcd60e51b815260206004820152603a60248201527f416464726573733a20756e61626c6520746f2073656e642076616c75652c207260448201527f6563697069656e74206d61792068617665207265766572746564000000000000606482015260840161058d565b6001600160a01b0316600090815260209190915260409020805460ff19169055565b6000610af18284611766565b604080516020810190915260008152604080516020810190915283518190610fa59085610e2a565b90529392505050565b6040805160208101909152600081526040805160208101909152825184518291670de0b6b3a764000091610fe191610e2a565b610fa59190611779565b6000610af18284611779565b6001600160a01b03811661104d5760405162461bcd60e51b815260206004820152601f60248201527f43616e6e6f74206164642030783020746f20612073686172656420726f6c6500604482015260640161058d565b6001600160a01b0316600090815260209190915260409020805460ff19166001179055565b600061107d826111a3565b51835111905092915050565b6040516001600160a01b0380851660248301528316604482015260648101829052610ca99085906323b872dd60e01b906084015b60408051601f198184030181529190526020810180516001600160e01b03166001600160e01b0319909316929092179091526111d8565b6040516001600160a01b0383166024820152604481018290526109cc90849063a9059cbb60e01b906064016110bd565b6001600160a01b0381166111865760405162461bcd60e51b815260206004820152602360248201527f43616e6e6f742073657420616e206578636c757369766520726f6c6520746f2060448201526203078360ec1b606482015260840161058d565b81546001600160a01b0319166001600160a01b0391909116179055565b6040805160208101909152600081526040805160208101909152806111d084670de0b6b3a7640000610e2a565b905292915050565b600061122d826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b03166112aa9092919063ffffffff16565b8051909150156109cc578080602001905181019061124b919061179b565b6109cc5760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b606482015260840161058d565b60606112b984846000856112c1565b949350505050565b6060824710156113225760405162461bcd60e51b815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f6044820152651c8818d85b1b60d21b606482015260840161058d565b6001600160a01b0385163b6113795760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000604482015260640161058d565b600080866001600160a01b0316858760405161139591906117e1565b60006040518083038185875af1925050503d80600081146113d2576040519150601f19603f3d011682016040523d82523d6000602084013e6113d7565b606091505b50915091506113e78282866113f2565b979650505050505050565b60608315611401575081610af1565b8251156114115782518084602001fd5b8160405162461bcd60e51b815260040161058d91906117fd565b60006020828403121561143d57600080fd5b5035919050565b80356001600160a01b038116811461145b57600080fd5b919050565b60006020828403121561147257600080fd5b610af182611444565b6000806040838503121561148e57600080fd5b8235915061149e60208401611444565b90509250929050565b6000602082840312156114b957600080fd5b50919050565b6000806000606084860312156114d457600080fd5b83359250602084013591506114ec85604086016114a7565b90509250925092565b60006020828403121561150757600080fd5b6040516020810181811067ffffffffffffffff8211171561153857634e487b7160e01b600052604160045260246000fd5b6040529135825250919050565b6000806040838503121561155857600080fd5b61156183611444565b915061149e84602085016114f5565b6000806040838503121561158357600080fd5b61158c83611444565b915061149e84602085016114a7565b6000602082840312156115ad57600080fd5b610af183836114f5565b600080604083850312156115ca57600080fd5b6115d383611444565b946020939093013593505050565b6000602082840312156115f357600080fd5b5051919050565b60208082526022908201527f53656e64657220646f6573206e6f7420686f6c6420726571756972656420726f6040820152616c6560f01b606082015260800190565b634e487b7160e01b600052602160045260246000fd5b6020808252602c908201527f4d7573742062652063616c6c6564206f6e20616e20696e697469616c697a656460408201526b2053686172656420726f6c6560a01b606082015260800190565b60208082526024908201527f43616e206f6e6c792062652063616c6c6564206279206120726f6c65206d616e60408201526330b3b2b960e11b606082015260800190565b6020808252602f908201527f4d7573742062652063616c6c6564206f6e20616e20696e697469616c697a656460408201526e204578636c757369766520726f6c6560881b606082015260800190565b634e487b7160e01b600052601160045260246000fd5b600081600019048311821515161561176157611761611731565b500290565b818103818111156108c5576108c5611731565b60008261179657634e487b7160e01b600052601260045260246000fd5b500490565b6000602082840312156117ad57600080fd5b81518015158114610af157600080fd5b60005b838110156117d85781810151838201526020016117c0565b50506000910152565b600082516117f38184602087016117bd565b9190910192915050565b602081526000825180602084015261181c8160408501602087016117bd565b601f01601f1916919091016040019291505056fea26469706673582212200e1fb084c8982e7255d560e846cc4c6ad74c5f9a9b38149bdde7bb884a481b1b64736f6c6343000810003353656e64657220646f6573206e6f7420686f6c6420726571756972656420726f608060405234801561001057600080fd5b5061001a33610032565b6000805460ff60a01b1916600160a01b179055610082565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6108cd806100916000396000f3fe608060405234801561001057600080fd5b50600436106100935760003560e01c80638da5cb5b116100665780638da5cb5b146101085780639b19251a14610119578063d01f63f514610149578063e43252d71461015e578063f2fde38b1461017157600080fd5b806337797c08146100985780633a3ab672146100c8578063715018a6146100eb5780638ab1d681146100f5575b600080fd5b6100ab6100a636600461073b565b610184565b6040516001600160a01b0390911681526020015b60405180910390f35b6100db6100d6366004610754565b6101ae565b60405190151581526020016100bf565b6100f36101ee565b005b6100f3610103366004610754565b61022d565b6000546001600160a01b03166100ab565b61013c610127366004610754565b60016020526000908152604090205460ff1681565b6040516100bf919061079a565b61015161030a565b6040516100bf91906107c2565b6100f361016c366004610754565b6104a0565b6100f361017f366004610754565b6105fa565b6002818154811061019457600080fd5b6000918252602090912001546001600160a01b0316905081565b60006101b8610692565b60016001600160a01b03831660009081526001602052604090205460ff1660028111156101e7576101e7610784565b1492915050565b6000546001600160a01b031633146102215760405162461bcd60e51b81526004016102189061080f565b60405180910390fd5b61022b60006106eb565b565b610235610692565b6102476000805460ff60a01b19169055565b6000546001600160a01b031633146102715760405162461bcd60e51b81526004016102189061080f565b60026001600160a01b03821660009081526001602052604090205460ff1660028111156102a0576102a0610784565b146102ef576001600160a01b038116600081815260016020526040808220805460ff19166002179055517fcdd2e9b91a56913d370075169cefa1602ba36be5301664f752192bb1709df7579190a25b6103076000805460ff60a01b1916600160a01b179055565b50565b6060610314610692565b6000805b6002548110156103985760018060006002848154811061033a5761033a610844565b60009182526020808320909101546001600160a01b0316835282019290925260400190205460ff16600281111561037357610373610784565b0361038657816103828161085a565b9250505b806103908161085a565b915050610318565b508067ffffffffffffffff8111156103b2576103b2610881565b6040519080825280602002602001820160405280156103db578160200160208202803683370190505b5091506000905060005b60025481101561049b5760006002828154811061040457610404610844565b6000918252602090912001546001600160a01b0316905060016001600160a01b03821660009081526001602052604090205460ff16600281111561044a5761044a610784565b03610488578084848151811061046257610462610844565b6001600160a01b0390921660209283029190910190910152826104848161085a565b9350505b50806104938161085a565b9150506103e5565b505090565b6104a8610692565b6104ba6000805460ff60a01b19169055565b6000546001600160a01b031633146104e45760405162461bcd60e51b81526004016102189061080f565b60016001600160a01b03821660009081526001602052604090205460ff16600281111561051357610513610784565b146102ef576001600160a01b03811660009081526001602052604081205460ff16600281111561054557610545610784565b0361059657600280546001810182556000919091527f405787fa12a823e0f2b7631cc41b3ba8828b3321ca811111fa75cd3aa3bb5ace0180546001600160a01b0319166001600160a01b0383161790555b6001600160a01b0381166000818152600160208190526040808320805460ff1916909217909155517fa850ae9193f515cbae8d35e8925bd2be26627fc91bce650b8652ed254e9cab039190a26103076000805460ff60a01b1916600160a01b179055565b6000546001600160a01b031633146106245760405162461bcd60e51b81526004016102189061080f565b6001600160a01b0381166106895760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608401610218565b610307816106eb565b600054600160a01b900460ff1661022b5760405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c006044820152606401610218565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b60006020828403121561074d57600080fd5b5035919050565b60006020828403121561076657600080fd5b81356001600160a01b038116811461077d57600080fd5b9392505050565b634e487b7160e01b600052602160045260246000fd5b60208101600383106107bc57634e487b7160e01b600052602160045260246000fd5b91905290565b6020808252825182820181905260009190848201906040850190845b818110156108035783516001600160a01b0316835292840192918401916001016107de565b50909695505050505050565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b634e487b7160e01b600052603260045260246000fd5b60006001820161087a57634e487b7160e01b600052601160045260246000fd5b5060010190565b634e487b7160e01b600052604160045260246000fdfea264697066735822122012579754682d9ca0b43a16b3094418ed8aa5ee7031d0fb774b381905d2c9cf5e64736f6c63430008100033608060405234801561001057600080fd5b5061001a3361001f565b61006f565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6103dc8061007e6000396000f3fe608060405234801561001057600080fd5b50600436106100625760003560e01c806310a7e20114610067578063715018a61461007c5780638da5cb5b146100845780638e0d3ca7146100a457806390978d1b146100b7578063f2fde38b146100ea575b600080fd5b61007a610075366004610328565b6100fd565b005b61007a61018d565b6000546040516001600160a01b0390911681526020015b60405180910390f35b61007a6100b2366004610328565b6101c3565b6100da6100c5366004610328565b60009081526001602052604090205460ff1690565b604051901515815260200161009b565b61007a6100f8366004610341565b610244565b6000546001600160a01b031633146101305760405162461bcd60e51b815260040161012790610371565b60405180910390fd5b60008181526001602052604090205460ff1661018a576000818152600160208190526040808320805460ff19169092179091555182917fa0ca1076d765c13772089a90b5121cf6ddf63c9f7891c4e5031adbc85936b27691a25b50565b6000546001600160a01b031633146101b75760405162461bcd60e51b815260040161012790610371565b6101c160006102d8565b565b6000546001600160a01b031633146101ed5760405162461bcd60e51b815260040161012790610371565b60008181526001602052604090205460ff161561018a57600081815260016020526040808220805460ff191690555182917fefdf15ca0f9402bd4e933b0edb0db65b23cc50d27cb010d8abcadaae4fa944e591a250565b6000546001600160a01b0316331461026e5760405162461bcd60e51b815260040161012790610371565b6001600160a01b0381166102d35760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608401610127565b61018a815b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b60006020828403121561033a57600080fd5b5035919050565b60006020828403121561035357600080fd5b81356001600160a01b038116811461036a57600080fd5b9392505050565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260408201526060019056fea26469706673582212200420ad640ea5d694ea28017924c73d0062ff64bd9ac631618e6fb3c5d0ca8aeb64736f6c63430008100033a2646970667358221220c74f5ca068d51d49125bff8669b3874b1237cd8193f4156aba9d1b2e7b22cab564736f6c63430008100033608060405234801561001057600080fd5b5060405161121838038061121883398101604081905261002f9161007f565b600080546001600160a01b039283166001600160a01b031991821617909155600180549390921692169190911790556100b2565b80516001600160a01b038116811461007a57600080fd5b919050565b6000806040838503121561009257600080fd5b61009b83610063565b91506100a960208401610063565b90509250929050565b611157806100c16000396000f3fe608060405234801561001057600080fd5b506004361061009e5760003560e01c8063719c6d5611610066578063719c6d5614610131578063b551cd5014610144578063b555d60814610167578063d7d6f43d1461017c578063f76177cf1461018f57600080fd5b80631c39c38d146100a3578063216666a4146100d357806322f8e566146100e857806329cb924d146100fb5780636a5ef50614610111575b600080fd5b6000546100b6906001600160a01b031681565b6040516001600160a01b0390911681526020015b60405180910390f35b6100e66100e1366004610c0f565b6101a2565b005b6100e66100f6366004610c5f565b61039c565b61010361040b565b6040519081526020016100ca565b61012461011f366004610c5f565b61049c565b6040516100ca9190610cef565b61010361013f366004610c0f565b6105f1565b610157610152366004610c0f565b610630565b60405190151581526020016100ca565b61016f61065f565b6040516100ca9190610d09565b6100e661018a366004610d6b565b610764565b6100e661019d366004610dc3565b610a33565b6101aa610a5d565b6001600160a01b03166390978d1b846040518263ffffffff1660e01b81526004016101d791815260200190565b602060405180830381865afa1580156101f4573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102189190610de5565b61022157600080fd5b600061022e848484610ae0565b600081815260026020526040902080549192509060ff16158015610261575060008281526003602052604090205460ff16155b15610395576040805180820182526001808252600480546020808501918252600088815260038083528782209651875490151560ff1990911617875592519585019590955585516060810187528b81529081018a81529581018981528354948501845592909452835192027f8a35acfbc15ff81a39ae7d344fd709f28e8600b4aa8c65c6b64bfe7fe36bd19b810192835593517f8a35acfbc15ff81a39ae7d344fd709f28e8600b4aa8c65c6b64bfe7fe36bd19c85015551919290917f8a35acfbc15ff81a39ae7d344fd709f28e8600b4aa8c65c6b64bfe7fe36bd19d9091019061034c9082610e8f565b5050508185336001600160a01b03167f5b89fcc758ee4d9d8841986019cd2bb83213389a619b54baff9ec2ec9944e7a7878760405161038c929190610f4f565b60405180910390a45b5050505050565b6000546001600160a01b03166103b157600080fd5b60005460405163117c72b360e11b8152600481018390526001600160a01b03909116906322f8e56690602401600060405180830381600087803b1580156103f757600080fd5b505af1158015610395573d6000803e3d6000fd5b600080546001600160a01b0316156104975760008054906101000a90046001600160a01b03166001600160a01b03166329cb924d6040518163ffffffff1660e01b8152600401602060405180830381865afa15801561046e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104929190610f68565b905090565b504290565b604080516060808201835260008083526020830152918101919091526000828152600360205260409020805460ff166105135760405162461bcd60e51b815260206004820152601460248201527314995c5d595cdd081251081b9bdd08199bdd5b9960621b60448201526064015b60405180910390fd5b600481600101548154811061052a5761052a610f81565b9060005260206000209060030201604051806060016040529081600082015481526020016001820154815260200160028201805461056790610e07565b80601f016020809104026020016040519081016040528092919081815260200182805461059390610e07565b80156105e05780601f106105b5576101008083540402835291602001916105e0565b820191906000526020600020905b8154815290600101906020018083116105c357829003601f168201915b505050505081525050915050919050565b60008060026000610603878787610ae0565b81526020810191909152604001600020805490915060ff1661062457600080fd5b60010154949350505050565b60008060026000610642878787610ae0565b815260208101919091526040016000205460ff1695945050505050565b60606004805480602002602001604051908101604052809291908181526020016000905b8282101561075b578382906000526020600020906003020160405180606001604052908160008201548152602001600182015481526020016002820180546106ca90610e07565b80601f01602080910402602001604051908101604052809291908181526020018280546106f690610e07565b80156107435780601f1061071857610100808354040283529160200191610743565b820191906000526020600020905b81548152906001019060200180831161072657829003601f168201915b50505050508152505081526020019060010190610683565b50505050905090565b6000610771858585610ae0565b9050604051806060016040528060011515815260200183815260200161079561040b565b905260008281526002602081815260408084208551815460ff1916901515178155858301516001820155948101519490920193909355600390925220805460ff166108385760405162461bcd60e51b815260206004820152602d60248201527f43616e2774207075736820707269636573207468617420686176656e2774206260448201526c19595b881c995c5d595cdd1959609a1b606482015260840161050a565b6001808201546000848152600360205260408120805460ff1916815583018190556004549192909161086a9190610f97565b90508181146109a05760006004828154811061088857610888610f81565b90600052602060002090600302019050826003600061093c846000015485600101548660020180546108b990610e07565b80601f01602080910402602001604051908101604052809291908181526020018280546108e590610e07565b80156109325780601f1061090757610100808354040283529160200191610932565b820191906000526020600020905b81548152906001019060200180831161091557829003601f168201915b5050505050610ae0565b815260200190815260200160002060010181905550806004848154811061096557610965610f81565b906000526020600020906003020160008201548160000155600182015481600101556002820181600201908161099b9190610fbe565b505050505b60048054806109b1576109b1611091565b60008281526020812060036000199093019283020181815560018101829055906109de6002830182610b16565b505090558388336001600160a01b03167f01aba42f88d71f240ed63f6e0b37e62ba65f3d4bc0f11228ef9163cdc56c64b58a8a8a604051610a21939291906110a7565b60405180910390a45050505050505050565b6000610a3e8361049c565b9050610a5881600001518260200151836040015185610764565b505050565b6001546040516302abf57960e61b8152721259195b9d1a599a595c95da1a5d195b1a5cdd606a1b60048201526000916001600160a01b03169063aafd5e4090602401602060405180830381865afa158015610abc573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061049291906110d0565b6000838383604051602001610af7939291906110f9565b6040516020818303038152906040528051906020012090509392505050565b508054610b2290610e07565b6000825580601f10610b32575050565b601f016020900490600052602060002090810190610b509190610b53565b50565b5b80821115610b685760008155600101610b54565b5090565b634e487b7160e01b600052604160045260246000fd5b600082601f830112610b9357600080fd5b813567ffffffffffffffff80821115610bae57610bae610b6c565b604051601f8301601f19908116603f01168101908282118183101715610bd657610bd6610b6c565b81604052838152866020858801011115610bef57600080fd5b836020870160208301376000602085830101528094505050505092915050565b600080600060608486031215610c2457600080fd5b8335925060208401359150604084013567ffffffffffffffff811115610c4957600080fd5b610c5586828701610b82565b9150509250925092565b600060208284031215610c7157600080fd5b5035919050565b6000815180845260005b81811015610c9e57602081850181015186830182015201610c82565b506000602082860101526020601f19601f83011685010191505092915050565b80518252602081015160208301526000604082015160606040850152610ce76060850182610c78565b949350505050565b602081526000610d026020830184610cbe565b9392505050565b6000602080830181845280855180835260408601915060408160051b870101925083870160005b82811015610d5e57603f19888603018452610d4c858351610cbe565b94509285019290850190600101610d30565b5092979650505050505050565b60008060008060808587031215610d8157600080fd5b8435935060208501359250604085013567ffffffffffffffff811115610da657600080fd5b610db287828801610b82565b949793965093946060013593505050565b60008060408385031215610dd657600080fd5b50508035926020909101359150565b600060208284031215610df757600080fd5b81518015158114610d0257600080fd5b600181811c90821680610e1b57607f821691505b602082108103610e3b57634e487b7160e01b600052602260045260246000fd5b50919050565b601f821115610a5857600081815260208120601f850160051c81016020861015610e685750805b601f850160051c820191505b81811015610e8757828155600101610e74565b505050505050565b815167ffffffffffffffff811115610ea957610ea9610b6c565b610ebd81610eb78454610e07565b84610e41565b602080601f831160018114610ef25760008415610eda5750858301515b600019600386901b1c1916600185901b178555610e87565b600085815260208120601f198616915b82811015610f2157888601518255948401946001909101908401610f02565b5085821015610f3f5787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b828152604060208201526000610ce76040830184610c78565b600060208284031215610f7a57600080fd5b5051919050565b634e487b7160e01b600052603260045260246000fd5b81810381811115610fb857634e487b7160e01b600052601160045260246000fd5b92915050565b818103610fc9575050565b610fd38254610e07565b67ffffffffffffffff811115610feb57610feb610b6c565b610ff981610eb78454610e07565b6000601f82116001811461102d57600083156110155750848201545b600019600385901b1c1916600184901b178455610395565b600085815260209020601f19841690600086815260209020845b838110156110675782860154825560019586019590910190602001611047565b5085831015610f3f5793015460001960f8600387901b161c19169092555050600190811b01905550565b634e487b7160e01b600052603160045260246000fd5b8381526060602082015260006110c06060830185610c78565b9050826040830152949350505050565b6000602082840312156110e257600080fd5b81516001600160a01b0381168114610d0257600080fd5b8381528260208201526060604082015260006111186060830184610c78565b9594505050505056fea2646970667358221220f4b1e35f6eb1f5816327034316343d8b6a7a59647aab0193187ab03600ae070964736f6c63430008100033a264697066735822122055db8847a4d7601c142031cd5c9ebcf936788623236ed26aff77f30c70420aeb64736f6c6343000810003360806040523480156200001157600080fd5b5060405162000cff38038062000cff833981016040819052620000349162000139565b828260036200004483826200024d565b5060046200005382826200024d565b50506005805460ff191660ff93909316929092179091555062000319915050565b634e487b7160e01b600052604160045260246000fd5b600082601f8301126200009c57600080fd5b81516001600160401b0380821115620000b957620000b962000074565b604051601f8301601f19908116603f01168101908282118183101715620000e457620000e462000074565b816040528381526020925086838588010111156200010157600080fd5b600091505b8382101562000125578582018301518183018401529082019062000106565b600093810190920192909252949350505050565b6000806000606084860312156200014f57600080fd5b83516001600160401b03808211156200016757600080fd5b62000175878388016200008a565b945060208601519150808211156200018c57600080fd5b506200019b868287016200008a565b925050604084015160ff81168114620001b357600080fd5b809150509250925092565b600181811c90821680620001d357607f821691505b602082108103620001f457634e487b7160e01b600052602260045260246000fd5b50919050565b601f8211156200024857600081815260208120601f850160051c81016020861015620002235750805b601f850160051c820191505b8181101562000244578281556001016200022f565b5050505b505050565b81516001600160401b0381111562000269576200026962000074565b62000281816200027a8454620001be565b84620001fa565b602080601f831160018114620002b95760008415620002a05750858301515b600019600386901b1c1916600185901b17855562000244565b600085815260208120601f198616915b82811015620002ea57888601518255948401946001909101908401620002c9565b5085821015620003095787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b6109d680620003296000396000f3fe608060405234801561001057600080fd5b50600436106100b45760003560e01c80633950935111610071578063395093511461014957806370a082311461015c57806395d89b4114610185578063a457c2d71461018d578063a9059cbb146101a0578063dd62ed3e146101b357600080fd5b806306fdde03146100b957806308bca566146100d7578063095ea7b3146100ec57806318160ddd1461010f57806323b872dd14610121578063313ce56714610134575b600080fd5b6100c16101ec565b6040516100ce9190610820565b60405180910390f35b6100ea6100e536600461088a565b61027e565b005b6100ff6100fa36600461088a565b61028c565b60405190151581526020016100ce565b6002545b6040519081526020016100ce565b6100ff61012f3660046108b4565b6102a6565b60055460405160ff90911681526020016100ce565b6100ff61015736600461088a565b6102ca565b61011361016a3660046108f0565b6001600160a01b031660009081526020819052604090205490565b6100c1610309565b6100ff61019b36600461088a565b610318565b6100ff6101ae36600461088a565b6103af565b6101136101c1366004610912565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b6060600380546101fb90610945565b80601f016020809104026020016040519081016040528092919081815260200182805461022790610945565b80156102745780601f1061024957610100808354040283529160200191610274565b820191906000526020600020905b81548152906001019060200180831161025757829003601f168201915b5050505050905090565b61028882826103bd565b5050565b60003361029a81858561049c565b60019150505b92915050565b6000336102b48582856105c0565b6102bf858585610652565b506001949350505050565b3360008181526001602090815260408083206001600160a01b038716845290915281205490919061029a908290869061030490879061097f565b61049c565b6060600480546101fb90610945565b3360008181526001602090815260408083206001600160a01b0387168452909152812054909190838110156103a25760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b60648201526084015b60405180910390fd5b6102bf828686840361049c565b60003361029a818585610652565b6001600160a01b0382166104135760405162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f2061646472657373006044820152606401610399565b8060026000828254610425919061097f565b90915550506001600160a01b0382166000908152602081905260408120805483929061045290849061097f565b90915550506040518181526001600160a01b038316906000907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9060200160405180910390a35050565b6001600160a01b0383166104fe5760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b6064820152608401610399565b6001600160a01b03821661055f5760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b6064820152608401610399565b6001600160a01b0383811660008181526001602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b6001600160a01b03838116600090815260016020908152604080832093861683529290522054600019811461064c578181101561063f5760405162461bcd60e51b815260206004820152601d60248201527f45524332303a20696e73756666696369656e7420616c6c6f77616e63650000006044820152606401610399565b61064c848484840361049c565b50505050565b6001600160a01b0383166106b65760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b6064820152608401610399565b6001600160a01b0382166107185760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b6064820152608401610399565b6001600160a01b038316600090815260208190526040902054818110156107905760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b6064820152608401610399565b6001600160a01b038085166000908152602081905260408082208585039055918516815290812080548492906107c790849061097f565b92505081905550826001600160a01b0316846001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8460405161081391815260200190565b60405180910390a361064c565b600060208083528351808285015260005b8181101561084d57858101830151858201604001528201610831565b506000604082860101526040601f19601f8301168501019250505092915050565b80356001600160a01b038116811461088557600080fd5b919050565b6000806040838503121561089d57600080fd5b6108a68361086e565b946020939093013593505050565b6000806000606084860312156108c957600080fd5b6108d28461086e565b92506108e06020850161086e565b9150604084013590509250925092565b60006020828403121561090257600080fd5b61090b8261086e565b9392505050565b6000806040838503121561092557600080fd5b61092e8361086e565b915061093c6020840161086e565b90509250929050565b600181811c9082168061095957607f821691505b60208210810361097957634e487b7160e01b600052602260045260246000fd5b50919050565b808201808211156102a057634e487b7160e01b600052601160045260246000fdfea264697066735822122079aea89302a931b65938f5024ef67c57f346deaaa1f56bc95931901dcbfee84264736f6c6343000810003360a06040523480156200001157600080fd5b5060405162003e9638038062003e9683398101604081905262000034916200065e565b6000805460ff191660011790558084848462000057620000513390565b620000a8565b6001600160a01b0383166080526200007982826706f05b59d3b2000062000101565b5050600780546001600160a01b0319166001600160a01b039390931692909217909155506200076d9350505050565b600080546001600160a01b03838116610100818102610100600160a81b0319851617855560405193049190911692909183917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a35050565b6000546001600160a01b03610100909104163314620001675760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064015b60405180910390fd5b670de0b6b3a7640000811115620001c15760405162461bcd60e51b815260206004820152601c60248201527f4275726e656420626f6e642070657263656e74616765203e203130300000000060448201526064016200015e565b60008111620002135760405162461bcd60e51b815260206004820152601b60248201527f4275726e656420626f6e642070657263656e746167652069732030000000000060448201526064016200015e565b6005819055600680546001600160401b038416600160a01b026001600160e01b03199091166001600160a01b03861617179055620002616b082a6a68aa4a8bea8a4aaa8960a31b84620002b8565b604080516001600160a01b03851681526001600160401b03841660208201529081018290527fd0f09246d369018534c67fec6a6c3259c6f962ef82c5521c337ae0ccc104e4bd9060600160405180910390a1505050565b6080516040516302abf57960e61b8152654f7261636c6560d01b60048201526001600160a01b039091169063aafd5e4090602401602060405180830381865afa1580156200030a573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620003309190620006d1565b600180546001600160a01b0319166001600160a01b03929092169190911790556200035a62000523565b6001600160a01b03166390978d1b836040518263ffffffff1660e01b81526004016200038891815260200190565b602060405180830381865afa158015620003a6573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620003cc9190620006f8565b6000838152600360205260409020805460ff1916911515919091179055620003f3620005b9565b604051631d1d5b3960e11b81526001600160a01b0383811660048301529190911690633a3ab67290602401602060405180830381865afa1580156200043c573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620004629190620006f8565b6001600160a01b0382166000908152600260205260409020805460ff1916911515919091179055620004936200060b565b604051635b97aadd60e01b81526001600160a01b0383811660048301529190911690635b97aadd90602401602060405180830381865afa158015620004dc573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200050291906200071c565b516001600160a01b0390911660009081526002602052604090206001015550565b6080516040516302abf57960e61b81527f4964656e74696669657257686974656c6973740000000000000000000000000060048201526000916001600160a01b03169063aafd5e40906024015b602060405180830381865afa1580156200058e573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620005b49190620006d1565b905090565b6080516040516302abf57960e61b81527f436f6c6c61746572616c57686974656c6973740000000000000000000000000060048201526000916001600160a01b03169063aafd5e409060240162000570565b6080516040516302abf57960e61b81526453746f726560d81b60048201526000916001600160a01b03169063aafd5e409060240162000570565b6001600160a01b03811681146200065b57600080fd5b50565b600080600080608085870312156200067557600080fd5b8451620006828162000645565b6020860151909450620006958162000645565b60408601519093506001600160401b0381168114620006b357600080fd5b6060860151909250620006c68162000645565b939692955090935050565b600060208284031215620006e457600080fd5b8151620006f18162000645565b9392505050565b6000602082840312156200070b57600080fd5b81518015158114620006f157600080fd5b6000602082840312156200072f57600080fd5b604051602081016001600160401b03811182821017156200076057634e487b7160e01b600052604160045260246000fd5b6040529151825250919050565b6080516136f1620007a560003960008181610578015281816116df01528181611fa701528181612607015261266c01526136f16000f3fe608060405234801561001057600080fd5b50600436106101c45760003560e01c80638da5cb5b116100f9578063b9a3c84c11610097578063da03b36e11610071578063da03b36e146106a4578063e39dfd7f146106b3578063f2fde38b146106c6578063fe4e1983146106d957600080fd5b8063b9a3c84c14610573578063d509b0171461059a578063d60715b5146105b057600080fd5b8063a7af2d0f116100d3578063a7af2d0f1461050d578063a865578514610520578063ac9650d814610533578063afedba4f1461055357600080fd5b80638da5cb5b146104d15780638ea2f2ab146104e7578063a6a22b43146104fa57600080fd5b80634360af3d11610166578063707621571161014057806370762157146102bf578063715018a614610303578063827625201461030b578063883028841461031e57600080fd5b80634360af3d14610266578063530dd392146102795780636457c979146102ac57600080fd5b806322f8e566116101a257806322f8e5661461022357806329cb924d1461023857806336b13af4146102405780634124beef1461025357600080fd5b806308e7c3e6146101c95780631c39c38d146101e557806320402e1d14610210575b600080fd5b6101d260055481565b6040519081526020015b60405180910390f35b6007546101f8906001600160a01b031681565b6040516001600160a01b0390911681526020016101dc565b6006546101f8906001600160a01b031681565b610236610231366004612c90565b61070b565b005b6101d2610781565b6101d261024e366004612cce565b610790565b610236610261366004612c90565b610817565b6101d2610274366004612d50565b610be1565b61029c610287366004612c90565b60036020526000908152604090205460ff1681565b60405190151581526020016101dc565b6101d26102ba366004612df1565b610c1c565b6102ec6102cd366004612d50565b6002602052600090815260409020805460019091015460ff9091169082565b6040805192151583526020830191909152016101dc565b610236611233565b610236610319366004612ee1565b61126f565b6104c461032c366004612c90565b6040805161022081018252600061018082018181526101a083018290526101c083018290526101e083018290526102008301829052825260208201819052918101829052606081018290526080810182905260a0810182905260c0810182905260e0810182905261010081018290526101208101829052610140810182905261016081019190915250600090815260046020818152604092839020835161022081018552815460ff80821615156101808401908152610100808404831615156101a0860152620100008404831615156101c08601526001600160a01b03630100000090940484166101e0860152600186015484166102008601529084526002850154808416968501969096526001600160401b03600160a01b808804821699860199909952600160e01b96879004831615156060860152600386015480851660808701529889041660a085015294909604909516151560c08201529281015460e08401526005810154918301919091526006810154610120830152600781015483166101408301526008015490911661016082015290565b6040516101dc9190612f61565b60005461010090046001600160a01b03166101f8565b61029c6104f5366004612c90565b6113ea565b61023661050836600461303b565b611422565b6001546101f8906001600160a01b031681565b61023661052e36600461303b565b6116c1565b61054661054136600461306b565b611935565b6040516101dc919061312f565b610566610561366004612c90565b611a8c565b6040516101dc9190613191565b6101f87f000000000000000000000000000000000000000000000000000000000000000081565b6101d26b082a6a68aa4a8bea8a4aaa8960a31b81565b61068c6105be366004612c90565b600460208181526000928352604092839020835160a081018552815460ff808216151583526101008204811615159483019490945262010000810484161515958201959095526001600160a01b0363010000009095048516606082015260018201548516608082015260028201546003830154948301546005840154600685015460078601546008909601549498848116986001600160401b03600160a01b80880482169a600160e01b9889900481169a8486169a928504909316989093049092169594939290811691168c565b6040516101dc9c9b9a999897969594939291906131a4565b6101d2670de0b6b3a764000081565b61029c6106c1366004612c90565b611a97565b6102366106d4366004612d50565b611c15565b6006546106f390600160a01b90046001600160401b031681565b6040516001600160401b0390911681526020016101dc565b6007546001600160a01b031661072057600080fd5b60075460405163117c72b360e11b8152600481018390526001600160a01b03909116906322f8e56690602401600060405180830381600087803b15801561076657600080fd5b505af115801561077a573d6000803e3d6000fd5b5050505050565b600061078b611cb3565b905090565b600061080d84848080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201829052506006548894509092508291506001600160401b03600160a01b820416906001600160a01b03166107f681610be1565b6b082a6a68aa4a8bea8a4aaa8960a31b6000610c1c565b90505b9392505050565b61081f611d43565b61082e6000805460ff19169055565b600081815260046020526040902060028101546001600160a01b03166108965760405162461bcd60e51b8152602060048201526018602482015277105cdcd95c9d1a5bdb88191bd95cc81b9bdd08195e1a5cdd60421b60448201526064015b60405180910390fd5b6002810154600160e01b900460ff16156108f25760405162461bcd60e51b815260206004820152601960248201527f417373657274696f6e20616c726561647920736574746c656400000000000000604482015260640161088d565b60028101805460ff60e01b1916600160e01b17905560088101546001600160a01b0316610a1857610921610781565b6003820154600160a01b90046001600160401b0316111561097c5760405162461bcd60e51b8152602060048201526015602482015274105cdcd95c9d1a5bdb881b9bdd08195e1c1a5c9959605a1b604482015260640161088d565b60038101805460ff60e01b198116600160e01b17909155600282015460068301546109b4926001600160a01b03908116921690611d95565b6109bf826001611dfd565b6002810154604080516000815260016020820152338183015290516001600160a01b039092169184917ff4fa324b13daeb4e1aae736c2553632ae0fb16fb31f2d4da8ac99fd056313a13919081900360600190a3610bcb565b60058101546002820154600091610a4191859190600160a01b90046001600160401b0316611f04565b8254909150610100900460ff1615610a675760038201805460ff60e01b19169055610a89565b60038201805460ff60e01b1916670de0b6b3a76400008314600160e01b021790555b6000670de0b6b3a76400008214610aad5760088301546001600160a01b0316610abc565b60028301546001600160a01b03165b90506000670de0b6b3a76400008460060154600554610adb919061323b565b610ae59190613270565b905060008185600601546002610afb919061323b565b610b059190613292565b9050610b27610b12611f87565b60038701546001600160a01b03169084611d95565b6003850154610b40906001600160a01b03168483611d95565b8454610100900460ff16610b68576003850154610b68908790600160e01b900460ff16611dfd565b60038501546040805160018152600160e01b90920460ff161515602083015233908201526001600160a01b0384169087907ff4fa324b13daeb4e1aae736c2553632ae0fb16fb31f2d4da8ac99fd056313a139060600160405180910390a3505050505b50610bde6000805460ff19166001179055565b50565b6001600160a01b038116600090815260026020526040812060010154600554610c1282670de0b6b3a764000061323b565b6108109190613270565b6000610c26611d43565b610c356000805460ff19169055565b6000610c3f610781565b9050610c5a8b86836001600160401b03168a8a8e8e8b61201b565b91506001600160a01b038a16610ca75760405162461bcd60e51b8152602060048201526012602482015271041737365727465722063616e7420626520360741b604482015260640161088d565b6000828152600460205260409020600201546001600160a01b031615610d0f5760405162461bcd60e51b815260206004820152601860248201527f417373657274696f6e20616c7265616479206578697374730000000000000000604482015260640161088d565b610d1884612062565b610d5d5760405162461bcd60e51b81526020600482015260166024820152752ab739bab83837b93a32b21034b232b73a34b334b2b960511b604482015260640161088d565b610d668661211b565b610da95760405162461bcd60e51b8152602060048201526014602482015273556e737570706f727465642063757272656e637960601b604482015260640161088d565b610db286610be1565b851015610df75760405162461bcd60e51b8152602060048201526013602482015272426f6e6420616d6f756e7420746f6f206c6f7760681b604482015260640161088d565b6040805161022081018252600061018082018181526101a083018290526101c08301829052336101e08401526001600160a01b038c81166102008501529083528d811660208401526001600160401b038516938301939093526060820152908716608082015260a08101610e6b89846132a5565b6001600160401b031681526020016000151581526020018481526020018581526020018681526020018a6001600160a01b0316815260200160006001600160a01b03168152506004600084815260200190815260200160002060008201518160000160008201518160000160006101000a81548160ff02191690831515021790555060208201518160000160016101000a81548160ff02191690831515021790555060408201518160000160026101000a81548160ff02191690831515021790555060608201518160000160036101000a8154816001600160a01b0302191690836001600160a01b0316021790555060808201518160010160006101000a8154816001600160a01b0302191690836001600160a01b03160217905550505060208201518160020160006101000a8154816001600160a01b0302191690836001600160a01b0316021790555060408201518160020160146101000a8154816001600160401b0302191690836001600160401b03160217905550606082015181600201601c6101000a81548160ff02191690831515021790555060808201518160030160006101000a8154816001600160a01b0302191690836001600160a01b0316021790555060a08201518160030160146101000a8154816001600160401b0302191690836001600160401b0316021790555060c082015181600301601c6101000a81548160ff02191690831515021790555060e08201518160040155610100820151816005015561012082015181600601556101408201518160070160006101000a8154816001600160a01b0302191690836001600160a01b031602179055506101608201518160080160006101000a8154816001600160a01b0302191690836001600160a01b0316021790555090505060006111078361227d565b8051909150156111515760405162461bcd60e51b8152602060048201526015602482015274105cdcd95c9d1a5bdb881b9bdd08185b1b1bddd959605a1b604482015260640161088d565b6000838152600460209081526040918290209083015191830151606090930151815462ffff001916620100009115159190910261ff00191617610100931515939093029290921760ff19169015151790556111b76001600160a01b038716333088612352565b838a6001600160a01b0316837fdb1513f0abeb57a364db56aa3eb52015cca5268f00fd67bc73aaf22bccab02b7868f8e8e338f8a6111f591906132a5565b8f8f60405161120b9897969594939291906132c5565b60405180910390a4506112266000805460ff19166001179055565b9998505050505050505050565b6000546001600160a01b036101009091041633146112635760405162461bcd60e51b815260040161088d90613327565b61126d600061238a565b565b6000546001600160a01b0361010090910416331461129f5760405162461bcd60e51b815260040161088d90613327565b670de0b6b3a76400008111156112f75760405162461bcd60e51b815260206004820152601c60248201527f4275726e656420626f6e642070657263656e74616765203e2031303000000000604482015260640161088d565b600081116113475760405162461bcd60e51b815260206004820152601b60248201527f4275726e656420626f6e642070657263656e7461676520697320300000000000604482015260640161088d565b6005819055600680546001600160401b038416600160a01b026001600160e01b03199091166001600160a01b038616171790556113936b082a6a68aa4a8bea8a4aaa8960a31b846116c1565b604080516001600160a01b03851681526001600160401b03841660208201529081018290527fd0f09246d369018534c67fec6a6c3259c6f962ef82c5521c337ae0ccc104e4bd9060600160405180910390a1505050565b600081815260046020526040812060020154600160e01b900460ff166114135761141382610817565b61141c82611a97565b92915050565b61142a611d43565b6114396000805460ff19169055565b6001600160a01b0381166114855760405162461bcd60e51b8152602060048201526013602482015272044697370757465722063616e2774206265203606c1b604482015260640161088d565b600082815260046020526040902060028101546001600160a01b03166114e85760405162461bcd60e51b8152602060048201526018602482015277105cdcd95c9d1a5bdb88191bd95cc81b9bdd08195e1a5cdd60421b604482015260640161088d565b60088101546001600160a01b0316156115435760405162461bcd60e51b815260206004820152601a60248201527f417373657274696f6e20616c7265616479206469737075746564000000000000604482015260640161088d565b61154b610781565b6003820154600160a01b90046001600160401b0316116115a45760405162461bcd60e51b8152602060048201526014602482015273105cdcd95c9d1a5bdb881a5cc8195e1c1a5c995960621b604482015260640161088d565b6115ad836123e3565b6115ef5760405162461bcd60e51b8152602060048201526013602482015272111a5cdc1d5d19481b9bdd08185b1b1bddd959606a1b604482015260640161088d565b6008810180546001600160a01b0319166001600160a01b03848116919091179091556006820154600383015461162a92169033903090612352565b6005810154600282015461164f918591600160a01b90046001600160401b031661249f565b61165883612516565b8054610100900460ff161561167257611672836000611dfd565b6040516001600160a01b03831690339085907f60133788b013c89f2a3756dbc47e3484997b87bd7e0af98a7d70232032c1ce2b90600090a4506116bd6000805460ff19166001179055565b5050565b6040516302abf57960e61b8152654f7261636c6560d01b60048201527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03169063aafd5e4090602401602060405180830381865afa15801561172e573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611752919061335c565b600180546001600160a01b0319166001600160a01b039290921691909117905561177a6125d9565b6001600160a01b03166390978d1b836040518263ffffffff1660e01b81526004016117a791815260200190565b602060405180830381865afa1580156117c4573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906117e89190613389565b6000838152600360205260409020805460ff191691151591909117905561180d61263e565b604051631d1d5b3960e11b81526001600160a01b0383811660048301529190911690633a3ab67290602401602060405180830381865afa158015611855573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906118799190613389565b6001600160a01b0382166000908152600260205260409020805460ff19169115159190911790556118a8611f87565b604051635b97aadd60e01b81526001600160a01b0383811660048301529190911690635b97aadd90602401602060405180830381865afa1580156118f0573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061191491906133a4565b516001600160a01b0390911660009081526002602052604090206001015550565b6060816001600160401b0381111561194f5761194f612d6d565b60405190808252806020026020018201604052801561198257816020015b606081526020019060019003908161196d5790505b50905060005b82811015611a8557600080308686858181106119a6576119a66133e5565b90506020028101906119b891906133fb565b6040516119c6929190613448565b600060405180830381855af49150503d8060008114611a01576040519150601f19603f3d011682016040523d82523d6000602084013e611a06565b606091505b509150915081611a5257604481511015611a1f57600080fd5b60048101905080806020019051810190611a399190613458565b60405162461bcd60e51b815260040161088d9190613191565b80848481518110611a6557611a656133e5565b602002602001018190525050508080611a7d906134ce565b915050611988565b5092915050565b606061141c826126a3565b6000818152600460208181526040808420815161022081018352815460ff80821615156101808401908152610100808404831615156101a0860152620100008404831615156101c08601526001600160a01b03630100000090940484166101e0860152600186015484166102008601529084526002850154808416978501979097526001600160401b03600160a01b808904821697860197909752600160e01b97889004831615156060860152600386015480851660808701529687041660a085015295909404909316151560c08201529381015460e085015260058101549284019290925260068201546101208401526007820154811661014084015260089091015416610160820181905215801590611bb457508051602001515b15611bc25750600092915050565b8060600151611c0b5760405162461bcd60e51b8152602060048201526015602482015274105cdcd95c9d1a5bdb881b9bdd081cd95d1d1b1959605a1b604482015260640161088d565b60c0015192915050565b6000546001600160a01b03610100909104163314611c455760405162461bcd60e51b815260040161088d90613327565b6001600160a01b038116611caa5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b606482015260840161088d565b610bde8161238a565b6007546000906001600160a01b031615611d3e57600760009054906101000a90046001600160a01b03166001600160a01b03166329cb924d6040518163ffffffff1660e01b8152600401602060405180830381865afa158015611d1a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061078b91906134e7565b504290565b60005460ff1661126d5760405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c00604482015260640161088d565b6040516001600160a01b038316602482015260448101829052611df890849063a9059cbb60e01b906064015b60408051601f198184030181529190526020810180516001600160e01b03166001600160e01b031990931692909217909152612729565b505050565b600082815260046020526040902060078101546001909101546001600160a01b0391821691168115611e8c576040516378d8ab5960e11b81526004810185905283151560248201526001600160a01b0383169063f1b156b290604401600060405180830381600087803b158015611e7357600080fd5b505af1158015611e87573d6000803e3d6000fd5b505050505b6001600160a01b03811615611efe576040516378d8ab5960e11b81526004810185905283151560248201526001600160a01b0382169063f1b156b290604401600060405180830381600087803b158015611ee557600080fd5b505af1158015611ef9573d6000803e3d6000fd5b505050505b50505050565b6000611f0f846127fb565b6001600160a01b031663719c6d568484611f28886126a3565b6040518463ffffffff1660e01b8152600401611f4693929190613500565b602060405180830381865afa158015611f63573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061080d91906134e7565b6040516302abf57960e61b81526453746f726560d81b60048201526000907f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03169063aafd5e40906024015b602060405180830381865afa158015611ff7573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061078b919061335c565b600088888888888888883360405160200161203e9998979695949392919061351f565b60405160208183030381529060405280519060200120905098975050505050505050565b60008181526003602052604081205460ff161561208157506001919050565b6120896125d9565b6001600160a01b03166390978d1b836040518263ffffffff1660e01b81526004016120b691815260200190565b602060405180830381865afa1580156120d3573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906120f79190613389565b600092835260036020526040909220805460ff191692151592831790555060ff1690565b6001600160a01b03811660009081526002602052604081205460ff161561214457506001919050565b61214c61263e565b604051631d1d5b3960e11b81526001600160a01b0384811660048301529190911690633a3ab67290602401602060405180830381865afa158015612194573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906121b89190613389565b6001600160a01b0383166000908152600260205260409020805460ff19169115159190911790556121e7611f87565b604051635b97aadd60e01b81526001600160a01b0384811660048301529190911690635b97aadd90602401602060405180830381865afa15801561222f573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061225391906133a4565b516001600160a01b0390921660009081526002602052604090206001810192909255505460ff1690565b6040805160808101825260008082526020808301829052828401829052606083018290528482526004905291909120600101546001600160a01b0316806122e9575050604080516080810182526000808252602082018190529181018290526060810191909152919050565b60405163a6b011a760e01b8152600481018490526001600160a01b0382169063a6b011a790602401608060405180830381865afa15801561232e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108109190613587565b6040516001600160a01b0380851660248301528316604482015260648101829052611efe9085906323b872dd60e01b90608401611dc1565b600080546001600160a01b03838116610100818102610100600160a81b0319851617855560405193049190911692909183917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a35050565b60008181526004602052604081205462010000900460ff1661240757506001919050565b6000828152600460205260409020600101546001600160a01b0316806124305750600192915050565b604051636b915d9160e01b8152600481018490523360248201526001600160a01b03821690636b915d9190604401602060405180830381865afa15801561247b573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108109190613389565b6124a8836127fb565b6001600160a01b031663216666a483836124c1876126a3565b6040518463ffffffff1660e01b81526004016124df93929190613500565b600060405180830381600087803b1580156124f957600080fd5b505af115801561250d573d6000803e3d6000fd5b50505050505050565b600081815260046020526040902060078101546001909101546001600160a01b039182169116811561259d57604051633512293b60e21b8152600481018490526001600160a01b0383169063d448a4ec90602401600060405180830381600087803b15801561258457600080fd5b505af1158015612598573d6000803e3d6000fd5b505050505b6001600160a01b03811615611df857604051633512293b60e21b8152600481018490526001600160a01b0382169063d448a4ec906024016124df565b6040516302abf57960e61b8152721259195b9d1a599a595c95da1a5d195b1a5cdd606a1b60048201526000907f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03169063aafd5e4090602401611fda565b6040516302abf57960e61b81527210dbdb1b185d195c985b15da1a5d195b1a5cdd606a1b60048201526000907f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03169063aafd5e4090602401611fda565b606061141c6126e5604051806020016040528060008152506040518060400160405280600b81526020016a185cdcd95c9d1a5bdb925960aa1b81525085612843565b604080518082018252600a81526937b7a0b9b9b2b93a32b960b11b6020808301919091526000878152600490915291909120600201546001600160a01b0316612889565b600061277e826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b03166128a49092919063ffffffff16565b805190915015611df8578080602001905181019061279c9190613389565b611df85760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b606482015260840161088d565b60008181526004602052604081205460ff1615612832576000828152600460205260409020600101546001600160a01b031661141c565b50506001546001600160a01b031690565b6060600061285185856128b3565b9050848161285e856128f5565b60405160200161287093929190613603565b6040516020818303038152906040529150509392505050565b6060600061289785856128b3565b9050848161285e85612936565b606061080d848460008561298d565b8151606090156128e457816040516020016128ce9190613646565b604051602081830303815290604052905061141c565b816040516020016128ce919061367a565b6060612904608083901c612abe565b61290d83612abe565b6040805160208101939093528201526060015b6040516020818303038152906040529050919050565b606061294e6001600160801b03602084901c16612abe565b6129698360601b6bffffffffffffffffffffffff1916612abe565b6040516020016129209291909182526001600160c01b031916602082015260280190565b6060824710156129ee5760405162461bcd60e51b815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f6044820152651c8818d85b1b60d21b606482015260840161088d565b6001600160a01b0385163b612a455760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000604482015260640161088d565b600080866001600160a01b03168587604051612a61919061369f565b60006040518083038185875af1925050503d8060008114612a9e576040519150601f19603f3d011682016040523d82523d6000602084013e612aa3565b606091505b5091509150612ab3828286612c57565b979650505050505050565b6000808260001c9050806001600160801b03169050806801000000000000000002811777ffffffffffffffff0000000000000000ffffffffffffffff169050806401000000000281177bffffffff00000000ffffffff00000000ffffffff00000000ffffffff16905080620100000281177dffff0000ffff0000ffff0000ffff0000ffff0000ffff0000ffff0000ffff169050806101000281177eff00ff00ff00ff00ff00ff00ff00ff00ff00ff00ff00ff00ff00ff00ff00ff1690508060100281177f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f16905060006008827f08080808080808080808080808080808080808080808080808080808080808081681612bd957612bd961325a565b0460047f040404040404040404040404040404040404040404040404040404040404040484160460027f020202020202020202020202020202020202020202020202020202020202020285160417166027029091017f3030303030303030303030303030303030303030303030303030303030303030019392505050565b60608315612c66575081610810565b825115612c765782518084602001fd5b8160405162461bcd60e51b815260040161088d9190613191565b600060208284031215612ca257600080fd5b5035919050565b6001600160a01b0381168114610bde57600080fd5b8035612cc981612ca9565b919050565b600080600060408486031215612ce357600080fd5b83356001600160401b0380821115612cfa57600080fd5b818601915086601f830112612d0e57600080fd5b813581811115612d1d57600080fd5b876020828501011115612d2f57600080fd5b60209283019550935050840135612d4581612ca9565b809150509250925092565b600060208284031215612d6257600080fd5b813561081081612ca9565b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f191681016001600160401b0381118282101715612dab57612dab612d6d565b604052919050565b60006001600160401b03821115612dcc57612dcc612d6d565b50601f01601f191660200190565b80356001600160401b0381168114612cc957600080fd5b60008060008060008060008060006101208a8c031215612e1057600080fd5b89356001600160401b03811115612e2657600080fd5b8a01601f81018c13612e3757600080fd5b8035612e4a612e4582612db3565b612d83565b8181528d6020838501011115612e5f57600080fd5b81602084016020830137600060208383010152809b50505050612e8460208b01612cbe565b9750612e9260408b01612cbe565b9650612ea060608b01612cbe565b9550612eae60808b01612dda565b9450612ebc60a08b01612cbe565b935060c08a0135925060e08a013591506101008a013590509295985092959850929598565b600080600060608486031215612ef657600080fd5b8335612f0181612ca9565b9250612f0f60208501612dda565b9150604084013590509250925092565b8051151582526020808201511515908301526040808201511515908301526060808201516001600160a01b039081169184019190915260809182015116910152565b600061020082019050612f75828451612f1f565b60208301516001600160a01b0390811660a084015260408401516001600160401b031660c08401526060840151151560e084015260808401519081166101008085019190915260a08501519150610120612fd9818601846001600160401b03169052565b60c08601519250610140612ff08187018515159052565b60e08701516101608781019190915292870151610180870152908601516101a08601528501516001600160a01b039081166101c0860152908501519081166101e08501529050611a85565b6000806040838503121561304e57600080fd5b82359150602083013561306081612ca9565b809150509250929050565b6000806020838503121561307e57600080fd5b82356001600160401b038082111561309557600080fd5b818501915085601f8301126130a957600080fd5b8135818111156130b857600080fd5b8660208260051b85010111156130cd57600080fd5b60209290920196919550909350505050565b60005b838110156130fa5781810151838201526020016130e2565b50506000910152565b6000815180845261311b8160208601602086016130df565b601f01601f19169290920160200192915050565b6000602080830181845280855180835260408601915060408160051b870101925083870160005b8281101561318457603f19888603018452613172858351613103565b94509285019290850190600101613156565b5092979650505050505050565b6020815260006108106020830184613103565b61020081016131b3828f612f1f565b6001600160a01b039c8d1660a08301526001600160401b039b8c1660c083015299151560e0820152978b16610100890152959098166101208701529215156101408601526101608501919091526101808401526101a08301529284166101c0820152919092166101e090910152919050565b634e487b7160e01b600052601160045260246000fd5b600081600019048311821515161561325557613255613225565b500290565b634e487b7160e01b600052601260045260246000fd5b60008261328d57634e487b7160e01b600052601260045260246000fd5b500490565b8181038181111561141c5761141c613225565b6001600160401b03818116838216019080821115611a8557611a85613225565b60006101008a83528060208401526132df8184018b613103565b6001600160a01b03998a1660408501529789166060840152505093861660808501526001600160401b039290921660a084015290931660c082015260e0019190915292915050565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b60006020828403121561336e57600080fd5b815161081081612ca9565b80518015158114612cc957600080fd5b60006020828403121561339b57600080fd5b61081082613379565b6000602082840312156133b657600080fd5b604051602081018181106001600160401b03821117156133d8576133d8612d6d565b6040529151825250919050565b634e487b7160e01b600052603260045260246000fd5b6000808335601e1984360301811261341257600080fd5b8301803591506001600160401b0382111561342c57600080fd5b60200191503681900382131561344157600080fd5b9250929050565b8183823760009101908152919050565b60006020828403121561346a57600080fd5b81516001600160401b0381111561348057600080fd5b8201601f8101841361349157600080fd5b805161349f612e4582612db3565b8181528560208385010111156134b457600080fd5b6134c58260208301602086016130df565b95945050505050565b6000600182016134e0576134e0613225565b5060010190565b6000602082840312156134f957600080fd5b5051919050565b8381528260208201526060604082015260006134c56060830184613103565b60006101208083526135338184018d613103565b602084019b909b52505060408101979097526001600160401b039590951660608701526001600160a01b03938416608087015291831660a0860152821660c085015260e08401521661010090910152919050565b60006080828403121561359957600080fd5b604051608081018181106001600160401b03821117156135bb576135bb612d6d565b6040526135c783613379565b81526135d560208401613379565b60208201526135e660408401613379565b60408201526135f760608401613379565b60608201529392505050565b600084516136158184602089016130df565b8451908301906136298183602089016130df565b845191019061363c8183602088016130df565b0195945050505050565b600b60fa1b8152600082516136628160018501602087016130df565b601d60f91b6001939091019283015250600201919050565b6000825161368c8184602087016130df565b601d60f91b920191825250600101919050565b600082516136b18184602087016130df565b919091019291505056fea26469706673582212208308750472ceb2de8177ffaad79e9d6970ffe4f59d11183bf06a5727259eab7064736f6c63430008100033a26469706673582212207fdd7511568be4055da51babd1036239ffe3588af60945cd826026d56069d15b64736f6c6343000810003360a060405234801561001057600080fd5b5060405161087838038061087883398101604081905261002f91610040565b6001600160a01b0316608052610070565b60006020828403121561005257600080fd5b81516001600160a01b038116811461006957600080fd5b9392505050565b6080516107e861009060003960008181607b015260b701526107e86000f3fe608060405234801561001057600080fd5b506004361061002b5760003560e01c8063025ac24f14610030575b600080fd5b61004361003e36600461057b565b610055565b60405190815260200160405180910390f35b600061006c6001600160a01b03861633308761014c565b6100a06001600160a01b0386167f0000000000000000000000000000000000000000000000000000000000000000866101bd565b604051636457c97960e01b81526001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001690636457c979906100fc908c9033908d908d908d908d908d908d908d906004016106da565b6020604051808303816000875af115801561011b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061013f9190610748565b9998505050505050505050565b6040516001600160a01b03808516602483015283166044820152606481018290526101b79085906323b872dd60e01b906084015b60408051601f198184030181529190526020810180516001600160e01b03166001600160e01b0319909316929092179091526102dc565b50505050565b8015806102375750604051636eb1769f60e11b81523060048201526001600160a01b03838116602483015284169063dd62ed3e90604401602060405180830381865afa158015610211573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102359190610748565b155b6102a75760405162461bcd60e51b815260206004820152603660248201527f5361666545524332303a20617070726f76652066726f6d206e6f6e2d7a65726f60448201527520746f206e6f6e2d7a65726f20616c6c6f77616e636560501b60648201526084015b60405180910390fd5b6040516001600160a01b0383166024820152604481018290526102d790849063095ea7b360e01b90606401610180565b505050565b6000610331826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b03166103ae9092919063ffffffff16565b8051909150156102d7578080602001905181019061034f9190610761565b6102d75760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b606482015260840161029e565b60606103bd84846000856103c7565b90505b9392505050565b6060824710156104285760405162461bcd60e51b815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f6044820152651c8818d85b1b60d21b606482015260840161029e565b6001600160a01b0385163b61047f5760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000604482015260640161029e565b600080866001600160a01b0316858760405161049b9190610783565b60006040518083038185875af1925050503d80600081146104d8576040519150601f19603f3d011682016040523d82523d6000602084013e6104dd565b606091505b50915091506104ed8282866104f8565b979650505050505050565b606083156105075750816103c0565b8251156105175782518084602001fd5b8160405162461bcd60e51b815260040161029e919061079f565b634e487b7160e01b600052604160045260246000fd5b80356001600160a01b038116811461055e57600080fd5b919050565b803567ffffffffffffffff8116811461055e57600080fd5b600080600080600080600080610100898b03121561059857600080fd5b883567ffffffffffffffff808211156105b057600080fd5b818b0191508b601f8301126105c457600080fd5b8135818111156105d6576105d6610531565b604051601f8201601f19908116603f011681019083821181831017156105fe576105fe610531565b816040528281528e602084870101111561061757600080fd5b82602086016020830137600060208483010152809c50505050505061063e60208a01610547565b965061064c60408a01610547565b955061065a60608a01610563565b945061066860808a01610547565b979a969950949793969560a0850135955060c08501359460e001359350915050565b60005b838110156106a557818101518382015260200161068d565b50506000910152565b600081518084526106c681602086016020860161068a565b601f01601f19169290920160200192915050565b60006101208083526106ee8184018d6106ae565b6001600160a01b039b8c166020850152998b1660408401525050958816606087015267ffffffffffffffff9490941660808601529190951660a084015260c083019490945260e08201939093526101000191909152919050565b60006020828403121561075a57600080fd5b5051919050565b60006020828403121561077357600080fd5b815180151581146103c057600080fd5b6000825161079581846020870161068a565b9190910192915050565b6020815260006103c060208301846106ae56fea264697066735822122040fd4937917989d4e157fb0795bc9dc886b180a95780126fdd27487a425c565f64736f6c6343000810003341304facd9323d75b11bcdd609cb38effffdb05710f7caf0e9b16c6d9d709f500000000000000000000000007109709ecfa91a80626ff3989d68f67f5b1dd12d885cb69240a935d632d79c317109709ecfa91a80626ff3989d68f67f5b1dd12da26469706673582212200467b7bfce99c528335f54306942eb211b47df5368bec9afc31301e3054f113164736f6c63430008100033",
    "sourceMap": "1572:26:2:-:0;;;1594:4;-1:-1:-1;;1572:26:2;;;;;;;;3126:44:5;;;;;;;;;;;-1:-1:-1;;;294:34:64;;334;192:6238;334:34;192:6238;334:34;;;-1:-1:-1;;;334:34:64;;;;;;;;:::i;:::-;-1:-1:-1;374:38:64;;;;;;;;;;;;-1:-1:-1;;;374:38:64;;;;;;;;;;:::i;:::-;-1:-1:-1;418:35:64;;;;;;;;;;;;-1:-1:-1;;;418:35:64;;;;;;;;;;:::i;:::-;;192:6238;;;;;;;;;;;;14:127:73;75:10;70:3;66:20;63:1;56:31;106:4;103:1;96:15;130:4;127:1;120:15;146:380;225:1;221:12;;;;268;;;289:61;;343:4;335:6;331:17;321:27;;289:61;396:2;388:6;385:14;365:18;362:38;359:161;;442:10;437:3;433:20;430:1;423:31;477:4;474:1;467:15;505:4;502:1;495:15;359:161;;146:380;;;:::o;657:545::-;759:2;754:3;751:11;748:448;;;795:1;820:5;816:2;809:17;865:4;861:2;851:19;935:2;923:10;919:19;916:1;912:27;906:4;902:38;971:4;959:10;956:20;953:47;;;-1:-1:-1;994:4:73;953:47;1049:2;1044:3;1040:12;1037:1;1033:20;1027:4;1023:31;1013:41;;1104:82;1122:2;1115:5;1112:13;1104:82;;;1167:17;;;1148:1;1137:13;1104:82;;;1108:3;;;748:448;657:545;;;:::o;1378:1352::-;1498:10;;-1:-1:-1;;;;;1520:30:73;;1517:56;;;1553:18;;:::i;:::-;1582:97;1672:6;1632:38;1664:4;1658:11;1632:38;:::i;:::-;1626:4;1582:97;:::i;:::-;1734:4;;1798:2;1787:14;;1815:1;1810:663;;;;2517:1;2534:6;2531:89;;;-1:-1:-1;2586:19:73;;;2580:26;2531:89;-1:-1:-1;;1335:1:73;1331:11;;;1327:24;1323:29;1313:40;1359:1;1355:11;;;1310:57;2633:81;;1780:944;;1810:663;604:1;597:14;;;641:4;628:18;;-1:-1:-1;;1846:20:73;;;1964:236;1978:7;1975:1;1972:14;1964:236;;;2067:19;;;2061:26;2046:42;;2159:27;;;;2127:1;2115:14;;;;1994:19;;1964:236;;;1968:3;2228:6;2219:7;2216:19;2213:201;;;2289:19;;;2283:26;-1:-1:-1;;2372:1:73;2368:14;;;2384:3;2364:24;2360:37;2356:42;2341:58;2326:74;;2213:201;-1:-1:-1;;;;;2460:1:73;2444:14;;;2440:22;2427:36;;-1:-1:-1;1378:1352:73:o;:::-;192:6238:64;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x60806040523480156200001157600080fd5b5060043610620001395760003560e01c8063854e5aa111620000bb578063b5508aa9116200007a578063b5508aa91462000241578063ba414fa6146200024b578063e20c9f711462000266578063f40966711462000270578063fa7626d4146200029657600080fd5b8063854e5aa114620001df578063858897ab14620001e9578063916a17c614620001f35780639ffe332314620001fd578063ab30d35a146200022a57600080fd5b80633f7286f411620001085780633f7286f4146200018f57806352bb1e46146200019957806366d9a9a014620001a35780636906f5f514620001bc57806385226c8114620001c657600080fd5b80630a9254e4146200013e5780631ed7831c146200014a5780632ade3880146200016c5780633e5e3c231462000185575b600080fd5b62000148620002a4565b005b6200015462000329565b604051620001639190620037b4565b60405180910390f35b620001766200038d565b60405162000163919062003857565b62000154620004db565b620001546200053d565b620001486200059f565b620001ad6200129e565b6040516200016391906200391d565b6200014862001388565b620001d0620016e9565b604051620001639190620039d4565b62000148620017c3565b6200014862002163565b620001ad620026e8565b602a5462000211906001600160a01b031681565b6040516001600160a01b03909116815260200162000163565b620001486200023b36600462003a43565b620027d2565b620001d06200292c565b6200025562002a06565b604051901515815260200162000163565b6200015462002b39565b620002876200028136600462003b11565b62002b9b565b60405190815260200162000163565b600754620002559060ff1681565b620002ae62001388565b602054601f546040516001600160a01b039283169290911690620002d2906200378a565b6001600160a01b03928316815291166020820152604001604051809103906000f08015801562000306573d6000803e3d6000fd5b50602a80546001600160a01b0319166001600160a01b0392909216919091179055565b606060148054806020026020016040519081016040528092919081815260200182805480156200038357602002820191906000526020600020905b81546001600160a01b0316815260019091019060200180831162000364575b5050505050905090565b6060601b805480602002602001604051908101604052809291908181526020016000905b82821015620004d257600084815260208082206040805180820182526002870290920180546001600160a01b03168352600181018054835181870281018701909452808452939591948681019491929084015b82821015620004ba578382906000526020600020018054620004269062003bad565b80601f0160208091040260200160405190810160405280929190818152602001828054620004549062003bad565b8015620004a55780601f106200047957610100808354040283529160200191620004a5565b820191906000526020600020905b8154815290600101906020018083116200048757829003601f168201915b50505050508152602001906001019062000404565b505050508152505081526020019060010190620003b1565b50505050905090565b6060601680548060200260200160405190810160405280929190818152602001828054801562000383576020028201919060005260206000209081546001600160a01b0316815260019091019060200180831162000364575050505050905090565b6060601580548060200260200160405190810160405280929190818152602001828054801562000383576020028201919060005260206000209081546001600160a01b0316815260019091019060200180831162000364575050505050905090565b6040516303223eab60e11b81526002600482015260008051602062014f4d833981519152906306447d5690602401600060405180830381600087803b158015620005e857600080fd5b505af1158015620005fd573d6000803e3d6000fd5b5050602054601f54604051634360af3d60e01b81526001600160a01b039283166004820181905294506308bca566935060029290911690634360af3d90602401602060405180830381865afa1580156200065b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062000681919062003be9565b6040518363ffffffff1660e01b8152600401620006a092919062003c03565b600060405180830381600087803b158015620006bb57600080fd5b505af1158015620006d0573d6000803e3d6000fd5b5050602054602a54601f54604051634360af3d60e01b81526001600160a01b0393841660048201819052955063095ea7b39450918316921690634360af3d90602401602060405180830381865afa15801562000730573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062000756919062003be9565b6040518363ffffffff1660e01b81526004016200077592919062003c03565b6020604051808303816000875af115801562000795573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620007bb919062003c2d565b50602a54602b54604051636f40874b60e11b81526000926001600160a01b03169163de810e9691620007f79190602d90602e9060040162003cfe565b6020604051808303816000875af115801562000817573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200083d919062003be9565b905060008051602062014f6d83398151915260001c6001600160a01b03166390c5013b6040518163ffffffff1660e01b8152600401600060405180830381600087803b1580156200088d57600080fd5b505af1158015620008a2573d6000803e3d6000fd5b505050506000602a60009054906101000a90046001600160a01b03166001600160a01b03166318e557aa6040518163ffffffff1660e01b8152600401602060405180830381865afa158015620008fc573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062000922919062003d37565b6040516370a0823160e01b8152600260048201526001600160a01b0391909116906370a0823190602401602060405180830381865afa1580156200096a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062000990919062003be9565b90506000620009a28360275462002ea7565b602354909150620009bf906001600160a01b031682600062003273565b601f54604051638ea2f2ab60e01b81526004810185905262000a3a916001600160a01b031690638ea2f2ab906024016020604051808303816000875af115801562000a0e573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062000a34919062003c2d565b62003312565b602a5460408051630c72abd560e11b8152905162000b22926001600160a01b0316916318e557aa9160048083019260209291908290030181865afa15801562000a87573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062000aad919062003d37565b6040516370a0823160e01b8152600260048201526001600160a01b0391909116906370a0823190602401602060405180830381865afa15801562000af5573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062000b1b919062003be9565b8362003321565b602a5460405163599c49ed60e11b8152600481018590526000916001600160a01b03169063b33893da90602401600060405180830381865afa15801562000b6d573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405262000b97919081019062003dbd565b50935050505062000baa8160006200340b565b602a546040516354f6127f60e01b815260048101869052600091829182916001600160a01b0316906354f6127f90602401600060405180830381865afa15801562000bf9573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405262000c23919081019062003e58565b92509250925062000c348362003312565b60008051602062014f4d83398151915263e5d6bf0262000c5642600162003ed4565b6040518263ffffffff1660e01b815260040162000c7591815260200190565b600060405180830381600087803b15801562000c9057600080fd5b505af115801562000ca5573d6000803e3d6000fd5b50506040516303223eab60e11b81526002600482015260008051602062014f4d83398151915292506306447d569150602401600060405180830381600087803b15801562000cf257600080fd5b505af115801562000d07573d6000803e3d6000fd5b5050602054601f54604051634360af3d60e01b81526001600160a01b039283166004820181905294506308bca566935060029290911690634360af3d90602401602060405180830381865afa15801562000d65573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062000d8b919062003be9565b6040518363ffffffff1660e01b815260040162000daa92919062003c03565b600060405180830381600087803b15801562000dc557600080fd5b505af115801562000dda573d6000803e3d6000fd5b5050602054602a54601f54604051634360af3d60e01b81526001600160a01b0393841660048201819052955063095ea7b39450918316921690634360af3d90602401602060405180830381865afa15801562000e3a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062000e60919062003be9565b6040518363ffffffff1660e01b815260040162000e7f92919062003c03565b6020604051808303816000875af115801562000e9f573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062000ec5919062003c2d565b50602a54602b54604051636f40874b60e11b81526000926001600160a01b03169163de810e969162000f019190602c90602e9060040162003cfe565b6020604051808303816000875af115801562000f21573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062000f47919062003be9565b905060008051602062014f6d83398151915260001c6001600160a01b03166390c5013b6040518163ffffffff1660e01b8152600401600060405180830381600087803b15801562000f9757600080fd5b505af115801562000fac573d6000803e3d6000fd5b5050602154602a5460408051632dd7538960e21b815290516001600160a01b0393841695506322f8e5669450919092169163b75d4e249160048083019260209291908290030181865afa15801562001008573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200102e919062003f0e565b6001600160401b0316602160009054906101000a90046001600160a01b03166001600160a01b03166329cb924d6040518163ffffffff1660e01b8152600401602060405180830381865afa1580156200108b573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620010b1919062003be9565b620010bd919062003ed4565b6040518263ffffffff1660e01b8152600401620010dc91815260200190565b600060405180830381600087803b158015620010f757600080fd5b505af11580156200110c573d6000803e3d6000fd5b5050601f54604051634124beef60e01b8152600481018590526001600160a01b039091169250634124beef9150602401600060405180830381600087803b1580156200115757600080fd5b505af11580156200116c573d6000803e3d6000fd5b5050602a546040516354f6127f60e01b8152600481018590526001600160a01b0390911692506354f6127f9150602401600060405180830381865afa158015620011ba573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052620011e4919081019062003e58565b91955093509150620011f684620034f4565b6200129483602c80546200120a9062003bad565b80601f0160208091040260200160405190810160405280929190818152602001828054620012389062003bad565b8015620012895780601f106200125d5761010080835404028352916020019162001289565b820191906000526020600020905b8154815290600101906020018083116200126b57829003601f168201915b50505050506200355b565b5050505050505050565b60606019805480602002602001604051908101604052809291908181526020016000905b82821015620004d25760008481526020908190206040805180820182526002860290920180546001600160a01b031683526001810180548351818702810187019094528084529394919385830193928301828280156200136f57602002820191906000526020600020906000905b82829054906101000a900460e01b6001600160e01b03191681526020019060040190602082600301049283019260010382029150808411620013305790505b50505050508152505081526020019060010190620012c2565b6000604051620013989062003798565b604051809103906000f080158015620013b5573d6000803e3d6000fd5b506001600160a01b0316630a9254e46040518163ffffffff1660e01b8152600401610100604051808303816000875af1158015620013f7573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200141d919062003f2c565b60e0810151601f80546001600160a01b03199081166001600160a01b0393841690811790925560c084015160208054831691851691909117815560a08501516023805484169186169190911790558451602180548416918616919091179055840151602280548316918516919091179055604080850151602480549093169416939093179055905191925090620014b490620037a6565b6001600160a01b039091168152602001604051809103906000f080158015620014e1573d6000803e3d6000fd5b50602580546001600160a01b0319166001600160a01b03928316179055601f5460408051630473e1f360e11b8152905191909216916308e7c3e69160048083019260209291908290030181865afa15801562001541573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062001567919062003be9565b602655601f54602054604051634360af3d60e01b81526001600160a01b039182166004820152911690634360af3d90602401602060405180830381865afa158015620015b7573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620015dd919062003be9565b602755601f546040805163fe4e198360e01b815290516001600160a01b039092169163fe4e1983916004808201926020929091908290030181865afa1580156200162b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062001651919062003f0e565b6028805467ffffffffffffffff19166001600160401b0392909216919091179055601f546040805163d509b01760e01b815290516001600160a01b039092169163d509b017916004808201926020929091908290030181865afa158015620016bd573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620016e3919062003be9565b60295550565b60606018805480602002602001604051908101604052809291908181526020016000905b82821015620004d25783829060005260206000200180546200172f9062003bad565b80601f01602080910402602001604051908101604052809291908181526020018280546200175d9062003bad565b8015620017ae5780601f106200178257610100808354040283529160200191620017ae565b820191906000526020600020905b8154815290600101906020018083116200179057829003601f168201915b5050505050815260200190600101906200170d565b6040516303223eab60e11b81526002600482015260008051602062014f4d833981519152906306447d5690602401600060405180830381600087803b1580156200180c57600080fd5b505af115801562001821573d6000803e3d6000fd5b5050602054601f54604051634360af3d60e01b81526001600160a01b039283166004820181905294506308bca566935060029290911690634360af3d90602401602060405180830381865afa1580156200187f573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620018a5919062003be9565b6040518363ffffffff1660e01b8152600401620018c492919062003c03565b600060405180830381600087803b158015620018df57600080fd5b505af1158015620018f4573d6000803e3d6000fd5b5050602054602a54601f54604051634360af3d60e01b81526001600160a01b0393841660048201819052955063095ea7b39450918316921690634360af3d90602401602060405180830381865afa15801562001954573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200197a919062003be9565b6040518363ffffffff1660e01b81526004016200199992919062003c03565b6020604051808303816000875af1158015620019b9573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620019df919062003c2d565b50602a54602b54604051636f40874b60e11b81526000926001600160a01b03169163de810e969162001a1b9190602c90602e9060040162003cfe565b6020604051808303816000875af115801562001a3b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062001a61919062003be9565b905060008051602062014f6d83398151915260001c6001600160a01b03166390c5013b6040518163ffffffff1660e01b8152600401600060405180830381600087803b15801562001ab157600080fd5b505af115801562001ac6573d6000803e3d6000fd5b505050506000602a60009054906101000a90046001600160a01b03166001600160a01b03166318e557aa6040518163ffffffff1660e01b8152600401602060405180830381865afa15801562001b20573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062001b46919062003d37565b6040516370a0823160e01b8152600260048201526001600160a01b0391909116906370a0823190602401602060405180830381865afa15801562001b8e573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062001bb4919062003be9565b60405163ca669fa760e01b81526002600482015290915060008051602062014f4d8339815191529063ca669fa790602401600060405180830381600087803b15801562001c0057600080fd5b505af115801562001c15573d6000803e3d6000fd5b5050505062001c9f602a60009054906101000a90046001600160a01b03166001600160a01b0316634f7310876040518163ffffffff1660e01b8152600401602060405180830381865afa15801562001c71573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062001c97919062003be9565b600062003321565b602a546040516354f6127f60e01b815260048101849052600091829182916001600160a01b0316906354f6127f90602401600060405180830381865afa15801562001cee573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405262001d18919081019062003e58565b92509250925062001d298362003312565b602154602a5460408051632dd7538960e21b815290516001600160a01b03938416936322f8e56693169163b75d4e249160048083019260209291908290030181865afa15801562001d7e573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062001da4919062003f0e565b6001600160401b0316602160009054906101000a90046001600160a01b03166001600160a01b03166329cb924d6040518163ffffffff1660e01b8152600401602060405180830381865afa15801562001e01573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062001e27919062003be9565b62001e33919062003ed4565b6040518263ffffffff1660e01b815260040162001e5291815260200190565b600060405180830381600087803b15801562001e6d57600080fd5b505af115801562001e82573d6000803e3d6000fd5b5050601f54604051634124beef60e01b8152600481018990526001600160a01b039091169250634124beef9150602401600060405180830381600087803b15801562001ecd57600080fd5b505af115801562001ee2573d6000803e3d6000fd5b5050602a546040516354f6127f60e01b8152600481018990526001600160a01b0390911692506354f6127f9150602401600060405180830381865afa15801562001f30573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405262001f5a919081019062003e58565b9194509250905062001f6c83620034f4565b62001f8082602c80546200120a9062003bad565b602a5460408051630c72abd560e11b8152905162002074926001600160a01b0316916318e557aa9160048083019260209291908290030181865afa15801562001fcd573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062001ff3919062003d37565b6040516370a0823160e01b8152600260048201526001600160a01b0391909116906370a0823190602401602060405180830381865afa1580156200203b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062002061919062003be9565b6200206e86600162003ed4565b62003321565b60405163ca669fa760e01b81526002600482015260008051602062014f4d8339815191529063ca669fa790602401600060405180830381600087803b158015620020bd57600080fd5b505af1158015620020d2573d6000803e3d6000fd5b505050506200215c602a60009054906101000a90046001600160a01b03166001600160a01b0316634f7310876040518163ffffffff1660e01b8152600401602060405180830381865afa1580156200212e573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062002154919062003be9565b600162003321565b5050505050565b6040516303223eab60e11b81526002600482015260008051602062014f4d833981519152906306447d5690602401600060405180830381600087803b158015620021ac57600080fd5b505af1158015620021c1573d6000803e3d6000fd5b5050602054601f54604051634360af3d60e01b81526001600160a01b039283166004820181905294506308bca566935060029290911690634360af3d90602401602060405180830381865afa1580156200221f573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062002245919062003be9565b6040518363ffffffff1660e01b81526004016200226492919062003c03565b600060405180830381600087803b1580156200227f57600080fd5b505af115801562002294573d6000803e3d6000fd5b5050602054602a54601f54604051634360af3d60e01b81526001600160a01b0393841660048201819052955063095ea7b39450918316921690634360af3d90602401602060405180830381865afa158015620022f4573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200231a919062003be9565b6040518363ffffffff1660e01b81526004016200233992919062003c03565b6020604051808303816000875af115801562002359573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200237f919062003c2d565b50602a54602b54604051636f40874b60e11b81526000926001600160a01b03169163de810e9691620023bb9190602c90602e9060040162003cfe565b6020604051808303816000875af1158015620023db573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062002401919062003be9565b905060008051602062014f6d83398151915260001c6001600160a01b03166390c5013b6040518163ffffffff1660e01b8152600401600060405180830381600087803b1580156200245157600080fd5b505af115801562002466573d6000803e3d6000fd5b505050506000602a60009054906101000a90046001600160a01b03166001600160a01b03166318e557aa6040518163ffffffff1660e01b8152600401602060405180830381865afa158015620024c0573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620024e6919062003d37565b6040516370a0823160e01b8152600260048201526001600160a01b0391909116906370a0823190602401602060405180830381865afa1580156200252e573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062002554919062003be9565b90506000620025668360275462002ea7565b60235490915062002583906001600160a01b031682600162003273565b601f54604051638ea2f2ab60e01b815260048101859052620025fe916001600160a01b031690638ea2f2ab906024016020604051808303816000875af1158015620025d2573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620025f8919062003c2d565b620034f4565b602a546040516354f6127f60e01b81526004810185905260009182916001600160a01b03909116906354f6127f90602401600060405180830381865afa1580156200264d573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405262002677919081019062003e58565b50915091506200268782620034f4565b6200269b81602c80546200120a9062003bad565b602a5460408051630c72abd560e11b815290516200215c926001600160a01b0316916318e557aa9160048083019260209291908290030181865afa15801562001fcd573d6000803e3d6000fd5b6060601a805480602002602001604051908101604052809291908181526020016000905b82821015620004d25760008481526020908190206040805180820182526002860290920180546001600160a01b03168352600181018054835181870281018701909452808452939491938583019392830182828015620027b957602002820191906000526020600020906000905b82829054906101000a900460e01b6001600160e01b031916815260200190600401906020826003010492830192600103820291508084116200277a5790505b505050505081525050815260200190600101906200270c565b6040805161022081018252600061018082018181526101a083018290526101c08301829052610200830182905282526020808301829052828401829052606083018290526080830182905260a0830182905260c0830182905260e083018290526101008301829052610120830182905261014083018290526101608301919091526001600160a01b0385166101e083015282516024808201869052845180830390910181526044909101845280820180516001600160e01b031663220c0a2160e21b1790529251919260008051602062014f4d8339815191529263b96213e49260fa9291620028c49187910162004009565b6040516020818303038152906040526040518463ffffffff1660e01b8152600401620028f3939291906200410c565b600060405180830381600087803b1580156200290e57600080fd5b505af115801562002923573d6000803e3d6000fd5b50505050505050565b60606017805480602002602001604051908101604052809291908181526020016000905b82821015620004d2578382906000526020600020018054620029729062003bad565b80601f0160208091040260200160405190810160405280929190818152602001828054620029a09062003bad565b8015620029f15780601f10620029c557610100808354040283529160200191620029f1565b820191906000526020600020905b815481529060010190602001808311620029d357829003601f168201915b50505050508152602001906001019062002950565b600754600090610100900460ff161562002a295750600754610100900460ff1690565b600060008051602062014f4d8339815191523b1562002b345760405160009060008051602062014f4d833981519152907f667f9d70ca411d70ead50d8d5c22070dafc36ad75f3dcf5e7237b22ade9aecc49062002a969083906519985a5b195960d21b9060200162003c03565b60408051601f198184030181529082905262002ab6929160200162004146565b60408051601f198184030181529082905262002ad29162004179565b6000604051808303816000865af19150503d806000811462002b11576040519150601f19603f3d011682016040523d82523d6000602084013e62002b16565b606091505b509150508080602001905181019062002b30919062003c2d565b9150505b919050565b6060601380548060200260200160405190810160405280929190818152602001828054801562000383576020028201919060005260206000209081546001600160a01b0316815260019091019060200180831162000364575050505050905090565b6040516303223eab60e11b81526001600160a01b038316600482015260009060008051602062014f4d833981519152906306447d5690602401600060405180830381600087803b15801562002bef57600080fd5b505af115801562002c04573d6000803e3d6000fd5b5050602054601f54604051634360af3d60e01b81526001600160a01b039283166004820181905294506308bca5669350879290911690634360af3d90602401602060405180830381865afa15801562002c61573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062002c87919062003be9565b6040518363ffffffff1660e01b815260040162002ca692919062003c03565b600060405180830381600087803b15801562002cc157600080fd5b505af115801562002cd6573d6000803e3d6000fd5b5050602054601f54604051634360af3d60e01b81526001600160a01b0392831660048201819052945063095ea7b393509116908190634360af3d90602401602060405180830381865afa15801562002d32573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062002d58919062003be9565b6040518363ffffffff1660e01b815260040162002d7792919062003c03565b6020604051808303816000875af115801562002d97573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062002dbd919062003c2d565b50601f54604051630dac4ebd60e21b81526001600160a01b03909116906336b13af49062002df2908590879060040162004197565b6020604051808303816000875af115801562002e12573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062002e38919062003be9565b905060008051602062014f6d83398151915260001c6001600160a01b03166390c5013b6040518163ffffffff1660e01b8152600401600060405180830381600087803b15801562002e8857600080fd5b505af115801562002e9d573d6000803e3d6000fd5b5050505092915050565b60408051606080820183526000808352602083015291810191909152601f5460405163220c0a2160e21b8152600481018590526000916001600160a01b03169063883028849060240161020060405180830381865afa15801562002f0f573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062002f35919062004266565b905060006040518060600160405280601f60009054906101000a90046001600160a01b03166001600160a01b031663d509b0176040518163ffffffff1660e01b8152600401602060405180830381865afa15801562002f98573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062002fbe919062003be9565b81526040848101516001600160401b03166020830152601f54815163afedba4f60e01b8152600481018a905291909201916001600160a01b03169063afedba4f90602401600060405180830381865afa15801562003020573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526200304a91908101906200435b565b90526040516303223eab60e11b81526003600482015290915060008051602062014f4d833981519152906306447d5690602401600060405180830381600087803b1580156200309857600080fd5b505af1158015620030ad573d6000803e3d6000fd5b505060205460405163045e52b360e11b81526001600160a01b0390911692506308bca5669150620030e690600390889060040162003c03565b600060405180830381600087803b1580156200310157600080fd5b505af115801562003116573d6000803e3d6000fd5b5050602054601f5460405163095ea7b360e01b81526001600160a01b03928316945063095ea7b39350620031539290911690889060040162003c03565b6020604051808303816000875af115801562003173573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062003199919062003c2d565b50601f5460405163a6a22b4360e01b815260048101879052600360248201526001600160a01b039091169063a6a22b4390604401600060405180830381600087803b158015620031e857600080fd5b505af1158015620031fd573d6000803e3d6000fd5b5050505060008051602062014f6d83398151915260001c6001600160a01b03166390c5013b6040518163ffffffff1660e01b8152600401600060405180830381600087803b1580156200324f57600080fd5b505af115801562003264573d6000803e3d6000fd5b50929450505050505b92915050565b81516020830151604080850151905160008051602062014f4d8339815191529363b96213e49388936338ce36ab60e11b93620032b593929190602401620043b0565b60408051601f198184030181529190526020810180516001600160e01b03166001600160e01b03199093169290921790915284620032f5576000620032ff565b670de0b6b3a76400005b604051602001620028c491815260200190565b6200331e8115620034f4565b50565b808214620034075760008051602062014f2d833981519152604051620033839060208082526022908201527f4572726f723a2061203d3d2062206e6f7420736174697366696564205b75696e604082015261745d60f01b606082015260800190565b60405180910390a17fb2de2fbe801a0df6c0cbddfd448ba3c41d48a040ca35c56c8196ef0fcae721a882604051620033bc9190620043da565b60405180910390a17fb2de2fbe801a0df6c0cbddfd448ba3c41d48a040ca35c56c8196ef0fcae721a881604051620033f5919062004413565b60405180910390a16200340762003681565b5050565b806001600160a01b0316826001600160a01b031614620034075760008051602062014f2d833981519152604051620034829060208082526025908201527f4572726f723a2061203d3d2062206e6f7420736174697366696564205b616464604082015264726573735d60d81b606082015260800190565b60405180910390a17f9c4e8541ca8f0dc1c413f9108f66d82d3cecb1bddbce437a61caa3175c4cc96f82604051620034bb91906200443e565b60405180910390a17f9c4e8541ca8f0dc1c413f9108f66d82d3cecb1bddbce437a61caa3175c4cc96f81604051620033f5919062004483565b806200331e5760008051602062014f2d833981519152604051620035499060208082526017908201527f4572726f723a20417373657274696f6e204661696c6564000000000000000000604082015260600190565b60405180910390a16200331e62003681565b806040516020016200356e919062004179565b604051602081830303815290604052805190602001208260405160200162003597919062004179565b6040516020818303038152906040528051906020012014620034075760008051602062014f2d8339815191526040516200360f9060208082526024908201527f4572726f723a2061203d3d2062206e6f7420736174697366696564205b737472604082015263696e675d60e01b606082015260800190565b60405180910390a17f280f4446b28a1372417dda658d30b95b2992b12ac9c7f378535f29a97acf358382604051620036489190620044ae565b60405180910390a17f280f4446b28a1372417dda658d30b95b2992b12ac9c7f378535f29a97acf358381604051620033f59190620044ed565b60008051602062014f4d8339815191523b1562003779576040805160008051602062014f4d833981519152602082018190526519985a5b195960d21b9282019290925260016060820152600091907f70ca10bbd0dbfd9020a9f4b13402c16cb120705e0d1c0aeab10fa353ae586fc49060800160408051601f198184030181529082905262003714929160200162004146565b60408051601f1981840301815290829052620037309162004179565b6000604051808303816000865af19150503d80600081146200376f576040519150601f19603f3d011682016040523d82523d6000602084013e62003774565b606091505b505050505b6007805461ff001916610100179055565b613b5c806200451983390190565b61c640806200807583390190565b61087880620146b583390190565b6020808252825182820181905260009190848201906040850190845b81811015620037f75783516001600160a01b031683529284019291840191600101620037d0565b50909695505050505050565b60005b838110156200382057818101518382015260200162003806565b50506000910152565b600081518084526200384381602086016020860162003803565b601f01601f19169290920160200192915050565b602080825282518282018190526000919060409081850190600581811b8701840188860187805b858110156200390d57603f198b8503018752825180516001600160a01b031685528901518985018990528051898601819052908a0190606081881b870181019190870190855b81811015620038f657605f19898503018352620038e384865162003829565b948e01949350918d0191600101620038c4565b505050978a0197945050918801916001016200387e565b50919a9950505050505050505050565b60006020808301818452808551808352604092508286019150828160051b8701018488016000805b84811015620039c557898403603f19018652825180516001600160a01b03168552880151888501889052805188860181905290890190839060608701905b80831015620039af5783516001600160e01b0319168252928b019260019290920191908b019062003983565b50978a0197955050509187019160010162003945565b50919998505050505050505050565b6000602080830181845280855180835260408601915060408160051b870101925083870160005b828110156200326457603f1988860301845262003a1a85835162003829565b94509285019290850190600101620039fb565b6001600160a01b03811681146200331e57600080fd5b6000806040838503121562003a5757600080fd5b823562003a648162003a2d565b946020939093013593505050565b634e487b7160e01b600052604160045260246000fd5b60405161018081016001600160401b038111828210171562003aae5762003aae62003a72565b60405290565b604051601f8201601f191681016001600160401b038111828210171562003adf5762003adf62003a72565b604052919050565b60006001600160401b0382111562003b035762003b0362003a72565b50601f01601f191660200190565b6000806040838503121562003b2557600080fd5b823562003b328162003a2d565b915060208301356001600160401b0381111562003b4e57600080fd5b8301601f8101851362003b6057600080fd5b803562003b7762003b718262003ae7565b62003ab4565b81815286602083850101111562003b8d57600080fd5b816020840160208301376000602083830101528093505050509250929050565b600181811c9082168062003bc257607f821691505b60208210810362003be357634e487b7160e01b600052602260045260246000fd5b50919050565b60006020828403121562003bfc57600080fd5b5051919050565b6001600160a01b03929092168252602082015260400190565b8051801515811462002b3457600080fd5b60006020828403121562003c4057600080fd5b62003c4b8262003c1c565b9392505050565b8054600090600181811c908083168062003c6d57607f831692505b6020808410820362003c8f57634e487b7160e01b600052602260045260246000fd5b8388526020880182801562003cad576001811462003cc45762003cf1565b60ff198716825285151560051b8201975062003cf1565b60008981526020902060005b8781101562003ceb5781548482015290860190840162003cd0565b83019850505b5050505050505092915050565b83815260606020820152600062003d19606083018562003c52565b828103604084015262003d2d818562003c52565b9695505050505050565b60006020828403121562003d4a57600080fd5b815162003c4b8162003a2d565b600062003d6862003b718462003ae7565b905082815283838301111562003d7d57600080fd5b62003c4b83602083018462003803565b600082601f83011262003d9f57600080fd5b62003c4b8383516020850162003d57565b805162002b348162003a2d565b600080600080600060a0868803121562003dd657600080fd5b8551945060208601516001600160401b038082111562003df557600080fd5b62003e0389838a0162003d8d565b9550604088015191508082111562003e1a57600080fd5b5062003e298882890162003d8d565b935050606086015162003e3c8162003a2d565b915062003e4c6080870162003c1c565b90509295509295909350565b60008060006060848603121562003e6e57600080fd5b62003e798462003c1c565b925060208401516001600160401b038082111562003e9657600080fd5b62003ea48783880162003d8d565b9350604086015191508082111562003ebb57600080fd5b5062003eca8682870162003d8d565b9150509250925092565b808201808211156200326d57634e487b7160e01b600052601160045260246000fd5b80516001600160401b038116811462002b3457600080fd5b60006020828403121562003f2157600080fd5b62003c4b8262003ef6565b600061010080838503121562003f4157600080fd5b604051908101906001600160401b038211818310171562003f665762003f6662003a72565b816040528351915062003f798262003a2d565b81815262003f8a6020850162003db0565b602082015262003f9d6040850162003db0565b604082015262003fb06060850162003db0565b606082015262003fc36080850162003db0565b608082015262003fd660a0850162003db0565b60a082015262003fe960c0850162003db0565b60c082015262003ffc60e0850162003db0565b60e0820152949350505050565b81518051151582526020808201511515818401526040808301511515818501526060808401516001600160a01b039081168287015260809485015181168587015292860151831660a0860152908501516001600160401b031660c0850152840151151560e084015290830151908116610100808401919091526102008301919060a08501519150610120620040a8818601846001600160401b03169052565b60c08601519250610140620040c08187018515159052565b60e08701516101608781019190915292870151610180870152908601516101a08601528501516001600160a01b039081166101c08601529401519093166101e090920191909152919050565b6001600160a01b0384168152606060208201819052600090620041329083018562003829565b828103604084015262003d2d818562003829565b6001600160e01b03198316815281516000906200416b81600485016020870162003803565b919091016004019392505050565b600082516200418d81846020870162003803565b9190910192915050565b604081526000620041ac604083018562003829565b905060018060a01b03831660208301529392505050565b600060a08284031215620041d657600080fd5b60405160a081018181106001600160401b0382111715620041fb57620041fb62003a72565b6040529050806200420c8362003c1c565b81526200421c6020840162003c1c565b60208201526200422f6040840162003c1c565b60408201526060830151620042448162003a2d565b60608201526080830151620042598162003a2d565b6080919091015292915050565b600061020082840312156200427a57600080fd5b6200428462003a88565b620042908484620041c3565b8152620042a060a0840162003db0565b6020820152620042b360c0840162003ef6565b6040820152620042c660e0840162003c1c565b6060820152610100620042db81850162003db0565b6080830152610120620042f081860162003ef6565b60a08401526101406200430581870162003c1c565b60c08501526101608087015160e0860152610180870151848601526101a087015183860152620043396101c0880162003db0565b828601526200434c6101e0880162003db0565b90850152509195945050505050565b6000602082840312156200436e57600080fd5b81516001600160401b038111156200438557600080fd5b8201601f810184136200439757600080fd5b620043a88482516020840162003d57565b949350505050565b838152826020820152606060408201526000620043d1606083018462003829565b95945050505050565b6040815260006200440560408301600a8152690808080808081319599d60b21b602082015260400190565b905082602083015292915050565b6040815260006200440560408301600a8152690808080808149a59da1d60b21b602082015260400190565b6040815260006200446960408301600a8152690808080808081319599d60b21b602082015260400190565b6001600160a01b0393909316602092909201919091525090565b6040815260006200446960408301600a8152690808080808149a59da1d60b21b602082015260400190565b604081526000620044d960408301600a8152690808080808081319599d60b21b602082015260400190565b8281036020840152620043a8818562003829565b604081526000620044d960408301600a8152690808080808149a59da1d60b21b60208201526040019056fe60e06040523480156200001157600080fd5b5060405162003b5c38038062003b5c83398101604081905262000034916200029b565b6001600160a01b03808316608052811660a08190526040805163d509b01760e01b8152905163d509b017916004808201926020929091908290030181865afa15801562000085573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620000ab9190620002d3565b60c052604051600190620000bf9062000270565b6060808252601c908201527f4461746141737365727465722056616c696461746f7220546f6b656e00000000608082015260a060208201819052600490820152631110559560e21b60c082015260ff909116604082015260e001604051809103906000f08015801562000136573d6000803e3d6000fd5b50600080546001600160a01b0319166001600160a01b03929092169182179055604051634c1d96ab60e11b815230600482015263983b2d5690602401600060405180830381600087803b1580156200018d57600080fd5b505af1158015620001a2573d6000803e3d6000fd5b5050600054604051637a231bdd60e11b81523060048201526001600160a01b03909116925063f44637ba9150602401600060405180830381600087803b158015620001ec57600080fd5b505af115801562000201573d6000803e3d6000fd5b505060005460a051604051634c1d96ab60e11b81526001600160a01b0391821660048201529116925063983b2d569150602401600060405180830381600087803b1580156200024f57600080fd5b505af115801562000264573d6000803e3d6000fd5b505050505050620002ed565b611cb68062001ea683390190565b80516001600160a01b03811681146200029657600080fd5b919050565b60008060408385031215620002af57600080fd5b620002ba836200027e565b9150620002ca602084016200027e565b90509250929050565b600060208284031215620002e657600080fd5b5051919050565b60805160a05160c051611b4b6200035b600039600081816101cd015261079501526000818161014d015281816105de015281816106af015281816106d601526108f601526000818160ee015281816105b1015281816106580152818161068d01526107710152611b4b6000f3fe608060405234801561001057600080fd5b50600436106100b45760003560e01c8063b75d4e2411610071578063b75d4e2414610193578063d448a4ec146101b5578063d509b017146101c8578063de810e96146101ef578063f1b156b214610202578063faa0a2641461021557600080fd5b806318e557aa146100b957806320402e1d146100e95780634f7310871461011057806354f6127f146101265780638921a61414610148578063b33893da1461016f575b600080fd5b6000546100cc906001600160a01b031681565b6040516001600160a01b0390911681526020015b60405180910390f35b6100cc7f000000000000000000000000000000000000000000000000000000000000000081565b61011861021d565b6040519081526020016100e0565b610139610134366004611448565b61028f565b6040516100e0939291906114b1565b6100cc7f000000000000000000000000000000000000000000000000000000000000000081565b61018261017d366004611448565b61044c565b6040516100e09594939291906114e8565b61019c611c2081565b60405167ffffffffffffffff90911681526020016100e0565b6101c66101c3366004611448565b50565b005b6101187f000000000000000000000000000000000000000000000000000000000000000081565b6101186101fd3660046115d9565b61059a565b6101c6610210366004611654565b6108eb565b6101c6610bd3565b600080546040516370a0823160e01b81523360048201526001600160a01b03909116906370a0823190602401602060405180830381865afa158015610266573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061028a9190611684565b905090565b6000818152600160205260408120600301546060908190600160a01b900460ff1661030b5760006040518060400160405280600781526020016615313630b7359560c91b8152506040518060400160405280601181526020017011185d18481b9bdd081c995cdbdb1d9959607a1b815250925092509250610445565b6000848152600160208190526040909120808201805490916002019082906103329061169d565b80601f016020809104026020016040519081016040528092919081815260200182805461035e9061169d565b80156103ab5780601f10610380576101008083540402835291602001916103ab565b820191906000526020600020905b81548152906001019060200180831161038e57829003601f168201915b505050505091508080546103be9061169d565b80601f01602080910402602001604051908101604052809291908181526020018280546103ea9061169d565b80156104375780601f1061040c57610100808354040283529160200191610437565b820191906000526020600020905b81548152906001019060200180831161041a57829003601f168201915b505050505090509250925092505b9193909250565b60016020819052600091825260409091208054918101805461046d9061169d565b80601f01602080910402602001604051908101604052809291908181526020018280546104999061169d565b80156104e65780601f106104bb576101008083540402835291602001916104e6565b820191906000526020600020905b8154815290600101906020018083116104c957829003601f168201915b5050505050908060020180546104fb9061169d565b80601f01602080910402602001604051908101604052809291908181526020018280546105279061169d565b80156105745780601f1061054957610100808354040283529160200191610574565b820191906000526020600020905b81548152906001019060200180831161055757829003601f168201915b505050600390930154919250506001600160a01b0381169060ff600160a01b9091041685565b604051634360af3d60e01b81526001600160a01b037f00000000000000000000000000000000000000000000000000000000000000008116600483015260009182917f00000000000000000000000000000000000000000000000000000000000000001690634360af3d90602401602060405180830381865afa158015610625573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106499190611684565b90506106806001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016333084610cb8565b6106d46001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000167f000000000000000000000000000000000000000000000000000000000000000083610d29565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316636457c979858561070e89610e48565b61071733610e89565b61072042610ee0565b61072930610e89565b60405160200161073e969594939291906116f3565b60408051601f19818403018152908290526001600160e01b031960e084901b1682526107bf9133903090600090611c20907f0000000000000000000000000000000000000000000000000000000000000000908a907f0000000000000000000000000000000000000000000000000000000000000000908590600401611851565b6020604051808303816000875af11580156107de573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108029190611684565b6040805160a081018252878152602080820188815282840188905233606084015260006080840181905285815260019283905293909320825181559251939550909290820190610852908261190d565b5060408201516002820190610867908261190d565b506060820151600390910180546080909301511515600160a01b026001600160a81b03199093166001600160a01b03909216919091179190911790556040518290339087907f657936090f7950624cc4d0e1efd75ff2392aea9d1aaf742ac689d3db7cb20e72906108db90899089906119cd565b60405180910390a4509392505050565b336001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000161461092057600080fd5b8015610b8e5760008281526001602081905260408083206003018054600160a01b60ff60a01b19821617909155925490516340c10f1960e01b81526001600160a01b039384166004820152602481019290925291909116906340c10f19906044016020604051808303816000875af11580156109a0573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109c491906119fb565b506000828152600160208181526040808420815160a081019092528054825292830180549193928401916109f79061169d565b80601f0160208091040260200160405190810160405280929190818152602001828054610a239061169d565b8015610a705780601f10610a4557610100808354040283529160200191610a70565b820191906000526020600020905b815481529060010190602001808311610a5357829003601f168201915b50505050508152602001600282018054610a899061169d565b80601f0160208091040260200160405190810160405280929190818152602001828054610ab59061169d565b8015610b025780601f10610ad757610100808354040283529160200191610b02565b820191906000526020600020905b815481529060010190602001808311610ae557829003601f168201915b5050509183525050600391909101546001600160a01b03808216602080850191909152600160a01b90920460ff1615156040938401526060840151845192850151858501519451959650889591909216937f36a2ca3a13b47a72af0f9bf95abd3c906882059e42e6c1c6b5b312e9da2064d792610b81929091906119cd565b60405180910390a4505050565b600082815260016020819052604082208281559190610baf908301826113fa565b610bbd6002830160006113fa565b5060030180546001600160a81b03191690555050565b6000546040516370a0823160e01b815233600482018190526001600160a01b03909216916379cc67909183906370a0823190602401602060405180830381865afa158015610c25573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c499190611684565b6040516001600160e01b031960e085901b1681526001600160a01b03909216600483015260248201526044016020604051808303816000875af1158015610c94573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906101c391906119fb565b6040516001600160a01b0380851660248301528316604482015260648101829052610d239085906323b872dd60e01b906084015b60408051601f198184030181529190526020810180516001600160e01b03166001600160e01b03199093169290921790915261100c565b50505050565b801580610da35750604051636eb1769f60e11b81523060048201526001600160a01b03838116602483015284169063dd62ed3e90604401602060405180830381865afa158015610d7d573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610da19190611684565b155b610e135760405162461bcd60e51b815260206004820152603660248201527f5361666545524332303a20617070726f76652066726f6d206e6f6e2d7a65726f60448201527520746f206e6f6e2d7a65726f20616c6c6f77616e636560501b60648201526084015b60405180910390fd5b6040516001600160a01b038316602482015260448101829052610e4390849063095ea7b360e01b90606401610cec565b505050565b6060610e57608083901c6110de565b610e60836110de565b6040805160208101939093528201526060015b6040516020818303038152906040529050919050565b6060610ea16001600160801b03602084901c166110de565b610ebc8360601b6bffffffffffffffffffffffff19166110de565b604051602001610e739291909182526001600160c01b031916602082015260280190565b606081600003610f075750506040805180820190915260018152600360fc1b602082015290565b8160005b8115610f315780610f1b81611a2e565b9150610f2a9050600a83611a5d565b9150610f0b565b60008167ffffffffffffffff811115610f4c57610f4c611536565b6040519080825280601f01601f191660200182016040528015610f76576020820181803683370190505b509050815b851561100357610f8c600182611a7f565b90506000610f9b600a88611a5d565b610fa690600a611a98565b610fb09088611a7f565b610fbb906030611ab7565b905060008160f81b905080848481518110610fd857610fd8611ad0565b60200101906001600160f81b031916908160001a905350610ffa600a89611a5d565b97505050610f7b565b50949350505050565b6000611061826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b03166112779092919063ffffffff16565b805190915015610e43578080602001905181019061107f91906119fb565b610e435760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b6064820152608401610e0a565b6000808260001c9050806001600160801b03169050806801000000000000000002811777ffffffffffffffff0000000000000000ffffffffffffffff169050806401000000000281177bffffffff00000000ffffffff00000000ffffffff00000000ffffffff16905080620100000281177dffff0000ffff0000ffff0000ffff0000ffff0000ffff0000ffff0000ffff169050806101000281177eff00ff00ff00ff00ff00ff00ff00ff00ff00ff00ff00ff00ff00ff00ff00ff1690508060100281177f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f16905060006008827f080808080808080808080808080808080808080808080808080808080808080816816111f9576111f9611a47565b0460047f040404040404040404040404040404040404040404040404040404040404040484160460027f020202020202020202020202020202020202020202020202020202020202020285160417166027029091017f3030303030303030303030303030303030303030303030303030303030303030019392505050565b60606112868484600085611290565b90505b9392505050565b6060824710156112f15760405162461bcd60e51b815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f6044820152651c8818d85b1b60d21b6064820152608401610e0a565b6001600160a01b0385163b6113485760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e74726163740000006044820152606401610e0a565b600080866001600160a01b031685876040516113649190611ae6565b60006040518083038185875af1925050503d80600081146113a1576040519150601f19603f3d011682016040523d82523d6000602084013e6113a6565b606091505b50915091506113b68282866113c1565b979650505050505050565b606083156113d0575081611289565b8251156113e05782518084602001fd5b8160405162461bcd60e51b8152600401610e0a9190611b02565b5080546114069061169d565b6000825580601f10611416575050565b601f0160209004906000526020600020908101906101c391905b808211156114445760008155600101611430565b5090565b60006020828403121561145a57600080fd5b5035919050565b60005b8381101561147c578181015183820152602001611464565b50506000910152565b6000815180845261149d816020860160208601611461565b601f01601f19169290920160200192915050565b83151581526060602082015260006114cc6060830185611485565b82810360408401526114de8185611485565b9695505050505050565b85815260a06020820152600061150160a0830187611485565b82810360408401526115138187611485565b6001600160a01b0395909516606084015250509015156080909101529392505050565b634e487b7160e01b600052604160045260246000fd5b600082601f83011261155d57600080fd5b813567ffffffffffffffff8082111561157857611578611536565b604051601f8301601f19908116603f011681019082821181831017156115a0576115a0611536565b816040528381528660208588010111156115b957600080fd5b836020870160208301376000602085830101528094505050505092915050565b6000806000606084860312156115ee57600080fd5b83359250602084013567ffffffffffffffff8082111561160d57600080fd5b6116198783880161154c565b9350604086013591508082111561162f57600080fd5b5061163c8682870161154c565b9150509250925092565b80151581146101c357600080fd5b6000806040838503121561166757600080fd5b82359150602083013561167981611646565b809150509250929050565b60006020828403121561169657600080fd5b5051919050565b600181811c908216806116b157607f821691505b6020821081036116d157634e487b7160e01b600052602260045260246000fd5b50919050565b600081516116e9818560208601611461565b9290920192915050565b7002230ba309030b9b9b2b93a32b21030ba1607d1b81526000875161171f816011850160208c01611461565b710103bb4ba34103232b9b1b934b83a34b7b7160751b6011918401918201528751611751816023840160208c01611461565b6e040ccdee440c8c2e8c292c8744060f608b1b602392909101918201528651611781816032840160208b01611461565b70040c2dcc840c2e6e6cae4e8cae4744060f607b1b6032929091019182015285516117b3816043840160208a01611461565b6e01030ba103a34b6b2b9ba30b6b81d1608d1b6043929091019182015284516117e3816052840160208901611461565b61184361182d6118276052848601017f20696e207468652044617461417373657274657220636f6e747261637420617481526204060f60eb1b602082015260230190565b876116d7565b691034b9903b30b634b21760b11b8152600a0190565b9a9950505050505050505050565b60006101208083526118658184018d611485565b6001600160a01b039b8c166020850152998b1660408401525050958816606087015267ffffffffffffffff9490941660808601529190951660a084015260c083019490945260e08201939093526101000191909152919050565b601f821115610e4357600081815260208120601f850160051c810160208610156118e65750805b601f850160051c820191505b81811015611905578281556001016118f2565b505050505050565b815167ffffffffffffffff81111561192757611927611536565b61193b81611935845461169d565b846118bf565b602080601f83116001811461197057600084156119585750858301515b600019600386901b1c1916600185901b178555611905565b600085815260208120601f198616915b8281101561199f57888601518255948401946001909101908401611980565b50858210156119bd5787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b6040815260006119e06040830185611485565b82810360208401526119f28185611485565b95945050505050565b600060208284031215611a0d57600080fd5b815161128981611646565b634e487b7160e01b600052601160045260246000fd5b600060018201611a4057611a40611a18565b5060010190565b634e487b7160e01b600052601260045260246000fd5b600082611a7a57634e487b7160e01b600052601260045260246000fd5b500490565b81810381811115611a9257611a92611a18565b92915050565b6000816000190483118215151615611ab257611ab2611a18565b500290565b60ff8181168382160190811115611a9257611a92611a18565b634e487b7160e01b600052603260045260246000fd5b60008251611af8818460208701611461565b9190910192915050565b602081526000611289602083018461148556fea264697066735822122052ead0a1319f36aa3a765a3c6aef447df122d7208d51128fc0f1ccda5445fba164736f6c6343000810003360806040523480156200001157600080fd5b5060405162001cb638038062001cb6833981016040819052620000349162000563565b8282600362000044838262000676565b50600462000053828262000676565b50506006805460ff191660ff8416179055506200007360008033620000a5565b6200009060015b60408051600080825260208201909252620001f5565b6200009c60026200007a565b50505062000796565b826000808281526005602052604090206001015460ff166002811115620000d057620000d062000742565b14620001235760405162461bcd60e51b815260206004820152601e60248201527f43616e6e6f74207573652061207072652d6578697374696e6720726f6c65000060448201526064015b60405180910390fd5b60008481526005602052604090206001808201805460ff1916828002179055508381556200016160028201846200033b602090811b62000a6617901c565b60008481526005602052604081206001015460ff1660028111156200018a576200018a62000742565b03620001ee5760405162461bcd60e51b815260206004820152603c602482015260008051602062001c9683398151915260448201527f20746f206d616e61676520616e206578636c757369766520726f6c650000000060648201526084016200011a565b5050505050565b826000808281526005602052604090206001015460ff16600281111562000220576200022062000742565b146200026f5760405162461bcd60e51b815260206004820152601e60248201527f43616e6e6f74207573652061207072652d6578697374696e6720726f6c65000060448201526064016200011a565b600084815260056020908152604090912060018101805460ff1916600217905584815590620002ae906003830190859062000a706200034b821b17901c565b60008481526005602052604081206001015460ff166002811115620002d757620002d762000742565b03620001ee5760405162461bcd60e51b8152602060048201526038602482015260008051602062001c9683398151915260448201527f20746f206d616e61676520612073686172656420726f6c65000000000000000060648201526084016200011a565b620003478282620003a0565b5050565b60005b81518110156200039b57620003868383838151811062000372576200037262000758565b60200260200101516200042160201b60201c565b8062000392816200076e565b9150506200034e565b505050565b6001600160a01b038116620004045760405162461bcd60e51b815260206004820152602360248201527f43616e6e6f742073657420616e206578636c757369766520726f6c6520746f2060448201526203078360ec1b60648201526084016200011a565b81546001600160a01b0319166001600160a01b0391909116179055565b6001600160a01b038116620004795760405162461bcd60e51b815260206004820152601f60248201527f43616e6e6f74206164642030783020746f20612073686172656420726f6c650060448201526064016200011a565b6001600160a01b0316600090815260209190915260409020805460ff19166001179055565b634e487b7160e01b600052604160045260246000fd5b600082601f830112620004c657600080fd5b81516001600160401b0380821115620004e357620004e36200049e565b604051601f8301601f19908116603f011681019082821181831017156200050e576200050e6200049e565b816040528381526020925086838588010111156200052b57600080fd5b600091505b838210156200054f578582018301518183018401529082019062000530565b600093810190920192909252949350505050565b6000806000606084860312156200057957600080fd5b83516001600160401b03808211156200059157600080fd5b6200059f87838801620004b4565b94506020860151915080821115620005b657600080fd5b50620005c586828701620004b4565b925050604084015160ff81168114620005dd57600080fd5b809150509250925092565b600181811c90821680620005fd57607f821691505b6020821081036200061e57634e487b7160e01b600052602260045260246000fd5b50919050565b601f8211156200039b57600081815260208120601f850160051c810160208610156200064d5750805b601f850160051c820191505b818110156200066e5782815560010162000659565b505050505050565b81516001600160401b038111156200069257620006926200049e565b620006aa81620006a38454620005e8565b8462000624565b602080601f831160018114620006e25760008415620006c95750858301515b600019600386901b1c1916600185901b1785556200066e565b600085815260208120601f198616915b828110156200071357888601518255948401946001909101908401620006f2565b5085821015620007325787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b634e487b7160e01b600052602160045260246000fd5b634e487b7160e01b600052603260045260246000fd5b6000600182016200078f57634e487b7160e01b600052601160045260246000fd5b5060010190565b6114f080620007a66000396000f3fe608060405234801561001057600080fd5b506004361061014d5760003560e01c806374d0a676116100c3578063a9059cbb1161007c578063a9059cbb146102be578063aaa14ca3146102d1578063ab3545e5146102e4578063d97c05be1461030f578063dd62ed3e14610322578063f44637ba1461035b57600080fd5b806374d0a6761461025757806379cc67901461026a5780637cdc1cb91461027d57806395d89b4114610290578063983b2d5614610298578063a457c2d7146102ab57600080fd5b8063395093511161011557806339509351146101cd57806340c10f19146101e057806342966c68146101f35780636be7658b1461020857806370a082311461021b57806373cc802a1461024457600080fd5b806306fdde0314610152578063095ea7b31461017057806318160ddd1461019357806323b872dd146101a5578063313ce567146101b8575b600080fd5b61015a61036e565b6040516101679190611183565b60405180910390f35b61018361017e3660046111ed565b610400565b6040519015158152602001610167565b6002545b604051908152602001610167565b6101836101b3366004611217565b61041a565b60065460405160ff9091168152602001610167565b6101836101db3660046111ed565b61043e565b6101836101ee3660046111ed565b61047d565b610206610201366004611253565b6104ba565b005b61020661021636600461126c565b6104f0565b610197610229366004611298565b6001600160a01b031660009081526020819052604090205490565b610206610252366004611298565b6105c6565b61020661026536600461126c565b6105d4565b6101836102783660046111ed565b6106aa565b61018361028b36600461126c565b6106de565b61015a6107a3565b6102066102a6366004611298565b6107b2565b6101836102b93660046111ed565b6107be565b6101836102cc3660046111ed565b610850565b6102066102df366004611253565b61085e565b6102f76102f2366004611253565b61091a565b6040516001600160a01b039091168152602001610167565b61020661031d36600461126c565b610986565b6101976103303660046112ba565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b610206610369366004611298565b610a5c565b60606003805461037d906112e4565b80601f01602080910402602001604051908101604052809291908181526020018280546103a9906112e4565b80156103f65780601f106103cb576101008083540402835291602001916103f6565b820191906000526020600020905b8154815290600101906020018083116103d957829003601f168201915b5050505050905090565b60003361040e818585610ab6565b60019150505b92915050565b600033610428858285610bda565b610433858585610c6c565b506001949350505050565b3360008181526001602090815260408083206001600160a01b038716845290915281205490919061040e908290869061047890879061132e565b610ab6565b6000600161048b81336106de565b6104b05760405162461bcd60e51b81526004016104a790611357565b60405180910390fd5b61040e8484610e3a565b60026104c681336106de565b6104e25760405162461bcd60e51b81526004016104a790611357565b6104ec3383610f19565b5050565b81600260008281526005602052604090206001015460ff16600281111561051957610519611341565b146105365760405162461bcd60e51b81526004016104a790611399565b600083815260056020526040902054839061055190336106de565b61056d5760405162461bcd60e51b81526004016104a7906113e5565b60008481526005602052604090206105889060030184611067565b60405133906001600160a01b0385169086907feb3e33034c392e69263b04ec0fa376dc12784a41b6676c7f31b936cbc0fbb5af90600090a450505050565b6105d1600082610986565b50565b81600260008281526005602052604090206001015460ff1660028111156105fd576105fd611341565b1461061a5760405162461bcd60e51b81526004016104a790611399565b600083815260056020526040902054839061063590336106de565b6106515760405162461bcd60e51b81526004016104a7906113e5565b600084815260056020526040902061066c9060030184611089565b60405133906001600160a01b0385169086907f63502af7324ff6db91ab38f8236a648727d9385ea6c782073dd4882d8a61a48f90600090a450505050565b600060026106b881336106de565b6106d45760405162461bcd60e51b81526004016104a790611357565b61040e8484610f19565b600082815260056020526040812060018082015460ff16600281111561070657610706611341565b036107275760028101546001600160a01b038481169116145b915050610414565b6002600182015460ff16600281111561074257610742611341565b0361076a576001600160a01b038316600090815260038201602052604090205460ff1661071f565b60405162461bcd60e51b815260206004820152600e60248201526d125b9d985b1a59081c9bdb19525960921b60448201526064016104a7565b60606004805461037d906112e4565b6105d160015b826105d4565b3360008181526001602090815260408083206001600160a01b0387168452909152812054909190838110156108435760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b60648201526084016104a7565b6104338286868403610ab6565b60003361040e818585610c6c565b80600260008281526005602052604090206001015460ff16600281111561088757610887611341565b146108a45760405162461bcd60e51b81526004016104a790611399565b816108af81336106de565b6108cb5760405162461bcd60e51b81526004016104a790611357565b60008381526005602052604090206108e69060030133611067565b6040513390819085907feb3e33034c392e69263b04ec0fa376dc12784a41b6676c7f31b936cbc0fbb5af90600090a4505050565b600081600160008281526005602052604090206001015460ff16600281111561094557610945611341565b146109625760405162461bcd60e51b81526004016104a790611429565b6000838152600560205260409020600201546001600160a01b031691505b50919050565b81600160008281526005602052604090206001015460ff1660028111156109af576109af611341565b146109cc5760405162461bcd60e51b81526004016104a790611429565b60008381526005602052604090205483906109e790336106de565b610a035760405162461bcd60e51b81526004016104a7906113e5565b6000848152600560205260409020610a1e9060020184611104565b60405133906001600160a01b0385169086907f3b855c56b409b671c7112789d022675eb639d0bcb8896f1b6197c132f799e74690600090a450505050565b6105d160026107b8565b6104ec8282611104565b60005b8151811015610ab157610a9f83838381518110610a9257610a92611478565b6020026020010151611089565b80610aa98161148e565b915050610a73565b505050565b6001600160a01b038316610b185760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b60648201526084016104a7565b6001600160a01b038216610b795760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b60648201526084016104a7565b6001600160a01b0383811660008181526001602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b6001600160a01b038381166000908152600160209081526040808320938616835292905220546000198114610c665781811015610c595760405162461bcd60e51b815260206004820152601d60248201527f45524332303a20696e73756666696369656e7420616c6c6f77616e636500000060448201526064016104a7565b610c668484848403610ab6565b50505050565b6001600160a01b038316610cd05760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b60648201526084016104a7565b6001600160a01b038216610d325760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b60648201526084016104a7565b6001600160a01b03831660009081526020819052604090205481811015610daa5760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b60648201526084016104a7565b6001600160a01b03808516600090815260208190526040808220858503905591851681529081208054849290610de190849061132e565b92505081905550826001600160a01b0316846001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef84604051610e2d91815260200190565b60405180910390a3610c66565b6001600160a01b038216610e905760405162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f20616464726573730060448201526064016104a7565b8060026000828254610ea2919061132e565b90915550506001600160a01b03821660009081526020819052604081208054839290610ecf90849061132e565b90915550506040518181526001600160a01b038316906000907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9060200160405180910390a35050565b6001600160a01b038216610f795760405162461bcd60e51b815260206004820152602160248201527f45524332303a206275726e2066726f6d20746865207a65726f206164647265736044820152607360f81b60648201526084016104a7565b6001600160a01b03821660009081526020819052604090205481811015610fed5760405162461bcd60e51b815260206004820152602260248201527f45524332303a206275726e20616d6f756e7420657863656564732062616c616e604482015261636560f01b60648201526084016104a7565b6001600160a01b038316600090815260208190526040812083830390556002805484929061101c9084906114a7565b90915550506040518281526000906001600160a01b038516907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9060200160405180910390a3505050565b6001600160a01b0316600090815260209190915260409020805460ff19169055565b6001600160a01b0381166110df5760405162461bcd60e51b815260206004820152601f60248201527f43616e6e6f74206164642030783020746f20612073686172656420726f6c650060448201526064016104a7565b6001600160a01b0316600090815260209190915260409020805460ff19166001179055565b6001600160a01b0381166111665760405162461bcd60e51b815260206004820152602360248201527f43616e6e6f742073657420616e206578636c757369766520726f6c6520746f2060448201526203078360ec1b60648201526084016104a7565b81546001600160a01b0319166001600160a01b0391909116179055565b600060208083528351808285015260005b818110156111b057858101830151858201604001528201611194565b506000604082860101526040601f19601f8301168501019250505092915050565b80356001600160a01b03811681146111e857600080fd5b919050565b6000806040838503121561120057600080fd5b611209836111d1565b946020939093013593505050565b60008060006060848603121561122c57600080fd5b611235846111d1565b9250611243602085016111d1565b9150604084013590509250925092565b60006020828403121561126557600080fd5b5035919050565b6000806040838503121561127f57600080fd5b8235915061128f602084016111d1565b90509250929050565b6000602082840312156112aa57600080fd5b6112b3826111d1565b9392505050565b600080604083850312156112cd57600080fd5b6112d6836111d1565b915061128f602084016111d1565b600181811c908216806112f857607f821691505b60208210810361098057634e487b7160e01b600052602260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b8082018082111561041457610414611318565b634e487b7160e01b600052602160045260246000fd5b60208082526022908201527f53656e64657220646f6573206e6f7420686f6c6420726571756972656420726f6040820152616c6560f01b606082015260800190565b6020808252602c908201527f4d7573742062652063616c6c6564206f6e20616e20696e697469616c697a656460408201526b2053686172656420726f6c6560a01b606082015260800190565b60208082526024908201527f43616e206f6e6c792062652063616c6c6564206279206120726f6c65206d616e60408201526330b3b2b960e11b606082015260800190565b6020808252602f908201527f4d7573742062652063616c6c6564206f6e20616e20696e697469616c697a656460408201526e204578636c757369766520726f6c6560881b606082015260800190565b634e487b7160e01b600052603260045260246000fd5b6000600182016114a0576114a0611318565b5060010190565b818103818111156104145761041461131856fea26469706673582212208961104dd3923b79c08fd49fd308093d4ed7792f1229905fa0e9f300d355f10d64736f6c63430008100033417474656d7074656420746f2075736520616e20696e76616c696420726f6c65608060405260078054600160ff199182168117909255600b8054909116909117905534801561002d57600080fd5b5061c6038061003d6000396000f3fe60806040523480156200001157600080fd5b5060043610620000c35760003560e01c806385226c81116200007a57806385226c8114620001af578063916a17c614620001c8578063b5508aa914620001d2578063ba414fa614620001dc578063e20c9f7114620001f7578063fa7626d4146200020157600080fd5b80630a9254e414620000c85780631ed7831c14620001505780632ade388014620001695780633e5e3c2314620001825780633f7286f4146200018c57806366d9a9a01462000196575b600080fd5b620000d26200020f565b60405162000147919081516001600160a01b03908116825260208084015182169083015260408084015182169083015260608084015182169083015260808084015182169083015260a08084015182169083015260c08084015182169083015260e09283015116918101919091526101000190565b60405180910390f35b6200015a620006af565b60405162000147919062000e70565b6200017362000713565b60405162000147919062000ee5565b6200015a62000861565b6200015a620008c3565b620001a062000925565b60405162000147919062000fc6565b620001b962000a0f565b6040516200014791906200107d565b620001a062000ae9565b620001b962000bd3565b620001e662000cad565b604051901515815260200162000147565b6200015a62000de4565b600754620001e69060ff1681565b6040805161010081018252600080825260208201819052918101829052606081018290526080810182905260a0810182905260c0810182905260e08101919091526000604051620002609062000e46565b604051809103906000f0801580156200027d573d6000803e3d6000fd5b506001600160a01b0316630a9254e46040518163ffffffff1660e01b815260040160c0604051808303816000875af1158015620002be573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620002e4919062001106565b905060006012604051620002f89062000e54565b6060808252601290820152712232b330bab63a102137b732102a37b5b2b760711b608082015260a0602082018190526003908201526211109560ea1b60c082015260ff909116604082015260e001604051809103906000f08015801562000363573d6000803e3d6000fd5b506040516303223eab60e11b815260016004820152909150737109709ecfa91a80626ff3989d68f67f5b1dd12d906306447d5690602401600060405180830381600087803b158015620003b557600080fd5b505af1158015620003ca573d6000803e3d6000fd5b505050606083015160405163e43252d760e01b81526001600160a01b038481166004830152909116915063e43252d790602401600060405180830381600087803b1580156200041857600080fd5b505af11580156200042d573d6000803e3d6000fd5b50505060808301516040516310a7e20160e01b81526b082a6a68aa4a8bea8a4aaa8960a31b60048201526001600160a01b0390911691506310a7e20190602401600060405180830381600087803b1580156200048857600080fd5b505af11580156200049d573d6000803e3d6000fd5b5050505060408281015181516020810183526802b5e3af16b18800008082529251637e7e591d60e01b81526001600160a01b03858116600483015291516024820152611c20929190911690637e7e591d90604401600060405180830381600087803b1580156200050c57600080fd5b505af115801562000521573d6000803e3d6000fd5b505050506000846020015184838760000151604051620005419062000e62565b6001600160a01b039485168152928416602084015267ffffffffffffffff9091166040830152919091166060820152608001604051809103906000f08015801562000590573d6000803e3d6000fd5b5090507f885cb69240a935d632d79c317109709ecfa91a80626ff3989d68f67f5b1dd12d60001c6001600160a01b03166390c5013b6040518163ffffffff1660e01b8152600401600060405180830381600087803b158015620005f257600080fd5b505af115801562000607573d6000803e3d6000fd5b5050505060405180610100016040528086600001516001600160a01b0316815260200186602001516001600160a01b0316815260200186604001516001600160a01b0316815260200186606001516001600160a01b0316815260200186608001516001600160a01b031681526020018660a001516001600160a01b03168152602001856001600160a01b03168152602001826001600160a01b03168152509550505050505090565b606060148054806020026020016040519081016040528092919081815260200182805480156200070957602002820191906000526020600020905b81546001600160a01b03168152600190910190602001808311620006ea575b5050505050905090565b6060601b805480602002602001604051908101604052809291908181526020016000905b828210156200085857600084815260208082206040805180820182526002870290920180546001600160a01b03168352600181018054835181870281018701909452808452939591948681019491929084015b8282101562000840578382906000526020600020018054620007ac90620011c1565b80601f0160208091040260200160405190810160405280929190818152602001828054620007da90620011c1565b80156200082b5780601f10620007ff576101008083540402835291602001916200082b565b820191906000526020600020905b8154815290600101906020018083116200080d57829003601f168201915b5050505050815260200190600101906200078a565b50505050815250508152602001906001019062000737565b50505050905090565b6060601680548060200260200160405190810160405280929190818152602001828054801562000709576020028201919060005260206000209081546001600160a01b03168152600190910190602001808311620006ea575050505050905090565b6060601580548060200260200160405190810160405280929190818152602001828054801562000709576020028201919060005260206000209081546001600160a01b03168152600190910190602001808311620006ea575050505050905090565b60606019805480602002602001604051908101604052809291908181526020016000905b82821015620008585760008481526020908190206040805180820182526002860290920180546001600160a01b03168352600181018054835181870281018701909452808452939491938583019392830182828015620009f657602002820191906000526020600020906000905b82829054906101000a900460e01b6001600160e01b03191681526020019060040190602082600301049283019260010382029150808411620009b75790505b5050505050815250508152602001906001019062000949565b60606018805480602002602001604051908101604052809291908181526020016000905b828210156200085857838290600052602060002001805462000a5590620011c1565b80601f016020809104026020016040519081016040528092919081815260200182805462000a8390620011c1565b801562000ad45780601f1062000aa85761010080835404028352916020019162000ad4565b820191906000526020600020905b81548152906001019060200180831162000ab657829003601f168201915b50505050508152602001906001019062000a33565b6060601a805480602002602001604051908101604052809291908181526020016000905b82821015620008585760008481526020908190206040805180820182526002860290920180546001600160a01b0316835260018101805483518187028101870190945280845293949193858301939283018282801562000bba57602002820191906000526020600020906000905b82829054906101000a900460e01b6001600160e01b0319168152602001906004019060208260030104928301926001038202915080841162000b7b5790505b5050505050815250508152602001906001019062000b0d565b60606017805480602002602001604051908101604052809291908181526020016000905b828210156200085857838290600052602060002001805462000c1990620011c1565b80601f016020809104026020016040519081016040528092919081815260200182805462000c4790620011c1565b801562000c985780601f1062000c6c5761010080835404028352916020019162000c98565b820191906000526020600020905b81548152906001019060200180831162000c7a57829003601f168201915b50505050508152602001906001019062000bf7565b600754600090610100900460ff161562000cd05750600754610100900460ff1690565b6000737109709ecfa91a80626ff3989d68f67f5b1dd12d3b1562000ddf5760408051737109709ecfa91a80626ff3989d68f67f5b1dd12d602082018190526519985a5b195960d21b8284015282518083038401815260608301909352600092909162000d61917f667f9d70ca411d70ead50d8d5c22070dafc36ad75f3dcf5e7237b22ade9aecc491608001620011fd565b60408051601f198184030181529082905262000d7d9162001230565b6000604051808303816000865af19150503d806000811462000dbc576040519150601f19603f3d011682016040523d82523d6000602084013e62000dc1565b606091505b509150508080602001905181019062000ddb91906200124e565b9150505b919050565b6060601380548060200260200160405190810160405280929190818152602001828054801562000709576020028201919060005260206000209081546001600160a01b03168152600190910190602001808311620006ea575050505050905090565b6167bf806200127a83390190565b610cff8062007a3983390190565b613e96806200873883390190565b6020808252825182820181905260009190848201906040850190845b8181101562000eb35783516001600160a01b03168352928401929184019160010162000e8c565b50909695505050505050565b60005b8381101562000edc57818101518382015260200162000ec2565b50506000910152565b6000602080830181845280855180835260408601915060408160051b870101925083870160005b8281101562000fb957603f19888603018452815180516001600160a01b0316865286015160408787018190528151908701819052908701906060600582901b88018101919088019060005b8181101562000fa157898403605f190183528451805180865262000f81818e88018f850162000ebf565b958c0195601f01601f1916949094018b019350918a019160010162000f57565b50919750505093860193509085019060010162000f0c565b5092979650505050505050565b60006020808301818452808551808352604092508286019150828160051b8701018488016000805b848110156200106e57898403603f19018652825180516001600160a01b03168552880151888501889052805188860181905290890190839060608701905b80831015620010585783516001600160e01b0319168252928b019260019290920191908b01906200102c565b50978a0197955050509187019160010162000fee565b50919998505050505050505050565b6000602080830181845280855180835260408601915060408160051b870101925083870160005b8281101562000fb957878503603f1901845281518051808752620010ce818989018a850162000ebf565b601f01601f191695909501860194509285019290850190600101620010a4565b80516001600160a01b038116811462000ddf57600080fd5b600060c082840312156200111957600080fd5b60405160c0810181811067ffffffffffffffff821117156200114b57634e487b7160e01b600052604160045260246000fd5b6040526200115983620010ee565b81526200116960208401620010ee565b60208201526200117c60408401620010ee565b60408201526200118f60608401620010ee565b6060820152620011a260808401620010ee565b6080820152620011b560a08401620010ee565b60a08201529392505050565b600181811c90821680620011d657607f821691505b602082108103620011f757634e487b7160e01b600052602260045260246000fd5b50919050565b6001600160e01b03198316815281516000906200122281600485016020870162000ebf565b919091016004019392505050565b600082516200124481846020870162000ebf565b9190910192915050565b6000602082840312156200126157600080fd5b815180151581146200127257600080fd5b939250505056fe608060405260078054600160ff199182168117909255600b8054909116909117905534801561002d57600080fd5b506167828061003d6000396000f3fe608060405234801561001057600080fd5b50600436106100b45760003560e01c806385226c811161007157806385226c8114610174578063916a17c614610189578063b5508aa914610191578063ba414fa614610199578063e20c9f71146101b1578063fa7626d4146101b957600080fd5b80630a9254e4146100b95780631ed7831c146101255780632ade38801461013a5780633e5e3c231461014f5780633f7286f41461015757806366d9a9a01461015f575b600080fd5b6100c16101c6565b60405161011c919081516001600160a01b03908116825260208084015182169083015260408084015182169083015260608084015182169083015260808084015182169083015260a092830151169181019190915260c00190565b60405180910390f35b61012d61042a565b60405161011c9190610ba1565b61014261048c565b60405161011c9190610c12565b61012d6105ce565b61012d61062e565b61016761068e565b60405161011c9190610ced565b61017c610774565b60405161011c9190610da0565b610167610844565b61017c61092a565b6101a16109fa565b604051901515815260200161011c565b61012d610b27565b6007546101a19060ff1681565b6040805160c081018252600080825260208201819052918101829052606081018290526080810182905260a0810191909152600060405161020690610b87565b604051809103906000f080158015610222573d6000803e3d6000fd5b506001600160a01b0316630a9254e46040518163ffffffff1660e01b815260040160a0604051808303816000875af1158015610262573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102869190610e30565b90506000816020015182600001516040516102a090610b94565b6001600160a01b03928316815291166020820152604001604051809103906000f0801580156102d3573d6000803e3d6000fd5b5060405163ca669fa760e01b815260016004820152909150737109709ecfa91a80626ff3989d68f67f5b1dd12d9063ca669fa790602401600060405180830381600087803b15801561032457600080fd5b505af1158015610338573d6000803e3d6000fd5b50505060208301516040516318fcb32f60e11b8152654f7261636c6560d01b60048201526001600160a01b03848116602483015290911691506331f9665e90604401600060405180830381600087803b15801561039457600080fd5b505af11580156103a8573d6000803e3d6000fd5b505050506040518060c0016040528083600001516001600160a01b0316815260200183602001516001600160a01b0316815260200183604001516001600160a01b0316815260200183606001516001600160a01b0316815260200183608001516001600160a01b03168152602001826001600160a01b03168152509250505090565b6060601480548060200260200160405190810160405280929190818152602001828054801561048257602002820191906000526020600020905b81546001600160a01b03168152600190910190602001808311610464575b5050505050905090565b6060601b805480602002602001604051908101604052809291908181526020016000905b828210156105c557600084815260208082206040805180820182526002870290920180546001600160a01b03168352600181018054835181870281018701909452808452939591948681019491929084015b828210156105ae57838290600052602060002001805461052190610ed0565b80601f016020809104026020016040519081016040528092919081815260200182805461054d90610ed0565b801561059a5780601f1061056f5761010080835404028352916020019161059a565b820191906000526020600020905b81548152906001019060200180831161057d57829003601f168201915b505050505081526020019060010190610502565b5050505081525050815260200190600101906104b0565b50505050905090565b60606016805480602002602001604051908101604052809291908181526020018280548015610482576020028201919060005260206000209081546001600160a01b03168152600190910190602001808311610464575050505050905090565b60606015805480602002602001604051908101604052809291908181526020018280548015610482576020028201919060005260206000209081546001600160a01b03168152600190910190602001808311610464575050505050905090565b60606019805480602002602001604051908101604052809291908181526020016000905b828210156105c55760008481526020908190206040805180820182526002860290920180546001600160a01b0316835260018101805483518187028101870190945280845293949193858301939283018282801561075c57602002820191906000526020600020906000905b82829054906101000a900460e01b6001600160e01b0319168152602001906004019060208260030104928301926001038202915080841161071e5790505b505050505081525050815260200190600101906106b2565b60606018805480602002602001604051908101604052809291908181526020016000905b828210156105c55783829060005260206000200180546107b790610ed0565b80601f01602080910402602001604051908101604052809291908181526020018280546107e390610ed0565b80156108305780601f1061080557610100808354040283529160200191610830565b820191906000526020600020905b81548152906001019060200180831161081357829003601f168201915b505050505081526020019060010190610798565b6060601a805480602002602001604051908101604052809291908181526020016000905b828210156105c55760008481526020908190206040805180820182526002860290920180546001600160a01b0316835260018101805483518187028101870190945280845293949193858301939283018282801561091257602002820191906000526020600020906000905b82829054906101000a900460e01b6001600160e01b031916815260200190600401906020826003010492830192600103820291508084116108d45790505b50505050508152505081526020019060010190610868565b60606017805480602002602001604051908101604052809291908181526020016000905b828210156105c557838290600052602060002001805461096d90610ed0565b80601f016020809104026020016040519081016040528092919081815260200182805461099990610ed0565b80156109e65780601f106109bb576101008083540402835291602001916109e6565b820191906000526020600020905b8154815290600101906020018083116109c957829003601f168201915b50505050508152602001906001019061094e565b600754600090610100900460ff1615610a1c5750600754610100900460ff1690565b6000737109709ecfa91a80626ff3989d68f67f5b1dd12d3b15610b225760408051737109709ecfa91a80626ff3989d68f67f5b1dd12d602082018190526519985a5b195960d21b82840152825180830384018152606083019093526000929091610aaa917f667f9d70ca411d70ead50d8d5c22070dafc36ad75f3dcf5e7237b22ade9aecc491608001610f0a565b60408051601f1981840301815290829052610ac491610f3b565b6000604051808303816000865af19150503d8060008114610b01576040519150601f19603f3d011682016040523d82523d6000602084013e610b06565b606091505b5091505080806020019051810190610b1e9190610f57565b9150505b919050565b60606013805480602002602001604051908101604052809291908181526020018280548015610482576020028201919060005260206000209081546001600160a01b03168152600190910190602001808311610464575050505050905090565b6145b480610f8183390190565b6112188061553583390190565b6020808252825182820181905260009190848201906040850190845b81811015610be25783516001600160a01b031683529284019291840191600101610bbd565b50909695505050505050565b60005b83811015610c09578181015183820152602001610bf1565b50506000910152565b6000602080830181845280855180835260408601915060408160051b870101925083870160005b82811015610ce057603f19888603018452815180516001600160a01b0316865286015160408787018190528151908701819052908701906060600582901b88018101919088019060005b81811015610cc957898403605f1901835284518051808652610caa818e88018f8501610bee565b958c0195601f01601f1916949094018b019350918a0191600101610c83565b509197505050938601935090850190600101610c39565b5092979650505050505050565b60006020808301818452808551808352604092508286019150828160051b8701018488016000805b84811015610d9157898403603f19018652825180516001600160a01b03168552880151888501889052805188860181905290890190839060608701905b80831015610d7c5783516001600160e01b0319168252928b019260019290920191908b0190610d52565b50978a01979550505091870191600101610d15565b50919998505050505050505050565b6000602080830181845280855180835260408601915060408160051b870101925083870160005b82811015610ce057878503603f1901845281518051808752610dee818989018a8501610bee565b601f01601f191695909501860194509285019290850190600101610dc7565b6001600160a01b0381168114610e2257600080fd5b50565b8051610b2281610e0d565b600060a08284031215610e4257600080fd5b60405160a0810181811067ffffffffffffffff82111715610e7357634e487b7160e01b600052604160045260246000fd5b6040528251610e8181610e0d565b81526020830151610e9181610e0d565b6020820152610ea260408401610e25565b6040820152610eb360608401610e25565b6060820152610ec460808401610e25565b60808201529392505050565b600181811c90821680610ee457607f821691505b602082108103610f0457634e487b7160e01b600052602260045260246000fd5b50919050565b6001600160e01b0319831681528151600090610f2d816004850160208701610bee565b919091016004019392505050565b60008251610f4d818460208701610bee565b9190910192915050565b600060208284031215610f6957600080fd5b81518015158114610f7957600080fd5b939250505056fe608060405260078054600160ff199182168117909255600b8054909116909117905534801561002d57600080fd5b506145778061003d6000396000f3fe60806040523480156200001157600080fd5b5060043610620000c35760003560e01c806385226c81116200007a57806385226c81146200018a578063916a17c614620001a3578063b5508aa914620001ad578063ba414fa614620001b7578063e20c9f7114620001d2578063fa7626d414620001dc57600080fd5b80630a9254e414620000c85780631ed7831c146200012b5780632ade388014620001445780633e5e3c23146200015d5780633f7286f4146200016757806366d9a9a01462000171575b600080fd5b620000d2620001ea565b60405162000122919081516001600160a01b039081168252602080840151821690830152604080840151821690830152606080840151821690830152608092830151169181019190915260a00190565b60405180910390f35b6200013562000618565b60405162000122919062000e41565b6200014e6200067c565b60405162000122919062000eb6565b62000135620007ca565b620001356200082c565b6200017b6200088e565b60405162000122919062000f97565b6200019462000978565b6040516200012291906200104e565b6200017b62000a52565b6200019462000b3c565b620001c162000c16565b604051901515815260200162000122565b6200013562000d4d565b600754620001c19060ff1681565b6040805160a08101825260008082526020820181905281830181905260608201819052608082015290516303223eab60e11b815260016004820152737109709ecfa91a80626ff3989d68f67f5b1dd12d906306447d5690602401600060405180830381600087803b1580156200025f57600080fd5b505af115801562000274573d6000803e3d6000fd5b505050506000604051620002889062000dfb565b604051809103906000f080158015620002a5573d6000803e3d6000fd5b506001600160a01b0316630a9254e46040518163ffffffff1660e01b81526004016020604051808303816000875af1158015620002e6573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200030c9190620010bf565b905060006040516200031e9062000e09565b604051809103906000f0801580156200033b573d6000803e3d6000fd5b50905060006200034c600062000daf565b62000358600062000daf565b84604051620003679062000e17565b92518352905160208301526001600160a01b03166040820152606001604051809103906000f080158015620003a0573d6000803e3d6000fd5b5090506000604051620003b39062000e25565b604051809103906000f080158015620003d0573d6000803e3d6000fd5b5090506000604051620003e39062000e33565b604051809103906000f08015801562000400573d6000803e3d6000fd5b506040516318fcb32f60e11b81526453746f726560d81b60048201526001600160a01b038581166024830152919250908516906331f9665e90604401600060405180830381600087803b1580156200045757600080fd5b505af11580156200046c573d6000803e3d6000fd5b50506040516318fcb32f60e11b81527210dbdb1b185d195c985b15da1a5d195b1a5cdd606a1b60048201526001600160a01b038581166024830152871692506331f9665e9150604401600060405180830381600087803b158015620004d057600080fd5b505af1158015620004e5573d6000803e3d6000fd5b50506040516318fcb32f60e11b8152721259195b9d1a599a595c95da1a5d195b1a5cdd606a1b60048201526001600160a01b038481166024830152871692506331f9665e9150604401600060405180830381600087803b1580156200054957600080fd5b505af11580156200055e573d6000803e3d6000fd5b505050507f885cb69240a935d632d79c317109709ecfa91a80626ff3989d68f67f5b1dd12d60001c6001600160a01b03166390c5013b6040518163ffffffff1660e01b8152600401600060405180830381600087803b158015620005c157600080fd5b505af1158015620005d6573d6000803e3d6000fd5b50506040805160a0810182526001600160a01b039889168152968816602088015294871694860194909452509084166060840152909216608082015292915050565b606060148054806020026020016040519081016040528092919081815260200182805480156200067257602002820191906000526020600020905b81546001600160a01b0316815260019091019060200180831162000653575b5050505050905090565b6060601b805480602002602001604051908101604052809291908181526020016000905b82821015620007c157600084815260208082206040805180820182526002870290920180546001600160a01b03168352600181018054835181870281018701909452808452939591948681019491929084015b82821015620007a95783829060005260206000200180546200071590620010ea565b80601f01602080910402602001604051908101604052809291908181526020018280546200074390620010ea565b8015620007945780601f10620007685761010080835404028352916020019162000794565b820191906000526020600020905b8154815290600101906020018083116200077657829003601f168201915b505050505081526020019060010190620006f3565b505050508152505081526020019060010190620006a0565b50505050905090565b6060601680548060200260200160405190810160405280929190818152602001828054801562000672576020028201919060005260206000209081546001600160a01b0316815260019091019060200180831162000653575050505050905090565b6060601580548060200260200160405190810160405280929190818152602001828054801562000672576020028201919060005260206000209081546001600160a01b0316815260019091019060200180831162000653575050505050905090565b60606019805480602002602001604051908101604052809291908181526020016000905b82821015620007c15760008481526020908190206040805180820182526002860290920180546001600160a01b031683526001810180548351818702810187019094528084529394919385830193928301828280156200095f57602002820191906000526020600020906000905b82829054906101000a900460e01b6001600160e01b03191681526020019060040190602082600301049283019260010382029150808411620009205790505b50505050508152505081526020019060010190620008b2565b60606018805480602002602001604051908101604052809291908181526020016000905b82821015620007c1578382906000526020600020018054620009be90620010ea565b80601f0160208091040260200160405190810160405280929190818152602001828054620009ec90620010ea565b801562000a3d5780601f1062000a115761010080835404028352916020019162000a3d565b820191906000526020600020905b81548152906001019060200180831162000a1f57829003601f168201915b5050505050815260200190600101906200099c565b6060601a805480602002602001604051908101604052809291908181526020016000905b82821015620007c15760008481526020908190206040805180820182526002860290920180546001600160a01b0316835260018101805483518187028101870190945280845293949193858301939283018282801562000b2357602002820191906000526020600020906000905b82829054906101000a900460e01b6001600160e01b0319168152602001906004019060208260030104928301926001038202915080841162000ae45790505b5050505050815250508152602001906001019062000a76565b60606017805480602002602001604051908101604052809291908181526020016000905b82821015620007c157838290600052602060002001805462000b8290620010ea565b80601f016020809104026020016040519081016040528092919081815260200182805462000bb090620010ea565b801562000c015780601f1062000bd55761010080835404028352916020019162000c01565b820191906000526020600020905b81548152906001019060200180831162000be357829003601f168201915b50505050508152602001906001019062000b60565b600754600090610100900460ff161562000c395750600754610100900460ff1690565b6000737109709ecfa91a80626ff3989d68f67f5b1dd12d3b1562000d485760408051737109709ecfa91a80626ff3989d68f67f5b1dd12d602082018190526519985a5b195960d21b8284015282518083038401815260608301909352600092909162000cca917f667f9d70ca411d70ead50d8d5c22070dafc36ad75f3dcf5e7237b22ade9aecc49160800162001126565b60408051601f198184030181529082905262000ce69162001159565b6000604051808303816000865af19150503d806000811462000d25576040519150601f19603f3d011682016040523d82523d6000602084013e62000d2a565b606091505b509150508080602001905181019062000d44919062001177565b9150505b919050565b6060601380548060200260200160405190810160405280929190818152602001828054801562000672576020028201919060005260206000209081546001600160a01b0316815260019091019060200180831162000653575050505050905090565b60408051602081019091526000815260408051602081019091528062000dde84670de0b6b3a764000062000de6565b905292915050565b600062000df482846200119b565b9392505050565b6101b580620011ca83390190565b610480806200137f83390190565b611f8b80620017ff83390190565b61095e806200378a83390190565b61045a80620040e883390190565b6020808252825182820181905260009190848201906040850190845b8181101562000e845783516001600160a01b03168352928401929184019160010162000e5d565b50909695505050505050565b60005b8381101562000ead57818101518382015260200162000e93565b50506000910152565b6000602080830181845280855180835260408601915060408160051b870101925083870160005b8281101562000f8a57603f19888603018452815180516001600160a01b0316865286015160408787018190528151908701819052908701906060600582901b88018101919088019060005b8181101562000f7257898403605f190183528451805180865262000f52818e88018f850162000e90565b958c0195601f01601f1916949094018b019350918a019160010162000f28565b50919750505093860193509085019060010162000edd565b5092979650505050505050565b60006020808301818452808551808352604092508286019150828160051b8701018488016000805b848110156200103f57898403603f19018652825180516001600160a01b03168552880151888501889052805188860181905290890190839060608701905b80831015620010295783516001600160e01b0319168252928b019260019290920191908b019062000ffd565b50978a0197955050509187019160010162000fbf565b50919998505050505050505050565b6000602080830181845280855180835260408601915060408160051b870101925083870160005b8281101562000f8a57878503603f19018452815180518087526200109f818989018a850162000e90565b601f01601f19169590950186019450928501929085019060010162001075565b600060208284031215620010d257600080fd5b81516001600160a01b038116811462000df457600080fd5b600181811c90821680620010ff57607f821691505b6020821081036200112057634e487b7160e01b600052602260045260246000fd5b50919050565b6001600160e01b03198316815281516000906200114b81600485016020870162000e90565b919091016004019392505050565b600082516200116d81846020870162000e90565b9190910192915050565b6000602082840312156200118a57600080fd5b8151801515811462000df457600080fd5b6000816000190483118215151615620011c457634e487b7160e01b600052601160045260246000fd5b50029056fe608060405234801561001057600080fd5b50610195806100206000396000f3fe608060405234801561001057600080fd5b506004361061002b5760003560e01c80630a9254e414610030575b600080fd5b610038610054565b6040516001600160a01b03909116815260200160405180910390f35b600060405161006290610084565b604051809103906000f08015801561007e573d6000803e3d6000fd5b50905090565b60cf806100918339019056fe608060405234801561001057600080fd5b504260005560ac806100236000396000f3fe6080604052348015600f57600080fd5b506004361060325760003560e01c806322f8e56614603757806329cb924d146049575b600080fd5b60476042366004605e565b600055565b005b60005460405190815260200160405180910390f35b600060208284031215606f57600080fd5b503591905056fea2646970667358221220ac5277a6d951fefada8e9d179a43cc6317941f75cad69224364e3024cf39f58e64736f6c63430008100033a26469706673582212207d8871378c623a5dea15cfb24a39319d130f503849e860fc71f867f1c69297ba64736f6c63430008100033608060405234801561001057600080fd5b5061001a3361001f565b61006f565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6104028061007e6000396000f3fe608060405234801561001057600080fd5b50600436106100625760003560e01c806331f9665e14610067578063715018a61461007c5780638da5cb5b14610084578063aafd5e40146100ad578063cc48f4db146100c0578063f2fde38b146100e9575b600080fd5b61007a610075366004610330565b6100fc565b005b61007a610188565b6000546001600160a01b03165b6040516001600160a01b03909116815260200160405180910390f35b6100916100bb36600461035c565b6101be565b6100916100ce36600461035c565b6001602052600090815260409020546001600160a01b031681565b61007a6100f7366004610375565b610229565b6000546001600160a01b0316331461012f5760405162461bcd60e51b815260040161012690610397565b60405180910390fd5b60008281526001602052604080822080546001600160a01b0319166001600160a01b0385169081179091559051909184917fb29aa13e555039289e0513962835b00fcc6e4a265ae8f99e68e5b90d5406fe489190a35050565b6000546001600160a01b031633146101b25760405162461bcd60e51b815260040161012690610397565b6101bc60006102c4565b565b6000818152600160205260408120546001600160a01b0316806102235760405162461bcd60e51b815260206004820152601860248201527f496d706c656d656e746174696f6e206e6f7420666f756e6400000000000000006044820152606401610126565b92915050565b6000546001600160a01b031633146102535760405162461bcd60e51b815260040161012690610397565b6001600160a01b0381166102b85760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608401610126565b6102c1816102c4565b50565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b80356001600160a01b038116811461032b57600080fd5b919050565b6000806040838503121561034357600080fd5b8235915061035360208401610314565b90509250929050565b60006020828403121561036e57600080fd5b5035919050565b60006020828403121561038757600080fd5b61039082610314565b9392505050565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260408201526060019056fea26469706673582212200252ff2d138f6d885f918d0a2b22e867dd71bd3438f512cd1d4016487f70090264736f6c6343000810003360806040523480156200001157600080fd5b5060405162001f8b38038062001f8b833981016040819052620000349162000655565b600280546001600160a01b0319166001600160a01b0383161790556200005d600080336200008b565b6200006c6001600033620001ec565b620000778362000203565b620000828262000300565b505050620006f5565b826000808281526020819052604090206001015460ff166002811115620000b657620000b6620006b1565b14620001095760405162461bcd60e51b815260206004820152601e60248201527f43616e6e6f74207573652061207072652d6578697374696e6720726f6c65000060448201526064015b60405180910390fd5b60008481526020819052604090206001808201805460ff191682800217905550838155620001476002820184620003f7602090811b62000dd717901c565b60008481526020819052604081206001015460ff166002811115620001705762000170620006b1565b03620001e55760405162461bcd60e51b815260206004820152603c60248201527f417474656d7074656420746f2075736520616e20696e76616c696420726f6c6560448201527f20746f206d616e61676520616e206578636c757369766520726f6c6500000000606482015260840162000100565b5050505050565b6001839055620001fe8383836200008b565b505050565b600062000211813362000407565b620002595760405162461bcd60e51b8152602060048201526022602482015260008051602062001f6b8339815191526044820152616c6560f01b606482015260840162000100565b62000274600183620004df60201b62000de11790919060201c565b620002c25760405162461bcd60e51b815260206004820152601e60248201527f466565206d757374206265203c203130302520706572207365636f6e642e0000604482015260640162000100565b815160038190556040519081527e41cf46cedaae9927def5c0647b190fd958c8ab8cde4219dad74319bc05d3d9906020015b60405180910390a15050565b60006200030e813362000407565b620003565760405162461bcd60e51b8152602060048201526022602482015260008051602062001f6b8339815191526044820152616c6560f01b606482015260840162000100565b62000371600183620004df60201b62000de11790919060201c565b620003bf5760405162461bcd60e51b815260206004820152601f60248201527f7765656b6c792064656c617920666565206d757374206265203c203130302500604482015260640162000100565b815160048190556040519081527f2e6cd3e6f7808568620c647ac0e652b0e95bef2494692adbc118fbbd02a8e82e90602001620002f4565b620004038282620004f8565b5050565b600082815260208190526040812060018082015460ff166002811115620004325762000432620006b1565b036200045e576200045583826002016200057960201b62000df81790919060201c565b915050620004d9565b6002600182015460ff1660028111156200047c576200047c620006b1565b036200049f576200045583826003016200058c60201b62000e0b1790919060201c565b60405162461bcd60e51b815260206004820152600e60248201526d125b9d985b1a59081c9bdb19525960921b604482015260640162000100565b92915050565b6000620004ec82620005ab565b51835110905092915050565b6001600160a01b0381166200055c5760405162461bcd60e51b815260206004820152602360248201527f43616e6e6f742073657420616e206578636c757369766520726f6c6520746f2060448201526203078360ec1b606482015260840162000100565b81546001600160a01b0319166001600160a01b0391909116179055565b90546001600160a01b0391821691161490565b6001600160a01b03166000908152602091909152604090205460ff1690565b6040805160208101909152600081526040518060200160405280620005e7670de0b6b3a764000085620005ef60201b62000e2a1790919060201c565b905292915050565b6000620005fd8284620006c7565b9392505050565b6000602082840312156200061757600080fd5b604051602081016001600160401b03811182821017156200064857634e487b7160e01b600052604160045260246000fd5b6040529151825250919050565b6000806000606084860312156200066b57600080fd5b62000677858562000604565b925062000688856020860162000604565b60408501519092506001600160a01b0381168114620006a657600080fd5b809150509250925092565b634e487b7160e01b600052602160045260246000fd5b6000816000190483118215151615620006f057634e487b7160e01b600052601160045260246000fd5b500290565b61186680620007056000396000f3fe6080604052600436106101355760003560e01c80637d69dfdb116100ab578063ab3545e51161006f578063ab3545e5146103b1578063acb6f6cb146103d1578063b187487d146103f1578063bd1f4b5214610411578063cd3a9b2414610431578063d97c05be1461043957600080fd5b80637d69dfdb146103235780637e7e591d1461033a57806384ae2a741461035a5780638659d23214610371578063aaa14ca31461039157600080fd5b80635b97aadd116100fd5780635b97aadd146101f35780636be7658b146102515780636f356f4a1461027157806374201feb1461029e57806374d0a676146102d35780637cdc1cb9146102f357600080fd5b80631c39c38d1461013a57806322f8e5661461017757806329cb924d146101995780632e1a7d4d146101bc5780632fee2098146101dc575b600080fd5b34801561014657600080fd5b5060025461015a906001600160a01b031681565b6040516001600160a01b0390911681526020015b60405180910390f35b34801561018357600080fd5b5061019761019236600461142b565b610459565b005b3480156101a557600080fd5b506101ae6104cf565b60405190815260200161016e565b3480156101c857600080fd5b506101976101d736600461142b565b610564565b3480156101e857600080fd5b506003546101ae9081565b3480156101ff57600080fd5b5061024261020e366004611460565b60408051602080820183526000918290526001600160a01b0393909316815260058352819020815192830190915254815290565b6040519051815260200161016e565b34801561025d57600080fd5b5061019761026c36600461147b565b6105a4565b34801561027d57600080fd5b506101ae61028c366004611460565b60056020526000908152604090205481565b3480156102aa57600080fd5b506102be6102b93660046114bf565b61067a565b6040805192518352905160208301520161016e565b3480156102df57600080fd5b506101976102ee36600461147b565b610740565b3480156102ff57600080fd5b5061031361030e36600461147b565b610816565b604051901515815260200161016e565b34801561032f57600080fd5b506004546101ae9081565b34801561034657600080fd5b50610197610355366004611545565b6108cb565b34801561036657600080fd5b506101ae62093a8081565b34801561037d57600080fd5b5061019761038c366004611570565b61094f565b34801561039d57600080fd5b506101976103ac36600461142b565b6109d1565b3480156103bd57600080fd5b5061015a6103cc36600461142b565b610a8d565b3480156103dd57600080fd5b506101976103ec36600461159b565b610af8565b3480156103fd57600080fd5b5061019761040c36600461159b565b610bb5565b34801561041d57600080fd5b5061019761042c3660046115b7565b610c6b565b610197610caf565b34801561044557600080fd5b5061019761045436600461147b565b610d01565b6002546001600160a01b031661046e57600080fd5b60025460405163117c72b360e11b8152600481018390526001600160a01b03909116906322f8e56690602401600060405180830381600087803b1580156104b457600080fd5b505af11580156104c8573d6000803e3d6000fd5b5050505050565b6002546000906001600160a01b03161561055f57600260009054906101000a90046001600160a01b03166001600160a01b03166329cb924d6040518163ffffffff1660e01b8152600401602060405180830381865afa158015610536573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061055a91906115e1565b905090565b504290565b6001546105718133610816565b6105965760405162461bcd60e51b815260040161058d906115fa565b60405180910390fd5b6105a03383610e36565b5050565b81600260008281526020819052604090206001015460ff1660028111156105cd576105cd61163c565b146105ea5760405162461bcd60e51b815260040161058d90611652565b60008381526020819052604090205483906106059033610816565b6106215760405162461bcd60e51b815260040161058d9061169e565b600084815260208190526040902061063c9060030184610f4f565b60405133906001600160a01b0385169086907feb3e33034c392e69263b04ec0fa376dc12784a41b6676c7f31b936cbc0fbb5af90600090a450505050565b60408051602081019091526000815260408051602081019091526000815260006106a48587610f71565b604080516020810190915260035481529091506106da906106d4836106ce3689900389018961159b565b90610f7d565b90610fae565b925060006106f0876106ea6104cf565b90610f71565b9050600061071a6107048362093a80610feb565b6040805160208101909152600454815290610f7d565b9050610733816106d4856106ce368b90038b018b61159b565b9350505050935093915050565b81600260008281526020819052604090206001015460ff1660028111156107695761076961163c565b146107865760405162461bcd60e51b815260040161058d90611652565b60008381526020819052604090205483906107a19033610816565b6107bd5760405162461bcd60e51b815260040161058d9061169e565b60008481526020819052604090206107d89060030184610ff7565b60405133906001600160a01b0385169086907f63502af7324ff6db91ab38f8236a648727d9385ea6c782073dd4882d8a61a48f90600090a450505050565b600082815260208190526040812060018082015460ff16600281111561083e5761083e61163c565b0361085f5760028101546001600160a01b038481169116145b9150506108c5565b6002600182015460ff16600281111561087a5761087a61163c565b0361088c576108576003820184610e0b565b60405162461bcd60e51b815260206004820152600e60248201526d125b9d985b1a59081c9bdb19525960921b604482015260640161058d565b92915050565b60006108d78133610816565b6108f35760405162461bcd60e51b815260040161058d906115fa565b6001600160a01b0383166000908152600560205260409081902083519055517f98c807f575ae6584ff8200eaf3205f3f20abf9c954fff030c152f5e7c5446d6e90610942908451815260200190565b60405180910390a1505050565b8161096a60006109643685900385018561159b565b90611072565b6109b65760405162461bcd60e51b815260206004820152601960248201527f416d6f756e742073656e742063616e2774206265207a65726f00000000000000604482015260640161058d565b6109cc6001600160a01b03821633308535611089565b505050565b80600260008281526020819052604090206001015460ff1660028111156109fa576109fa61163c565b14610a175760405162461bcd60e51b815260040161058d90611652565b81610a228133610816565b610a3e5760405162461bcd60e51b815260040161058d906115fa565b6000838152602081905260409020610a599060030133610f4f565b6040513390819085907feb3e33034c392e69263b04ec0fa376dc12784a41b6676c7f31b936cbc0fbb5af90600090a4505050565b600081600160008281526020819052604090206001015460ff166002811115610ab857610ab861163c565b14610ad55760405162461bcd60e51b815260040161058d906116e2565b6000838152602081905260409020600201546001600160a01b03165b9392505050565b6000610b048133610816565b610b205760405162461bcd60e51b815260040161058d906115fa565b610b2b826001610de1565b610b775760405162461bcd60e51b815260206004820152601e60248201527f466565206d757374206265203c203130302520706572207365636f6e642e0000604482015260640161058d565b815160038190556040519081527e41cf46cedaae9927def5c0647b190fd958c8ab8cde4219dad74319bc05d3d9906020015b60405180910390a15050565b6000610bc18133610816565b610bdd5760405162461bcd60e51b815260040161058d906115fa565b610be8826001610de1565b610c345760405162461bcd60e51b815260206004820152601f60248201527f7765656b6c792064656c617920666565206d757374206265203c203130302500604482015260640161058d565b815160048190556040519081527f2e6cd3e6f7808568620c647ac0e652b0e95bef2494692adbc118fbbd02a8e82e90602001610ba9565b600154610c788133610816565b610c945760405162461bcd60e51b815260040161058d906115fa565b82610ca96001600160a01b03821633856110f4565b50505050565b60003411610cff5760405162461bcd60e51b815260206004820152601860248201527f56616c75652073656e742063616e2774206265207a65726f0000000000000000604482015260640161058d565b565b81600160008281526020819052604090206001015460ff166002811115610d2a57610d2a61163c565b14610d475760405162461bcd60e51b815260040161058d906116e2565b6000838152602081905260409020548390610d629033610816565b610d7e5760405162461bcd60e51b815260040161058d9061169e565b6000848152602081905260409020610d999060020184611124565b60405133906001600160a01b0385169086907f3b855c56b409b671c7112789d022675eb639d0bcb8896f1b6197c132f799e74690600090a450505050565b6105a08282611124565b6000610dec826111a3565b51835110905092915050565b90546001600160a01b0391821691161490565b6001600160a01b03166000908152602091909152604090205460ff1690565b6000610af18284611747565b80471015610e865760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a20696e73756666696369656e742062616c616e6365000000604482015260640161058d565b6000826001600160a01b03168260405160006040518083038185875af1925050503d8060008114610ed3576040519150601f19603f3d011682016040523d82523d6000602084013e610ed8565b606091505b50509050806109cc5760405162461bcd60e51b815260206004820152603a60248201527f416464726573733a20756e61626c6520746f2073656e642076616c75652c207260448201527f6563697069656e74206d61792068617665207265766572746564000000000000606482015260840161058d565b6001600160a01b0316600090815260209190915260409020805460ff19169055565b6000610af18284611766565b604080516020810190915260008152604080516020810190915283518190610fa59085610e2a565b90529392505050565b6040805160208101909152600081526040805160208101909152825184518291670de0b6b3a764000091610fe191610e2a565b610fa59190611779565b6000610af18284611779565b6001600160a01b03811661104d5760405162461bcd60e51b815260206004820152601f60248201527f43616e6e6f74206164642030783020746f20612073686172656420726f6c6500604482015260640161058d565b6001600160a01b0316600090815260209190915260409020805460ff19166001179055565b600061107d826111a3565b51835111905092915050565b6040516001600160a01b0380851660248301528316604482015260648101829052610ca99085906323b872dd60e01b906084015b60408051601f198184030181529190526020810180516001600160e01b03166001600160e01b0319909316929092179091526111d8565b6040516001600160a01b0383166024820152604481018290526109cc90849063a9059cbb60e01b906064016110bd565b6001600160a01b0381166111865760405162461bcd60e51b815260206004820152602360248201527f43616e6e6f742073657420616e206578636c757369766520726f6c6520746f2060448201526203078360ec1b606482015260840161058d565b81546001600160a01b0319166001600160a01b0391909116179055565b6040805160208101909152600081526040805160208101909152806111d084670de0b6b3a7640000610e2a565b905292915050565b600061122d826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b03166112aa9092919063ffffffff16565b8051909150156109cc578080602001905181019061124b919061179b565b6109cc5760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b606482015260840161058d565b60606112b984846000856112c1565b949350505050565b6060824710156113225760405162461bcd60e51b815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f6044820152651c8818d85b1b60d21b606482015260840161058d565b6001600160a01b0385163b6113795760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000604482015260640161058d565b600080866001600160a01b0316858760405161139591906117e1565b60006040518083038185875af1925050503d80600081146113d2576040519150601f19603f3d011682016040523d82523d6000602084013e6113d7565b606091505b50915091506113e78282866113f2565b979650505050505050565b60608315611401575081610af1565b8251156114115782518084602001fd5b8160405162461bcd60e51b815260040161058d91906117fd565b60006020828403121561143d57600080fd5b5035919050565b80356001600160a01b038116811461145b57600080fd5b919050565b60006020828403121561147257600080fd5b610af182611444565b6000806040838503121561148e57600080fd5b8235915061149e60208401611444565b90509250929050565b6000602082840312156114b957600080fd5b50919050565b6000806000606084860312156114d457600080fd5b83359250602084013591506114ec85604086016114a7565b90509250925092565b60006020828403121561150757600080fd5b6040516020810181811067ffffffffffffffff8211171561153857634e487b7160e01b600052604160045260246000fd5b6040529135825250919050565b6000806040838503121561155857600080fd5b61156183611444565b915061149e84602085016114f5565b6000806040838503121561158357600080fd5b61158c83611444565b915061149e84602085016114a7565b6000602082840312156115ad57600080fd5b610af183836114f5565b600080604083850312156115ca57600080fd5b6115d383611444565b946020939093013593505050565b6000602082840312156115f357600080fd5b5051919050565b60208082526022908201527f53656e64657220646f6573206e6f7420686f6c6420726571756972656420726f6040820152616c6560f01b606082015260800190565b634e487b7160e01b600052602160045260246000fd5b6020808252602c908201527f4d7573742062652063616c6c6564206f6e20616e20696e697469616c697a656460408201526b2053686172656420726f6c6560a01b606082015260800190565b60208082526024908201527f43616e206f6e6c792062652063616c6c6564206279206120726f6c65206d616e60408201526330b3b2b960e11b606082015260800190565b6020808252602f908201527f4d7573742062652063616c6c6564206f6e20616e20696e697469616c697a656460408201526e204578636c757369766520726f6c6560881b606082015260800190565b634e487b7160e01b600052601160045260246000fd5b600081600019048311821515161561176157611761611731565b500290565b818103818111156108c5576108c5611731565b60008261179657634e487b7160e01b600052601260045260246000fd5b500490565b6000602082840312156117ad57600080fd5b81518015158114610af157600080fd5b60005b838110156117d85781810151838201526020016117c0565b50506000910152565b600082516117f38184602087016117bd565b9190910192915050565b602081526000825180602084015261181c8160408501602087016117bd565b601f01601f1916919091016040019291505056fea26469706673582212200e1fb084c8982e7255d560e846cc4c6ad74c5f9a9b38149bdde7bb884a481b1b64736f6c6343000810003353656e64657220646f6573206e6f7420686f6c6420726571756972656420726f608060405234801561001057600080fd5b5061001a33610032565b6000805460ff60a01b1916600160a01b179055610082565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6108cd806100916000396000f3fe608060405234801561001057600080fd5b50600436106100935760003560e01c80638da5cb5b116100665780638da5cb5b146101085780639b19251a14610119578063d01f63f514610149578063e43252d71461015e578063f2fde38b1461017157600080fd5b806337797c08146100985780633a3ab672146100c8578063715018a6146100eb5780638ab1d681146100f5575b600080fd5b6100ab6100a636600461073b565b610184565b6040516001600160a01b0390911681526020015b60405180910390f35b6100db6100d6366004610754565b6101ae565b60405190151581526020016100bf565b6100f36101ee565b005b6100f3610103366004610754565b61022d565b6000546001600160a01b03166100ab565b61013c610127366004610754565b60016020526000908152604090205460ff1681565b6040516100bf919061079a565b61015161030a565b6040516100bf91906107c2565b6100f361016c366004610754565b6104a0565b6100f361017f366004610754565b6105fa565b6002818154811061019457600080fd5b6000918252602090912001546001600160a01b0316905081565b60006101b8610692565b60016001600160a01b03831660009081526001602052604090205460ff1660028111156101e7576101e7610784565b1492915050565b6000546001600160a01b031633146102215760405162461bcd60e51b81526004016102189061080f565b60405180910390fd5b61022b60006106eb565b565b610235610692565b6102476000805460ff60a01b19169055565b6000546001600160a01b031633146102715760405162461bcd60e51b81526004016102189061080f565b60026001600160a01b03821660009081526001602052604090205460ff1660028111156102a0576102a0610784565b146102ef576001600160a01b038116600081815260016020526040808220805460ff19166002179055517fcdd2e9b91a56913d370075169cefa1602ba36be5301664f752192bb1709df7579190a25b6103076000805460ff60a01b1916600160a01b179055565b50565b6060610314610692565b6000805b6002548110156103985760018060006002848154811061033a5761033a610844565b60009182526020808320909101546001600160a01b0316835282019290925260400190205460ff16600281111561037357610373610784565b0361038657816103828161085a565b9250505b806103908161085a565b915050610318565b508067ffffffffffffffff8111156103b2576103b2610881565b6040519080825280602002602001820160405280156103db578160200160208202803683370190505b5091506000905060005b60025481101561049b5760006002828154811061040457610404610844565b6000918252602090912001546001600160a01b0316905060016001600160a01b03821660009081526001602052604090205460ff16600281111561044a5761044a610784565b03610488578084848151811061046257610462610844565b6001600160a01b0390921660209283029190910190910152826104848161085a565b9350505b50806104938161085a565b9150506103e5565b505090565b6104a8610692565b6104ba6000805460ff60a01b19169055565b6000546001600160a01b031633146104e45760405162461bcd60e51b81526004016102189061080f565b60016001600160a01b03821660009081526001602052604090205460ff16600281111561051357610513610784565b146102ef576001600160a01b03811660009081526001602052604081205460ff16600281111561054557610545610784565b0361059657600280546001810182556000919091527f405787fa12a823e0f2b7631cc41b3ba8828b3321ca811111fa75cd3aa3bb5ace0180546001600160a01b0319166001600160a01b0383161790555b6001600160a01b0381166000818152600160208190526040808320805460ff1916909217909155517fa850ae9193f515cbae8d35e8925bd2be26627fc91bce650b8652ed254e9cab039190a26103076000805460ff60a01b1916600160a01b179055565b6000546001600160a01b031633146106245760405162461bcd60e51b81526004016102189061080f565b6001600160a01b0381166106895760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608401610218565b610307816106eb565b600054600160a01b900460ff1661022b5760405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c006044820152606401610218565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b60006020828403121561074d57600080fd5b5035919050565b60006020828403121561076657600080fd5b81356001600160a01b038116811461077d57600080fd5b9392505050565b634e487b7160e01b600052602160045260246000fd5b60208101600383106107bc57634e487b7160e01b600052602160045260246000fd5b91905290565b6020808252825182820181905260009190848201906040850190845b818110156108035783516001600160a01b0316835292840192918401916001016107de565b50909695505050505050565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b634e487b7160e01b600052603260045260246000fd5b60006001820161087a57634e487b7160e01b600052601160045260246000fd5b5060010190565b634e487b7160e01b600052604160045260246000fdfea264697066735822122012579754682d9ca0b43a16b3094418ed8aa5ee7031d0fb774b381905d2c9cf5e64736f6c63430008100033608060405234801561001057600080fd5b5061001a3361001f565b61006f565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6103dc8061007e6000396000f3fe608060405234801561001057600080fd5b50600436106100625760003560e01c806310a7e20114610067578063715018a61461007c5780638da5cb5b146100845780638e0d3ca7146100a457806390978d1b146100b7578063f2fde38b146100ea575b600080fd5b61007a610075366004610328565b6100fd565b005b61007a61018d565b6000546040516001600160a01b0390911681526020015b60405180910390f35b61007a6100b2366004610328565b6101c3565b6100da6100c5366004610328565b60009081526001602052604090205460ff1690565b604051901515815260200161009b565b61007a6100f8366004610341565b610244565b6000546001600160a01b031633146101305760405162461bcd60e51b815260040161012790610371565b60405180910390fd5b60008181526001602052604090205460ff1661018a576000818152600160208190526040808320805460ff19169092179091555182917fa0ca1076d765c13772089a90b5121cf6ddf63c9f7891c4e5031adbc85936b27691a25b50565b6000546001600160a01b031633146101b75760405162461bcd60e51b815260040161012790610371565b6101c160006102d8565b565b6000546001600160a01b031633146101ed5760405162461bcd60e51b815260040161012790610371565b60008181526001602052604090205460ff161561018a57600081815260016020526040808220805460ff191690555182917fefdf15ca0f9402bd4e933b0edb0db65b23cc50d27cb010d8abcadaae4fa944e591a250565b6000546001600160a01b0316331461026e5760405162461bcd60e51b815260040161012790610371565b6001600160a01b0381166102d35760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608401610127565b61018a815b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b60006020828403121561033a57600080fd5b5035919050565b60006020828403121561035357600080fd5b81356001600160a01b038116811461036a57600080fd5b9392505050565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260408201526060019056fea26469706673582212200420ad640ea5d694ea28017924c73d0062ff64bd9ac631618e6fb3c5d0ca8aeb64736f6c63430008100033a2646970667358221220c74f5ca068d51d49125bff8669b3874b1237cd8193f4156aba9d1b2e7b22cab564736f6c63430008100033608060405234801561001057600080fd5b5060405161121838038061121883398101604081905261002f9161007f565b600080546001600160a01b039283166001600160a01b031991821617909155600180549390921692169190911790556100b2565b80516001600160a01b038116811461007a57600080fd5b919050565b6000806040838503121561009257600080fd5b61009b83610063565b91506100a960208401610063565b90509250929050565b611157806100c16000396000f3fe608060405234801561001057600080fd5b506004361061009e5760003560e01c8063719c6d5611610066578063719c6d5614610131578063b551cd5014610144578063b555d60814610167578063d7d6f43d1461017c578063f76177cf1461018f57600080fd5b80631c39c38d146100a3578063216666a4146100d357806322f8e566146100e857806329cb924d146100fb5780636a5ef50614610111575b600080fd5b6000546100b6906001600160a01b031681565b6040516001600160a01b0390911681526020015b60405180910390f35b6100e66100e1366004610c0f565b6101a2565b005b6100e66100f6366004610c5f565b61039c565b61010361040b565b6040519081526020016100ca565b61012461011f366004610c5f565b61049c565b6040516100ca9190610cef565b61010361013f366004610c0f565b6105f1565b610157610152366004610c0f565b610630565b60405190151581526020016100ca565b61016f61065f565b6040516100ca9190610d09565b6100e661018a366004610d6b565b610764565b6100e661019d366004610dc3565b610a33565b6101aa610a5d565b6001600160a01b03166390978d1b846040518263ffffffff1660e01b81526004016101d791815260200190565b602060405180830381865afa1580156101f4573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102189190610de5565b61022157600080fd5b600061022e848484610ae0565b600081815260026020526040902080549192509060ff16158015610261575060008281526003602052604090205460ff16155b15610395576040805180820182526001808252600480546020808501918252600088815260038083528782209651875490151560ff1990911617875592519585019590955585516060810187528b81529081018a81529581018981528354948501845592909452835192027f8a35acfbc15ff81a39ae7d344fd709f28e8600b4aa8c65c6b64bfe7fe36bd19b810192835593517f8a35acfbc15ff81a39ae7d344fd709f28e8600b4aa8c65c6b64bfe7fe36bd19c85015551919290917f8a35acfbc15ff81a39ae7d344fd709f28e8600b4aa8c65c6b64bfe7fe36bd19d9091019061034c9082610e8f565b5050508185336001600160a01b03167f5b89fcc758ee4d9d8841986019cd2bb83213389a619b54baff9ec2ec9944e7a7878760405161038c929190610f4f565b60405180910390a45b5050505050565b6000546001600160a01b03166103b157600080fd5b60005460405163117c72b360e11b8152600481018390526001600160a01b03909116906322f8e56690602401600060405180830381600087803b1580156103f757600080fd5b505af1158015610395573d6000803e3d6000fd5b600080546001600160a01b0316156104975760008054906101000a90046001600160a01b03166001600160a01b03166329cb924d6040518163ffffffff1660e01b8152600401602060405180830381865afa15801561046e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104929190610f68565b905090565b504290565b604080516060808201835260008083526020830152918101919091526000828152600360205260409020805460ff166105135760405162461bcd60e51b815260206004820152601460248201527314995c5d595cdd081251081b9bdd08199bdd5b9960621b60448201526064015b60405180910390fd5b600481600101548154811061052a5761052a610f81565b9060005260206000209060030201604051806060016040529081600082015481526020016001820154815260200160028201805461056790610e07565b80601f016020809104026020016040519081016040528092919081815260200182805461059390610e07565b80156105e05780601f106105b5576101008083540402835291602001916105e0565b820191906000526020600020905b8154815290600101906020018083116105c357829003601f168201915b505050505081525050915050919050565b60008060026000610603878787610ae0565b81526020810191909152604001600020805490915060ff1661062457600080fd5b60010154949350505050565b60008060026000610642878787610ae0565b815260208101919091526040016000205460ff1695945050505050565b60606004805480602002602001604051908101604052809291908181526020016000905b8282101561075b578382906000526020600020906003020160405180606001604052908160008201548152602001600182015481526020016002820180546106ca90610e07565b80601f01602080910402602001604051908101604052809291908181526020018280546106f690610e07565b80156107435780601f1061071857610100808354040283529160200191610743565b820191906000526020600020905b81548152906001019060200180831161072657829003601f168201915b50505050508152505081526020019060010190610683565b50505050905090565b6000610771858585610ae0565b9050604051806060016040528060011515815260200183815260200161079561040b565b905260008281526002602081815260408084208551815460ff1916901515178155858301516001820155948101519490920193909355600390925220805460ff166108385760405162461bcd60e51b815260206004820152602d60248201527f43616e2774207075736820707269636573207468617420686176656e2774206260448201526c19595b881c995c5d595cdd1959609a1b606482015260840161050a565b6001808201546000848152600360205260408120805460ff1916815583018190556004549192909161086a9190610f97565b90508181146109a05760006004828154811061088857610888610f81565b90600052602060002090600302019050826003600061093c846000015485600101548660020180546108b990610e07565b80601f01602080910402602001604051908101604052809291908181526020018280546108e590610e07565b80156109325780601f1061090757610100808354040283529160200191610932565b820191906000526020600020905b81548152906001019060200180831161091557829003601f168201915b5050505050610ae0565b815260200190815260200160002060010181905550806004848154811061096557610965610f81565b906000526020600020906003020160008201548160000155600182015481600101556002820181600201908161099b9190610fbe565b505050505b60048054806109b1576109b1611091565b60008281526020812060036000199093019283020181815560018101829055906109de6002830182610b16565b505090558388336001600160a01b03167f01aba42f88d71f240ed63f6e0b37e62ba65f3d4bc0f11228ef9163cdc56c64b58a8a8a604051610a21939291906110a7565b60405180910390a45050505050505050565b6000610a3e8361049c565b9050610a5881600001518260200151836040015185610764565b505050565b6001546040516302abf57960e61b8152721259195b9d1a599a595c95da1a5d195b1a5cdd606a1b60048201526000916001600160a01b03169063aafd5e4090602401602060405180830381865afa158015610abc573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061049291906110d0565b6000838383604051602001610af7939291906110f9565b6040516020818303038152906040528051906020012090509392505050565b508054610b2290610e07565b6000825580601f10610b32575050565b601f016020900490600052602060002090810190610b509190610b53565b50565b5b80821115610b685760008155600101610b54565b5090565b634e487b7160e01b600052604160045260246000fd5b600082601f830112610b9357600080fd5b813567ffffffffffffffff80821115610bae57610bae610b6c565b604051601f8301601f19908116603f01168101908282118183101715610bd657610bd6610b6c565b81604052838152866020858801011115610bef57600080fd5b836020870160208301376000602085830101528094505050505092915050565b600080600060608486031215610c2457600080fd5b8335925060208401359150604084013567ffffffffffffffff811115610c4957600080fd5b610c5586828701610b82565b9150509250925092565b600060208284031215610c7157600080fd5b5035919050565b6000815180845260005b81811015610c9e57602081850181015186830182015201610c82565b506000602082860101526020601f19601f83011685010191505092915050565b80518252602081015160208301526000604082015160606040850152610ce76060850182610c78565b949350505050565b602081526000610d026020830184610cbe565b9392505050565b6000602080830181845280855180835260408601915060408160051b870101925083870160005b82811015610d5e57603f19888603018452610d4c858351610cbe565b94509285019290850190600101610d30565b5092979650505050505050565b60008060008060808587031215610d8157600080fd5b8435935060208501359250604085013567ffffffffffffffff811115610da657600080fd5b610db287828801610b82565b949793965093946060013593505050565b60008060408385031215610dd657600080fd5b50508035926020909101359150565b600060208284031215610df757600080fd5b81518015158114610d0257600080fd5b600181811c90821680610e1b57607f821691505b602082108103610e3b57634e487b7160e01b600052602260045260246000fd5b50919050565b601f821115610a5857600081815260208120601f850160051c81016020861015610e685750805b601f850160051c820191505b81811015610e8757828155600101610e74565b505050505050565b815167ffffffffffffffff811115610ea957610ea9610b6c565b610ebd81610eb78454610e07565b84610e41565b602080601f831160018114610ef25760008415610eda5750858301515b600019600386901b1c1916600185901b178555610e87565b600085815260208120601f198616915b82811015610f2157888601518255948401946001909101908401610f02565b5085821015610f3f5787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b828152604060208201526000610ce76040830184610c78565b600060208284031215610f7a57600080fd5b5051919050565b634e487b7160e01b600052603260045260246000fd5b81810381811115610fb857634e487b7160e01b600052601160045260246000fd5b92915050565b818103610fc9575050565b610fd38254610e07565b67ffffffffffffffff811115610feb57610feb610b6c565b610ff981610eb78454610e07565b6000601f82116001811461102d57600083156110155750848201545b600019600385901b1c1916600184901b178455610395565b600085815260209020601f19841690600086815260209020845b838110156110675782860154825560019586019590910190602001611047565b5085831015610f3f5793015460001960f8600387901b161c19169092555050600190811b01905550565b634e487b7160e01b600052603160045260246000fd5b8381526060602082015260006110c06060830185610c78565b9050826040830152949350505050565b6000602082840312156110e257600080fd5b81516001600160a01b0381168114610d0257600080fd5b8381528260208201526060604082015260006111186060830184610c78565b9594505050505056fea2646970667358221220f4b1e35f6eb1f5816327034316343d8b6a7a59647aab0193187ab03600ae070964736f6c63430008100033a264697066735822122055db8847a4d7601c142031cd5c9ebcf936788623236ed26aff77f30c70420aeb64736f6c6343000810003360806040523480156200001157600080fd5b5060405162000cff38038062000cff833981016040819052620000349162000139565b828260036200004483826200024d565b5060046200005382826200024d565b50506005805460ff191660ff93909316929092179091555062000319915050565b634e487b7160e01b600052604160045260246000fd5b600082601f8301126200009c57600080fd5b81516001600160401b0380821115620000b957620000b962000074565b604051601f8301601f19908116603f01168101908282118183101715620000e457620000e462000074565b816040528381526020925086838588010111156200010157600080fd5b600091505b8382101562000125578582018301518183018401529082019062000106565b600093810190920192909252949350505050565b6000806000606084860312156200014f57600080fd5b83516001600160401b03808211156200016757600080fd5b62000175878388016200008a565b945060208601519150808211156200018c57600080fd5b506200019b868287016200008a565b925050604084015160ff81168114620001b357600080fd5b809150509250925092565b600181811c90821680620001d357607f821691505b602082108103620001f457634e487b7160e01b600052602260045260246000fd5b50919050565b601f8211156200024857600081815260208120601f850160051c81016020861015620002235750805b601f850160051c820191505b8181101562000244578281556001016200022f565b5050505b505050565b81516001600160401b0381111562000269576200026962000074565b62000281816200027a8454620001be565b84620001fa565b602080601f831160018114620002b95760008415620002a05750858301515b600019600386901b1c1916600185901b17855562000244565b600085815260208120601f198616915b82811015620002ea57888601518255948401946001909101908401620002c9565b5085821015620003095787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b6109d680620003296000396000f3fe608060405234801561001057600080fd5b50600436106100b45760003560e01c80633950935111610071578063395093511461014957806370a082311461015c57806395d89b4114610185578063a457c2d71461018d578063a9059cbb146101a0578063dd62ed3e146101b357600080fd5b806306fdde03146100b957806308bca566146100d7578063095ea7b3146100ec57806318160ddd1461010f57806323b872dd14610121578063313ce56714610134575b600080fd5b6100c16101ec565b6040516100ce9190610820565b60405180910390f35b6100ea6100e536600461088a565b61027e565b005b6100ff6100fa36600461088a565b61028c565b60405190151581526020016100ce565b6002545b6040519081526020016100ce565b6100ff61012f3660046108b4565b6102a6565b60055460405160ff90911681526020016100ce565b6100ff61015736600461088a565b6102ca565b61011361016a3660046108f0565b6001600160a01b031660009081526020819052604090205490565b6100c1610309565b6100ff61019b36600461088a565b610318565b6100ff6101ae36600461088a565b6103af565b6101136101c1366004610912565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b6060600380546101fb90610945565b80601f016020809104026020016040519081016040528092919081815260200182805461022790610945565b80156102745780601f1061024957610100808354040283529160200191610274565b820191906000526020600020905b81548152906001019060200180831161025757829003601f168201915b5050505050905090565b61028882826103bd565b5050565b60003361029a81858561049c565b60019150505b92915050565b6000336102b48582856105c0565b6102bf858585610652565b506001949350505050565b3360008181526001602090815260408083206001600160a01b038716845290915281205490919061029a908290869061030490879061097f565b61049c565b6060600480546101fb90610945565b3360008181526001602090815260408083206001600160a01b0387168452909152812054909190838110156103a25760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b60648201526084015b60405180910390fd5b6102bf828686840361049c565b60003361029a818585610652565b6001600160a01b0382166104135760405162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f2061646472657373006044820152606401610399565b8060026000828254610425919061097f565b90915550506001600160a01b0382166000908152602081905260408120805483929061045290849061097f565b90915550506040518181526001600160a01b038316906000907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9060200160405180910390a35050565b6001600160a01b0383166104fe5760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b6064820152608401610399565b6001600160a01b03821661055f5760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b6064820152608401610399565b6001600160a01b0383811660008181526001602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b6001600160a01b03838116600090815260016020908152604080832093861683529290522054600019811461064c578181101561063f5760405162461bcd60e51b815260206004820152601d60248201527f45524332303a20696e73756666696369656e7420616c6c6f77616e63650000006044820152606401610399565b61064c848484840361049c565b50505050565b6001600160a01b0383166106b65760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b6064820152608401610399565b6001600160a01b0382166107185760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b6064820152608401610399565b6001600160a01b038316600090815260208190526040902054818110156107905760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b6064820152608401610399565b6001600160a01b038085166000908152602081905260408082208585039055918516815290812080548492906107c790849061097f565b92505081905550826001600160a01b0316846001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8460405161081391815260200190565b60405180910390a361064c565b600060208083528351808285015260005b8181101561084d57858101830151858201604001528201610831565b506000604082860101526040601f19601f8301168501019250505092915050565b80356001600160a01b038116811461088557600080fd5b919050565b6000806040838503121561089d57600080fd5b6108a68361086e565b946020939093013593505050565b6000806000606084860312156108c957600080fd5b6108d28461086e565b92506108e06020850161086e565b9150604084013590509250925092565b60006020828403121561090257600080fd5b61090b8261086e565b9392505050565b6000806040838503121561092557600080fd5b61092e8361086e565b915061093c6020840161086e565b90509250929050565b600181811c9082168061095957607f821691505b60208210810361097957634e487b7160e01b600052602260045260246000fd5b50919050565b808201808211156102a057634e487b7160e01b600052601160045260246000fdfea264697066735822122079aea89302a931b65938f5024ef67c57f346deaaa1f56bc95931901dcbfee84264736f6c6343000810003360a06040523480156200001157600080fd5b5060405162003e9638038062003e9683398101604081905262000034916200065e565b6000805460ff191660011790558084848462000057620000513390565b620000a8565b6001600160a01b0383166080526200007982826706f05b59d3b2000062000101565b5050600780546001600160a01b0319166001600160a01b039390931692909217909155506200076d9350505050565b600080546001600160a01b03838116610100818102610100600160a81b0319851617855560405193049190911692909183917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a35050565b6000546001600160a01b03610100909104163314620001675760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064015b60405180910390fd5b670de0b6b3a7640000811115620001c15760405162461bcd60e51b815260206004820152601c60248201527f4275726e656420626f6e642070657263656e74616765203e203130300000000060448201526064016200015e565b60008111620002135760405162461bcd60e51b815260206004820152601b60248201527f4275726e656420626f6e642070657263656e746167652069732030000000000060448201526064016200015e565b6005819055600680546001600160401b038416600160a01b026001600160e01b03199091166001600160a01b03861617179055620002616b082a6a68aa4a8bea8a4aaa8960a31b84620002b8565b604080516001600160a01b03851681526001600160401b03841660208201529081018290527fd0f09246d369018534c67fec6a6c3259c6f962ef82c5521c337ae0ccc104e4bd9060600160405180910390a1505050565b6080516040516302abf57960e61b8152654f7261636c6560d01b60048201526001600160a01b039091169063aafd5e4090602401602060405180830381865afa1580156200030a573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620003309190620006d1565b600180546001600160a01b0319166001600160a01b03929092169190911790556200035a62000523565b6001600160a01b03166390978d1b836040518263ffffffff1660e01b81526004016200038891815260200190565b602060405180830381865afa158015620003a6573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620003cc9190620006f8565b6000838152600360205260409020805460ff1916911515919091179055620003f3620005b9565b604051631d1d5b3960e11b81526001600160a01b0383811660048301529190911690633a3ab67290602401602060405180830381865afa1580156200043c573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620004629190620006f8565b6001600160a01b0382166000908152600260205260409020805460ff1916911515919091179055620004936200060b565b604051635b97aadd60e01b81526001600160a01b0383811660048301529190911690635b97aadd90602401602060405180830381865afa158015620004dc573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200050291906200071c565b516001600160a01b0390911660009081526002602052604090206001015550565b6080516040516302abf57960e61b81527f4964656e74696669657257686974656c6973740000000000000000000000000060048201526000916001600160a01b03169063aafd5e40906024015b602060405180830381865afa1580156200058e573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620005b49190620006d1565b905090565b6080516040516302abf57960e61b81527f436f6c6c61746572616c57686974656c6973740000000000000000000000000060048201526000916001600160a01b03169063aafd5e409060240162000570565b6080516040516302abf57960e61b81526453746f726560d81b60048201526000916001600160a01b03169063aafd5e409060240162000570565b6001600160a01b03811681146200065b57600080fd5b50565b600080600080608085870312156200067557600080fd5b8451620006828162000645565b6020860151909450620006958162000645565b60408601519093506001600160401b0381168114620006b357600080fd5b6060860151909250620006c68162000645565b939692955090935050565b600060208284031215620006e457600080fd5b8151620006f18162000645565b9392505050565b6000602082840312156200070b57600080fd5b81518015158114620006f157600080fd5b6000602082840312156200072f57600080fd5b604051602081016001600160401b03811182821017156200076057634e487b7160e01b600052604160045260246000fd5b6040529151825250919050565b6080516136f1620007a560003960008181610578015281816116df01528181611fa701528181612607015261266c01526136f16000f3fe608060405234801561001057600080fd5b50600436106101c45760003560e01c80638da5cb5b116100f9578063b9a3c84c11610097578063da03b36e11610071578063da03b36e146106a4578063e39dfd7f146106b3578063f2fde38b146106c6578063fe4e1983146106d957600080fd5b8063b9a3c84c14610573578063d509b0171461059a578063d60715b5146105b057600080fd5b8063a7af2d0f116100d3578063a7af2d0f1461050d578063a865578514610520578063ac9650d814610533578063afedba4f1461055357600080fd5b80638da5cb5b146104d15780638ea2f2ab146104e7578063a6a22b43146104fa57600080fd5b80634360af3d11610166578063707621571161014057806370762157146102bf578063715018a614610303578063827625201461030b578063883028841461031e57600080fd5b80634360af3d14610266578063530dd392146102795780636457c979146102ac57600080fd5b806322f8e566116101a257806322f8e5661461022357806329cb924d1461023857806336b13af4146102405780634124beef1461025357600080fd5b806308e7c3e6146101c95780631c39c38d146101e557806320402e1d14610210575b600080fd5b6101d260055481565b6040519081526020015b60405180910390f35b6007546101f8906001600160a01b031681565b6040516001600160a01b0390911681526020016101dc565b6006546101f8906001600160a01b031681565b610236610231366004612c90565b61070b565b005b6101d2610781565b6101d261024e366004612cce565b610790565b610236610261366004612c90565b610817565b6101d2610274366004612d50565b610be1565b61029c610287366004612c90565b60036020526000908152604090205460ff1681565b60405190151581526020016101dc565b6101d26102ba366004612df1565b610c1c565b6102ec6102cd366004612d50565b6002602052600090815260409020805460019091015460ff9091169082565b6040805192151583526020830191909152016101dc565b610236611233565b610236610319366004612ee1565b61126f565b6104c461032c366004612c90565b6040805161022081018252600061018082018181526101a083018290526101c083018290526101e083018290526102008301829052825260208201819052918101829052606081018290526080810182905260a0810182905260c0810182905260e0810182905261010081018290526101208101829052610140810182905261016081019190915250600090815260046020818152604092839020835161022081018552815460ff80821615156101808401908152610100808404831615156101a0860152620100008404831615156101c08601526001600160a01b03630100000090940484166101e0860152600186015484166102008601529084526002850154808416968501969096526001600160401b03600160a01b808804821699860199909952600160e01b96879004831615156060860152600386015480851660808701529889041660a085015294909604909516151560c08201529281015460e08401526005810154918301919091526006810154610120830152600781015483166101408301526008015490911661016082015290565b6040516101dc9190612f61565b60005461010090046001600160a01b03166101f8565b61029c6104f5366004612c90565b6113ea565b61023661050836600461303b565b611422565b6001546101f8906001600160a01b031681565b61023661052e36600461303b565b6116c1565b61054661054136600461306b565b611935565b6040516101dc919061312f565b610566610561366004612c90565b611a8c565b6040516101dc9190613191565b6101f87f000000000000000000000000000000000000000000000000000000000000000081565b6101d26b082a6a68aa4a8bea8a4aaa8960a31b81565b61068c6105be366004612c90565b600460208181526000928352604092839020835160a081018552815460ff808216151583526101008204811615159483019490945262010000810484161515958201959095526001600160a01b0363010000009095048516606082015260018201548516608082015260028201546003830154948301546005840154600685015460078601546008909601549498848116986001600160401b03600160a01b80880482169a600160e01b9889900481169a8486169a928504909316989093049092169594939290811691168c565b6040516101dc9c9b9a999897969594939291906131a4565b6101d2670de0b6b3a764000081565b61029c6106c1366004612c90565b611a97565b6102366106d4366004612d50565b611c15565b6006546106f390600160a01b90046001600160401b031681565b6040516001600160401b0390911681526020016101dc565b6007546001600160a01b031661072057600080fd5b60075460405163117c72b360e11b8152600481018390526001600160a01b03909116906322f8e56690602401600060405180830381600087803b15801561076657600080fd5b505af115801561077a573d6000803e3d6000fd5b5050505050565b600061078b611cb3565b905090565b600061080d84848080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201829052506006548894509092508291506001600160401b03600160a01b820416906001600160a01b03166107f681610be1565b6b082a6a68aa4a8bea8a4aaa8960a31b6000610c1c565b90505b9392505050565b61081f611d43565b61082e6000805460ff19169055565b600081815260046020526040902060028101546001600160a01b03166108965760405162461bcd60e51b8152602060048201526018602482015277105cdcd95c9d1a5bdb88191bd95cc81b9bdd08195e1a5cdd60421b60448201526064015b60405180910390fd5b6002810154600160e01b900460ff16156108f25760405162461bcd60e51b815260206004820152601960248201527f417373657274696f6e20616c726561647920736574746c656400000000000000604482015260640161088d565b60028101805460ff60e01b1916600160e01b17905560088101546001600160a01b0316610a1857610921610781565b6003820154600160a01b90046001600160401b0316111561097c5760405162461bcd60e51b8152602060048201526015602482015274105cdcd95c9d1a5bdb881b9bdd08195e1c1a5c9959605a1b604482015260640161088d565b60038101805460ff60e01b198116600160e01b17909155600282015460068301546109b4926001600160a01b03908116921690611d95565b6109bf826001611dfd565b6002810154604080516000815260016020820152338183015290516001600160a01b039092169184917ff4fa324b13daeb4e1aae736c2553632ae0fb16fb31f2d4da8ac99fd056313a13919081900360600190a3610bcb565b60058101546002820154600091610a4191859190600160a01b90046001600160401b0316611f04565b8254909150610100900460ff1615610a675760038201805460ff60e01b19169055610a89565b60038201805460ff60e01b1916670de0b6b3a76400008314600160e01b021790555b6000670de0b6b3a76400008214610aad5760088301546001600160a01b0316610abc565b60028301546001600160a01b03165b90506000670de0b6b3a76400008460060154600554610adb919061323b565b610ae59190613270565b905060008185600601546002610afb919061323b565b610b059190613292565b9050610b27610b12611f87565b60038701546001600160a01b03169084611d95565b6003850154610b40906001600160a01b03168483611d95565b8454610100900460ff16610b68576003850154610b68908790600160e01b900460ff16611dfd565b60038501546040805160018152600160e01b90920460ff161515602083015233908201526001600160a01b0384169087907ff4fa324b13daeb4e1aae736c2553632ae0fb16fb31f2d4da8ac99fd056313a139060600160405180910390a3505050505b50610bde6000805460ff19166001179055565b50565b6001600160a01b038116600090815260026020526040812060010154600554610c1282670de0b6b3a764000061323b565b6108109190613270565b6000610c26611d43565b610c356000805460ff19169055565b6000610c3f610781565b9050610c5a8b86836001600160401b03168a8a8e8e8b61201b565b91506001600160a01b038a16610ca75760405162461bcd60e51b8152602060048201526012602482015271041737365727465722063616e7420626520360741b604482015260640161088d565b6000828152600460205260409020600201546001600160a01b031615610d0f5760405162461bcd60e51b815260206004820152601860248201527f417373657274696f6e20616c7265616479206578697374730000000000000000604482015260640161088d565b610d1884612062565b610d5d5760405162461bcd60e51b81526020600482015260166024820152752ab739bab83837b93a32b21034b232b73a34b334b2b960511b604482015260640161088d565b610d668661211b565b610da95760405162461bcd60e51b8152602060048201526014602482015273556e737570706f727465642063757272656e637960601b604482015260640161088d565b610db286610be1565b851015610df75760405162461bcd60e51b8152602060048201526013602482015272426f6e6420616d6f756e7420746f6f206c6f7760681b604482015260640161088d565b6040805161022081018252600061018082018181526101a083018290526101c08301829052336101e08401526001600160a01b038c81166102008501529083528d811660208401526001600160401b038516938301939093526060820152908716608082015260a08101610e6b89846132a5565b6001600160401b031681526020016000151581526020018481526020018581526020018681526020018a6001600160a01b0316815260200160006001600160a01b03168152506004600084815260200190815260200160002060008201518160000160008201518160000160006101000a81548160ff02191690831515021790555060208201518160000160016101000a81548160ff02191690831515021790555060408201518160000160026101000a81548160ff02191690831515021790555060608201518160000160036101000a8154816001600160a01b0302191690836001600160a01b0316021790555060808201518160010160006101000a8154816001600160a01b0302191690836001600160a01b03160217905550505060208201518160020160006101000a8154816001600160a01b0302191690836001600160a01b0316021790555060408201518160020160146101000a8154816001600160401b0302191690836001600160401b03160217905550606082015181600201601c6101000a81548160ff02191690831515021790555060808201518160030160006101000a8154816001600160a01b0302191690836001600160a01b0316021790555060a08201518160030160146101000a8154816001600160401b0302191690836001600160401b0316021790555060c082015181600301601c6101000a81548160ff02191690831515021790555060e08201518160040155610100820151816005015561012082015181600601556101408201518160070160006101000a8154816001600160a01b0302191690836001600160a01b031602179055506101608201518160080160006101000a8154816001600160a01b0302191690836001600160a01b0316021790555090505060006111078361227d565b8051909150156111515760405162461bcd60e51b8152602060048201526015602482015274105cdcd95c9d1a5bdb881b9bdd08185b1b1bddd959605a1b604482015260640161088d565b6000838152600460209081526040918290209083015191830151606090930151815462ffff001916620100009115159190910261ff00191617610100931515939093029290921760ff19169015151790556111b76001600160a01b038716333088612352565b838a6001600160a01b0316837fdb1513f0abeb57a364db56aa3eb52015cca5268f00fd67bc73aaf22bccab02b7868f8e8e338f8a6111f591906132a5565b8f8f60405161120b9897969594939291906132c5565b60405180910390a4506112266000805460ff19166001179055565b9998505050505050505050565b6000546001600160a01b036101009091041633146112635760405162461bcd60e51b815260040161088d90613327565b61126d600061238a565b565b6000546001600160a01b0361010090910416331461129f5760405162461bcd60e51b815260040161088d90613327565b670de0b6b3a76400008111156112f75760405162461bcd60e51b815260206004820152601c60248201527f4275726e656420626f6e642070657263656e74616765203e2031303000000000604482015260640161088d565b600081116113475760405162461bcd60e51b815260206004820152601b60248201527f4275726e656420626f6e642070657263656e7461676520697320300000000000604482015260640161088d565b6005819055600680546001600160401b038416600160a01b026001600160e01b03199091166001600160a01b038616171790556113936b082a6a68aa4a8bea8a4aaa8960a31b846116c1565b604080516001600160a01b03851681526001600160401b03841660208201529081018290527fd0f09246d369018534c67fec6a6c3259c6f962ef82c5521c337ae0ccc104e4bd9060600160405180910390a1505050565b600081815260046020526040812060020154600160e01b900460ff166114135761141382610817565b61141c82611a97565b92915050565b61142a611d43565b6114396000805460ff19169055565b6001600160a01b0381166114855760405162461bcd60e51b8152602060048201526013602482015272044697370757465722063616e2774206265203606c1b604482015260640161088d565b600082815260046020526040902060028101546001600160a01b03166114e85760405162461bcd60e51b8152602060048201526018602482015277105cdcd95c9d1a5bdb88191bd95cc81b9bdd08195e1a5cdd60421b604482015260640161088d565b60088101546001600160a01b0316156115435760405162461bcd60e51b815260206004820152601a60248201527f417373657274696f6e20616c7265616479206469737075746564000000000000604482015260640161088d565b61154b610781565b6003820154600160a01b90046001600160401b0316116115a45760405162461bcd60e51b8152602060048201526014602482015273105cdcd95c9d1a5bdb881a5cc8195e1c1a5c995960621b604482015260640161088d565b6115ad836123e3565b6115ef5760405162461bcd60e51b8152602060048201526013602482015272111a5cdc1d5d19481b9bdd08185b1b1bddd959606a1b604482015260640161088d565b6008810180546001600160a01b0319166001600160a01b03848116919091179091556006820154600383015461162a92169033903090612352565b6005810154600282015461164f918591600160a01b90046001600160401b031661249f565b61165883612516565b8054610100900460ff161561167257611672836000611dfd565b6040516001600160a01b03831690339085907f60133788b013c89f2a3756dbc47e3484997b87bd7e0af98a7d70232032c1ce2b90600090a4506116bd6000805460ff19166001179055565b5050565b6040516302abf57960e61b8152654f7261636c6560d01b60048201527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03169063aafd5e4090602401602060405180830381865afa15801561172e573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611752919061335c565b600180546001600160a01b0319166001600160a01b039290921691909117905561177a6125d9565b6001600160a01b03166390978d1b836040518263ffffffff1660e01b81526004016117a791815260200190565b602060405180830381865afa1580156117c4573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906117e89190613389565b6000838152600360205260409020805460ff191691151591909117905561180d61263e565b604051631d1d5b3960e11b81526001600160a01b0383811660048301529190911690633a3ab67290602401602060405180830381865afa158015611855573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906118799190613389565b6001600160a01b0382166000908152600260205260409020805460ff19169115159190911790556118a8611f87565b604051635b97aadd60e01b81526001600160a01b0383811660048301529190911690635b97aadd90602401602060405180830381865afa1580156118f0573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061191491906133a4565b516001600160a01b0390911660009081526002602052604090206001015550565b6060816001600160401b0381111561194f5761194f612d6d565b60405190808252806020026020018201604052801561198257816020015b606081526020019060019003908161196d5790505b50905060005b82811015611a8557600080308686858181106119a6576119a66133e5565b90506020028101906119b891906133fb565b6040516119c6929190613448565b600060405180830381855af49150503d8060008114611a01576040519150601f19603f3d011682016040523d82523d6000602084013e611a06565b606091505b509150915081611a5257604481511015611a1f57600080fd5b60048101905080806020019051810190611a399190613458565b60405162461bcd60e51b815260040161088d9190613191565b80848481518110611a6557611a656133e5565b602002602001018190525050508080611a7d906134ce565b915050611988565b5092915050565b606061141c826126a3565b6000818152600460208181526040808420815161022081018352815460ff80821615156101808401908152610100808404831615156101a0860152620100008404831615156101c08601526001600160a01b03630100000090940484166101e0860152600186015484166102008601529084526002850154808416978501979097526001600160401b03600160a01b808904821697860197909752600160e01b97889004831615156060860152600386015480851660808701529687041660a085015295909404909316151560c08201529381015460e085015260058101549284019290925260068201546101208401526007820154811661014084015260089091015416610160820181905215801590611bb457508051602001515b15611bc25750600092915050565b8060600151611c0b5760405162461bcd60e51b8152602060048201526015602482015274105cdcd95c9d1a5bdb881b9bdd081cd95d1d1b1959605a1b604482015260640161088d565b60c0015192915050565b6000546001600160a01b03610100909104163314611c455760405162461bcd60e51b815260040161088d90613327565b6001600160a01b038116611caa5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b606482015260840161088d565b610bde8161238a565b6007546000906001600160a01b031615611d3e57600760009054906101000a90046001600160a01b03166001600160a01b03166329cb924d6040518163ffffffff1660e01b8152600401602060405180830381865afa158015611d1a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061078b91906134e7565b504290565b60005460ff1661126d5760405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c00604482015260640161088d565b6040516001600160a01b038316602482015260448101829052611df890849063a9059cbb60e01b906064015b60408051601f198184030181529190526020810180516001600160e01b03166001600160e01b031990931692909217909152612729565b505050565b600082815260046020526040902060078101546001909101546001600160a01b0391821691168115611e8c576040516378d8ab5960e11b81526004810185905283151560248201526001600160a01b0383169063f1b156b290604401600060405180830381600087803b158015611e7357600080fd5b505af1158015611e87573d6000803e3d6000fd5b505050505b6001600160a01b03811615611efe576040516378d8ab5960e11b81526004810185905283151560248201526001600160a01b0382169063f1b156b290604401600060405180830381600087803b158015611ee557600080fd5b505af1158015611ef9573d6000803e3d6000fd5b505050505b50505050565b6000611f0f846127fb565b6001600160a01b031663719c6d568484611f28886126a3565b6040518463ffffffff1660e01b8152600401611f4693929190613500565b602060405180830381865afa158015611f63573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061080d91906134e7565b6040516302abf57960e61b81526453746f726560d81b60048201526000907f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03169063aafd5e40906024015b602060405180830381865afa158015611ff7573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061078b919061335c565b600088888888888888883360405160200161203e9998979695949392919061351f565b60405160208183030381529060405280519060200120905098975050505050505050565b60008181526003602052604081205460ff161561208157506001919050565b6120896125d9565b6001600160a01b03166390978d1b836040518263ffffffff1660e01b81526004016120b691815260200190565b602060405180830381865afa1580156120d3573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906120f79190613389565b600092835260036020526040909220805460ff191692151592831790555060ff1690565b6001600160a01b03811660009081526002602052604081205460ff161561214457506001919050565b61214c61263e565b604051631d1d5b3960e11b81526001600160a01b0384811660048301529190911690633a3ab67290602401602060405180830381865afa158015612194573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906121b89190613389565b6001600160a01b0383166000908152600260205260409020805460ff19169115159190911790556121e7611f87565b604051635b97aadd60e01b81526001600160a01b0384811660048301529190911690635b97aadd90602401602060405180830381865afa15801561222f573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061225391906133a4565b516001600160a01b0390921660009081526002602052604090206001810192909255505460ff1690565b6040805160808101825260008082526020808301829052828401829052606083018290528482526004905291909120600101546001600160a01b0316806122e9575050604080516080810182526000808252602082018190529181018290526060810191909152919050565b60405163a6b011a760e01b8152600481018490526001600160a01b0382169063a6b011a790602401608060405180830381865afa15801561232e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108109190613587565b6040516001600160a01b0380851660248301528316604482015260648101829052611efe9085906323b872dd60e01b90608401611dc1565b600080546001600160a01b03838116610100818102610100600160a81b0319851617855560405193049190911692909183917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a35050565b60008181526004602052604081205462010000900460ff1661240757506001919050565b6000828152600460205260409020600101546001600160a01b0316806124305750600192915050565b604051636b915d9160e01b8152600481018490523360248201526001600160a01b03821690636b915d9190604401602060405180830381865afa15801561247b573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108109190613389565b6124a8836127fb565b6001600160a01b031663216666a483836124c1876126a3565b6040518463ffffffff1660e01b81526004016124df93929190613500565b600060405180830381600087803b1580156124f957600080fd5b505af115801561250d573d6000803e3d6000fd5b50505050505050565b600081815260046020526040902060078101546001909101546001600160a01b039182169116811561259d57604051633512293b60e21b8152600481018490526001600160a01b0383169063d448a4ec90602401600060405180830381600087803b15801561258457600080fd5b505af1158015612598573d6000803e3d6000fd5b505050505b6001600160a01b03811615611df857604051633512293b60e21b8152600481018490526001600160a01b0382169063d448a4ec906024016124df565b6040516302abf57960e61b8152721259195b9d1a599a595c95da1a5d195b1a5cdd606a1b60048201526000907f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03169063aafd5e4090602401611fda565b6040516302abf57960e61b81527210dbdb1b185d195c985b15da1a5d195b1a5cdd606a1b60048201526000907f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03169063aafd5e4090602401611fda565b606061141c6126e5604051806020016040528060008152506040518060400160405280600b81526020016a185cdcd95c9d1a5bdb925960aa1b81525085612843565b604080518082018252600a81526937b7a0b9b9b2b93a32b960b11b6020808301919091526000878152600490915291909120600201546001600160a01b0316612889565b600061277e826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b03166128a49092919063ffffffff16565b805190915015611df8578080602001905181019061279c9190613389565b611df85760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b606482015260840161088d565b60008181526004602052604081205460ff1615612832576000828152600460205260409020600101546001600160a01b031661141c565b50506001546001600160a01b031690565b6060600061285185856128b3565b9050848161285e856128f5565b60405160200161287093929190613603565b6040516020818303038152906040529150509392505050565b6060600061289785856128b3565b9050848161285e85612936565b606061080d848460008561298d565b8151606090156128e457816040516020016128ce9190613646565b604051602081830303815290604052905061141c565b816040516020016128ce919061367a565b6060612904608083901c612abe565b61290d83612abe565b6040805160208101939093528201526060015b6040516020818303038152906040529050919050565b606061294e6001600160801b03602084901c16612abe565b6129698360601b6bffffffffffffffffffffffff1916612abe565b6040516020016129209291909182526001600160c01b031916602082015260280190565b6060824710156129ee5760405162461bcd60e51b815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f6044820152651c8818d85b1b60d21b606482015260840161088d565b6001600160a01b0385163b612a455760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000604482015260640161088d565b600080866001600160a01b03168587604051612a61919061369f565b60006040518083038185875af1925050503d8060008114612a9e576040519150601f19603f3d011682016040523d82523d6000602084013e612aa3565b606091505b5091509150612ab3828286612c57565b979650505050505050565b6000808260001c9050806001600160801b03169050806801000000000000000002811777ffffffffffffffff0000000000000000ffffffffffffffff169050806401000000000281177bffffffff00000000ffffffff00000000ffffffff00000000ffffffff16905080620100000281177dffff0000ffff0000ffff0000ffff0000ffff0000ffff0000ffff0000ffff169050806101000281177eff00ff00ff00ff00ff00ff00ff00ff00ff00ff00ff00ff00ff00ff00ff00ff1690508060100281177f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f16905060006008827f08080808080808080808080808080808080808080808080808080808080808081681612bd957612bd961325a565b0460047f040404040404040404040404040404040404040404040404040404040404040484160460027f020202020202020202020202020202020202020202020202020202020202020285160417166027029091017f3030303030303030303030303030303030303030303030303030303030303030019392505050565b60608315612c66575081610810565b825115612c765782518084602001fd5b8160405162461bcd60e51b815260040161088d9190613191565b600060208284031215612ca257600080fd5b5035919050565b6001600160a01b0381168114610bde57600080fd5b8035612cc981612ca9565b919050565b600080600060408486031215612ce357600080fd5b83356001600160401b0380821115612cfa57600080fd5b818601915086601f830112612d0e57600080fd5b813581811115612d1d57600080fd5b876020828501011115612d2f57600080fd5b60209283019550935050840135612d4581612ca9565b809150509250925092565b600060208284031215612d6257600080fd5b813561081081612ca9565b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f191681016001600160401b0381118282101715612dab57612dab612d6d565b604052919050565b60006001600160401b03821115612dcc57612dcc612d6d565b50601f01601f191660200190565b80356001600160401b0381168114612cc957600080fd5b60008060008060008060008060006101208a8c031215612e1057600080fd5b89356001600160401b03811115612e2657600080fd5b8a01601f81018c13612e3757600080fd5b8035612e4a612e4582612db3565b612d83565b8181528d6020838501011115612e5f57600080fd5b81602084016020830137600060208383010152809b50505050612e8460208b01612cbe565b9750612e9260408b01612cbe565b9650612ea060608b01612cbe565b9550612eae60808b01612dda565b9450612ebc60a08b01612cbe565b935060c08a0135925060e08a013591506101008a013590509295985092959850929598565b600080600060608486031215612ef657600080fd5b8335612f0181612ca9565b9250612f0f60208501612dda565b9150604084013590509250925092565b8051151582526020808201511515908301526040808201511515908301526060808201516001600160a01b039081169184019190915260809182015116910152565b600061020082019050612f75828451612f1f565b60208301516001600160a01b0390811660a084015260408401516001600160401b031660c08401526060840151151560e084015260808401519081166101008085019190915260a08501519150610120612fd9818601846001600160401b03169052565b60c08601519250610140612ff08187018515159052565b60e08701516101608781019190915292870151610180870152908601516101a08601528501516001600160a01b039081166101c0860152908501519081166101e08501529050611a85565b6000806040838503121561304e57600080fd5b82359150602083013561306081612ca9565b809150509250929050565b6000806020838503121561307e57600080fd5b82356001600160401b038082111561309557600080fd5b818501915085601f8301126130a957600080fd5b8135818111156130b857600080fd5b8660208260051b85010111156130cd57600080fd5b60209290920196919550909350505050565b60005b838110156130fa5781810151838201526020016130e2565b50506000910152565b6000815180845261311b8160208601602086016130df565b601f01601f19169290920160200192915050565b6000602080830181845280855180835260408601915060408160051b870101925083870160005b8281101561318457603f19888603018452613172858351613103565b94509285019290850190600101613156565b5092979650505050505050565b6020815260006108106020830184613103565b61020081016131b3828f612f1f565b6001600160a01b039c8d1660a08301526001600160401b039b8c1660c083015299151560e0820152978b16610100890152959098166101208701529215156101408601526101608501919091526101808401526101a08301529284166101c0820152919092166101e090910152919050565b634e487b7160e01b600052601160045260246000fd5b600081600019048311821515161561325557613255613225565b500290565b634e487b7160e01b600052601260045260246000fd5b60008261328d57634e487b7160e01b600052601260045260246000fd5b500490565b8181038181111561141c5761141c613225565b6001600160401b03818116838216019080821115611a8557611a85613225565b60006101008a83528060208401526132df8184018b613103565b6001600160a01b03998a1660408501529789166060840152505093861660808501526001600160401b039290921660a084015290931660c082015260e0019190915292915050565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b60006020828403121561336e57600080fd5b815161081081612ca9565b80518015158114612cc957600080fd5b60006020828403121561339b57600080fd5b61081082613379565b6000602082840312156133b657600080fd5b604051602081018181106001600160401b03821117156133d8576133d8612d6d565b6040529151825250919050565b634e487b7160e01b600052603260045260246000fd5b6000808335601e1984360301811261341257600080fd5b8301803591506001600160401b0382111561342c57600080fd5b60200191503681900382131561344157600080fd5b9250929050565b8183823760009101908152919050565b60006020828403121561346a57600080fd5b81516001600160401b0381111561348057600080fd5b8201601f8101841361349157600080fd5b805161349f612e4582612db3565b8181528560208385010111156134b457600080fd5b6134c58260208301602086016130df565b95945050505050565b6000600182016134e0576134e0613225565b5060010190565b6000602082840312156134f957600080fd5b5051919050565b8381528260208201526060604082015260006134c56060830184613103565b60006101208083526135338184018d613103565b602084019b909b52505060408101979097526001600160401b039590951660608701526001600160a01b03938416608087015291831660a0860152821660c085015260e08401521661010090910152919050565b60006080828403121561359957600080fd5b604051608081018181106001600160401b03821117156135bb576135bb612d6d565b6040526135c783613379565b81526135d560208401613379565b60208201526135e660408401613379565b60408201526135f760608401613379565b60608201529392505050565b600084516136158184602089016130df565b8451908301906136298183602089016130df565b845191019061363c8183602088016130df565b0195945050505050565b600b60fa1b8152600082516136628160018501602087016130df565b601d60f91b6001939091019283015250600201919050565b6000825161368c8184602087016130df565b601d60f91b920191825250600101919050565b600082516136b18184602087016130df565b919091019291505056fea26469706673582212208308750472ceb2de8177ffaad79e9d6970ffe4f59d11183bf06a5727259eab7064736f6c63430008100033a26469706673582212207fdd7511568be4055da51babd1036239ffe3588af60945cd826026d56069d15b64736f6c6343000810003360a060405234801561001057600080fd5b5060405161087838038061087883398101604081905261002f91610040565b6001600160a01b0316608052610070565b60006020828403121561005257600080fd5b81516001600160a01b038116811461006957600080fd5b9392505050565b6080516107e861009060003960008181607b015260b701526107e86000f3fe608060405234801561001057600080fd5b506004361061002b5760003560e01c8063025ac24f14610030575b600080fd5b61004361003e36600461057b565b610055565b60405190815260200160405180910390f35b600061006c6001600160a01b03861633308761014c565b6100a06001600160a01b0386167f0000000000000000000000000000000000000000000000000000000000000000866101bd565b604051636457c97960e01b81526001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001690636457c979906100fc908c9033908d908d908d908d908d908d908d906004016106da565b6020604051808303816000875af115801561011b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061013f9190610748565b9998505050505050505050565b6040516001600160a01b03808516602483015283166044820152606481018290526101b79085906323b872dd60e01b906084015b60408051601f198184030181529190526020810180516001600160e01b03166001600160e01b0319909316929092179091526102dc565b50505050565b8015806102375750604051636eb1769f60e11b81523060048201526001600160a01b03838116602483015284169063dd62ed3e90604401602060405180830381865afa158015610211573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102359190610748565b155b6102a75760405162461bcd60e51b815260206004820152603660248201527f5361666545524332303a20617070726f76652066726f6d206e6f6e2d7a65726f60448201527520746f206e6f6e2d7a65726f20616c6c6f77616e636560501b60648201526084015b60405180910390fd5b6040516001600160a01b0383166024820152604481018290526102d790849063095ea7b360e01b90606401610180565b505050565b6000610331826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b03166103ae9092919063ffffffff16565b8051909150156102d7578080602001905181019061034f9190610761565b6102d75760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b606482015260840161029e565b60606103bd84846000856103c7565b90505b9392505050565b6060824710156104285760405162461bcd60e51b815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f6044820152651c8818d85b1b60d21b606482015260840161029e565b6001600160a01b0385163b61047f5760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000604482015260640161029e565b600080866001600160a01b0316858760405161049b9190610783565b60006040518083038185875af1925050503d80600081146104d8576040519150601f19603f3d011682016040523d82523d6000602084013e6104dd565b606091505b50915091506104ed8282866104f8565b979650505050505050565b606083156105075750816103c0565b8251156105175782518084602001fd5b8160405162461bcd60e51b815260040161029e919061079f565b634e487b7160e01b600052604160045260246000fd5b80356001600160a01b038116811461055e57600080fd5b919050565b803567ffffffffffffffff8116811461055e57600080fd5b600080600080600080600080610100898b03121561059857600080fd5b883567ffffffffffffffff808211156105b057600080fd5b818b0191508b601f8301126105c457600080fd5b8135818111156105d6576105d6610531565b604051601f8201601f19908116603f011681019083821181831017156105fe576105fe610531565b816040528281528e602084870101111561061757600080fd5b82602086016020830137600060208483010152809c50505050505061063e60208a01610547565b965061064c60408a01610547565b955061065a60608a01610563565b945061066860808a01610547565b979a969950949793969560a0850135955060c08501359460e001359350915050565b60005b838110156106a557818101518382015260200161068d565b50506000910152565b600081518084526106c681602086016020860161068a565b601f01601f19169290920160200192915050565b60006101208083526106ee8184018d6106ae565b6001600160a01b039b8c166020850152998b1660408401525050958816606087015267ffffffffffffffff9490941660808601529190951660a084015260c083019490945260e08201939093526101000191909152919050565b60006020828403121561075a57600080fd5b5051919050565b60006020828403121561077357600080fd5b815180151581146103c057600080fd5b6000825161079581846020870161068a565b9190910192915050565b6020815260006103c060208301846106ae56fea264697066735822122040fd4937917989d4e157fb0795bc9dc886b180a95780126fdd27487a425c565f64736f6c6343000810003341304facd9323d75b11bcdd609cb38effffdb05710f7caf0e9b16c6d9d709f500000000000000000000000007109709ecfa91a80626ff3989d68f67f5b1dd12d885cb69240a935d632d79c317109709ecfa91a80626ff3989d68f67f5b1dd12da26469706673582212200467b7bfce99c528335f54306942eb211b47df5368bec9afc31301e3054f113164736f6c63430008100033",
    "sourceMap": "192:6238:64:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;461:151;;;:::i;:::-;;2452:134:8;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3360:151;;;:::i;:::-;;;;;;;:::i;3221:133::-;;;:::i;2922:141::-;;;:::i;3803:2625:64:-;;;:::i;2738:178:8:-;;;:::i;:::-;;;;;;;:::i;2591:802:66:-;;;:::i;2592:140:8:-;;;:::i;:::-;;;;;;;:::i;618:1760:64:-;;;:::i;2384:1413::-;;;:::i;3069:146:8:-;;;:::i;256:32:64:-;;;;;-1:-1:-1;;;;;256:32:64;;;;;;-1:-1:-1;;;;;5795:32:73;;;5777:51;;5765:2;5750:18;256:32:64;5610:224:73;9047:462:66;;;;;;:::i;:::-;;:::i;2157:141:8:-;;;:::i;1819:584:2:-;;;:::i;:::-;;;6556:14:73;;6549:22;6531:41;;6519:2;6504:18;1819:584:2;6391:187:73;2304:142:8;;;:::i;7315:523:66:-;;;;;;:::i;:::-;;:::i;:::-;;;8403:25:73;;;8391:2;8376:18;7315:523:66;8257:177:73;1572:26:2;;;;;;;;;461:151:64;495:14;:12;:14::i;:::-;559:15;;585:18;;534:71;;-1:-1:-1;;;;;559:15:64;;;;585:18;;;;534:71;;;:::i;:::-;-1:-1:-1;;;;;8669:15:73;;;8651:34;;8721:15;;8716:2;8701:18;;8694:43;8601:2;8586:18;534:71:64;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;519:12:64;:86;;-1:-1:-1;;;;;;519:86:64;-1:-1:-1;;;;;519:86:64;;;;;;;;;;461:151::o;2452:134:8:-;2499:33;2563:16;2544:35;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2544:35:8;;;;;;;;;;;;;;;;;;;;;;;2452:134;:::o;3360:151::-;3409:42;3485:19;3463:41;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;3463:41:8;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3360:151;:::o;3221:133::-;3267:33;3331:16;3312:35;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;3312:35:8;;;;;;;;;;;;;;;;;;;;;;3221:133;:::o;2922:141::-;2970:35;3038:18;3017:39;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;3017:39:8;;;;;;;;;;;;;;;;;;;;;;2922:141;:::o;3803:2625:64:-;3892:35;;-1:-1:-1;;;3892:35:64;;186:3:68;3892:35:64;;;5777:51:73;-1:-1:-1;;;;;;;;;;;3892:13:64;;;5750:18:73;;3892:35:64;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;3937:15:64;;3986:18;;:59;;-1:-1:-1;;;3986:59:64;;-1:-1:-1;;;;;3937:15:64;;;3986:59;;;5777:51:73;;;3937:15:64;-1:-1:-1;3937:26:64;;-1:-1:-1;186:3:68;;3986:18:64;;;;:33;;5750:18:73;;3986:59:64;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;3937:109;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;4056:15:64;;4088:12;;4103:18;;:59;;-1:-1:-1;;;4103:59:64;;-1:-1:-1;;;;;4056:15:64;;;4103:59;;;5777:51:73;;;4056:15:64;-1:-1:-1;4056:23:64;;-1:-1:-1;4088:12:64;;;;4103:18;;:33;;5750:18:73;;4103:59:64;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;4056:107;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;4195:12:64;;4222:6;;4195:63;;-1:-1:-1;;;4195:63:64;;4173:19;;-1:-1:-1;;;;;4195:12:64;;:26;;:63;;4222:6;4230:13;;4245:12;;4195:63;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;4173:85;;-1:-1:-1;;;;;;;;;;;309:37:3;;-1:-1:-1;;;;;4268:12:64;;:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4402:31;4436:12;;;;;;;;;-1:-1:-1;;;;;4436:12:64;-1:-1:-1;;;;;4436:27:64;;:29;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:61;;-1:-1:-1;;;4436:61:64;;186:3:68;4436:61:64;;;5777:51:73;-1:-1:-1;;;;;4436:39:64;;;;;;;5750:18:73;;4436:61:64;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;4402:95;;4604:34;4641:53;4669:11;4682;;4641:27;:53::i;:::-;4732:10;;4604:90;;-1:-1:-1;4704:62:64;;-1:-1:-1;;;;;4732:10:64;4604:90;4732:10;4704:19;:62::i;:::-;4788:18;;:59;;-1:-1:-1;;;4788:59:64;;;;;8403:25:73;;;4776:72:64;;-1:-1:-1;;;;;4788:18:64;;:46;;8376:18:73;;4788:59:64;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;4776:11;:72::i;:::-;4939:12;;:29;;;-1:-1:-1;;;4939:29:64;;;;4917:130;;-1:-1:-1;;;;;4939:12:64;;:27;;:29;;;;;;;;;;;;;;:12;:29;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:61;;-1:-1:-1;;;4939:61:64;;186:3:68;4939:61:64;;;5777:51:73;-1:-1:-1;;;;;4939:39:64;;;;;;;5750:18:73;;4939:61:64;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;5014:23;4917:8;:130::i;:::-;5145:12;;:40;;-1:-1:-1;;;5145:40:64;;;;;8403:25:73;;;5123:16:64;;-1:-1:-1;;;;;5145:12:64;;:27;;8376:18:73;;5145:40:64;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;5145:40:64;;;;;;;;;;;;:::i;:::-;5116:69;;;;;;5195:30;5204:8;5222:1;5195:8;:30::i;:::-;5310:12;;:33;;-1:-1:-1;;;5310:33:64;;;;;8403:25:73;;;5237:18:64;;;;;;-1:-1:-1;;;;;5310:12:64;;:20;;8376:18:73;;5310:33:64;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;5310:33:64;;;;;;;;;;;;:::i;:::-;5236:107;;;;;;5353:26;5365:13;5353:11;:26::i;:::-;-1:-1:-1;;;;;;;;;;;5426:7:64;5434:19;:15;5452:1;5434:19;:::i;:::-;5426:28;;;;;;;;;;;;;8403:25:73;;8391:2;8376:18;;8257:177;5426:28:64;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;5536:35:64;;-1:-1:-1;;;5536:35:64;;186:3:68;5536:35:64;;;5777:51:73;-1:-1:-1;;;;;;;;;;;5536:13:64;-1:-1:-1;5536:13:64;;-1:-1:-1;5750:18:73;;5536:35:64;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;5581:15:64;;5630:18;;:59;;-1:-1:-1;;;5630:59:64;;-1:-1:-1;;;;;5581:15:64;;;5630:59;;;5777:51:73;;;5581:15:64;-1:-1:-1;5581:26:64;;-1:-1:-1;186:3:68;;5630:18:64;;;;:33;;5750:18:73;;5630:59:64;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;5581:109;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;5700:15:64;;5732:12;;5747:18;;:59;;-1:-1:-1;;;5747:59:64;;-1:-1:-1;;;;;5700:15:64;;;5747:59;;;5777:51:73;;;5700:15:64;-1:-1:-1;5700:23:64;;-1:-1:-1;5732:12:64;;;;5747:18;;:33;;5750:18:73;;5747:59:64;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;5700:107;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;5842:12:64;;5869:6;;5842:61;;-1:-1:-1;;;5842:61:64;;5817:22;;-1:-1:-1;;;;;5842:12:64;;:26;;:61;;5869:6;5877:11;;5890:12;;5842:61;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;5817:86;;-1:-1:-1;;;;;;;;;;;309:37:3;;-1:-1:-1;;;;;5913:12:64;;:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;6043:5:64;;6089:12;;:32;;;-1:-1:-1;;;6089:32:64;;;;-1:-1:-1;;;;;6043:5:64;;;;-1:-1:-1;6043:20:64;;-1:-1:-1;6089:12:64;;;;;:30;;:32;;;;;;;;;;;;;;:12;:32;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;6064:57:64;:5;;;;;;;;;-1:-1:-1;;;;;6064:5:64;-1:-1:-1;;;;;6064:20:64;;:22;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:57;;;;:::i;:::-;6043:79;;;;;;;;;;;;;8403:25:73;;8391:2;8376:18;;8257:177;6043:79:64;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;6166:18:64;;:50;;-1:-1:-1;;;6166:50:64;;;;;8403:25:73;;;-1:-1:-1;;;;;6166:18:64;;;;-1:-1:-1;6166:34:64;;-1:-1:-1;8376:18:73;;6166:50:64;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;6309:12:64;;:36;;-1:-1:-1;;;6309:36:64;;;;;8403:25:73;;;-1:-1:-1;;;;;6309:12:64;;;;-1:-1:-1;6309:20:64;;-1:-1:-1;8376:18:73;;6309:36:64;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;6309:36:64;;;;;;;;;;;;:::i;:::-;6268:77;;-1:-1:-1;6268:77:64;-1:-1:-1;6268:77:64;-1:-1:-1;6355:25:64;6268:77;6355:10;:25::i;:::-;6390:31;6399:8;6409:11;6390:31;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:8;:31::i;:::-;3858:2570;;;;;;;;3803:2625::o;2738:178:8:-;2794:48;2883:26;2854:55;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2854:55:8;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2854:55:8;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2591:802:66;2632:72;2719:31;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2719:37:66;;:39;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2789:30;;;;2768:18;:51;;-1:-1:-1;;;;;;2768:51:66;;;-1:-1:-1;;;;;2768:51:66;;;;;;;;;2847:27;;;;2829:15;:45;;;;;;;;;;;;;2897:22;;;;2884:10;:35;;;;;;;;;;;;;2937:17;;2929:5;:25;;;;;;;;;;;;;2973:18;;;2964:6;:27;;;;;;;;;;;;;3009:17;;;;;3001:5;:25;;;;;;;;;;;;;3054:43;;2789:30;;-1:-1:-1;2768:51:66;3054:43;;;:::i;:::-;-1:-1:-1;;;;;5795:32:73;;;5777:51;;5765:2;5750:18;3054:43:66;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;3036:15:66;:61;;-1:-1:-1;;;;;;3036:61:66;-1:-1:-1;;;;;3036:61:66;;;;;;3130:18;;:41;;;-1:-1:-1;;;3130:41:66;;;;:18;;;;;:39;;:41;;;;;;;;;;;;;;:18;:41;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;3107:20;:64;3195:18;;3237:15;;3195:59;;-1:-1:-1;;;3195:59:66;;-1:-1:-1;;;;;3237:15:66;;;3195:59;;;5777:51:73;3195:18:66;;;:33;;5750:18:73;;3195:59:66;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;3181:11;:73;3282:18;;:36;;;-1:-1:-1;;;3282:36:66;;;;-1:-1:-1;;;;;3282:18:66;;;;:34;;:36;;;;;;;;;;;;;;;:18;:36;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;3264:15;:54;;-1:-1:-1;;3264:54:66;-1:-1:-1;;;;;3264:54:66;;;;;;;;;;3348:18;;:38;;;-1:-1:-1;;;3348:38:66;;;;-1:-1:-1;;;;;3348:18:66;;;;:36;;:38;;;;;;;;;;;;;;;:18;:38;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;3328:17;:58;-1:-1:-1;2591:802:66:o;2592:140:8:-;2640:34;2707:18;2686:39;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;618:1760:64;698:35;;-1:-1:-1;;;698:35:64;;186:3:68;698:35:64;;;5777:51:73;-1:-1:-1;;;;;;;;;;;698:13:64;;;5750:18:73;;698:35:64;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;743:15:64;;792:18;;:59;;-1:-1:-1;;;792:59:64;;-1:-1:-1;;;;;743:15:64;;;792:59;;;5777:51:73;;;743:15:64;-1:-1:-1;743:26:64;;-1:-1:-1;186:3:68;;792:18:64;;;;:33;;5750:18:73;;792:59:64;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;743:109;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;862:15:64;;894:12;;909:18;;:59;;-1:-1:-1;;;909:59:64;;-1:-1:-1;;;;;862:15:64;;;909:59;;;5777:51:73;;;862:15:64;-1:-1:-1;862:23:64;;-1:-1:-1;894:12:64;;;;909:18;;:33;;5750:18:73;;909:59:64;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;862:107;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;1001:12:64;;1028:6;;1001:61;;-1:-1:-1;;;1001:61:64;;979:19;;-1:-1:-1;;;;;1001:12:64;;:26;;:61;;1028:6;1036:11;;1049:12;;1001:61;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;979:83;;-1:-1:-1;;;;;;;;;;;309:37:3;;-1:-1:-1;;;;;1072:12:64;;:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1206:31;1240:12;;;;;;;;;-1:-1:-1;;;;;1240:12:64;-1:-1:-1;;;;;1240:27:64;;:29;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:61;;-1:-1:-1;;;1240:61:64;;186:3:68;1240:61:64;;;5777:51:73;-1:-1:-1;;;;;1240:39:64;;;;;;;5750:18:73;;1240:61:64;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1311:30;;-1:-1:-1;;;1311:30:64;;186:3:68;1311:30:64;;;5777:51:73;1206:95:64;;-1:-1:-1;;;;;;;;;;;;1311:8:64;;;5750:18:73;;1311:30:64;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1351:44;1360:12;;;;;;;;;-1:-1:-1;;;;;1360:12:64;-1:-1:-1;;;;;1360:30:64;;:32;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1393:1;1351:8;:44::i;:::-;1558:12;;:33;;-1:-1:-1;;;1558:33:64;;;;;8403:25:73;;;1485:18:64;;;;;;-1:-1:-1;;;;;1558:12:64;;:20;;8376:18:73;;1558:33:64;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1558:33:64;;;;;;;;;;;;:::i;:::-;1484:107;;;;;;1601:26;1613:13;1601:11;:26::i;:::-;1705:5;;1751:12;;:32;;;-1:-1:-1;;;1751:32:64;;;;-1:-1:-1;;;;;1705:5:64;;;;:20;;1751:12;;:30;;:32;;;;;;;;;;;;;;:12;:32;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;1726:57:64;:5;;;;;;;;;-1:-1:-1;;;;;1726:5:64;-1:-1:-1;;;;;1726:20:64;;:22;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:57;;;;:::i;:::-;1705:79;;;;;;;;;;;;;8403:25:73;;8391:2;8376:18;;8257:177;1705:79:64;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1828:18:64;;:47;;-1:-1:-1;;;1828:47:64;;;;;8403:25:73;;;-1:-1:-1;;;;;1828:18:64;;;;-1:-1:-1;1828:34:64;;-1:-1:-1;8376:18:73;;1828:47:64;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1968:12:64;;:33;;-1:-1:-1;;;1968:33:64;;;;;8403:25:73;;;-1:-1:-1;;;;;1968:12:64;;;;-1:-1:-1;1968:20:64;;-1:-1:-1;8376:18:73;;1968:33:64;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1968:33:64;;;;;;;;;;;;:::i;:::-;1927:74;;-1:-1:-1;1927:74:64;-1:-1:-1;1927:74:64;-1:-1:-1;2011:25:64;1927:74;2011:10;:25::i;:::-;2046:31;2055:8;2065:11;2046:31;;;;;:::i;:::-;2164:12;;:29;;;-1:-1:-1;;;2164:29:64;;;;2142:134;;-1:-1:-1;;;;;2164:12:64;;:27;;:29;;;;;;;;;;;;;;:12;:29;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:61;;-1:-1:-1;;;2164:61:64;;186:3:68;2164:61:64;;;5777:51:73;-1:-1:-1;;;;;2164:39:64;;;;;;;5750:18:73;;2164:61:64;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2239:27;:23;2265:1;2239:27;:::i;:::-;2142:8;:134::i;:::-;2287:30;;-1:-1:-1;;;2287:30:64;;186:3:68;2287:30:64;;;5777:51:73;-1:-1:-1;;;;;;;;;;;2287:8:64;;;5750:18:73;;2287:30:64;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2327:44;2336:12;;;;;;;;;-1:-1:-1;;;;;2336:12:64;-1:-1:-1;;;;;2336:30:64;;:32;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2369:1;2327:8;:44::i;:::-;664:1714;;;;;618:1760::o;2384:1413::-;2471:35;;-1:-1:-1;;;2471:35:64;;186:3:68;2471:35:64;;;5777:51:73;-1:-1:-1;;;;;;;;;;;2471:13:64;;;5750:18:73;;2471:35:64;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;2516:15:64;;2565:18;;:59;;-1:-1:-1;;;2565:59:64;;-1:-1:-1;;;;;2516:15:64;;;2565:59;;;5777:51:73;;;2516:15:64;-1:-1:-1;2516:26:64;;-1:-1:-1;186:3:68;;2565:18:64;;;;:33;;5750:18:73;;2565:59:64;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2516:109;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;2635:15:64;;2667:12;;2682:18;;:59;;-1:-1:-1;;;2682:59:64;;-1:-1:-1;;;;;2635:15:64;;;2682:59;;;5777:51:73;;;2635:15:64;-1:-1:-1;2635:23:64;;-1:-1:-1;2667:12:64;;;;2682:18;;:33;;5750:18:73;;2682:59:64;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2635:107;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;2774:12:64;;2801:6;;2774:61;;-1:-1:-1;;;2774:61:64;;2752:19;;-1:-1:-1;;;;;2774:12:64;;:26;;:61;;2801:6;2809:11;;2822:12;;2774:61;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2752:83;;-1:-1:-1;;;;;;;;;;;309:37:3;;-1:-1:-1;;;;;2845:12:64;;:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2979:31;3013:12;;;;;;;;;-1:-1:-1;;;;;3013:12:64;-1:-1:-1;;;;;3013:27:64;;:29;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:61;;-1:-1:-1;;;3013:61:64;;186:3:68;3013:61:64;;;5777:51:73;-1:-1:-1;;;;;3013:39:64;;;;;;;5750:18:73;;3013:61:64;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2979:95;;3180:34;3217:53;3245:11;3258;;3217:27;:53::i;:::-;3308:10;;3180:90;;-1:-1:-1;3280:61:64;;-1:-1:-1;;;;;3308:10:64;3180:90;3308:10;3280:19;:61::i;:::-;3362:18;;:59;;-1:-1:-1;;;3362:59:64;;;;;8403:25:73;;;3351:71:64;;-1:-1:-1;;;;;3362:18:64;;:46;;8376:18:73;;3362:59:64;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;3351:10;:71::i;:::-;3482:12;;:33;;-1:-1:-1;;;3482:33:64;;;;;8403:25:73;;;3434:18:64;;;;-1:-1:-1;;;;;3482:12:64;;;;:20;;8376:18:73;;3482:33:64;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;3482:33:64;;;;;;;;;;;;:::i;:::-;3433:82;;;;;3525:25;3536:13;3525:10;:25::i;:::-;3560:31;3569:8;3579:11;3560:31;;;;;:::i;:::-;3678:12;;:29;;;-1:-1:-1;;;3678:29:64;;;;3656:134;;-1:-1:-1;;;;;3678:12:64;;:27;;:29;;;;;;;;;;;;;;:12;:29;;;;;;;;;;;;;;3069:146:8;3117:40;3190:18;3169:39;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;3169:39:8;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;3169:39:8;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;9047:462:66;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;9220:73:66;;-1:-1:-1;;;9220:73:66;9371:86;;;;;;8403:25:73;;;9371:86:66;;;;;;;;;;8376:18:73;;;;9371:86:66;;;;;;;-1:-1:-1;;;;;9371:86:66;-1:-1:-1;;;9371:86:66;;;9471:21;;-1:-1:-1;;;;;;;;;;;;;9303:11:66;;;1434:4;;9371:86;9471:21;;-1:-1:-1;;9471:21:66;;:::i;:::-;;;;;;;;;;;;;9303:199;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;9146:363;9047:462;;:::o;2157:141:8:-;2206:34;2273:18;2252:39;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1819:584:2;1873:7;;1853:4;;1873:7;;;;;1869:528;;;-1:-1:-1;1903:7:2;;;;;;;;1819:584::o;1869:528::-;1941:17;-1:-1:-1;;;;;;;;;;;2985:55:2;3066:16;1980:374;;2196:43;;2023:20;;-1:-1:-1;;;;;;;;;;;1671:64:2;2135:34;;2196:43;;1671:64;;-1:-1:-1;;;2221:17:2;2196:43;;;:::i;:::-;;;;-1:-1:-1;;2196:43:2;;;;;;;;;;2086:175;;;2196:43;2086:175;;:::i;:::-;;;;-1:-1:-1;;2086:175:2;;;;;;;;;;2047:232;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2020:259;;;2323:7;2312:27;;;;;;;;;;;;:::i;:::-;2297:42;;2002:352;1980:374;2374:12;1819:584;-1:-1:-1;1819:584:2:o;2304:142:8:-;2353:35;2421:18;2400:39;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2400:39:8;;;;;;;;;;;;;;;;;;;;;;2304:142;:::o;7315:523:66:-;7437:23;;-1:-1:-1;;;7437:23:66;;-1:-1:-1;;;;;5795:32:73;;7437:23:66;;;5777:51:73;7406:19:66;;-1:-1:-1;;;;;;;;;;;7437:13:66;;;5750:18:73;;7437:23:66;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;7470:15:66;;7507:18;;:59;;-1:-1:-1;;;7507:59:66;;-1:-1:-1;;;;;7470:15:66;;;7507:59;;;5777:51:73;;;7470:15:66;-1:-1:-1;7470:26:66;;-1:-1:-1;7497:8:66;;7507:18;;;;:33;;5750:18:73;;7507:59:66;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;7470:97;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;7577:15:66;;7622:18;;7655:59;;-1:-1:-1;;;7655:59:66;;-1:-1:-1;;;;;7577:15:66;;;7655:59;;;5777:51:73;;;7577:15:66;-1:-1:-1;7577:23:66;;-1:-1:-1;7622:18:66;;;;;7655:33;;5750:18:73;;7655:59:66;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;7577:147;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;7748:18:66;;:59;;-1:-1:-1;;;7748:59:66;;-1:-1:-1;;;;;7748:18:66;;;;:42;;:59;;7791:5;;7798:8;;7748:59;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;7734:73;;-1:-1:-1;;;;;;;;;;;309:37:3;;-1:-1:-1;;;;;7817:12:66;;:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7315:523;;;;:::o;6391:918::-;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;;;6621:18:66;;:44;;-1:-1:-1;;;6621:44:66;;;;;8403:25:73;;;6564:54:66;;-1:-1:-1;;;;;6621:18:66;;:31;;8376:18:73;;6621:44:66;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;6564:101;;6675:34;6724:223;;;;;;;;6768:18;;;;;;;;;-1:-1:-1;;;;;6768:18:66;-1:-1:-1;;;;;6768:36:66;;:38;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;6724:223;;6830:23;;;;;-1:-1:-1;;;;;6724:223:66;;;;;6886:18;;:46;;-1:-1:-1;;;6886:46:66;;;;;8403:25:73;;;6724:223:66;;;;;-1:-1:-1;;;;;6886:18:66;;:33;;8376:18:73;;6886:46:66;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;6886:46:66;;;;;;;;;;;;:::i;:::-;6724:223;;7001:35;;-1:-1:-1;;;7001:35:66;;239:3:68;7001:35:66;;;5777:51:73;6675:272:66;;-1:-1:-1;;;;;;;;;;;;7001:13:66;;;5750:18:73;;7001:35:66;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;7046:15:66;;:54;;-1:-1:-1;;;7046:54:66;;-1:-1:-1;;;;;7046:15:66;;;;-1:-1:-1;7046:26:66;;-1:-1:-1;7046:54:66;;239:3:68;;7095:4:66;;7046:54;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;7110:15:66;;7142:18;;7110:58;;-1:-1:-1;;;7110:58:66;;-1:-1:-1;;;;;7110:15:66;;;;-1:-1:-1;7110:23:66;;-1:-1:-1;7110:58:66;;7142:18;;;;7163:4;;7110:58;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;7178:18:66;;:70;;-1:-1:-1;;;7178:70:66;;;;;23392:25:73;;;239:3:68;23433:18:73;;;23426:60;-1:-1:-1;;;;;7178:18:66;;;;:35;;23365:18:73;;7178:70:66;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;309:37:3;;-1:-1:-1;;;;;7258:12:66;;:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;7289:13:66;;-1:-1:-1;;;;;6391:918:66;;;;;:::o;4656:591::-;5041:24;;5083:18;;;;5119:27;;;;;4946:214;;-1:-1:-1;;;;;;;;;;;4901:11:66;;;4926:6;;-1:-1:-1;;;4986:37:66;4946:214;;5041:24;5083:18;5119:27;4946:214;;;:::i;:::-;;;;-1:-1:-1;;4946:214:66;;;;;;;;;;;;;;-1:-1:-1;;;;;4946:214:66;-1:-1:-1;;;;;;4946:214:66;;;;;;;;;;5185:17;:44;;5227:1;5185:44;;;5212:4;5185:44;5174:56;;;;;;8403:25:73;;8391:2;8376:18;;8257:177;587:83:4;646:17;658:4;657:5;646:10;:17::i;:::-;587:83;:::o;5209:262:2:-;5271:1;5266;:6;5262:203;;-1:-1:-1;;;;;;;;;;;5293:41:2;;;;24244:2:73;24226:21;;;24283:2;24263:18;;;24256:30;24322:34;24317:2;24302:18;;24295:62;-1:-1:-1;;;24388:2:73;24373:18;;24366:32;24430:3;24415:19;;24042:398;5293:41:2;;;;;;;;5353:31;5382:1;5353:31;;;;;;:::i;:::-;;;;;;;;5403;5432:1;5403:31;;;;;;:::i;:::-;;;;;;;;5448:6;:4;:6::i;:::-;5209:262;;:::o;3622:277::-;3690:1;-1:-1:-1;;;;;3685:6:2;:1;-1:-1:-1;;;;;3685:6:2;;3681:212;;-1:-1:-1;;;;;;;;;;;3712:44:2;;;;25681:2:73;25663:21;;;25720:2;25700:18;;;25693:30;25759:34;25754:2;25739:18;;25732:62;-1:-1:-1;;;25825:2:73;25810:18;;25803:35;25870:3;25855:19;;25479:401;3712:44:2;;;;;;;;3775:34;3807:1;3775:34;;;;;;:::i;:::-;;;;;;;;3828;3860:1;3828:34;;;;;;:::i;3262:157::-;3322:9;3317:96;;-1:-1:-1;;;;;;;;;;;3352:30:2;;;;26845:2:73;26827:21;;;26884:2;26864:18;;;26857:30;26923:25;26918:2;26903:18;;26896:53;26981:2;26966:18;;26643:347;3352:30:2;;;;;;;;3396:6;:4;:6::i;17902:344::-;18038:1;18021:19;;;;;;;;:::i;:::-;;;;;;;;;;;;;18011:30;;;;;;18004:1;17987:19;;;;;;;;:::i;:::-;;;;;;;;;;;;;17977:30;;;;;;:64;17973:267;;-1:-1:-1;;;;;;;;;;;18062:43:2;;;;27491:2:73;27473:21;;;27530:2;27510:18;;;27503:30;27569:34;27564:2;27549:18;;27542:62;-1:-1:-1;;;27635:2:73;27620:18;;27613:34;27679:3;27664:19;;27289:400;18062:43:2;;;;;;;;18124:33;18155:1;18124:33;;;;;;:::i;:::-;;;;;;;;18176;18207:1;18176:33;;;;;;:::i;2409:432::-;-1:-1:-1;;;;;;;;;;;2985:55:2;3066:16;2452:359;;2652:67;;;-1:-1:-1;;;;;;;;;;;2652:67:2;;;28786:51:73;;;-1:-1:-1;;;28853:18:73;;;28846:34;;;;2712:4:2;28896:18:73;;;28889:34;2489:11:2;;1671:64;2586:43;;28759:18:73;;2652:67:2;;;-1:-1:-1;;2652:67:2;;;;;;;;;;2541:196;;;2652:67;2541:196;;:::i;:::-;;;;-1:-1:-1;;2541:196:2;;;;;;;;;;2506:245;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;2452:359:2;2820:7;:14;;-1:-1:-1;;2820:14:2;;;;;2409:432::o;-1:-1:-1:-;;;;;;;;:::o;:::-;;;;;;;;:::o;:::-;;;;;;;;:::o;289:658:73:-;460:2;512:21;;;582:13;;485:18;;;604:22;;;431:4;;460:2;683:15;;;;657:2;642:18;;;431:4;726:195;740:6;737:1;734:13;726:195;;;805:13;;-1:-1:-1;;;;;801:39:73;789:52;;896:15;;;;861:12;;;;837:1;755:9;726:195;;;-1:-1:-1;938:3:73;;289:658;-1:-1:-1;;;;;;289:658:73:o;952:250::-;1037:1;1047:113;1061:6;1058:1;1055:13;1047:113;;;1137:11;;;1131:18;1118:11;;;1111:39;1083:2;1076:10;1047:113;;;-1:-1:-1;;1194:1:73;1176:16;;1169:27;952:250::o;1207:271::-;1249:3;1287:5;1281:12;1314:6;1309:3;1302:19;1330:76;1399:6;1392:4;1387:3;1383:14;1376:4;1369:5;1365:16;1330:76;:::i;:::-;1460:2;1439:15;-1:-1:-1;;1435:29:73;1426:39;;;;1467:4;1422:50;;1207:271;-1:-1:-1;;1207:271:73:o;1483:1742::-;1716:2;1768:21;;;1838:13;;1741:18;;;1860:22;;;1687:4;;1716:2;1901;;1919:18;;;;1956:1;1999:15;;;1984:31;;1980:40;;2043:15;;;1687:4;;2107:1089;2123:6;2118:3;2115:15;2107:1089;;;-1:-1:-1;;2192:22:73;;;2188:36;2176:49;;2248:13;;2335:9;;-1:-1:-1;;;;;2331:35:73;2316:51;;2406:11;;2400:18;2438:15;;;2431:27;;;2519:19;;2288:15;;;2551:24;;;2732:21;;;;2598:2;2680:17;;;2668:30;;2664:39;;;2622:15;;;;2777:1;2791:296;2807:8;2802:3;2799:17;2791:296;;;2913:2;2909:7;2900:6;2892;2888:19;2884:33;2877:5;2870:48;2945:42;2980:6;2969:8;2963:15;2945:42;:::i;:::-;3016:17;;;;2935:52;-1:-1:-1;3059:14:73;;;;2835:1;2826:11;2791:296;;;-1:-1:-1;;;3174:12:73;;;;3110:6;-1:-1:-1;;3139:15:73;;;;2149:1;2140:11;2107:1089;;;-1:-1:-1;3213:6:73;;1483:1742;-1:-1:-1;;;;;;;;;;1483:1742:73:o;3230:1567::-;3432:4;3461:2;3501;3490:9;3486:18;3531:2;3520:9;3513:21;3554:6;3589;3583:13;3620:6;3612;3605:22;3646:2;3636:12;;3679:2;3668:9;3664:18;3657:25;;3741:2;3731:6;3728:1;3724:14;3713:9;3709:30;3705:39;3779:2;3771:6;3767:15;3800:1;3821;3831:937;3847:6;3842:3;3839:15;3831:937;;;3916:22;;;-1:-1:-1;;3912:36:73;3900:49;;3972:13;;4059:9;;-1:-1:-1;;;;;4055:35:73;4040:51;;4130:11;;4124:18;4162:15;;;4155:27;;;4243:19;;4012:15;;;4275:24;;;4365:21;;;;4410:1;;4333:2;4321:15;;;4424:236;4440:8;4435:3;4432:17;4424:236;;;4521:15;;-1:-1:-1;;;;;;4517:42:73;4503:57;;4629:17;;;;4468:1;4459:11;;;;;4586:14;;;;4424:236;;;-1:-1:-1;4746:12:73;;;;4683:5;-1:-1:-1;;;4711:15:73;;;;3873:1;3864:11;3831:937;;;-1:-1:-1;4785:6:73;;3230:1567;-1:-1:-1;;;;;;;;;3230:1567:73:o;4802:803::-;4964:4;4993:2;5033;5022:9;5018:18;5063:2;5052:9;5045:21;5086:6;5121;5115:13;5152:6;5144;5137:22;5190:2;5179:9;5175:18;5168:25;;5252:2;5242:6;5239:1;5235:14;5224:9;5220:30;5216:39;5202:53;;5290:2;5282:6;5278:15;5311:1;5321:255;5335:6;5332:1;5329:13;5321:255;;;5428:2;5424:7;5412:9;5404:6;5400:22;5396:36;5391:3;5384:49;5456:40;5489:6;5480;5474:13;5456:40;:::i;:::-;5446:50;-1:-1:-1;5554:12:73;;;;5519:15;;;;5357:1;5350:9;5321:255;;5839:131;-1:-1:-1;;;;;5914:31:73;;5904:42;;5894:70;;5960:1;5957;5950:12;5975:315;6043:6;6051;6104:2;6092:9;6083:7;6079:23;6075:32;6072:52;;;6120:1;6117;6110:12;6072:52;6159:9;6146:23;6178:31;6203:5;6178:31;:::i;:::-;6228:5;6280:2;6265:18;;;;6252:32;;-1:-1:-1;;;5975:315:73:o;6583:127::-;6644:10;6639:3;6635:20;6632:1;6625:31;6675:4;6672:1;6665:15;6699:4;6696:1;6689:15;6715:255;6787:2;6781:9;6829:6;6817:19;;-1:-1:-1;;;;;6851:34:73;;6887:22;;;6848:62;6845:88;;;6913:18;;:::i;:::-;6949:2;6942:22;6715:255;:::o;6975:275::-;7046:2;7040:9;7111:2;7092:13;;-1:-1:-1;;7088:27:73;7076:40;;-1:-1:-1;;;;;7131:34:73;;7167:22;;;7128:62;7125:88;;;7193:18;;:::i;:::-;7229:2;7222:22;6975:275;;-1:-1:-1;6975:275:73:o;7255:186::-;7303:4;-1:-1:-1;;;;;7328:6:73;7325:30;7322:56;;;7358:18;;:::i;:::-;-1:-1:-1;7424:2:73;7403:15;-1:-1:-1;;7399:29:73;7430:4;7395:40;;7255:186::o;7446:806::-;7523:6;7531;7584:2;7572:9;7563:7;7559:23;7555:32;7552:52;;;7600:1;7597;7590:12;7552:52;7639:9;7626:23;7658:31;7683:5;7658:31;:::i;:::-;7708:5;-1:-1:-1;7764:2:73;7749:18;;7736:32;-1:-1:-1;;;;;7780:30:73;;7777:50;;;7823:1;7820;7813:12;7777:50;7846:22;;7899:4;7891:13;;7887:27;-1:-1:-1;7877:55:73;;7928:1;7925;7918:12;7877:55;7964:2;7951:16;7989:48;8005:31;8033:2;8005:31;:::i;:::-;7989:48;:::i;:::-;8060:2;8053:5;8046:17;8100:7;8095:2;8090;8086;8082:11;8078:20;8075:33;8072:53;;;8121:1;8118;8111:12;8072:53;8176:2;8171;8167;8163:11;8158:2;8151:5;8147:14;8134:45;8220:1;8215:2;8210;8203:5;8199:14;8195:23;8188:34;8241:5;8231:15;;;;;7446:806;;;;;:::o;8748:380::-;8827:1;8823:12;;;;8870;;;8891:61;;8945:4;8937:6;8933:17;8923:27;;8891:61;8998:2;8990:6;8987:14;8967:18;8964:38;8961:161;;9044:10;9039:3;9035:20;9032:1;9025:31;9079:4;9076:1;9069:15;9107:4;9104:1;9097:15;8961:161;;8748:380;;;:::o;9341:184::-;9411:6;9464:2;9452:9;9443:7;9439:23;9435:32;9432:52;;;9480:1;9477;9470:12;9432:52;-1:-1:-1;9503:16:73;;9341:184;-1:-1:-1;9341:184:73:o;9530:274::-;-1:-1:-1;;;;;9722:32:73;;;;9704:51;;9786:2;9771:18;;9764:34;9692:2;9677:18;;9530:274::o;9809:164::-;9885:13;;9934;;9927:21;9917:32;;9907:60;;9963:1;9960;9953:12;9978:202;10045:6;10098:2;10086:9;10077:7;10073:23;10069:32;10066:52;;;10114:1;10111;10104:12;10066:52;10137:37;10164:9;10137:37;:::i;:::-;10127:47;9978:202;-1:-1:-1;;;9978:202:73:o;10311:1081::-;10396:12;;10361:3;;10451:1;10471:18;;;;10524;;;;10551:61;;10605:4;10597:6;10593:17;10583:27;;10551:61;10631:2;10679;10671:6;10668:14;10648:18;10645:38;10642:161;;10725:10;10720:3;10716:20;10713:1;10706:31;10760:4;10757:1;10750:15;10788:4;10785:1;10778:15;10642:161;112:19;;;164:4;155:14;;10900:18;10927:132;;;;11073:1;11068:318;;;;10893:493;;10927:132;-1:-1:-1;;10962:24:73;;10948:39;;11032:14;;11025:22;11022:1;11018:30;11007:42;;;-1:-1:-1;10927:132:73;;11068:318;10258:1;10251:14;;;10295:4;10282:18;;11162:1;11176:167;11190:6;11187:1;11184:13;11176:167;;;11270:14;;11255:13;;;11248:37;11313:16;;;;11205:10;;11176:167;;;11363:13;;;-1:-1:-1;;10893:493:73;;;;;;;;10311:1081;;;;:::o;11397:464::-;11616:6;11605:9;11598:25;11659:2;11654;11643:9;11639:18;11632:30;11579:4;11685:53;11734:2;11723:9;11719:18;11711:6;11685:53;:::i;:::-;11786:9;11778:6;11774:22;11769:2;11758:9;11754:18;11747:50;11814:41;11848:6;11840;11814:41;:::i;:::-;11806:49;11397:464;-1:-1:-1;;;;;;11397:464:73:o;12055:274::-;12148:6;12201:2;12189:9;12180:7;12176:23;12172:32;12169:52;;;12217:1;12214;12207:12;12169:52;12249:9;12243:16;12268:31;12293:5;12268:31;:::i;12334:321::-;12410:5;12439:52;12455:35;12483:6;12455:35;:::i;12439:52::-;12430:61;;12514:6;12507:5;12500:21;12554:3;12545:6;12540:3;12536:16;12533:25;12530:45;;;12571:1;12568;12561:12;12530:45;12584:65;12642:6;12635:4;12628:5;12624:16;12619:3;12584:65;:::i;12660:237::-;12714:5;12767:3;12760:4;12752:6;12748:17;12744:27;12734:55;;12785:1;12782;12775:12;12734:55;12807:84;12887:3;12878:6;12872:13;12865:4;12857:6;12853:17;12807:84;:::i;12902:138::-;12981:13;;13003:31;12981:13;13003:31;:::i;13045:832::-;13168:6;13176;13184;13192;13200;13253:3;13241:9;13232:7;13228:23;13224:33;13221:53;;;13270:1;13267;13260:12;13221:53;13299:9;13293:16;13283:26;;13353:2;13342:9;13338:18;13332:25;-1:-1:-1;;;;;13417:2:73;13409:6;13406:14;13403:34;;;13433:1;13430;13423:12;13403:34;13456:61;13509:7;13500:6;13489:9;13485:22;13456:61;:::i;:::-;13446:71;;13563:2;13552:9;13548:18;13542:25;13526:41;;13592:2;13582:8;13579:16;13576:36;;;13608:1;13605;13598:12;13576:36;;13631:63;13686:7;13675:8;13664:9;13660:24;13631:63;:::i;:::-;13621:73;;;13737:2;13726:9;13722:18;13716:25;13750:31;13775:5;13750:31;:::i;:::-;13800:5;-1:-1:-1;13824:47:73;13866:3;13851:19;;13824:47;:::i;:::-;13814:57;;13045:832;;;;;;;;:::o;13882:641::-;13987:6;13995;14003;14056:2;14044:9;14035:7;14031:23;14027:32;14024:52;;;14072:1;14069;14062:12;14024:52;14095:37;14122:9;14095:37;:::i;:::-;14085:47;;14176:2;14165:9;14161:18;14155:25;-1:-1:-1;;;;;14240:2:73;14232:6;14229:14;14226:34;;;14256:1;14253;14246:12;14226:34;14279:61;14332:7;14323:6;14312:9;14308:22;14279:61;:::i;:::-;14269:71;;14386:2;14375:9;14371:18;14365:25;14349:41;;14415:2;14405:8;14402:16;14399:36;;;14431:1;14428;14421:12;14399:36;;14454:63;14509:7;14498:8;14487:9;14483:24;14454:63;:::i;:::-;14444:73;;;13882:641;;;;;:::o;14528:222::-;14593:9;;;14614:10;;;14611:133;;;14666:10;14661:3;14657:20;14654:1;14647:31;14701:4;14698:1;14691:15;14729:4;14726:1;14719:15;14937:175;15015:13;;-1:-1:-1;;;;;15057:30:73;;15047:41;;15037:69;;15102:1;15099;15092:12;15117:206;15186:6;15239:2;15227:9;15218:7;15214:23;15210:32;15207:52;;;15255:1;15252;15245:12;15207:52;15278:39;15307:9;15278:39;:::i;15328:1141::-;15444:6;15475:3;15519:2;15507:9;15498:7;15494:23;15490:32;15487:52;;;15535:1;15532;15525:12;15487:52;15568:2;15562:9;15598:15;;;;-1:-1:-1;;;;;15628:34:73;;15664:22;;;15625:62;15622:88;;;15690:18;;:::i;:::-;15730:10;15726:2;15719:22;15769:9;15763:16;15750:29;;15788:31;15813:5;15788:31;:::i;:::-;15843:5;15835:6;15828:21;15882:49;15927:2;15916:9;15912:18;15882:49;:::i;:::-;15877:2;15869:6;15865:15;15858:74;15965:49;16010:2;15999:9;15995:18;15965:49;:::i;:::-;15960:2;15952:6;15948:15;15941:74;16048:49;16093:2;16082:9;16078:18;16048:49;:::i;:::-;16043:2;16035:6;16031:15;16024:74;16132:50;16177:3;16166:9;16162:19;16132:50;:::i;:::-;16126:3;16118:6;16114:16;16107:76;16217:50;16262:3;16251:9;16247:19;16217:50;:::i;:::-;16211:3;16203:6;16199:16;16192:76;16302:50;16347:3;16336:9;16332:19;16302:50;:::i;:::-;16296:3;16288:6;16284:16;16277:76;16387:50;16432:3;16421:9;16417:19;16387:50;:::i;:::-;16381:3;16369:16;;16362:76;16373:6;15328:1141;-1:-1:-1;;;;15328:1141:73:o;17301:1528::-;17548:13;;16815:12;;16808:20;16801:28;16789:41;;16893:4;16882:16;;;16876:23;16869:31;16862:39;16846:14;;;16839:63;16965:4;16954:16;;;16948:23;16941:31;16934:39;16918:14;;;16911:63;17020:4;17009:16;;;17003:23;-1:-1:-1;;;;;17096:21:73;;;17080:14;;;17073:45;17171:4;17160:16;;;17154:23;17150:32;;17134:14;;;17127:56;17608:17;;;17602:24;246:31;;17683:4;17668:20;;234:44;17726:17;;;17720:24;-1:-1:-1;;;;;17259:30:73;17802:4;17787:20;;17247:43;17845:17;;17839:24;6365:13;6358:21;17919:4;17904:20;;6346:34;17962:17;;;17956:24;246:31;;;17999:6;18049:18;;;234:44;;;;17491:3;17476:19;;;17956:24;18117:4;18109:6;18105:17;18099:24;18077:46;;18142:6;18157:53;18206:2;18195:9;18191:18;18175:14;-1:-1:-1;;;;;17259:30:73;17247:43;;17194:102;18157:53;18259:4;18251:6;18247:17;18241:24;18219:46;;18284:6;18299:51;18346:2;18335:9;18331:18;18315:14;6365:13;6358:21;6346:34;;6295:91;18299:51;18387:4;18375:17;;18369:24;18412:6;18434:18;;;18427:30;;;;18503:15;;;18497:22;18488:6;18473:22;;18466:54;18566:15;;;18560:22;18551:6;18536:22;;18529:54;18620:15;;18614:22;-1:-1:-1;;;;;246:31:73;;;18695:6;18680:22;;234:44;18740:15;;18734:22;246:31;;;18815:6;18800:22;;;234:44;;;;17301:1528;;-1:-1:-1;17301:1528:73:o;18834:476::-;-1:-1:-1;;;;;19055:32:73;;19037:51;;19124:2;19119;19104:18;;19097:30;;;-1:-1:-1;;19150:45:73;;19176:18;;19168:6;19150:45;:::i;:::-;19243:9;19235:6;19231:22;19226:2;19215:9;19211:18;19204:50;19271:33;19297:6;19289;19271:33;:::i;19594:384::-;-1:-1:-1;;;;;;19779:33:73;;19767:46;;19836:13;;19749:3;;19858:74;19836:13;19921:1;19912:11;;19905:4;19893:17;;19858:74;:::i;:::-;19952:16;;;;19970:1;19948:24;;19594:384;-1:-1:-1;;;19594:384:73:o;19983:287::-;20112:3;20150:6;20144:13;20166:66;20225:6;20220:3;20213:4;20205:6;20201:17;20166:66;:::i;:::-;20248:16;;;;;19983:287;-1:-1:-1;;19983:287:73:o;20275:315::-;20450:2;20439:9;20432:21;20413:4;20470:45;20511:2;20500:9;20496:18;20488:6;20470:45;:::i;:::-;20462:53;;20580:1;20576;20571:3;20567:11;20563:19;20555:6;20551:32;20546:2;20535:9;20531:18;20524:60;20275:315;;;;;:::o;20595:875::-;20678:5;20726:4;20714:9;20709:3;20705:19;20701:30;20698:50;;;20744:1;20741;20734:12;20698:50;20777:2;20771:9;20819:4;20811:6;20807:17;20890:6;20878:10;20875:22;-1:-1:-1;;;;;20842:10:73;20839:34;20836:62;20833:88;;;20901:18;;:::i;:::-;20937:2;20930:22;20970:6;-1:-1:-1;20970:6:73;21000:37;21027:9;21000:37;:::i;:::-;20992:6;20985:53;21071:46;21113:2;21102:9;21098:18;21071:46;:::i;:::-;21066:2;21058:6;21054:15;21047:71;21151:46;21193:2;21182:9;21178:18;21151:46;:::i;:::-;21146:2;21138:6;21134:15;21127:71;21243:2;21232:9;21228:18;21222:25;21256:33;21281:7;21256:33;:::i;:::-;21317:2;21305:15;;21298:32;21375:3;21360:19;;21354:26;21389:33;21354:26;21389:33;:::i;:::-;21450:3;21438:16;;;;21431:33;20595:875;;-1:-1:-1;;20595:875:73:o;21475:1275::-;21573:6;21626:3;21614:9;21605:7;21601:23;21597:33;21594:53;;;21643:1;21640;21633:12;21594:53;21669:22;;:::i;:::-;21714:74;21780:7;21769:9;21714:74;:::i;:::-;21707:5;21700:89;21823:50;21868:3;21857:9;21853:19;21823:50;:::i;:::-;21816:4;21809:5;21805:16;21798:76;21908:49;21952:3;21941:9;21937:19;21908:49;:::i;:::-;21901:4;21894:5;21890:16;21883:75;21992:47;22034:3;22023:9;22019:19;21992:47;:::i;:::-;21985:4;21978:5;21974:16;21967:73;22059:3;22096:49;22141:2;22130:9;22126:18;22096:49;:::i;:::-;22089:4;22082:5;22078:16;22071:75;22165:3;22201:48;22245:2;22234:9;22230:18;22201:48;:::i;:::-;22195:3;22188:5;22184:15;22177:73;22269:3;22305:46;22347:2;22336:9;22332:18;22305:46;:::i;:::-;22299:3;22292:5;22288:15;22281:71;22371:3;22428:2;22417:9;22413:18;22407:25;22401:3;22394:5;22390:15;22383:50;22486:6;22475:9;22471:22;22465:29;22460:2;22453:5;22449:14;22442:53;22548:3;22537:9;22533:19;22527:26;22522:2;22515:5;22511:14;22504:50;22586;22631:3;22620:9;22616:19;22586:50;:::i;:::-;22581:2;22574:5;22570:14;22563:74;22669:50;22714:3;22703:9;22699:19;22669:50;:::i;:::-;22653:14;;;22646:74;-1:-1:-1;22657:5:73;;21475:1275;-1:-1:-1;;;;;21475:1275:73:o;22755:458::-;22834:6;22887:2;22875:9;22866:7;22862:23;22858:32;22855:52;;;22903:1;22900;22893:12;22855:52;22936:9;22930:16;-1:-1:-1;;;;;22961:6:73;22958:30;22955:50;;;23001:1;22998;22991:12;22955:50;23024:22;;23077:4;23069:13;;23065:27;-1:-1:-1;23055:55:73;;23106:1;23103;23096:12;23055:55;23129:78;23199:7;23194:2;23188:9;23183:2;23179;23175:11;23129:78;:::i;:::-;23119:88;22755:458;-1:-1:-1;;;;22755:458:73:o;23497:360::-;23700:6;23689:9;23682:25;23743:6;23738:2;23727:9;23723:18;23716:34;23786:2;23781;23770:9;23766:18;23759:30;23663:4;23806:45;23847:2;23836:9;23832:18;23824:6;23806:45;:::i;:::-;23798:53;23497:360;-1:-1:-1;;;;;23497:360:73:o;24609:348::-;24839:2;24828:9;24821:21;24802:4;24859:49;24904:2;24893:9;24889:18;24522:2;24510:15;;-1:-1:-1;;;24550:4:73;24541:14;;24534:36;24595:2;24586:12;;24445:159;24859:49;24851:57;;24944:6;24939:2;24928:9;24924:18;24917:34;24609:348;;;;:::o;25126:::-;25356:2;25345:9;25338:21;25319:4;25376:49;25421:2;25410:9;25406:18;25039:2;25027:15;;-1:-1:-1;;;25067:4:73;25058:14;;25051:36;25112:2;25103:12;;24962:159;25885:374;26115:2;26104:9;26097:21;26078:4;26135:49;26180:2;26169:9;26165:18;24522:2;24510:15;;-1:-1:-1;;;24550:4:73;24541:14;;24534:36;24595:2;24586:12;;24445:159;26135:49;-1:-1:-1;;;;;26220:32:73;;;;26215:2;26200:18;;;;26193:60;;;;-1:-1:-1;26127:57:73;25885:374::o;26264:::-;26494:2;26483:9;26476:21;26457:4;26514:49;26559:2;26548:9;26544:18;25039:2;25027:15;;-1:-1:-1;;;25067:4:73;25058:14;;25051:36;25112:2;25103:12;;24962:159;27694:440;27944:2;27933:9;27926:21;27907:4;27970:49;28015:2;28004:9;28000:18;24522:2;24510:15;;-1:-1:-1;;;24550:4:73;24541:14;;24534:36;24595:2;24586:12;;24445:159;27970:49;28067:9;28059:6;28055:22;28050:2;28039:9;28035:18;28028:50;28095:33;28121:6;28113;28095:33;:::i;28139:440::-;28389:2;28378:9;28371:21;28352:4;28415:49;28460:2;28449:9;28445:18;25039:2;25027:15;;-1:-1:-1;;;25067:4:73;25058:14;;25051:36;25112:2;25103:12;;24962:159",
    "linkReferences": {}
  },
  "methodIdentifiers": {
    "IS_TEST()": "fa7626d4",
    "_allocateBondAndAssertTruth(address,bytes)": "f4096671",
    "_commonSetup()": "6906f5f5",
    "_mockGetAssertionAssertingCaller(address,bytes32)": "ab30d35a",
    "dataAsserter()": "9ffe3323",
    "excludeArtifacts()": "b5508aa9",
    "excludeContracts()": "e20c9f71",
    "excludeSenders()": "1ed7831c",
    "failed()": "ba414fa6",
    "setUp()": "0a9254e4",
    "targetArtifactSelectors()": "66d9a9a0",
    "targetArtifacts()": "85226c81",
    "targetContracts()": "3f7286f4",
    "targetInterfaces()": "2ade3880",
    "targetSelectors()": "916a17c6",
    "targetSenders()": "3e5e3c23",
    "test_DataAssertionNoDispute()": "854e5aa1",
    "test_DataAssertionWithCorrectDispute()": "52bb1e46",
    "test_DataAssertionWithWrongDispute()": "858897ab"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.16+commit.07a7930e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"assertingCaller\",\"type\":\"address\"}],\"name\":\"AssertingCallerSet\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"assertionId\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"caller\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"disputer\",\"type\":\"address\"}],\"name\":\"AssertionDisputed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"assertionId\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"domainId\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"claim\",\"type\":\"bytes\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"asserter\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"callbackRecipient\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"escalationManager\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"caller\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"expirationTime\",\"type\":\"uint64\"},{\"indexed\":false,\"internalType\":\"contract IERC20\",\"name\":\"currency\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"bond\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"identifier\",\"type\":\"bytes32\"}],\"name\":\"AssertionMade\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"assertionId\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"bondRecipient\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"disputed\",\"type\":\"bool\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"settlementResolution\",\"type\":\"bool\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"settleCaller\",\"type\":\"address\"}],\"name\":\"AssertionSettled\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"requester\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"identifier\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"time\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"ancillaryData\",\"type\":\"bytes\"}],\"name\":\"PriceRequestAdded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"name\":\"log\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"log_address\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"val\",\"type\":\"uint256[]\"}],\"name\":\"log_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"int256[]\",\"name\":\"val\",\"type\":\"int256[]\"}],\"name\":\"log_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address[]\",\"name\":\"val\",\"type\":\"address[]\"}],\"name\":\"log_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"log_bytes\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"name\":\"log_bytes32\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"\",\"type\":\"int256\"}],\"name\":\"log_int\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"val\",\"type\":\"address\"}],\"name\":\"log_named_address\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"val\",\"type\":\"uint256[]\"}],\"name\":\"log_named_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"int256[]\",\"name\":\"val\",\"type\":\"int256[]\"}],\"name\":\"log_named_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"address[]\",\"name\":\"val\",\"type\":\"address[]\"}],\"name\":\"log_named_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"val\",\"type\":\"bytes\"}],\"name\":\"log_named_bytes\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"val\",\"type\":\"bytes32\"}],\"name\":\"log_named_bytes32\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"val\",\"type\":\"int256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"}],\"name\":\"log_named_decimal_int\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"val\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"}],\"name\":\"log_named_decimal_uint\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"val\",\"type\":\"int256\"}],\"name\":\"log_named_int\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"val\",\"type\":\"string\"}],\"name\":\"log_named_string\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"val\",\"type\":\"uint256\"}],\"name\":\"log_named_uint\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"name\":\"log_string\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"log_uint\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"logs\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"IS_TEST\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"asserter\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"claim\",\"type\":\"bytes\"}],\"name\":\"_allocateBondAndAssertTruth\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"assertionId\",\"type\":\"bytes32\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"_commonSetup\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"mockAssertingCaller\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"assertionId\",\"type\":\"bytes32\"}],\"name\":\"_mockGetAssertionAssertingCaller\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"dataAsserter\",\"outputs\":[{\"internalType\":\"contract DataAsserter\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"excludeArtifacts\",\"outputs\":[{\"internalType\":\"string[]\",\"name\":\"excludedArtifacts_\",\"type\":\"string[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"excludeContracts\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"excludedContracts_\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"excludeSenders\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"excludedSenders_\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"failed\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"setUp\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"targetArtifactSelectors\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"},{\"internalType\":\"bytes4[]\",\"name\":\"selectors\",\"type\":\"bytes4[]\"}],\"internalType\":\"struct StdInvariant.FuzzSelector[]\",\"name\":\"targetedArtifactSelectors_\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"targetArtifacts\",\"outputs\":[{\"internalType\":\"string[]\",\"name\":\"targetedArtifacts_\",\"type\":\"string[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"targetContracts\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"targetedContracts_\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"targetInterfaces\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"},{\"internalType\":\"string[]\",\"name\":\"artifacts\",\"type\":\"string[]\"}],\"internalType\":\"struct StdInvariant.FuzzInterface[]\",\"name\":\"targetedInterfaces_\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"targetSelectors\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"},{\"internalType\":\"bytes4[]\",\"name\":\"selectors\",\"type\":\"bytes4[]\"}],\"internalType\":\"struct StdInvariant.FuzzSelector[]\",\"name\":\"targetedSelectors_\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"targetSenders\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"targetedSenders_\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"test_DataAssertionNoDispute\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"test_DataAssertionWithCorrectDispute\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"test_DataAssertionWithWrongDispute\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"test/DataAsserter.t.sol\":\"DataAsserterTest\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@across-protocol/=node_modules/@across-protocol/\",\":@ensdomains/=node_modules/@ensdomains/\",\":@eth-optimism/=node_modules/@across-protocol/contracts/node_modules/@eth-optimism/\",\":@gnosis.pm/=node_modules/@gnosis.pm/\",\":@maticnetwork/=node_modules/@maticnetwork/\",\":@openzeppelin/=node_modules/@openzeppelin/\",\":@uma/=node_modules/@uma/\",\":@uniswap/=node_modules/@uniswap/\",\":base64-sol/=node_modules/base64-sol/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":eth-gas-reporter/=node_modules/eth-gas-reporter/\",\":forge-std/=lib/forge-std/src/\",\":hardhat-deploy/=node_modules/hardhat-deploy/\",\":hardhat/=node_modules/hardhat/\"]},\"sources\":{\"contracts/DataAsserter.sol\":{\"keccak256\":\"0xd59e29ecdc9bcf1c689067ff20eb0d8ff6da313e9e9c6b3f5222e1a0c3049f4f\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://f477d11db1e86ee259d603261540d22a6798a5d58acfea68261e908096b8a697\",\"dweb:/ipfs/QmXVUx7PZDhzj4NJ57V5HaFjD2RbWKtA6q6Yrt1zgFMGUQ\"]},\"lib/forge-std/lib/ds-test/src/test.sol\":{\"keccak256\":\"0x8758531bbac3972efcf1fa46383dbe1d276406fe527bc7abb2f236486278e83b\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://1f64264d61506847acf8761e84aff690cebe830958eac00bac7924d8be569240\",\"dweb:/ipfs/QmSekDJvJ82MZAmr63n7YvfLzQ7gS4NLSHPmHL3GN3rw8k\"]},\"lib/forge-std/src/Base.sol\":{\"keccak256\":\"0x4ff1a785311017d1eedb1b4737956fa383067ad34eb439abfec1d989754dde1c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f553622969b9fdb930246704a4c10dfaee6b1a4468c142fa7eb9dc292a438224\",\"dweb:/ipfs/QmcxqHnqdQsMVtgsfH9VNLmZ3g7GhgNagfq7yvNCDcCHFK\"]},\"lib/forge-std/src/StdAssertions.sol\":{\"keccak256\":\"0x1a0dee4d8b2c81e9318e87dd85ef009467ebf7dba6575530d1fce94d34dbae60\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ddd790c86ddde1013d1f7a552a80168eacf2e9244077f96799180644ad523a5b\",\"dweb:/ipfs/QmYinBFt9uEVFXP9ytT9CDoNpzWieQVgLWRFRNiypMzJaL\"]},\"lib/forge-std/src/StdChains.sol\":{\"keccak256\":\"0xdbb593a36db1fde25c398f38312cfedc5b39c4bad1c65c2f58b7515c4dd76be8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://afc49471af92a1fd12686e2757ad0cbeb5bfe3cc95b8b6b5a5a91af83a8bcfd1\",\"dweb:/ipfs/QmcAQ5WesfLBUChNGuRMGQsDYf44q35Ln7Xb3jmyQgdESU\"]},\"lib/forge-std/src/StdCheats.sol\":{\"keccak256\":\"0xa0bac08b3d12d561fadf74c83c69f3ee54fe40e0c7766611766f6db70c202373\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://292f1e61a3a60f9f4075d0b567f5123d159b0541b7787e4523597ab57331eb08\",\"dweb:/ipfs/QmatxDNPiYVtLap2nn4Hp3AxzkSzkdAQDirbc5QKCDfde5\"]},\"lib/forge-std/src/StdError.sol\":{\"keccak256\":\"0xbf477b11a42d7611696956546bcfaa29317d1166bf65e402344599c05943fc77\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bc2e117d1135e030862b96a6526a43feb38d396cc79857f1fb696d4eff0e5fd6\",\"dweb:/ipfs/QmdSuQ5RrQudTLsNmWXGEeVJX8gR5U9XPm6m4dwwuQnJrj\"]},\"lib/forge-std/src/StdInvariant.sol\":{\"keccak256\":\"0x67299bfacd77fddfa2a67b8e2b901e0e333618a4975fb94850b07475e51f6de6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1b61121d310f4053ce344b345b4a9ccf43b059daf9097ec2647f594beaca896d\",\"dweb:/ipfs/QmZUCoTtXBM9zfAZVbj2dFPPnKaV1CSZzXE7zictyg3Gfz\"]},\"lib/forge-std/src/StdJson.sol\":{\"keccak256\":\"0x8f914dbd016bd0e318fe2b8bd556fbc8256c7cddc24e3e4fcb9f3c1c1935592d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://19e704df493dde38323303b07d18cadfeb4dcadf1ddc2301add4aea9474fbb5e\",\"dweb:/ipfs/QmZasuGiLK8LHwWtvpqEBxUR6QFY6GdzLMTJ9q7CMf8PNZ\"]},\"lib/forge-std/src/StdMath.sol\":{\"keccak256\":\"0xd90ad4fd8aeaeb8929964e686e769fdedd5eded3fc3815df194a0ab9f91a3fb2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7919b70f636c7b805223992f28ad1ad0145d6c1385b5931a3589aface5fe6c92\",\"dweb:/ipfs/QmY7FRaULwoGgFteF8GawjQJRfasNgpWnU2aiMsFrYpuTC\"]},\"lib/forge-std/src/StdStorage.sol\":{\"keccak256\":\"0x4298f3f4cedaedb07029820b1daad2c03af45379559392201f7bf3ec71105811\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6e062f36d8d1ae3c383ef8975757926eaa9c4de3a92b5f1fe2d12748bcd8db32\",\"dweb:/ipfs/QmcWkv3ia5Ew4DZNcudMNSTNXZ3W2QiXTZunRd44e9BT8z\"]},\"lib/forge-std/src/StdStyle.sol\":{\"keccak256\":\"0x43e2a8a9b9c2574dabe74f11adf6f782df218f463540e3b5b563609fe108597d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://51363ca97404cf4128e1141428949768c31929e75e014b02c85e887fbbb4f1b8\",\"dweb:/ipfs/QmVhtbQc2fU4rRmbcfBtz34mAgG4BAZBsbna1Ca4SkoPsK\"]},\"lib/forge-std/src/StdUtils.sol\":{\"keccak256\":\"0x8758c42ba9d9e46868b796e2330ac239006ede07bd438a4b36dd6f2c47d27dc1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://11f5752e0187b1e3631b875efdbe05d45929d05f1c1717105a9115d0a6628140\",\"dweb:/ipfs/QmUKkx9jfsUvjyYBw45RvrW1hTFXDXi2Jv5tbHP86mnzpi\"]},\"lib/forge-std/src/Test.sol\":{\"keccak256\":\"0x39b1729d5868c8e94ab8af16751eb500a17fe3870dc627d2b7ddcd5df18d7ad0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1568c82aff125cc4b0fc168be9d67ac313f469a3c7405c5493caecaaaecfb765\",\"dweb:/ipfs/QmXByuZReJsdu1jDcxj1FcmpcUnzoBcqybn9kWgDAECWri\"]},\"lib/forge-std/src/Vm.sol\":{\"keccak256\":\"0x039a59e16791fb3595615f1ad19d614cdb1f1e567ed3bfc1a35d97177387be68\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://da3d0bfe99104664a3a053665578ad1277ea79e0704519d3b7ff98b3b7054155\",\"dweb:/ipfs/QmesLHpsvzvC6DoTFLdgNibRU5sfeNggYtyaRfA64t2PsD\"]},\"lib/forge-std/src/console.sol\":{\"keccak256\":\"0x91d5413c2434ca58fd278b6e1e79fd98d10c83931cc2596a6038eee4daeb34ba\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://91ccea707361e48b9b7a161fe81f496b9932bc471e9c4e4e1e9c283f2453cc70\",\"dweb:/ipfs/QmcB66sZhQ6Kz7MUHcLE78YXRUZxoZnnxZjN6yATsbB2ec\"]},\"lib/forge-std/src/console2.sol\":{\"keccak256\":\"0x954646445d1014c3cd85c7918f5e7adeeca5ee44b68c00bafa237e597a4e35ea\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://516fa3be52da4763147175bfba4be0aa011fadbb0c1afb01f97265bd4cee7973\",\"dweb:/ipfs/QmdixAyMJefx7qePChgdxcBH5MxhmN7vsqPuPLx3CgrVmF\"]},\"lib/forge-std/src/interfaces/IMulticall3.sol\":{\"keccak256\":\"0x7aac1389150499a922d1f9ef5749c908cef127cb2075b92fa17e9cb611263d0a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d95ebb7c7c463e08ebc12dab639945752fb2480acfc6e86da32f72732a7fd0c0\",\"dweb:/ipfs/QmNXK8P8oPWwajsQHvAHw3JPyQidPLCGQN3hWu1Lk6PBL2\"]},\"lib/forge-std/src/safeconsole.sol\":{\"keccak256\":\"0xbaf41fdc6c54297e7cd8250e48b0f20eaac918e342a1028cef3f9a52ac086381\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a500ad81dea226f9910e6b50f99a9ff930105e393a692cbfb2185e4cdb4424ae\",\"dweb:/ipfs/QmVbUQpXNMmMWRiy4FvBNczzq46BMGfUoBikvSHNiCxVTq\"]},\"node_modules/@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0x24e0364e503a9bbde94c715d26573a76f14cd2a202d45f96f52134ab806b67b9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e12cbaa7378fd9b62280e4e1d164bedcb4399ce238f5f98fc0eefb7e50577981\",\"dweb:/ipfs/QmXRoFGUgfsaRkoPT5bxNMtSayKTQ8GZATLPXf69HcRA51\"]},\"node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0xdadd41acb749920eccf40aeaa8d291adf9751399a7343561bad13e7a8d99be0b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://12af4ac016f9fdf3be5d15824f4292272aa11f6b2e0192a0f7320f5ad49bbbf0\",\"dweb:/ipfs/QmRXMpdqCgA3TYuYxBodqs5p9jGbnMW6xa2gvjppvq4TWk\"]},\"node_modules/@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xbbc8ac883ac3c0078ce5ad3e288fbb3ffcc8a30c3a98c0fda0114d64fc44fca2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87a7a5d2f6f63f84598af02b8c50ca2df2631cb8ba2453e8d95fcb17e4be9824\",\"dweb:/ipfs/QmR76hqtAcRqoFj33tmNjcWTLrgNsAaakYwnKZ8zoJtKei\"]},\"node_modules/@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x8de418a5503946cabe331f35fe242d3201a73f67f77aaeb7110acb1f30423aca\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a376d3dda2cb70536c0a45c208b29b34ac560c4cb4f513a42079f96ba47d2dd\",\"dweb:/ipfs/QmZQg6gn1sUpM8wHzwNvSnihumUCAhxD119MpXeKp8B9s8\"]},\"node_modules/@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0xc3d946432c0ddbb1f846a0d3985be71299df331b91d06732152117f62f0be2b5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4632c341a06ba5c079b51ca5a915efab4e6ab57735b37839b3e8365ff806a43e\",\"dweb:/ipfs/QmTHT3xHYed2wajEoA5qu7ii2BxLpPhQZHwAhtLK5Z7ANK\"]},\"node_modules/@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0x2ccf9d2313a313d41a791505f2b5abfdc62191b5d4334f7f7a82691c088a1c87\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b3a57d0854b2fdce6ebff933a48dca2445643d1eccfc27f00292e937f26c6a58\",\"dweb:/ipfs/QmW45rZooS9TqR4YXUbjRbtf2Bpb5ouSarBvfW1LdGprvV\"]},\"node_modules/@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"node_modules/@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x32c202bd28995dd20c4347b7c6467a6d3241c74c8ad3edcbb610cd9205916c45\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8179c356adb19e70d6b31a1eedc8c5c7f0c00e669e2540f4099e3844c6074d30\",\"dweb:/ipfs/QmWFbivarEobbqhS1go64ootVuHfVohBseerYy9FTEd1W2\"]},\"node_modules/@openzeppelin/contracts/utils/math/SafeMath.sol\":{\"keccak256\":\"0xa2f576be637946f767aa56601c26d717f48a0aff44f82e46f13807eea1009a21\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://973868f808e88e21a1a0a01d4839314515ee337ad096286c88e41b74dcc11fc2\",\"dweb:/ipfs/QmfYuZxRfx2J2xdk4EXN7jKg4bUYEMTaYk9BAw9Bqn4o2Y\"]},\"node_modules/@openzeppelin/contracts/utils/math/SignedSafeMath.sol\":{\"keccak256\":\"0x62f53f262fabbbc6d8ab49488d8fce36370351aff2b8d3898d499d68995a71c2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://efd599513c2f313a3f5e9536beb2b80a0d2b3dd34202c174a707d81b7dc751ce\",\"dweb:/ipfs/QmdDiENVFSyWjfFskNLnViMH77DHg3oDthkSZk7dMzNNKB\"]},\"node_modules/@uma/core/contracts/common/implementation/AddressWhitelist.sol\":{\"keccak256\":\"0xc1f20b925f9d37230aaf7bbee536f9a9b08e4772864f0a243ff1b69b54710fee\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://55bc6782bd269463214dbafa8702b2ff33910fd4a51ab24d775aabb15e278bcc\",\"dweb:/ipfs/QmV41DnGByGBtg8gk7MG6Nr3xYo5R5varZ8cewywdKNATQ\"]},\"node_modules/@uma/core/contracts/common/implementation/AncillaryData.sol\":{\"keccak256\":\"0x8ff33ac32d3e6de25de9e0ac2c0ff9a621f187fa97e9ee84092b327471baa3ce\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://0bbaed49756e8cf7ef405e132f441cd7a735ac6186a200b0179147e7d137b74a\",\"dweb:/ipfs/QmeSBJX5a61LZPxbkUKS2NF4LSxemgDwjD65fCAmyP7PX2\"]},\"node_modules/@uma/core/contracts/common/implementation/ExpandedERC20.sol\":{\"keccak256\":\"0x8201459d3f78a1f97da7c421f2fbb859924d4facfc5fc235ba65d85bf12b2229\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://990c055523abe059c0e3e9dc0d631b17db960899dbfcfb2c562bc1ed9de8f140\",\"dweb:/ipfs/QmNgQP68bBrZvP2Rs4TdpESS3LFxqGgtTELZ1wm5mZqh4K\"]},\"node_modules/@uma/core/contracts/common/implementation/FixedPoint.sol\":{\"keccak256\":\"0x996b97cc4fa5da4064e3aee500edc6972485d59a9334ceec81155e2c2f484dae\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://8d7c028926dc2b27e7dc103363dca8a43f60b3351f4a14bcb702660f95c68663\",\"dweb:/ipfs/QmXz4ieFjP5RxJ35F8GbPryYEGvFmxc4Gqx8EK7N57ixzT\"]},\"node_modules/@uma/core/contracts/common/implementation/Lockable.sol\":{\"keccak256\":\"0x41d78fcce54598ad5f26bc0b778c0f4fedbd836401625e49e736979f69a87ef0\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://4ce111bb50441ef5125e7d42284f6debbc17fd589515d7b8cede7e9d1d5f0ede\",\"dweb:/ipfs/QmaXiXACWVEDDHoCHNXdVBoNpf8QNHkUZ1kf5MfbxfL6jj\"]},\"node_modules/@uma/core/contracts/common/implementation/MultiCaller.sol\":{\"keccak256\":\"0x9f6afe5bafc5e16fe8d63010a740ec3a88a9f00a7236ea7e5b039a2f50eb346e\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://a971572a4a9ed32e5ec15ac384af593d9499778f6ec593dbdba67d44ced4c7d8\",\"dweb:/ipfs/QmbdpfhhnUyoHWe7TPFBZxT6R6zyxJEDcGBNwDt5ncweRv\"]},\"node_modules/@uma/core/contracts/common/implementation/MultiRole.sol\":{\"keccak256\":\"0x134c5a2f847832705be631f2b4eb2a3e23a91a2f0e63560abb481e85eeebfae6\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://f1267c6ad560d1eb896575919ecca13759bf50bb82d1215e03fc1f0424ec37a6\",\"dweb:/ipfs/QmXewGxpSmSMGYmT6ZUyxCVzy2cybxicbnyCn8w87m5mo3\"]},\"node_modules/@uma/core/contracts/common/implementation/Testable.sol\":{\"keccak256\":\"0x0254b45747293bb800373a58d123969adec0428f7be79dc941cab10fcad09918\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://537d694e3753596f507d071f283be9caeaad0010c444c9c9955d729affeb4907\",\"dweb:/ipfs/QmZ1WfVTBao11QaN6aygMhnt45UjRq77ZwfKPFmHiVSdaJ\"]},\"node_modules/@uma/core/contracts/common/implementation/TestnetERC20.sol\":{\"keccak256\":\"0xea7c79b7d7b55b6d88d878ac44837c691641e727511f82adbfb399f5cbe77319\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://6acd45d4b58f8e150eb2dcc0d8314b38766b31671ce0aa6e1055a2f8ba93db80\",\"dweb:/ipfs/QmdsjVSVsXCidcbNeT5AzEM76jMKJ53DUD7zEcFetfdE6P\"]},\"node_modules/@uma/core/contracts/common/implementation/Timer.sol\":{\"keccak256\":\"0x9e0dd7389718bd5d1da910273a6f4cee98ee22bfc0c92bde0f0955c0e23adb5e\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://7ddac8d3cb76f8811156a11a7702d7c05b15a0f18c22b5abdc318723193f9266\",\"dweb:/ipfs/QmPxL7AU8NkURJaZ6WxXNcw88wGMSoPX4jbt7SMdPJqtYv\"]},\"node_modules/@uma/core/contracts/common/implementation/Withdrawable.sol\":{\"keccak256\":\"0x0cffa58907ae0c4b2948f225723e5f4346276c0f1484452fb5c78fc90b79c630\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://e832b3f09aa18ef687a34ffc754f9e9d1200c63da8f1550e46111a44a2b2433d\",\"dweb:/ipfs/QmdqUvbxXtea2w3msKp9PRAhxs3YsJCWX31bWRHSuq54Vr\"]},\"node_modules/@uma/core/contracts/common/interfaces/AddressWhitelistInterface.sol\":{\"keccak256\":\"0x22fb8588dff1d5cff76a28111d6c9b190765d99facd93c8ff3b54771f245c0d8\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://5ecd993f00de290a3c7bf21da23a9439cf2ccb22028316df92b79780ac8aa533\",\"dweb:/ipfs/QmTZ7x7U4EEzTacqapzSdFs2np5WNsqm4XeUBqzQxxDJei\"]},\"node_modules/@uma/core/contracts/common/interfaces/ExpandedIERC20.sol\":{\"keccak256\":\"0xb8252039cba45f1c19cd677f150a9823a5d6e1845cad90e3041d97c96f273c26\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://95106656c95e12c30a2a4c482a859df6df55c3b56bb9f7835eb5c685ca3175d3\",\"dweb:/ipfs/QmcuJoX7T53vTCDcQK8WcCJdT1LzHS35vPmSVfg1DG32cd\"]},\"node_modules/@uma/core/contracts/data-verification-mechanism/implementation/Constants.sol\":{\"keccak256\":\"0xe40957105a9240c6bcb9753fd0011fe9f382c437cd6771c57bf7a96f8ceb9c84\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://cbf0d25e841b1f5c4022d09fb29220cb428139443cb29c4ab8dbfff71dffcc05\",\"dweb:/ipfs/QmSVVr5wH1tZi6WmKyuy1K8yS6JN4DeK5kWaZpPKtXiqkK\"]},\"node_modules/@uma/core/contracts/data-verification-mechanism/implementation/Finder.sol\":{\"keccak256\":\"0x0dfa6eda28743755f159de563ee2350b7edf81e4173e6bc3e35da7ad22c54dcb\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://5fecfe0b81cb3437fde85798730bdcc9e9b124e4c22a7acb146fcc4b86f77702\",\"dweb:/ipfs/QmTCe8RfRihRXP9cuhM3Kgn36kR3JosoLzD1JQ3hWjdf65\"]},\"node_modules/@uma/core/contracts/data-verification-mechanism/implementation/IdentifierWhitelist.sol\":{\"keccak256\":\"0x77ad704fca2d76e187bbc72ed48323cf5b483dbee6c86afe023103d6fc7129eb\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://6c8a7765d146c7133c5028b40b4a7a060a030425299d8d6622a06af5c44d4aa8\",\"dweb:/ipfs/QmU5TDtc3XHDgp25WxFmKbYGycY7NsT5EtHJ6DH5Q2YWgt\"]},\"node_modules/@uma/core/contracts/data-verification-mechanism/implementation/Store.sol\":{\"keccak256\":\"0x6a2b6982a9bbe9860c73c6c542e2021050b1127b28f887c329f36cc71c20dad2\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://977406313978d803c0e5327f52c594f044c231fa3e9e6ab265ce19e457a06678\",\"dweb:/ipfs/QmY7en5NPTBvpriHZMKiWgzG9T3hNopR11d7VsBBPZaaVD\"]},\"node_modules/@uma/core/contracts/data-verification-mechanism/interfaces/FinderInterface.sol\":{\"keccak256\":\"0x9166fbfe08e954eb86d33c114fcde7ce4fd0dda5d9d28b31210582bfc769fa86\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://e611e12bcaaebfdf65b67c566ff1d34708e757f01a445bd87c55862e89383b81\",\"dweb:/ipfs/QmYNSq5oopTShdS6j4VWKqoLxmQSRKmWebCxw6K4LfmKrf\"]},\"node_modules/@uma/core/contracts/data-verification-mechanism/interfaces/IdentifierWhitelistInterface.sol\":{\"keccak256\":\"0x9ae86a30dd1a8c03fb2c6d27be570bb30c4c0b13ac63cde8620b7e4b51d88dc9\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://a71d2aff48e075ecab56a9c9767775d1d77e04ec9191fed124e71003220549e3\",\"dweb:/ipfs/QmYPWsZXro6fzqpZY6UxQ5X8znEXfLp2sun8oXzdz8bTyc\"]},\"node_modules/@uma/core/contracts/data-verification-mechanism/interfaces/OracleAncillaryInterface.sol\":{\"keccak256\":\"0xd58b41fe1e389f7871db7c04f2c05c1aac1d0455bbc521534da81fd657016a1f\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://cc532e9c550bb1bba0daa33fda748590cd06ce94a9566fe65dac04e7d40977bc\",\"dweb:/ipfs/QmZKvfRW2LJFt5MWZbKuU9ujkXnS2hkPUJVj8wwJWcuZGX\"]},\"node_modules/@uma/core/contracts/data-verification-mechanism/interfaces/StoreInterface.sol\":{\"keccak256\":\"0xbb73671684309c91ad5ef3da1474051d03f2e7d5882bed7f5c4317e5d4c768df\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://32386544d3119fd0187a8c4e8b01c739f508ab863faa04345cabc2544081f9e8\",\"dweb:/ipfs/QmYszDURs1x75rsejZkGt9zCkASXnJtufbNsL3XHe2eJPQ\"]},\"node_modules/@uma/core/contracts/data-verification-mechanism/test/MockOracleAncillary.sol\":{\"keccak256\":\"0x5ee630bcd6467ad0077f2d61baf77c59b7cf581a2c00fe816910d98b013ad0aa\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://f525c98da45397f68920ef61b8f9ac512690cb46f4192b4a50edfd6b49ad5199\",\"dweb:/ipfs/Qma2mSJu2XHXbzhkwbyRmoJcdnwE3w2N8pTiBkt9u9dwzd\"]},\"node_modules/@uma/core/contracts/optimistic-oracle-v3/implementation/ClaimData.sol\":{\"keccak256\":\"0x6e887a70326e5ede4a8c5002d4123a8c77b477ce58cf92533c38cd3dc6142cb5\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://bdafa7c59d0825da944c46664bddb1203bb4158dd0e1ddd6bbdeb276e66be0f8\",\"dweb:/ipfs/QmVb496JWqBib55HX6G3iPkAMv64Bj2UDegeVEYiNcYuDZ\"]},\"node_modules/@uma/core/contracts/optimistic-oracle-v3/implementation/OptimisticOracleV3.sol\":{\"keccak256\":\"0xeba5082c48c3d891f2422b8c0d1d5d6552ab47b5d538db7ff05ffb2f3db25ffc\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://d818630e1c094792613a0539aa0a7677ca8fa92a5308eaf4ff7cf8ea8a4c547e\",\"dweb:/ipfs/QmSM78A3afY6osh4VAmyJX2E4Qyg4qcY1KwY5uFnSK4Yia\"]},\"node_modules/@uma/core/contracts/optimistic-oracle-v3/implementation/test/AssertingCallerTest.sol\":{\"keccak256\":\"0x212dafde3707bc594b103f3baef2612e521d5cced481d81938938cc5c6fc4068\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://21e87397b59f9529a3e9ed9ef821f83f1a73bf685c2ec37dc70a2fbfc79aa441\",\"dweb:/ipfs/QmRmBzN3ztihHgeHzir1tz2MGsCrLM2Krc7ozQ4MiQe8jt\"]},\"node_modules/@uma/core/contracts/optimistic-oracle-v3/implementation/test/OptimisticOracleV3Test.sol\":{\"keccak256\":\"0xdb817afdd3c786d21ac8dede8e97452905d0ba84f444949cf6f92f77e8c2a38e\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://f88474c7ac47ad72196818aa1d77d3b4bccac18ec77ae008ed53ec48c18f4fee\",\"dweb:/ipfs/QmPxsszotngGGDBv6vCE1kANMtgX8fLD6Xv7YwtZsUKqJQ\"]},\"node_modules/@uma/core/contracts/optimistic-oracle-v3/interfaces/EscalationManagerInterface.sol\":{\"keccak256\":\"0xce31adf62ae47468bab181bf1137b05e8ac0a003f019c343ac137a76ea32efc7\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://eb1b93b648adf4130fdfe7a62d817cda0519e7760a50b90f16a3c46cee4c0967\",\"dweb:/ipfs/QmNPD4TRAm9kqqQDKQabqZgaorkJNov96iLgxsm5HRTSZN\"]},\"node_modules/@uma/core/contracts/optimistic-oracle-v3/interfaces/OptimisticOracleV3CallbackRecipientInterface.sol\":{\"keccak256\":\"0x79f90bc84ed5d394380e99f0a5d1b219abd9016bc3a02fad0099014af08af03e\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://dc1b7b847eb711750bc76ab45a13294b05fc09e361294a6bdffb90cb15f50b63\",\"dweb:/ipfs/QmQSs2R7mmGojGdNkqP75Vf7LajRkfJ1oGuYAUCHYGmPEQ\"]},\"node_modules/@uma/core/contracts/optimistic-oracle-v3/interfaces/OptimisticOracleV3Interface.sol\":{\"keccak256\":\"0xf31322bfd64854f0bfa92051d6ec711c1eed15d8042f394f5c24c05378218367\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://535bc2a6060e86a49524fd3c0062afcf83077530cefb3c1b8179b832f03ca81e\",\"dweb:/ipfs/QmQZhqn6oUiebSWEKbqcmiMGkqAb8B59WsRAyFU8WY84ct\"]},\"test/DataAsserter.t.sol\":{\"keccak256\":\"0x274543b8d84ff2ca965c7acbe3d7f5be4188428f196ee8cf78b1333c53182963\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://e36218e8f542c42305323aaaf7b7b1bbf43d7978faa23cf5d2b5e106a113cd1e\",\"dweb:/ipfs/QmWFN51bHJzddxuSqsC3o4NHMSNh53oBtcWiXvYZHnr65h\"]},\"test/common/CommonOptimisticOracleV3Test.sol\":{\"keccak256\":\"0xef9f5c2c5c37257681e697148b5f724bc9a683e801be4803c555625edee60d5b\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://35278764f5977e9f0161420f35681121958d409f5fe2a1299b1c7ad930e27467\",\"dweb:/ipfs/QmcNrmrzpGYyRzLbkKnrj8HBVH8qLeZSrcRiRDHbiqCoPe\"]},\"test/fixtures/common/CommonTestBase.sol\":{\"keccak256\":\"0xef45684397f61b92c77ef51e8a23579bca93a332c784e5b2f4e2a3c9343f9b50\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://8a35ad0d9814f198b93e72031517350fc230a2d4ad20fa05a805bd4abc4adc75\",\"dweb:/ipfs/QmbNJoPfRsFstJV5S1jMCzMwCN7qvFzc631PSSMPnQnBno\"]},\"test/fixtures/common/TestAddress.sol\":{\"keccak256\":\"0x30f53e79e844909966fa5b92246c74d8585ff5d540f099c7a99461cc6ebf9d99\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://8e58f9210e67b7efdb5633d9d67834ec5b52c5b48de0e0388b0ecd8f5853227b\",\"dweb:/ipfs/QmZaTBTkBx3QYPBzhRMb7nTdhfZCctwmrAVL9hST6Xw3bn\"]},\"test/fixtures/common/TimerFixture.sol\":{\"keccak256\":\"0x9f0b735cb4d2d494d670be9875082c9e7944e4e9e1989a99524b9dffbddeb9cb\",\"urls\":[\"bzz-raw://a2e53b878c9f8bdc88cb91cfb1b1631d1fec6d7c3009a1954e3215989c05d937\",\"dweb:/ipfs/QmRSi291avEMxygy47inL8VXCyJ4PSgqvx9iRZwbo19rnx\"]},\"test/fixtures/dvm/BaseDvmFixture.sol\":{\"keccak256\":\"0x84d096fe2fe9c507a772831db59b3b4ad023c791ca5334c4c6ac29c03854d56a\",\"urls\":[\"bzz-raw://bbcf3381ac7b375c93d734d9591a6cb1fb0ba8445e3d141e36d809b97e8e46ff\",\"dweb:/ipfs/QmczTUkTzjcFM9kCHbcKpK6gdxChsABaFBSz8tsFkrU4fZ\"]},\"test/fixtures/dvm/MockDvmFixture.sol\":{\"keccak256\":\"0xde8cfa220b09bb8576733acff3ff12989753698743b25b3b51ccdb84a009c5b1\",\"urls\":[\"bzz-raw://b436588048b11b68fa27a4bab1e2623ee0a3102d46e28d67ea8fae4989661512\",\"dweb:/ipfs/QmZU56VYo9cpyBNv8hLadNJAj4jNWFxQJJQgV3NpPcTgd2\"]},\"test/fixtures/optimistic-oracle-v3/OptimisticOracleV3Fixture.sol\":{\"keccak256\":\"0x4dbc410556ebf8c68d4053e40df6ced58c3ad2bcd3c7b07a38d6e45db64f6a9f\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://e1c1f054e8fe6207a132b2c101f3a103cc2527f2edfc52fcec465f1f45e8bdd3\",\"dweb:/ipfs/QmYqFoT2H2hXGpqFs6yBRCbJ8tyBwHekWvqFFsKvfSwKLf\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.16+commit.07a7930e"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "assertingCaller",
              "type": "address",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "AssertingCallerSet",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "assertionId",
              "type": "bytes32",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "caller",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "disputer",
              "type": "address",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "AssertionDisputed",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "assertionId",
              "type": "bytes32",
              "indexed": true
            },
            {
              "internalType": "bytes32",
              "name": "domainId",
              "type": "bytes32",
              "indexed": false
            },
            {
              "internalType": "bytes",
              "name": "claim",
              "type": "bytes",
              "indexed": false
            },
            {
              "internalType": "address",
              "name": "asserter",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "callbackRecipient",
              "type": "address",
              "indexed": false
            },
            {
              "internalType": "address",
              "name": "escalationManager",
              "type": "address",
              "indexed": false
            },
            {
              "internalType": "address",
              "name": "caller",
              "type": "address",
              "indexed": false
            },
            {
              "internalType": "uint64",
              "name": "expirationTime",
              "type": "uint64",
              "indexed": false
            },
            {
              "internalType": "contract IERC20",
              "name": "currency",
              "type": "address",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "bond",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "bytes32",
              "name": "identifier",
              "type": "bytes32",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "AssertionMade",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "assertionId",
              "type": "bytes32",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "bondRecipient",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "bool",
              "name": "disputed",
              "type": "bool",
              "indexed": false
            },
            {
              "internalType": "bool",
              "name": "settlementResolution",
              "type": "bool",
              "indexed": false
            },
            {
              "internalType": "address",
              "name": "settleCaller",
              "type": "address",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "AssertionSettled",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "requester",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "bytes32",
              "name": "identifier",
              "type": "bytes32",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "time",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "bytes",
              "name": "ancillaryData",
              "type": "bytes",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "PriceRequestAdded",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_address",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256[]",
              "name": "val",
              "type": "uint256[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_array",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "int256[]",
              "name": "val",
              "type": "int256[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_array",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address[]",
              "name": "val",
              "type": "address[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_array",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes",
              "name": "",
              "type": "bytes",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_bytes",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "",
              "type": "bytes32",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_bytes32",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "int256",
              "name": "",
              "type": "int256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_int",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "address",
              "name": "val",
              "type": "address",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_address",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "uint256[]",
              "name": "val",
              "type": "uint256[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_array",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "int256[]",
              "name": "val",
              "type": "int256[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_array",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "address[]",
              "name": "val",
              "type": "address[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_array",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "bytes",
              "name": "val",
              "type": "bytes",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_bytes",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "bytes32",
              "name": "val",
              "type": "bytes32",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_bytes32",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "int256",
              "name": "val",
              "type": "int256",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "decimals",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_decimal_int",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "val",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "decimals",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_decimal_uint",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "int256",
              "name": "val",
              "type": "int256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_int",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "string",
              "name": "val",
              "type": "string",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_string",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "val",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_uint",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_string",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_uint",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes",
              "name": "",
              "type": "bytes",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "logs",
          "anonymous": false
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "IS_TEST",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "asserter",
              "type": "address"
            },
            {
              "internalType": "bytes",
              "name": "claim",
              "type": "bytes"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "_allocateBondAndAssertTruth",
          "outputs": [
            {
              "internalType": "bytes32",
              "name": "assertionId",
              "type": "bytes32"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "_commonSetup"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "mockAssertingCaller",
              "type": "address"
            },
            {
              "internalType": "bytes32",
              "name": "assertionId",
              "type": "bytes32"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "_mockGetAssertionAssertingCaller"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "dataAsserter",
          "outputs": [
            {
              "internalType": "contract DataAsserter",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "excludeArtifacts",
          "outputs": [
            {
              "internalType": "string[]",
              "name": "excludedArtifacts_",
              "type": "string[]"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "excludeContracts",
          "outputs": [
            {
              "internalType": "address[]",
              "name": "excludedContracts_",
              "type": "address[]"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "excludeSenders",
          "outputs": [
            {
              "internalType": "address[]",
              "name": "excludedSenders_",
              "type": "address[]"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "failed",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setUp"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "targetArtifactSelectors",
          "outputs": [
            {
              "internalType": "struct StdInvariant.FuzzSelector[]",
              "name": "targetedArtifactSelectors_",
              "type": "tuple[]",
              "components": [
                {
                  "internalType": "address",
                  "name": "addr",
                  "type": "address"
                },
                {
                  "internalType": "bytes4[]",
                  "name": "selectors",
                  "type": "bytes4[]"
                }
              ]
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "targetArtifacts",
          "outputs": [
            {
              "internalType": "string[]",
              "name": "targetedArtifacts_",
              "type": "string[]"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "targetContracts",
          "outputs": [
            {
              "internalType": "address[]",
              "name": "targetedContracts_",
              "type": "address[]"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "targetInterfaces",
          "outputs": [
            {
              "internalType": "struct StdInvariant.FuzzInterface[]",
              "name": "targetedInterfaces_",
              "type": "tuple[]",
              "components": [
                {
                  "internalType": "address",
                  "name": "addr",
                  "type": "address"
                },
                {
                  "internalType": "string[]",
                  "name": "artifacts",
                  "type": "string[]"
                }
              ]
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "targetSelectors",
          "outputs": [
            {
              "internalType": "struct StdInvariant.FuzzSelector[]",
              "name": "targetedSelectors_",
              "type": "tuple[]",
              "components": [
                {
                  "internalType": "address",
                  "name": "addr",
                  "type": "address"
                },
                {
                  "internalType": "bytes4[]",
                  "name": "selectors",
                  "type": "bytes4[]"
                }
              ]
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "targetSenders",
          "outputs": [
            {
              "internalType": "address[]",
              "name": "targetedSenders_",
              "type": "address[]"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "test_DataAssertionNoDispute"
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "test_DataAssertionWithCorrectDispute"
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "test_DataAssertionWithWrongDispute"
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {},
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {},
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        "@across-protocol/=node_modules/@across-protocol/",
        "@ensdomains/=node_modules/@ensdomains/",
        "@eth-optimism/=node_modules/@across-protocol/contracts/node_modules/@eth-optimism/",
        "@gnosis.pm/=node_modules/@gnosis.pm/",
        "@maticnetwork/=node_modules/@maticnetwork/",
        "@openzeppelin/=node_modules/@openzeppelin/",
        "@uma/=node_modules/@uma/",
        "@uniswap/=node_modules/@uniswap/",
        "base64-sol/=node_modules/base64-sol/",
        "ds-test/=lib/forge-std/lib/ds-test/src/",
        "eth-gas-reporter/=node_modules/eth-gas-reporter/",
        "forge-std/=lib/forge-std/src/",
        "hardhat-deploy/=node_modules/hardhat-deploy/",
        "hardhat/=node_modules/hardhat/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 200
      },
      "metadata": {
        "bytecodeHash": "ipfs"
      },
      "compilationTarget": {
        "test/DataAsserter.t.sol": "DataAsserterTest"
      },
      "libraries": {}
    },
    "sources": {
      "contracts/DataAsserter.sol": {
        "keccak256": "0xd59e29ecdc9bcf1c689067ff20eb0d8ff6da313e9e9c6b3f5222e1a0c3049f4f",
        "urls": [
          "bzz-raw://f477d11db1e86ee259d603261540d22a6798a5d58acfea68261e908096b8a697",
          "dweb:/ipfs/QmXVUx7PZDhzj4NJ57V5HaFjD2RbWKtA6q6Yrt1zgFMGUQ"
        ],
        "license": "AGPL-3.0-only"
      },
      "lib/forge-std/lib/ds-test/src/test.sol": {
        "keccak256": "0x8758531bbac3972efcf1fa46383dbe1d276406fe527bc7abb2f236486278e83b",
        "urls": [
          "bzz-raw://1f64264d61506847acf8761e84aff690cebe830958eac00bac7924d8be569240",
          "dweb:/ipfs/QmSekDJvJ82MZAmr63n7YvfLzQ7gS4NLSHPmHL3GN3rw8k"
        ],
        "license": "GPL-3.0-or-later"
      },
      "lib/forge-std/src/Base.sol": {
        "keccak256": "0x4ff1a785311017d1eedb1b4737956fa383067ad34eb439abfec1d989754dde1c",
        "urls": [
          "bzz-raw://f553622969b9fdb930246704a4c10dfaee6b1a4468c142fa7eb9dc292a438224",
          "dweb:/ipfs/QmcxqHnqdQsMVtgsfH9VNLmZ3g7GhgNagfq7yvNCDcCHFK"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdAssertions.sol": {
        "keccak256": "0x1a0dee4d8b2c81e9318e87dd85ef009467ebf7dba6575530d1fce94d34dbae60",
        "urls": [
          "bzz-raw://ddd790c86ddde1013d1f7a552a80168eacf2e9244077f96799180644ad523a5b",
          "dweb:/ipfs/QmYinBFt9uEVFXP9ytT9CDoNpzWieQVgLWRFRNiypMzJaL"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdChains.sol": {
        "keccak256": "0xdbb593a36db1fde25c398f38312cfedc5b39c4bad1c65c2f58b7515c4dd76be8",
        "urls": [
          "bzz-raw://afc49471af92a1fd12686e2757ad0cbeb5bfe3cc95b8b6b5a5a91af83a8bcfd1",
          "dweb:/ipfs/QmcAQ5WesfLBUChNGuRMGQsDYf44q35Ln7Xb3jmyQgdESU"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdCheats.sol": {
        "keccak256": "0xa0bac08b3d12d561fadf74c83c69f3ee54fe40e0c7766611766f6db70c202373",
        "urls": [
          "bzz-raw://292f1e61a3a60f9f4075d0b567f5123d159b0541b7787e4523597ab57331eb08",
          "dweb:/ipfs/QmatxDNPiYVtLap2nn4Hp3AxzkSzkdAQDirbc5QKCDfde5"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdError.sol": {
        "keccak256": "0xbf477b11a42d7611696956546bcfaa29317d1166bf65e402344599c05943fc77",
        "urls": [
          "bzz-raw://bc2e117d1135e030862b96a6526a43feb38d396cc79857f1fb696d4eff0e5fd6",
          "dweb:/ipfs/QmdSuQ5RrQudTLsNmWXGEeVJX8gR5U9XPm6m4dwwuQnJrj"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdInvariant.sol": {
        "keccak256": "0x67299bfacd77fddfa2a67b8e2b901e0e333618a4975fb94850b07475e51f6de6",
        "urls": [
          "bzz-raw://1b61121d310f4053ce344b345b4a9ccf43b059daf9097ec2647f594beaca896d",
          "dweb:/ipfs/QmZUCoTtXBM9zfAZVbj2dFPPnKaV1CSZzXE7zictyg3Gfz"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdJson.sol": {
        "keccak256": "0x8f914dbd016bd0e318fe2b8bd556fbc8256c7cddc24e3e4fcb9f3c1c1935592d",
        "urls": [
          "bzz-raw://19e704df493dde38323303b07d18cadfeb4dcadf1ddc2301add4aea9474fbb5e",
          "dweb:/ipfs/QmZasuGiLK8LHwWtvpqEBxUR6QFY6GdzLMTJ9q7CMf8PNZ"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdMath.sol": {
        "keccak256": "0xd90ad4fd8aeaeb8929964e686e769fdedd5eded3fc3815df194a0ab9f91a3fb2",
        "urls": [
          "bzz-raw://7919b70f636c7b805223992f28ad1ad0145d6c1385b5931a3589aface5fe6c92",
          "dweb:/ipfs/QmY7FRaULwoGgFteF8GawjQJRfasNgpWnU2aiMsFrYpuTC"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdStorage.sol": {
        "keccak256": "0x4298f3f4cedaedb07029820b1daad2c03af45379559392201f7bf3ec71105811",
        "urls": [
          "bzz-raw://6e062f36d8d1ae3c383ef8975757926eaa9c4de3a92b5f1fe2d12748bcd8db32",
          "dweb:/ipfs/QmcWkv3ia5Ew4DZNcudMNSTNXZ3W2QiXTZunRd44e9BT8z"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdStyle.sol": {
        "keccak256": "0x43e2a8a9b9c2574dabe74f11adf6f782df218f463540e3b5b563609fe108597d",
        "urls": [
          "bzz-raw://51363ca97404cf4128e1141428949768c31929e75e014b02c85e887fbbb4f1b8",
          "dweb:/ipfs/QmVhtbQc2fU4rRmbcfBtz34mAgG4BAZBsbna1Ca4SkoPsK"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdUtils.sol": {
        "keccak256": "0x8758c42ba9d9e46868b796e2330ac239006ede07bd438a4b36dd6f2c47d27dc1",
        "urls": [
          "bzz-raw://11f5752e0187b1e3631b875efdbe05d45929d05f1c1717105a9115d0a6628140",
          "dweb:/ipfs/QmUKkx9jfsUvjyYBw45RvrW1hTFXDXi2Jv5tbHP86mnzpi"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/Test.sol": {
        "keccak256": "0x39b1729d5868c8e94ab8af16751eb500a17fe3870dc627d2b7ddcd5df18d7ad0",
        "urls": [
          "bzz-raw://1568c82aff125cc4b0fc168be9d67ac313f469a3c7405c5493caecaaaecfb765",
          "dweb:/ipfs/QmXByuZReJsdu1jDcxj1FcmpcUnzoBcqybn9kWgDAECWri"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/Vm.sol": {
        "keccak256": "0x039a59e16791fb3595615f1ad19d614cdb1f1e567ed3bfc1a35d97177387be68",
        "urls": [
          "bzz-raw://da3d0bfe99104664a3a053665578ad1277ea79e0704519d3b7ff98b3b7054155",
          "dweb:/ipfs/QmesLHpsvzvC6DoTFLdgNibRU5sfeNggYtyaRfA64t2PsD"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/console.sol": {
        "keccak256": "0x91d5413c2434ca58fd278b6e1e79fd98d10c83931cc2596a6038eee4daeb34ba",
        "urls": [
          "bzz-raw://91ccea707361e48b9b7a161fe81f496b9932bc471e9c4e4e1e9c283f2453cc70",
          "dweb:/ipfs/QmcB66sZhQ6Kz7MUHcLE78YXRUZxoZnnxZjN6yATsbB2ec"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/console2.sol": {
        "keccak256": "0x954646445d1014c3cd85c7918f5e7adeeca5ee44b68c00bafa237e597a4e35ea",
        "urls": [
          "bzz-raw://516fa3be52da4763147175bfba4be0aa011fadbb0c1afb01f97265bd4cee7973",
          "dweb:/ipfs/QmdixAyMJefx7qePChgdxcBH5MxhmN7vsqPuPLx3CgrVmF"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/interfaces/IMulticall3.sol": {
        "keccak256": "0x7aac1389150499a922d1f9ef5749c908cef127cb2075b92fa17e9cb611263d0a",
        "urls": [
          "bzz-raw://d95ebb7c7c463e08ebc12dab639945752fb2480acfc6e86da32f72732a7fd0c0",
          "dweb:/ipfs/QmNXK8P8oPWwajsQHvAHw3JPyQidPLCGQN3hWu1Lk6PBL2"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/safeconsole.sol": {
        "keccak256": "0xbaf41fdc6c54297e7cd8250e48b0f20eaac918e342a1028cef3f9a52ac086381",
        "urls": [
          "bzz-raw://a500ad81dea226f9910e6b50f99a9ff930105e393a692cbfb2185e4cdb4424ae",
          "dweb:/ipfs/QmVbUQpXNMmMWRiy4FvBNczzq46BMGfUoBikvSHNiCxVTq"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/access/Ownable.sol": {
        "keccak256": "0x24e0364e503a9bbde94c715d26573a76f14cd2a202d45f96f52134ab806b67b9",
        "urls": [
          "bzz-raw://e12cbaa7378fd9b62280e4e1d164bedcb4399ce238f5f98fc0eefb7e50577981",
          "dweb:/ipfs/QmXRoFGUgfsaRkoPT5bxNMtSayKTQ8GZATLPXf69HcRA51"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol": {
        "keccak256": "0xdadd41acb749920eccf40aeaa8d291adf9751399a7343561bad13e7a8d99be0b",
        "urls": [
          "bzz-raw://12af4ac016f9fdf3be5d15824f4292272aa11f6b2e0192a0f7320f5ad49bbbf0",
          "dweb:/ipfs/QmRXMpdqCgA3TYuYxBodqs5p9jGbnMW6xa2gvjppvq4TWk"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/token/ERC20/IERC20.sol": {
        "keccak256": "0xbbc8ac883ac3c0078ce5ad3e288fbb3ffcc8a30c3a98c0fda0114d64fc44fca2",
        "urls": [
          "bzz-raw://87a7a5d2f6f63f84598af02b8c50ca2df2631cb8ba2453e8d95fcb17e4be9824",
          "dweb:/ipfs/QmR76hqtAcRqoFj33tmNjcWTLrgNsAaakYwnKZ8zoJtKei"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
        "keccak256": "0x8de418a5503946cabe331f35fe242d3201a73f67f77aaeb7110acb1f30423aca",
        "urls": [
          "bzz-raw://5a376d3dda2cb70536c0a45c208b29b34ac560c4cb4f513a42079f96ba47d2dd",
          "dweb:/ipfs/QmZQg6gn1sUpM8wHzwNvSnihumUCAhxD119MpXeKp8B9s8"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol": {
        "keccak256": "0xc3d946432c0ddbb1f846a0d3985be71299df331b91d06732152117f62f0be2b5",
        "urls": [
          "bzz-raw://4632c341a06ba5c079b51ca5a915efab4e6ab57735b37839b3e8365ff806a43e",
          "dweb:/ipfs/QmTHT3xHYed2wajEoA5qu7ii2BxLpPhQZHwAhtLK5Z7ANK"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/utils/Address.sol": {
        "keccak256": "0x2ccf9d2313a313d41a791505f2b5abfdc62191b5d4334f7f7a82691c088a1c87",
        "urls": [
          "bzz-raw://b3a57d0854b2fdce6ebff933a48dca2445643d1eccfc27f00292e937f26c6a58",
          "dweb:/ipfs/QmW45rZooS9TqR4YXUbjRbtf2Bpb5ouSarBvfW1LdGprvV"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/utils/Context.sol": {
        "keccak256": "0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7",
        "urls": [
          "bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92",
          "dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/utils/Strings.sol": {
        "keccak256": "0x32c202bd28995dd20c4347b7c6467a6d3241c74c8ad3edcbb610cd9205916c45",
        "urls": [
          "bzz-raw://8179c356adb19e70d6b31a1eedc8c5c7f0c00e669e2540f4099e3844c6074d30",
          "dweb:/ipfs/QmWFbivarEobbqhS1go64ootVuHfVohBseerYy9FTEd1W2"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/utils/math/SafeMath.sol": {
        "keccak256": "0xa2f576be637946f767aa56601c26d717f48a0aff44f82e46f13807eea1009a21",
        "urls": [
          "bzz-raw://973868f808e88e21a1a0a01d4839314515ee337ad096286c88e41b74dcc11fc2",
          "dweb:/ipfs/QmfYuZxRfx2J2xdk4EXN7jKg4bUYEMTaYk9BAw9Bqn4o2Y"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/utils/math/SignedSafeMath.sol": {
        "keccak256": "0x62f53f262fabbbc6d8ab49488d8fce36370351aff2b8d3898d499d68995a71c2",
        "urls": [
          "bzz-raw://efd599513c2f313a3f5e9536beb2b80a0d2b3dd34202c174a707d81b7dc751ce",
          "dweb:/ipfs/QmdDiENVFSyWjfFskNLnViMH77DHg3oDthkSZk7dMzNNKB"
        ],
        "license": "MIT"
      },
      "node_modules/@uma/core/contracts/common/implementation/AddressWhitelist.sol": {
        "keccak256": "0xc1f20b925f9d37230aaf7bbee536f9a9b08e4772864f0a243ff1b69b54710fee",
        "urls": [
          "bzz-raw://55bc6782bd269463214dbafa8702b2ff33910fd4a51ab24d775aabb15e278bcc",
          "dweb:/ipfs/QmV41DnGByGBtg8gk7MG6Nr3xYo5R5varZ8cewywdKNATQ"
        ],
        "license": "AGPL-3.0-only"
      },
      "node_modules/@uma/core/contracts/common/implementation/AncillaryData.sol": {
        "keccak256": "0x8ff33ac32d3e6de25de9e0ac2c0ff9a621f187fa97e9ee84092b327471baa3ce",
        "urls": [
          "bzz-raw://0bbaed49756e8cf7ef405e132f441cd7a735ac6186a200b0179147e7d137b74a",
          "dweb:/ipfs/QmeSBJX5a61LZPxbkUKS2NF4LSxemgDwjD65fCAmyP7PX2"
        ],
        "license": "AGPL-3.0-only"
      },
      "node_modules/@uma/core/contracts/common/implementation/ExpandedERC20.sol": {
        "keccak256": "0x8201459d3f78a1f97da7c421f2fbb859924d4facfc5fc235ba65d85bf12b2229",
        "urls": [
          "bzz-raw://990c055523abe059c0e3e9dc0d631b17db960899dbfcfb2c562bc1ed9de8f140",
          "dweb:/ipfs/QmNgQP68bBrZvP2Rs4TdpESS3LFxqGgtTELZ1wm5mZqh4K"
        ],
        "license": "AGPL-3.0-only"
      },
      "node_modules/@uma/core/contracts/common/implementation/FixedPoint.sol": {
        "keccak256": "0x996b97cc4fa5da4064e3aee500edc6972485d59a9334ceec81155e2c2f484dae",
        "urls": [
          "bzz-raw://8d7c028926dc2b27e7dc103363dca8a43f60b3351f4a14bcb702660f95c68663",
          "dweb:/ipfs/QmXz4ieFjP5RxJ35F8GbPryYEGvFmxc4Gqx8EK7N57ixzT"
        ],
        "license": "AGPL-3.0-only"
      },
      "node_modules/@uma/core/contracts/common/implementation/Lockable.sol": {
        "keccak256": "0x41d78fcce54598ad5f26bc0b778c0f4fedbd836401625e49e736979f69a87ef0",
        "urls": [
          "bzz-raw://4ce111bb50441ef5125e7d42284f6debbc17fd589515d7b8cede7e9d1d5f0ede",
          "dweb:/ipfs/QmaXiXACWVEDDHoCHNXdVBoNpf8QNHkUZ1kf5MfbxfL6jj"
        ],
        "license": "AGPL-3.0-only"
      },
      "node_modules/@uma/core/contracts/common/implementation/MultiCaller.sol": {
        "keccak256": "0x9f6afe5bafc5e16fe8d63010a740ec3a88a9f00a7236ea7e5b039a2f50eb346e",
        "urls": [
          "bzz-raw://a971572a4a9ed32e5ec15ac384af593d9499778f6ec593dbdba67d44ced4c7d8",
          "dweb:/ipfs/QmbdpfhhnUyoHWe7TPFBZxT6R6zyxJEDcGBNwDt5ncweRv"
        ],
        "license": "AGPL-3.0-only"
      },
      "node_modules/@uma/core/contracts/common/implementation/MultiRole.sol": {
        "keccak256": "0x134c5a2f847832705be631f2b4eb2a3e23a91a2f0e63560abb481e85eeebfae6",
        "urls": [
          "bzz-raw://f1267c6ad560d1eb896575919ecca13759bf50bb82d1215e03fc1f0424ec37a6",
          "dweb:/ipfs/QmXewGxpSmSMGYmT6ZUyxCVzy2cybxicbnyCn8w87m5mo3"
        ],
        "license": "AGPL-3.0-only"
      },
      "node_modules/@uma/core/contracts/common/implementation/Testable.sol": {
        "keccak256": "0x0254b45747293bb800373a58d123969adec0428f7be79dc941cab10fcad09918",
        "urls": [
          "bzz-raw://537d694e3753596f507d071f283be9caeaad0010c444c9c9955d729affeb4907",
          "dweb:/ipfs/QmZ1WfVTBao11QaN6aygMhnt45UjRq77ZwfKPFmHiVSdaJ"
        ],
        "license": "AGPL-3.0-only"
      },
      "node_modules/@uma/core/contracts/common/implementation/TestnetERC20.sol": {
        "keccak256": "0xea7c79b7d7b55b6d88d878ac44837c691641e727511f82adbfb399f5cbe77319",
        "urls": [
          "bzz-raw://6acd45d4b58f8e150eb2dcc0d8314b38766b31671ce0aa6e1055a2f8ba93db80",
          "dweb:/ipfs/QmdsjVSVsXCidcbNeT5AzEM76jMKJ53DUD7zEcFetfdE6P"
        ],
        "license": "AGPL-3.0-only"
      },
      "node_modules/@uma/core/contracts/common/implementation/Timer.sol": {
        "keccak256": "0x9e0dd7389718bd5d1da910273a6f4cee98ee22bfc0c92bde0f0955c0e23adb5e",
        "urls": [
          "bzz-raw://7ddac8d3cb76f8811156a11a7702d7c05b15a0f18c22b5abdc318723193f9266",
          "dweb:/ipfs/QmPxL7AU8NkURJaZ6WxXNcw88wGMSoPX4jbt7SMdPJqtYv"
        ],
        "license": "AGPL-3.0-only"
      },
      "node_modules/@uma/core/contracts/common/implementation/Withdrawable.sol": {
        "keccak256": "0x0cffa58907ae0c4b2948f225723e5f4346276c0f1484452fb5c78fc90b79c630",
        "urls": [
          "bzz-raw://e832b3f09aa18ef687a34ffc754f9e9d1200c63da8f1550e46111a44a2b2433d",
          "dweb:/ipfs/QmdqUvbxXtea2w3msKp9PRAhxs3YsJCWX31bWRHSuq54Vr"
        ],
        "license": "AGPL-3.0-only"
      },
      "node_modules/@uma/core/contracts/common/interfaces/AddressWhitelistInterface.sol": {
        "keccak256": "0x22fb8588dff1d5cff76a28111d6c9b190765d99facd93c8ff3b54771f245c0d8",
        "urls": [
          "bzz-raw://5ecd993f00de290a3c7bf21da23a9439cf2ccb22028316df92b79780ac8aa533",
          "dweb:/ipfs/QmTZ7x7U4EEzTacqapzSdFs2np5WNsqm4XeUBqzQxxDJei"
        ],
        "license": "AGPL-3.0-only"
      },
      "node_modules/@uma/core/contracts/common/interfaces/ExpandedIERC20.sol": {
        "keccak256": "0xb8252039cba45f1c19cd677f150a9823a5d6e1845cad90e3041d97c96f273c26",
        "urls": [
          "bzz-raw://95106656c95e12c30a2a4c482a859df6df55c3b56bb9f7835eb5c685ca3175d3",
          "dweb:/ipfs/QmcuJoX7T53vTCDcQK8WcCJdT1LzHS35vPmSVfg1DG32cd"
        ],
        "license": "AGPL-3.0-only"
      },
      "node_modules/@uma/core/contracts/data-verification-mechanism/implementation/Constants.sol": {
        "keccak256": "0xe40957105a9240c6bcb9753fd0011fe9f382c437cd6771c57bf7a96f8ceb9c84",
        "urls": [
          "bzz-raw://cbf0d25e841b1f5c4022d09fb29220cb428139443cb29c4ab8dbfff71dffcc05",
          "dweb:/ipfs/QmSVVr5wH1tZi6WmKyuy1K8yS6JN4DeK5kWaZpPKtXiqkK"
        ],
        "license": "AGPL-3.0-only"
      },
      "node_modules/@uma/core/contracts/data-verification-mechanism/implementation/Finder.sol": {
        "keccak256": "0x0dfa6eda28743755f159de563ee2350b7edf81e4173e6bc3e35da7ad22c54dcb",
        "urls": [
          "bzz-raw://5fecfe0b81cb3437fde85798730bdcc9e9b124e4c22a7acb146fcc4b86f77702",
          "dweb:/ipfs/QmTCe8RfRihRXP9cuhM3Kgn36kR3JosoLzD1JQ3hWjdf65"
        ],
        "license": "AGPL-3.0-only"
      },
      "node_modules/@uma/core/contracts/data-verification-mechanism/implementation/IdentifierWhitelist.sol": {
        "keccak256": "0x77ad704fca2d76e187bbc72ed48323cf5b483dbee6c86afe023103d6fc7129eb",
        "urls": [
          "bzz-raw://6c8a7765d146c7133c5028b40b4a7a060a030425299d8d6622a06af5c44d4aa8",
          "dweb:/ipfs/QmU5TDtc3XHDgp25WxFmKbYGycY7NsT5EtHJ6DH5Q2YWgt"
        ],
        "license": "AGPL-3.0-only"
      },
      "node_modules/@uma/core/contracts/data-verification-mechanism/implementation/Store.sol": {
        "keccak256": "0x6a2b6982a9bbe9860c73c6c542e2021050b1127b28f887c329f36cc71c20dad2",
        "urls": [
          "bzz-raw://977406313978d803c0e5327f52c594f044c231fa3e9e6ab265ce19e457a06678",
          "dweb:/ipfs/QmY7en5NPTBvpriHZMKiWgzG9T3hNopR11d7VsBBPZaaVD"
        ],
        "license": "AGPL-3.0-only"
      },
      "node_modules/@uma/core/contracts/data-verification-mechanism/interfaces/FinderInterface.sol": {
        "keccak256": "0x9166fbfe08e954eb86d33c114fcde7ce4fd0dda5d9d28b31210582bfc769fa86",
        "urls": [
          "bzz-raw://e611e12bcaaebfdf65b67c566ff1d34708e757f01a445bd87c55862e89383b81",
          "dweb:/ipfs/QmYNSq5oopTShdS6j4VWKqoLxmQSRKmWebCxw6K4LfmKrf"
        ],
        "license": "AGPL-3.0-only"
      },
      "node_modules/@uma/core/contracts/data-verification-mechanism/interfaces/IdentifierWhitelistInterface.sol": {
        "keccak256": "0x9ae86a30dd1a8c03fb2c6d27be570bb30c4c0b13ac63cde8620b7e4b51d88dc9",
        "urls": [
          "bzz-raw://a71d2aff48e075ecab56a9c9767775d1d77e04ec9191fed124e71003220549e3",
          "dweb:/ipfs/QmYPWsZXro6fzqpZY6UxQ5X8znEXfLp2sun8oXzdz8bTyc"
        ],
        "license": "AGPL-3.0-only"
      },
      "node_modules/@uma/core/contracts/data-verification-mechanism/interfaces/OracleAncillaryInterface.sol": {
        "keccak256": "0xd58b41fe1e389f7871db7c04f2c05c1aac1d0455bbc521534da81fd657016a1f",
        "urls": [
          "bzz-raw://cc532e9c550bb1bba0daa33fda748590cd06ce94a9566fe65dac04e7d40977bc",
          "dweb:/ipfs/QmZKvfRW2LJFt5MWZbKuU9ujkXnS2hkPUJVj8wwJWcuZGX"
        ],
        "license": "AGPL-3.0-only"
      },
      "node_modules/@uma/core/contracts/data-verification-mechanism/interfaces/StoreInterface.sol": {
        "keccak256": "0xbb73671684309c91ad5ef3da1474051d03f2e7d5882bed7f5c4317e5d4c768df",
        "urls": [
          "bzz-raw://32386544d3119fd0187a8c4e8b01c739f508ab863faa04345cabc2544081f9e8",
          "dweb:/ipfs/QmYszDURs1x75rsejZkGt9zCkASXnJtufbNsL3XHe2eJPQ"
        ],
        "license": "AGPL-3.0-only"
      },
      "node_modules/@uma/core/contracts/data-verification-mechanism/test/MockOracleAncillary.sol": {
        "keccak256": "0x5ee630bcd6467ad0077f2d61baf77c59b7cf581a2c00fe816910d98b013ad0aa",
        "urls": [
          "bzz-raw://f525c98da45397f68920ef61b8f9ac512690cb46f4192b4a50edfd6b49ad5199",
          "dweb:/ipfs/Qma2mSJu2XHXbzhkwbyRmoJcdnwE3w2N8pTiBkt9u9dwzd"
        ],
        "license": "AGPL-3.0-only"
      },
      "node_modules/@uma/core/contracts/optimistic-oracle-v3/implementation/ClaimData.sol": {
        "keccak256": "0x6e887a70326e5ede4a8c5002d4123a8c77b477ce58cf92533c38cd3dc6142cb5",
        "urls": [
          "bzz-raw://bdafa7c59d0825da944c46664bddb1203bb4158dd0e1ddd6bbdeb276e66be0f8",
          "dweb:/ipfs/QmVb496JWqBib55HX6G3iPkAMv64Bj2UDegeVEYiNcYuDZ"
        ],
        "license": "AGPL-3.0-only"
      },
      "node_modules/@uma/core/contracts/optimistic-oracle-v3/implementation/OptimisticOracleV3.sol": {
        "keccak256": "0xeba5082c48c3d891f2422b8c0d1d5d6552ab47b5d538db7ff05ffb2f3db25ffc",
        "urls": [
          "bzz-raw://d818630e1c094792613a0539aa0a7677ca8fa92a5308eaf4ff7cf8ea8a4c547e",
          "dweb:/ipfs/QmSM78A3afY6osh4VAmyJX2E4Qyg4qcY1KwY5uFnSK4Yia"
        ],
        "license": "AGPL-3.0-only"
      },
      "node_modules/@uma/core/contracts/optimistic-oracle-v3/implementation/test/AssertingCallerTest.sol": {
        "keccak256": "0x212dafde3707bc594b103f3baef2612e521d5cced481d81938938cc5c6fc4068",
        "urls": [
          "bzz-raw://21e87397b59f9529a3e9ed9ef821f83f1a73bf685c2ec37dc70a2fbfc79aa441",
          "dweb:/ipfs/QmRmBzN3ztihHgeHzir1tz2MGsCrLM2Krc7ozQ4MiQe8jt"
        ],
        "license": "AGPL-3.0-only"
      },
      "node_modules/@uma/core/contracts/optimistic-oracle-v3/implementation/test/OptimisticOracleV3Test.sol": {
        "keccak256": "0xdb817afdd3c786d21ac8dede8e97452905d0ba84f444949cf6f92f77e8c2a38e",
        "urls": [
          "bzz-raw://f88474c7ac47ad72196818aa1d77d3b4bccac18ec77ae008ed53ec48c18f4fee",
          "dweb:/ipfs/QmPxsszotngGGDBv6vCE1kANMtgX8fLD6Xv7YwtZsUKqJQ"
        ],
        "license": "AGPL-3.0-only"
      },
      "node_modules/@uma/core/contracts/optimistic-oracle-v3/interfaces/EscalationManagerInterface.sol": {
        "keccak256": "0xce31adf62ae47468bab181bf1137b05e8ac0a003f019c343ac137a76ea32efc7",
        "urls": [
          "bzz-raw://eb1b93b648adf4130fdfe7a62d817cda0519e7760a50b90f16a3c46cee4c0967",
          "dweb:/ipfs/QmNPD4TRAm9kqqQDKQabqZgaorkJNov96iLgxsm5HRTSZN"
        ],
        "license": "AGPL-3.0-only"
      },
      "node_modules/@uma/core/contracts/optimistic-oracle-v3/interfaces/OptimisticOracleV3CallbackRecipientInterface.sol": {
        "keccak256": "0x79f90bc84ed5d394380e99f0a5d1b219abd9016bc3a02fad0099014af08af03e",
        "urls": [
          "bzz-raw://dc1b7b847eb711750bc76ab45a13294b05fc09e361294a6bdffb90cb15f50b63",
          "dweb:/ipfs/QmQSs2R7mmGojGdNkqP75Vf7LajRkfJ1oGuYAUCHYGmPEQ"
        ],
        "license": "AGPL-3.0-only"
      },
      "node_modules/@uma/core/contracts/optimistic-oracle-v3/interfaces/OptimisticOracleV3Interface.sol": {
        "keccak256": "0xf31322bfd64854f0bfa92051d6ec711c1eed15d8042f394f5c24c05378218367",
        "urls": [
          "bzz-raw://535bc2a6060e86a49524fd3c0062afcf83077530cefb3c1b8179b832f03ca81e",
          "dweb:/ipfs/QmQZhqn6oUiebSWEKbqcmiMGkqAb8B59WsRAyFU8WY84ct"
        ],
        "license": "AGPL-3.0-only"
      },
      "test/DataAsserter.t.sol": {
        "keccak256": "0x274543b8d84ff2ca965c7acbe3d7f5be4188428f196ee8cf78b1333c53182963",
        "urls": [
          "bzz-raw://e36218e8f542c42305323aaaf7b7b1bbf43d7978faa23cf5d2b5e106a113cd1e",
          "dweb:/ipfs/QmWFN51bHJzddxuSqsC3o4NHMSNh53oBtcWiXvYZHnr65h"
        ],
        "license": "AGPL-3.0-only"
      },
      "test/common/CommonOptimisticOracleV3Test.sol": {
        "keccak256": "0xef9f5c2c5c37257681e697148b5f724bc9a683e801be4803c555625edee60d5b",
        "urls": [
          "bzz-raw://35278764f5977e9f0161420f35681121958d409f5fe2a1299b1c7ad930e27467",
          "dweb:/ipfs/QmcNrmrzpGYyRzLbkKnrj8HBVH8qLeZSrcRiRDHbiqCoPe"
        ],
        "license": "AGPL-3.0-only"
      },
      "test/fixtures/common/CommonTestBase.sol": {
        "keccak256": "0xef45684397f61b92c77ef51e8a23579bca93a332c784e5b2f4e2a3c9343f9b50",
        "urls": [
          "bzz-raw://8a35ad0d9814f198b93e72031517350fc230a2d4ad20fa05a805bd4abc4adc75",
          "dweb:/ipfs/QmbNJoPfRsFstJV5S1jMCzMwCN7qvFzc631PSSMPnQnBno"
        ],
        "license": "AGPL-3.0-only"
      },
      "test/fixtures/common/TestAddress.sol": {
        "keccak256": "0x30f53e79e844909966fa5b92246c74d8585ff5d540f099c7a99461cc6ebf9d99",
        "urls": [
          "bzz-raw://8e58f9210e67b7efdb5633d9d67834ec5b52c5b48de0e0388b0ecd8f5853227b",
          "dweb:/ipfs/QmZaTBTkBx3QYPBzhRMb7nTdhfZCctwmrAVL9hST6Xw3bn"
        ],
        "license": "AGPL-3.0-only"
      },
      "test/fixtures/common/TimerFixture.sol": {
        "keccak256": "0x9f0b735cb4d2d494d670be9875082c9e7944e4e9e1989a99524b9dffbddeb9cb",
        "urls": [
          "bzz-raw://a2e53b878c9f8bdc88cb91cfb1b1631d1fec6d7c3009a1954e3215989c05d937",
          "dweb:/ipfs/QmRSi291avEMxygy47inL8VXCyJ4PSgqvx9iRZwbo19rnx"
        ],
        "license": null
      },
      "test/fixtures/dvm/BaseDvmFixture.sol": {
        "keccak256": "0x84d096fe2fe9c507a772831db59b3b4ad023c791ca5334c4c6ac29c03854d56a",
        "urls": [
          "bzz-raw://bbcf3381ac7b375c93d734d9591a6cb1fb0ba8445e3d141e36d809b97e8e46ff",
          "dweb:/ipfs/QmczTUkTzjcFM9kCHbcKpK6gdxChsABaFBSz8tsFkrU4fZ"
        ],
        "license": null
      },
      "test/fixtures/dvm/MockDvmFixture.sol": {
        "keccak256": "0xde8cfa220b09bb8576733acff3ff12989753698743b25b3b51ccdb84a009c5b1",
        "urls": [
          "bzz-raw://b436588048b11b68fa27a4bab1e2623ee0a3102d46e28d67ea8fae4989661512",
          "dweb:/ipfs/QmZU56VYo9cpyBNv8hLadNJAj4jNWFxQJJQgV3NpPcTgd2"
        ],
        "license": null
      },
      "test/fixtures/optimistic-oracle-v3/OptimisticOracleV3Fixture.sol": {
        "keccak256": "0x4dbc410556ebf8c68d4053e40df6ced58c3ad2bcd3c7b07a38d6e45db64f6a9f",
        "urls": [
          "bzz-raw://e1c1f054e8fe6207a132b2c101f3a103cc2527f2edfc52fcec465f1f45e8bdd3",
          "dweb:/ipfs/QmYqFoT2H2hXGpqFs6yBRCbJ8tyBwHekWvqFFsKvfSwKLf"
        ],
        "license": "AGPL-3.0-only"
      }
    },
    "version": 1
  },
  "ast": {
    "absolutePath": "test/DataAsserter.t.sol",
    "id": 55450,
    "exportedSymbols": {
      "Address": [
        46393
      ],
      "AddressWhitelist": [
        47212
      ],
      "AddressWhitelistInterface": [
        50542
      ],
      "AncillaryData": [
        47620
      ],
      "AssertingCallerTest": [
        53085
      ],
      "BaseDvmFixture": [
        56635
      ],
      "BaseDvmFixtureTest": [
        56711
      ],
      "ClaimData": [
        47620
      ],
      "CommonOptimisticOracleV3Test": [
        56436
      ],
      "CommonTestBase": [
        56443
      ],
      "Context": [
        46415
      ],
      "DSTest": [
        4021
      ],
      "DataAsserter": [
        1729
      ],
      "DataAsserterTest": [
        55449
      ],
      "ERC20": [
        45771
      ],
      "EscalationManagerInterface": [
        53189
      ],
      "Exclusive": [
        49705
      ],
      "ExpandedERC20": [
        47843
      ],
      "ExpandedIERC20": [
        50590
      ],
      "Finder": [
        50715
      ],
      "FinderInterface": [
        51164
      ],
      "FixedPoint": [
        49476
      ],
      "IERC20": [
        45849
      ],
      "IERC20Metadata": [
        45874
      ],
      "IdentifierWhitelist": [
        50802
      ],
      "IdentifierWhitelistInterface": [
        51188
      ],
      "Lockable": [
        49553
      ],
      "MockDvmFixture": [
        56808
      ],
      "MockDvmFixtureTest": [
        56906
      ],
      "MockOracleAncillary": [
        51701
      ],
      "MultiCaller": [
        49632
      ],
      "MultiRole": [
        50257
      ],
      "OptimisticOracleConstraints": [
        50644
      ],
      "OptimisticOracleV3": [
        53002
      ],
      "OptimisticOracleV3CallbackRecipientInterface": [
        53207
      ],
      "OptimisticOracleV3Fixture": [
        57057
      ],
      "OptimisticOracleV3FixtureTest": [
        57132
      ],
      "OptimisticOracleV3Interface": [
        53397
      ],
      "OptimisticOracleV3Test": [
        53132
      ],
      "OracleAncillaryInterface": [
        51226
      ],
      "OracleInterfaces": [
        50639
      ],
      "Ownable": [
        45183
      ],
      "SafeERC20": [
        46098
      ],
      "SafeMath": [
        46930
      ],
      "Shared": [
        49801
      ],
      "SignedSafeMath": [
        46994
      ],
      "StdAssertions": [
        5514
      ],
      "StdChains": [
        6252
      ],
      "StdCheats": [
        9105
      ],
      "StdInvariant": [
        9430
      ],
      "StdStorage": [
        10196
      ],
      "StdStyle": [
        13046
      ],
      "StdUtils": [
        13894
      ],
      "Store": [
        51144
      ],
      "StoreInterface": [
        51271
      ],
      "Strings": [
        46618
      ],
      "Test": [
        13945
      ],
      "TestAddress": [
        56476
      ],
      "TestBase": [
        4087
      ],
      "Testable": [
        50330
      ],
      "TestnetERC20": [
        50382
      ],
      "Timer": [
        50417
      ],
      "TimerFixture": [
        56492
      ],
      "Vm": [
        15651
      ],
      "Withdrawable": [
        50516
      ],
      "console": [
        23715
      ],
      "console2": [
        31840
      ],
      "safeconsole": [
        45078
      ],
      "stdError": [
        9171
      ],
      "stdJson": [
        10022
      ],
      "stdMath": [
        10164
      ],
      "stdStorage": [
        11835
      ]
    },
    "nodeType": "SourceUnit",
    "src": "42:6388:64",
    "nodes": [
      {
        "id": 54898,
        "nodeType": "PragmaDirective",
        "src": "42:24:64",
        "nodes": [],
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".12"
        ]
      },
      {
        "id": 54899,
        "nodeType": "ImportDirective",
        "src": "67:51:64",
        "nodes": [],
        "absolutePath": "test/common/CommonOptimisticOracleV3Test.sol",
        "file": "./common/CommonOptimisticOracleV3Test.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 55450,
        "sourceUnit": 56437,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 54900,
        "nodeType": "ImportDirective",
        "src": "119:39:64",
        "nodes": [],
        "absolutePath": "contracts/DataAsserter.sol",
        "file": "../contracts/DataAsserter.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 55450,
        "sourceUnit": 1730,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 54901,
        "nodeType": "ImportDirective",
        "src": "159:31:64",
        "nodes": [],
        "absolutePath": "lib/forge-std/src/console.sol",
        "file": "forge-std/console.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 55450,
        "sourceUnit": 23716,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 55449,
        "nodeType": "ContractDefinition",
        "src": "192:6238:64",
        "nodes": [
          {
            "id": 54906,
            "nodeType": "VariableDeclaration",
            "src": "256:32:64",
            "nodes": [],
            "constant": false,
            "functionSelector": "9ffe3323",
            "mutability": "mutable",
            "name": "dataAsserter",
            "nameLocation": "276:12:64",
            "scope": 55449,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_DataAsserter_$1729",
              "typeString": "contract DataAsserter"
            },
            "typeName": {
              "id": 54905,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 54904,
                "name": "DataAsserter",
                "nameLocations": [
                  "256:12:64"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 1729,
                "src": "256:12:64"
              },
              "referencedDeclaration": 1729,
              "src": "256:12:64",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_DataAsserter_$1729",
                "typeString": "contract DataAsserter"
              }
            },
            "visibility": "public"
          },
          {
            "id": 54912,
            "nodeType": "VariableDeclaration",
            "src": "294:34:64",
            "nodes": [],
            "constant": false,
            "mutability": "mutable",
            "name": "dataId",
            "nameLocation": "302:6:64",
            "scope": 55449,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bytes32",
              "typeString": "bytes32"
            },
            "typeName": {
              "id": 54907,
              "name": "bytes32",
              "nodeType": "ElementaryTypeName",
              "src": "294:7:64",
              "typeDescriptions": {
                "typeIdentifier": "t_bytes32",
                "typeString": "bytes32"
              }
            },
            "value": {
              "arguments": [
                {
                  "hexValue": "646174614964",
                  "id": 54910,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "string",
                  "lValueRequested": false,
                  "nodeType": "Literal",
                  "src": "319:8:64",
                  "typeDescriptions": {
                    "typeIdentifier": "t_stringliteral_2f5e0ddad6362c20dd696e014ec759a1e9be5e1bd2420f429864343e67cedac5",
                    "typeString": "literal_string \"dataId\""
                  },
                  "value": "dataId"
                }
              ],
              "expression": {
                "argumentTypes": [
                  {
                    "typeIdentifier": "t_stringliteral_2f5e0ddad6362c20dd696e014ec759a1e9be5e1bd2420f429864343e67cedac5",
                    "typeString": "literal_string \"dataId\""
                  }
                ],
                "id": 54909,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "lValueRequested": false,
                "nodeType": "ElementaryTypeNameExpression",
                "src": "311:7:64",
                "typeDescriptions": {
                  "typeIdentifier": "t_type$_t_bytes32_$",
                  "typeString": "type(bytes32)"
                },
                "typeName": {
                  "id": 54908,
                  "name": "bytes32",
                  "nodeType": "ElementaryTypeName",
                  "src": "311:7:64",
                  "typeDescriptions": {}
                }
              },
              "id": 54911,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "typeConversion",
              "lValueRequested": false,
              "nameLocations": [],
              "names": [],
              "nodeType": "FunctionCall",
              "src": "311:17:64",
              "tryCall": false,
              "typeDescriptions": {
                "typeIdentifier": "t_bytes32",
                "typeString": "bytes32"
              }
            },
            "visibility": "internal"
          },
          {
            "id": 54915,
            "nodeType": "VariableDeclaration",
            "src": "334:34:64",
            "nodes": [],
            "constant": false,
            "mutability": "mutable",
            "name": "correctData",
            "nameLocation": "341:11:64",
            "scope": 55449,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_string_storage",
              "typeString": "string"
            },
            "typeName": {
              "id": 54913,
              "name": "string",
              "nodeType": "ElementaryTypeName",
              "src": "334:6:64",
              "typeDescriptions": {
                "typeIdentifier": "t_string_storage_ptr",
                "typeString": "string"
              }
            },
            "value": {
              "hexValue": "636f727265637444617461",
              "id": 54914,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "string",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "355:13:64",
              "typeDescriptions": {
                "typeIdentifier": "t_stringliteral_85fd475c7695d921b3111dac4176cb3c71f5237b3ce7ae623d4091d8217e4885",
                "typeString": "literal_string \"correctData\""
              },
              "value": "correctData"
            },
            "visibility": "internal"
          },
          {
            "id": 54918,
            "nodeType": "VariableDeclaration",
            "src": "374:38:64",
            "nodes": [],
            "constant": false,
            "mutability": "mutable",
            "name": "incorrectData",
            "nameLocation": "381:13:64",
            "scope": 55449,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_string_storage",
              "typeString": "string"
            },
            "typeName": {
              "id": 54916,
              "name": "string",
              "nodeType": "ElementaryTypeName",
              "src": "374:6:64",
              "typeDescriptions": {
                "typeIdentifier": "t_string_storage_ptr",
                "typeString": "string"
              }
            },
            "value": {
              "hexValue": "696e636f727265637444617461",
              "id": 54917,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "string",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "397:15:64",
              "typeDescriptions": {
                "typeIdentifier": "t_stringliteral_7e22fbf3638db7ef028e0dca114a4b3f95683af7e6c9204f2273f833b9c1f159",
                "typeString": "literal_string \"incorrectData\""
              },
              "value": "incorrectData"
            },
            "visibility": "internal"
          },
          {
            "id": 54921,
            "nodeType": "VariableDeclaration",
            "src": "418:35:64",
            "nodes": [],
            "constant": false,
            "mutability": "mutable",
            "name": "description_",
            "nameLocation": "425:12:64",
            "scope": 55449,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_string_storage",
              "typeString": "string"
            },
            "typeName": {
              "id": 54919,
              "name": "string",
              "nodeType": "ElementaryTypeName",
              "src": "418:6:64",
              "typeDescriptions": {
                "typeIdentifier": "t_string_storage_ptr",
                "typeString": "string"
              }
            },
            "value": {
              "hexValue": "6465736372697074696f6e",
              "id": 54920,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "string",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "440:13:64",
              "typeDescriptions": {
                "typeIdentifier": "t_stringliteral_1596dc38e2ac5a6ddc5e019af4adcc1e017a04f510d57e69d6879d5d2996bb8e",
                "typeString": "literal_string \"description\""
              },
              "value": "description"
            },
            "visibility": "internal"
          },
          {
            "id": 54943,
            "nodeType": "FunctionDefinition",
            "src": "461:151:64",
            "nodes": [],
            "body": {
              "id": 54942,
              "nodeType": "Block",
              "src": "485:127:64",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 54924,
                      "name": "_commonSetup",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 55901,
                      "src": "495:12:64",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 54925,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "495:14:64",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 54926,
                  "nodeType": "ExpressionStatement",
                  "src": "495:14:64"
                },
                {
                  "expression": {
                    "id": 54940,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 54927,
                      "name": "dataAsserter",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 54906,
                      "src": "519:12:64",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_DataAsserter_$1729",
                        "typeString": "contract DataAsserter"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "id": 54933,
                              "name": "defaultCurrency",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 55701,
                              "src": "559:15:64",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_TestnetERC20_$50382",
                                "typeString": "contract TestnetERC20"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_TestnetERC20_$50382",
                                "typeString": "contract TestnetERC20"
                              }
                            ],
                            "id": 54932,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "551:7:64",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 54931,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "551:7:64",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 54934,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "551:24:64",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        {
                          "arguments": [
                            {
                              "id": 54937,
                              "name": "optimisticOracleV3",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 55698,
                              "src": "585:18:64",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_OptimisticOracleV3_$53002",
                                "typeString": "contract OptimisticOracleV3"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_OptimisticOracleV3_$53002",
                                "typeString": "contract OptimisticOracleV3"
                              }
                            ],
                            "id": 54936,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "577:7:64",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 54935,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "577:7:64",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 54938,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "577:27:64",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 54930,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "NewExpression",
                        "src": "534:16:64",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_creation_nonpayable$_t_address_$_t_address_$returns$_t_contract$_DataAsserter_$1729_$",
                          "typeString": "function (address,address) returns (contract DataAsserter)"
                        },
                        "typeName": {
                          "id": 54929,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 54928,
                            "name": "DataAsserter",
                            "nameLocations": [
                              "538:12:64"
                            ],
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 1729,
                            "src": "538:12:64"
                          },
                          "referencedDeclaration": 1729,
                          "src": "538:12:64",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_DataAsserter_$1729",
                            "typeString": "contract DataAsserter"
                          }
                        }
                      },
                      "id": 54939,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "534:71:64",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_DataAsserter_$1729",
                        "typeString": "contract DataAsserter"
                      }
                    },
                    "src": "519:86:64",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_DataAsserter_$1729",
                      "typeString": "contract DataAsserter"
                    }
                  },
                  "id": 54941,
                  "nodeType": "ExpressionStatement",
                  "src": "519:86:64"
                }
              ]
            },
            "functionSelector": "0a9254e4",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "setUp",
            "nameLocation": "470:5:64",
            "parameters": {
              "id": 54922,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "475:2:64"
            },
            "returnParameters": {
              "id": 54923,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "485:0:64"
            },
            "scope": 55449,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 55101,
            "nodeType": "FunctionDefinition",
            "src": "618:1760:64",
            "nodes": [],
            "body": {
              "id": 55100,
              "nodeType": "Block",
              "src": "664:1714:64",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 54949,
                          "name": "TestAddress",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 56476,
                          "src": "712:11:64",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_TestAddress_$56476_$",
                            "typeString": "type(library TestAddress)"
                          }
                        },
                        "id": 54950,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "memberLocation": "724:8:64",
                        "memberName": "account1",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 56457,
                        "src": "712:20:64",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 54946,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4080,
                        "src": "698:2:64",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$15651",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 54948,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "701:10:64",
                      "memberName": "startPrank",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 15317,
                      "src": "698:13:64",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 54951,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "698:35:64",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 54952,
                  "nodeType": "ExpressionStatement",
                  "src": "698:35:64"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 54956,
                          "name": "TestAddress",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 56476,
                          "src": "770:11:64",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_TestAddress_$56476_$",
                            "typeString": "type(library TestAddress)"
                          }
                        },
                        "id": 54957,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "memberLocation": "782:8:64",
                        "memberName": "account1",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 56457,
                        "src": "770:20:64",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "id": 54962,
                                "name": "defaultCurrency",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 55701,
                                "src": "834:15:64",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_TestnetERC20_$50382",
                                  "typeString": "contract TestnetERC20"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_TestnetERC20_$50382",
                                  "typeString": "contract TestnetERC20"
                                }
                              ],
                              "id": 54961,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "826:7:64",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 54960,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "826:7:64",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 54963,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "826:24:64",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 54958,
                            "name": "optimisticOracleV3",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 55698,
                            "src": "792:18:64",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_OptimisticOracleV3_$53002",
                              "typeString": "contract OptimisticOracleV3"
                            }
                          },
                          "id": 54959,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "811:14:64",
                          "memberName": "getMinimumBond",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 52562,
                          "src": "792:33:64",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (address) view external returns (uint256)"
                          }
                        },
                        "id": 54964,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "792:59:64",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 54953,
                        "name": "defaultCurrency",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 55701,
                        "src": "743:15:64",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_TestnetERC20_$50382",
                          "typeString": "contract TestnetERC20"
                        }
                      },
                      "id": 54955,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "759:10:64",
                      "memberName": "allocateTo",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 50381,
                      "src": "743:26:64",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256) external"
                      }
                    },
                    "id": 54965,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "743:109:64",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 54966,
                  "nodeType": "ExpressionStatement",
                  "src": "743:109:64"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 54972,
                            "name": "dataAsserter",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 54906,
                            "src": "894:12:64",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_DataAsserter_$1729",
                              "typeString": "contract DataAsserter"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_DataAsserter_$1729",
                              "typeString": "contract DataAsserter"
                            }
                          ],
                          "id": 54971,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "886:7:64",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 54970,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "886:7:64",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 54973,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "886:21:64",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "id": 54978,
                                "name": "defaultCurrency",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 55701,
                                "src": "951:15:64",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_TestnetERC20_$50382",
                                  "typeString": "contract TestnetERC20"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_TestnetERC20_$50382",
                                  "typeString": "contract TestnetERC20"
                                }
                              ],
                              "id": 54977,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "943:7:64",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 54976,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "943:7:64",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 54979,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "943:24:64",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 54974,
                            "name": "optimisticOracleV3",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 55698,
                            "src": "909:18:64",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_OptimisticOracleV3_$53002",
                              "typeString": "contract OptimisticOracleV3"
                            }
                          },
                          "id": 54975,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "928:14:64",
                          "memberName": "getMinimumBond",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 52562,
                          "src": "909:33:64",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (address) view external returns (uint256)"
                          }
                        },
                        "id": 54980,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "909:59:64",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 54967,
                        "name": "defaultCurrency",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 55701,
                        "src": "862:15:64",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_TestnetERC20_$50382",
                          "typeString": "contract TestnetERC20"
                        }
                      },
                      "id": 54969,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "878:7:64",
                      "memberName": "approve",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 45350,
                      "src": "862:23:64",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,uint256) external returns (bool)"
                      }
                    },
                    "id": 54981,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "862:107:64",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 54982,
                  "nodeType": "ExpressionStatement",
                  "src": "862:107:64"
                },
                {
                  "assignments": [
                    54984
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 54984,
                      "mutability": "mutable",
                      "name": "assertionId",
                      "nameLocation": "987:11:64",
                      "nodeType": "VariableDeclaration",
                      "scope": 55100,
                      "src": "979:19:64",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 54983,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "979:7:64",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 54991,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 54987,
                        "name": "dataId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 54912,
                        "src": "1028:6:64",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "id": 54988,
                        "name": "correctData",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 54915,
                        "src": "1036:11:64",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_storage",
                          "typeString": "string storage ref"
                        }
                      },
                      {
                        "id": 54989,
                        "name": "description_",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 54921,
                        "src": "1049:12:64",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_storage",
                          "typeString": "string storage ref"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_string_storage",
                          "typeString": "string storage ref"
                        },
                        {
                          "typeIdentifier": "t_string_storage",
                          "typeString": "string storage ref"
                        }
                      ],
                      "expression": {
                        "id": 54985,
                        "name": "dataAsserter",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 54906,
                        "src": "1001:12:64",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_DataAsserter_$1729",
                          "typeString": "contract DataAsserter"
                        }
                      },
                      "id": 54986,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "1014:13:64",
                      "memberName": "assertDataFor",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1632,
                      "src": "1001:26:64",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_bytes32_$_t_string_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes32_$",
                        "typeString": "function (bytes32,string memory,string memory) external returns (bytes32)"
                      }
                    },
                    "id": 54990,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1001:61:64",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "979:83:64"
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 54992,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4080,
                        "src": "1072:2:64",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$15651",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 54994,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "1075:9:64",
                      "memberName": "stopPrank",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 15334,
                      "src": "1072:12:64",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$__$returns$__$",
                        "typeString": "function () external"
                      }
                    },
                    "id": 54995,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1072:14:64",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 54996,
                  "nodeType": "ExpressionStatement",
                  "src": "1072:14:64"
                },
                {
                  "assignments": [
                    54998
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 54998,
                      "mutability": "mutable",
                      "name": "balancesBeforeAssertion",
                      "nameLocation": "1214:23:64",
                      "nodeType": "VariableDeclaration",
                      "scope": 55100,
                      "src": "1206:31:64",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 54997,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "1206:7:64",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 55006,
                  "initialValue": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 55003,
                          "name": "TestAddress",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 56476,
                          "src": "1280:11:64",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_TestAddress_$56476_$",
                            "typeString": "type(library TestAddress)"
                          }
                        },
                        "id": 55004,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "memberLocation": "1292:8:64",
                        "memberName": "account1",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 56457,
                        "src": "1280:20:64",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "expression": {
                            "id": 54999,
                            "name": "dataAsserter",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 54906,
                            "src": "1240:12:64",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_DataAsserter_$1729",
                              "typeString": "contract DataAsserter"
                            }
                          },
                          "id": 55000,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "1253:14:64",
                          "memberName": "validatorToken",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 1364,
                          "src": "1240:27:64",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$__$returns$_t_contract$_ExpandedERC20_$47843_$",
                            "typeString": "function () view external returns (contract ExpandedERC20)"
                          }
                        },
                        "id": 55001,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1240:29:64",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ExpandedERC20_$47843",
                          "typeString": "contract ExpandedERC20"
                        }
                      },
                      "id": 55002,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "1270:9:64",
                      "memberName": "balanceOf",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 45282,
                      "src": "1240:39:64",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) view external returns (uint256)"
                      }
                    },
                    "id": 55005,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1240:61:64",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1206:95:64"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 55010,
                          "name": "TestAddress",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 56476,
                          "src": "1320:11:64",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_TestAddress_$56476_$",
                            "typeString": "type(library TestAddress)"
                          }
                        },
                        "id": 55011,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "memberLocation": "1332:8:64",
                        "memberName": "account1",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 56457,
                        "src": "1320:20:64",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 55007,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4080,
                        "src": "1311:2:64",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$15651",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 55009,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "1314:5:64",
                      "memberName": "prank",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 15312,
                      "src": "1311:8:64",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 55012,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1311:30:64",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 55013,
                  "nodeType": "ExpressionStatement",
                  "src": "1311:30:64"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "expression": {
                            "id": 55015,
                            "name": "dataAsserter",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 54906,
                            "src": "1360:12:64",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_DataAsserter_$1729",
                              "typeString": "contract DataAsserter"
                            }
                          },
                          "id": 55016,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "1373:17:64",
                          "memberName": "checkTokenBalance",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 1644,
                          "src": "1360:30:64",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$",
                            "typeString": "function () view external returns (uint256)"
                          }
                        },
                        "id": 55017,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1360:32:64",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "30",
                        "id": 55018,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1393:1:64",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        }
                      ],
                      "id": 55014,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4215,
                        4240,
                        4253,
                        4269,
                        4311,
                        4353,
                        4395,
                        4432,
                        4469,
                        4506,
                        2050,
                        2075,
                        2105,
                        2130,
                        2189,
                        2214,
                        2244,
                        2269,
                        3742,
                        3777
                      ],
                      "referencedDeclaration": 2244,
                      "src": "1351:8:64",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 55019,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1351:44:64",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 55020,
                  "nodeType": "ExpressionStatement",
                  "src": "1351:44:64"
                },
                {
                  "assignments": [
                    55022,
                    55024,
                    55026
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 55022,
                      "mutability": "mutable",
                      "name": "dataAvailable",
                      "nameLocation": "1490:13:64",
                      "nodeType": "VariableDeclaration",
                      "scope": 55100,
                      "src": "1485:18:64",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 55021,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "1485:4:64",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 55024,
                      "mutability": "mutable",
                      "name": "dataPath",
                      "nameLocation": "1519:8:64",
                      "nodeType": "VariableDeclaration",
                      "scope": 55100,
                      "src": "1505:22:64",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string"
                      },
                      "typeName": {
                        "id": 55023,
                        "name": "string",
                        "nodeType": "ElementaryTypeName",
                        "src": "1505:6:64",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_storage_ptr",
                          "typeString": "string"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 55026,
                      "mutability": "mutable",
                      "name": "description",
                      "nameLocation": "1543:11:64",
                      "nodeType": "VariableDeclaration",
                      "scope": 55100,
                      "src": "1529:25:64",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string"
                      },
                      "typeName": {
                        "id": 55025,
                        "name": "string",
                        "nodeType": "ElementaryTypeName",
                        "src": "1529:6:64",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_storage_ptr",
                          "typeString": "string"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 55031,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 55029,
                        "name": "assertionId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 54984,
                        "src": "1579:11:64",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      ],
                      "expression": {
                        "id": 55027,
                        "name": "dataAsserter",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 54906,
                        "src": "1558:12:64",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_DataAsserter_$1729",
                          "typeString": "contract DataAsserter"
                        }
                      },
                      "id": 55028,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "1571:7:64",
                      "memberName": "getData",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1509,
                      "src": "1558:20:64",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_bytes32_$returns$_t_bool_$_t_string_memory_ptr_$_t_string_memory_ptr_$",
                        "typeString": "function (bytes32) view external returns (bool,string memory,string memory)"
                      }
                    },
                    "id": 55030,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1558:33:64",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_bool_$_t_string_memory_ptr_$_t_string_memory_ptr_$",
                      "typeString": "tuple(bool,string memory,string memory)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1484:107:64"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 55033,
                        "name": "dataAvailable",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 55022,
                        "src": "1613:13:64",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 55032,
                      "name": "assertFalse",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4165,
                        4179
                      ],
                      "referencedDeclaration": 4165,
                      "src": "1601:11:64",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bool_$returns$__$",
                        "typeString": "function (bool)"
                      }
                    },
                    "id": 55034,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1601:26:64",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 55035,
                  "nodeType": "ExpressionStatement",
                  "src": "1601:26:64"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 55045,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "expression": {
                              "id": 55039,
                              "name": "timer",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 55704,
                              "src": "1726:5:64",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_Timer_$50417",
                                "typeString": "contract Timer"
                              }
                            },
                            "id": 55040,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "1732:14:64",
                            "memberName": "getCurrentTime",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 50416,
                            "src": "1726:20:64",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$",
                              "typeString": "function () view external returns (uint256)"
                            }
                          },
                          "id": 55041,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1726:22:64",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "+",
                        "rightExpression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "expression": {
                              "id": 55042,
                              "name": "dataAsserter",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 54906,
                              "src": "1751:12:64",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_DataAsserter_$1729",
                                "typeString": "contract DataAsserter"
                              }
                            },
                            "id": 55043,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberLocation": "1764:17:64",
                            "memberName": "assertionLiveness",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1370,
                            "src": "1751:30:64",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$__$returns$_t_uint64_$",
                              "typeString": "function () view external returns (uint64)"
                            }
                          },
                          "id": 55044,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1751:32:64",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint64",
                            "typeString": "uint64"
                          }
                        },
                        "src": "1726:57:64",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 55036,
                        "name": "timer",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 55704,
                        "src": "1705:5:64",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Timer_$50417",
                          "typeString": "contract Timer"
                        }
                      },
                      "id": 55038,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "1711:14:64",
                      "memberName": "setCurrentTime",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 50407,
                      "src": "1705:20:64",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256) external"
                      }
                    },
                    "id": 55046,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1705:79:64",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 55047,
                  "nodeType": "ExpressionStatement",
                  "src": "1705:79:64"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 55051,
                        "name": "assertionId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 54984,
                        "src": "1863:11:64",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      ],
                      "expression": {
                        "id": 55048,
                        "name": "optimisticOracleV3",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 55698,
                        "src": "1828:18:64",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_OptimisticOracleV3_$53002",
                          "typeString": "contract OptimisticOracleV3"
                        }
                      },
                      "id": 55050,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "1847:15:64",
                      "memberName": "settleAssertion",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 52390,
                      "src": "1828:34:64",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_bytes32_$returns$__$",
                        "typeString": "function (bytes32) external"
                      }
                    },
                    "id": 55052,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1828:47:64",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 55053,
                  "nodeType": "ExpressionStatement",
                  "src": "1828:47:64"
                },
                {
                  "expression": {
                    "id": 55062,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "components": [
                        {
                          "id": 55054,
                          "name": "dataAvailable",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 55022,
                          "src": "1928:13:64",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        {
                          "id": 55055,
                          "name": "dataPath",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 55024,
                          "src": "1943:8:64",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_memory_ptr",
                            "typeString": "string memory"
                          }
                        },
                        {
                          "id": 55056,
                          "name": "description",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 55026,
                          "src": "1953:11:64",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_memory_ptr",
                            "typeString": "string memory"
                          }
                        }
                      ],
                      "id": 55057,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "TupleExpression",
                      "src": "1927:38:64",
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$_t_bool_$_t_string_memory_ptr_$_t_string_memory_ptr_$",
                        "typeString": "tuple(bool,string memory,string memory)"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 55060,
                          "name": "assertionId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 54984,
                          "src": "1989:11:64",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        ],
                        "expression": {
                          "id": 55058,
                          "name": "dataAsserter",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 54906,
                          "src": "1968:12:64",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_DataAsserter_$1729",
                            "typeString": "contract DataAsserter"
                          }
                        },
                        "id": 55059,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "1981:7:64",
                        "memberName": "getData",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 1509,
                        "src": "1968:20:64",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_view$_t_bytes32_$returns$_t_bool_$_t_string_memory_ptr_$_t_string_memory_ptr_$",
                          "typeString": "function (bytes32) view external returns (bool,string memory,string memory)"
                        }
                      },
                      "id": 55061,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1968:33:64",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$_t_bool_$_t_string_memory_ptr_$_t_string_memory_ptr_$",
                        "typeString": "tuple(bool,string memory,string memory)"
                      }
                    },
                    "src": "1927:74:64",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 55063,
                  "nodeType": "ExpressionStatement",
                  "src": "1927:74:64"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 55065,
                        "name": "dataAvailable",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 55022,
                        "src": "2022:13:64",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 55064,
                      "name": "assertTrue",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        1999,
                        2020
                      ],
                      "referencedDeclaration": 1999,
                      "src": "2011:10:64",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bool_$returns$__$",
                        "typeString": "function (bool)"
                      }
                    },
                    "id": 55066,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2011:25:64",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 55067,
                  "nodeType": "ExpressionStatement",
                  "src": "2011:25:64"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 55069,
                        "name": "dataPath",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 55024,
                        "src": "2055:8:64",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      {
                        "id": 55070,
                        "name": "correctData",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 54915,
                        "src": "2065:11:64",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_storage",
                          "typeString": "string storage ref"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        },
                        {
                          "typeIdentifier": "t_string_storage",
                          "typeString": "string storage ref"
                        }
                      ],
                      "id": 55068,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4215,
                        4240,
                        4253,
                        4269,
                        4311,
                        4353,
                        4395,
                        4432,
                        4469,
                        4506,
                        2050,
                        2075,
                        2105,
                        2130,
                        2189,
                        2214,
                        2244,
                        2269,
                        3742,
                        3777
                      ],
                      "referencedDeclaration": 3742,
                      "src": "2046:8:64",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_string_memory_ptr_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (string memory,string memory)"
                      }
                    },
                    "id": 55071,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2046:31:64",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 55072,
                  "nodeType": "ExpressionStatement",
                  "src": "2046:31:64"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "expression": {
                              "id": 55078,
                              "name": "TestAddress",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 56476,
                              "src": "2204:11:64",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_TestAddress_$56476_$",
                                "typeString": "type(library TestAddress)"
                              }
                            },
                            "id": 55079,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberLocation": "2216:8:64",
                            "memberName": "account1",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 56457,
                            "src": "2204:20:64",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "expression": {
                                "id": 55074,
                                "name": "dataAsserter",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 54906,
                                "src": "2164:12:64",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_DataAsserter_$1729",
                                  "typeString": "contract DataAsserter"
                                }
                              },
                              "id": 55075,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "2177:14:64",
                              "memberName": "validatorToken",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 1364,
                              "src": "2164:27:64",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_view$__$returns$_t_contract$_ExpandedERC20_$47843_$",
                                "typeString": "function () view external returns (contract ExpandedERC20)"
                              }
                            },
                            "id": 55076,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "2164:29:64",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ExpandedERC20_$47843",
                              "typeString": "contract ExpandedERC20"
                            }
                          },
                          "id": 55077,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "2194:9:64",
                          "memberName": "balanceOf",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 45282,
                          "src": "2164:39:64",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (address) view external returns (uint256)"
                          }
                        },
                        "id": 55080,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2164:61:64",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 55083,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 55081,
                          "name": "balancesBeforeAssertion",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 54998,
                          "src": "2239:23:64",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "+",
                        "rightExpression": {
                          "hexValue": "31",
                          "id": 55082,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2265:1:64",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          },
                          "value": "1"
                        },
                        "src": "2239:27:64",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 55073,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4215,
                        4240,
                        4253,
                        4269,
                        4311,
                        4353,
                        4395,
                        4432,
                        4469,
                        4506,
                        2050,
                        2075,
                        2105,
                        2130,
                        2189,
                        2214,
                        2244,
                        2269,
                        3742,
                        3777
                      ],
                      "referencedDeclaration": 2244,
                      "src": "2142:8:64",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 55084,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2142:134:64",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 55085,
                  "nodeType": "ExpressionStatement",
                  "src": "2142:134:64"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 55089,
                          "name": "TestAddress",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 56476,
                          "src": "2296:11:64",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_TestAddress_$56476_$",
                            "typeString": "type(library TestAddress)"
                          }
                        },
                        "id": 55090,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "memberLocation": "2308:8:64",
                        "memberName": "account1",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 56457,
                        "src": "2296:20:64",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 55086,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4080,
                        "src": "2287:2:64",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$15651",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 55088,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "2290:5:64",
                      "memberName": "prank",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 15312,
                      "src": "2287:8:64",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 55091,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2287:30:64",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 55092,
                  "nodeType": "ExpressionStatement",
                  "src": "2287:30:64"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "expression": {
                            "id": 55094,
                            "name": "dataAsserter",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 54906,
                            "src": "2336:12:64",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_DataAsserter_$1729",
                              "typeString": "contract DataAsserter"
                            }
                          },
                          "id": 55095,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "2349:17:64",
                          "memberName": "checkTokenBalance",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 1644,
                          "src": "2336:30:64",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$",
                            "typeString": "function () view external returns (uint256)"
                          }
                        },
                        "id": 55096,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2336:32:64",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "31",
                        "id": 55097,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2369:1:64",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        }
                      ],
                      "id": 55093,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4215,
                        4240,
                        4253,
                        4269,
                        4311,
                        4353,
                        4395,
                        4432,
                        4469,
                        4506,
                        2050,
                        2075,
                        2105,
                        2130,
                        2189,
                        2214,
                        2244,
                        2269,
                        3742,
                        3777
                      ],
                      "referencedDeclaration": 2244,
                      "src": "2327:8:64",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 55098,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2327:44:64",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 55099,
                  "nodeType": "ExpressionStatement",
                  "src": "2327:44:64"
                }
              ]
            },
            "functionSelector": "854e5aa1",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "test_DataAssertionNoDispute",
            "nameLocation": "627:27:64",
            "parameters": {
              "id": 54944,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "654:2:64"
            },
            "returnParameters": {
              "id": 54945,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "664:0:64"
            },
            "scope": 55449,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 55221,
            "nodeType": "FunctionDefinition",
            "src": "2384:1413:64",
            "nodes": [],
            "body": {
              "id": 55220,
              "nodeType": "Block",
              "src": "2437:1360:64",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 55107,
                          "name": "TestAddress",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 56476,
                          "src": "2485:11:64",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_TestAddress_$56476_$",
                            "typeString": "type(library TestAddress)"
                          }
                        },
                        "id": 55108,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "memberLocation": "2497:8:64",
                        "memberName": "account1",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 56457,
                        "src": "2485:20:64",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 55104,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4080,
                        "src": "2471:2:64",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$15651",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 55106,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "2474:10:64",
                      "memberName": "startPrank",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 15317,
                      "src": "2471:13:64",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 55109,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2471:35:64",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 55110,
                  "nodeType": "ExpressionStatement",
                  "src": "2471:35:64"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 55114,
                          "name": "TestAddress",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 56476,
                          "src": "2543:11:64",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_TestAddress_$56476_$",
                            "typeString": "type(library TestAddress)"
                          }
                        },
                        "id": 55115,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "memberLocation": "2555:8:64",
                        "memberName": "account1",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 56457,
                        "src": "2543:20:64",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "id": 55120,
                                "name": "defaultCurrency",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 55701,
                                "src": "2607:15:64",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_TestnetERC20_$50382",
                                  "typeString": "contract TestnetERC20"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_TestnetERC20_$50382",
                                  "typeString": "contract TestnetERC20"
                                }
                              ],
                              "id": 55119,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "2599:7:64",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 55118,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "2599:7:64",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 55121,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "2599:24:64",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 55116,
                            "name": "optimisticOracleV3",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 55698,
                            "src": "2565:18:64",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_OptimisticOracleV3_$53002",
                              "typeString": "contract OptimisticOracleV3"
                            }
                          },
                          "id": 55117,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "2584:14:64",
                          "memberName": "getMinimumBond",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 52562,
                          "src": "2565:33:64",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (address) view external returns (uint256)"
                          }
                        },
                        "id": 55122,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2565:59:64",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 55111,
                        "name": "defaultCurrency",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 55701,
                        "src": "2516:15:64",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_TestnetERC20_$50382",
                          "typeString": "contract TestnetERC20"
                        }
                      },
                      "id": 55113,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "2532:10:64",
                      "memberName": "allocateTo",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 50381,
                      "src": "2516:26:64",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256) external"
                      }
                    },
                    "id": 55123,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2516:109:64",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 55124,
                  "nodeType": "ExpressionStatement",
                  "src": "2516:109:64"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 55130,
                            "name": "dataAsserter",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 54906,
                            "src": "2667:12:64",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_DataAsserter_$1729",
                              "typeString": "contract DataAsserter"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_DataAsserter_$1729",
                              "typeString": "contract DataAsserter"
                            }
                          ],
                          "id": 55129,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "2659:7:64",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 55128,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "2659:7:64",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 55131,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2659:21:64",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "id": 55136,
                                "name": "defaultCurrency",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 55701,
                                "src": "2724:15:64",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_TestnetERC20_$50382",
                                  "typeString": "contract TestnetERC20"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_TestnetERC20_$50382",
                                  "typeString": "contract TestnetERC20"
                                }
                              ],
                              "id": 55135,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "2716:7:64",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 55134,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "2716:7:64",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 55137,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "2716:24:64",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 55132,
                            "name": "optimisticOracleV3",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 55698,
                            "src": "2682:18:64",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_OptimisticOracleV3_$53002",
                              "typeString": "contract OptimisticOracleV3"
                            }
                          },
                          "id": 55133,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "2701:14:64",
                          "memberName": "getMinimumBond",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 52562,
                          "src": "2682:33:64",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (address) view external returns (uint256)"
                          }
                        },
                        "id": 55138,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2682:59:64",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 55125,
                        "name": "defaultCurrency",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 55701,
                        "src": "2635:15:64",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_TestnetERC20_$50382",
                          "typeString": "contract TestnetERC20"
                        }
                      },
                      "id": 55127,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "2651:7:64",
                      "memberName": "approve",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 45350,
                      "src": "2635:23:64",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,uint256) external returns (bool)"
                      }
                    },
                    "id": 55139,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2635:107:64",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 55140,
                  "nodeType": "ExpressionStatement",
                  "src": "2635:107:64"
                },
                {
                  "assignments": [
                    55142
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 55142,
                      "mutability": "mutable",
                      "name": "assertionId",
                      "nameLocation": "2760:11:64",
                      "nodeType": "VariableDeclaration",
                      "scope": 55220,
                      "src": "2752:19:64",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 55141,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "2752:7:64",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 55149,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 55145,
                        "name": "dataId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 54912,
                        "src": "2801:6:64",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "id": 55146,
                        "name": "correctData",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 54915,
                        "src": "2809:11:64",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_storage",
                          "typeString": "string storage ref"
                        }
                      },
                      {
                        "id": 55147,
                        "name": "description_",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 54921,
                        "src": "2822:12:64",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_storage",
                          "typeString": "string storage ref"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_string_storage",
                          "typeString": "string storage ref"
                        },
                        {
                          "typeIdentifier": "t_string_storage",
                          "typeString": "string storage ref"
                        }
                      ],
                      "expression": {
                        "id": 55143,
                        "name": "dataAsserter",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 54906,
                        "src": "2774:12:64",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_DataAsserter_$1729",
                          "typeString": "contract DataAsserter"
                        }
                      },
                      "id": 55144,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "2787:13:64",
                      "memberName": "assertDataFor",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1632,
                      "src": "2774:26:64",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_bytes32_$_t_string_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes32_$",
                        "typeString": "function (bytes32,string memory,string memory) external returns (bytes32)"
                      }
                    },
                    "id": 55148,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2774:61:64",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2752:83:64"
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 55150,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4080,
                        "src": "2845:2:64",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$15651",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 55152,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "2848:9:64",
                      "memberName": "stopPrank",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 15334,
                      "src": "2845:12:64",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$__$returns$__$",
                        "typeString": "function () external"
                      }
                    },
                    "id": 55153,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2845:14:64",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 55154,
                  "nodeType": "ExpressionStatement",
                  "src": "2845:14:64"
                },
                {
                  "assignments": [
                    55156
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 55156,
                      "mutability": "mutable",
                      "name": "balancesBeforeAssertion",
                      "nameLocation": "2987:23:64",
                      "nodeType": "VariableDeclaration",
                      "scope": 55220,
                      "src": "2979:31:64",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 55155,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "2979:7:64",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 55164,
                  "initialValue": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 55161,
                          "name": "TestAddress",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 56476,
                          "src": "3053:11:64",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_TestAddress_$56476_$",
                            "typeString": "type(library TestAddress)"
                          }
                        },
                        "id": 55162,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "memberLocation": "3065:8:64",
                        "memberName": "account1",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 56457,
                        "src": "3053:20:64",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "expression": {
                            "id": 55157,
                            "name": "dataAsserter",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 54906,
                            "src": "3013:12:64",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_DataAsserter_$1729",
                              "typeString": "contract DataAsserter"
                            }
                          },
                          "id": 55158,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "3026:14:64",
                          "memberName": "validatorToken",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 1364,
                          "src": "3013:27:64",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$__$returns$_t_contract$_ExpandedERC20_$47843_$",
                            "typeString": "function () view external returns (contract ExpandedERC20)"
                          }
                        },
                        "id": 55159,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3013:29:64",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ExpandedERC20_$47843",
                          "typeString": "contract ExpandedERC20"
                        }
                      },
                      "id": 55160,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "3043:9:64",
                      "memberName": "balanceOf",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 45282,
                      "src": "3013:39:64",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) view external returns (uint256)"
                      }
                    },
                    "id": 55163,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3013:61:64",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2979:95:64"
                },
                {
                  "assignments": [
                    55167
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 55167,
                      "mutability": "mutable",
                      "name": "oracleRequest",
                      "nameLocation": "3201:13:64",
                      "nodeType": "VariableDeclaration",
                      "scope": 55220,
                      "src": "3180:34:64",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_OracleRequest_$55685_memory_ptr",
                        "typeString": "struct CommonOptimisticOracleV3Test.OracleRequest"
                      },
                      "typeName": {
                        "id": 55166,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 55165,
                          "name": "OracleRequest",
                          "nameLocations": [
                            "3180:13:64"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 55685,
                          "src": "3180:13:64"
                        },
                        "referencedDeclaration": 55685,
                        "src": "3180:13:64",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_OracleRequest_$55685_storage_ptr",
                          "typeString": "struct CommonOptimisticOracleV3Test.OracleRequest"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 55172,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 55169,
                        "name": "assertionId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 55142,
                        "src": "3245:11:64",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "id": 55170,
                        "name": "defaultBond",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 55732,
                        "src": "3258:11:64",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 55168,
                      "name": "_disputeAndGetOracleRequest",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 56141,
                      "src": "3217:27:64",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_uint256_$returns$_t_struct$_OracleRequest_$55685_memory_ptr_$",
                        "typeString": "function (bytes32,uint256) returns (struct CommonOptimisticOracleV3Test.OracleRequest memory)"
                      }
                    },
                    "id": 55171,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3217:53:64",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_OracleRequest_$55685_memory_ptr",
                      "typeString": "struct CommonOptimisticOracleV3Test.OracleRequest memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3180:90:64"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 55176,
                            "name": "mockOracle",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 55710,
                            "src": "3308:10:64",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_MockOracleAncillary_$51701",
                              "typeString": "contract MockOracleAncillary"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_MockOracleAncillary_$51701",
                              "typeString": "contract MockOracleAncillary"
                            }
                          ],
                          "id": 55175,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "3300:7:64",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 55174,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "3300:7:64",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 55177,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3300:19:64",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 55178,
                        "name": "oracleRequest",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 55167,
                        "src": "3321:13:64",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_OracleRequest_$55685_memory_ptr",
                          "typeString": "struct CommonOptimisticOracleV3Test.OracleRequest memory"
                        }
                      },
                      {
                        "hexValue": "74727565",
                        "id": 55179,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3336:4:64",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "true"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_struct$_OracleRequest_$55685_memory_ptr",
                          "typeString": "struct CommonOptimisticOracleV3Test.OracleRequest memory"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 55173,
                      "name": "_mockOracleResolved",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 55999,
                      "src": "3280:19:64",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_struct$_OracleRequest_$55685_memory_ptr_$_t_bool_$returns$__$",
                        "typeString": "function (address,struct CommonOptimisticOracleV3Test.OracleRequest memory,bool)"
                      }
                    },
                    "id": 55180,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3280:61:64",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 55181,
                  "nodeType": "ExpressionStatement",
                  "src": "3280:61:64"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 55185,
                            "name": "assertionId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 55142,
                            "src": "3409:11:64",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          ],
                          "expression": {
                            "id": 55183,
                            "name": "optimisticOracleV3",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 55698,
                            "src": "3362:18:64",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_OptimisticOracleV3_$53002",
                              "typeString": "contract OptimisticOracleV3"
                            }
                          },
                          "id": 55184,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "3381:27:64",
                          "memberName": "settleAndGetAssertionResult",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 52413,
                          "src": "3362:46:64",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_nonpayable$_t_bytes32_$returns$_t_bool_$",
                            "typeString": "function (bytes32) external returns (bool)"
                          }
                        },
                        "id": 55186,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3362:59:64",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 55182,
                      "name": "assertTrue",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        1999,
                        2020
                      ],
                      "referencedDeclaration": 1999,
                      "src": "3351:10:64",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bool_$returns$__$",
                        "typeString": "function (bool)"
                      }
                    },
                    "id": 55187,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3351:71:64",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 55188,
                  "nodeType": "ExpressionStatement",
                  "src": "3351:71:64"
                },
                {
                  "assignments": [
                    55190,
                    55192,
                    null
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 55190,
                      "mutability": "mutable",
                      "name": "dataAvailable",
                      "nameLocation": "3439:13:64",
                      "nodeType": "VariableDeclaration",
                      "scope": 55220,
                      "src": "3434:18:64",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 55189,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "3434:4:64",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 55192,
                      "mutability": "mutable",
                      "name": "dataPath",
                      "nameLocation": "3468:8:64",
                      "nodeType": "VariableDeclaration",
                      "scope": 55220,
                      "src": "3454:22:64",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string"
                      },
                      "typeName": {
                        "id": 55191,
                        "name": "string",
                        "nodeType": "ElementaryTypeName",
                        "src": "3454:6:64",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_storage_ptr",
                          "typeString": "string"
                        }
                      },
                      "visibility": "internal"
                    },
                    null
                  ],
                  "id": 55197,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 55195,
                        "name": "assertionId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 55142,
                        "src": "3503:11:64",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      ],
                      "expression": {
                        "id": 55193,
                        "name": "dataAsserter",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 54906,
                        "src": "3482:12:64",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_DataAsserter_$1729",
                          "typeString": "contract DataAsserter"
                        }
                      },
                      "id": 55194,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "3495:7:64",
                      "memberName": "getData",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1509,
                      "src": "3482:20:64",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_bytes32_$returns$_t_bool_$_t_string_memory_ptr_$_t_string_memory_ptr_$",
                        "typeString": "function (bytes32) view external returns (bool,string memory,string memory)"
                      }
                    },
                    "id": 55196,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3482:33:64",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_bool_$_t_string_memory_ptr_$_t_string_memory_ptr_$",
                      "typeString": "tuple(bool,string memory,string memory)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3433:82:64"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 55199,
                        "name": "dataAvailable",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 55190,
                        "src": "3536:13:64",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 55198,
                      "name": "assertTrue",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        1999,
                        2020
                      ],
                      "referencedDeclaration": 1999,
                      "src": "3525:10:64",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bool_$returns$__$",
                        "typeString": "function (bool)"
                      }
                    },
                    "id": 55200,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3525:25:64",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 55201,
                  "nodeType": "ExpressionStatement",
                  "src": "3525:25:64"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 55203,
                        "name": "dataPath",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 55192,
                        "src": "3569:8:64",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      {
                        "id": 55204,
                        "name": "correctData",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 54915,
                        "src": "3579:11:64",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_storage",
                          "typeString": "string storage ref"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        },
                        {
                          "typeIdentifier": "t_string_storage",
                          "typeString": "string storage ref"
                        }
                      ],
                      "id": 55202,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4215,
                        4240,
                        4253,
                        4269,
                        4311,
                        4353,
                        4395,
                        4432,
                        4469,
                        4506,
                        2050,
                        2075,
                        2105,
                        2130,
                        2189,
                        2214,
                        2244,
                        2269,
                        3742,
                        3777
                      ],
                      "referencedDeclaration": 3742,
                      "src": "3560:8:64",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_string_memory_ptr_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (string memory,string memory)"
                      }
                    },
                    "id": 55205,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3560:31:64",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 55206,
                  "nodeType": "ExpressionStatement",
                  "src": "3560:31:64"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "expression": {
                              "id": 55212,
                              "name": "TestAddress",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 56476,
                              "src": "3718:11:64",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_TestAddress_$56476_$",
                                "typeString": "type(library TestAddress)"
                              }
                            },
                            "id": 55213,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberLocation": "3730:8:64",
                            "memberName": "account1",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 56457,
                            "src": "3718:20:64",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "expression": {
                                "id": 55208,
                                "name": "dataAsserter",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 54906,
                                "src": "3678:12:64",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_DataAsserter_$1729",
                                  "typeString": "contract DataAsserter"
                                }
                              },
                              "id": 55209,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "3691:14:64",
                              "memberName": "validatorToken",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 1364,
                              "src": "3678:27:64",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_view$__$returns$_t_contract$_ExpandedERC20_$47843_$",
                                "typeString": "function () view external returns (contract ExpandedERC20)"
                              }
                            },
                            "id": 55210,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "3678:29:64",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ExpandedERC20_$47843",
                              "typeString": "contract ExpandedERC20"
                            }
                          },
                          "id": 55211,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "3708:9:64",
                          "memberName": "balanceOf",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 45282,
                          "src": "3678:39:64",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (address) view external returns (uint256)"
                          }
                        },
                        "id": 55214,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3678:61:64",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 55217,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 55215,
                          "name": "balancesBeforeAssertion",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 55156,
                          "src": "3753:23:64",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "+",
                        "rightExpression": {
                          "hexValue": "31",
                          "id": 55216,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "3779:1:64",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          },
                          "value": "1"
                        },
                        "src": "3753:27:64",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 55207,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4215,
                        4240,
                        4253,
                        4269,
                        4311,
                        4353,
                        4395,
                        4432,
                        4469,
                        4506,
                        2050,
                        2075,
                        2105,
                        2130,
                        2189,
                        2214,
                        2244,
                        2269,
                        3742,
                        3777
                      ],
                      "referencedDeclaration": 2244,
                      "src": "3656:8:64",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 55218,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3656:134:64",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 55219,
                  "nodeType": "ExpressionStatement",
                  "src": "3656:134:64"
                }
              ]
            },
            "functionSelector": "858897ab",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "test_DataAssertionWithWrongDispute",
            "nameLocation": "2393:34:64",
            "parameters": {
              "id": 55102,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2427:2:64"
            },
            "returnParameters": {
              "id": 55103,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2437:0:64"
            },
            "scope": 55449,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 55448,
            "nodeType": "FunctionDefinition",
            "src": "3803:2625:64",
            "nodes": [],
            "body": {
              "id": 55447,
              "nodeType": "Block",
              "src": "3858:2570:64",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 55227,
                          "name": "TestAddress",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 56476,
                          "src": "3906:11:64",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_TestAddress_$56476_$",
                            "typeString": "type(library TestAddress)"
                          }
                        },
                        "id": 55228,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "memberLocation": "3918:8:64",
                        "memberName": "account1",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 56457,
                        "src": "3906:20:64",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 55224,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4080,
                        "src": "3892:2:64",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$15651",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 55226,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "3895:10:64",
                      "memberName": "startPrank",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 15317,
                      "src": "3892:13:64",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 55229,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3892:35:64",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 55230,
                  "nodeType": "ExpressionStatement",
                  "src": "3892:35:64"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 55234,
                          "name": "TestAddress",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 56476,
                          "src": "3964:11:64",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_TestAddress_$56476_$",
                            "typeString": "type(library TestAddress)"
                          }
                        },
                        "id": 55235,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "memberLocation": "3976:8:64",
                        "memberName": "account1",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 56457,
                        "src": "3964:20:64",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "id": 55240,
                                "name": "defaultCurrency",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 55701,
                                "src": "4028:15:64",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_TestnetERC20_$50382",
                                  "typeString": "contract TestnetERC20"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_TestnetERC20_$50382",
                                  "typeString": "contract TestnetERC20"
                                }
                              ],
                              "id": 55239,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "4020:7:64",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 55238,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "4020:7:64",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 55241,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "4020:24:64",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 55236,
                            "name": "optimisticOracleV3",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 55698,
                            "src": "3986:18:64",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_OptimisticOracleV3_$53002",
                              "typeString": "contract OptimisticOracleV3"
                            }
                          },
                          "id": 55237,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "4005:14:64",
                          "memberName": "getMinimumBond",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 52562,
                          "src": "3986:33:64",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (address) view external returns (uint256)"
                          }
                        },
                        "id": 55242,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3986:59:64",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 55231,
                        "name": "defaultCurrency",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 55701,
                        "src": "3937:15:64",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_TestnetERC20_$50382",
                          "typeString": "contract TestnetERC20"
                        }
                      },
                      "id": 55233,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "3953:10:64",
                      "memberName": "allocateTo",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 50381,
                      "src": "3937:26:64",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256) external"
                      }
                    },
                    "id": 55243,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3937:109:64",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 55244,
                  "nodeType": "ExpressionStatement",
                  "src": "3937:109:64"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 55250,
                            "name": "dataAsserter",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 54906,
                            "src": "4088:12:64",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_DataAsserter_$1729",
                              "typeString": "contract DataAsserter"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_DataAsserter_$1729",
                              "typeString": "contract DataAsserter"
                            }
                          ],
                          "id": 55249,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "4080:7:64",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 55248,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "4080:7:64",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 55251,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4080:21:64",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "id": 55256,
                                "name": "defaultCurrency",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 55701,
                                "src": "4145:15:64",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_TestnetERC20_$50382",
                                  "typeString": "contract TestnetERC20"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_TestnetERC20_$50382",
                                  "typeString": "contract TestnetERC20"
                                }
                              ],
                              "id": 55255,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "4137:7:64",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 55254,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "4137:7:64",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 55257,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "4137:24:64",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 55252,
                            "name": "optimisticOracleV3",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 55698,
                            "src": "4103:18:64",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_OptimisticOracleV3_$53002",
                              "typeString": "contract OptimisticOracleV3"
                            }
                          },
                          "id": 55253,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "4122:14:64",
                          "memberName": "getMinimumBond",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 52562,
                          "src": "4103:33:64",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (address) view external returns (uint256)"
                          }
                        },
                        "id": 55258,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4103:59:64",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 55245,
                        "name": "defaultCurrency",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 55701,
                        "src": "4056:15:64",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_TestnetERC20_$50382",
                          "typeString": "contract TestnetERC20"
                        }
                      },
                      "id": 55247,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "4072:7:64",
                      "memberName": "approve",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 45350,
                      "src": "4056:23:64",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,uint256) external returns (bool)"
                      }
                    },
                    "id": 55259,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4056:107:64",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 55260,
                  "nodeType": "ExpressionStatement",
                  "src": "4056:107:64"
                },
                {
                  "assignments": [
                    55262
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 55262,
                      "mutability": "mutable",
                      "name": "assertionId",
                      "nameLocation": "4181:11:64",
                      "nodeType": "VariableDeclaration",
                      "scope": 55447,
                      "src": "4173:19:64",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 55261,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "4173:7:64",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 55269,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 55265,
                        "name": "dataId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 54912,
                        "src": "4222:6:64",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "id": 55266,
                        "name": "incorrectData",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 54918,
                        "src": "4230:13:64",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_storage",
                          "typeString": "string storage ref"
                        }
                      },
                      {
                        "id": 55267,
                        "name": "description_",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 54921,
                        "src": "4245:12:64",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_storage",
                          "typeString": "string storage ref"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_string_storage",
                          "typeString": "string storage ref"
                        },
                        {
                          "typeIdentifier": "t_string_storage",
                          "typeString": "string storage ref"
                        }
                      ],
                      "expression": {
                        "id": 55263,
                        "name": "dataAsserter",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 54906,
                        "src": "4195:12:64",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_DataAsserter_$1729",
                          "typeString": "contract DataAsserter"
                        }
                      },
                      "id": 55264,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "4208:13:64",
                      "memberName": "assertDataFor",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1632,
                      "src": "4195:26:64",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_bytes32_$_t_string_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes32_$",
                        "typeString": "function (bytes32,string memory,string memory) external returns (bytes32)"
                      }
                    },
                    "id": 55268,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4195:63:64",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4173:85:64"
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 55270,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4080,
                        "src": "4268:2:64",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$15651",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 55272,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "4271:9:64",
                      "memberName": "stopPrank",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 15334,
                      "src": "4268:12:64",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$__$returns$__$",
                        "typeString": "function () external"
                      }
                    },
                    "id": 55273,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4268:14:64",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 55274,
                  "nodeType": "ExpressionStatement",
                  "src": "4268:14:64"
                },
                {
                  "assignments": [
                    55276
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 55276,
                      "mutability": "mutable",
                      "name": "balancesBeforeAssertion",
                      "nameLocation": "4410:23:64",
                      "nodeType": "VariableDeclaration",
                      "scope": 55447,
                      "src": "4402:31:64",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 55275,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "4402:7:64",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 55284,
                  "initialValue": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 55281,
                          "name": "TestAddress",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 56476,
                          "src": "4476:11:64",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_TestAddress_$56476_$",
                            "typeString": "type(library TestAddress)"
                          }
                        },
                        "id": 55282,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "memberLocation": "4488:8:64",
                        "memberName": "account1",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 56457,
                        "src": "4476:20:64",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "expression": {
                            "id": 55277,
                            "name": "dataAsserter",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 54906,
                            "src": "4436:12:64",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_DataAsserter_$1729",
                              "typeString": "contract DataAsserter"
                            }
                          },
                          "id": 55278,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "4449:14:64",
                          "memberName": "validatorToken",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 1364,
                          "src": "4436:27:64",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$__$returns$_t_contract$_ExpandedERC20_$47843_$",
                            "typeString": "function () view external returns (contract ExpandedERC20)"
                          }
                        },
                        "id": 55279,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4436:29:64",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ExpandedERC20_$47843",
                          "typeString": "contract ExpandedERC20"
                        }
                      },
                      "id": 55280,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "4466:9:64",
                      "memberName": "balanceOf",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 45282,
                      "src": "4436:39:64",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) view external returns (uint256)"
                      }
                    },
                    "id": 55283,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4436:61:64",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4402:95:64"
                },
                {
                  "assignments": [
                    55287
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 55287,
                      "mutability": "mutable",
                      "name": "oracleRequest",
                      "nameLocation": "4625:13:64",
                      "nodeType": "VariableDeclaration",
                      "scope": 55447,
                      "src": "4604:34:64",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_OracleRequest_$55685_memory_ptr",
                        "typeString": "struct CommonOptimisticOracleV3Test.OracleRequest"
                      },
                      "typeName": {
                        "id": 55286,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 55285,
                          "name": "OracleRequest",
                          "nameLocations": [
                            "4604:13:64"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 55685,
                          "src": "4604:13:64"
                        },
                        "referencedDeclaration": 55685,
                        "src": "4604:13:64",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_OracleRequest_$55685_storage_ptr",
                          "typeString": "struct CommonOptimisticOracleV3Test.OracleRequest"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 55292,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 55289,
                        "name": "assertionId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 55262,
                        "src": "4669:11:64",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "id": 55290,
                        "name": "defaultBond",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 55732,
                        "src": "4682:11:64",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 55288,
                      "name": "_disputeAndGetOracleRequest",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 56141,
                      "src": "4641:27:64",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_uint256_$returns$_t_struct$_OracleRequest_$55685_memory_ptr_$",
                        "typeString": "function (bytes32,uint256) returns (struct CommonOptimisticOracleV3Test.OracleRequest memory)"
                      }
                    },
                    "id": 55291,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4641:53:64",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_OracleRequest_$55685_memory_ptr",
                      "typeString": "struct CommonOptimisticOracleV3Test.OracleRequest memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4604:90:64"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 55296,
                            "name": "mockOracle",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 55710,
                            "src": "4732:10:64",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_MockOracleAncillary_$51701",
                              "typeString": "contract MockOracleAncillary"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_MockOracleAncillary_$51701",
                              "typeString": "contract MockOracleAncillary"
                            }
                          ],
                          "id": 55295,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "4724:7:64",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 55294,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "4724:7:64",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 55297,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4724:19:64",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 55298,
                        "name": "oracleRequest",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 55287,
                        "src": "4745:13:64",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_OracleRequest_$55685_memory_ptr",
                          "typeString": "struct CommonOptimisticOracleV3Test.OracleRequest memory"
                        }
                      },
                      {
                        "hexValue": "66616c7365",
                        "id": 55299,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4760:5:64",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "false"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_struct$_OracleRequest_$55685_memory_ptr",
                          "typeString": "struct CommonOptimisticOracleV3Test.OracleRequest memory"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 55293,
                      "name": "_mockOracleResolved",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 55999,
                      "src": "4704:19:64",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_struct$_OracleRequest_$55685_memory_ptr_$_t_bool_$returns$__$",
                        "typeString": "function (address,struct CommonOptimisticOracleV3Test.OracleRequest memory,bool)"
                      }
                    },
                    "id": 55300,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4704:62:64",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 55301,
                  "nodeType": "ExpressionStatement",
                  "src": "4704:62:64"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 55305,
                            "name": "assertionId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 55262,
                            "src": "4835:11:64",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          ],
                          "expression": {
                            "id": 55303,
                            "name": "optimisticOracleV3",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 55698,
                            "src": "4788:18:64",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_OptimisticOracleV3_$53002",
                              "typeString": "contract OptimisticOracleV3"
                            }
                          },
                          "id": 55304,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "4807:27:64",
                          "memberName": "settleAndGetAssertionResult",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 52413,
                          "src": "4788:46:64",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_nonpayable$_t_bytes32_$returns$_t_bool_$",
                            "typeString": "function (bytes32) external returns (bool)"
                          }
                        },
                        "id": 55306,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4788:59:64",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 55302,
                      "name": "assertFalse",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4165,
                        4179
                      ],
                      "referencedDeclaration": 4165,
                      "src": "4776:11:64",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bool_$returns$__$",
                        "typeString": "function (bool)"
                      }
                    },
                    "id": 55307,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4776:72:64",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 55308,
                  "nodeType": "ExpressionStatement",
                  "src": "4776:72:64"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "expression": {
                              "id": 55314,
                              "name": "TestAddress",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 56476,
                              "src": "4979:11:64",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_TestAddress_$56476_$",
                                "typeString": "type(library TestAddress)"
                              }
                            },
                            "id": 55315,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberLocation": "4991:8:64",
                            "memberName": "account1",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 56457,
                            "src": "4979:20:64",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "expression": {
                                "id": 55310,
                                "name": "dataAsserter",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 54906,
                                "src": "4939:12:64",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_DataAsserter_$1729",
                                  "typeString": "contract DataAsserter"
                                }
                              },
                              "id": 55311,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "4952:14:64",
                              "memberName": "validatorToken",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 1364,
                              "src": "4939:27:64",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_view$__$returns$_t_contract$_ExpandedERC20_$47843_$",
                                "typeString": "function () view external returns (contract ExpandedERC20)"
                              }
                            },
                            "id": 55312,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "4939:29:64",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ExpandedERC20_$47843",
                              "typeString": "contract ExpandedERC20"
                            }
                          },
                          "id": 55313,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "4969:9:64",
                          "memberName": "balanceOf",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 45282,
                          "src": "4939:39:64",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (address) view external returns (uint256)"
                          }
                        },
                        "id": 55316,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4939:61:64",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 55317,
                        "name": "balancesBeforeAssertion",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 55276,
                        "src": "5014:23:64",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 55309,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4215,
                        4240,
                        4253,
                        4269,
                        4311,
                        4353,
                        4395,
                        4432,
                        4469,
                        4506,
                        2050,
                        2075,
                        2105,
                        2130,
                        2189,
                        2214,
                        2244,
                        2269,
                        3742,
                        3777
                      ],
                      "referencedDeclaration": 2244,
                      "src": "4917:8:64",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 55318,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4917:130:64",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 55319,
                  "nodeType": "ExpressionStatement",
                  "src": "4917:130:64"
                },
                {
                  "assignments": [
                    null,
                    null,
                    null,
                    55321,
                    null
                  ],
                  "declarations": [
                    null,
                    null,
                    null,
                    {
                      "constant": false,
                      "id": 55321,
                      "mutability": "mutable",
                      "name": "asserter",
                      "nameLocation": "5131:8:64",
                      "nodeType": "VariableDeclaration",
                      "scope": 55447,
                      "src": "5123:16:64",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 55320,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "5123:7:64",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    },
                    null
                  ],
                  "id": 55326,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 55324,
                        "name": "assertionId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 55262,
                        "src": "5173:11:64",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      ],
                      "expression": {
                        "id": 55322,
                        "name": "dataAsserter",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 54906,
                        "src": "5145:12:64",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_DataAsserter_$1729",
                          "typeString": "contract DataAsserter"
                        }
                      },
                      "id": 55323,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "5158:14:64",
                      "memberName": "assertionsData",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1388,
                      "src": "5145:27:64",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_bytes32_$returns$_t_bytes32_$_t_string_memory_ptr_$_t_string_memory_ptr_$_t_address_$_t_bool_$",
                        "typeString": "function (bytes32) view external returns (bytes32,string memory,string memory,address,bool)"
                      }
                    },
                    "id": 55325,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5145:40:64",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_bytes32_$_t_string_memory_ptr_$_t_string_memory_ptr_$_t_address_$_t_bool_$",
                      "typeString": "tuple(bytes32,string memory,string memory,address,bool)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5116:69:64"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 55328,
                        "name": "asserter",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 55321,
                        "src": "5204:8:64",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "hexValue": "30",
                            "id": 55331,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "5222:1:64",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 55330,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "5214:7:64",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 55329,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "5214:7:64",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 55332,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5214:10:64",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 55327,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4215,
                        4240,
                        4253,
                        4269,
                        4311,
                        4353,
                        4395,
                        4432,
                        4469,
                        4506,
                        2050,
                        2075,
                        2105,
                        2130,
                        2189,
                        2214,
                        2244,
                        2269,
                        3742,
                        3777
                      ],
                      "referencedDeclaration": 2050,
                      "src": "5195:8:64",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$returns$__$",
                        "typeString": "function (address,address)"
                      }
                    },
                    "id": 55333,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5195:30:64",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 55334,
                  "nodeType": "ExpressionStatement",
                  "src": "5195:30:64"
                },
                {
                  "assignments": [
                    55336,
                    55338,
                    55340
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 55336,
                      "mutability": "mutable",
                      "name": "dataAvailable",
                      "nameLocation": "5242:13:64",
                      "nodeType": "VariableDeclaration",
                      "scope": 55447,
                      "src": "5237:18:64",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 55335,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "5237:4:64",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 55338,
                      "mutability": "mutable",
                      "name": "dataPath",
                      "nameLocation": "5271:8:64",
                      "nodeType": "VariableDeclaration",
                      "scope": 55447,
                      "src": "5257:22:64",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string"
                      },
                      "typeName": {
                        "id": 55337,
                        "name": "string",
                        "nodeType": "ElementaryTypeName",
                        "src": "5257:6:64",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_storage_ptr",
                          "typeString": "string"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 55340,
                      "mutability": "mutable",
                      "name": "description",
                      "nameLocation": "5295:11:64",
                      "nodeType": "VariableDeclaration",
                      "scope": 55447,
                      "src": "5281:25:64",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string"
                      },
                      "typeName": {
                        "id": 55339,
                        "name": "string",
                        "nodeType": "ElementaryTypeName",
                        "src": "5281:6:64",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_storage_ptr",
                          "typeString": "string"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 55345,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 55343,
                        "name": "assertionId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 55262,
                        "src": "5331:11:64",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      ],
                      "expression": {
                        "id": 55341,
                        "name": "dataAsserter",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 54906,
                        "src": "5310:12:64",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_DataAsserter_$1729",
                          "typeString": "contract DataAsserter"
                        }
                      },
                      "id": 55342,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "5323:7:64",
                      "memberName": "getData",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1509,
                      "src": "5310:20:64",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_bytes32_$returns$_t_bool_$_t_string_memory_ptr_$_t_string_memory_ptr_$",
                        "typeString": "function (bytes32) view external returns (bool,string memory,string memory)"
                      }
                    },
                    "id": 55344,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5310:33:64",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_bool_$_t_string_memory_ptr_$_t_string_memory_ptr_$",
                      "typeString": "tuple(bool,string memory,string memory)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5236:107:64"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 55347,
                        "name": "dataAvailable",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 55336,
                        "src": "5365:13:64",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 55346,
                      "name": "assertFalse",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4165,
                        4179
                      ],
                      "referencedDeclaration": 4165,
                      "src": "5353:11:64",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bool_$returns$__$",
                        "typeString": "function (bool)"
                      }
                    },
                    "id": 55348,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5353:26:64",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 55349,
                  "nodeType": "ExpressionStatement",
                  "src": "5353:26:64"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 55356,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 55353,
                            "name": "block",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -4,
                            "src": "5434:5:64",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_block",
                              "typeString": "block"
                            }
                          },
                          "id": 55354,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "5440:9:64",
                          "memberName": "timestamp",
                          "nodeType": "MemberAccess",
                          "src": "5434:15:64",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "+",
                        "rightExpression": {
                          "hexValue": "31",
                          "id": 55355,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "5452:1:64",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          },
                          "value": "1"
                        },
                        "src": "5434:19:64",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 55350,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4080,
                        "src": "5426:2:64",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$15651",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 55352,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "5429:4:64",
                      "memberName": "warp",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 15222,
                      "src": "5426:7:64",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256) external"
                      }
                    },
                    "id": 55357,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5426:28:64",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 55358,
                  "nodeType": "ExpressionStatement",
                  "src": "5426:28:64"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 55362,
                          "name": "TestAddress",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 56476,
                          "src": "5550:11:64",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_TestAddress_$56476_$",
                            "typeString": "type(library TestAddress)"
                          }
                        },
                        "id": 55363,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "memberLocation": "5562:8:64",
                        "memberName": "account1",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 56457,
                        "src": "5550:20:64",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 55359,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4080,
                        "src": "5536:2:64",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$15651",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 55361,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "5539:10:64",
                      "memberName": "startPrank",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 15317,
                      "src": "5536:13:64",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 55364,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5536:35:64",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 55365,
                  "nodeType": "ExpressionStatement",
                  "src": "5536:35:64"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 55369,
                          "name": "TestAddress",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 56476,
                          "src": "5608:11:64",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_TestAddress_$56476_$",
                            "typeString": "type(library TestAddress)"
                          }
                        },
                        "id": 55370,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "memberLocation": "5620:8:64",
                        "memberName": "account1",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 56457,
                        "src": "5608:20:64",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "id": 55375,
                                "name": "defaultCurrency",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 55701,
                                "src": "5672:15:64",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_TestnetERC20_$50382",
                                  "typeString": "contract TestnetERC20"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_TestnetERC20_$50382",
                                  "typeString": "contract TestnetERC20"
                                }
                              ],
                              "id": 55374,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "5664:7:64",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 55373,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "5664:7:64",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 55376,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "5664:24:64",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 55371,
                            "name": "optimisticOracleV3",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 55698,
                            "src": "5630:18:64",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_OptimisticOracleV3_$53002",
                              "typeString": "contract OptimisticOracleV3"
                            }
                          },
                          "id": 55372,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "5649:14:64",
                          "memberName": "getMinimumBond",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 52562,
                          "src": "5630:33:64",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (address) view external returns (uint256)"
                          }
                        },
                        "id": 55377,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5630:59:64",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 55366,
                        "name": "defaultCurrency",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 55701,
                        "src": "5581:15:64",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_TestnetERC20_$50382",
                          "typeString": "contract TestnetERC20"
                        }
                      },
                      "id": 55368,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "5597:10:64",
                      "memberName": "allocateTo",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 50381,
                      "src": "5581:26:64",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256) external"
                      }
                    },
                    "id": 55378,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5581:109:64",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 55379,
                  "nodeType": "ExpressionStatement",
                  "src": "5581:109:64"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 55385,
                            "name": "dataAsserter",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 54906,
                            "src": "5732:12:64",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_DataAsserter_$1729",
                              "typeString": "contract DataAsserter"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_DataAsserter_$1729",
                              "typeString": "contract DataAsserter"
                            }
                          ],
                          "id": 55384,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "5724:7:64",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 55383,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "5724:7:64",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 55386,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5724:21:64",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "id": 55391,
                                "name": "defaultCurrency",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 55701,
                                "src": "5789:15:64",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_TestnetERC20_$50382",
                                  "typeString": "contract TestnetERC20"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_TestnetERC20_$50382",
                                  "typeString": "contract TestnetERC20"
                                }
                              ],
                              "id": 55390,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "5781:7:64",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 55389,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "5781:7:64",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 55392,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "5781:24:64",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 55387,
                            "name": "optimisticOracleV3",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 55698,
                            "src": "5747:18:64",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_OptimisticOracleV3_$53002",
                              "typeString": "contract OptimisticOracleV3"
                            }
                          },
                          "id": 55388,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "5766:14:64",
                          "memberName": "getMinimumBond",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 52562,
                          "src": "5747:33:64",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (address) view external returns (uint256)"
                          }
                        },
                        "id": 55393,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5747:59:64",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 55380,
                        "name": "defaultCurrency",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 55701,
                        "src": "5700:15:64",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_TestnetERC20_$50382",
                          "typeString": "contract TestnetERC20"
                        }
                      },
                      "id": 55382,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "5716:7:64",
                      "memberName": "approve",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 45350,
                      "src": "5700:23:64",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,uint256) external returns (bool)"
                      }
                    },
                    "id": 55394,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5700:107:64",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 55395,
                  "nodeType": "ExpressionStatement",
                  "src": "5700:107:64"
                },
                {
                  "assignments": [
                    55397
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 55397,
                      "mutability": "mutable",
                      "name": "ooAssertionId2",
                      "nameLocation": "5825:14:64",
                      "nodeType": "VariableDeclaration",
                      "scope": 55447,
                      "src": "5817:22:64",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 55396,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "5817:7:64",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 55404,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 55400,
                        "name": "dataId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 54912,
                        "src": "5869:6:64",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "id": 55401,
                        "name": "correctData",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 54915,
                        "src": "5877:11:64",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_storage",
                          "typeString": "string storage ref"
                        }
                      },
                      {
                        "id": 55402,
                        "name": "description_",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 54921,
                        "src": "5890:12:64",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_storage",
                          "typeString": "string storage ref"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_string_storage",
                          "typeString": "string storage ref"
                        },
                        {
                          "typeIdentifier": "t_string_storage",
                          "typeString": "string storage ref"
                        }
                      ],
                      "expression": {
                        "id": 55398,
                        "name": "dataAsserter",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 54906,
                        "src": "5842:12:64",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_DataAsserter_$1729",
                          "typeString": "contract DataAsserter"
                        }
                      },
                      "id": 55399,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "5855:13:64",
                      "memberName": "assertDataFor",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1632,
                      "src": "5842:26:64",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_bytes32_$_t_string_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes32_$",
                        "typeString": "function (bytes32,string memory,string memory) external returns (bytes32)"
                      }
                    },
                    "id": 55403,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5842:61:64",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5817:86:64"
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 55405,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4080,
                        "src": "5913:2:64",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$15651",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 55407,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "5916:9:64",
                      "memberName": "stopPrank",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 15334,
                      "src": "5913:12:64",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$__$returns$__$",
                        "typeString": "function () external"
                      }
                    },
                    "id": 55408,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5913:14:64",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 55409,
                  "nodeType": "ExpressionStatement",
                  "src": "5913:14:64"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 55419,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "expression": {
                              "id": 55413,
                              "name": "timer",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 55704,
                              "src": "6064:5:64",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_Timer_$50417",
                                "typeString": "contract Timer"
                              }
                            },
                            "id": 55414,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "6070:14:64",
                            "memberName": "getCurrentTime",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 50416,
                            "src": "6064:20:64",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$",
                              "typeString": "function () view external returns (uint256)"
                            }
                          },
                          "id": 55415,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6064:22:64",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "+",
                        "rightExpression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "expression": {
                              "id": 55416,
                              "name": "dataAsserter",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 54906,
                              "src": "6089:12:64",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_DataAsserter_$1729",
                                "typeString": "contract DataAsserter"
                              }
                            },
                            "id": 55417,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberLocation": "6102:17:64",
                            "memberName": "assertionLiveness",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1370,
                            "src": "6089:30:64",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$__$returns$_t_uint64_$",
                              "typeString": "function () view external returns (uint64)"
                            }
                          },
                          "id": 55418,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6089:32:64",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint64",
                            "typeString": "uint64"
                          }
                        },
                        "src": "6064:57:64",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 55410,
                        "name": "timer",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 55704,
                        "src": "6043:5:64",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Timer_$50417",
                          "typeString": "contract Timer"
                        }
                      },
                      "id": 55412,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "6049:14:64",
                      "memberName": "setCurrentTime",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 50407,
                      "src": "6043:20:64",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256) external"
                      }
                    },
                    "id": 55420,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6043:79:64",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 55421,
                  "nodeType": "ExpressionStatement",
                  "src": "6043:79:64"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 55425,
                        "name": "ooAssertionId2",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 55397,
                        "src": "6201:14:64",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      ],
                      "expression": {
                        "id": 55422,
                        "name": "optimisticOracleV3",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 55698,
                        "src": "6166:18:64",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_OptimisticOracleV3_$53002",
                          "typeString": "contract OptimisticOracleV3"
                        }
                      },
                      "id": 55424,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "6185:15:64",
                      "memberName": "settleAssertion",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 52390,
                      "src": "6166:34:64",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_bytes32_$returns$__$",
                        "typeString": "function (bytes32) external"
                      }
                    },
                    "id": 55426,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6166:50:64",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 55427,
                  "nodeType": "ExpressionStatement",
                  "src": "6166:50:64"
                },
                {
                  "expression": {
                    "id": 55436,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "components": [
                        {
                          "id": 55428,
                          "name": "dataAvailable",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 55336,
                          "src": "6269:13:64",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        {
                          "id": 55429,
                          "name": "dataPath",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 55338,
                          "src": "6284:8:64",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_memory_ptr",
                            "typeString": "string memory"
                          }
                        },
                        {
                          "id": 55430,
                          "name": "description",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 55340,
                          "src": "6294:11:64",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_memory_ptr",
                            "typeString": "string memory"
                          }
                        }
                      ],
                      "id": 55431,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "TupleExpression",
                      "src": "6268:38:64",
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$_t_bool_$_t_string_memory_ptr_$_t_string_memory_ptr_$",
                        "typeString": "tuple(bool,string memory,string memory)"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 55434,
                          "name": "ooAssertionId2",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 55397,
                          "src": "6330:14:64",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        ],
                        "expression": {
                          "id": 55432,
                          "name": "dataAsserter",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 54906,
                          "src": "6309:12:64",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_DataAsserter_$1729",
                            "typeString": "contract DataAsserter"
                          }
                        },
                        "id": 55433,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "6322:7:64",
                        "memberName": "getData",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 1509,
                        "src": "6309:20:64",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_view$_t_bytes32_$returns$_t_bool_$_t_string_memory_ptr_$_t_string_memory_ptr_$",
                          "typeString": "function (bytes32) view external returns (bool,string memory,string memory)"
                        }
                      },
                      "id": 55435,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "6309:36:64",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$_t_bool_$_t_string_memory_ptr_$_t_string_memory_ptr_$",
                        "typeString": "tuple(bool,string memory,string memory)"
                      }
                    },
                    "src": "6268:77:64",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 55437,
                  "nodeType": "ExpressionStatement",
                  "src": "6268:77:64"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 55439,
                        "name": "dataAvailable",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 55336,
                        "src": "6366:13:64",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 55438,
                      "name": "assertTrue",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        1999,
                        2020
                      ],
                      "referencedDeclaration": 1999,
                      "src": "6355:10:64",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bool_$returns$__$",
                        "typeString": "function (bool)"
                      }
                    },
                    "id": 55440,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6355:25:64",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 55441,
                  "nodeType": "ExpressionStatement",
                  "src": "6355:25:64"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 55443,
                        "name": "dataPath",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 55338,
                        "src": "6399:8:64",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      {
                        "id": 55444,
                        "name": "correctData",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 54915,
                        "src": "6409:11:64",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_storage",
                          "typeString": "string storage ref"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        },
                        {
                          "typeIdentifier": "t_string_storage",
                          "typeString": "string storage ref"
                        }
                      ],
                      "id": 55442,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4215,
                        4240,
                        4253,
                        4269,
                        4311,
                        4353,
                        4395,
                        4432,
                        4469,
                        4506,
                        2050,
                        2075,
                        2105,
                        2130,
                        2189,
                        2214,
                        2244,
                        2269,
                        3742,
                        3777
                      ],
                      "referencedDeclaration": 3742,
                      "src": "6390:8:64",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_string_memory_ptr_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (string memory,string memory)"
                      }
                    },
                    "id": 55445,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6390:31:64",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 55446,
                  "nodeType": "ExpressionStatement",
                  "src": "6390:31:64"
                }
              ]
            },
            "functionSelector": "52bb1e46",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "test_DataAssertionWithCorrectDispute",
            "nameLocation": "3812:36:64",
            "parameters": {
              "id": 55222,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3848:2:64"
            },
            "returnParameters": {
              "id": 55223,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3858:0:64"
            },
            "scope": 55449,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 54902,
              "name": "CommonOptimisticOracleV3Test",
              "nameLocations": [
                "221:28:64"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 56436,
              "src": "221:28:64"
            },
            "id": 54903,
            "nodeType": "InheritanceSpecifier",
            "src": "221:28:64"
          }
        ],
        "canonicalName": "DataAsserterTest",
        "contractDependencies": [
          1729,
          53085,
          57057
        ],
        "contractKind": "contract",
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          55449,
          56436,
          56443,
          13945,
          13894,
          9430,
          9105,
          8312,
          6252,
          5514,
          4021,
          4087,
          4084
        ],
        "name": "DataAsserterTest",
        "nameLocation": "201:16:64",
        "scope": 55450,
        "usedErrors": []
      }
    ],
    "license": "AGPL-3.0-only"
  },
  "id": 64
}