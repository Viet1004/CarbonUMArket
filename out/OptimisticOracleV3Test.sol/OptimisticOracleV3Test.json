{
  "abi": [
    {
      "inputs": [
        {
          "internalType": "contract FinderInterface",
          "name": "_finder",
          "type": "address"
        },
        {
          "internalType": "contract IERC20",
          "name": "_defaultCurrency",
          "type": "address"
        },
        {
          "internalType": "uint64",
          "name": "_defaultLiveness",
          "type": "uint64"
        },
        {
          "internalType": "address",
          "name": "_timerAddress",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "contract IERC20",
          "name": "defaultCurrency",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint64",
          "name": "defaultLiveness",
          "type": "uint64"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "burnedBondPercentage",
          "type": "uint256"
        }
      ],
      "name": "AdminPropertiesSet",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "assertionId",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "caller",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "disputer",
          "type": "address"
        }
      ],
      "name": "AssertionDisputed",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "assertionId",
          "type": "bytes32"
        },
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "domainId",
          "type": "bytes32"
        },
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "claim",
          "type": "bytes"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "asserter",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "callbackRecipient",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "escalationManager",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "caller",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint64",
          "name": "expirationTime",
          "type": "uint64"
        },
        {
          "indexed": false,
          "internalType": "contract IERC20",
          "name": "currency",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "bond",
          "type": "uint256"
        },
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "identifier",
          "type": "bytes32"
        }
      ],
      "name": "AssertionMade",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "assertionId",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "bondRecipient",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "bool",
          "name": "disputed",
          "type": "bool"
        },
        {
          "indexed": false,
          "internalType": "bool",
          "name": "settlementResolution",
          "type": "bool"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "settleCaller",
          "type": "address"
        }
      ],
      "name": "AssertionSettled",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "bytes",
          "name": "claim",
          "type": "bytes"
        },
        {
          "internalType": "address",
          "name": "asserter",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "callbackRecipient",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "escalationManager",
          "type": "address"
        },
        {
          "internalType": "uint64",
          "name": "liveness",
          "type": "uint64"
        },
        {
          "internalType": "contract IERC20",
          "name": "currency",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "bond",
          "type": "uint256"
        },
        {
          "internalType": "bytes32",
          "name": "identifier",
          "type": "bytes32"
        },
        {
          "internalType": "bytes32",
          "name": "domainId",
          "type": "bytes32"
        }
      ],
      "name": "assertTruth",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "assertionId",
          "type": "bytes32"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes",
          "name": "claim",
          "type": "bytes"
        },
        {
          "internalType": "address",
          "name": "asserter",
          "type": "address"
        }
      ],
      "name": "assertTruthWithDefaults",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "name": "assertions",
      "outputs": [
        {
          "components": [
            {
              "internalType": "bool",
              "name": "arbitrateViaEscalationManager",
              "type": "bool"
            },
            {
              "internalType": "bool",
              "name": "discardOracle",
              "type": "bool"
            },
            {
              "internalType": "bool",
              "name": "validateDisputers",
              "type": "bool"
            },
            {
              "internalType": "address",
              "name": "assertingCaller",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "escalationManager",
              "type": "address"
            }
          ],
          "internalType": "struct OptimisticOracleV3Interface.EscalationManagerSettings",
          "name": "escalationManagerSettings",
          "type": "tuple"
        },
        {
          "internalType": "address",
          "name": "asserter",
          "type": "address"
        },
        {
          "internalType": "uint64",
          "name": "assertionTime",
          "type": "uint64"
        },
        {
          "internalType": "bool",
          "name": "settled",
          "type": "bool"
        },
        {
          "internalType": "contract IERC20",
          "name": "currency",
          "type": "address"
        },
        {
          "internalType": "uint64",
          "name": "expirationTime",
          "type": "uint64"
        },
        {
          "internalType": "bool",
          "name": "settlementResolution",
          "type": "bool"
        },
        {
          "internalType": "bytes32",
          "name": "domainId",
          "type": "bytes32"
        },
        {
          "internalType": "bytes32",
          "name": "identifier",
          "type": "bytes32"
        },
        {
          "internalType": "uint256",
          "name": "bond",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "callbackRecipient",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "disputer",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "burnedBondPercentage",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "cachedCurrencies",
      "outputs": [
        {
          "internalType": "bool",
          "name": "isWhitelisted",
          "type": "bool"
        },
        {
          "internalType": "uint256",
          "name": "finalFee",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "name": "cachedIdentifiers",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "cachedOracle",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "defaultCurrency",
      "outputs": [
        {
          "internalType": "contract IERC20",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "defaultIdentifier",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "defaultLiveness",
      "outputs": [
        {
          "internalType": "uint64",
          "name": "",
          "type": "uint64"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "assertionId",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "disputer",
          "type": "address"
        }
      ],
      "name": "disputeAssertion",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "finder",
      "outputs": [
        {
          "internalType": "contract FinderInterface",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "assertionId",
          "type": "bytes32"
        }
      ],
      "name": "getAssertion",
      "outputs": [
        {
          "components": [
            {
              "components": [
                {
                  "internalType": "bool",
                  "name": "arbitrateViaEscalationManager",
                  "type": "bool"
                },
                {
                  "internalType": "bool",
                  "name": "discardOracle",
                  "type": "bool"
                },
                {
                  "internalType": "bool",
                  "name": "validateDisputers",
                  "type": "bool"
                },
                {
                  "internalType": "address",
                  "name": "assertingCaller",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "escalationManager",
                  "type": "address"
                }
              ],
              "internalType": "struct OptimisticOracleV3Interface.EscalationManagerSettings",
              "name": "escalationManagerSettings",
              "type": "tuple"
            },
            {
              "internalType": "address",
              "name": "asserter",
              "type": "address"
            },
            {
              "internalType": "uint64",
              "name": "assertionTime",
              "type": "uint64"
            },
            {
              "internalType": "bool",
              "name": "settled",
              "type": "bool"
            },
            {
              "internalType": "contract IERC20",
              "name": "currency",
              "type": "address"
            },
            {
              "internalType": "uint64",
              "name": "expirationTime",
              "type": "uint64"
            },
            {
              "internalType": "bool",
              "name": "settlementResolution",
              "type": "bool"
            },
            {
              "internalType": "bytes32",
              "name": "domainId",
              "type": "bytes32"
            },
            {
              "internalType": "bytes32",
              "name": "identifier",
              "type": "bytes32"
            },
            {
              "internalType": "uint256",
              "name": "bond",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "callbackRecipient",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "disputer",
              "type": "address"
            }
          ],
          "internalType": "struct OptimisticOracleV3Interface.Assertion",
          "name": "",
          "type": "tuple"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "assertionId",
          "type": "bytes32"
        }
      ],
      "name": "getAssertionResult",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getCurrentTime",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "currency",
          "type": "address"
        }
      ],
      "name": "getMinimumBond",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes[]",
          "name": "data",
          "type": "bytes[]"
        }
      ],
      "name": "multicall",
      "outputs": [
        {
          "internalType": "bytes[]",
          "name": "results",
          "type": "bytes[]"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "numericalTrue",
      "outputs": [
        {
          "internalType": "int256",
          "name": "",
          "type": "int256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract IERC20",
          "name": "_defaultCurrency",
          "type": "address"
        },
        {
          "internalType": "uint64",
          "name": "_defaultLiveness",
          "type": "uint64"
        },
        {
          "internalType": "uint256",
          "name": "_burnedBondPercentage",
          "type": "uint256"
        }
      ],
      "name": "setAdminProperties",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "time",
          "type": "uint256"
        }
      ],
      "name": "setCurrentTime",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "assertionId",
          "type": "bytes32"
        }
      ],
      "name": "settleAndGetAssertionResult",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "assertionId",
          "type": "bytes32"
        }
      ],
      "name": "settleAssertion",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "assertionId",
          "type": "bytes32"
        }
      ],
      "name": "stampAssertion",
      "outputs": [
        {
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "identifier",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "currency",
          "type": "address"
        }
      ],
      "name": "syncUmaParams",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "timerAddress",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "bytecode": {
    "object": "0x60a06040523480156200001157600080fd5b5060405162003e9638038062003e9683398101604081905262000034916200065e565b6000805460ff191660011790558084848462000057620000513390565b620000a8565b6001600160a01b0383166080526200007982826706f05b59d3b2000062000101565b5050600780546001600160a01b0319166001600160a01b039390931692909217909155506200076d9350505050565b600080546001600160a01b03838116610100818102610100600160a81b0319851617855560405193049190911692909183917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a35050565b6000546001600160a01b03610100909104163314620001675760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064015b60405180910390fd5b670de0b6b3a7640000811115620001c15760405162461bcd60e51b815260206004820152601c60248201527f4275726e656420626f6e642070657263656e74616765203e203130300000000060448201526064016200015e565b60008111620002135760405162461bcd60e51b815260206004820152601b60248201527f4275726e656420626f6e642070657263656e746167652069732030000000000060448201526064016200015e565b6005819055600680546001600160401b038416600160a01b026001600160e01b03199091166001600160a01b03861617179055620002616b082a6a68aa4a8bea8a4aaa8960a31b84620002b8565b604080516001600160a01b03851681526001600160401b03841660208201529081018290527fd0f09246d369018534c67fec6a6c3259c6f962ef82c5521c337ae0ccc104e4bd9060600160405180910390a1505050565b6080516040516302abf57960e61b8152654f7261636c6560d01b60048201526001600160a01b039091169063aafd5e4090602401602060405180830381865afa1580156200030a573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620003309190620006d1565b600180546001600160a01b0319166001600160a01b03929092169190911790556200035a62000523565b6001600160a01b03166390978d1b836040518263ffffffff1660e01b81526004016200038891815260200190565b602060405180830381865afa158015620003a6573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620003cc9190620006f8565b6000838152600360205260409020805460ff1916911515919091179055620003f3620005b9565b604051631d1d5b3960e11b81526001600160a01b0383811660048301529190911690633a3ab67290602401602060405180830381865afa1580156200043c573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620004629190620006f8565b6001600160a01b0382166000908152600260205260409020805460ff1916911515919091179055620004936200060b565b604051635b97aadd60e01b81526001600160a01b0383811660048301529190911690635b97aadd90602401602060405180830381865afa158015620004dc573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200050291906200071c565b516001600160a01b0390911660009081526002602052604090206001015550565b6080516040516302abf57960e61b81527f4964656e74696669657257686974656c6973740000000000000000000000000060048201526000916001600160a01b03169063aafd5e40906024015b602060405180830381865afa1580156200058e573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620005b49190620006d1565b905090565b6080516040516302abf57960e61b81527f436f6c6c61746572616c57686974656c6973740000000000000000000000000060048201526000916001600160a01b03169063aafd5e409060240162000570565b6080516040516302abf57960e61b81526453746f726560d81b60048201526000916001600160a01b03169063aafd5e409060240162000570565b6001600160a01b03811681146200065b57600080fd5b50565b600080600080608085870312156200067557600080fd5b8451620006828162000645565b6020860151909450620006958162000645565b60408601519093506001600160401b0381168114620006b357600080fd5b6060860151909250620006c68162000645565b939692955090935050565b600060208284031215620006e457600080fd5b8151620006f18162000645565b9392505050565b6000602082840312156200070b57600080fd5b81518015158114620006f157600080fd5b6000602082840312156200072f57600080fd5b604051602081016001600160401b03811182821017156200076057634e487b7160e01b600052604160045260246000fd5b6040529151825250919050565b6080516136f1620007a560003960008181610578015281816116df01528181611fa701528181612607015261266c01526136f16000f3fe608060405234801561001057600080fd5b50600436106101c45760003560e01c80638da5cb5b116100f9578063b9a3c84c11610097578063da03b36e11610071578063da03b36e146106a4578063e39dfd7f146106b3578063f2fde38b146106c6578063fe4e1983146106d957600080fd5b8063b9a3c84c14610573578063d509b0171461059a578063d60715b5146105b057600080fd5b8063a7af2d0f116100d3578063a7af2d0f1461050d578063a865578514610520578063ac9650d814610533578063afedba4f1461055357600080fd5b80638da5cb5b146104d15780638ea2f2ab146104e7578063a6a22b43146104fa57600080fd5b80634360af3d11610166578063707621571161014057806370762157146102bf578063715018a614610303578063827625201461030b578063883028841461031e57600080fd5b80634360af3d14610266578063530dd392146102795780636457c979146102ac57600080fd5b806322f8e566116101a257806322f8e5661461022357806329cb924d1461023857806336b13af4146102405780634124beef1461025357600080fd5b806308e7c3e6146101c95780631c39c38d146101e557806320402e1d14610210575b600080fd5b6101d260055481565b6040519081526020015b60405180910390f35b6007546101f8906001600160a01b031681565b6040516001600160a01b0390911681526020016101dc565b6006546101f8906001600160a01b031681565b610236610231366004612c90565b61070b565b005b6101d2610781565b6101d261024e366004612cce565b610790565b610236610261366004612c90565b610817565b6101d2610274366004612d50565b610be1565b61029c610287366004612c90565b60036020526000908152604090205460ff1681565b60405190151581526020016101dc565b6101d26102ba366004612df1565b610c1c565b6102ec6102cd366004612d50565b6002602052600090815260409020805460019091015460ff9091169082565b6040805192151583526020830191909152016101dc565b610236611233565b610236610319366004612ee1565b61126f565b6104c461032c366004612c90565b6040805161022081018252600061018082018181526101a083018290526101c083018290526101e083018290526102008301829052825260208201819052918101829052606081018290526080810182905260a0810182905260c0810182905260e0810182905261010081018290526101208101829052610140810182905261016081019190915250600090815260046020818152604092839020835161022081018552815460ff80821615156101808401908152610100808404831615156101a0860152620100008404831615156101c08601526001600160a01b03630100000090940484166101e0860152600186015484166102008601529084526002850154808416968501969096526001600160401b03600160a01b808804821699860199909952600160e01b96879004831615156060860152600386015480851660808701529889041660a085015294909604909516151560c08201529281015460e08401526005810154918301919091526006810154610120830152600781015483166101408301526008015490911661016082015290565b6040516101dc9190612f61565b60005461010090046001600160a01b03166101f8565b61029c6104f5366004612c90565b6113ea565b61023661050836600461303b565b611422565b6001546101f8906001600160a01b031681565b61023661052e36600461303b565b6116c1565b61054661054136600461306b565b611935565b6040516101dc919061312f565b610566610561366004612c90565b611a8c565b6040516101dc9190613191565b6101f87f000000000000000000000000000000000000000000000000000000000000000081565b6101d26b082a6a68aa4a8bea8a4aaa8960a31b81565b61068c6105be366004612c90565b600460208181526000928352604092839020835160a081018552815460ff808216151583526101008204811615159483019490945262010000810484161515958201959095526001600160a01b0363010000009095048516606082015260018201548516608082015260028201546003830154948301546005840154600685015460078601546008909601549498848116986001600160401b03600160a01b80880482169a600160e01b9889900481169a8486169a928504909316989093049092169594939290811691168c565b6040516101dc9c9b9a999897969594939291906131a4565b6101d2670de0b6b3a764000081565b61029c6106c1366004612c90565b611a97565b6102366106d4366004612d50565b611c15565b6006546106f390600160a01b90046001600160401b031681565b6040516001600160401b0390911681526020016101dc565b6007546001600160a01b031661072057600080fd5b60075460405163117c72b360e11b8152600481018390526001600160a01b03909116906322f8e56690602401600060405180830381600087803b15801561076657600080fd5b505af115801561077a573d6000803e3d6000fd5b5050505050565b600061078b611cb3565b905090565b600061080d84848080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201829052506006548894509092508291506001600160401b03600160a01b820416906001600160a01b03166107f681610be1565b6b082a6a68aa4a8bea8a4aaa8960a31b6000610c1c565b90505b9392505050565b61081f611d43565b61082e6000805460ff19169055565b600081815260046020526040902060028101546001600160a01b03166108965760405162461bcd60e51b8152602060048201526018602482015277105cdcd95c9d1a5bdb88191bd95cc81b9bdd08195e1a5cdd60421b60448201526064015b60405180910390fd5b6002810154600160e01b900460ff16156108f25760405162461bcd60e51b815260206004820152601960248201527f417373657274696f6e20616c726561647920736574746c656400000000000000604482015260640161088d565b60028101805460ff60e01b1916600160e01b17905560088101546001600160a01b0316610a1857610921610781565b6003820154600160a01b90046001600160401b0316111561097c5760405162461bcd60e51b8152602060048201526015602482015274105cdcd95c9d1a5bdb881b9bdd08195e1c1a5c9959605a1b604482015260640161088d565b60038101805460ff60e01b198116600160e01b17909155600282015460068301546109b4926001600160a01b03908116921690611d95565b6109bf826001611dfd565b6002810154604080516000815260016020820152338183015290516001600160a01b039092169184917ff4fa324b13daeb4e1aae736c2553632ae0fb16fb31f2d4da8ac99fd056313a13919081900360600190a3610bcb565b60058101546002820154600091610a4191859190600160a01b90046001600160401b0316611f04565b8254909150610100900460ff1615610a675760038201805460ff60e01b19169055610a89565b60038201805460ff60e01b1916670de0b6b3a76400008314600160e01b021790555b6000670de0b6b3a76400008214610aad5760088301546001600160a01b0316610abc565b60028301546001600160a01b03165b90506000670de0b6b3a76400008460060154600554610adb919061323b565b610ae59190613270565b905060008185600601546002610afb919061323b565b610b059190613292565b9050610b27610b12611f87565b60038701546001600160a01b03169084611d95565b6003850154610b40906001600160a01b03168483611d95565b8454610100900460ff16610b68576003850154610b68908790600160e01b900460ff16611dfd565b60038501546040805160018152600160e01b90920460ff161515602083015233908201526001600160a01b0384169087907ff4fa324b13daeb4e1aae736c2553632ae0fb16fb31f2d4da8ac99fd056313a139060600160405180910390a3505050505b50610bde6000805460ff19166001179055565b50565b6001600160a01b038116600090815260026020526040812060010154600554610c1282670de0b6b3a764000061323b565b6108109190613270565b6000610c26611d43565b610c356000805460ff19169055565b6000610c3f610781565b9050610c5a8b86836001600160401b03168a8a8e8e8b61201b565b91506001600160a01b038a16610ca75760405162461bcd60e51b8152602060048201526012602482015271041737365727465722063616e7420626520360741b604482015260640161088d565b6000828152600460205260409020600201546001600160a01b031615610d0f5760405162461bcd60e51b815260206004820152601860248201527f417373657274696f6e20616c7265616479206578697374730000000000000000604482015260640161088d565b610d1884612062565b610d5d5760405162461bcd60e51b81526020600482015260166024820152752ab739bab83837b93a32b21034b232b73a34b334b2b960511b604482015260640161088d565b610d668661211b565b610da95760405162461bcd60e51b8152602060048201526014602482015273556e737570706f727465642063757272656e637960601b604482015260640161088d565b610db286610be1565b851015610df75760405162461bcd60e51b8152602060048201526013602482015272426f6e6420616d6f756e7420746f6f206c6f7760681b604482015260640161088d565b6040805161022081018252600061018082018181526101a083018290526101c08301829052336101e08401526001600160a01b038c81166102008501529083528d811660208401526001600160401b038516938301939093526060820152908716608082015260a08101610e6b89846132a5565b6001600160401b031681526020016000151581526020018481526020018581526020018681526020018a6001600160a01b0316815260200160006001600160a01b03168152506004600084815260200190815260200160002060008201518160000160008201518160000160006101000a81548160ff02191690831515021790555060208201518160000160016101000a81548160ff02191690831515021790555060408201518160000160026101000a81548160ff02191690831515021790555060608201518160000160036101000a8154816001600160a01b0302191690836001600160a01b0316021790555060808201518160010160006101000a8154816001600160a01b0302191690836001600160a01b03160217905550505060208201518160020160006101000a8154816001600160a01b0302191690836001600160a01b0316021790555060408201518160020160146101000a8154816001600160401b0302191690836001600160401b03160217905550606082015181600201601c6101000a81548160ff02191690831515021790555060808201518160030160006101000a8154816001600160a01b0302191690836001600160a01b0316021790555060a08201518160030160146101000a8154816001600160401b0302191690836001600160401b0316021790555060c082015181600301601c6101000a81548160ff02191690831515021790555060e08201518160040155610100820151816005015561012082015181600601556101408201518160070160006101000a8154816001600160a01b0302191690836001600160a01b031602179055506101608201518160080160006101000a8154816001600160a01b0302191690836001600160a01b0316021790555090505060006111078361227d565b8051909150156111515760405162461bcd60e51b8152602060048201526015602482015274105cdcd95c9d1a5bdb881b9bdd08185b1b1bddd959605a1b604482015260640161088d565b6000838152600460209081526040918290209083015191830151606090930151815462ffff001916620100009115159190910261ff00191617610100931515939093029290921760ff19169015151790556111b76001600160a01b038716333088612352565b838a6001600160a01b0316837fdb1513f0abeb57a364db56aa3eb52015cca5268f00fd67bc73aaf22bccab02b7868f8e8e338f8a6111f591906132a5565b8f8f60405161120b9897969594939291906132c5565b60405180910390a4506112266000805460ff19166001179055565b9998505050505050505050565b6000546001600160a01b036101009091041633146112635760405162461bcd60e51b815260040161088d90613327565b61126d600061238a565b565b6000546001600160a01b0361010090910416331461129f5760405162461bcd60e51b815260040161088d90613327565b670de0b6b3a76400008111156112f75760405162461bcd60e51b815260206004820152601c60248201527f4275726e656420626f6e642070657263656e74616765203e2031303000000000604482015260640161088d565b600081116113475760405162461bcd60e51b815260206004820152601b60248201527f4275726e656420626f6e642070657263656e7461676520697320300000000000604482015260640161088d565b6005819055600680546001600160401b038416600160a01b026001600160e01b03199091166001600160a01b038616171790556113936b082a6a68aa4a8bea8a4aaa8960a31b846116c1565b604080516001600160a01b03851681526001600160401b03841660208201529081018290527fd0f09246d369018534c67fec6a6c3259c6f962ef82c5521c337ae0ccc104e4bd9060600160405180910390a1505050565b600081815260046020526040812060020154600160e01b900460ff166114135761141382610817565b61141c82611a97565b92915050565b61142a611d43565b6114396000805460ff19169055565b6001600160a01b0381166114855760405162461bcd60e51b8152602060048201526013602482015272044697370757465722063616e2774206265203606c1b604482015260640161088d565b600082815260046020526040902060028101546001600160a01b03166114e85760405162461bcd60e51b8152602060048201526018602482015277105cdcd95c9d1a5bdb88191bd95cc81b9bdd08195e1a5cdd60421b604482015260640161088d565b60088101546001600160a01b0316156115435760405162461bcd60e51b815260206004820152601a60248201527f417373657274696f6e20616c7265616479206469737075746564000000000000604482015260640161088d565b61154b610781565b6003820154600160a01b90046001600160401b0316116115a45760405162461bcd60e51b8152602060048201526014602482015273105cdcd95c9d1a5bdb881a5cc8195e1c1a5c995960621b604482015260640161088d565b6115ad836123e3565b6115ef5760405162461bcd60e51b8152602060048201526013602482015272111a5cdc1d5d19481b9bdd08185b1b1bddd959606a1b604482015260640161088d565b6008810180546001600160a01b0319166001600160a01b03848116919091179091556006820154600383015461162a92169033903090612352565b6005810154600282015461164f918591600160a01b90046001600160401b031661249f565b61165883612516565b8054610100900460ff161561167257611672836000611dfd565b6040516001600160a01b03831690339085907f60133788b013c89f2a3756dbc47e3484997b87bd7e0af98a7d70232032c1ce2b90600090a4506116bd6000805460ff19166001179055565b5050565b6040516302abf57960e61b8152654f7261636c6560d01b60048201527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03169063aafd5e4090602401602060405180830381865afa15801561172e573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611752919061335c565b600180546001600160a01b0319166001600160a01b039290921691909117905561177a6125d9565b6001600160a01b03166390978d1b836040518263ffffffff1660e01b81526004016117a791815260200190565b602060405180830381865afa1580156117c4573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906117e89190613389565b6000838152600360205260409020805460ff191691151591909117905561180d61263e565b604051631d1d5b3960e11b81526001600160a01b0383811660048301529190911690633a3ab67290602401602060405180830381865afa158015611855573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906118799190613389565b6001600160a01b0382166000908152600260205260409020805460ff19169115159190911790556118a8611f87565b604051635b97aadd60e01b81526001600160a01b0383811660048301529190911690635b97aadd90602401602060405180830381865afa1580156118f0573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061191491906133a4565b516001600160a01b0390911660009081526002602052604090206001015550565b6060816001600160401b0381111561194f5761194f612d6d565b60405190808252806020026020018201604052801561198257816020015b606081526020019060019003908161196d5790505b50905060005b82811015611a8557600080308686858181106119a6576119a66133e5565b90506020028101906119b891906133fb565b6040516119c6929190613448565b600060405180830381855af49150503d8060008114611a01576040519150601f19603f3d011682016040523d82523d6000602084013e611a06565b606091505b509150915081611a5257604481511015611a1f57600080fd5b60048101905080806020019051810190611a399190613458565b60405162461bcd60e51b815260040161088d9190613191565b80848481518110611a6557611a656133e5565b602002602001018190525050508080611a7d906134ce565b915050611988565b5092915050565b606061141c826126a3565b6000818152600460208181526040808420815161022081018352815460ff80821615156101808401908152610100808404831615156101a0860152620100008404831615156101c08601526001600160a01b03630100000090940484166101e0860152600186015484166102008601529084526002850154808416978501979097526001600160401b03600160a01b808904821697860197909752600160e01b97889004831615156060860152600386015480851660808701529687041660a085015295909404909316151560c08201529381015460e085015260058101549284019290925260068201546101208401526007820154811661014084015260089091015416610160820181905215801590611bb457508051602001515b15611bc25750600092915050565b8060600151611c0b5760405162461bcd60e51b8152602060048201526015602482015274105cdcd95c9d1a5bdb881b9bdd081cd95d1d1b1959605a1b604482015260640161088d565b60c0015192915050565b6000546001600160a01b03610100909104163314611c455760405162461bcd60e51b815260040161088d90613327565b6001600160a01b038116611caa5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b606482015260840161088d565b610bde8161238a565b6007546000906001600160a01b031615611d3e57600760009054906101000a90046001600160a01b03166001600160a01b03166329cb924d6040518163ffffffff1660e01b8152600401602060405180830381865afa158015611d1a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061078b91906134e7565b504290565b60005460ff1661126d5760405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c00604482015260640161088d565b6040516001600160a01b038316602482015260448101829052611df890849063a9059cbb60e01b906064015b60408051601f198184030181529190526020810180516001600160e01b03166001600160e01b031990931692909217909152612729565b505050565b600082815260046020526040902060078101546001909101546001600160a01b0391821691168115611e8c576040516378d8ab5960e11b81526004810185905283151560248201526001600160a01b0383169063f1b156b290604401600060405180830381600087803b158015611e7357600080fd5b505af1158015611e87573d6000803e3d6000fd5b505050505b6001600160a01b03811615611efe576040516378d8ab5960e11b81526004810185905283151560248201526001600160a01b0382169063f1b156b290604401600060405180830381600087803b158015611ee557600080fd5b505af1158015611ef9573d6000803e3d6000fd5b505050505b50505050565b6000611f0f846127fb565b6001600160a01b031663719c6d568484611f28886126a3565b6040518463ffffffff1660e01b8152600401611f4693929190613500565b602060405180830381865afa158015611f63573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061080d91906134e7565b6040516302abf57960e61b81526453746f726560d81b60048201526000907f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03169063aafd5e40906024015b602060405180830381865afa158015611ff7573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061078b919061335c565b600088888888888888883360405160200161203e9998979695949392919061351f565b60405160208183030381529060405280519060200120905098975050505050505050565b60008181526003602052604081205460ff161561208157506001919050565b6120896125d9565b6001600160a01b03166390978d1b836040518263ffffffff1660e01b81526004016120b691815260200190565b602060405180830381865afa1580156120d3573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906120f79190613389565b600092835260036020526040909220805460ff191692151592831790555060ff1690565b6001600160a01b03811660009081526002602052604081205460ff161561214457506001919050565b61214c61263e565b604051631d1d5b3960e11b81526001600160a01b0384811660048301529190911690633a3ab67290602401602060405180830381865afa158015612194573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906121b89190613389565b6001600160a01b0383166000908152600260205260409020805460ff19169115159190911790556121e7611f87565b604051635b97aadd60e01b81526001600160a01b0384811660048301529190911690635b97aadd90602401602060405180830381865afa15801561222f573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061225391906133a4565b516001600160a01b0390921660009081526002602052604090206001810192909255505460ff1690565b6040805160808101825260008082526020808301829052828401829052606083018290528482526004905291909120600101546001600160a01b0316806122e9575050604080516080810182526000808252602082018190529181018290526060810191909152919050565b60405163a6b011a760e01b8152600481018490526001600160a01b0382169063a6b011a790602401608060405180830381865afa15801561232e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108109190613587565b6040516001600160a01b0380851660248301528316604482015260648101829052611efe9085906323b872dd60e01b90608401611dc1565b600080546001600160a01b03838116610100818102610100600160a81b0319851617855560405193049190911692909183917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a35050565b60008181526004602052604081205462010000900460ff1661240757506001919050565b6000828152600460205260409020600101546001600160a01b0316806124305750600192915050565b604051636b915d9160e01b8152600481018490523360248201526001600160a01b03821690636b915d9190604401602060405180830381865afa15801561247b573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108109190613389565b6124a8836127fb565b6001600160a01b031663216666a483836124c1876126a3565b6040518463ffffffff1660e01b81526004016124df93929190613500565b600060405180830381600087803b1580156124f957600080fd5b505af115801561250d573d6000803e3d6000fd5b50505050505050565b600081815260046020526040902060078101546001909101546001600160a01b039182169116811561259d57604051633512293b60e21b8152600481018490526001600160a01b0383169063d448a4ec90602401600060405180830381600087803b15801561258457600080fd5b505af1158015612598573d6000803e3d6000fd5b505050505b6001600160a01b03811615611df857604051633512293b60e21b8152600481018490526001600160a01b0382169063d448a4ec906024016124df565b6040516302abf57960e61b8152721259195b9d1a599a595c95da1a5d195b1a5cdd606a1b60048201526000907f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03169063aafd5e4090602401611fda565b6040516302abf57960e61b81527210dbdb1b185d195c985b15da1a5d195b1a5cdd606a1b60048201526000907f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03169063aafd5e4090602401611fda565b606061141c6126e5604051806020016040528060008152506040518060400160405280600b81526020016a185cdcd95c9d1a5bdb925960aa1b81525085612843565b604080518082018252600a81526937b7a0b9b9b2b93a32b960b11b6020808301919091526000878152600490915291909120600201546001600160a01b0316612889565b600061277e826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b03166128a49092919063ffffffff16565b805190915015611df8578080602001905181019061279c9190613389565b611df85760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b606482015260840161088d565b60008181526004602052604081205460ff1615612832576000828152600460205260409020600101546001600160a01b031661141c565b50506001546001600160a01b031690565b6060600061285185856128b3565b9050848161285e856128f5565b60405160200161287093929190613603565b6040516020818303038152906040529150509392505050565b6060600061289785856128b3565b9050848161285e85612936565b606061080d848460008561298d565b8151606090156128e457816040516020016128ce9190613646565b604051602081830303815290604052905061141c565b816040516020016128ce919061367a565b6060612904608083901c612abe565b61290d83612abe565b6040805160208101939093528201526060015b6040516020818303038152906040529050919050565b606061294e6001600160801b03602084901c16612abe565b6129698360601b6bffffffffffffffffffffffff1916612abe565b6040516020016129209291909182526001600160c01b031916602082015260280190565b6060824710156129ee5760405162461bcd60e51b815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f6044820152651c8818d85b1b60d21b606482015260840161088d565b6001600160a01b0385163b612a455760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000604482015260640161088d565b600080866001600160a01b03168587604051612a61919061369f565b60006040518083038185875af1925050503d8060008114612a9e576040519150601f19603f3d011682016040523d82523d6000602084013e612aa3565b606091505b5091509150612ab3828286612c57565b979650505050505050565b6000808260001c9050806001600160801b03169050806801000000000000000002811777ffffffffffffffff0000000000000000ffffffffffffffff169050806401000000000281177bffffffff00000000ffffffff00000000ffffffff00000000ffffffff16905080620100000281177dffff0000ffff0000ffff0000ffff0000ffff0000ffff0000ffff0000ffff169050806101000281177eff00ff00ff00ff00ff00ff00ff00ff00ff00ff00ff00ff00ff00ff00ff00ff1690508060100281177f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f16905060006008827f08080808080808080808080808080808080808080808080808080808080808081681612bd957612bd961325a565b0460047f040404040404040404040404040404040404040404040404040404040404040484160460027f020202020202020202020202020202020202020202020202020202020202020285160417166027029091017f3030303030303030303030303030303030303030303030303030303030303030019392505050565b60608315612c66575081610810565b825115612c765782518084602001fd5b8160405162461bcd60e51b815260040161088d9190613191565b600060208284031215612ca257600080fd5b5035919050565b6001600160a01b0381168114610bde57600080fd5b8035612cc981612ca9565b919050565b600080600060408486031215612ce357600080fd5b83356001600160401b0380821115612cfa57600080fd5b818601915086601f830112612d0e57600080fd5b813581811115612d1d57600080fd5b876020828501011115612d2f57600080fd5b60209283019550935050840135612d4581612ca9565b809150509250925092565b600060208284031215612d6257600080fd5b813561081081612ca9565b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f191681016001600160401b0381118282101715612dab57612dab612d6d565b604052919050565b60006001600160401b03821115612dcc57612dcc612d6d565b50601f01601f191660200190565b80356001600160401b0381168114612cc957600080fd5b60008060008060008060008060006101208a8c031215612e1057600080fd5b89356001600160401b03811115612e2657600080fd5b8a01601f81018c13612e3757600080fd5b8035612e4a612e4582612db3565b612d83565b8181528d6020838501011115612e5f57600080fd5b81602084016020830137600060208383010152809b50505050612e8460208b01612cbe565b9750612e9260408b01612cbe565b9650612ea060608b01612cbe565b9550612eae60808b01612dda565b9450612ebc60a08b01612cbe565b935060c08a0135925060e08a013591506101008a013590509295985092959850929598565b600080600060608486031215612ef657600080fd5b8335612f0181612ca9565b9250612f0f60208501612dda565b9150604084013590509250925092565b8051151582526020808201511515908301526040808201511515908301526060808201516001600160a01b039081169184019190915260809182015116910152565b600061020082019050612f75828451612f1f565b60208301516001600160a01b0390811660a084015260408401516001600160401b031660c08401526060840151151560e084015260808401519081166101008085019190915260a08501519150610120612fd9818601846001600160401b03169052565b60c08601519250610140612ff08187018515159052565b60e08701516101608781019190915292870151610180870152908601516101a08601528501516001600160a01b039081166101c0860152908501519081166101e08501529050611a85565b6000806040838503121561304e57600080fd5b82359150602083013561306081612ca9565b809150509250929050565b6000806020838503121561307e57600080fd5b82356001600160401b038082111561309557600080fd5b818501915085601f8301126130a957600080fd5b8135818111156130b857600080fd5b8660208260051b85010111156130cd57600080fd5b60209290920196919550909350505050565b60005b838110156130fa5781810151838201526020016130e2565b50506000910152565b6000815180845261311b8160208601602086016130df565b601f01601f19169290920160200192915050565b6000602080830181845280855180835260408601915060408160051b870101925083870160005b8281101561318457603f19888603018452613172858351613103565b94509285019290850190600101613156565b5092979650505050505050565b6020815260006108106020830184613103565b61020081016131b3828f612f1f565b6001600160a01b039c8d1660a08301526001600160401b039b8c1660c083015299151560e0820152978b16610100890152959098166101208701529215156101408601526101608501919091526101808401526101a08301529284166101c0820152919092166101e090910152919050565b634e487b7160e01b600052601160045260246000fd5b600081600019048311821515161561325557613255613225565b500290565b634e487b7160e01b600052601260045260246000fd5b60008261328d57634e487b7160e01b600052601260045260246000fd5b500490565b8181038181111561141c5761141c613225565b6001600160401b03818116838216019080821115611a8557611a85613225565b60006101008a83528060208401526132df8184018b613103565b6001600160a01b03998a1660408501529789166060840152505093861660808501526001600160401b039290921660a084015290931660c082015260e0019190915292915050565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b60006020828403121561336e57600080fd5b815161081081612ca9565b80518015158114612cc957600080fd5b60006020828403121561339b57600080fd5b61081082613379565b6000602082840312156133b657600080fd5b604051602081018181106001600160401b03821117156133d8576133d8612d6d565b6040529151825250919050565b634e487b7160e01b600052603260045260246000fd5b6000808335601e1984360301811261341257600080fd5b8301803591506001600160401b0382111561342c57600080fd5b60200191503681900382131561344157600080fd5b9250929050565b8183823760009101908152919050565b60006020828403121561346a57600080fd5b81516001600160401b0381111561348057600080fd5b8201601f8101841361349157600080fd5b805161349f612e4582612db3565b8181528560208385010111156134b457600080fd5b6134c58260208301602086016130df565b95945050505050565b6000600182016134e0576134e0613225565b5060010190565b6000602082840312156134f957600080fd5b5051919050565b8381528260208201526060604082015260006134c56060830184613103565b60006101208083526135338184018d613103565b602084019b909b52505060408101979097526001600160401b039590951660608701526001600160a01b03938416608087015291831660a0860152821660c085015260e08401521661010090910152919050565b60006080828403121561359957600080fd5b604051608081018181106001600160401b03821117156135bb576135bb612d6d565b6040526135c783613379565b81526135d560208401613379565b60208201526135e660408401613379565b60408201526135f760608401613379565b60608201529392505050565b600084516136158184602089016130df565b8451908301906136298183602089016130df565b845191019061363c8183602088016130df565b0195945050505050565b600b60fa1b8152600082516136628160018501602087016130df565b601d60f91b6001939091019283015250600201919050565b6000825161368c8184602087016130df565b601d60f91b920191825250600101919050565b600082516136b18184602087016130df565b919091019291505056fea26469706673582212208308750472ceb2de8177ffaad79e9d6970ffe4f59d11183bf06a5727259eab7064736f6c63430008100033",
    "sourceMap": "226:469:53:-:0;;;296:238;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;874:11:32;:18;;-1:-1:-1;;874:18:32;888:4;874:18;;;517:13:53;463:7;472:16;490;921:32:19;940:12;719:10:25;;640:96;940:12:19;921:18;:32::i;:::-;-1:-1:-1;;;;;2924:16:51;;;;2950:62;2969:16;2987;3005:6;2950:18;:62::i;:::-;-1:-1:-1;;728:12:35;:28;;-1:-1:-1;;;;;;728:28:35;-1:-1:-1;;;;;728:28:35;;;;;;;;;;;-1:-1:-1;226:469:53;;-1:-1:-1;;;;226:469:53;2270:187:19;2343:16;2362:6;;-1:-1:-1;;;;;2378:17:19;;;2362:6;2378:17;;;-1:-1:-1;;;;;;2378:17:19;;;;;2410:40;;2362:6;;;;;;;2378:17;;2362:6;;2410:40;;;2333:124;2270:187;:::o;3496:622:51:-;1082:7:19;1108:6;-1:-1:-1;;;;;1108:6:19;;;;;719:10:25;1248:23:19;1240:68;;;;-1:-1:-1;;;1240:68:19;;1159:2:69;1240:68:19;;;1141:21:69;;;1178:18;;;1171:30;1237:34;1217:18;;;1210:62;1289:18;;1240:68:19;;;;;;;;;3695:4:51::1;3670:21;:29;;3662:70;;;::::0;-1:-1:-1;;;3662:70:51;;1520:2:69;3662:70:51::1;::::0;::::1;1502:21:69::0;1559:2;1539:18;;;1532:30;1598;1578:18;;;1571:58;1646:18;;3662:70:51::1;1318:352:69::0;3662:70:51::1;3774:1;3750:21;:25;3742:65;;;::::0;-1:-1:-1;;;3742:65:51;;1877:2:69;3742:65:51::1;::::0;::::1;1859:21:69::0;1916:2;1896:18;;;1889:30;1955:29;1935:18;;;1928:57;2002:18;;3742:65:51::1;1675:351:69::0;3742:65:51::1;3817:20;:44:::0;;;3871:15:::1;:34:::0;;-1:-1:-1;;;;;3915:34:51;::::1;-1:-1:-1::0;;;3915:34:51::1;-1:-1:-1::0;;;;;;3915:34:51;;;-1:-1:-1;;;;;3871:34:51;::::1;3915::::0;::::1;::::0;;3959:59:::1;-1:-1:-1::0;;;3889:16:51;3959:13:::1;:59::i;:::-;4034:77;::::0;;-1:-1:-1;;;;;2265:32:69;;2247:51;;-1:-1:-1;;;;;2334:31:69;;2329:2;2314:18;;2307:59;2382:18;;;2375:34;;;4034:77:51::1;::::0;2235:2:69;2220:18;4034:77:51::1;;;;;;;3496:622:::0;;;:::o;16922:453::-;17015:6;;:56;;-1:-1:-1;;;17015:56:51;;-1:-1:-1;;;17015:56:51;;;2566:25:69;-1:-1:-1;;;;;17015:31:51;;;;;;2539:18:69;;17015:56:51;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;17000:12;:71;;-1:-1:-1;;;;;;17000:71:51;-1:-1:-1;;;;;17000:71:51;;;;;;;;;;17113:25;:23;:25::i;:::-;-1:-1:-1;;;;;17113:47:51;;17161:10;17113:59;;;;;;;;;;;;;2566:25:69;;2554:2;2539:18;;2420:177;17113:59:51;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;17081:29;;;;:17;:29;;;;;:91;;-1:-1:-1;;17081:91:51;;;;;;;;;;17225:25;:23;:25::i;:::-;:49;;-1:-1:-1;;;17225:49:51;;-1:-1:-1;;;;;3321:32:69;;;17225:49:51;;;3303:51:69;17225:39:51;;;;;;;3276:18:69;;17225:49:51;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;17182:26:51;;;;;;:16;:26;;;;;:92;;-1:-1:-1;;17182:92:51;;;;;;;;;;17322:11;:9;:11::i;:::-;:37;;-1:-1:-1;;;17322:37:51;;-1:-1:-1;;;;;3321:32:69;;;17322:37:51;;;3303:51:69;17322:27:51;;;;;;;3276:18:69;;17322:37:51;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:46;-1:-1:-1;;;;;17284:26:51;;;17322:46;17284:26;;;:16;:26;;;;;:35;;:84;-1:-1:-1;16922:453:51:o;21425:211::-;21559:6;;:69;;-1:-1:-1;;;21559:69:51;;21591:36;21559:69;;;2566:25:69;21483:28:51;;-1:-1:-1;;;;;21559:31:51;;;;2539:18:69;;21559:69:51;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;21523:106;;21425:211;:::o;21155:187::-;21265:6;;:69;;-1:-1:-1;;;21265:69:51;;21297:36;21265:69;;;2566:25:69;21213:16:51;;-1:-1:-1;;;;;21265:31:51;;;;2539:18:69;;21265:69:51;2420:177:69;21700:155:51;21792:6;;:55;;-1:-1:-1;;;21792:55:51;;-1:-1:-1;;;21792:55:51;;;2566:25:69;21744:14:51;;-1:-1:-1;;;;;21792:31:51;;;;2539:18:69;;21792:55:51;2420:177:69;14:148;-1:-1:-1;;;;;106:31:69;;96:42;;86:70;;152:1;149;142:12;86:70;14:148;:::o;167:785::-;304:6;312;320;328;381:3;369:9;360:7;356:23;352:33;349:53;;;398:1;395;388:12;349:53;430:9;424:16;449:48;491:5;449:48;:::i;:::-;566:2;551:18;;545:25;516:5;;-1:-1:-1;579:50:69;545:25;579:50;:::i;:::-;700:2;685:18;;679:25;648:7;;-1:-1:-1;;;;;;735:32:69;;723:45;;713:73;;782:1;779;772:12;713:73;857:2;842:18;;836:25;805:7;;-1:-1:-1;870:50:69;836:25;870:50;:::i;:::-;167:785;;;;-1:-1:-1;167:785:69;;-1:-1:-1;;167:785:69:o;2602:268::-;2672:6;2725:2;2713:9;2704:7;2700:23;2696:32;2693:52;;;2741:1;2738;2731:12;2693:52;2773:9;2767:16;2792:48;2834:5;2792:48;:::i;:::-;2859:5;2602:268;-1:-1:-1;;;2602:268:69:o;2875:277::-;2942:6;2995:2;2983:9;2974:7;2970:23;2966:32;2963:52;;;3011:1;3008;3001:12;2963:52;3043:9;3037:16;3096:5;3089:13;3082:21;3075:5;3072:32;3062:60;;3118:1;3115;3108:12;3365:541;3462:6;3515:2;3503:9;3494:7;3490:23;3486:32;3483:52;;;3531:1;3528;3521:12;3483:52;3564:2;3558:9;3606:2;3594:15;;-1:-1:-1;;;;;3624:34:69;;3660:22;;;3621:62;3618:185;;;3725:10;3720:3;3716:20;3713:1;3706:31;3760:4;3757:1;3750:15;3788:4;3785:1;3778:15;3618:185;3819:2;3812:22;3858:16;;3843:32;;-1:-1:-1;3850:6:69;3365:541;-1:-1:-1;3365:541:69:o;:::-;226:469:53;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x608060405234801561001057600080fd5b50600436106101c45760003560e01c80638da5cb5b116100f9578063b9a3c84c11610097578063da03b36e11610071578063da03b36e146106a4578063e39dfd7f146106b3578063f2fde38b146106c6578063fe4e1983146106d957600080fd5b8063b9a3c84c14610573578063d509b0171461059a578063d60715b5146105b057600080fd5b8063a7af2d0f116100d3578063a7af2d0f1461050d578063a865578514610520578063ac9650d814610533578063afedba4f1461055357600080fd5b80638da5cb5b146104d15780638ea2f2ab146104e7578063a6a22b43146104fa57600080fd5b80634360af3d11610166578063707621571161014057806370762157146102bf578063715018a614610303578063827625201461030b578063883028841461031e57600080fd5b80634360af3d14610266578063530dd392146102795780636457c979146102ac57600080fd5b806322f8e566116101a257806322f8e5661461022357806329cb924d1461023857806336b13af4146102405780634124beef1461025357600080fd5b806308e7c3e6146101c95780631c39c38d146101e557806320402e1d14610210575b600080fd5b6101d260055481565b6040519081526020015b60405180910390f35b6007546101f8906001600160a01b031681565b6040516001600160a01b0390911681526020016101dc565b6006546101f8906001600160a01b031681565b610236610231366004612c90565b61070b565b005b6101d2610781565b6101d261024e366004612cce565b610790565b610236610261366004612c90565b610817565b6101d2610274366004612d50565b610be1565b61029c610287366004612c90565b60036020526000908152604090205460ff1681565b60405190151581526020016101dc565b6101d26102ba366004612df1565b610c1c565b6102ec6102cd366004612d50565b6002602052600090815260409020805460019091015460ff9091169082565b6040805192151583526020830191909152016101dc565b610236611233565b610236610319366004612ee1565b61126f565b6104c461032c366004612c90565b6040805161022081018252600061018082018181526101a083018290526101c083018290526101e083018290526102008301829052825260208201819052918101829052606081018290526080810182905260a0810182905260c0810182905260e0810182905261010081018290526101208101829052610140810182905261016081019190915250600090815260046020818152604092839020835161022081018552815460ff80821615156101808401908152610100808404831615156101a0860152620100008404831615156101c08601526001600160a01b03630100000090940484166101e0860152600186015484166102008601529084526002850154808416968501969096526001600160401b03600160a01b808804821699860199909952600160e01b96879004831615156060860152600386015480851660808701529889041660a085015294909604909516151560c08201529281015460e08401526005810154918301919091526006810154610120830152600781015483166101408301526008015490911661016082015290565b6040516101dc9190612f61565b60005461010090046001600160a01b03166101f8565b61029c6104f5366004612c90565b6113ea565b61023661050836600461303b565b611422565b6001546101f8906001600160a01b031681565b61023661052e36600461303b565b6116c1565b61054661054136600461306b565b611935565b6040516101dc919061312f565b610566610561366004612c90565b611a8c565b6040516101dc9190613191565b6101f87f000000000000000000000000000000000000000000000000000000000000000081565b6101d26b082a6a68aa4a8bea8a4aaa8960a31b81565b61068c6105be366004612c90565b600460208181526000928352604092839020835160a081018552815460ff808216151583526101008204811615159483019490945262010000810484161515958201959095526001600160a01b0363010000009095048516606082015260018201548516608082015260028201546003830154948301546005840154600685015460078601546008909601549498848116986001600160401b03600160a01b80880482169a600160e01b9889900481169a8486169a928504909316989093049092169594939290811691168c565b6040516101dc9c9b9a999897969594939291906131a4565b6101d2670de0b6b3a764000081565b61029c6106c1366004612c90565b611a97565b6102366106d4366004612d50565b611c15565b6006546106f390600160a01b90046001600160401b031681565b6040516001600160401b0390911681526020016101dc565b6007546001600160a01b031661072057600080fd5b60075460405163117c72b360e11b8152600481018390526001600160a01b03909116906322f8e56690602401600060405180830381600087803b15801561076657600080fd5b505af115801561077a573d6000803e3d6000fd5b5050505050565b600061078b611cb3565b905090565b600061080d84848080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201829052506006548894509092508291506001600160401b03600160a01b820416906001600160a01b03166107f681610be1565b6b082a6a68aa4a8bea8a4aaa8960a31b6000610c1c565b90505b9392505050565b61081f611d43565b61082e6000805460ff19169055565b600081815260046020526040902060028101546001600160a01b03166108965760405162461bcd60e51b8152602060048201526018602482015277105cdcd95c9d1a5bdb88191bd95cc81b9bdd08195e1a5cdd60421b60448201526064015b60405180910390fd5b6002810154600160e01b900460ff16156108f25760405162461bcd60e51b815260206004820152601960248201527f417373657274696f6e20616c726561647920736574746c656400000000000000604482015260640161088d565b60028101805460ff60e01b1916600160e01b17905560088101546001600160a01b0316610a1857610921610781565b6003820154600160a01b90046001600160401b0316111561097c5760405162461bcd60e51b8152602060048201526015602482015274105cdcd95c9d1a5bdb881b9bdd08195e1c1a5c9959605a1b604482015260640161088d565b60038101805460ff60e01b198116600160e01b17909155600282015460068301546109b4926001600160a01b03908116921690611d95565b6109bf826001611dfd565b6002810154604080516000815260016020820152338183015290516001600160a01b039092169184917ff4fa324b13daeb4e1aae736c2553632ae0fb16fb31f2d4da8ac99fd056313a13919081900360600190a3610bcb565b60058101546002820154600091610a4191859190600160a01b90046001600160401b0316611f04565b8254909150610100900460ff1615610a675760038201805460ff60e01b19169055610a89565b60038201805460ff60e01b1916670de0b6b3a76400008314600160e01b021790555b6000670de0b6b3a76400008214610aad5760088301546001600160a01b0316610abc565b60028301546001600160a01b03165b90506000670de0b6b3a76400008460060154600554610adb919061323b565b610ae59190613270565b905060008185600601546002610afb919061323b565b610b059190613292565b9050610b27610b12611f87565b60038701546001600160a01b03169084611d95565b6003850154610b40906001600160a01b03168483611d95565b8454610100900460ff16610b68576003850154610b68908790600160e01b900460ff16611dfd565b60038501546040805160018152600160e01b90920460ff161515602083015233908201526001600160a01b0384169087907ff4fa324b13daeb4e1aae736c2553632ae0fb16fb31f2d4da8ac99fd056313a139060600160405180910390a3505050505b50610bde6000805460ff19166001179055565b50565b6001600160a01b038116600090815260026020526040812060010154600554610c1282670de0b6b3a764000061323b565b6108109190613270565b6000610c26611d43565b610c356000805460ff19169055565b6000610c3f610781565b9050610c5a8b86836001600160401b03168a8a8e8e8b61201b565b91506001600160a01b038a16610ca75760405162461bcd60e51b8152602060048201526012602482015271041737365727465722063616e7420626520360741b604482015260640161088d565b6000828152600460205260409020600201546001600160a01b031615610d0f5760405162461bcd60e51b815260206004820152601860248201527f417373657274696f6e20616c7265616479206578697374730000000000000000604482015260640161088d565b610d1884612062565b610d5d5760405162461bcd60e51b81526020600482015260166024820152752ab739bab83837b93a32b21034b232b73a34b334b2b960511b604482015260640161088d565b610d668661211b565b610da95760405162461bcd60e51b8152602060048201526014602482015273556e737570706f727465642063757272656e637960601b604482015260640161088d565b610db286610be1565b851015610df75760405162461bcd60e51b8152602060048201526013602482015272426f6e6420616d6f756e7420746f6f206c6f7760681b604482015260640161088d565b6040805161022081018252600061018082018181526101a083018290526101c08301829052336101e08401526001600160a01b038c81166102008501529083528d811660208401526001600160401b038516938301939093526060820152908716608082015260a08101610e6b89846132a5565b6001600160401b031681526020016000151581526020018481526020018581526020018681526020018a6001600160a01b0316815260200160006001600160a01b03168152506004600084815260200190815260200160002060008201518160000160008201518160000160006101000a81548160ff02191690831515021790555060208201518160000160016101000a81548160ff02191690831515021790555060408201518160000160026101000a81548160ff02191690831515021790555060608201518160000160036101000a8154816001600160a01b0302191690836001600160a01b0316021790555060808201518160010160006101000a8154816001600160a01b0302191690836001600160a01b03160217905550505060208201518160020160006101000a8154816001600160a01b0302191690836001600160a01b0316021790555060408201518160020160146101000a8154816001600160401b0302191690836001600160401b03160217905550606082015181600201601c6101000a81548160ff02191690831515021790555060808201518160030160006101000a8154816001600160a01b0302191690836001600160a01b0316021790555060a08201518160030160146101000a8154816001600160401b0302191690836001600160401b0316021790555060c082015181600301601c6101000a81548160ff02191690831515021790555060e08201518160040155610100820151816005015561012082015181600601556101408201518160070160006101000a8154816001600160a01b0302191690836001600160a01b031602179055506101608201518160080160006101000a8154816001600160a01b0302191690836001600160a01b0316021790555090505060006111078361227d565b8051909150156111515760405162461bcd60e51b8152602060048201526015602482015274105cdcd95c9d1a5bdb881b9bdd08185b1b1bddd959605a1b604482015260640161088d565b6000838152600460209081526040918290209083015191830151606090930151815462ffff001916620100009115159190910261ff00191617610100931515939093029290921760ff19169015151790556111b76001600160a01b038716333088612352565b838a6001600160a01b0316837fdb1513f0abeb57a364db56aa3eb52015cca5268f00fd67bc73aaf22bccab02b7868f8e8e338f8a6111f591906132a5565b8f8f60405161120b9897969594939291906132c5565b60405180910390a4506112266000805460ff19166001179055565b9998505050505050505050565b6000546001600160a01b036101009091041633146112635760405162461bcd60e51b815260040161088d90613327565b61126d600061238a565b565b6000546001600160a01b0361010090910416331461129f5760405162461bcd60e51b815260040161088d90613327565b670de0b6b3a76400008111156112f75760405162461bcd60e51b815260206004820152601c60248201527f4275726e656420626f6e642070657263656e74616765203e2031303000000000604482015260640161088d565b600081116113475760405162461bcd60e51b815260206004820152601b60248201527f4275726e656420626f6e642070657263656e7461676520697320300000000000604482015260640161088d565b6005819055600680546001600160401b038416600160a01b026001600160e01b03199091166001600160a01b038616171790556113936b082a6a68aa4a8bea8a4aaa8960a31b846116c1565b604080516001600160a01b03851681526001600160401b03841660208201529081018290527fd0f09246d369018534c67fec6a6c3259c6f962ef82c5521c337ae0ccc104e4bd9060600160405180910390a1505050565b600081815260046020526040812060020154600160e01b900460ff166114135761141382610817565b61141c82611a97565b92915050565b61142a611d43565b6114396000805460ff19169055565b6001600160a01b0381166114855760405162461bcd60e51b8152602060048201526013602482015272044697370757465722063616e2774206265203606c1b604482015260640161088d565b600082815260046020526040902060028101546001600160a01b03166114e85760405162461bcd60e51b8152602060048201526018602482015277105cdcd95c9d1a5bdb88191bd95cc81b9bdd08195e1a5cdd60421b604482015260640161088d565b60088101546001600160a01b0316156115435760405162461bcd60e51b815260206004820152601a60248201527f417373657274696f6e20616c7265616479206469737075746564000000000000604482015260640161088d565b61154b610781565b6003820154600160a01b90046001600160401b0316116115a45760405162461bcd60e51b8152602060048201526014602482015273105cdcd95c9d1a5bdb881a5cc8195e1c1a5c995960621b604482015260640161088d565b6115ad836123e3565b6115ef5760405162461bcd60e51b8152602060048201526013602482015272111a5cdc1d5d19481b9bdd08185b1b1bddd959606a1b604482015260640161088d565b6008810180546001600160a01b0319166001600160a01b03848116919091179091556006820154600383015461162a92169033903090612352565b6005810154600282015461164f918591600160a01b90046001600160401b031661249f565b61165883612516565b8054610100900460ff161561167257611672836000611dfd565b6040516001600160a01b03831690339085907f60133788b013c89f2a3756dbc47e3484997b87bd7e0af98a7d70232032c1ce2b90600090a4506116bd6000805460ff19166001179055565b5050565b6040516302abf57960e61b8152654f7261636c6560d01b60048201527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03169063aafd5e4090602401602060405180830381865afa15801561172e573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611752919061335c565b600180546001600160a01b0319166001600160a01b039290921691909117905561177a6125d9565b6001600160a01b03166390978d1b836040518263ffffffff1660e01b81526004016117a791815260200190565b602060405180830381865afa1580156117c4573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906117e89190613389565b6000838152600360205260409020805460ff191691151591909117905561180d61263e565b604051631d1d5b3960e11b81526001600160a01b0383811660048301529190911690633a3ab67290602401602060405180830381865afa158015611855573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906118799190613389565b6001600160a01b0382166000908152600260205260409020805460ff19169115159190911790556118a8611f87565b604051635b97aadd60e01b81526001600160a01b0383811660048301529190911690635b97aadd90602401602060405180830381865afa1580156118f0573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061191491906133a4565b516001600160a01b0390911660009081526002602052604090206001015550565b6060816001600160401b0381111561194f5761194f612d6d565b60405190808252806020026020018201604052801561198257816020015b606081526020019060019003908161196d5790505b50905060005b82811015611a8557600080308686858181106119a6576119a66133e5565b90506020028101906119b891906133fb565b6040516119c6929190613448565b600060405180830381855af49150503d8060008114611a01576040519150601f19603f3d011682016040523d82523d6000602084013e611a06565b606091505b509150915081611a5257604481511015611a1f57600080fd5b60048101905080806020019051810190611a399190613458565b60405162461bcd60e51b815260040161088d9190613191565b80848481518110611a6557611a656133e5565b602002602001018190525050508080611a7d906134ce565b915050611988565b5092915050565b606061141c826126a3565b6000818152600460208181526040808420815161022081018352815460ff80821615156101808401908152610100808404831615156101a0860152620100008404831615156101c08601526001600160a01b03630100000090940484166101e0860152600186015484166102008601529084526002850154808416978501979097526001600160401b03600160a01b808904821697860197909752600160e01b97889004831615156060860152600386015480851660808701529687041660a085015295909404909316151560c08201529381015460e085015260058101549284019290925260068201546101208401526007820154811661014084015260089091015416610160820181905215801590611bb457508051602001515b15611bc25750600092915050565b8060600151611c0b5760405162461bcd60e51b8152602060048201526015602482015274105cdcd95c9d1a5bdb881b9bdd081cd95d1d1b1959605a1b604482015260640161088d565b60c0015192915050565b6000546001600160a01b03610100909104163314611c455760405162461bcd60e51b815260040161088d90613327565b6001600160a01b038116611caa5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b606482015260840161088d565b610bde8161238a565b6007546000906001600160a01b031615611d3e57600760009054906101000a90046001600160a01b03166001600160a01b03166329cb924d6040518163ffffffff1660e01b8152600401602060405180830381865afa158015611d1a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061078b91906134e7565b504290565b60005460ff1661126d5760405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c00604482015260640161088d565b6040516001600160a01b038316602482015260448101829052611df890849063a9059cbb60e01b906064015b60408051601f198184030181529190526020810180516001600160e01b03166001600160e01b031990931692909217909152612729565b505050565b600082815260046020526040902060078101546001909101546001600160a01b0391821691168115611e8c576040516378d8ab5960e11b81526004810185905283151560248201526001600160a01b0383169063f1b156b290604401600060405180830381600087803b158015611e7357600080fd5b505af1158015611e87573d6000803e3d6000fd5b505050505b6001600160a01b03811615611efe576040516378d8ab5960e11b81526004810185905283151560248201526001600160a01b0382169063f1b156b290604401600060405180830381600087803b158015611ee557600080fd5b505af1158015611ef9573d6000803e3d6000fd5b505050505b50505050565b6000611f0f846127fb565b6001600160a01b031663719c6d568484611f28886126a3565b6040518463ffffffff1660e01b8152600401611f4693929190613500565b602060405180830381865afa158015611f63573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061080d91906134e7565b6040516302abf57960e61b81526453746f726560d81b60048201526000907f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03169063aafd5e40906024015b602060405180830381865afa158015611ff7573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061078b919061335c565b600088888888888888883360405160200161203e9998979695949392919061351f565b60405160208183030381529060405280519060200120905098975050505050505050565b60008181526003602052604081205460ff161561208157506001919050565b6120896125d9565b6001600160a01b03166390978d1b836040518263ffffffff1660e01b81526004016120b691815260200190565b602060405180830381865afa1580156120d3573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906120f79190613389565b600092835260036020526040909220805460ff191692151592831790555060ff1690565b6001600160a01b03811660009081526002602052604081205460ff161561214457506001919050565b61214c61263e565b604051631d1d5b3960e11b81526001600160a01b0384811660048301529190911690633a3ab67290602401602060405180830381865afa158015612194573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906121b89190613389565b6001600160a01b0383166000908152600260205260409020805460ff19169115159190911790556121e7611f87565b604051635b97aadd60e01b81526001600160a01b0384811660048301529190911690635b97aadd90602401602060405180830381865afa15801561222f573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061225391906133a4565b516001600160a01b0390921660009081526002602052604090206001810192909255505460ff1690565b6040805160808101825260008082526020808301829052828401829052606083018290528482526004905291909120600101546001600160a01b0316806122e9575050604080516080810182526000808252602082018190529181018290526060810191909152919050565b60405163a6b011a760e01b8152600481018490526001600160a01b0382169063a6b011a790602401608060405180830381865afa15801561232e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108109190613587565b6040516001600160a01b0380851660248301528316604482015260648101829052611efe9085906323b872dd60e01b90608401611dc1565b600080546001600160a01b03838116610100818102610100600160a81b0319851617855560405193049190911692909183917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a35050565b60008181526004602052604081205462010000900460ff1661240757506001919050565b6000828152600460205260409020600101546001600160a01b0316806124305750600192915050565b604051636b915d9160e01b8152600481018490523360248201526001600160a01b03821690636b915d9190604401602060405180830381865afa15801561247b573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108109190613389565b6124a8836127fb565b6001600160a01b031663216666a483836124c1876126a3565b6040518463ffffffff1660e01b81526004016124df93929190613500565b600060405180830381600087803b1580156124f957600080fd5b505af115801561250d573d6000803e3d6000fd5b50505050505050565b600081815260046020526040902060078101546001909101546001600160a01b039182169116811561259d57604051633512293b60e21b8152600481018490526001600160a01b0383169063d448a4ec90602401600060405180830381600087803b15801561258457600080fd5b505af1158015612598573d6000803e3d6000fd5b505050505b6001600160a01b03811615611df857604051633512293b60e21b8152600481018490526001600160a01b0382169063d448a4ec906024016124df565b6040516302abf57960e61b8152721259195b9d1a599a595c95da1a5d195b1a5cdd606a1b60048201526000907f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03169063aafd5e4090602401611fda565b6040516302abf57960e61b81527210dbdb1b185d195c985b15da1a5d195b1a5cdd606a1b60048201526000907f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03169063aafd5e4090602401611fda565b606061141c6126e5604051806020016040528060008152506040518060400160405280600b81526020016a185cdcd95c9d1a5bdb925960aa1b81525085612843565b604080518082018252600a81526937b7a0b9b9b2b93a32b960b11b6020808301919091526000878152600490915291909120600201546001600160a01b0316612889565b600061277e826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b03166128a49092919063ffffffff16565b805190915015611df8578080602001905181019061279c9190613389565b611df85760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b606482015260840161088d565b60008181526004602052604081205460ff1615612832576000828152600460205260409020600101546001600160a01b031661141c565b50506001546001600160a01b031690565b6060600061285185856128b3565b9050848161285e856128f5565b60405160200161287093929190613603565b6040516020818303038152906040529150509392505050565b6060600061289785856128b3565b9050848161285e85612936565b606061080d848460008561298d565b8151606090156128e457816040516020016128ce9190613646565b604051602081830303815290604052905061141c565b816040516020016128ce919061367a565b6060612904608083901c612abe565b61290d83612abe565b6040805160208101939093528201526060015b6040516020818303038152906040529050919050565b606061294e6001600160801b03602084901c16612abe565b6129698360601b6bffffffffffffffffffffffff1916612abe565b6040516020016129209291909182526001600160c01b031916602082015260280190565b6060824710156129ee5760405162461bcd60e51b815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f6044820152651c8818d85b1b60d21b606482015260840161088d565b6001600160a01b0385163b612a455760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000604482015260640161088d565b600080866001600160a01b03168587604051612a61919061369f565b60006040518083038185875af1925050503d8060008114612a9e576040519150601f19603f3d011682016040523d82523d6000602084013e612aa3565b606091505b5091509150612ab3828286612c57565b979650505050505050565b6000808260001c9050806001600160801b03169050806801000000000000000002811777ffffffffffffffff0000000000000000ffffffffffffffff169050806401000000000281177bffffffff00000000ffffffff00000000ffffffff00000000ffffffff16905080620100000281177dffff0000ffff0000ffff0000ffff0000ffff0000ffff0000ffff0000ffff169050806101000281177eff00ff00ff00ff00ff00ff00ff00ff00ff00ff00ff00ff00ff00ff00ff00ff1690508060100281177f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f16905060006008827f08080808080808080808080808080808080808080808080808080808080808081681612bd957612bd961325a565b0460047f040404040404040404040404040404040404040404040404040404040404040484160460027f020202020202020202020202020202020202020202020202020202020202020285160417166027029091017f3030303030303030303030303030303030303030303030303030303030303030019392505050565b60608315612c66575081610810565b825115612c765782518084602001fd5b8160405162461bcd60e51b815260040161088d9190613191565b600060208284031215612ca257600080fd5b5035919050565b6001600160a01b0381168114610bde57600080fd5b8035612cc981612ca9565b919050565b600080600060408486031215612ce357600080fd5b83356001600160401b0380821115612cfa57600080fd5b818601915086601f830112612d0e57600080fd5b813581811115612d1d57600080fd5b876020828501011115612d2f57600080fd5b60209283019550935050840135612d4581612ca9565b809150509250925092565b600060208284031215612d6257600080fd5b813561081081612ca9565b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f191681016001600160401b0381118282101715612dab57612dab612d6d565b604052919050565b60006001600160401b03821115612dcc57612dcc612d6d565b50601f01601f191660200190565b80356001600160401b0381168114612cc957600080fd5b60008060008060008060008060006101208a8c031215612e1057600080fd5b89356001600160401b03811115612e2657600080fd5b8a01601f81018c13612e3757600080fd5b8035612e4a612e4582612db3565b612d83565b8181528d6020838501011115612e5f57600080fd5b81602084016020830137600060208383010152809b50505050612e8460208b01612cbe565b9750612e9260408b01612cbe565b9650612ea060608b01612cbe565b9550612eae60808b01612dda565b9450612ebc60a08b01612cbe565b935060c08a0135925060e08a013591506101008a013590509295985092959850929598565b600080600060608486031215612ef657600080fd5b8335612f0181612ca9565b9250612f0f60208501612dda565b9150604084013590509250925092565b8051151582526020808201511515908301526040808201511515908301526060808201516001600160a01b039081169184019190915260809182015116910152565b600061020082019050612f75828451612f1f565b60208301516001600160a01b0390811660a084015260408401516001600160401b031660c08401526060840151151560e084015260808401519081166101008085019190915260a08501519150610120612fd9818601846001600160401b03169052565b60c08601519250610140612ff08187018515159052565b60e08701516101608781019190915292870151610180870152908601516101a08601528501516001600160a01b039081166101c0860152908501519081166101e08501529050611a85565b6000806040838503121561304e57600080fd5b82359150602083013561306081612ca9565b809150509250929050565b6000806020838503121561307e57600080fd5b82356001600160401b038082111561309557600080fd5b818501915085601f8301126130a957600080fd5b8135818111156130b857600080fd5b8660208260051b85010111156130cd57600080fd5b60209290920196919550909350505050565b60005b838110156130fa5781810151838201526020016130e2565b50506000910152565b6000815180845261311b8160208601602086016130df565b601f01601f19169290920160200192915050565b6000602080830181845280855180835260408601915060408160051b870101925083870160005b8281101561318457603f19888603018452613172858351613103565b94509285019290850190600101613156565b5092979650505050505050565b6020815260006108106020830184613103565b61020081016131b3828f612f1f565b6001600160a01b039c8d1660a08301526001600160401b039b8c1660c083015299151560e0820152978b16610100890152959098166101208701529215156101408601526101608501919091526101808401526101a08301529284166101c0820152919092166101e090910152919050565b634e487b7160e01b600052601160045260246000fd5b600081600019048311821515161561325557613255613225565b500290565b634e487b7160e01b600052601260045260246000fd5b60008261328d57634e487b7160e01b600052601260045260246000fd5b500490565b8181038181111561141c5761141c613225565b6001600160401b03818116838216019080821115611a8557611a85613225565b60006101008a83528060208401526132df8184018b613103565b6001600160a01b03998a1660408501529789166060840152505093861660808501526001600160401b039290921660a084015290931660c082015260e0019190915292915050565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b60006020828403121561336e57600080fd5b815161081081612ca9565b80518015158114612cc957600080fd5b60006020828403121561339b57600080fd5b61081082613379565b6000602082840312156133b657600080fd5b604051602081018181106001600160401b03821117156133d8576133d8612d6d565b6040529151825250919050565b634e487b7160e01b600052603260045260246000fd5b6000808335601e1984360301811261341257600080fd5b8301803591506001600160401b0382111561342c57600080fd5b60200191503681900382131561344157600080fd5b9250929050565b8183823760009101908152919050565b60006020828403121561346a57600080fd5b81516001600160401b0381111561348057600080fd5b8201601f8101841361349157600080fd5b805161349f612e4582612db3565b8181528560208385010111156134b457600080fd5b6134c58260208301602086016130df565b95945050505050565b6000600182016134e0576134e0613225565b5060010190565b6000602082840312156134f957600080fd5b5051919050565b8381528260208201526060604082015260006134c56060830184613103565b60006101208083526135338184018d613103565b602084019b909b52505060408101979097526001600160401b039590951660608701526001600160a01b03938416608087015291831660a0860152821660c085015260e08401521661010090910152919050565b60006080828403121561359957600080fd5b604051608081018181106001600160401b03821117156135bb576135bb612d6d565b6040526135c783613379565b81526135d560208401613379565b60208201526135e660408401613379565b60408201526135f760608401613379565b60608201529392505050565b600084516136158184602089016130df565b8451908301906136298183602089016130df565b845191019061363c8183602088016130df565b0195945050505050565b600b60fa1b8152600082516136628160018501602087016130df565b601d60f91b6001939091019283015250600201919050565b6000825161368c8184602087016130df565b601d60f91b920191825250600101919050565b600082516136b18184602087016130df565b919091019291505056fea26469706673582212208308750472ceb2de8177ffaad79e9d6970ffe4f59d11183bf06a5727259eab7064736f6c63430008100033",
    "sourceMap": "226:469:53:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2078:35:51;;;;;;;;;160:25:69;;;148:2;133:18;2078:35:51;;;;;;;;391:27:35;;;;;-1:-1:-1;;;;;391:27:35;;;;;;-1:-1:-1;;;;;469:32:69;;;451:51;;439:2;424:18;391:27:35;305:203:69;2356:29:51;;;;;-1:-1:-1;;;;;2356:29:51;;;1097:115:35;;;;;;:::i;:::-;;:::i;:::-;;540:153:53;;;:::i;4950:569:51:-;;;;;;:::i;:::-;;:::i;13477:2449::-;;;;;;:::i;:::-;;:::i;19674:200::-;;;;;;:::i;:::-;;:::i;1916:49::-;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;2814:14:69;;2807:22;2789:41;;2777:2;2762:18;1916:49:51;2649:187:69;7830:3495:51;;;;;;:::i;:::-;;:::i;1847:63::-;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5093:14:69;;5086:22;5068:41;;5140:2;5125:18;;5118:34;;;;5041:18;1847:63:51;4900:258:69;1668:101:19;;;:::i;3496:622:51:-;;;;;;:::i;:::-;;:::i;17621:131::-;;;;;;:::i;:::-;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;17722:23:51;;;;:10;:23;;;;;;;;;17715:30;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;17715:30:51;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;;;17715:30:51;;;;;;;;;;;;-1:-1:-1;;;17715:30:51;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;17715:30:51;;;;;;;;;;;;;;;;;;-1:-1:-1;17715:30:51;;;;;;;;;-1:-1:-1;17715:30:51;;;;;;;;;-1:-1:-1;17715:30:51;;;;17621:131;;;;;;;;:::i;1036:85:19:-;1082:7;1108:6;;;;-1:-1:-1;;;;;1108:6:19;1036:85;;16160:291:51;;;;;;:::i;:::-;;:::i;11787:1058::-;;;;;;:::i;:::-;;:::i;1814:27::-;;;;;-1:-1:-1;;;;;1814:27:51;;;16922:453;;;;;;:::i;:::-;;:::i;570:638:33:-;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;19178:132:51:-;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;1680:39::-;;;;;2206:58;;-1:-1:-1;;;2206:58:51;;1972:47;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;1972:47:51;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;;;1972:47:51;;;;;;-1:-1:-1;;;1972:47:51;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;2270:43::-;;2309:4;2270:43;;18147:469;;;;;;:::i;:::-;;:::i;1918:198:19:-;;;;;;:::i;:::-;;:::i;2391:29:51:-;;;;;-1:-1:-1;;;2391:29:51;;-1:-1:-1;;;;;2391:29:51;;;;;;-1:-1:-1;;;;;12049:31:69;;;12031:50;;12019:2;12004:18;2391:29:51;11887:200:69;1097:115:35;875:12;;-1:-1:-1;;;;;875:12:35;867:37;;;;;;1171:12:::1;::::0;1165:40:::1;::::0;-1:-1:-1;;;1165:40:35;;::::1;::::0;::::1;160:25:69::0;;;-1:-1:-1;;;;;1171:12:35;;::::1;::::0;1165:34:::1;::::0;133:18:69;;1165:40:35::1;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;1097:115:::0;:::o;540:153:53:-;626:7;660:25;:23;:25::i;:::-;645:41;;540:153;:::o;4950:569:51:-;5041:7;5141:371;5170:5;;5141:371;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;5329:15:51;;5193:8;;-1:-1:-1;5141:371:51;;-1:-1:-1;5141:371:51;;-1:-1:-1;;;;;;;;;5329:15:51;;;;-1:-1:-1;;;;;5362:15:51;5395:40;5362:15;5395:14;:40::i;:::-;-1:-1:-1;;;5496:1:51;5141:11;:371::i;:::-;5122:390;;4950:569;;;;;;:::o;13477:2449::-;1317:19:32;:17;:19::i;:::-;1346:17;2459:5;2445:19;;-1:-1:-1;;2445:19:32;;;2335:136;1346:17;13553:27:51::1;13583:23:::0;;;:10:::1;:23;::::0;;;;13624:18:::1;::::0;::::1;::::0;-1:-1:-1;;;;;13624:18:51::1;13616:69;;;::::0;-1:-1:-1;;;13616:69:51;;12294:2:69;13616:69:51::1;::::0;::::1;12276:21:69::0;12333:2;12313:18;;;12306:30;-1:-1:-1;;;12352:18:69;;;12345:54;12416:18;;13616:69:51::1;;;;;;;;;13743:17;::::0;::::1;::::0;-1:-1:-1;;;13743:17:51;::::1;;;13742:18;13734:56;;;::::0;-1:-1:-1;;;13734:56:51;;12647:2:69;13734:56:51::1;::::0;::::1;12629:21:69::0;12686:2;12666:18;;;12659:30;12725:27;12705:18;;;12698:55;12770:18;;13734:56:51::1;12445:349:69::0;13734:56:51::1;13840:17;::::0;::::1;:24:::0;;-1:-1:-1;;;;13840:24:51::1;-1:-1:-1::0;;;13840:24:51::1;::::0;;13878:18:::1;::::0;::::1;::::0;-1:-1:-1;;;;;13878:18:51::1;13874:2046;;14014:16;:14;:16::i;:::-;13986:24;::::0;::::1;::::0;-1:-1:-1;;;13986:24:51;::::1;-1:-1:-1::0;;;;;13986:24:51::1;:44;;13978:78;;;::::0;-1:-1:-1;;;13978:78:51;;13001:2:69;13978:78:51::1;::::0;::::1;12983:21:69::0;13040:2;13020:18;;;13013:30;-1:-1:-1;;;13059:18:69;;;13052:51;13120:18;;13978:78:51::1;12799:345:69::0;13978:78:51::1;14096:30;::::0;::::1;:37:::0;;-1:-1:-1;;;;14096:37:51;::::1;-1:-1:-1::0;;;14096:37:51::1;::::0;;;14179:18:::1;::::0;::::1;::::0;14199:14:::1;::::0;::::1;::::0;14147:67:::1;::::0;-1:-1:-1;;;;;14147:18:51;;;;14179::::1;::::0;14147:31:::1;:67::i;:::-;14228:46;14256:11;14269:4;14228:27;:46::i;:::-;14324:18;::::0;::::1;::::0;14294:74:::1;::::0;;14324:18:::1;13339:41:69::0;;14324:18:51;13411:2:69;13396:18;;13389:50;14357:10:51::1;13455:18:69::0;;;13448:60;14294:74:51;;-1:-1:-1;;;;;14324:18:51;;::::1;::::0;14311:11;;14294:74:::1;::::0;;;;;13327:2:69;14294:74:51;;::::1;13874:2046;;;14532:20;::::0;::::1;::::0;14554:23:::1;::::0;::::1;::::0;14480:20:::1;::::0;14503:75:::1;::::0;14519:11;;14532:20;-1:-1:-1;;;14554:23:51;::::1;-1:-1:-1::0;;;;;14554:23:51::1;14503:15;:75::i;:::-;14707:49:::0;;14480:98;;-1:-1:-1;14707:49:51::1;::::0;::::1;;;14703:175;;;14758:30;::::0;::::1;:38:::0;;-1:-1:-1;;;;14758:38:51::1;::::0;;14703:175:::1;;;14815:30;::::0;::::1;:63:::0;;-1:-1:-1;;;;14815:63:51::1;2309:4;14848:30:::0;::::1;-1:-1:-1::0;;;14815:63:51::1;;::::0;;14703:175:::1;14893:21;2309:4;14917:13;:30;:72;;14971:18;::::0;::::1;::::0;-1:-1:-1;;;;;14971:18:51::1;14917:72;;;14950:18;::::0;::::1;::::0;-1:-1:-1;;;;;14950:18:51::1;14917:72;14893:96;;15127:17;15189:4;15171:9;:14;;;15148:20;;:37;;;;:::i;:::-;15147:46;;;;:::i;:::-;15127:66;;15207:27;15258:9;15237;:14;;;15254:1;15237:18;;;;:::i;:::-;:30;;;;:::i;:::-;15207:60;;15491:64;15531:11;:9;:11::i;:::-;15491:18;::::0;::::1;::::0;-1:-1:-1;;;;;15491:18:51::1;::::0;15545:9;15491:31:::1;:64::i;:::-;15569:18;::::0;::::1;::::0;:67:::1;::::0;-1:-1:-1;;;;;15569:18:51::1;15601:13:::0;15616:19;15569:31:::1;:67::i;:::-;15656:49:::0;;::::1;::::0;::::1;;;15651:144;;15764:30;::::0;::::1;::::0;15723:72:::1;::::0;15751:11;;-1:-1:-1;;;15764:30:51;::::1;;;15723:27;:72::i;:::-;15866:30;::::0;::::1;::::0;15815:94:::1;::::0;;15860:4:::1;13339:41:69::0;;-1:-1:-1;;;15866:30:51;;::::1;;;13423:14:69::0;13416:22;13411:2;13396:18;;13389:50;15898:10:51::1;13455:18:69::0;;;13448:60;-1:-1:-1;;;;;15815:94:51;::::1;::::0;15832:11;;15815:94:::1;::::0;13327:2:69;13312:18;15815:94:51::1;;;;;;;14385:1535;;;;13874:2046;13543:2383;1384:20:32::0;2658:11;:18;;-1:-1:-1;;2658:18:32;2672:4;2658:18;;;2477:206;1384:20;13477:2449:51;:::o;19674:200::-;-1:-1:-1;;;;;19775:26:51;;19737:7;19775:26;;;:16;:26;;;;;:35;;;19847:20;;19828:15;19775:35;19839:4;19828:15;:::i;:::-;19827:40;;;;:::i;7830:3495::-;8136:19;1317::32;:17;:19::i;:::-;1346:17;2459:5;2445:19;;-1:-1:-1;;2445:19:32;;;2335:136;1346:17;8167:11:51::1;8188:16;:14;:16::i;:::-;8167:38;;8229:95;8236:5;8243:4;8249;-1:-1:-1::0;;;;;8229:95:51::1;8255:8;8265;8275:17;8294;8313:10;8229:6;:95::i;:::-;8215:109:::0;-1:-1:-1;;;;;;8343:22:51;::::1;8335:53;;;::::0;-1:-1:-1;;;8335:53:51;;14513:2:69;8335:53:51::1;::::0;::::1;14495:21:69::0;14552:2;14532:18;;;14525:30;-1:-1:-1;;;14571:18:69;;;14564:48;14629:18;;8335:53:51::1;14311:342:69::0;8335:53:51::1;8450:1;8406:23:::0;;;:10:::1;:23;::::0;;;;:32:::1;;::::0;-1:-1:-1;;;;;8406:32:51::1;:46:::0;8398:83:::1;;;::::0;-1:-1:-1;;;8398:83:51;;14860:2:69;8398:83:51::1;::::0;::::1;14842:21:69::0;14899:2;14879:18;;;14872:30;14938:26;14918:18;;;14911:54;14982:18;;8398:83:51::1;14658:348:69::0;8398:83:51::1;8499:39;8527:10;8499:27;:39::i;:::-;8491:74;;;::::0;-1:-1:-1;;;8491:74:51;;15213:2:69;8491:74:51::1;::::0;::::1;15195:21:69::0;15252:2;15232:18;;;15225:30;-1:-1:-1;;;15271:18:69;;;15264:52;15333:18;;8491:74:51::1;15011:346:69::0;8491:74:51::1;8583:44;8617:8;8583:25;:44::i;:::-;8575:77;;;::::0;-1:-1:-1;;;8575:77:51;;15564:2:69;8575:77:51::1;::::0;::::1;15546:21:69::0;15603:2;15583:18;;;15576:30;-1:-1:-1;;;15622:18:69;;;15615:50;15682:18;;8575:77:51::1;15362:344:69::0;8575:77:51::1;8678:33;8701:8;8678:14;:33::i;:::-;8670:4;:41;;8662:73;;;::::0;-1:-1:-1;;;8662:73:51;;15913:2:69;8662:73:51::1;::::0;::::1;15895:21:69::0;15952:2;15932:18;;;15925:30;-1:-1:-1;;;15971:18:69;;;15964:49;16030:18;;8662:73:51::1;15711:343:69::0;8662:73:51::1;8772:871;::::0;;8823:422;;;;;-1:-1:-1;8772:871:51::1;::::0;::::1;8823:422:::0;;;;;;;;;;;;;;;9220:10:::1;8823:422:::0;;;;-1:-1:-1;;;;;8823:422:51;;::::1;::::0;;;;8772:871;;;;;::::1;8823:422;8772:871:::0;::::1;::::0;-1:-1:-1;;;;;8772:871:51;::::1;::::0;;;;;;;;;;;;;::::1;::::0;;;;8823:422:::1;8772:871:::0;;9617:15:::1;9624:8:::0;9583:4;9617:15:::1;:::i;:::-;-1:-1:-1::0;;;;;8772:871:51::1;;;;;9549:5;8772:871;;;;;;9417:8;8772:871;;;;9451:10;8772:871;;;;9481:4;8772:871;;;;9344:17;-1:-1:-1::0;;;;;8772:871:51::1;;;;;9309:1;-1:-1:-1::0;;;;;8772:871:51::1;;;::::0;8746:10:::1;:23;8757:11;8746:23;;;;;;;;;;;:897;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1::0;;;;;8746:897:51::1;;;;;-1:-1:-1::0;;;;;8746:897:51::1;;;;;;;;;;;;;;;;;;;-1:-1:-1::0;;;;;8746:897:51::1;;;;;-1:-1:-1::0;;;;;8746:897:51::1;;;;;;;;;;;;;;;;;;;;;-1:-1:-1::0;;;;;8746:897:51::1;;;;;-1:-1:-1::0;;;;;8746:897:51::1;;;;;;;;;;;;;;;;;;;-1:-1:-1::0;;;;;8746:897:51::1;;;;;-1:-1:-1::0;;;;;8746:897:51::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1::0;;;;;8746:897:51::1;;;;;-1:-1:-1::0;;;;;8746:897:51::1;;;;;;;;;;;;;;;;;;;-1:-1:-1::0;;;;;8746:897:51::1;;;;;-1:-1:-1::0;;;;;8746:897:51::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1::0;;;;;8746:897:51::1;;;;;-1:-1:-1::0;;;;;8746:897:51::1;;;;;;;;;;;;;;;;;;;-1:-1:-1::0;;;;;8746:897:51::1;;;;;-1:-1:-1::0;;;;;8746:897:51::1;;;;;;;;;9668:65;9736:32;9756:11;9736:19;:32::i;:::-;9791:30:::0;;9668:100;;-1:-1:-1;9790:31:51::1;9782:65;;;::::0;-1:-1:-1;;;9782:65:51;;16446:2:69;9782:65:51::1;::::0;::::1;16428:21:69::0;16485:2;16465:18;;;16458:30;-1:-1:-1;;;16504:18:69;;;16497:51;16565:18;;9782:65:51::1;16244:345:69::0;9782:65:51::1;9901:44;9948:23:::0;;;:10:::1;:23;::::0;;;;;;;;10359:45;;::::1;::::0;10618:29;;::::1;::::0;10852:33:::1;::::0;;::::1;::::0;10011:888;;-1:-1:-1;;10011:888:51;;;::::1;;::::0;;;::::1;-1:-1:-1::0;;10011:888:51;;::::1;::::0;::::1;;::::0;;;::::1;::::0;;;::::1;-1:-1:-1::0;;10011:888:51::1;::::0;::::1;;;::::0;;10920:58:::1;-1:-1:-1::0;;;;;10920:25:51;::::1;10946:10;10966:4;10973::::0;10920:25:::1;:58::i;:::-;11298:10;11121:8;-1:-1:-1::0;;;;;11028:290:51::1;11055:11;11028:290;11080:8;11102:5;11143:17;11174;11205:10;11236:8;11229:4;:15;;;;:::i;:::-;11258:8;11280:4;11028:290;;;;;;;;;;;;;:::i;:::-;;;;;;;;8157:3168;1384:20:32::0;2658:11;:18;;-1:-1:-1;;2658:18:32;2672:4;2658:18;;;2477:206;1384:20;7830:3495:51;;;;;;;;;;;:::o;1668:101:19:-;1082:7;1108:6;-1:-1:-1;;;;;1108:6:19;;;;;719:10:25;1248:23:19;1240:68;;;;-1:-1:-1;;;1240:68:19;;;;;;;:::i;:::-;1732:30:::1;1759:1;1732:18;:30::i;:::-;1668:101::o:0;3496:622:51:-;1082:7:19;1108:6;-1:-1:-1;;;;;1108:6:19;;;;;719:10:25;1248:23:19;1240:68;;;;-1:-1:-1;;;1240:68:19;;;;;;;:::i;:::-;3695:4:51::1;3670:21;:29;;3662:70;;;::::0;-1:-1:-1;;;3662:70:51;;18015:2:69;3662:70:51::1;::::0;::::1;17997:21:69::0;18054:2;18034:18;;;18027:30;18093;18073:18;;;18066:58;18141:18;;3662:70:51::1;17813:352:69::0;3662:70:51::1;3774:1;3750:21;:25;3742:65;;;::::0;-1:-1:-1;;;3742:65:51;;18372:2:69;3742:65:51::1;::::0;::::1;18354:21:69::0;18411:2;18391:18;;;18384:30;18450:29;18430:18;;;18423:57;18497:18;;3742:65:51::1;18170:351:69::0;3742:65:51::1;3817:20;:44:::0;;;3871:15:::1;:34:::0;;-1:-1:-1;;;;;3915:34:51;::::1;-1:-1:-1::0;;;3915:34:51::1;-1:-1:-1::0;;;;;;3915:34:51;;;-1:-1:-1;;;;;3871:34:51;::::1;3915::::0;::::1;::::0;;3959:59:::1;-1:-1:-1::0;;;3889:16:51;3959:13:::1;:59::i;:::-;4034:77;::::0;;-1:-1:-1;;;;;18760:32:69;;18742:51;;-1:-1:-1;;;;;18829:31:69;;18824:2;18809:18;;18802:59;18877:18;;;18870:34;;;4034:77:51::1;::::0;18730:2:69;18715:18;4034:77:51::1;;;;;;;3496:622:::0;;;:::o;16160:291::-;16236:4;16335:23;;;:10;:23;;;;;:31;;;-1:-1:-1;;;16335:31:51;;;;16330:66;;16368:28;16384:11;16368:15;:28::i;:::-;16413:31;16432:11;16413:18;:31::i;:::-;16406:38;16160:291;-1:-1:-1;;16160:291:51:o;11787:1058::-;1317:19:32;:17;:19::i;:::-;1346:17;2459:5;2445:19;;-1:-1:-1;;2445:19:32;;;2335:136;1346:17;-1:-1:-1;;;;;11892:22:51;::::1;11884:54;;;::::0;-1:-1:-1;;;11884:54:51;;19117:2:69;11884:54:51::1;::::0;::::1;19099:21:69::0;19156:2;19136:18;;;19129:30;-1:-1:-1;;;19175:18:69;;;19168:49;19234:18;;11884:54:51::1;18915:343:69::0;11884:54:51::1;11948:27;11978:23:::0;;;:10:::1;:23;::::0;;;;12019:18:::1;::::0;::::1;::::0;-1:-1:-1;;;;;12019:18:51::1;12011:69;;;::::0;-1:-1:-1;;;12011:69:51;;12294:2:69;12011:69:51::1;::::0;::::1;12276:21:69::0;12333:2;12313:18;;;12306:30;-1:-1:-1;;;12352:18:69;;;12345:54;12416:18;;12011:69:51::1;12092:348:69::0;12011:69:51::1;12098:18;::::0;::::1;::::0;-1:-1:-1;;;;;12098:18:51::1;:32:::0;12090:71:::1;;;::::0;-1:-1:-1;;;12090:71:51;;19465:2:69;12090:71:51::1;::::0;::::1;19447:21:69::0;19504:2;19484:18;;;19477:30;19543:28;19523:18;;;19516:56;19589:18;;12090:71:51::1;19263:350:69::0;12090:71:51::1;12206:16;:14;:16::i;:::-;12179:24;::::0;::::1;::::0;-1:-1:-1;;;12179:24:51;::::1;-1:-1:-1::0;;;;;12179:24:51::1;:43;12171:76;;;::::0;-1:-1:-1;;;12171:76:51;;19820:2:69;12171:76:51::1;::::0;::::1;19802:21:69::0;19859:2;19839:18;;;19832:30;-1:-1:-1;;;19878:18:69;;;19871:50;19938:18;;12171:76:51::1;19618:344:69::0;12171:76:51::1;12265:30;12283:11;12265:17;:30::i;:::-;12257:62;;;::::0;-1:-1:-1;;;12257:62:51;;20169:2:69;12257:62:51::1;::::0;::::1;20151:21:69::0;20208:2;20188:18;;;20181:30;-1:-1:-1;;;20227:18:69;;;20220:49;20286:18;;12257:62:51::1;19967:343:69::0;12257:62:51::1;12330:18;::::0;::::1;:29:::0;;-1:-1:-1;;;;;;12330:29:51::1;-1:-1:-1::0;;;;;12330:29:51;;::::1;::::0;;;::::1;::::0;;;12433:14:::1;::::0;::::1;::::0;12370:18:::1;::::0;::::1;::::0;:78:::1;::::0;:18:::1;::::0;12406:10:::1;::::0;12426:4:::1;::::0;12370:35:::1;:78::i;:::-;12492:20;::::0;::::1;::::0;12514:23:::1;::::0;::::1;::::0;12459:79:::1;::::0;12479:11;;-1:-1:-1;;;12514:23:51;::::1;-1:-1:-1::0;;;;;12514:23:51::1;12459:19;:79::i;:::-;12549:40;12577:11;12549:27;:40::i;:::-;12672:49:::0;;::::1;::::0;::::1;;;12668:102;;;12723:47;12751:11;12764:5;12723:27;:47::i;:::-;12786:52;::::0;-1:-1:-1;;;;;12786:52:51;::::1;::::0;12817:10:::1;::::0;12804:11;;12786:52:::1;::::0;;;::::1;11874:971;1384:20:32::0;2658:11;:18;;-1:-1:-1;;2658:18:32;2672:4;2658:18;;;2477:206;1384:20;11787:1058:51;;:::o;16922:453::-;17015:56;;-1:-1:-1;;;17015:56:51;;-1:-1:-1;;;17015:56:51;;;160:25:69;17015:6:51;-1:-1:-1;;;;;17015:31:51;;;;133:18:69;;17015:56:51;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;17000:12;:71;;-1:-1:-1;;;;;;17000:71:51;-1:-1:-1;;;;;17000:71:51;;;;;;;;;;17113:25;:23;:25::i;:::-;-1:-1:-1;;;;;17113:47:51;;17161:10;17113:59;;;;;;;;;;;;;160:25:69;;148:2;133:18;;14:177;17113:59:51;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;17081:29;;;;:17;:29;;;;;:91;;-1:-1:-1;;17081:91:51;;;;;;;;;;17225:25;:23;:25::i;:::-;:49;;-1:-1:-1;;;17225:49:51;;-1:-1:-1;;;;;469:32:69;;;17225:49:51;;;451:51:69;17225:39:51;;;;;;;424:18:69;;17225:49:51;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;17182:26:51;;;;;;:16;:26;;;;;:92;;-1:-1:-1;;17182:92:51;;;;;;;;;;17322:11;:9;:11::i;:::-;:37;;-1:-1:-1;;;17322:37:51;;-1:-1:-1;;;;;469:32:69;;;17322:37:51;;;451:51:69;17322:27:51;;;;;;;424:18:69;;17322:37:51;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:46;-1:-1:-1;;;;;17284:26:51;;;17322:46;17284:26;;;:16;:26;;;;;:35;;:84;-1:-1:-1;16922:453:51:o;570:638:33:-;630:22;686:4;-1:-1:-1;;;;;674:24:33;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;664:34;;713:9;708:494;728:15;;;708:494;;;765:12;;810:4;829;;834:1;829:7;;;;;;;:::i;:::-;;;;;;;;;;;;:::i;:::-;802:35;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;764:73;;;;857:7;852:306;;984:2;968:6;:13;:18;964:32;;;988:8;;;964:32;1067:4;1059:6;1055:17;1045:27;;1125:6;1114:28;;;;;;;;;;;;:::i;:::-;1107:36;;-1:-1:-1;;;1107:36:33;;;;;;;;:::i;852:306::-;1185:6;1172:7;1180:1;1172:10;;;;;;;;:::i;:::-;;;;;;:19;;;;750:452;;745:3;;;;;:::i;:::-;;;;708:494;;;;570:638;;;;:::o;19178:132:51:-;19244:12;19275:28;19291:11;19275:15;:28::i;18147:469::-;18217:4;18262:23;;;:10;:23;;;;;;;;18233:52;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;18233:52:51;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;;;18233:52:51;;;;;;;;;;;;-1:-1:-1;;;18233:52:51;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;18233:52:51;;;;;;;;;;;;;;;;;;-1:-1:-1;18233:52:51;;;;;;;;;-1:-1:-1;18233:52:51;;;;;;;;;-1:-1:-1;18233:52:51;;;;;18366:32;;;;:85;;-1:-1:-1;18402:35:51;;:49;;;18366:85;18362:103;;;-1:-1:-1;18460:5:51;;18147:469;-1:-1:-1;;18147:469:51:o;18362:103::-;18483:9;:17;;;18475:51;;;;-1:-1:-1;;;18475:51:51;;23549:2:69;18475:51:51;;;23531:21:69;23588:2;23568:18;;;23561:30;-1:-1:-1;;;23607:18:69;;;23600:51;23668:18;;18475:51:51;23347:345:69;18475:51:51;18579:30;;;;18147:469;-1:-1:-1;;18147:469:51:o;1918:198:19:-;1082:7;1108:6;-1:-1:-1;;;;;1108:6:19;;;;;719:10:25;1248:23:19;1240:68;;;;-1:-1:-1;;;1240:68:19;;;;;;;:::i;:::-;-1:-1:-1;;;;;2006:22:19;::::1;1998:73;;;::::0;-1:-1:-1;;;1998:73:19;;23899:2:69;1998:73:19::1;::::0;::::1;23881:21:69::0;23938:2;23918:18;;;23911:30;23977:34;23957:18;;;23950:62;-1:-1:-1;;;24028:18:69;;;24021:36;24074:19;;1998:73:19::1;23697:402:69::0;1998:73:19::1;2081:28;2100:8;2081:18;:28::i;1457:276:35:-:0;1535:12;;1512:7;;-1:-1:-1;;;;;1535:12:35;:28;1531:196;;1592:12;;;;;;;;;-1:-1:-1;;;;;1592:12:35;-1:-1:-1;;;;;1586:34:35;;:36;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;1531:196::-;-1:-1:-1;1660:15:35;;1457:276::o;2143:186:32:-;2275:11;;;;2267:55;;;;-1:-1:-1;;;2267:55:32;;24495:2:69;2267:55:32;;;24477:21:69;24534:2;24514:18;;;24507:30;24573:33;24553:18;;;24546:61;24624:18;;2267:55:32;24293:355:69;701:205:23;840:58;;-1:-1:-1;;;;;24845:32:69;;840:58:23;;;24827:51:69;24894:18;;;24887:34;;;813:86:23;;833:5;;-1:-1:-1;;;863:23:23;24800:18:69;;840:58:23;;;;-1:-1:-1;;840:58:23;;;;;;;;;;;;;;-1:-1:-1;;;;;840:58:23;-1:-1:-1;;;;;;840:58:23;;;;;;;;;;813:19;:86::i;:::-;701:205;;;:::o;25566:492:51:-;25668:10;25681:23;;;:10;:23;;;;;:41;;;;23119:67;;;;;-1:-1:-1;;;;;25681:41:51;;;;23119:67;25793:16;;25789:141;;25823:107;;-1:-1:-1;;;25823:107:51;;;;;25100:25:69;;;25168:14;;25161:22;25141:18;;;25134:50;-1:-1:-1;;;;;25823:74:51;;;;;25073:18:69;;25823:107:51;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;25789:141;-1:-1:-1;;;;;25944:16:51;;;25940:111;;25962:89;;-1:-1:-1;;;25962:89:51;;;;;25100:25:69;;;25168:14;;25161:22;25141:18;;;25134:50;-1:-1:-1;;;;;25962:56:51;;;;;25073:18:69;;25962:89:51;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;25940:111;25658:400;;25566:492;;:::o;22702:245::-;22835:6;22860:23;22871:11;22860:10;:23::i;:::-;-1:-1:-1;;;;;22860:32:51;;22893:10;22905:4;22911:28;22927:11;22911:15;:28::i;:::-;22860:80;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;21700:155::-;21792:55;;-1:-1:-1;;;21792:55:51;;-1:-1:-1;;;21792:55:51;;;160:25:69;21744:14:51;;21792:6;-1:-1:-1;;;;;21792:31:51;;;;133:18:69;;21792:55:51;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;19988:660::-;20253:7;20350:5;20377:4;20403;20429:8;20459;20489:17;20528;20567:10;20599;20318:309;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;20291:350;;;;;;20272:369;;19988:660;;;;;;;;;;:::o;24546:291::-;24621:4;24641:29;;;:17;:29;;;;;;;;24637:46;;;-1:-1:-1;24679:4:51;;24546:291;-1:-1:-1;24546:291:51:o;24637:46::-;24725:25;:23;:25::i;:::-;-1:-1:-1;;;;;24725:47:51;;24773:10;24725:59;;;;;;;;;;;;;160:25:69;;148:2;133:18;;14:177;24725:59:51;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;24693:29;;;;:17;:29;;;;;;:91;;-1:-1:-1;;24693:91:51;;;;;;;;;-1:-1:-1;24693:91:51;24801:29;;24546:291::o;25056:404::-;-1:-1:-1;;;;;25147:26:51;;25127:4;25147:26;;;:16;:26;;;;;:40;;;25143:57;;;-1:-1:-1;25196:4:51;;25056:404;-1:-1:-1;25056:404:51:o;25143:57::-;25253:25;:23;:25::i;:::-;:49;;-1:-1:-1;;;25253:49:51;;-1:-1:-1;;;;;469:32:69;;;25253:49:51;;;451:51:69;25253:39:51;;;;;;;424:18:69;;25253:49:51;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;25210:26:51;;;;;;:16;:26;;;;;:92;;-1:-1:-1;;25210:92:51;;;;;;;;;;25350:11;:9;:11::i;:::-;:37;;-1:-1:-1;;;25350:37:51;;-1:-1:-1;;;;;469:32:69;;;25350:37:51;;;451:51:69;25350:27:51;;;;;;;424:18:69;;25350:37:51;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:46;-1:-1:-1;;;;;25312:26:51;;;25350:46;25312:26;;;:16;:26;;;;;:35;;;:84;;;;-1:-1:-1;25413:40:51;;;;25056:404::o;23342:::-;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23119:23:51;;;:10;:23;;;;;;:67;;;-1:-1:-1;;;;;23119:67:51;;23561:99;;-1:-1:-1;;23590:70:51;;;;;;;;-1:-1:-1;23590:70:51;;;;;;;;;;;;;;;;;;;;;;;23342:404;-1:-1:-1;23342:404:51:o;23561:99::-;23677:62;;-1:-1:-1;;;23677:62:51;;;;;160:25:69;;;-1:-1:-1;;;;;23677:49:51;;;;;133:18:69;;23677:62:51;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;912:241:23:-;1077:68;;-1:-1:-1;;;;;27654:15:69;;;1077:68:23;;;27636:34:69;27706:15;;27686:18;;;27679:43;27738:18;;;27731:34;;;1050:96:23;;1070:5;;-1:-1:-1;;;1100:27:23;27571:18:69;;1077:68:23;27396:375:69;2270:187:19;2343:16;2362:6;;-1:-1:-1;;;;;2378:17:19;;;2362:6;2378:17;;;-1:-1:-1;;;;;;2378:17:19;;;;;2410:40;;2362:6;;;;;;;2378:17;;2362:6;;2410:40;;;2333:124;2270:187;:::o;23948:401:51:-;24019:4;24040:23;;;:10;:23;;;;;:67;;;;;;24035:85;;-1:-1:-1;24116:4:51;;23948:401;-1:-1:-1;23948:401:51:o;24035:85::-;24130:10;24143:23;;;:10;:23;;;;;:67;;;-1:-1:-1;;;;;24143:67:51;;24220:33;;-1:-1:-1;24249:4:51;;23948:401;-1:-1:-1;;23948:401:51:o;24220:33::-;24270:72;;-1:-1:-1;;;24270:72:51;;;;;27950:25:69;;;24331:10:51;27991:18:69;;;27984:60;-1:-1:-1;;;;;24270:47:51;;;;;27923:18:69;;24270:72:51;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;22384:224::-;22517:23;22528:11;22517:10;:23::i;:::-;-1:-1:-1;;;;;22517:36:51;;22554:10;22566:4;22572:28;22588:11;22572:15;:28::i;:::-;22517:84;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;22384:224;;;:::o;26164:415::-;26241:10;26254:23;;;:10;:23;;;;;:41;;;;23119:67;;;;;-1:-1:-1;;;;;26254:41:51;;;;23119:67;26366:16;;26362:109;;26384:87;;-1:-1:-1;;;26384:87:51;;;;;160:25:69;;;-1:-1:-1;;;;;26384:74:51;;;;;133:18:69;;26384:87:51;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;26362:109;-1:-1:-1;;;;;26485:16:51;;;26481:91;;26503:69;;-1:-1:-1;;;26503:69:51;;;;;160:25:69;;;-1:-1:-1;;;;;26503:56:51;;;;;133:18:69;;26503:69:51;14:177:69;21425:211:51;21559:69;;-1:-1:-1;;;21559:69:51;;-1:-1:-1;;;21559:69:51;;;160:25:69;21483:28:51;;21559:6;-1:-1:-1;;;;;21559:31:51;;;;133:18:69;;21559:69:51;14:177:69;21155:187:51;21265:69;;-1:-1:-1;;;21265:69:51;;-1:-1:-1;;;21265:69:51;;;160:25:69;21213:16:51;;21265:6;-1:-1:-1;;;;;21265:31:51;;;;133:18:69;;21265:69:51;14:177:69;20744:333:51;20813:12;20856:214;20909:67;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;20909:67:51;;;20964:11;20909:35;:67::i;:::-;20856:214;;;;;;;;;;;-1:-1:-1;;;20856:214:51;;;;;;;;-1:-1:-1;21024:23:51;;;:10;:23;;;;;;;:32;;;-1:-1:-1;;;;;21024:32:51;20856:35;:214::i;3207:706:23:-;3626:23;3652:69;3680:4;3652:69;;;;;;;;;;;;;;;;;3660:5;-1:-1:-1;;;;;3652:27:23;;;:69;;;;;:::i;:::-;3735:17;;3626:95;;-1:-1:-1;3735:21:23;3731:176;;3830:10;3819:30;;;;;;;;;;;;:::i;:::-;3811:85;;;;-1:-1:-1;;;3811:85:23;;28257:2:69;3811:85:23;;;28239:21:69;28296:2;28276:18;;;28269:30;28335:34;28315:18;;;28308:62;-1:-1:-1;;;28386:18:69;;;28379:40;28436:19;;3811:85:23;28055:406:69;21969:326:51;22033:24;22073:23;;;:10;:23;;;;;:79;;;22069:164;;;23093:7;23119:23;;;:10;:23;;;;;:67;;;-1:-1:-1;;;;;23119:67:51;22198:34;23018:175;22069:164;-1:-1:-1;;22275:12:51;;-1:-1:-1;;;;;22275:12:51;;21969:326::o;4121:330:29:-;4273:12;4297:19;4319:42;4335:20;4357:3;4319:15;:42::i;:::-;4297:64;;4395:20;4417:6;4425:18;4437:5;4425:11;:18::i;:::-;4378:66;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;4371:73;;;4121:330;;;;;:::o;5184:337::-;5336:12;5360:19;5382:42;5398:20;5420:3;5382:15;:42::i;:::-;5360:64;;5458:20;5480:6;5488:25;5507:5;5488:18;:25::i;3861:223:24:-;3994:12;4025:52;4047:6;4055:4;4061:1;4064:12;4025:21;:52::i;6928:295:29:-;7057:27;;7029:12;;7057:31;7053:164;;7133:3;7111:31;;;;;;;;:::i;:::-;;;;;;;;;;;;;7104:38;;;;7053:164;7197:3;7180:26;;;;;;;;:::i;2586:182::-;2647:12;2695:35;2726:3;2715:7;:14;;2695:19;:35::i;:::-;2732:28;2752:7;2732:19;:28::i;:::-;2678:83;;;;;;30368:19:69;;;;30403:12;;30396:28;30440:12;;2678:83:29;;;;;;;;;;;;;2671:90;;2586:182;;;:::o;3145:218::-;3207:12;3267:47;-1:-1:-1;;;;;3287:26:29;;;;;3267:19;:47::i;:::-;3323:31;3351:1;3343:10;;3323:31;;;:19;:31::i;:::-;3250:106;;;;;;;;30618:19:69;;;-1:-1:-1;;;;;;30667:41:69;30662:2;30653:12;;30646:63;30734:2;30725:12;;30463:280;4948:499:24;5113:12;5170:5;5145:21;:30;;5137:81;;;;-1:-1:-1;;;5137:81:24;;30950:2:69;5137:81:24;;;30932:21:69;30989:2;30969:18;;;30962:30;31028:34;31008:18;;;31001:62;-1:-1:-1;;;31079:18:69;;;31072:36;31125:19;;5137:81:24;30748:402:69;5137:81:24;-1:-1:-1;;;;;1465:19:24;;;5228:60;;;;-1:-1:-1;;;5228:60:24;;31357:2:69;5228:60:24;;;31339:21:69;31396:2;31376:18;;;31369:30;31435:31;31415:18;;;31408:59;31484:18;;5228:60:24;31155:353:69;5228:60:24;5300:12;5314:23;5341:6;-1:-1:-1;;;;;5341:11:24;5360:5;5367:4;5341:31;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5299:73;;;;5389:51;5406:7;5415:10;5427:12;5389:16;:51::i;:::-;5382:58;4948:499;-1:-1:-1;;;;;;;4948:499:24:o;897:1306:29:-;965:7;1008:9;1028:7;1020:16;;1008:28;;1088:1;-1:-1:-1;;;;;1088:70:29;1084:74;;1182:1;1186:5;1182:9;1177:1;:15;1196:66;1176:86;1172:90;;1286:1;1290:5;1286:9;1281:1;:15;1300:66;1280:86;1276:90;;1390:1;1394:5;1390:9;1385:1;:15;1404:66;1384:86;1380:90;;1494:1;1498:4;1494:8;1489:1;:14;1507:66;1488:85;1484:89;;1597:1;1601:4;1597:8;1592:1;:14;1610:66;1591:85;1587:89;;1717:9;1804:1;1730;1734:66;1730:70;1729:76;;;;;:::i;:::-;;1906:1;1836:66;1832:70;;1831:76;2008:1;1938:66;1934:70;;1933:76;2037:5;2032:11;2047:4;2031:20;2027:24;;;2054:66;2027:93;;;-1:-1:-1;;;897:1306:29:o;7561:692:24:-;7707:12;7735:7;7731:516;;;-1:-1:-1;7765:10:24;7758:17;;7731:516;7876:17;;:21;7872:365;;8070:10;8064:17;8130:15;8117:10;8113:2;8109:19;8102:44;7872:365;8209:12;8202:20;;-1:-1:-1;;;8202:20:24;;;;;;;;:::i;737:180:69:-;796:6;849:2;837:9;828:7;824:23;820:32;817:52;;;865:1;862;855:12;817:52;-1:-1:-1;888:23:69;;737:180;-1:-1:-1;737:180:69:o;922:131::-;-1:-1:-1;;;;;997:31:69;;987:42;;977:70;;1043:1;1040;1033:12;1058:134;1126:20;;1155:31;1126:20;1155:31;:::i;:::-;1058:134;;;:::o;1197:732::-;1276:6;1284;1292;1345:2;1333:9;1324:7;1320:23;1316:32;1313:52;;;1361:1;1358;1351:12;1313:52;1401:9;1388:23;-1:-1:-1;;;;;1471:2:69;1463:6;1460:14;1457:34;;;1487:1;1484;1477:12;1457:34;1525:6;1514:9;1510:22;1500:32;;1570:7;1563:4;1559:2;1555:13;1551:27;1541:55;;1592:1;1589;1582:12;1541:55;1632:2;1619:16;1658:2;1650:6;1647:14;1644:34;;;1674:1;1671;1664:12;1644:34;1721:7;1714:4;1705:6;1701:2;1697:15;1693:26;1690:39;1687:59;;;1742:1;1739;1732:12;1687:59;1773:4;1765:13;;;;-1:-1:-1;1797:6:69;-1:-1:-1;;1838:20:69;;1825:34;1868:31;1825:34;1868:31;:::i;:::-;1918:5;1908:15;;;1197:732;;;;;:::o;2301:247::-;2360:6;2413:2;2401:9;2392:7;2388:23;2384:32;2381:52;;;2429:1;2426;2419:12;2381:52;2468:9;2455:23;2487:31;2512:5;2487:31;:::i;2841:127::-;2902:10;2897:3;2893:20;2890:1;2883:31;2933:4;2930:1;2923:15;2957:4;2954:1;2947:15;2973:275;3044:2;3038:9;3109:2;3090:13;;-1:-1:-1;;3086:27:69;3074:40;;-1:-1:-1;;;;;3129:34:69;;3165:22;;;3126:62;3123:88;;;3191:18;;:::i;:::-;3227:2;3220:22;2973:275;;-1:-1:-1;2973:275:69:o;3253:186::-;3301:4;-1:-1:-1;;;;;3326:6:69;3323:30;3320:56;;;3356:18;;:::i;:::-;-1:-1:-1;3422:2:69;3401:15;-1:-1:-1;;3397:29:69;3428:4;3393:40;;3253:186::o;3444:171::-;3511:20;;-1:-1:-1;;;;;3560:30:69;;3550:41;;3540:69;;3605:1;3602;3595:12;3620:1275;3775:6;3783;3791;3799;3807;3815;3823;3831;3839;3892:3;3880:9;3871:7;3867:23;3863:33;3860:53;;;3909:1;3906;3899:12;3860:53;3949:9;3936:23;-1:-1:-1;;;;;3974:6:69;3971:30;3968:50;;;4014:1;4011;4004:12;3968:50;4037:22;;4090:4;4082:13;;4078:27;-1:-1:-1;4068:55:69;;4119:1;4116;4109:12;4068:55;4155:2;4142:16;4180:48;4196:31;4224:2;4196:31;:::i;:::-;4180:48;:::i;:::-;4251:2;4244:5;4237:17;4293:7;4286:4;4281:2;4277;4273:11;4269:22;4266:35;4263:55;;;4314:1;4311;4304:12;4263:55;4373:2;4366:4;4362:2;4358:13;4351:4;4344:5;4340:16;4327:49;4419:1;4412:4;4407:2;4400:5;4396:14;4392:25;4385:36;4440:5;4430:15;;;;;4464:40;4498:4;4487:9;4483:20;4464:40;:::i;:::-;4454:50;;4523:38;4557:2;4546:9;4542:18;4523:38;:::i;:::-;4513:48;;4580:38;4614:2;4603:9;4599:18;4580:38;:::i;:::-;4570:48;;4637:38;4670:3;4659:9;4655:19;4637:38;:::i;:::-;4627:48;;4694:39;4728:3;4717:9;4713:19;4694:39;:::i;:::-;4684:49;;4780:3;4769:9;4765:19;4752:33;4742:43;;4832:3;4821:9;4817:19;4804:33;4794:43;;4884:3;4873:9;4869:19;4856:33;4846:43;;3620:1275;;;;;;;;;;;:::o;5163:403::-;5255:6;5263;5271;5324:2;5312:9;5303:7;5299:23;5295:32;5292:52;;;5340:1;5337;5330:12;5292:52;5379:9;5366:23;5398:31;5423:5;5398:31;:::i;:::-;5448:5;-1:-1:-1;5472:37:69;5505:2;5490:18;;5472:37;:::i;:::-;5462:47;;5556:2;5545:9;5541:18;5528:32;5518:42;;5163:403;;;;;:::o;5571:479::-;5676:12;;5669:20;5662:28;5650:41;;5754:4;5743:16;;;5737:23;5730:31;5723:39;5707:14;;;5700:63;5826:4;5815:16;;;5809:23;5802:31;5795:39;5779:14;;;5772:63;5881:4;5870:16;;;5864:23;-1:-1:-1;;;;;5957:21:69;;;5941:14;;;5934:45;;;;6032:4;6021:16;;;6015:23;6011:32;5995:14;;5988:56;5571:479::o;6162:1528::-;6310:4;6352:3;6341:9;6337:19;6329:27;;6365:69;6424:9;6415:6;6409:13;6365:69;:::i;:::-;6481:4;6469:17;;6463:24;-1:-1:-1;;;;;262:31:69;;;6544:4;6529:20;;250:44;6599:4;6587:17;;6581:24;-1:-1:-1;;;;;6120:30:69;6663:4;6648:20;;6108:43;6718:4;6706:17;;6700:24;2623:13;2616:21;6780:4;6765:20;;2604:34;6835:4;6823:17;;6817:24;262:31;;;6860:6;6910:18;;;250:44;;;;6978:4;6970:6;6966:17;6960:24;6938:46;;7003:6;7018:53;7067:2;7056:9;7052:18;7036:14;-1:-1:-1;;;;;6120:30:69;6108:43;;6055:102;7018:53;7120:4;7112:6;7108:17;7102:24;7080:46;;7145:6;7160:51;7207:2;7196:9;7192:18;7176:14;2623:13;2616:21;2604:34;;2553:91;7160:51;7248:4;7236:17;;7230:24;7273:6;7295:18;;;7288:30;;;;7364:15;;;7358:22;7349:6;7334:22;;7327:54;7427:15;;;7421:22;7412:6;7397:22;;7390:54;7481:15;;7475:22;-1:-1:-1;;;;;262:31:69;;;7556:6;7541:22;;250:44;7601:15;;;7595:22;262:31;;;7676:6;7661:22;;250:44;7595:22;-1:-1:-1;7626:58:69;196:104;7695:315;7763:6;7771;7824:2;7812:9;7803:7;7799:23;7795:32;7792:52;;;7840:1;7837;7830:12;7792:52;7876:9;7863:23;7853:33;;7936:2;7925:9;7921:18;7908:32;7949:31;7974:5;7949:31;:::i;:::-;7999:5;7989:15;;;7695:315;;;;;:::o;8015:626::-;8112:6;8120;8173:2;8161:9;8152:7;8148:23;8144:32;8141:52;;;8189:1;8186;8179:12;8141:52;8229:9;8216:23;-1:-1:-1;;;;;8299:2:69;8291:6;8288:14;8285:34;;;8315:1;8312;8305:12;8285:34;8353:6;8342:9;8338:22;8328:32;;8398:7;8391:4;8387:2;8383:13;8379:27;8369:55;;8420:1;8417;8410:12;8369:55;8460:2;8447:16;8486:2;8478:6;8475:14;8472:34;;;8502:1;8499;8492:12;8472:34;8555:7;8550:2;8540:6;8537:1;8533:14;8529:2;8525:23;8521:32;8518:45;8515:65;;;8576:1;8573;8566:12;8515:65;8607:2;8599:11;;;;;8629:6;;-1:-1:-1;8015:626:69;;-1:-1:-1;;;;8015:626:69:o;8646:250::-;8731:1;8741:113;8755:6;8752:1;8749:13;8741:113;;;8831:11;;;8825:18;8812:11;;;8805:39;8777:2;8770:10;8741:113;;;-1:-1:-1;;8888:1:69;8870:16;;8863:27;8646:250::o;8901:270::-;8942:3;8980:5;8974:12;9007:6;9002:3;8995:19;9023:76;9092:6;9085:4;9080:3;9076:14;9069:4;9062:5;9058:16;9023:76;:::i;:::-;9153:2;9132:15;-1:-1:-1;;9128:29:69;9119:39;;;;9160:4;9115:50;;8901:270;-1:-1:-1;;8901:270:69:o;9176:800::-;9336:4;9365:2;9405;9394:9;9390:18;9435:2;9424:9;9417:21;9458:6;9493;9487:13;9524:6;9516;9509:22;9562:2;9551:9;9547:18;9540:25;;9624:2;9614:6;9611:1;9607:14;9596:9;9592:30;9588:39;9574:53;;9662:2;9654:6;9650:15;9683:1;9693:254;9707:6;9704:1;9701:13;9693:254;;;9800:2;9796:7;9784:9;9776:6;9772:22;9768:36;9763:3;9756:49;9828:39;9860:6;9851;9845:13;9828:39;:::i;:::-;9818:49;-1:-1:-1;9925:12:69;;;;9890:15;;;;9729:1;9722:9;9693:254;;;-1:-1:-1;9964:6:69;;9176:800;-1:-1:-1;;;;;;;9176:800:69:o;9981:217::-;10128:2;10117:9;10110:21;10091:4;10148:44;10188:2;10177:9;10173:18;10165:6;10148:44;:::i;10436:1266::-;10968:3;10953:19;;10981:62;10957:9;11025:6;10981:62;:::i;:::-;-1:-1:-1;;;;;11118:15:69;;;11070:3;11097:19;;11090:44;-1:-1:-1;;;;;11208:15:69;;;11202:3;11187:19;;11180:44;11268:14;;11261:22;11255:3;11240:19;;11233:51;11321:15;;;11315:3;11300:19;;11293:44;11374:15;;;;11368:3;11353:19;;11346:44;11434:14;;11427:22;11421:3;11406:19;;11399:51;11481:3;11466:19;;11459:35;;;;11525:3;11510:19;;11503:35;11569:3;11554:19;;11547:35;262:31;;;11634:3;11619:19;;250:44;262:31;;;;11691:3;11676:19;;;250:44;10436:1266;;-1:-1:-1;10436:1266:69:o;13519:127::-;13580:10;13575:3;13571:20;13568:1;13561:31;13611:4;13608:1;13601:15;13635:4;13632:1;13625:15;13651:168;13691:7;13757:1;13753;13749:6;13745:14;13742:1;13739:21;13734:1;13727:9;13720:17;13716:45;13713:71;;;13764:18;;:::i;:::-;-1:-1:-1;13804:9:69;;13651:168::o;13824:127::-;13885:10;13880:3;13876:20;13873:1;13866:31;13916:4;13913:1;13906:15;13940:4;13937:1;13930:15;13956:217;13996:1;14022;14012:132;;14066:10;14061:3;14057:20;14054:1;14047:31;14101:4;14098:1;14091:15;14129:4;14126:1;14119:15;14012:132;-1:-1:-1;14158:9:69;;13956:217::o;14178:128::-;14245:9;;;14266:11;;;14263:37;;;14280:18;;:::i;16059:180::-;-1:-1:-1;;;;;16164:10:69;;;16176;;;16160:27;;16199:11;;;16196:37;;;16213:18;;:::i;16594:853::-;16914:4;16943:3;16973:6;16962:9;16955:25;17016:2;17011;17000:9;16996:18;16989:30;17036:44;17076:2;17065:9;17061:18;17053:6;17036:44;:::i;:::-;-1:-1:-1;;;;;17154:15:69;;;17149:2;17134:18;;17127:43;17206:15;;;17201:2;17186:18;;17179:43;-1:-1:-1;;17259:15:69;;;17253:3;17238:19;;17231:44;-1:-1:-1;;;;;17312:31:69;;;;17107:3;17291:19;;17284:60;17381:15;;;17375:3;17360:19;;17353:44;17428:3;17413:19;17406:35;;;;17028:52;16594:853;-1:-1:-1;;16594:853:69:o;17452:356::-;17654:2;17636:21;;;17673:18;;;17666:30;17732:34;17727:2;17712:18;;17705:62;17799:2;17784:18;;17452:356::o;20315:251::-;20385:6;20438:2;20426:9;20417:7;20413:23;20409:32;20406:52;;;20454:1;20451;20444:12;20406:52;20486:9;20480:16;20505:31;20530:5;20505:31;:::i;20571:164::-;20647:13;;20696;;20689:21;20679:32;;20669:60;;20725:1;20722;20715:12;20740:202;20807:6;20860:2;20848:9;20839:7;20835:23;20831:32;20828:52;;;20876:1;20873;20866:12;20828:52;20899:37;20926:9;20899:37;:::i;20947:444::-;21044:6;21097:2;21085:9;21076:7;21072:23;21068:32;21065:52;;;21113:1;21110;21103:12;21065:52;21146:2;21140:9;21188:2;21180:6;21176:15;21257:6;21245:10;21242:22;-1:-1:-1;;;;;21209:10:69;21206:34;21203:62;21200:88;;;21268:18;;:::i;:::-;21304:2;21297:22;21343:16;;21328:32;;-1:-1:-1;21335:6:69;20947:444;-1:-1:-1;20947:444:69:o;21396:127::-;21457:10;21452:3;21448:20;21445:1;21438:31;21488:4;21485:1;21478:15;21512:4;21509:1;21502:15;21528:521;21605:4;21611:6;21671:11;21658:25;21765:2;21761:7;21750:8;21734:14;21730:29;21726:43;21706:18;21702:68;21692:96;;21784:1;21781;21774:12;21692:96;21811:33;;21863:20;;;-1:-1:-1;;;;;;21895:30:69;;21892:50;;;21938:1;21935;21928:12;21892:50;21971:4;21959:17;;-1:-1:-1;22002:14:69;21998:27;;;21988:38;;21985:58;;;22039:1;22036;22029:12;21985:58;21528:521;;;;;:::o;22054:271::-;22237:6;22229;22224:3;22211:33;22193:3;22263:16;;22288:13;;;22263:16;22054:271;-1:-1:-1;22054:271:69:o;22330:648::-;22410:6;22463:2;22451:9;22442:7;22438:23;22434:32;22431:52;;;22479:1;22476;22469:12;22431:52;22512:9;22506:16;-1:-1:-1;;;;;22537:6:69;22534:30;22531:50;;;22577:1;22574;22567:12;22531:50;22600:22;;22653:4;22645:13;;22641:27;-1:-1:-1;22631:55:69;;22682:1;22679;22672:12;22631:55;22711:2;22705:9;22736:48;22752:31;22780:2;22752:31;:::i;22736:48::-;22807:2;22800:5;22793:17;22847:7;22842:2;22837;22833;22829:11;22825:20;22822:33;22819:53;;;22868:1;22865;22858:12;22819:53;22881:67;22945:2;22940;22933:5;22929:14;22924:2;22920;22916:11;22881:67;:::i;:::-;22967:5;22330:648;-1:-1:-1;;;;;22330:648:69:o;23207:135::-;23246:3;23267:17;;;23264:43;;23287:18;;:::i;:::-;-1:-1:-1;23334:1:69;23323:13;;23207:135::o;24104:184::-;24174:6;24227:2;24215:9;24206:7;24202:23;24198:32;24195:52;;;24243:1;24240;24233:12;24195:52;-1:-1:-1;24266:16:69;;24104:184;-1:-1:-1;24104:184:69:o;25195:359::-;25398:6;25387:9;25380:25;25441:6;25436:2;25425:9;25421:18;25414:34;25484:2;25479;25468:9;25464:18;25457:30;25361:4;25504:44;25544:2;25533:9;25529:18;25521:6;25504:44;:::i;25747:925::-;26095:4;26124:3;26154:2;26143:9;26136:21;26174:44;26214:2;26203:9;26199:18;26191:6;26174:44;:::i;:::-;26249:2;26234:18;;26227:34;;;;-1:-1:-1;;26292:2:69;26277:18;;26270:34;;;;-1:-1:-1;;;;;26340:31:69;;;;26335:2;26320:18;;26313:59;-1:-1:-1;;;;;26447:15:69;;;26441:3;26426:19;;26419:44;26500:15;;;26399:3;26479:19;;26472:44;26553:15;;26547:3;26532:19;;26525:44;26600:3;26585:19;;26578:35;26650:15;26644:3;26629:19;;;26622:44;26166:52;25747:925;-1:-1:-1;25747:925:69:o;26677:714::-;26781:6;26834:3;26822:9;26813:7;26809:23;26805:33;26802:53;;;26851:1;26848;26841:12;26802:53;26884:2;26878:9;26926:3;26918:6;26914:16;26996:6;26984:10;26981:22;-1:-1:-1;;;;;26948:10:69;26945:34;26942:62;26939:88;;;27007:18;;:::i;:::-;27043:2;27036:22;27082:37;27109:9;27082:37;:::i;:::-;27074:6;27067:53;27153:46;27195:2;27184:9;27180:18;27153:46;:::i;:::-;27148:2;27140:6;27136:15;27129:71;27233:46;27275:2;27264:9;27260:18;27233:46;:::i;:::-;27228:2;27220:6;27216:15;27209:71;27313:46;27355:2;27344:9;27340:18;27313:46;:::i;:::-;27308:2;27296:15;;27289:71;27300:6;26677:714;-1:-1:-1;;;26677:714:69:o;28466:697::-;28687:3;28725:6;28719:13;28741:66;28800:6;28795:3;28788:4;28780:6;28776:17;28741:66;:::i;:::-;28870:13;;28829:16;;;;28892:70;28870:13;28829:16;28939:4;28927:17;;28892:70;:::i;:::-;29029:13;;28984:20;;;29051:70;29029:13;28984:20;29098:4;29086:17;;29051:70;:::i;:::-;29137:20;;28466:697;-1:-1:-1;;;;;28466:697:69:o;29168:583::-;-1:-1:-1;;;29524:3:69;29517:16;29499:3;29562:6;29556:13;29578:74;29645:6;29641:1;29636:3;29632:11;29625:4;29617:6;29613:17;29578:74;:::i;:::-;-1:-1:-1;;;29711:1:69;29671:16;;;;29703:10;;;29696:23;-1:-1:-1;29743:1:69;29735:10;;29168:583;-1:-1:-1;29168:583:69:o;29756:450::-;29986:3;30024:6;30018:13;30040:66;30099:6;30094:3;30087:4;30079:6;30075:17;30040:66;:::i;:::-;-1:-1:-1;;;30128:16:69;;30153:18;;;-1:-1:-1;30198:1:69;30187:13;;29756:450;-1:-1:-1;29756:450:69:o;31513:287::-;31642:3;31680:6;31674:13;31696:66;31755:6;31750:3;31743:4;31735:6;31731:17;31696:66;:::i;:::-;31778:16;;;;;31513:287;-1:-1:-1;;31513:287:69:o",
    "linkReferences": {},
    "immutableReferences": {
      "50760": [
        {
          "start": 1400,
          "length": 32
        },
        {
          "start": 5855,
          "length": 32
        },
        {
          "start": 8103,
          "length": 32
        },
        {
          "start": 9735,
          "length": 32
        },
        {
          "start": 9836,
          "length": 32
        }
      ]
    }
  },
  "methodIdentifiers": {
    "assertTruth(bytes,address,address,address,uint64,address,uint256,bytes32,bytes32)": "6457c979",
    "assertTruthWithDefaults(bytes,address)": "36b13af4",
    "assertions(bytes32)": "d60715b5",
    "burnedBondPercentage()": "08e7c3e6",
    "cachedCurrencies(address)": "70762157",
    "cachedIdentifiers(bytes32)": "530dd392",
    "cachedOracle()": "a7af2d0f",
    "defaultCurrency()": "20402e1d",
    "defaultIdentifier()": "d509b017",
    "defaultLiveness()": "fe4e1983",
    "disputeAssertion(bytes32,address)": "a6a22b43",
    "finder()": "b9a3c84c",
    "getAssertion(bytes32)": "88302884",
    "getAssertionResult(bytes32)": "e39dfd7f",
    "getCurrentTime()": "29cb924d",
    "getMinimumBond(address)": "4360af3d",
    "multicall(bytes[])": "ac9650d8",
    "numericalTrue()": "da03b36e",
    "owner()": "8da5cb5b",
    "renounceOwnership()": "715018a6",
    "setAdminProperties(address,uint64,uint256)": "82762520",
    "setCurrentTime(uint256)": "22f8e566",
    "settleAndGetAssertionResult(bytes32)": "8ea2f2ab",
    "settleAssertion(bytes32)": "4124beef",
    "stampAssertion(bytes32)": "afedba4f",
    "syncUmaParams(bytes32,address)": "a8655785",
    "timerAddress()": "1c39c38d",
    "transferOwnership(address)": "f2fde38b"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.16+commit.07a7930e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"contract FinderInterface\",\"name\":\"_finder\",\"type\":\"address\"},{\"internalType\":\"contract IERC20\",\"name\":\"_defaultCurrency\",\"type\":\"address\"},{\"internalType\":\"uint64\",\"name\":\"_defaultLiveness\",\"type\":\"uint64\"},{\"internalType\":\"address\",\"name\":\"_timerAddress\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"contract IERC20\",\"name\":\"defaultCurrency\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"defaultLiveness\",\"type\":\"uint64\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"burnedBondPercentage\",\"type\":\"uint256\"}],\"name\":\"AdminPropertiesSet\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"assertionId\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"caller\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"disputer\",\"type\":\"address\"}],\"name\":\"AssertionDisputed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"assertionId\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"domainId\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"claim\",\"type\":\"bytes\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"asserter\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"callbackRecipient\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"escalationManager\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"caller\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"expirationTime\",\"type\":\"uint64\"},{\"indexed\":false,\"internalType\":\"contract IERC20\",\"name\":\"currency\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"bond\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"identifier\",\"type\":\"bytes32\"}],\"name\":\"AssertionMade\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"assertionId\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"bondRecipient\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"disputed\",\"type\":\"bool\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"settlementResolution\",\"type\":\"bool\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"settleCaller\",\"type\":\"address\"}],\"name\":\"AssertionSettled\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"claim\",\"type\":\"bytes\"},{\"internalType\":\"address\",\"name\":\"asserter\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"callbackRecipient\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"escalationManager\",\"type\":\"address\"},{\"internalType\":\"uint64\",\"name\":\"liveness\",\"type\":\"uint64\"},{\"internalType\":\"contract IERC20\",\"name\":\"currency\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"bond\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"identifier\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"domainId\",\"type\":\"bytes32\"}],\"name\":\"assertTruth\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"assertionId\",\"type\":\"bytes32\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"claim\",\"type\":\"bytes\"},{\"internalType\":\"address\",\"name\":\"asserter\",\"type\":\"address\"}],\"name\":\"assertTruthWithDefaults\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"name\":\"assertions\",\"outputs\":[{\"components\":[{\"internalType\":\"bool\",\"name\":\"arbitrateViaEscalationManager\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"discardOracle\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"validateDisputers\",\"type\":\"bool\"},{\"internalType\":\"address\",\"name\":\"assertingCaller\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"escalationManager\",\"type\":\"address\"}],\"internalType\":\"struct OptimisticOracleV3Interface.EscalationManagerSettings\",\"name\":\"escalationManagerSettings\",\"type\":\"tuple\"},{\"internalType\":\"address\",\"name\":\"asserter\",\"type\":\"address\"},{\"internalType\":\"uint64\",\"name\":\"assertionTime\",\"type\":\"uint64\"},{\"internalType\":\"bool\",\"name\":\"settled\",\"type\":\"bool\"},{\"internalType\":\"contract IERC20\",\"name\":\"currency\",\"type\":\"address\"},{\"internalType\":\"uint64\",\"name\":\"expirationTime\",\"type\":\"uint64\"},{\"internalType\":\"bool\",\"name\":\"settlementResolution\",\"type\":\"bool\"},{\"internalType\":\"bytes32\",\"name\":\"domainId\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"identifier\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"bond\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"callbackRecipient\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"disputer\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"burnedBondPercentage\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"cachedCurrencies\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"isWhitelisted\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"finalFee\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"name\":\"cachedIdentifiers\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"cachedOracle\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"defaultCurrency\",\"outputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"defaultIdentifier\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"defaultLiveness\",\"outputs\":[{\"internalType\":\"uint64\",\"name\":\"\",\"type\":\"uint64\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"assertionId\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"disputer\",\"type\":\"address\"}],\"name\":\"disputeAssertion\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"finder\",\"outputs\":[{\"internalType\":\"contract FinderInterface\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"assertionId\",\"type\":\"bytes32\"}],\"name\":\"getAssertion\",\"outputs\":[{\"components\":[{\"components\":[{\"internalType\":\"bool\",\"name\":\"arbitrateViaEscalationManager\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"discardOracle\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"validateDisputers\",\"type\":\"bool\"},{\"internalType\":\"address\",\"name\":\"assertingCaller\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"escalationManager\",\"type\":\"address\"}],\"internalType\":\"struct OptimisticOracleV3Interface.EscalationManagerSettings\",\"name\":\"escalationManagerSettings\",\"type\":\"tuple\"},{\"internalType\":\"address\",\"name\":\"asserter\",\"type\":\"address\"},{\"internalType\":\"uint64\",\"name\":\"assertionTime\",\"type\":\"uint64\"},{\"internalType\":\"bool\",\"name\":\"settled\",\"type\":\"bool\"},{\"internalType\":\"contract IERC20\",\"name\":\"currency\",\"type\":\"address\"},{\"internalType\":\"uint64\",\"name\":\"expirationTime\",\"type\":\"uint64\"},{\"internalType\":\"bool\",\"name\":\"settlementResolution\",\"type\":\"bool\"},{\"internalType\":\"bytes32\",\"name\":\"domainId\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"identifier\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"bond\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"callbackRecipient\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"disputer\",\"type\":\"address\"}],\"internalType\":\"struct OptimisticOracleV3Interface.Assertion\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"assertionId\",\"type\":\"bytes32\"}],\"name\":\"getAssertionResult\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getCurrentTime\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"currency\",\"type\":\"address\"}],\"name\":\"getMinimumBond\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes[]\",\"name\":\"data\",\"type\":\"bytes[]\"}],\"name\":\"multicall\",\"outputs\":[{\"internalType\":\"bytes[]\",\"name\":\"results\",\"type\":\"bytes[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"numericalTrue\",\"outputs\":[{\"internalType\":\"int256\",\"name\":\"\",\"type\":\"int256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"_defaultCurrency\",\"type\":\"address\"},{\"internalType\":\"uint64\",\"name\":\"_defaultLiveness\",\"type\":\"uint64\"},{\"internalType\":\"uint256\",\"name\":\"_burnedBondPercentage\",\"type\":\"uint256\"}],\"name\":\"setAdminProperties\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"time\",\"type\":\"uint256\"}],\"name\":\"setCurrentTime\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"assertionId\",\"type\":\"bytes32\"}],\"name\":\"settleAndGetAssertionResult\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"assertionId\",\"type\":\"bytes32\"}],\"name\":\"settleAssertion\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"assertionId\",\"type\":\"bytes32\"}],\"name\":\"stampAssertion\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"identifier\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"currency\",\"type\":\"address\"}],\"name\":\"syncUmaParams\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"timerAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"assertTruth(bytes,address,address,address,uint64,address,uint256,bytes32,bytes32)\":{\"details\":\"The caller must approve this contract to spend at least bond amount of currency.\",\"params\":{\"asserter\":\"account that receives bonds back at settlement. This could be msg.sender or any other account that the caller wants to receive the bond at settlement time.\",\"bond\":\"amount of currency to pull from the caller and hold in escrow until the assertion is resolved. This must be >= getMinimumBond(address(currency)).\",\"callbackRecipient\":\"if configured, this address will receive a function call assertionResolvedCallback and assertionDisputedCallback at resolution or dispute respectively. Enables dynamic responses to these events. The recipient _must_ implement these callbacks and not revert or the assertion resolution will be blocked.\",\"claim\":\"the truth claim being asserted. This is an assertion about the world, and is verified by disputers.\",\"currency\":\"bond currency pulled from the caller and held in escrow until the assertion is resolved.\",\"domainId\":\"optional domain that can be used to relate this assertion to others in the escalationManager and can be used by the configured escalationManager to define custom behavior for groups of assertions. This is typically used for \\\"escalation games\\\" by changing bonds or other assertion properties based on the other assertions that have come before. If not needed this value should be 0 to save gas.\",\"escalationManager\":\"if configured, this address will control escalation properties of the assertion. This means a) choosing to arbitrate via the UMA DVM, b) choosing to discard assertions on dispute, or choosing to validate disputes. Combining these, the asserter can define their own security properties for the assertion. escalationManager also _must_ implement the same callbacks as callbackRecipient.\",\"identifier\":\"UMA DVM identifier to use for price requests in the event of a dispute. Must be pre-approved.\",\"liveness\":\"time to wait before the assertion can be resolved. Assertion can be disputed in this time.\"},\"returns\":{\"assertionId\":\"unique identifier for this assertion.\"}},\"assertTruthWithDefaults(bytes,address)\":{\"details\":\"The caller must approve this contract to spend at least the result of getMinimumBond(defaultCurrency).\",\"params\":{\"asserter\":\"account that receives bonds back at settlement. This could be msg.sender or any other account that the caller wants to receive the bond at settlement time.\",\"claim\":\"the truth claim being asserted. This is an assertion about the world, and is verified by disputers.\"},\"returns\":{\"_0\":\"assertionId unique identifier for this assertion.\"}},\"disputeAssertion(bytes32,address)\":{\"details\":\"The caller must approve this contract to spend at least bond amount of currency for the associated assertion.\",\"params\":{\"assertionId\":\"unique identifier for the assertion to dispute.\",\"disputer\":\"receives bonds back at settlement.\"}},\"getAssertion(bytes32)\":{\"params\":{\"assertionId\":\"unique identifier for the assertion to fetch information for.\"},\"returns\":{\"_0\":\"assertion information about the assertion.\"}},\"getAssertionResult(bytes32)\":{\"params\":{\"assertionId\":\"unique identifier for the assertion to fetch the resolution for.\"},\"returns\":{\"_0\":\"resolution of the assertion.\"}},\"getMinimumBond(address)\":{\"params\":{\"currency\":\"currency to calculate the minimum bond for.\"},\"returns\":{\"_0\":\"minimum bond amount.\"}},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"setAdminProperties(address,uint64,uint256)\":{\"details\":\"Only callable by the contract owner (UMA governor).\",\"params\":{\"_burnedBondPercentage\":\"the percentage of the bond that is sent as fee to UMA Store contract on disputes.\",\"_defaultCurrency\":\"the default currency to bond asserters in assertTruthWithDefaults.\",\"_defaultLiveness\":\"the default liveness for assertions in assertTruthWithDefaults.\"}},\"setCurrentTime(uint256)\":{\"details\":\"Will revert if not running in test mode.\",\"params\":{\"time\":\"timestamp to set current Testable time to.\"}},\"settleAndGetAssertionResult(bytes32)\":{\"params\":{\"assertionId\":\"unique identifier for the assertion to resolve and return the resolution for.\"},\"returns\":{\"_0\":\"resolution of the assertion.\"}},\"settleAssertion(bytes32)\":{\"params\":{\"assertionId\":\"unique identifier for the assertion to resolve.\"}},\"stampAssertion(bytes32)\":{\"params\":{\"assertionId\":\"unique identifier for the assertion to construct ancillary data for.\"},\"returns\":{\"_0\":\"ancillaryData stamped assertion information.\"}},\"syncUmaParams(bytes32,address)\":{\"params\":{\"currency\":\"currency to fetch information for and store locally.\",\"identifier\":\"identifier to fetch information for and store locally.\"}},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"assertTruth(bytes,address,address,address,uint64,address,uint256,bytes32,bytes32)\":{\"notice\":\"Asserts a truth about the world, using a fully custom configuration.\"},\"assertTruthWithDefaults(bytes,address)\":{\"notice\":\"Asserts a truth about the world, using the default currency and liveness. No callback recipient or escalation manager is enabled. The caller is expected to provide a bond of finalFee/burnedBondPercentage (with burnedBondPercentage set to 50%, the bond is 2x final fee) of the default currency.\"},\"defaultIdentifier()\":{\"notice\":\"Returns the default identifier used by the Optimistic Oracle V3.\"},\"disputeAssertion(bytes32,address)\":{\"notice\":\"Disputes an assertion. Depending on how the assertion was configured, this may either escalate to the UMA DVM or the configured escalation manager for arbitration.\"},\"getAssertion(bytes32)\":{\"notice\":\"Fetches information about a specific assertion and returns it.\"},\"getAssertionResult(bytes32)\":{\"notice\":\"Fetches the resolution of a specific assertion and returns it. If the assertion has not been settled then this will revert. If the assertion was disputed and configured to discard the oracle resolution return false.\"},\"getMinimumBond(address)\":{\"notice\":\"Returns the minimum bond amount required to make an assertion. This is calculated as the final fee of the currency divided by the burnedBondPercentage. If burn percentage is 50% then the min bond is 2x the final fee.\"},\"setAdminProperties(address,uint64,uint256)\":{\"notice\":\"Sets the default currency, liveness, and burned bond percentage.\"},\"setCurrentTime(uint256)\":{\"notice\":\"Sets the current time.\"},\"settleAndGetAssertionResult(bytes32)\":{\"notice\":\"Settles an assertion and returns the resolution.\"},\"settleAssertion(bytes32)\":{\"notice\":\"Resolves an assertion. If the assertion has not been disputed, the assertion is resolved as true and the asserter receives the bond. If the assertion has been disputed, the assertion is resolved depending on the oracle result. Based on the result, the asserter or disputer receives the bond. If the assertion was disputed then an amount of the bond is sent to the UMA Store as an oracle fee based on the burnedBondPercentage. The remainder of the bond is returned to the asserter or disputer.\"},\"stampAssertion(bytes32)\":{\"notice\":\"Appends information onto an assertionId to construct ancillary data used for dispute resolution.\"},\"syncUmaParams(bytes32,address)\":{\"notice\":\"Fetches information about a specific identifier & currency from the UMA contracts and stores a local copy of the information within this contract. This is used to save gas when making assertions as we can avoid an external call to the UMA contracts to fetch this.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"node_modules/@uma/core/contracts/optimistic-oracle-v3/implementation/test/OptimisticOracleV3Test.sol\":\"OptimisticOracleV3Test\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@across-protocol/=node_modules/@across-protocol/\",\":@ensdomains/=node_modules/@ensdomains/\",\":@eth-optimism/=node_modules/@across-protocol/contracts/node_modules/@eth-optimism/\",\":@gnosis.pm/=node_modules/@gnosis.pm/\",\":@maticnetwork/=node_modules/@maticnetwork/\",\":@openzeppelin/=node_modules/@openzeppelin/\",\":@uma/=node_modules/@uma/\",\":@uniswap/=node_modules/@uniswap/\",\":base64-sol/=node_modules/base64-sol/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":eth-gas-reporter/=node_modules/eth-gas-reporter/\",\":forge-std/=lib/forge-std/src/\",\":hardhat-deploy/=node_modules/hardhat-deploy/\",\":hardhat/=node_modules/hardhat/\"]},\"sources\":{\"node_modules/@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0x24e0364e503a9bbde94c715d26573a76f14cd2a202d45f96f52134ab806b67b9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e12cbaa7378fd9b62280e4e1d164bedcb4399ce238f5f98fc0eefb7e50577981\",\"dweb:/ipfs/QmXRoFGUgfsaRkoPT5bxNMtSayKTQ8GZATLPXf69HcRA51\"]},\"node_modules/@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xbbc8ac883ac3c0078ce5ad3e288fbb3ffcc8a30c3a98c0fda0114d64fc44fca2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87a7a5d2f6f63f84598af02b8c50ca2df2631cb8ba2453e8d95fcb17e4be9824\",\"dweb:/ipfs/QmR76hqtAcRqoFj33tmNjcWTLrgNsAaakYwnKZ8zoJtKei\"]},\"node_modules/@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0xc3d946432c0ddbb1f846a0d3985be71299df331b91d06732152117f62f0be2b5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4632c341a06ba5c079b51ca5a915efab4e6ab57735b37839b3e8365ff806a43e\",\"dweb:/ipfs/QmTHT3xHYed2wajEoA5qu7ii2BxLpPhQZHwAhtLK5Z7ANK\"]},\"node_modules/@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0x2ccf9d2313a313d41a791505f2b5abfdc62191b5d4334f7f7a82691c088a1c87\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b3a57d0854b2fdce6ebff933a48dca2445643d1eccfc27f00292e937f26c6a58\",\"dweb:/ipfs/QmW45rZooS9TqR4YXUbjRbtf2Bpb5ouSarBvfW1LdGprvV\"]},\"node_modules/@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"node_modules/@openzeppelin/contracts/utils/math/SafeMath.sol\":{\"keccak256\":\"0xa2f576be637946f767aa56601c26d717f48a0aff44f82e46f13807eea1009a21\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://973868f808e88e21a1a0a01d4839314515ee337ad096286c88e41b74dcc11fc2\",\"dweb:/ipfs/QmfYuZxRfx2J2xdk4EXN7jKg4bUYEMTaYk9BAw9Bqn4o2Y\"]},\"node_modules/@openzeppelin/contracts/utils/math/SignedSafeMath.sol\":{\"keccak256\":\"0x62f53f262fabbbc6d8ab49488d8fce36370351aff2b8d3898d499d68995a71c2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://efd599513c2f313a3f5e9536beb2b80a0d2b3dd34202c174a707d81b7dc751ce\",\"dweb:/ipfs/QmdDiENVFSyWjfFskNLnViMH77DHg3oDthkSZk7dMzNNKB\"]},\"node_modules/@uma/core/contracts/common/implementation/AddressWhitelist.sol\":{\"keccak256\":\"0xc1f20b925f9d37230aaf7bbee536f9a9b08e4772864f0a243ff1b69b54710fee\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://55bc6782bd269463214dbafa8702b2ff33910fd4a51ab24d775aabb15e278bcc\",\"dweb:/ipfs/QmV41DnGByGBtg8gk7MG6Nr3xYo5R5varZ8cewywdKNATQ\"]},\"node_modules/@uma/core/contracts/common/implementation/AncillaryData.sol\":{\"keccak256\":\"0x8ff33ac32d3e6de25de9e0ac2c0ff9a621f187fa97e9ee84092b327471baa3ce\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://0bbaed49756e8cf7ef405e132f441cd7a735ac6186a200b0179147e7d137b74a\",\"dweb:/ipfs/QmeSBJX5a61LZPxbkUKS2NF4LSxemgDwjD65fCAmyP7PX2\"]},\"node_modules/@uma/core/contracts/common/implementation/FixedPoint.sol\":{\"keccak256\":\"0x996b97cc4fa5da4064e3aee500edc6972485d59a9334ceec81155e2c2f484dae\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://8d7c028926dc2b27e7dc103363dca8a43f60b3351f4a14bcb702660f95c68663\",\"dweb:/ipfs/QmXz4ieFjP5RxJ35F8GbPryYEGvFmxc4Gqx8EK7N57ixzT\"]},\"node_modules/@uma/core/contracts/common/implementation/Lockable.sol\":{\"keccak256\":\"0x41d78fcce54598ad5f26bc0b778c0f4fedbd836401625e49e736979f69a87ef0\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://4ce111bb50441ef5125e7d42284f6debbc17fd589515d7b8cede7e9d1d5f0ede\",\"dweb:/ipfs/QmaXiXACWVEDDHoCHNXdVBoNpf8QNHkUZ1kf5MfbxfL6jj\"]},\"node_modules/@uma/core/contracts/common/implementation/MultiCaller.sol\":{\"keccak256\":\"0x9f6afe5bafc5e16fe8d63010a740ec3a88a9f00a7236ea7e5b039a2f50eb346e\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://a971572a4a9ed32e5ec15ac384af593d9499778f6ec593dbdba67d44ced4c7d8\",\"dweb:/ipfs/QmbdpfhhnUyoHWe7TPFBZxT6R6zyxJEDcGBNwDt5ncweRv\"]},\"node_modules/@uma/core/contracts/common/implementation/Testable.sol\":{\"keccak256\":\"0x0254b45747293bb800373a58d123969adec0428f7be79dc941cab10fcad09918\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://537d694e3753596f507d071f283be9caeaad0010c444c9c9955d729affeb4907\",\"dweb:/ipfs/QmZ1WfVTBao11QaN6aygMhnt45UjRq77ZwfKPFmHiVSdaJ\"]},\"node_modules/@uma/core/contracts/common/implementation/Timer.sol\":{\"keccak256\":\"0x9e0dd7389718bd5d1da910273a6f4cee98ee22bfc0c92bde0f0955c0e23adb5e\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://7ddac8d3cb76f8811156a11a7702d7c05b15a0f18c22b5abdc318723193f9266\",\"dweb:/ipfs/QmPxL7AU8NkURJaZ6WxXNcw88wGMSoPX4jbt7SMdPJqtYv\"]},\"node_modules/@uma/core/contracts/common/interfaces/AddressWhitelistInterface.sol\":{\"keccak256\":\"0x22fb8588dff1d5cff76a28111d6c9b190765d99facd93c8ff3b54771f245c0d8\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://5ecd993f00de290a3c7bf21da23a9439cf2ccb22028316df92b79780ac8aa533\",\"dweb:/ipfs/QmTZ7x7U4EEzTacqapzSdFs2np5WNsqm4XeUBqzQxxDJei\"]},\"node_modules/@uma/core/contracts/data-verification-mechanism/implementation/Constants.sol\":{\"keccak256\":\"0xe40957105a9240c6bcb9753fd0011fe9f382c437cd6771c57bf7a96f8ceb9c84\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://cbf0d25e841b1f5c4022d09fb29220cb428139443cb29c4ab8dbfff71dffcc05\",\"dweb:/ipfs/QmSVVr5wH1tZi6WmKyuy1K8yS6JN4DeK5kWaZpPKtXiqkK\"]},\"node_modules/@uma/core/contracts/data-verification-mechanism/interfaces/FinderInterface.sol\":{\"keccak256\":\"0x9166fbfe08e954eb86d33c114fcde7ce4fd0dda5d9d28b31210582bfc769fa86\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://e611e12bcaaebfdf65b67c566ff1d34708e757f01a445bd87c55862e89383b81\",\"dweb:/ipfs/QmYNSq5oopTShdS6j4VWKqoLxmQSRKmWebCxw6K4LfmKrf\"]},\"node_modules/@uma/core/contracts/data-verification-mechanism/interfaces/IdentifierWhitelistInterface.sol\":{\"keccak256\":\"0x9ae86a30dd1a8c03fb2c6d27be570bb30c4c0b13ac63cde8620b7e4b51d88dc9\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://a71d2aff48e075ecab56a9c9767775d1d77e04ec9191fed124e71003220549e3\",\"dweb:/ipfs/QmYPWsZXro6fzqpZY6UxQ5X8znEXfLp2sun8oXzdz8bTyc\"]},\"node_modules/@uma/core/contracts/data-verification-mechanism/interfaces/OracleAncillaryInterface.sol\":{\"keccak256\":\"0xd58b41fe1e389f7871db7c04f2c05c1aac1d0455bbc521534da81fd657016a1f\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://cc532e9c550bb1bba0daa33fda748590cd06ce94a9566fe65dac04e7d40977bc\",\"dweb:/ipfs/QmZKvfRW2LJFt5MWZbKuU9ujkXnS2hkPUJVj8wwJWcuZGX\"]},\"node_modules/@uma/core/contracts/data-verification-mechanism/interfaces/StoreInterface.sol\":{\"keccak256\":\"0xbb73671684309c91ad5ef3da1474051d03f2e7d5882bed7f5c4317e5d4c768df\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://32386544d3119fd0187a8c4e8b01c739f508ab863faa04345cabc2544081f9e8\",\"dweb:/ipfs/QmYszDURs1x75rsejZkGt9zCkASXnJtufbNsL3XHe2eJPQ\"]},\"node_modules/@uma/core/contracts/optimistic-oracle-v3/implementation/OptimisticOracleV3.sol\":{\"keccak256\":\"0xeba5082c48c3d891f2422b8c0d1d5d6552ab47b5d538db7ff05ffb2f3db25ffc\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://d818630e1c094792613a0539aa0a7677ca8fa92a5308eaf4ff7cf8ea8a4c547e\",\"dweb:/ipfs/QmSM78A3afY6osh4VAmyJX2E4Qyg4qcY1KwY5uFnSK4Yia\"]},\"node_modules/@uma/core/contracts/optimistic-oracle-v3/implementation/test/OptimisticOracleV3Test.sol\":{\"keccak256\":\"0xdb817afdd3c786d21ac8dede8e97452905d0ba84f444949cf6f92f77e8c2a38e\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://f88474c7ac47ad72196818aa1d77d3b4bccac18ec77ae008ed53ec48c18f4fee\",\"dweb:/ipfs/QmPxsszotngGGDBv6vCE1kANMtgX8fLD6Xv7YwtZsUKqJQ\"]},\"node_modules/@uma/core/contracts/optimistic-oracle-v3/interfaces/EscalationManagerInterface.sol\":{\"keccak256\":\"0xce31adf62ae47468bab181bf1137b05e8ac0a003f019c343ac137a76ea32efc7\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://eb1b93b648adf4130fdfe7a62d817cda0519e7760a50b90f16a3c46cee4c0967\",\"dweb:/ipfs/QmNPD4TRAm9kqqQDKQabqZgaorkJNov96iLgxsm5HRTSZN\"]},\"node_modules/@uma/core/contracts/optimistic-oracle-v3/interfaces/OptimisticOracleV3CallbackRecipientInterface.sol\":{\"keccak256\":\"0x79f90bc84ed5d394380e99f0a5d1b219abd9016bc3a02fad0099014af08af03e\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://dc1b7b847eb711750bc76ab45a13294b05fc09e361294a6bdffb90cb15f50b63\",\"dweb:/ipfs/QmQSs2R7mmGojGdNkqP75Vf7LajRkfJ1oGuYAUCHYGmPEQ\"]},\"node_modules/@uma/core/contracts/optimistic-oracle-v3/interfaces/OptimisticOracleV3Interface.sol\":{\"keccak256\":\"0xf31322bfd64854f0bfa92051d6ec711c1eed15d8042f394f5c24c05378218367\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://535bc2a6060e86a49524fd3c0062afcf83077530cefb3c1b8179b832f03ca81e\",\"dweb:/ipfs/QmQZhqn6oUiebSWEKbqcmiMGkqAb8B59WsRAyFU8WY84ct\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.16+commit.07a7930e"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [
            {
              "internalType": "contract FinderInterface",
              "name": "_finder",
              "type": "address"
            },
            {
              "internalType": "contract IERC20",
              "name": "_defaultCurrency",
              "type": "address"
            },
            {
              "internalType": "uint64",
              "name": "_defaultLiveness",
              "type": "uint64"
            },
            {
              "internalType": "address",
              "name": "_timerAddress",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "constructor"
        },
        {
          "inputs": [
            {
              "internalType": "contract IERC20",
              "name": "defaultCurrency",
              "type": "address",
              "indexed": false
            },
            {
              "internalType": "uint64",
              "name": "defaultLiveness",
              "type": "uint64",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "burnedBondPercentage",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "AdminPropertiesSet",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "assertionId",
              "type": "bytes32",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "caller",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "disputer",
              "type": "address",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "AssertionDisputed",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "assertionId",
              "type": "bytes32",
              "indexed": true
            },
            {
              "internalType": "bytes32",
              "name": "domainId",
              "type": "bytes32",
              "indexed": false
            },
            {
              "internalType": "bytes",
              "name": "claim",
              "type": "bytes",
              "indexed": false
            },
            {
              "internalType": "address",
              "name": "asserter",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "callbackRecipient",
              "type": "address",
              "indexed": false
            },
            {
              "internalType": "address",
              "name": "escalationManager",
              "type": "address",
              "indexed": false
            },
            {
              "internalType": "address",
              "name": "caller",
              "type": "address",
              "indexed": false
            },
            {
              "internalType": "uint64",
              "name": "expirationTime",
              "type": "uint64",
              "indexed": false
            },
            {
              "internalType": "contract IERC20",
              "name": "currency",
              "type": "address",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "bond",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "bytes32",
              "name": "identifier",
              "type": "bytes32",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "AssertionMade",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "assertionId",
              "type": "bytes32",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "bondRecipient",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "bool",
              "name": "disputed",
              "type": "bool",
              "indexed": false
            },
            {
              "internalType": "bool",
              "name": "settlementResolution",
              "type": "bool",
              "indexed": false
            },
            {
              "internalType": "address",
              "name": "settleCaller",
              "type": "address",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "AssertionSettled",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "previousOwner",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "newOwner",
              "type": "address",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "OwnershipTransferred",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes",
              "name": "claim",
              "type": "bytes"
            },
            {
              "internalType": "address",
              "name": "asserter",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "callbackRecipient",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "escalationManager",
              "type": "address"
            },
            {
              "internalType": "uint64",
              "name": "liveness",
              "type": "uint64"
            },
            {
              "internalType": "contract IERC20",
              "name": "currency",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "bond",
              "type": "uint256"
            },
            {
              "internalType": "bytes32",
              "name": "identifier",
              "type": "bytes32"
            },
            {
              "internalType": "bytes32",
              "name": "domainId",
              "type": "bytes32"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "assertTruth",
          "outputs": [
            {
              "internalType": "bytes32",
              "name": "assertionId",
              "type": "bytes32"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bytes",
              "name": "claim",
              "type": "bytes"
            },
            {
              "internalType": "address",
              "name": "asserter",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "assertTruthWithDefaults",
          "outputs": [
            {
              "internalType": "bytes32",
              "name": "",
              "type": "bytes32"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "",
              "type": "bytes32"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "assertions",
          "outputs": [
            {
              "internalType": "struct OptimisticOracleV3Interface.EscalationManagerSettings",
              "name": "escalationManagerSettings",
              "type": "tuple",
              "components": [
                {
                  "internalType": "bool",
                  "name": "arbitrateViaEscalationManager",
                  "type": "bool"
                },
                {
                  "internalType": "bool",
                  "name": "discardOracle",
                  "type": "bool"
                },
                {
                  "internalType": "bool",
                  "name": "validateDisputers",
                  "type": "bool"
                },
                {
                  "internalType": "address",
                  "name": "assertingCaller",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "escalationManager",
                  "type": "address"
                }
              ]
            },
            {
              "internalType": "address",
              "name": "asserter",
              "type": "address"
            },
            {
              "internalType": "uint64",
              "name": "assertionTime",
              "type": "uint64"
            },
            {
              "internalType": "bool",
              "name": "settled",
              "type": "bool"
            },
            {
              "internalType": "contract IERC20",
              "name": "currency",
              "type": "address"
            },
            {
              "internalType": "uint64",
              "name": "expirationTime",
              "type": "uint64"
            },
            {
              "internalType": "bool",
              "name": "settlementResolution",
              "type": "bool"
            },
            {
              "internalType": "bytes32",
              "name": "domainId",
              "type": "bytes32"
            },
            {
              "internalType": "bytes32",
              "name": "identifier",
              "type": "bytes32"
            },
            {
              "internalType": "uint256",
              "name": "bond",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "callbackRecipient",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "disputer",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "burnedBondPercentage",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "cachedCurrencies",
          "outputs": [
            {
              "internalType": "bool",
              "name": "isWhitelisted",
              "type": "bool"
            },
            {
              "internalType": "uint256",
              "name": "finalFee",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "",
              "type": "bytes32"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "cachedIdentifiers",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "cachedOracle",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "defaultCurrency",
          "outputs": [
            {
              "internalType": "contract IERC20",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "defaultIdentifier",
          "outputs": [
            {
              "internalType": "bytes32",
              "name": "",
              "type": "bytes32"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "defaultLiveness",
          "outputs": [
            {
              "internalType": "uint64",
              "name": "",
              "type": "uint64"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "assertionId",
              "type": "bytes32"
            },
            {
              "internalType": "address",
              "name": "disputer",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "disputeAssertion"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "finder",
          "outputs": [
            {
              "internalType": "contract FinderInterface",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "assertionId",
              "type": "bytes32"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getAssertion",
          "outputs": [
            {
              "internalType": "struct OptimisticOracleV3Interface.Assertion",
              "name": "",
              "type": "tuple",
              "components": [
                {
                  "internalType": "struct OptimisticOracleV3Interface.EscalationManagerSettings",
                  "name": "escalationManagerSettings",
                  "type": "tuple",
                  "components": [
                    {
                      "internalType": "bool",
                      "name": "arbitrateViaEscalationManager",
                      "type": "bool"
                    },
                    {
                      "internalType": "bool",
                      "name": "discardOracle",
                      "type": "bool"
                    },
                    {
                      "internalType": "bool",
                      "name": "validateDisputers",
                      "type": "bool"
                    },
                    {
                      "internalType": "address",
                      "name": "assertingCaller",
                      "type": "address"
                    },
                    {
                      "internalType": "address",
                      "name": "escalationManager",
                      "type": "address"
                    }
                  ]
                },
                {
                  "internalType": "address",
                  "name": "asserter",
                  "type": "address"
                },
                {
                  "internalType": "uint64",
                  "name": "assertionTime",
                  "type": "uint64"
                },
                {
                  "internalType": "bool",
                  "name": "settled",
                  "type": "bool"
                },
                {
                  "internalType": "contract IERC20",
                  "name": "currency",
                  "type": "address"
                },
                {
                  "internalType": "uint64",
                  "name": "expirationTime",
                  "type": "uint64"
                },
                {
                  "internalType": "bool",
                  "name": "settlementResolution",
                  "type": "bool"
                },
                {
                  "internalType": "bytes32",
                  "name": "domainId",
                  "type": "bytes32"
                },
                {
                  "internalType": "bytes32",
                  "name": "identifier",
                  "type": "bytes32"
                },
                {
                  "internalType": "uint256",
                  "name": "bond",
                  "type": "uint256"
                },
                {
                  "internalType": "address",
                  "name": "callbackRecipient",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "disputer",
                  "type": "address"
                }
              ]
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "assertionId",
              "type": "bytes32"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getAssertionResult",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "getCurrentTime",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "currency",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getMinimumBond",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bytes[]",
              "name": "data",
              "type": "bytes[]"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "multicall",
          "outputs": [
            {
              "internalType": "bytes[]",
              "name": "results",
              "type": "bytes[]"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "numericalTrue",
          "outputs": [
            {
              "internalType": "int256",
              "name": "",
              "type": "int256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "owner",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "renounceOwnership"
        },
        {
          "inputs": [
            {
              "internalType": "contract IERC20",
              "name": "_defaultCurrency",
              "type": "address"
            },
            {
              "internalType": "uint64",
              "name": "_defaultLiveness",
              "type": "uint64"
            },
            {
              "internalType": "uint256",
              "name": "_burnedBondPercentage",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setAdminProperties"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "time",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setCurrentTime"
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "assertionId",
              "type": "bytes32"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "settleAndGetAssertionResult",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "assertionId",
              "type": "bytes32"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "settleAssertion"
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "assertionId",
              "type": "bytes32"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "stampAssertion",
          "outputs": [
            {
              "internalType": "bytes",
              "name": "",
              "type": "bytes"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "identifier",
              "type": "bytes32"
            },
            {
              "internalType": "address",
              "name": "currency",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "syncUmaParams"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "timerAddress",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "newOwner",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "transferOwnership"
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {
          "assertTruth(bytes,address,address,address,uint64,address,uint256,bytes32,bytes32)": {
            "details": "The caller must approve this contract to spend at least bond amount of currency.",
            "params": {
              "asserter": "account that receives bonds back at settlement. This could be msg.sender or any other account that the caller wants to receive the bond at settlement time.",
              "bond": "amount of currency to pull from the caller and hold in escrow until the assertion is resolved. This must be >= getMinimumBond(address(currency)).",
              "callbackRecipient": "if configured, this address will receive a function call assertionResolvedCallback and assertionDisputedCallback at resolution or dispute respectively. Enables dynamic responses to these events. The recipient _must_ implement these callbacks and not revert or the assertion resolution will be blocked.",
              "claim": "the truth claim being asserted. This is an assertion about the world, and is verified by disputers.",
              "currency": "bond currency pulled from the caller and held in escrow until the assertion is resolved.",
              "domainId": "optional domain that can be used to relate this assertion to others in the escalationManager and can be used by the configured escalationManager to define custom behavior for groups of assertions. This is typically used for \"escalation games\" by changing bonds or other assertion properties based on the other assertions that have come before. If not needed this value should be 0 to save gas.",
              "escalationManager": "if configured, this address will control escalation properties of the assertion. This means a) choosing to arbitrate via the UMA DVM, b) choosing to discard assertions on dispute, or choosing to validate disputes. Combining these, the asserter can define their own security properties for the assertion. escalationManager also _must_ implement the same callbacks as callbackRecipient.",
              "identifier": "UMA DVM identifier to use for price requests in the event of a dispute. Must be pre-approved.",
              "liveness": "time to wait before the assertion can be resolved. Assertion can be disputed in this time."
            },
            "returns": {
              "assertionId": "unique identifier for this assertion."
            }
          },
          "assertTruthWithDefaults(bytes,address)": {
            "details": "The caller must approve this contract to spend at least the result of getMinimumBond(defaultCurrency).",
            "params": {
              "asserter": "account that receives bonds back at settlement. This could be msg.sender or any other account that the caller wants to receive the bond at settlement time.",
              "claim": "the truth claim being asserted. This is an assertion about the world, and is verified by disputers."
            },
            "returns": {
              "_0": "assertionId unique identifier for this assertion."
            }
          },
          "disputeAssertion(bytes32,address)": {
            "details": "The caller must approve this contract to spend at least bond amount of currency for the associated assertion.",
            "params": {
              "assertionId": "unique identifier for the assertion to dispute.",
              "disputer": "receives bonds back at settlement."
            }
          },
          "getAssertion(bytes32)": {
            "params": {
              "assertionId": "unique identifier for the assertion to fetch information for."
            },
            "returns": {
              "_0": "assertion information about the assertion."
            }
          },
          "getAssertionResult(bytes32)": {
            "params": {
              "assertionId": "unique identifier for the assertion to fetch the resolution for."
            },
            "returns": {
              "_0": "resolution of the assertion."
            }
          },
          "getMinimumBond(address)": {
            "params": {
              "currency": "currency to calculate the minimum bond for."
            },
            "returns": {
              "_0": "minimum bond amount."
            }
          },
          "owner()": {
            "details": "Returns the address of the current owner."
          },
          "renounceOwnership()": {
            "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
          },
          "setAdminProperties(address,uint64,uint256)": {
            "details": "Only callable by the contract owner (UMA governor).",
            "params": {
              "_burnedBondPercentage": "the percentage of the bond that is sent as fee to UMA Store contract on disputes.",
              "_defaultCurrency": "the default currency to bond asserters in assertTruthWithDefaults.",
              "_defaultLiveness": "the default liveness for assertions in assertTruthWithDefaults."
            }
          },
          "setCurrentTime(uint256)": {
            "details": "Will revert if not running in test mode.",
            "params": {
              "time": "timestamp to set current Testable time to."
            }
          },
          "settleAndGetAssertionResult(bytes32)": {
            "params": {
              "assertionId": "unique identifier for the assertion to resolve and return the resolution for."
            },
            "returns": {
              "_0": "resolution of the assertion."
            }
          },
          "settleAssertion(bytes32)": {
            "params": {
              "assertionId": "unique identifier for the assertion to resolve."
            }
          },
          "stampAssertion(bytes32)": {
            "params": {
              "assertionId": "unique identifier for the assertion to construct ancillary data for."
            },
            "returns": {
              "_0": "ancillaryData stamped assertion information."
            }
          },
          "syncUmaParams(bytes32,address)": {
            "params": {
              "currency": "currency to fetch information for and store locally.",
              "identifier": "identifier to fetch information for and store locally."
            }
          },
          "transferOwnership(address)": {
            "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
          }
        },
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {
          "assertTruth(bytes,address,address,address,uint64,address,uint256,bytes32,bytes32)": {
            "notice": "Asserts a truth about the world, using a fully custom configuration."
          },
          "assertTruthWithDefaults(bytes,address)": {
            "notice": "Asserts a truth about the world, using the default currency and liveness. No callback recipient or escalation manager is enabled. The caller is expected to provide a bond of finalFee/burnedBondPercentage (with burnedBondPercentage set to 50%, the bond is 2x final fee) of the default currency."
          },
          "defaultIdentifier()": {
            "notice": "Returns the default identifier used by the Optimistic Oracle V3."
          },
          "disputeAssertion(bytes32,address)": {
            "notice": "Disputes an assertion. Depending on how the assertion was configured, this may either escalate to the UMA DVM or the configured escalation manager for arbitration."
          },
          "getAssertion(bytes32)": {
            "notice": "Fetches information about a specific assertion and returns it."
          },
          "getAssertionResult(bytes32)": {
            "notice": "Fetches the resolution of a specific assertion and returns it. If the assertion has not been settled then this will revert. If the assertion was disputed and configured to discard the oracle resolution return false."
          },
          "getMinimumBond(address)": {
            "notice": "Returns the minimum bond amount required to make an assertion. This is calculated as the final fee of the currency divided by the burnedBondPercentage. If burn percentage is 50% then the min bond is 2x the final fee."
          },
          "setAdminProperties(address,uint64,uint256)": {
            "notice": "Sets the default currency, liveness, and burned bond percentage."
          },
          "setCurrentTime(uint256)": {
            "notice": "Sets the current time."
          },
          "settleAndGetAssertionResult(bytes32)": {
            "notice": "Settles an assertion and returns the resolution."
          },
          "settleAssertion(bytes32)": {
            "notice": "Resolves an assertion. If the assertion has not been disputed, the assertion is resolved as true and the asserter receives the bond. If the assertion has been disputed, the assertion is resolved depending on the oracle result. Based on the result, the asserter or disputer receives the bond. If the assertion was disputed then an amount of the bond is sent to the UMA Store as an oracle fee based on the burnedBondPercentage. The remainder of the bond is returned to the asserter or disputer."
          },
          "stampAssertion(bytes32)": {
            "notice": "Appends information onto an assertionId to construct ancillary data used for dispute resolution."
          },
          "syncUmaParams(bytes32,address)": {
            "notice": "Fetches information about a specific identifier & currency from the UMA contracts and stores a local copy of the information within this contract. This is used to save gas when making assertions as we can avoid an external call to the UMA contracts to fetch this."
          }
        },
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        "@across-protocol/=node_modules/@across-protocol/",
        "@ensdomains/=node_modules/@ensdomains/",
        "@eth-optimism/=node_modules/@across-protocol/contracts/node_modules/@eth-optimism/",
        "@gnosis.pm/=node_modules/@gnosis.pm/",
        "@maticnetwork/=node_modules/@maticnetwork/",
        "@openzeppelin/=node_modules/@openzeppelin/",
        "@uma/=node_modules/@uma/",
        "@uniswap/=node_modules/@uniswap/",
        "base64-sol/=node_modules/base64-sol/",
        "ds-test/=lib/forge-std/lib/ds-test/src/",
        "eth-gas-reporter/=node_modules/eth-gas-reporter/",
        "forge-std/=lib/forge-std/src/",
        "hardhat-deploy/=node_modules/hardhat-deploy/",
        "hardhat/=node_modules/hardhat/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 200
      },
      "metadata": {
        "bytecodeHash": "ipfs"
      },
      "compilationTarget": {
        "node_modules/@uma/core/contracts/optimistic-oracle-v3/implementation/test/OptimisticOracleV3Test.sol": "OptimisticOracleV3Test"
      },
      "libraries": {}
    },
    "sources": {
      "node_modules/@openzeppelin/contracts/access/Ownable.sol": {
        "keccak256": "0x24e0364e503a9bbde94c715d26573a76f14cd2a202d45f96f52134ab806b67b9",
        "urls": [
          "bzz-raw://e12cbaa7378fd9b62280e4e1d164bedcb4399ce238f5f98fc0eefb7e50577981",
          "dweb:/ipfs/QmXRoFGUgfsaRkoPT5bxNMtSayKTQ8GZATLPXf69HcRA51"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/token/ERC20/IERC20.sol": {
        "keccak256": "0xbbc8ac883ac3c0078ce5ad3e288fbb3ffcc8a30c3a98c0fda0114d64fc44fca2",
        "urls": [
          "bzz-raw://87a7a5d2f6f63f84598af02b8c50ca2df2631cb8ba2453e8d95fcb17e4be9824",
          "dweb:/ipfs/QmR76hqtAcRqoFj33tmNjcWTLrgNsAaakYwnKZ8zoJtKei"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol": {
        "keccak256": "0xc3d946432c0ddbb1f846a0d3985be71299df331b91d06732152117f62f0be2b5",
        "urls": [
          "bzz-raw://4632c341a06ba5c079b51ca5a915efab4e6ab57735b37839b3e8365ff806a43e",
          "dweb:/ipfs/QmTHT3xHYed2wajEoA5qu7ii2BxLpPhQZHwAhtLK5Z7ANK"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/utils/Address.sol": {
        "keccak256": "0x2ccf9d2313a313d41a791505f2b5abfdc62191b5d4334f7f7a82691c088a1c87",
        "urls": [
          "bzz-raw://b3a57d0854b2fdce6ebff933a48dca2445643d1eccfc27f00292e937f26c6a58",
          "dweb:/ipfs/QmW45rZooS9TqR4YXUbjRbtf2Bpb5ouSarBvfW1LdGprvV"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/utils/Context.sol": {
        "keccak256": "0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7",
        "urls": [
          "bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92",
          "dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/utils/math/SafeMath.sol": {
        "keccak256": "0xa2f576be637946f767aa56601c26d717f48a0aff44f82e46f13807eea1009a21",
        "urls": [
          "bzz-raw://973868f808e88e21a1a0a01d4839314515ee337ad096286c88e41b74dcc11fc2",
          "dweb:/ipfs/QmfYuZxRfx2J2xdk4EXN7jKg4bUYEMTaYk9BAw9Bqn4o2Y"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/utils/math/SignedSafeMath.sol": {
        "keccak256": "0x62f53f262fabbbc6d8ab49488d8fce36370351aff2b8d3898d499d68995a71c2",
        "urls": [
          "bzz-raw://efd599513c2f313a3f5e9536beb2b80a0d2b3dd34202c174a707d81b7dc751ce",
          "dweb:/ipfs/QmdDiENVFSyWjfFskNLnViMH77DHg3oDthkSZk7dMzNNKB"
        ],
        "license": "MIT"
      },
      "node_modules/@uma/core/contracts/common/implementation/AddressWhitelist.sol": {
        "keccak256": "0xc1f20b925f9d37230aaf7bbee536f9a9b08e4772864f0a243ff1b69b54710fee",
        "urls": [
          "bzz-raw://55bc6782bd269463214dbafa8702b2ff33910fd4a51ab24d775aabb15e278bcc",
          "dweb:/ipfs/QmV41DnGByGBtg8gk7MG6Nr3xYo5R5varZ8cewywdKNATQ"
        ],
        "license": "AGPL-3.0-only"
      },
      "node_modules/@uma/core/contracts/common/implementation/AncillaryData.sol": {
        "keccak256": "0x8ff33ac32d3e6de25de9e0ac2c0ff9a621f187fa97e9ee84092b327471baa3ce",
        "urls": [
          "bzz-raw://0bbaed49756e8cf7ef405e132f441cd7a735ac6186a200b0179147e7d137b74a",
          "dweb:/ipfs/QmeSBJX5a61LZPxbkUKS2NF4LSxemgDwjD65fCAmyP7PX2"
        ],
        "license": "AGPL-3.0-only"
      },
      "node_modules/@uma/core/contracts/common/implementation/FixedPoint.sol": {
        "keccak256": "0x996b97cc4fa5da4064e3aee500edc6972485d59a9334ceec81155e2c2f484dae",
        "urls": [
          "bzz-raw://8d7c028926dc2b27e7dc103363dca8a43f60b3351f4a14bcb702660f95c68663",
          "dweb:/ipfs/QmXz4ieFjP5RxJ35F8GbPryYEGvFmxc4Gqx8EK7N57ixzT"
        ],
        "license": "AGPL-3.0-only"
      },
      "node_modules/@uma/core/contracts/common/implementation/Lockable.sol": {
        "keccak256": "0x41d78fcce54598ad5f26bc0b778c0f4fedbd836401625e49e736979f69a87ef0",
        "urls": [
          "bzz-raw://4ce111bb50441ef5125e7d42284f6debbc17fd589515d7b8cede7e9d1d5f0ede",
          "dweb:/ipfs/QmaXiXACWVEDDHoCHNXdVBoNpf8QNHkUZ1kf5MfbxfL6jj"
        ],
        "license": "AGPL-3.0-only"
      },
      "node_modules/@uma/core/contracts/common/implementation/MultiCaller.sol": {
        "keccak256": "0x9f6afe5bafc5e16fe8d63010a740ec3a88a9f00a7236ea7e5b039a2f50eb346e",
        "urls": [
          "bzz-raw://a971572a4a9ed32e5ec15ac384af593d9499778f6ec593dbdba67d44ced4c7d8",
          "dweb:/ipfs/QmbdpfhhnUyoHWe7TPFBZxT6R6zyxJEDcGBNwDt5ncweRv"
        ],
        "license": "AGPL-3.0-only"
      },
      "node_modules/@uma/core/contracts/common/implementation/Testable.sol": {
        "keccak256": "0x0254b45747293bb800373a58d123969adec0428f7be79dc941cab10fcad09918",
        "urls": [
          "bzz-raw://537d694e3753596f507d071f283be9caeaad0010c444c9c9955d729affeb4907",
          "dweb:/ipfs/QmZ1WfVTBao11QaN6aygMhnt45UjRq77ZwfKPFmHiVSdaJ"
        ],
        "license": "AGPL-3.0-only"
      },
      "node_modules/@uma/core/contracts/common/implementation/Timer.sol": {
        "keccak256": "0x9e0dd7389718bd5d1da910273a6f4cee98ee22bfc0c92bde0f0955c0e23adb5e",
        "urls": [
          "bzz-raw://7ddac8d3cb76f8811156a11a7702d7c05b15a0f18c22b5abdc318723193f9266",
          "dweb:/ipfs/QmPxL7AU8NkURJaZ6WxXNcw88wGMSoPX4jbt7SMdPJqtYv"
        ],
        "license": "AGPL-3.0-only"
      },
      "node_modules/@uma/core/contracts/common/interfaces/AddressWhitelistInterface.sol": {
        "keccak256": "0x22fb8588dff1d5cff76a28111d6c9b190765d99facd93c8ff3b54771f245c0d8",
        "urls": [
          "bzz-raw://5ecd993f00de290a3c7bf21da23a9439cf2ccb22028316df92b79780ac8aa533",
          "dweb:/ipfs/QmTZ7x7U4EEzTacqapzSdFs2np5WNsqm4XeUBqzQxxDJei"
        ],
        "license": "AGPL-3.0-only"
      },
      "node_modules/@uma/core/contracts/data-verification-mechanism/implementation/Constants.sol": {
        "keccak256": "0xe40957105a9240c6bcb9753fd0011fe9f382c437cd6771c57bf7a96f8ceb9c84",
        "urls": [
          "bzz-raw://cbf0d25e841b1f5c4022d09fb29220cb428139443cb29c4ab8dbfff71dffcc05",
          "dweb:/ipfs/QmSVVr5wH1tZi6WmKyuy1K8yS6JN4DeK5kWaZpPKtXiqkK"
        ],
        "license": "AGPL-3.0-only"
      },
      "node_modules/@uma/core/contracts/data-verification-mechanism/interfaces/FinderInterface.sol": {
        "keccak256": "0x9166fbfe08e954eb86d33c114fcde7ce4fd0dda5d9d28b31210582bfc769fa86",
        "urls": [
          "bzz-raw://e611e12bcaaebfdf65b67c566ff1d34708e757f01a445bd87c55862e89383b81",
          "dweb:/ipfs/QmYNSq5oopTShdS6j4VWKqoLxmQSRKmWebCxw6K4LfmKrf"
        ],
        "license": "AGPL-3.0-only"
      },
      "node_modules/@uma/core/contracts/data-verification-mechanism/interfaces/IdentifierWhitelistInterface.sol": {
        "keccak256": "0x9ae86a30dd1a8c03fb2c6d27be570bb30c4c0b13ac63cde8620b7e4b51d88dc9",
        "urls": [
          "bzz-raw://a71d2aff48e075ecab56a9c9767775d1d77e04ec9191fed124e71003220549e3",
          "dweb:/ipfs/QmYPWsZXro6fzqpZY6UxQ5X8znEXfLp2sun8oXzdz8bTyc"
        ],
        "license": "AGPL-3.0-only"
      },
      "node_modules/@uma/core/contracts/data-verification-mechanism/interfaces/OracleAncillaryInterface.sol": {
        "keccak256": "0xd58b41fe1e389f7871db7c04f2c05c1aac1d0455bbc521534da81fd657016a1f",
        "urls": [
          "bzz-raw://cc532e9c550bb1bba0daa33fda748590cd06ce94a9566fe65dac04e7d40977bc",
          "dweb:/ipfs/QmZKvfRW2LJFt5MWZbKuU9ujkXnS2hkPUJVj8wwJWcuZGX"
        ],
        "license": "AGPL-3.0-only"
      },
      "node_modules/@uma/core/contracts/data-verification-mechanism/interfaces/StoreInterface.sol": {
        "keccak256": "0xbb73671684309c91ad5ef3da1474051d03f2e7d5882bed7f5c4317e5d4c768df",
        "urls": [
          "bzz-raw://32386544d3119fd0187a8c4e8b01c739f508ab863faa04345cabc2544081f9e8",
          "dweb:/ipfs/QmYszDURs1x75rsejZkGt9zCkASXnJtufbNsL3XHe2eJPQ"
        ],
        "license": "AGPL-3.0-only"
      },
      "node_modules/@uma/core/contracts/optimistic-oracle-v3/implementation/OptimisticOracleV3.sol": {
        "keccak256": "0xeba5082c48c3d891f2422b8c0d1d5d6552ab47b5d538db7ff05ffb2f3db25ffc",
        "urls": [
          "bzz-raw://d818630e1c094792613a0539aa0a7677ca8fa92a5308eaf4ff7cf8ea8a4c547e",
          "dweb:/ipfs/QmSM78A3afY6osh4VAmyJX2E4Qyg4qcY1KwY5uFnSK4Yia"
        ],
        "license": "AGPL-3.0-only"
      },
      "node_modules/@uma/core/contracts/optimistic-oracle-v3/implementation/test/OptimisticOracleV3Test.sol": {
        "keccak256": "0xdb817afdd3c786d21ac8dede8e97452905d0ba84f444949cf6f92f77e8c2a38e",
        "urls": [
          "bzz-raw://f88474c7ac47ad72196818aa1d77d3b4bccac18ec77ae008ed53ec48c18f4fee",
          "dweb:/ipfs/QmPxsszotngGGDBv6vCE1kANMtgX8fLD6Xv7YwtZsUKqJQ"
        ],
        "license": "AGPL-3.0-only"
      },
      "node_modules/@uma/core/contracts/optimistic-oracle-v3/interfaces/EscalationManagerInterface.sol": {
        "keccak256": "0xce31adf62ae47468bab181bf1137b05e8ac0a003f019c343ac137a76ea32efc7",
        "urls": [
          "bzz-raw://eb1b93b648adf4130fdfe7a62d817cda0519e7760a50b90f16a3c46cee4c0967",
          "dweb:/ipfs/QmNPD4TRAm9kqqQDKQabqZgaorkJNov96iLgxsm5HRTSZN"
        ],
        "license": "AGPL-3.0-only"
      },
      "node_modules/@uma/core/contracts/optimistic-oracle-v3/interfaces/OptimisticOracleV3CallbackRecipientInterface.sol": {
        "keccak256": "0x79f90bc84ed5d394380e99f0a5d1b219abd9016bc3a02fad0099014af08af03e",
        "urls": [
          "bzz-raw://dc1b7b847eb711750bc76ab45a13294b05fc09e361294a6bdffb90cb15f50b63",
          "dweb:/ipfs/QmQSs2R7mmGojGdNkqP75Vf7LajRkfJ1oGuYAUCHYGmPEQ"
        ],
        "license": "AGPL-3.0-only"
      },
      "node_modules/@uma/core/contracts/optimistic-oracle-v3/interfaces/OptimisticOracleV3Interface.sol": {
        "keccak256": "0xf31322bfd64854f0bfa92051d6ec711c1eed15d8042f394f5c24c05378218367",
        "urls": [
          "bzz-raw://535bc2a6060e86a49524fd3c0062afcf83077530cefb3c1b8179b832f03ca81e",
          "dweb:/ipfs/QmQZhqn6oUiebSWEKbqcmiMGkqAb8B59WsRAyFU8WY84ct"
        ],
        "license": "AGPL-3.0-only"
      }
    },
    "version": 1
  },
  "ast": {
    "absolutePath": "node_modules/@uma/core/contracts/optimistic-oracle-v3/implementation/test/OptimisticOracleV3Test.sol",
    "id": 52156,
    "exportedSymbols": {
      "Address": [
        45619
      ],
      "AddressWhitelist": [
        46235
      ],
      "AddressWhitelistInterface": [
        49565
      ],
      "AncillaryData": [
        46643
      ],
      "Context": [
        45641
      ],
      "EscalationManagerInterface": [
        52212
      ],
      "FinderInterface": [
        50187
      ],
      "FixedPoint": [
        48499
      ],
      "IERC20": [
        45075
      ],
      "IdentifierWhitelistInterface": [
        50211
      ],
      "Lockable": [
        48576
      ],
      "MultiCaller": [
        48655
      ],
      "OptimisticOracleConstraints": [
        49667
      ],
      "OptimisticOracleV3": [
        52025
      ],
      "OptimisticOracleV3CallbackRecipientInterface": [
        52230
      ],
      "OptimisticOracleV3Interface": [
        52420
      ],
      "OptimisticOracleV3Test": [
        52155
      ],
      "OracleAncillaryInterface": [
        50249
      ],
      "OracleInterfaces": [
        49662
      ],
      "Ownable": [
        44409
      ],
      "SafeERC20": [
        45324
      ],
      "SafeMath": [
        45953
      ],
      "SignedSafeMath": [
        46017
      ],
      "StoreInterface": [
        50294
      ],
      "Testable": [
        49353
      ],
      "Timer": [
        49440
      ]
    },
    "nodeType": "SourceUnit",
    "src": "42:654:53",
    "nodes": [
      {
        "id": 52110,
        "nodeType": "PragmaDirective",
        "src": "42:23:53",
        "nodes": [],
        "literals": [
          "solidity",
          "0.8",
          ".16"
        ]
      },
      {
        "id": 52111,
        "nodeType": "ImportDirective",
        "src": "67:35:53",
        "nodes": [],
        "absolutePath": "node_modules/@uma/core/contracts/optimistic-oracle-v3/implementation/OptimisticOracleV3.sol",
        "file": "../OptimisticOracleV3.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 52156,
        "sourceUnit": 52026,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 52112,
        "nodeType": "ImportDirective",
        "src": "103:53:53",
        "nodes": [],
        "absolutePath": "node_modules/@uma/core/contracts/common/implementation/Testable.sol",
        "file": "../../../common/implementation/Testable.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 52156,
        "sourceUnit": 49354,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 52155,
        "nodeType": "ContractDefinition",
        "src": "226:469:53",
        "nodes": [
          {
            "id": 52138,
            "nodeType": "FunctionDefinition",
            "src": "296:238:53",
            "nodes": [],
            "body": {
              "id": 52137,
              "nodeType": "Block",
              "src": "532:2:53",
              "nodes": [],
              "statements": []
            },
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 52129,
                    "name": "_finder",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 52119,
                    "src": "463:7:53",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_FinderInterface_$50187",
                      "typeString": "contract FinderInterface"
                    }
                  },
                  {
                    "id": 52130,
                    "name": "_defaultCurrency",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 52122,
                    "src": "472:16:53",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$45075",
                      "typeString": "contract IERC20"
                    }
                  },
                  {
                    "id": 52131,
                    "name": "_defaultLiveness",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 52124,
                    "src": "490:16:53",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint64",
                      "typeString": "uint64"
                    }
                  }
                ],
                "id": 52132,
                "kind": "baseConstructorSpecifier",
                "modifierName": {
                  "id": 52128,
                  "name": "OptimisticOracleV3",
                  "nameLocations": [
                    "444:18:53"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 52025,
                  "src": "444:18:53"
                },
                "nodeType": "ModifierInvocation",
                "src": "444:63:53"
              },
              {
                "arguments": [
                  {
                    "id": 52134,
                    "name": "_timerAddress",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 52126,
                    "src": "517:13:53",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  }
                ],
                "id": 52135,
                "kind": "baseConstructorSpecifier",
                "modifierName": {
                  "id": 52133,
                  "name": "Testable",
                  "nameLocations": [
                    "508:8:53"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 49353,
                  "src": "508:8:53"
                },
                "nodeType": "ModifierInvocation",
                "src": "508:23:53"
              }
            ],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "parameters": {
              "id": 52127,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 52119,
                  "mutability": "mutable",
                  "name": "_finder",
                  "nameLocation": "333:7:53",
                  "nodeType": "VariableDeclaration",
                  "scope": 52138,
                  "src": "317:23:53",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_FinderInterface_$50187",
                    "typeString": "contract FinderInterface"
                  },
                  "typeName": {
                    "id": 52118,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 52117,
                      "name": "FinderInterface",
                      "nameLocations": [
                        "317:15:53"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 50187,
                      "src": "317:15:53"
                    },
                    "referencedDeclaration": 50187,
                    "src": "317:15:53",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_FinderInterface_$50187",
                      "typeString": "contract FinderInterface"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 52122,
                  "mutability": "mutable",
                  "name": "_defaultCurrency",
                  "nameLocation": "357:16:53",
                  "nodeType": "VariableDeclaration",
                  "scope": 52138,
                  "src": "350:23:53",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IERC20_$45075",
                    "typeString": "contract IERC20"
                  },
                  "typeName": {
                    "id": 52121,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 52120,
                      "name": "IERC20",
                      "nameLocations": [
                        "350:6:53"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 45075,
                      "src": "350:6:53"
                    },
                    "referencedDeclaration": 45075,
                    "src": "350:6:53",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$45075",
                      "typeString": "contract IERC20"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 52124,
                  "mutability": "mutable",
                  "name": "_defaultLiveness",
                  "nameLocation": "390:16:53",
                  "nodeType": "VariableDeclaration",
                  "scope": 52138,
                  "src": "383:23:53",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint64",
                    "typeString": "uint64"
                  },
                  "typeName": {
                    "id": 52123,
                    "name": "uint64",
                    "nodeType": "ElementaryTypeName",
                    "src": "383:6:53",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint64",
                      "typeString": "uint64"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 52126,
                  "mutability": "mutable",
                  "name": "_timerAddress",
                  "nameLocation": "424:13:53",
                  "nodeType": "VariableDeclaration",
                  "scope": 52138,
                  "src": "416:21:53",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 52125,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "416:7:53",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "307:136:53"
            },
            "returnParameters": {
              "id": 52136,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "532:0:53"
            },
            "scope": 52155,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 52154,
            "nodeType": "FunctionDefinition",
            "src": "540:153:53",
            "nodes": [],
            "body": {
              "id": 52153,
              "nodeType": "Block",
              "src": "635:58:53",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "expression": {
                            "id": 52148,
                            "name": "Testable",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 49353,
                            "src": "660:8:53",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_contract$_Testable_$49353_$",
                              "typeString": "type(contract Testable)"
                            }
                          },
                          "id": 52149,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "669:14:53",
                          "memberName": "getCurrentTime",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 49352,
                          "src": "660:23:53",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                            "typeString": "function () view returns (uint256)"
                          }
                        },
                        "id": 52150,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "660:25:53",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 52147,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "ElementaryTypeNameExpression",
                      "src": "652:7:53",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_uint256_$",
                        "typeString": "type(uint256)"
                      },
                      "typeName": {
                        "id": 52146,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "652:7:53",
                        "typeDescriptions": {}
                      }
                    },
                    "id": 52151,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "652:34:53",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 52145,
                  "id": 52152,
                  "nodeType": "Return",
                  "src": "645:41:53"
                }
              ]
            },
            "baseFunctions": [
              49352,
              51549
            ],
            "functionSelector": "29cb924d",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getCurrentTime",
            "nameLocation": "549:14:53",
            "overrides": {
              "id": 52142,
              "nodeType": "OverrideSpecifier",
              "overrides": [
                {
                  "id": 52140,
                  "name": "OptimisticOracleV3",
                  "nameLocations": [
                    "587:18:53"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 52025,
                  "src": "587:18:53"
                },
                {
                  "id": 52141,
                  "name": "Testable",
                  "nameLocations": [
                    "607:8:53"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 49353,
                  "src": "607:8:53"
                }
              ],
              "src": "578:38:53"
            },
            "parameters": {
              "id": 52139,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "563:2:53"
            },
            "returnParameters": {
              "id": 52145,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 52144,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 52154,
                  "src": "626:7:53",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 52143,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "626:7:53",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "625:9:53"
            },
            "scope": 52155,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 52113,
              "name": "OptimisticOracleV3",
              "nameLocations": [
                "261:18:53"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 52025,
              "src": "261:18:53"
            },
            "id": 52114,
            "nodeType": "InheritanceSpecifier",
            "src": "261:18:53"
          },
          {
            "baseName": {
              "id": 52115,
              "name": "Testable",
              "nameLocations": [
                "281:8:53"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 49353,
              "src": "281:8:53"
            },
            "id": 52116,
            "nodeType": "InheritanceSpecifier",
            "src": "281:8:53"
          }
        ],
        "canonicalName": "OptimisticOracleV3Test",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          52155,
          49353,
          52025,
          48655,
          44409,
          45641,
          48576,
          52420
        ],
        "name": "OptimisticOracleV3Test",
        "nameLocation": "235:22:53",
        "scope": 52156,
        "usedErrors": []
      }
    ],
    "license": "AGPL-3.0-only"
  },
  "id": 53
}