{
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_currency",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_optimisticOracleV3",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "marketId",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "creditsMinted",
          "type": "uint256"
        }
      ],
      "name": "CreditsMinted",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "marketId",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "assertionId",
          "type": "bytes32"
        }
      ],
      "name": "FalsePromisedDeclared",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "marketId",
          "type": "bytes32"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "description",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "reward",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "requiredBond",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        }
      ],
      "name": "MarketInitialized",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "marketId",
          "type": "bytes32"
        }
      ],
      "name": "MarketResolved",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "marketId",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "individualReward",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "creditReceived",
          "type": "uint256"
        }
      ],
      "name": "MarketSettled",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "marketId",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "ValidatorRegistered",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "accountBalance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "name": "assertedMarkets",
      "outputs": [
        {
          "internalType": "address",
          "name": "asserter",
          "type": "address"
        },
        {
          "internalType": "bytes32",
          "name": "marketId",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "assertionId",
          "type": "bytes32"
        }
      ],
      "name": "assertionDisputedCallback",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "assertionLiveness",
      "outputs": [
        {
          "internalType": "uint64",
          "name": "",
          "type": "uint64"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "assertionId",
          "type": "bytes32"
        },
        {
          "internalType": "bool",
          "name": "assertedTruthfully",
          "type": "bool"
        }
      ],
      "name": "assertionResolvedCallback",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "marketId",
          "type": "bytes32"
        }
      ],
      "name": "carbonCreditBalance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "marketId",
          "type": "bytes32"
        },
        {
          "internalType": "uint64",
          "name": "state",
          "type": "uint64"
        }
      ],
      "name": "changeMarketState",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "marketId",
          "type": "bytes32"
        }
      ],
      "name": "convertibleCarbonCreditBalance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "currency",
      "outputs": [
        {
          "internalType": "contract IERC20",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "data_oo",
      "outputs": [
        {
          "internalType": "contract OptimisticOracleV3Interface",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "marketId",
          "type": "bytes32"
        }
      ],
      "name": "declareFalsePromise",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "assertionId",
          "type": "bytes32"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "defaultIdentifier",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "marketId",
          "type": "bytes32"
        }
      ],
      "name": "getMarket",
      "outputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "owner",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "requiredBond",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "reward",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "creditCap",
              "type": "uint256"
            },
            {
              "internalType": "contract ExpandedIERC20",
              "name": "carbonCredit",
              "type": "address"
            },
            {
              "internalType": "contract ExpandedIERC20",
              "name": "convertibleCarbonCredit",
              "type": "address"
            },
            {
              "internalType": "contract ExpandedIERC20",
              "name": "validatorToken",
              "type": "address"
            },
            {
              "internalType": "string",
              "name": "description",
              "type": "string"
            },
            {
              "internalType": "bool",
              "name": "promiseDelivered",
              "type": "bool"
            },
            {
              "internalType": "uint64",
              "name": "marketState",
              "type": "uint64"
            }
          ],
          "internalType": "struct CarbonUMArket.Market",
          "name": "",
          "type": "tuple"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_reward",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_requiredBond",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_creditCap",
          "type": "uint256"
        },
        {
          "internalType": "string",
          "name": "_description",
          "type": "string"
        }
      ],
      "name": "initializeMarket",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "marketId",
          "type": "bytes32"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "marketId",
          "type": "bytes32"
        }
      ],
      "name": "isValidator",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "name": "markets",
      "outputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "requiredBond",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "reward",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "creditCap",
          "type": "uint256"
        },
        {
          "internalType": "contract ExpandedIERC20",
          "name": "carbonCredit",
          "type": "address"
        },
        {
          "internalType": "contract ExpandedIERC20",
          "name": "convertibleCarbonCredit",
          "type": "address"
        },
        {
          "internalType": "contract ExpandedIERC20",
          "name": "validatorToken",
          "type": "address"
        },
        {
          "internalType": "string",
          "name": "description",
          "type": "string"
        },
        {
          "internalType": "bool",
          "name": "promiseDelivered",
          "type": "bool"
        },
        {
          "internalType": "uint64",
          "name": "marketState",
          "type": "uint64"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "marketId",
          "type": "bytes32"
        },
        {
          "internalType": "uint256",
          "name": "creditToCreate",
          "type": "uint256"
        }
      ],
      "name": "mintCredit",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "oo",
      "outputs": [
        {
          "internalType": "contract OptimisticOracleV3Interface",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "marketId",
          "type": "bytes32"
        }
      ],
      "name": "registerValidator",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "marketId",
          "type": "bytes32"
        },
        {
          "internalType": "uint64",
          "name": "proportion",
          "type": "uint64"
        }
      ],
      "name": "settleMarket",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "validatorFee",
      "outputs": [
        {
          "internalType": "uint64",
          "name": "",
          "type": "uint64"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "bytecode": {
    "object": "",
    "sourceMap": "823:12649:0:-:0;;;2919:315;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;3084:28:0;;;;;3122:53;;;;;;3205:22;;;-1:-1:-1;;;3205:22:0;;;;:20;;:22;;;;;;;;;;;;;;;3122:53;3205:22;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;3185:42;;-1:-1:-1;823:12649:0;;-1:-1:-1;823:12649:0;14:177:72;93:13;;-1:-1:-1;;;;;135:31:72;;125:42;;115:70;;181:1;178;171:12;115:70;14:177;;;:::o;196:293::-;275:6;283;336:2;324:9;315:7;311:23;307:32;304:52;;;352:1;349;342:12;304:52;375:40;405:9;375:40;:::i;:::-;365:50;;434:49;479:2;468:9;464:18;434:49;:::i;:::-;424:59;;196:293;;;;;:::o;494:184::-;564:6;617:2;605:9;596:7;592:23;588:32;585:52;;;633:1;630;623:12;585:52;-1:-1:-1;656:16:72;;494:184;-1:-1:-1;494:184:72:o;:::-;823:12649:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "",
    "sourceMap": "823:12649:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6043:1449;;;;;;:::i;:::-;;:::i;:::-;;;345:25:72;;;333:2;318:18;6043:1449:0;;;;;;;;3360:1955;;;;;;:::i;:::-;;:::i;1177:46::-;;1215:8;1177:46;;;;;-1:-1:-1;;;;;1914:31:72;;;1896:50;;1884:2;1869:18;1177:46:0;1752:200:72;5777:260:0;;;;;;:::i;:::-;;:::i;:::-;;12215:1255;;;;;;:::i;:::-;;:::i;9412:548::-;;;;;;:::i;:::-;;:::i;2156:42::-;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;;;;;;;;:::i;5321:153::-;;;;;;:::i;:::-;;:::i;1018:47::-;;;;;;;;-1:-1:-1;;;;;4504:32:72;;;4486:51;;4474:2;4459:18;1018:47:0;4303:240:72;9966:148:0;;;;;;:::i;:::-;;:::i;:::-;;;4713:14:72;;4706:22;4688:41;;4676:2;4661:18;9966:148:0;4548:187:72;8485:921:0;;;;;;:::i;:::-;;:::i;1071:42::-;;;;;-1:-1:-1;;;;;1071:42:0;;;5661:110;;;:::i;1119:52::-;;1162:9;1119:52;;5480:175;;;;;;:::i;:::-;;:::i;3240:114::-;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;2205:58::-;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2205:58:0;;;;;;;;;;-1:-1:-1;;;;;6452:32:72;;;6434:51;;6516:2;6501:18;;6494:34;;;;6407:18;2205:58:0;6260:274:72;8414:65:0;;;;;;:::i;:::-;;;1229:42;;;;;980:32;;;;;7498:872;;;;;;:::i;:::-;;:::i;6043:1449::-;6106:19;6160:17;;;:7;:17;;;;;;;6205:18;;;;6160:17;;6205:18;;;;-1:-1:-1;;;;;6205:18:0;:23;6196:72;;;;-1:-1:-1;;;6196:72:0;;7402:2:72;6196:72:0;;;7384:21:72;7441:2;7421:18;;;7414:30;7480:34;7460:18;;;7453:62;-1:-1:-1;;;7531:18:72;;;7524:33;7574:19;;6196:72:0;;;;;;;;;6286:12;;-1:-1:-1;;;;;6286:12:0;6278:61;;;;-1:-1:-1;;;6278:61:0;;7806:2:72;6278:61:0;;;7788:21:72;7845:2;7825:18;;;7818:30;-1:-1:-1;;;7864:18:72;;;7857:52;7926:18;;6278:61:0;7604:346:72;6278:61:0;6404:1;6358:25;;;:15;:25;;;;;:34;-1:-1:-1;;;;;6358:34:0;:48;6350:84;;;;-1:-1:-1;;;6350:84:0;;8157:2:72;6350:84:0;;;8139:21:72;8196:2;8176:18;;;8169:30;8235:25;8215:18;;;8208:53;8278:18;;6350:84:0;7955:347:72;6350:84:0;6542:36;;-1:-1:-1;;;6542:36:0;;-1:-1:-1;;;;;6568:8:0;4504:32:72;;6542:36:0;;;4486:51:72;-1:-1:-1;;6542:2:0;:17;;;;;;4459:18:72;;6542:36:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;6520:58;;6623:12;6660:11;6638:6;:19;;;:33;:69;;6696:11;6638:69;;;6674:6;:19;;;6638:69;6623:84;-1:-1:-1;6754:58:0;-1:-1:-1;;;;;6754:8:0;:25;6780:10;6800:4;6623:84;6754:25;:58::i;:::-;6822:39;-1:-1:-1;;;;;6822:8:0;:20;6851:2;6856:4;6822:20;:39::i;:::-;6893:398;;-1:-1:-1;;;6893:398:0;;9135:3:72;6893:398:0;;;9147:21:72;9204:2;9184:18;;;9177:30;9244:34;9223:19;;;9216:63;9316:34;9295:19;;;9288:63;-1:-1:-1;;;9367:19:72;;;9360:34;7004:10:0;9484:20:72;;;9477:45;7048:4:0;9538:18:72;;;9531:43;-1:-1:-1;9610:18:72;;;2368:44;;;1162:9:0;9664:19:72;;;1698:43;-1:-1:-1;;;;;7186:8:0;2380:31:72;;9720:19;;;2368:44;9756:19;;;9749:35;;;7226:17:0;9800:19:72;;;9793:35;9844:19;;;9837:35;;;;6893:2:0;:14;;;;9411:19:72;;6893:398:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;7333:92;;;;;;;;7372:10;7333:92;;;;;;;;;-1:-1:-1;7302:28:0;;;:15;:28;;;;;;:123;;;;-1:-1:-1;;;;;;7302:123:0;-1:-1:-1;;;;;7302:123:0;;;;;;;-1:-1:-1;7302:123:0;;;;;;;7441:44;;7302:28;;-1:-1:-1;7302:28:0;;7333:92;;7441:44;;;6126:1366;;;6043:1449;;;:::o;3360:1955::-;3683:16;3743:12;3757:10;3769;3781:12;3732:62;;;;;;;;;;;:::i;:::-;;;;-1:-1:-1;;3732:62:0;;;;;;;;;3722:73;;3732:62;3722:73;;;;3848:1;3813:17;;;:7;:17;;;;;:23;3722:73;;-1:-1:-1;;;;;;3813:23:0;:37;3805:71;;;;-1:-1:-1;;;3805:71:0;;10740:2:72;3805:71:0;;;10722:21:72;10779:2;10759:18;;;10752:30;-1:-1:-1;;;10798:18:72;;;10791:51;10859:18;;3805:71:0;10538:345:72;3805:71:0;3895:27;3967:12;3950:41;;;;;;;;:::i;:::-;;;;;;;;;;;;;4000:1;3925:77;;;;;:::i;:::-;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;3895:107;;4012:38;4095:12;4078:53;;;;;;;;:::i;:::-;;;;;;;;;;;;;4141:1;4053:90;;;;;:::i;:::-;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;4012:131;;4153:29;4227:12;4210:50;;;;;;;;:::i;:::-;;;;;;;;;;;;;4269:1;4185:86;;;;;:::i;:::-;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;4282:37:0;;-1:-1:-1;;;4282:37:0;;4313:4;4282:37;;;4486:51:72;4153:118:0;;-1:-1:-1;;;;;;4282:22:0;;;;;4459:18:72;;4282:37:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;4329:48:0;;-1:-1:-1;;;4329:48:0;;4371:4;4329:48;;;4486:51:72;-1:-1:-1;;;;;4329:33:0;;;-1:-1:-1;4329:33:0;;-1:-1:-1;4459:18:72;;4329:48:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;4387:39:0;;-1:-1:-1;;;4387:39:0;;4420:4;4387:39;;;4486:51:72;-1:-1:-1;;;;;4387:24:0;;;-1:-1:-1;4387:24:0;;-1:-1:-1;4459:18:72;;4387:39:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;4445:37:0;;-1:-1:-1;;;4445:37:0;;4476:4;4445:37;;;4486:51:72;-1:-1:-1;;;;;4445:22:0;;;-1:-1:-1;4445:22:0;;-1:-1:-1;4459:18:72;;4445:37:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;4492:48:0;;-1:-1:-1;;;4492:48:0;;4534:4;4492:48;;;4486:51:72;-1:-1:-1;;;;;4492:33:0;;;-1:-1:-1;4492:33:0;;-1:-1:-1;4459:18:72;;4492:48:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;4550:39:0;;-1:-1:-1;;;4550:39:0;;4583:4;4550:39;;;4486:51:72;-1:-1:-1;;;;;4550:24:0;;;-1:-1:-1;4550:24:0;;-1:-1:-1;4459:18:72;;4550:39:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4621:403;;;;;;;;4649:10;-1:-1:-1;;;;;4621:403:0;;;;;4687:13;4621:403;;;;4722:7;4621:403;;;;4754:10;4621:403;;;;4792:12;-1:-1:-1;;;;;4621:403:0;;;;;4843:23;-1:-1:-1;;;;;4621:403:0;;;;;4896:14;-1:-1:-1;;;;;4621:403:0;;;;;4937:12;4621:403;;;;4981:4;4621:403;;;;;;5012:1;-1:-1:-1;;;;;4621:403:0;;;;4601:7;:17;4609:8;4601:17;;;;;;;;;;;:423;;;;;;;;;;;;;-1:-1:-1;;;;;4601:423:0;;;;;-1:-1:-1;;;;;4601:423:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;4601:423:0;;;;;-1:-1:-1;;;;;4601:423:0;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;4601:423:0;;;;;-1:-1:-1;;;;;4601:423:0;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;4601:423:0;;;;;-1:-1:-1;;;;;4601:423:0;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;4601:423:0;;;;;;;;;;;;;;;;-1:-1:-1;;;;;4601:423:0;;;;-1:-1:-1;;4601:423:0;;;;;;;-1:-1:-1;;4601:423:0;;;;;;;;;;5039:17;;5035:90;;5058:67;-1:-1:-1;;;;;5058:8:0;:25;5084:10;5104:4;5111:13;5058:25;:67::i;:::-;5188:8;5157:151;5211:12;5237:7;5259:13;5287:10;5157:151;;;;;;;;;:::i;:::-;;;;;;;;3701:1614;;;3360:1955;;;;;;:::o;5777:260::-;5861:17;;;;:7;:17;;;;;:23;-1:-1:-1;;;;;5861:23:0;5888:10;5861:37;5853:84;;;;-1:-1:-1;;;5853:84:0;;17283:2:72;5853:84:0;;;17265:21:72;17322:2;17302:18;;;17295:30;17361:34;17341:18;;;17334:62;-1:-1:-1;;;17412:18:72;;;17405:32;17454:19;;5853:84:0;17081:398:72;5853:84:0;5964:1;5955:5;-1:-1:-1;;;;;5955:10:0;;;5947:36;;;;-1:-1:-1;;;5947:36:0;;17686:2:72;5947:36:0;;;17668:21:72;17725:2;17705:18;;;17698:30;-1:-1:-1;;;17744:18:72;;;17737:43;17797:18;;5947:36:0;17484:337:72;5947:36:0;5993:17;;;;:7;:17;;;;;;:29;;:37;;-1:-1:-1;;;;;5993:37:0;;;;;-1:-1:-1;;5993:37:0;;;;;;;;;5777:260::o;12215:1255::-;12291:21;12315:17;;;:7;:17;;;;;12350:18;;;;;;;-1:-1:-1;;;;;12350:18:0;12372:1;12350:23;12342:81;;;;-1:-1:-1;;;12342:81:0;;18028:2:72;12342:81:0;;;18010:21:72;18067:2;18047:18;;;18040:30;18106;18086:18;;;18079:58;18154:18;;12342:81:0;17826:352:72;12342:81:0;12465:30;;;;12458:60;;-1:-1:-1;;;12458:60:0;;12507:10;12458:60;;;4486:51:72;12434:21:0;;-1:-1:-1;;;;;12465:30:0;;12458:48;;4459:18:72;;12458:60:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;12622:30;;;;:66;;-1:-1:-1;;;12622:66:0;;12662:10;12622:66;;;6434:51:72;6501:18;;;6494:34;;;12434:84:0;;-1:-1:-1;12528:23:0;;;;-1:-1:-1;;;;;12622:30:0;;:39;;6407:18:72;;12622:66:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;12706:23:0;;;;;;12703:662;;;12762:13;;-1:-1:-1;12793:19:0;;12789:127;;12839:19;;;;12832:69;;-1:-1:-1;;;;;12839:19:0;12873:10;12885:15;12832:40;:69::i;:::-;12703:662;;;12961:21;;;;:43;;-1:-1:-1;;;12961:43:0;;12993:10;12961:43;;;4486:51:72;13007:1:0;;-1:-1:-1;;;;;12961:21:0;;:31;;4459:18:72;;12961:43:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:47;12957:398;;;13046:21;;;;:35;;;-1:-1:-1;;;13046:35:0;;;;13084:1;;-1:-1:-1;;;;;13046:21:0;;:33;;:35;;;;;;;;;;;;;;:21;:35;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:39;:80;;13125:1;13046:80;;;13117:5;13104:10;-1:-1:-1;;;;;13088:26:0;:6;:13;;;:26;;;;:::i;:::-;:34;;;;:::i;:::-;13027:99;-1:-1:-1;13147:20:0;;13144:134;;13216:12;;13190:69;;-1:-1:-1;;;;;13190:8:0;:25;;;13216:12;13230:10;13242:16;13190:25;:69::i;:::-;13295:21;;;;:45;;-1:-1:-1;;;13295:45:0;;13326:10;13295:45;;;6434:51:72;13295:21:0;6501:18:72;;;6494:34;-1:-1:-1;;;;;13295:21:0;;;;:30;;6407:18:72;;13295:45:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;12957:398;13389:70;;;19735:25:72;;;19791:2;19776:18;;19769:34;;;13413:10:0;;13403:8;;13389:70;;19708:18:72;13389:70:0;;;;;;;12281:1189;;;;12215:1255;;:::o;9412:548::-;9474:21;9498:17;;;:7;:17;;;;;9533:18;;;;9554:1;9533:18;;;;-1:-1:-1;;;;;9533:18:0;:22;9525:53;;;;-1:-1:-1;;;9525:53:0;;20016:2:72;9525:53:0;;;19998:21:72;20055:2;20035:18;;;20028:30;-1:-1:-1;;;20074:18:72;;;20067:48;20132:18;;9525:53:0;19814:342:72;9525:53:0;9596:12;;-1:-1:-1;;;;;9596:12:0;9588:64;;;;-1:-1:-1;;;9588:64:0;;20363:2:72;9588:64:0;;;20345:21:72;20402:2;20382:18;;;20375:30;-1:-1:-1;;;20421:18:72;;;20414:55;20486:18;;9588:64:0;20161:349:72;9588:64:0;9670:21;;;;:43;;-1:-1:-1;;;9670:43:0;;9702:10;9670:43;;;4486:51:72;-1:-1:-1;;;;;9670:21:0;;;;:31;;4459:18:72;;9670:43:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:48;9662:97;;;;-1:-1:-1;;;9662:97:0;;20717:2:72;9662:97:0;;;20699:21:72;20756:2;20736:18;;;20729:30;20795:34;20775:18;;;20768:62;-1:-1:-1;;;20846:18:72;;;20839:34;20890:19;;9662:97:0;20515:400:72;9662:97:0;9769:21;;;;:41;;-1:-1:-1;;;9769:41:0;;9796:10;9769:41;;;6434:51:72;9769:21:0;6501:18:72;;;6494:34;-1:-1:-1;;;;;9769:21:0;;;;:26;;6407:18:72;;9769:41:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;9821:66:0;-1:-1:-1;;;;;9821:8:0;:25;9847:10;9867:4;1215:8;9821:25;:66::i;:::-;9912:41;;9942:10;;9932:8;;9912:41;;;;;9464:496;9412:548;:::o;2156:42::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2156:42:0;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;2156:42:0;;;;;;;-1:-1:-1;;2156:42:0;;;;-1:-1:-1;;;;;2156:42:0;;;;;;:::o;5321:153::-;5389:7;5415:17;;;:7;:17;;;;;;:30;;;;;:52;;-1:-1:-1;;;5415:52:0;;5456:10;5415:52;;;4486:51:72;;;;-1:-1:-1;;;;;5415:30:0;;;;:40;;4459:18:72;;5415:52:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;5408:59;5321:153;-1:-1:-1;;5321:153:0:o;9966:148::-;10026:4;10049:17;;;:7;:17;;;;;;:32;;;:54;;-1:-1:-1;;;10049:54:0;;10092:10;10049:54;;;4486:51:72;10026:4:0;;-1:-1:-1;;;;;10049:32:0;;:42;;4459:18:72;;10049:54:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:58;;9966:148;-1:-1:-1;;9966:148:0:o;8485:921::-;8564:21;8588:17;;;:7;:17;;;;;8624:18;;;;;;;-1:-1:-1;;;;;8624:18:0;:23;8615:54;;;;-1:-1:-1;;;8615:54:0;;21122:2:72;8615:54:0;;;21104:21:72;21161:2;21141:18;;;21134:30;-1:-1:-1;;;21180:18:72;;;21173:47;21237:18;;8615:54:0;20920:341:72;8615:54:0;8687:12;;-1:-1:-1;;;;;8687:12:0;8679:64;;;;-1:-1:-1;;;8679:64:0;;20363:2:72;8679:64:0;;;20345:21:72;20402:2;20382:18;;;20375:30;-1:-1:-1;;;20421:18:72;;;20414:55;20486:18;;8679:64:0;20161:349:72;8679:64:0;8778:1;8761:14;:18;8753:85;;;;-1:-1:-1;;;8753:85:0;;21468:2:72;8753:85:0;;;21450:21:72;21507:2;21487:18;;;21480:30;21546:34;21526:18;;;21519:62;-1:-1:-1;;;21597:18:72;;;21590:52;21659:19;;8753:85:0;21266:418:72;8753:85:0;8848:33;8884:6;:19;;;;;;;;;;-1:-1:-1;;;;;8884:19:0;-1:-1:-1;;;;;8884:31:0;;:33;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;8981:16;;;;8848:69;;-1:-1:-1;8935:42:0;8963:14;8848:69;8935:42;:::i;:::-;:62;;9022;9058:25;9039:6;:16;;;:44;;;;:::i;:::-;9022:16;:62::i;:::-;8999:103;;;;;;;;:::i;:::-;;;;;;;;;;;;;8927:176;;;;;-1:-1:-1;;;8927:176:0;;;;;;;;:::i;:::-;-1:-1:-1;9152:12:0;;9114:72;;9140:10;;-1:-1:-1;;;;;9152:12:0;9166:19;:14;9181:4;9166:19;:::i;:::-;-1:-1:-1;;;;;9114:8:0;:25;;:72;;:25;:72::i;:::-;9196:19;;;;;:55;;-1:-1:-1;;;9196:55:0;;9229:4;9196:55;;;6434:51:72;;;;6501:18;;;6494:34;;;-1:-1:-1;;;;;9196:19:0;;:24;;6407:18:72;;9196:55:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;9261:30:0;;;;:63;;-1:-1:-1;;;9261:63:0;;9297:10;9261:63;;;6434:51:72;6501:18;;;6494:34;;;-1:-1:-1;;;;;9261:30:0;;;;:35;;6407:18:72;;9261:63:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;9348:51:0;;345:25:72;;;9372:10:0;;9362:8;;9348:51;;333:2:72;318:18;9348:51:0;;;;;;;8554:852;;8485:921;;:::o;5661:110::-;5734:30;;-1:-1:-1;;;5734:30:0;;5753:10;5734:30;;;4486:51:72;5708:7:0;;5734:8;-1:-1:-1;;;;;5734:18:0;;;;4459::72;;5734:30:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;5727:37;;5661:110;:::o;5480:175::-;5559:7;5585:17;;;:7;:17;;;;;;:41;;;:63;;-1:-1:-1;;;5585:63:0;;5637:10;5585:63;;;4486:51:72;-1:-1:-1;;;;;5585:41:0;;;;:51;;4459:18:72;;5585:63:0;4303:240:72;3240:114:0;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3330:17:0;;;;:7;:17;;;;;;;;;3323:24;;;;;;;;;-1:-1:-1;;;;;3323:24:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3330:17;3323:24;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;3323:24:0;;;-1:-1:-1;;3323:24:0;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;3323:24:0;;;;;;;;-1:-1:-1;;3240:114:0:o;7498:872::-;7605:10;-1:-1:-1;;;;;7627:2:0;7605:25;;7597:70;;;;-1:-1:-1;;;7597:70:0;;22965:2:72;7597:70:0;;;22947:21:72;;;22984:18;;;22977:30;23043:34;23023:18;;;23016:62;23095:18;;7597:70:0;22763:356:72;7597:70:0;7677:21;7709:28;;;:15;:28;;;;;;;;7701:7;7709:37;;;;7701:46;;;;;;;7766:497;;;;7804:23;;;:31;;-1:-1:-1;;7804:31:0;;;7883:36;;-1:-1:-1;;;7883:36:0;;-1:-1:-1;;;;;7909:8:0;4504:32:72;;7883:36:0;;;4486:51:72;-1:-1:-1;;7883:2:0;:17;;;;;;4459:18:72;;7883:36:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;7861:58;;7968:12;8005:11;7983:6;:19;;;:33;:69;;8041:11;7983:69;;;8019:6;:19;;;7983:69;8066:19;;;;;8110:33;;;-1:-1:-1;;;8110:33:0;;;;7968:84;;-1:-1:-1;;;;;;8066:19:0;;;;:28;;8103:4;;8066:19;;8110:31;;:33;;;;;;;;;;;;;8066:19;8110:33;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;8066:78;;-1:-1:-1;;;;;;8066:78:0;;;;;;;-1:-1:-1;;;;;6452:32:72;;;8066:78:0;;;6434:51:72;6501:18;;;6494:34;6407:18;;8066:78:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;8180:28:0;;;;:15;:28;;;;;:37;8158:66;;-1:-1:-1;;;;;8158:8:0;:21;;;8180:37;8219:4;8158:21;:66::i;:::-;7790:473;;7766:497;8272:18;;;:22;;-1:-1:-1;;8272:22:0;;;;;-1:-1:-1;8325:28:0;;;8293:1;8325:28;;;;;;-1:-1:-1;8325:37:0;;8310:53;;8325:37;;8310:53;;;7587:783;7498:872;;:::o;912:241:24:-;1077:68;;-1:-1:-1;;;;;23382:15:72;;;1077:68:24;;;23364:34:72;23434:15;;23414:18;;;23407:43;23466:18;;;23459:34;;;1050:96:24;;1070:5;;-1:-1:-1;;;1100:27:24;23299:18:72;;1077:68:24;;;;-1:-1:-1;;1077:68:24;;;;;;;;;;;;;;-1:-1:-1;;;;;1077:68:24;-1:-1:-1;;;;;;1077:68:24;;;;;;;;;;1050:19;:96::i;:::-;912:241;;;;:::o;1413:603::-;1768:10;;;1767:62;;-1:-1:-1;1784:39:24;;-1:-1:-1;;;1784:39:24;;1808:4;1784:39;;;23716:34:72;-1:-1:-1;;;;;23786:15:72;;;23766:18;;;23759:43;1784:15:24;;;;;23651:18:72;;1784:39:24;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:44;1767:62;1746:163;;;;-1:-1:-1;;;1746:163:24;;24015:2:72;1746:163:24;;;23997:21:72;24054:2;24034:18;;;24027:30;24093:34;24073:18;;;24066:62;-1:-1:-1;;;24144:18:72;;;24137:52;24206:19;;1746:163:24;23813:418:72;1746:163:24;1946:62;;-1:-1:-1;;;;;6452:32:72;;1946:62:24;;;6434:51:72;6501:18;;;6494:34;;;1919:90:24;;1939:5;;-1:-1:-1;;;1969:22:24;6407:18:72;;1946:62:24;6260:274:72;1919:90:24;1413:603;;;:::o;701:205::-;840:58;;-1:-1:-1;;;;;6452:32:72;;840:58:24;;;6434:51:72;6501:18;;;6494:34;;;813:86:24;;833:5;;-1:-1:-1;;;863:23:24;6407:18:72;;840:58:24;6260:274:72;328:703:27;384:13;601:5;610:1;601:10;597:51;;-1:-1:-1;;627:10:27;;;;;;;;;;;;-1:-1:-1;;;627:10:27;;;;;328:703::o;597:51::-;672:5;657:12;711:75;718:9;;711:75;;743:8;;;;:::i;:::-;;-1:-1:-1;765:10:27;;-1:-1:-1;773:2:27;765:10;;:::i;:::-;;;711:75;;;795:19;827:6;-1:-1:-1;;;;;817:17:27;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;817:17:27;;795:39;;844:150;851:10;;844:150;;877:11;887:1;877:11;;:::i;:::-;;-1:-1:-1;945:10:27;953:2;945:5;:10;:::i;:::-;932:24;;:2;:24;:::i;:::-;919:39;;902:6;909;902:14;;;;;;;;:::i;:::-;;;;:56;-1:-1:-1;;;;;902:56:27;;;;;;;;-1:-1:-1;972:11:27;981:2;972:11;;:::i;:::-;;;844:150;;;1017:6;328:703;-1:-1:-1;;;;328:703:27:o;3207:706:24:-;3626:23;3652:69;3680:4;3652:69;;;;;;;;;;;;;;;;;3660:5;-1:-1:-1;;;;;3652:27:24;;;:69;;;;;:::i;:::-;3735:17;;3626:95;;-1:-1:-1;3735:21:24;3731:176;;3830:10;3819:30;;;;;;;;;;;;:::i;:::-;3811:85;;;;-1:-1:-1;;;3811:85:24;;24827:2:72;3811:85:24;;;24809:21:72;24866:2;24846:18;;;24839:30;24905:34;24885:18;;;24878:62;-1:-1:-1;;;24956:18:72;;;24949:40;25006:19;;3811:85:24;24625:406:72;3861:223:25;3994:12;4025:52;4047:6;4055:4;4061:1;4064:12;4025:21;:52::i;:::-;4018:59;;3861:223;;;;;;:::o;4948:499::-;5113:12;5170:5;5145:21;:30;;5137:81;;;;-1:-1:-1;;;5137:81:25;;25238:2:72;5137:81:25;;;25220:21:72;25277:2;25257:18;;;25250:30;25316:34;25296:18;;;25289:62;-1:-1:-1;;;25367:18:72;;;25360:36;25413:19;;5137:81:25;25036:402:72;5137:81:25;-1:-1:-1;;;;;1465:19:25;;;5228:60;;;;-1:-1:-1;;;5228:60:25;;25645:2:72;5228:60:25;;;25627:21:72;25684:2;25664:18;;;25657:30;25723:31;25703:18;;;25696:59;25772:18;;5228:60:25;25443:353:72;5228:60:25;5300:12;5314:23;5341:6;-1:-1:-1;;;;;5341:11:25;5360:5;5367:4;5341:31;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5299:73;;;;5389:51;5406:7;5415:10;5427:12;5389:16;:51::i;:::-;5382:58;4948:499;-1:-1:-1;;;;;;;4948:499:25:o;7561:692::-;7707:12;7735:7;7731:516;;;-1:-1:-1;7765:10:25;7758:17;;7731:516;7876:17;;:21;7872:365;;8070:10;8064:17;8130:15;8117:10;8113:2;8109:19;8102:44;7872:365;8209:12;8202:20;;-1:-1:-1;;;8202:20:25;;;;;;;;:::i;-1:-1:-1:-;;;;;;;;:::o;14:180:72:-;73:6;126:2;114:9;105:7;101:23;97:32;94:52;;;142:1;139;132:12;94:52;-1:-1:-1;165:23:72;;14:180;-1:-1:-1;14:180:72:o;381:127::-;442:10;437:3;433:20;430:1;423:31;473:4;470:1;463:15;497:4;494:1;487:15;513:1127;609:6;617;625;633;686:3;674:9;665:7;661:23;657:33;654:53;;;703:1;700;693:12;654:53;739:9;726:23;716:33;;796:2;785:9;781:18;768:32;758:42;;847:2;836:9;832:18;819:32;809:42;;902:2;891:9;887:18;874:32;-1:-1:-1;;;;;966:2:72;958:6;955:14;952:34;;;982:1;979;972:12;952:34;1020:6;1009:9;1005:22;995:32;;1065:7;1058:4;1054:2;1050:13;1046:27;1036:55;;1087:1;1084;1077:12;1036:55;1123:2;1110:16;1145:2;1141;1138:10;1135:36;;;1151:18;;:::i;:::-;1226:2;1220:9;1194:2;1280:13;;-1:-1:-1;;1276:22:72;;;1300:2;1272:31;1268:40;1256:53;;;1324:18;;;1344:22;;;1321:46;1318:72;;;1370:18;;:::i;:::-;1410:10;1406:2;1399:22;1445:2;1437:6;1430:18;1485:7;1480:2;1475;1471;1467:11;1463:20;1460:33;1457:53;;;1506:1;1503;1496:12;1457:53;1562:2;1557;1553;1549:11;1544:2;1536:6;1532:15;1519:46;1607:1;1602:2;1597;1589:6;1585:15;1581:24;1574:35;1628:6;1618:16;;;;;;;513:1127;;;;;;;:::o;1957:352::-;2024:6;2032;2085:2;2073:9;2064:7;2060:23;2056:32;2053:52;;;2101:1;2098;2091:12;2053:52;2137:9;2124:23;2114:33;;2197:2;2186:9;2182:18;2169:32;-1:-1:-1;;;;;2234:5:72;2230:30;2223:5;2220:41;2210:69;;2275:1;2272;2265:12;2210:69;2298:5;2288:15;;;1957:352;;;;;:::o;2423:250::-;2508:1;2518:113;2532:6;2529:1;2526:13;2518:113;;;2608:11;;;2602:18;2589:11;;;2582:39;2554:2;2547:10;2518:113;;;-1:-1:-1;;2665:1:72;2647:16;;2640:27;2423:250::o;2678:271::-;2720:3;2758:5;2752:12;2785:6;2780:3;2773:19;2801:76;2870:6;2863:4;2858:3;2854:14;2847:4;2840:5;2836:16;2801:76;:::i;:::-;2931:2;2910:15;-1:-1:-1;;2906:29:72;2897:39;;;;2938:4;2893:50;;2678:271;-1:-1:-1;;2678:271:72:o;3050:1066::-;-1:-1:-1;;;;;3575:15:72;;;3557:34;;3622:2;3607:18;;3600:34;;;3665:2;3650:18;;3643:34;;;3708:2;3693:18;;3686:34;;;3757:15;;;3751:3;3736:19;;3729:44;3810:15;;;3537:3;3789:19;;3782:44;3863:15;;3857:3;3842:19;;3835:44;3507:3;3910;3895:19;;3888:31;;;3478:4;;3936:45;3962:18;;;3954:6;3936:45;:::i;:::-;4025:14;;4018:22;4012:3;3997:19;;3990:51;-1:-1:-1;;;;;;;4078:31:72;;;;4072:3;4057:19;;;4050:60;3928:53;3050:1066;-1:-1:-1;;;;;;;;3050:1066:72:o;4740:248::-;4808:6;4816;4869:2;4857:9;4848:7;4844:23;4840:32;4837:52;;;4885:1;4882;4875:12;4837:52;-1:-1:-1;;4908:23:72;;;4978:2;4963:18;;;4950:32;;-1:-1:-1;4740:248:72:o;4993:1262::-;5166:2;5155:9;5148:21;5178:53;5227:2;5216:9;5212:18;5203:6;5197:13;-1:-1:-1;;;;;2380:31:72;2368:44;;2314:104;5178:53;5285:2;5277:6;5273:15;5267:22;5262:2;5251:9;5247:18;5240:50;5344:2;5336:6;5332:15;5326:22;5321:2;5310:9;5306:18;5299:50;5404:2;5396:6;5392:15;5386:22;5380:3;5369:9;5365:19;5358:51;5129:4;5456:3;5448:6;5444:16;5438:23;5470:53;5518:3;5507:9;5503:19;5489:12;-1:-1:-1;;;;;2380:31:72;2368:44;;2314:104;5470:53;-1:-1:-1;5572:3:72;5560:16;;5554:23;-1:-1:-1;;;;;2380:31:72;;5636:3;5621:19;;2368:44;-1:-1:-1;5690:3:72;5678:16;;5672:23;-1:-1:-1;;;;;2380:31:72;;5754:3;5739:19;;2368:44;5704:55;5808:3;5800:6;5796:16;5790:23;5832:6;5857:3;5896:2;5891;5880:9;5876:18;5869:30;5922:54;5971:3;5960:9;5956:19;5940:14;5922:54;:::i;:::-;6013:15;;;6007:22;5908:68;;-1:-1:-1;6048:3:72;6060:51;6092:18;;;6007:22;3024:13;3017:21;3005:34;;2954:91;6060:51;6148:15;;;6142:22;-1:-1:-1;;;;;1710:30:72;6207:18;;1698:43;;;;-1:-1:-1;6243:6:72;;-1:-1:-1;4993:1262:72:o;6763:118::-;6849:5;6842:13;6835:21;6828:5;6825:32;6815:60;;6871:1;6868;6861:12;6886:309;6951:6;6959;7012:2;7000:9;6991:7;6987:23;6983:32;6980:52;;;7028:1;7025;7018:12;6980:52;7064:9;7051:23;7041:33;;7124:2;7113:9;7109:18;7096:32;7137:28;7159:5;7137:28;:::i;8515:184::-;8585:6;8638:2;8626:9;8617:7;8613:23;8609:32;8606:52;;;8654:1;8651;8644:12;8606:52;-1:-1:-1;8677:16:72;;8515:184;-1:-1:-1;8515:184:72:o;10072:461::-;10305:6;10294:9;10287:25;10348:6;10343:2;10332:9;10328:18;10321:34;10420:1;10416;10411:3;10407:11;10403:19;10395:6;10391:32;10386:2;10375:9;10371:18;10364:60;10460:3;10455:2;10444:9;10440:18;10433:31;10268:4;10481:46;10522:3;10511:9;10507:19;10499:6;10481:46;:::i;:::-;10473:54;10072:461;-1:-1:-1;;;;;;10072:461:72:o;10888:458::-;11120:3;11158:6;11152:13;11174:66;11233:6;11228:3;11221:4;11213:6;11209:17;11174:66;:::i;:::-;-1:-1:-1;;;11262:16:72;;11287:24;;;-1:-1:-1;11338:1:72;11327:13;;10888:458;-1:-1:-1;10888:458:72:o;11351:570::-;11635:2;11624:9;11617:21;11598:4;11661:45;11702:2;11691:9;11687:18;11679:6;11661:45;:::i;:::-;11754:9;11746:6;11742:22;11737:2;11726:9;11722:18;11715:50;11789:1;11781:6;11774:17;-1:-1:-1;;;11819:2:72;11811:6;11807:15;11800:29;11858:2;11850:6;11846:15;11838:23;;;11909:4;11901:6;11897:17;11892:2;11881:9;11877:18;11870:45;11351:570;;;;;:::o;11926:471::-;12158:3;12196:6;12190:13;12212:66;12271:6;12266:3;12259:4;12251:6;12247:17;12212:66;:::i;:::-;-1:-1:-1;;;12300:16:72;;12325:36;;;-1:-1:-1;12388:2:72;12377:14;;11926:471;-1:-1:-1;11926:471:72:o;12402:571::-;12686:2;12675:9;12668:21;12649:4;12712:45;12753:2;12742:9;12738:18;12730:6;12712:45;:::i;:::-;12805:9;12797:6;12793:22;12788:2;12777:9;12773:18;12766:50;12840:1;12832:6;12825:17;-1:-1:-1;;;12870:2:72;12862:6;12858:15;12851:30;12910:2;12902:6;12898:15;12890:23;;;12961:4;12953:6;12949:17;12944:2;12933:9;12929:18;12922:45;12402:571;;;;;:::o;12978:468::-;13210:3;13248:6;13242:13;13264:66;13323:6;13318:3;13311:4;13303:6;13299:17;13264:66;:::i;:::-;-1:-1:-1;;;13352:16:72;;13377:33;;;-1:-1:-1;13437:2:72;13426:14;;12978:468;-1:-1:-1;12978:468:72:o;13451:570::-;13735:2;13724:9;13717:21;13698:4;13761:45;13802:2;13791:9;13787:18;13779:6;13761:45;:::i;:::-;13854:9;13846:6;13842:22;13837:2;13826:9;13822:18;13815:50;13889:1;13881:6;13874:17;-1:-1:-1;;;13919:2:72;13911:6;13907:15;13900:29;13958:2;13950:6;13946:15;13938:23;;;14009:4;14001:6;13997:17;13992:2;13981:9;13977:18;13970:45;13451:570;;;;;:::o;14026:380::-;14105:1;14101:12;;;;14148;;;14169:61;;14223:4;14215:6;14211:17;14201:27;;14169:61;14276:2;14268:6;14265:14;14245:18;14242:38;14239:161;;14322:10;14317:3;14313:20;14310:1;14303:31;14357:4;14354:1;14347:15;14385:4;14382:1;14375:15;14239:161;;14026:380;;;:::o;14537:545::-;14639:2;14634:3;14631:11;14628:448;;;14675:1;14700:5;14696:2;14689:17;14745:4;14741:2;14731:19;14815:2;14803:10;14799:19;14796:1;14792:27;14786:4;14782:38;14851:4;14839:10;14836:20;14833:47;;;-1:-1:-1;14874:4:72;14833:47;14929:2;14924:3;14920:12;14917:1;14913:20;14907:4;14903:31;14893:41;;14984:82;15002:2;14995:5;14992:13;14984:82;;;15047:17;;;15028:1;15017:13;14984:82;;;14988:3;;;14537:545;;;:::o;15258:1352::-;15384:3;15378:10;-1:-1:-1;;;;;15403:6:72;15400:30;15397:56;;;15433:18;;:::i;:::-;15462:97;15552:6;15512:38;15544:4;15538:11;15512:38;:::i;:::-;15506:4;15462:97;:::i;:::-;15614:4;;15678:2;15667:14;;15695:1;15690:663;;;;16397:1;16414:6;16411:89;;;-1:-1:-1;16466:19:72;;;16460:26;16411:89;-1:-1:-1;;15215:1:72;15211:11;;;15207:24;15203:29;15193:40;15239:1;15235:11;;;15190:57;16513:81;;15660:944;;15690:663;14484:1;14477:14;;;14521:4;14508:18;;-1:-1:-1;;15726:20:72;;;15844:236;15858:7;15855:1;15852:14;15844:236;;;15947:19;;;15941:26;15926:42;;16039:27;;;;16007:1;15995:14;;;;15874:19;;15844:236;;;15848:3;16108:6;16099:7;16096:19;16093:201;;;16169:19;;;16163:26;-1:-1:-1;;16252:1:72;16248:14;;;16264:3;16244:24;16240:37;16236:42;16221:58;16206:74;;16093:201;-1:-1:-1;;;;;16340:1:72;16324:14;;;16320:22;16307:36;;-1:-1:-1;15258:1352:72:o;16615:461::-;16848:3;16837:9;16830:22;16811:4;16869:46;16910:3;16899:9;16895:19;16887:6;16869:46;:::i;:::-;16946:2;16931:18;;16924:34;;;;-1:-1:-1;16989:2:72;16974:18;;16967:34;;;;-1:-1:-1;;;;;17037:32:72;17032:2;17017:18;;;17010:60;16861:54;16615:461;-1:-1:-1;16615:461:72:o;18462:245::-;18529:6;18582:2;18570:9;18561:7;18557:23;18553:32;18550:52;;;18598:1;18595;18588:12;18550:52;18630:9;18624:16;18649:28;18671:5;18649:28;:::i;18712:127::-;18773:10;18768:3;18764:20;18761:1;18754:31;18804:4;18801:1;18794:15;18828:4;18825:1;18818:15;18844:168;18884:7;18950:1;18946;18942:6;18938:14;18935:1;18932:21;18927:1;18920:9;18913:17;18909:45;18906:71;;;18957:18;;:::i;:::-;-1:-1:-1;18997:9:72;;18844:168::o;19017:127::-;19078:10;19073:3;19069:20;19066:1;19059:31;19109:4;19106:1;19099:15;19133:4;19130:1;19123:15;19149:120;19189:1;19215;19205:35;;19220:18;;:::i;:::-;-1:-1:-1;19254:9:72;;19149:120::o;21689:125::-;21754:9;;;21775:10;;;21772:36;;;21788:18;;:::i;21819:128::-;21886:9;;;21907:11;;;21904:37;;;21921:18;;:::i;21952:581::-;-1:-1:-1;;;22289:3:72;22282:20;22264:3;22331:6;22325:13;22347:74;22414:6;22410:1;22405:3;22401:11;22394:4;22386:6;22382:17;22347:74;:::i;:::-;-1:-1:-1;;;22480:1:72;22440:16;;;;22472:10;;;22465:35;-1:-1:-1;22524:2:72;22516:11;;21952:581;-1:-1:-1;21952:581:72:o;22538:220::-;22687:2;22676:9;22669:21;22650:4;22707:45;22748:2;22737:9;22733:18;22725:6;22707:45;:::i;24236:135::-;24275:3;24296:17;;;24293:43;;24316:18;;:::i;:::-;-1:-1:-1;24363:1:72;24352:13;;24236:135::o;24376:112::-;24408:1;24434;24424:35;;24439:18;;:::i;:::-;-1:-1:-1;24473:9:72;;24376:112::o;24493:127::-;24554:10;24549:3;24545:20;24542:1;24535:31;24585:4;24582:1;24575:15;24609:4;24606:1;24599:15;25801:287;25930:3;25968:6;25962:13;25984:66;26043:6;26038:3;26031:4;26023:6;26019:17;25984:66;:::i;:::-;26066:16;;;;;25801:287;-1:-1:-1;;25801:287:72:o",
    "linkReferences": {},
    "immutableReferences": {
      "19": [
        {
          "start": 968,
          "length": 32
        },
        {
          "start": 1366,
          "length": 32
        },
        {
          "start": 1566,
          "length": 32
        },
        {
          "start": 1621,
          "length": 32
        },
        {
          "start": 1851,
          "length": 32
        },
        {
          "start": 3631,
          "length": 32
        },
        {
          "start": 4727,
          "length": 32
        },
        {
          "start": 5493,
          "length": 32
        },
        {
          "start": 6705,
          "length": 32
        },
        {
          "start": 7078,
          "length": 32
        },
        {
          "start": 7856,
          "length": 32
        },
        {
          "start": 8311,
          "length": 32
        }
      ],
      "22": [
        {
          "start": 594,
          "length": 32
        },
        {
          "start": 1409,
          "length": 32
        },
        {
          "start": 1655,
          "length": 32
        },
        {
          "start": 1945,
          "length": 32
        },
        {
          "start": 7673,
          "length": 32
        },
        {
          "start": 7899,
          "length": 32
        }
      ],
      "33": [
        {
          "start": 928,
          "length": 32
        },
        {
          "start": 1898,
          "length": 32
        }
      ]
    }
  },
  "methodIdentifiers": {
    "accountBalance()": "b0a1c1c4",
    "assertedMarkets(bytes32)": "d4107645",
    "assertionDisputedCallback(bytes32)": "d448a4ec",
    "assertionLiveness()": "b75d4e24",
    "assertionResolvedCallback(bytes32,bool)": "f1b156b2",
    "carbonCreditBalance(bytes32)": "82f7b9ac",
    "changeMarketState(bytes32,uint64)": "481e9c6b",
    "convertibleCarbonCreditBalance(bytes32)": "bac6d3c1",
    "currency()": "e5a6b10f",
    "data_oo()": "af2b57ce",
    "declareFalsePromise(bytes32)": "1122cca3",
    "defaultIdentifier()": "d509b017",
    "getMarket(bytes32)": "c3c95c7b",
    "initializeMarket(uint256,uint256,uint256,string)": "2a98b03d",
    "isValidator(bytes32)": "9d37c680",
    "markets(bytes32)": "7564912b",
    "mintCredit(bytes32,uint256)": "a7f0de81",
    "oo()": "8921a614",
    "registerValidator(bytes32)": "607049d8",
    "settleMarket(bytes32,uint64)": "5a682986",
    "validatorFee()": "3f6d8256"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.16+commit.07a7930e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_currency\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_optimisticOracleV3\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"marketId\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"creditsMinted\",\"type\":\"uint256\"}],\"name\":\"CreditsMinted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"marketId\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"assertionId\",\"type\":\"bytes32\"}],\"name\":\"FalsePromisedDeclared\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"marketId\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"description\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"reward\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"requiredBond\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"MarketInitialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"marketId\",\"type\":\"bytes32\"}],\"name\":\"MarketResolved\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"marketId\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"individualReward\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"creditReceived\",\"type\":\"uint256\"}],\"name\":\"MarketSettled\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"marketId\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"ValidatorRegistered\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"accountBalance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"name\":\"assertedMarkets\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"asserter\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"marketId\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"assertionId\",\"type\":\"bytes32\"}],\"name\":\"assertionDisputedCallback\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"assertionLiveness\",\"outputs\":[{\"internalType\":\"uint64\",\"name\":\"\",\"type\":\"uint64\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"assertionId\",\"type\":\"bytes32\"},{\"internalType\":\"bool\",\"name\":\"assertedTruthfully\",\"type\":\"bool\"}],\"name\":\"assertionResolvedCallback\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"marketId\",\"type\":\"bytes32\"}],\"name\":\"carbonCreditBalance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"marketId\",\"type\":\"bytes32\"},{\"internalType\":\"uint64\",\"name\":\"state\",\"type\":\"uint64\"}],\"name\":\"changeMarketState\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"marketId\",\"type\":\"bytes32\"}],\"name\":\"convertibleCarbonCreditBalance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"currency\",\"outputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"data_oo\",\"outputs\":[{\"internalType\":\"contract OptimisticOracleV3Interface\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"marketId\",\"type\":\"bytes32\"}],\"name\":\"declareFalsePromise\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"assertionId\",\"type\":\"bytes32\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"defaultIdentifier\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"marketId\",\"type\":\"bytes32\"}],\"name\":\"getMarket\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"requiredBond\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"reward\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"creditCap\",\"type\":\"uint256\"},{\"internalType\":\"contract ExpandedIERC20\",\"name\":\"carbonCredit\",\"type\":\"address\"},{\"internalType\":\"contract ExpandedIERC20\",\"name\":\"convertibleCarbonCredit\",\"type\":\"address\"},{\"internalType\":\"contract ExpandedIERC20\",\"name\":\"validatorToken\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"description\",\"type\":\"string\"},{\"internalType\":\"bool\",\"name\":\"promiseDelivered\",\"type\":\"bool\"},{\"internalType\":\"uint64\",\"name\":\"marketState\",\"type\":\"uint64\"}],\"internalType\":\"struct CarbonUMArket.Market\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_reward\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_requiredBond\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_creditCap\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"_description\",\"type\":\"string\"}],\"name\":\"initializeMarket\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"marketId\",\"type\":\"bytes32\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"marketId\",\"type\":\"bytes32\"}],\"name\":\"isValidator\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"name\":\"markets\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"requiredBond\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"reward\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"creditCap\",\"type\":\"uint256\"},{\"internalType\":\"contract ExpandedIERC20\",\"name\":\"carbonCredit\",\"type\":\"address\"},{\"internalType\":\"contract ExpandedIERC20\",\"name\":\"convertibleCarbonCredit\",\"type\":\"address\"},{\"internalType\":\"contract ExpandedIERC20\",\"name\":\"validatorToken\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"description\",\"type\":\"string\"},{\"internalType\":\"bool\",\"name\":\"promiseDelivered\",\"type\":\"bool\"},{\"internalType\":\"uint64\",\"name\":\"marketState\",\"type\":\"uint64\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"marketId\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"creditToCreate\",\"type\":\"uint256\"}],\"name\":\"mintCredit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"oo\",\"outputs\":[{\"internalType\":\"contract OptimisticOracleV3Interface\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"marketId\",\"type\":\"bytes32\"}],\"name\":\"registerValidator\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"marketId\",\"type\":\"bytes32\"},{\"internalType\":\"uint64\",\"name\":\"proportion\",\"type\":\"uint64\"}],\"name\":\"settleMarket\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"validatorFee\",\"outputs\":[{\"internalType\":\"uint64\",\"name\":\"\",\"type\":\"uint64\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"assertionDisputedCallback(bytes32)\":{\"params\":{\"assertionId\":\"The identifier of the assertion that was disputed.\"}},\"assertionResolvedCallback(bytes32,bool)\":{\"params\":{\"assertedTruthfully\":\"Whether the assertion was resolved as truthful or not.\",\"assertionId\":\"The identifier of the assertion that was resolved.\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"assertionDisputedCallback(bytes32)\":{\"notice\":\"Callback function that is called by Optimistic Oracle V3 when an assertion is disputed.\"},\"assertionResolvedCallback(bytes32,bool)\":{\"notice\":\"Callback function that is called by Optimistic Oracle V3 when an assertion is resolved.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/CarbonUMArket.sol\":\"CarbonUMArket\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@across-protocol/=node_modules/@across-protocol/\",\":@ensdomains/=node_modules/@ensdomains/\",\":@eth-optimism/=node_modules/@across-protocol/contracts/node_modules/@eth-optimism/\",\":@gnosis.pm/=node_modules/@gnosis.pm/\",\":@maticnetwork/=node_modules/@maticnetwork/\",\":@openzeppelin/=node_modules/@openzeppelin/\",\":@uma/=node_modules/@uma/\",\":@uniswap/=node_modules/@uniswap/\",\":base64-sol/=node_modules/base64-sol/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":eth-gas-reporter/=node_modules/eth-gas-reporter/\",\":forge-std/=lib/forge-std/src/\",\":hardhat-deploy/=node_modules/hardhat-deploy/\",\":hardhat/=node_modules/hardhat/\"]},\"sources\":{\"contracts/CarbonUMArket.sol\":{\"keccak256\":\"0x03d640dbae611ca5d8f3b9c64ad88fe4a66d93511cd24df2183c28a45bd9f54a\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://4fceec6949d997e530486cdb06d2aa0672fe881afeccd22c854bb210938dfa7e\",\"dweb:/ipfs/QmPDYPdghCTcD4EnevAsdYoxggeji7iXQpEAsTm3SsQ8f4\"]},\"node_modules/@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0x24e0364e503a9bbde94c715d26573a76f14cd2a202d45f96f52134ab806b67b9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e12cbaa7378fd9b62280e4e1d164bedcb4399ce238f5f98fc0eefb7e50577981\",\"dweb:/ipfs/QmXRoFGUgfsaRkoPT5bxNMtSayKTQ8GZATLPXf69HcRA51\"]},\"node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0xdadd41acb749920eccf40aeaa8d291adf9751399a7343561bad13e7a8d99be0b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://12af4ac016f9fdf3be5d15824f4292272aa11f6b2e0192a0f7320f5ad49bbbf0\",\"dweb:/ipfs/QmRXMpdqCgA3TYuYxBodqs5p9jGbnMW6xa2gvjppvq4TWk\"]},\"node_modules/@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xbbc8ac883ac3c0078ce5ad3e288fbb3ffcc8a30c3a98c0fda0114d64fc44fca2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87a7a5d2f6f63f84598af02b8c50ca2df2631cb8ba2453e8d95fcb17e4be9824\",\"dweb:/ipfs/QmR76hqtAcRqoFj33tmNjcWTLrgNsAaakYwnKZ8zoJtKei\"]},\"node_modules/@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x8de418a5503946cabe331f35fe242d3201a73f67f77aaeb7110acb1f30423aca\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a376d3dda2cb70536c0a45c208b29b34ac560c4cb4f513a42079f96ba47d2dd\",\"dweb:/ipfs/QmZQg6gn1sUpM8wHzwNvSnihumUCAhxD119MpXeKp8B9s8\"]},\"node_modules/@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0xc3d946432c0ddbb1f846a0d3985be71299df331b91d06732152117f62f0be2b5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4632c341a06ba5c079b51ca5a915efab4e6ab57735b37839b3e8365ff806a43e\",\"dweb:/ipfs/QmTHT3xHYed2wajEoA5qu7ii2BxLpPhQZHwAhtLK5Z7ANK\"]},\"node_modules/@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0x2ccf9d2313a313d41a791505f2b5abfdc62191b5d4334f7f7a82691c088a1c87\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b3a57d0854b2fdce6ebff933a48dca2445643d1eccfc27f00292e937f26c6a58\",\"dweb:/ipfs/QmW45rZooS9TqR4YXUbjRbtf2Bpb5ouSarBvfW1LdGprvV\"]},\"node_modules/@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"node_modules/@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x32c202bd28995dd20c4347b7c6467a6d3241c74c8ad3edcbb610cd9205916c45\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8179c356adb19e70d6b31a1eedc8c5c7f0c00e669e2540f4099e3844c6074d30\",\"dweb:/ipfs/QmWFbivarEobbqhS1go64ootVuHfVohBseerYy9FTEd1W2\"]},\"node_modules/@uma/core/contracts/common/implementation/AddressWhitelist.sol\":{\"keccak256\":\"0xc1f20b925f9d37230aaf7bbee536f9a9b08e4772864f0a243ff1b69b54710fee\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://55bc6782bd269463214dbafa8702b2ff33910fd4a51ab24d775aabb15e278bcc\",\"dweb:/ipfs/QmV41DnGByGBtg8gk7MG6Nr3xYo5R5varZ8cewywdKNATQ\"]},\"node_modules/@uma/core/contracts/common/implementation/AncillaryData.sol\":{\"keccak256\":\"0x8ff33ac32d3e6de25de9e0ac2c0ff9a621f187fa97e9ee84092b327471baa3ce\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://0bbaed49756e8cf7ef405e132f441cd7a735ac6186a200b0179147e7d137b74a\",\"dweb:/ipfs/QmeSBJX5a61LZPxbkUKS2NF4LSxemgDwjD65fCAmyP7PX2\"]},\"node_modules/@uma/core/contracts/common/implementation/ExpandedERC20.sol\":{\"keccak256\":\"0x8201459d3f78a1f97da7c421f2fbb859924d4facfc5fc235ba65d85bf12b2229\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://990c055523abe059c0e3e9dc0d631b17db960899dbfcfb2c562bc1ed9de8f140\",\"dweb:/ipfs/QmNgQP68bBrZvP2Rs4TdpESS3LFxqGgtTELZ1wm5mZqh4K\"]},\"node_modules/@uma/core/contracts/common/implementation/Lockable.sol\":{\"keccak256\":\"0x41d78fcce54598ad5f26bc0b778c0f4fedbd836401625e49e736979f69a87ef0\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://4ce111bb50441ef5125e7d42284f6debbc17fd589515d7b8cede7e9d1d5f0ede\",\"dweb:/ipfs/QmaXiXACWVEDDHoCHNXdVBoNpf8QNHkUZ1kf5MfbxfL6jj\"]},\"node_modules/@uma/core/contracts/common/implementation/MultiRole.sol\":{\"keccak256\":\"0x134c5a2f847832705be631f2b4eb2a3e23a91a2f0e63560abb481e85eeebfae6\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://f1267c6ad560d1eb896575919ecca13759bf50bb82d1215e03fc1f0424ec37a6\",\"dweb:/ipfs/QmXewGxpSmSMGYmT6ZUyxCVzy2cybxicbnyCn8w87m5mo3\"]},\"node_modules/@uma/core/contracts/common/interfaces/AddressWhitelistInterface.sol\":{\"keccak256\":\"0x22fb8588dff1d5cff76a28111d6c9b190765d99facd93c8ff3b54771f245c0d8\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://5ecd993f00de290a3c7bf21da23a9439cf2ccb22028316df92b79780ac8aa533\",\"dweb:/ipfs/QmTZ7x7U4EEzTacqapzSdFs2np5WNsqm4XeUBqzQxxDJei\"]},\"node_modules/@uma/core/contracts/common/interfaces/ExpandedIERC20.sol\":{\"keccak256\":\"0xb8252039cba45f1c19cd677f150a9823a5d6e1845cad90e3041d97c96f273c26\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://95106656c95e12c30a2a4c482a859df6df55c3b56bb9f7835eb5c685ca3175d3\",\"dweb:/ipfs/QmcuJoX7T53vTCDcQK8WcCJdT1LzHS35vPmSVfg1DG32cd\"]},\"node_modules/@uma/core/contracts/data-verification-mechanism/implementation/Constants.sol\":{\"keccak256\":\"0xe40957105a9240c6bcb9753fd0011fe9f382c437cd6771c57bf7a96f8ceb9c84\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://cbf0d25e841b1f5c4022d09fb29220cb428139443cb29c4ab8dbfff71dffcc05\",\"dweb:/ipfs/QmSVVr5wH1tZi6WmKyuy1K8yS6JN4DeK5kWaZpPKtXiqkK\"]},\"node_modules/@uma/core/contracts/data-verification-mechanism/interfaces/FinderInterface.sol\":{\"keccak256\":\"0x9166fbfe08e954eb86d33c114fcde7ce4fd0dda5d9d28b31210582bfc769fa86\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://e611e12bcaaebfdf65b67c566ff1d34708e757f01a445bd87c55862e89383b81\",\"dweb:/ipfs/QmYNSq5oopTShdS6j4VWKqoLxmQSRKmWebCxw6K4LfmKrf\"]},\"node_modules/@uma/core/contracts/optimistic-oracle-v3/implementation/ClaimData.sol\":{\"keccak256\":\"0x6e887a70326e5ede4a8c5002d4123a8c77b477ce58cf92533c38cd3dc6142cb5\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://bdafa7c59d0825da944c46664bddb1203bb4158dd0e1ddd6bbdeb276e66be0f8\",\"dweb:/ipfs/QmVb496JWqBib55HX6G3iPkAMv64Bj2UDegeVEYiNcYuDZ\"]},\"node_modules/@uma/core/contracts/optimistic-oracle-v3/interfaces/OptimisticOracleV3CallbackRecipientInterface.sol\":{\"keccak256\":\"0x79f90bc84ed5d394380e99f0a5d1b219abd9016bc3a02fad0099014af08af03e\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://dc1b7b847eb711750bc76ab45a13294b05fc09e361294a6bdffb90cb15f50b63\",\"dweb:/ipfs/QmQSs2R7mmGojGdNkqP75Vf7LajRkfJ1oGuYAUCHYGmPEQ\"]},\"node_modules/@uma/core/contracts/optimistic-oracle-v3/interfaces/OptimisticOracleV3Interface.sol\":{\"keccak256\":\"0xf31322bfd64854f0bfa92051d6ec711c1eed15d8042f394f5c24c05378218367\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://535bc2a6060e86a49524fd3c0062afcf83077530cefb3c1b8179b832f03ca81e\",\"dweb:/ipfs/QmQZhqn6oUiebSWEKbqcmiMGkqAb8B59WsRAyFU8WY84ct\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.16+commit.07a7930e"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_currency",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "_optimisticOracleV3",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "constructor"
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "marketId",
              "type": "bytes32",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "account",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "creditsMinted",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "CreditsMinted",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "marketId",
              "type": "bytes32",
              "indexed": true
            },
            {
              "internalType": "bytes32",
              "name": "assertionId",
              "type": "bytes32",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "FalsePromisedDeclared",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "marketId",
              "type": "bytes32",
              "indexed": true
            },
            {
              "internalType": "string",
              "name": "description",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "reward",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "requiredBond",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "address",
              "name": "owner",
              "type": "address",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "MarketInitialized",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "marketId",
              "type": "bytes32",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "MarketResolved",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "marketId",
              "type": "bytes32",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "account",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "individualReward",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "creditReceived",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "MarketSettled",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "marketId",
              "type": "bytes32",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "account",
              "type": "address",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "ValidatorRegistered",
          "anonymous": false
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "accountBalance",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "",
              "type": "bytes32"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "assertedMarkets",
          "outputs": [
            {
              "internalType": "address",
              "name": "asserter",
              "type": "address"
            },
            {
              "internalType": "bytes32",
              "name": "marketId",
              "type": "bytes32"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "assertionId",
              "type": "bytes32"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "assertionDisputedCallback"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "assertionLiveness",
          "outputs": [
            {
              "internalType": "uint64",
              "name": "",
              "type": "uint64"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "assertionId",
              "type": "bytes32"
            },
            {
              "internalType": "bool",
              "name": "assertedTruthfully",
              "type": "bool"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "assertionResolvedCallback"
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "marketId",
              "type": "bytes32"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "carbonCreditBalance",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "marketId",
              "type": "bytes32"
            },
            {
              "internalType": "uint64",
              "name": "state",
              "type": "uint64"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "changeMarketState"
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "marketId",
              "type": "bytes32"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "convertibleCarbonCreditBalance",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "currency",
          "outputs": [
            {
              "internalType": "contract IERC20",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "data_oo",
          "outputs": [
            {
              "internalType": "contract OptimisticOracleV3Interface",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "marketId",
              "type": "bytes32"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "declareFalsePromise",
          "outputs": [
            {
              "internalType": "bytes32",
              "name": "assertionId",
              "type": "bytes32"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "defaultIdentifier",
          "outputs": [
            {
              "internalType": "bytes32",
              "name": "",
              "type": "bytes32"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "marketId",
              "type": "bytes32"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getMarket",
          "outputs": [
            {
              "internalType": "struct CarbonUMArket.Market",
              "name": "",
              "type": "tuple",
              "components": [
                {
                  "internalType": "address",
                  "name": "owner",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "requiredBond",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "reward",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "creditCap",
                  "type": "uint256"
                },
                {
                  "internalType": "contract ExpandedIERC20",
                  "name": "carbonCredit",
                  "type": "address"
                },
                {
                  "internalType": "contract ExpandedIERC20",
                  "name": "convertibleCarbonCredit",
                  "type": "address"
                },
                {
                  "internalType": "contract ExpandedIERC20",
                  "name": "validatorToken",
                  "type": "address"
                },
                {
                  "internalType": "string",
                  "name": "description",
                  "type": "string"
                },
                {
                  "internalType": "bool",
                  "name": "promiseDelivered",
                  "type": "bool"
                },
                {
                  "internalType": "uint64",
                  "name": "marketState",
                  "type": "uint64"
                }
              ]
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "_reward",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "_requiredBond",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "_creditCap",
              "type": "uint256"
            },
            {
              "internalType": "string",
              "name": "_description",
              "type": "string"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "initializeMarket",
          "outputs": [
            {
              "internalType": "bytes32",
              "name": "marketId",
              "type": "bytes32"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "marketId",
              "type": "bytes32"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "isValidator",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "",
              "type": "bytes32"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "markets",
          "outputs": [
            {
              "internalType": "address",
              "name": "owner",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "requiredBond",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "reward",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "creditCap",
              "type": "uint256"
            },
            {
              "internalType": "contract ExpandedIERC20",
              "name": "carbonCredit",
              "type": "address"
            },
            {
              "internalType": "contract ExpandedIERC20",
              "name": "convertibleCarbonCredit",
              "type": "address"
            },
            {
              "internalType": "contract ExpandedIERC20",
              "name": "validatorToken",
              "type": "address"
            },
            {
              "internalType": "string",
              "name": "description",
              "type": "string"
            },
            {
              "internalType": "bool",
              "name": "promiseDelivered",
              "type": "bool"
            },
            {
              "internalType": "uint64",
              "name": "marketState",
              "type": "uint64"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "marketId",
              "type": "bytes32"
            },
            {
              "internalType": "uint256",
              "name": "creditToCreate",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "mintCredit"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "oo",
          "outputs": [
            {
              "internalType": "contract OptimisticOracleV3Interface",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "marketId",
              "type": "bytes32"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "registerValidator"
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "marketId",
              "type": "bytes32"
            },
            {
              "internalType": "uint64",
              "name": "proportion",
              "type": "uint64"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "settleMarket"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "validatorFee",
          "outputs": [
            {
              "internalType": "uint64",
              "name": "",
              "type": "uint64"
            }
          ]
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {
          "assertionDisputedCallback(bytes32)": {
            "params": {
              "assertionId": "The identifier of the assertion that was disputed."
            }
          },
          "assertionResolvedCallback(bytes32,bool)": {
            "params": {
              "assertedTruthfully": "Whether the assertion was resolved as truthful or not.",
              "assertionId": "The identifier of the assertion that was resolved."
            }
          }
        },
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {
          "assertionDisputedCallback(bytes32)": {
            "notice": "Callback function that is called by Optimistic Oracle V3 when an assertion is disputed."
          },
          "assertionResolvedCallback(bytes32,bool)": {
            "notice": "Callback function that is called by Optimistic Oracle V3 when an assertion is resolved."
          }
        },
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        "@across-protocol/=node_modules/@across-protocol/",
        "@ensdomains/=node_modules/@ensdomains/",
        "@eth-optimism/=node_modules/@across-protocol/contracts/node_modules/@eth-optimism/",
        "@gnosis.pm/=node_modules/@gnosis.pm/",
        "@maticnetwork/=node_modules/@maticnetwork/",
        "@openzeppelin/=node_modules/@openzeppelin/",
        "@uma/=node_modules/@uma/",
        "@uniswap/=node_modules/@uniswap/",
        "base64-sol/=node_modules/base64-sol/",
        "ds-test/=lib/forge-std/lib/ds-test/src/",
        "eth-gas-reporter/=node_modules/eth-gas-reporter/",
        "forge-std/=lib/forge-std/src/",
        "hardhat-deploy/=node_modules/hardhat-deploy/",
        "hardhat/=node_modules/hardhat/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 200
      },
      "metadata": {
        "bytecodeHash": "ipfs"
      },
      "compilationTarget": {
        "contracts/CarbonUMArket.sol": "CarbonUMArket"
      },
      "libraries": {}
    },
    "sources": {
      "contracts/CarbonUMArket.sol": {
        "keccak256": "0x03d640dbae611ca5d8f3b9c64ad88fe4a66d93511cd24df2183c28a45bd9f54a",
        "urls": [
          "bzz-raw://4fceec6949d997e530486cdb06d2aa0672fe881afeccd22c854bb210938dfa7e",
          "dweb:/ipfs/QmPDYPdghCTcD4EnevAsdYoxggeji7iXQpEAsTm3SsQ8f4"
        ],
        "license": "AGPL-3.0-only"
      },
      "node_modules/@openzeppelin/contracts/access/Ownable.sol": {
        "keccak256": "0x24e0364e503a9bbde94c715d26573a76f14cd2a202d45f96f52134ab806b67b9",
        "urls": [
          "bzz-raw://e12cbaa7378fd9b62280e4e1d164bedcb4399ce238f5f98fc0eefb7e50577981",
          "dweb:/ipfs/QmXRoFGUgfsaRkoPT5bxNMtSayKTQ8GZATLPXf69HcRA51"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol": {
        "keccak256": "0xdadd41acb749920eccf40aeaa8d291adf9751399a7343561bad13e7a8d99be0b",
        "urls": [
          "bzz-raw://12af4ac016f9fdf3be5d15824f4292272aa11f6b2e0192a0f7320f5ad49bbbf0",
          "dweb:/ipfs/QmRXMpdqCgA3TYuYxBodqs5p9jGbnMW6xa2gvjppvq4TWk"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/token/ERC20/IERC20.sol": {
        "keccak256": "0xbbc8ac883ac3c0078ce5ad3e288fbb3ffcc8a30c3a98c0fda0114d64fc44fca2",
        "urls": [
          "bzz-raw://87a7a5d2f6f63f84598af02b8c50ca2df2631cb8ba2453e8d95fcb17e4be9824",
          "dweb:/ipfs/QmR76hqtAcRqoFj33tmNjcWTLrgNsAaakYwnKZ8zoJtKei"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
        "keccak256": "0x8de418a5503946cabe331f35fe242d3201a73f67f77aaeb7110acb1f30423aca",
        "urls": [
          "bzz-raw://5a376d3dda2cb70536c0a45c208b29b34ac560c4cb4f513a42079f96ba47d2dd",
          "dweb:/ipfs/QmZQg6gn1sUpM8wHzwNvSnihumUCAhxD119MpXeKp8B9s8"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol": {
        "keccak256": "0xc3d946432c0ddbb1f846a0d3985be71299df331b91d06732152117f62f0be2b5",
        "urls": [
          "bzz-raw://4632c341a06ba5c079b51ca5a915efab4e6ab57735b37839b3e8365ff806a43e",
          "dweb:/ipfs/QmTHT3xHYed2wajEoA5qu7ii2BxLpPhQZHwAhtLK5Z7ANK"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/utils/Address.sol": {
        "keccak256": "0x2ccf9d2313a313d41a791505f2b5abfdc62191b5d4334f7f7a82691c088a1c87",
        "urls": [
          "bzz-raw://b3a57d0854b2fdce6ebff933a48dca2445643d1eccfc27f00292e937f26c6a58",
          "dweb:/ipfs/QmW45rZooS9TqR4YXUbjRbtf2Bpb5ouSarBvfW1LdGprvV"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/utils/Context.sol": {
        "keccak256": "0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7",
        "urls": [
          "bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92",
          "dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/utils/Strings.sol": {
        "keccak256": "0x32c202bd28995dd20c4347b7c6467a6d3241c74c8ad3edcbb610cd9205916c45",
        "urls": [
          "bzz-raw://8179c356adb19e70d6b31a1eedc8c5c7f0c00e669e2540f4099e3844c6074d30",
          "dweb:/ipfs/QmWFbivarEobbqhS1go64ootVuHfVohBseerYy9FTEd1W2"
        ],
        "license": "MIT"
      },
      "node_modules/@uma/core/contracts/common/implementation/AddressWhitelist.sol": {
        "keccak256": "0xc1f20b925f9d37230aaf7bbee536f9a9b08e4772864f0a243ff1b69b54710fee",
        "urls": [
          "bzz-raw://55bc6782bd269463214dbafa8702b2ff33910fd4a51ab24d775aabb15e278bcc",
          "dweb:/ipfs/QmV41DnGByGBtg8gk7MG6Nr3xYo5R5varZ8cewywdKNATQ"
        ],
        "license": "AGPL-3.0-only"
      },
      "node_modules/@uma/core/contracts/common/implementation/AncillaryData.sol": {
        "keccak256": "0x8ff33ac32d3e6de25de9e0ac2c0ff9a621f187fa97e9ee84092b327471baa3ce",
        "urls": [
          "bzz-raw://0bbaed49756e8cf7ef405e132f441cd7a735ac6186a200b0179147e7d137b74a",
          "dweb:/ipfs/QmeSBJX5a61LZPxbkUKS2NF4LSxemgDwjD65fCAmyP7PX2"
        ],
        "license": "AGPL-3.0-only"
      },
      "node_modules/@uma/core/contracts/common/implementation/ExpandedERC20.sol": {
        "keccak256": "0x8201459d3f78a1f97da7c421f2fbb859924d4facfc5fc235ba65d85bf12b2229",
        "urls": [
          "bzz-raw://990c055523abe059c0e3e9dc0d631b17db960899dbfcfb2c562bc1ed9de8f140",
          "dweb:/ipfs/QmNgQP68bBrZvP2Rs4TdpESS3LFxqGgtTELZ1wm5mZqh4K"
        ],
        "license": "AGPL-3.0-only"
      },
      "node_modules/@uma/core/contracts/common/implementation/Lockable.sol": {
        "keccak256": "0x41d78fcce54598ad5f26bc0b778c0f4fedbd836401625e49e736979f69a87ef0",
        "urls": [
          "bzz-raw://4ce111bb50441ef5125e7d42284f6debbc17fd589515d7b8cede7e9d1d5f0ede",
          "dweb:/ipfs/QmaXiXACWVEDDHoCHNXdVBoNpf8QNHkUZ1kf5MfbxfL6jj"
        ],
        "license": "AGPL-3.0-only"
      },
      "node_modules/@uma/core/contracts/common/implementation/MultiRole.sol": {
        "keccak256": "0x134c5a2f847832705be631f2b4eb2a3e23a91a2f0e63560abb481e85eeebfae6",
        "urls": [
          "bzz-raw://f1267c6ad560d1eb896575919ecca13759bf50bb82d1215e03fc1f0424ec37a6",
          "dweb:/ipfs/QmXewGxpSmSMGYmT6ZUyxCVzy2cybxicbnyCn8w87m5mo3"
        ],
        "license": "AGPL-3.0-only"
      },
      "node_modules/@uma/core/contracts/common/interfaces/AddressWhitelistInterface.sol": {
        "keccak256": "0x22fb8588dff1d5cff76a28111d6c9b190765d99facd93c8ff3b54771f245c0d8",
        "urls": [
          "bzz-raw://5ecd993f00de290a3c7bf21da23a9439cf2ccb22028316df92b79780ac8aa533",
          "dweb:/ipfs/QmTZ7x7U4EEzTacqapzSdFs2np5WNsqm4XeUBqzQxxDJei"
        ],
        "license": "AGPL-3.0-only"
      },
      "node_modules/@uma/core/contracts/common/interfaces/ExpandedIERC20.sol": {
        "keccak256": "0xb8252039cba45f1c19cd677f150a9823a5d6e1845cad90e3041d97c96f273c26",
        "urls": [
          "bzz-raw://95106656c95e12c30a2a4c482a859df6df55c3b56bb9f7835eb5c685ca3175d3",
          "dweb:/ipfs/QmcuJoX7T53vTCDcQK8WcCJdT1LzHS35vPmSVfg1DG32cd"
        ],
        "license": "AGPL-3.0-only"
      },
      "node_modules/@uma/core/contracts/data-verification-mechanism/implementation/Constants.sol": {
        "keccak256": "0xe40957105a9240c6bcb9753fd0011fe9f382c437cd6771c57bf7a96f8ceb9c84",
        "urls": [
          "bzz-raw://cbf0d25e841b1f5c4022d09fb29220cb428139443cb29c4ab8dbfff71dffcc05",
          "dweb:/ipfs/QmSVVr5wH1tZi6WmKyuy1K8yS6JN4DeK5kWaZpPKtXiqkK"
        ],
        "license": "AGPL-3.0-only"
      },
      "node_modules/@uma/core/contracts/data-verification-mechanism/interfaces/FinderInterface.sol": {
        "keccak256": "0x9166fbfe08e954eb86d33c114fcde7ce4fd0dda5d9d28b31210582bfc769fa86",
        "urls": [
          "bzz-raw://e611e12bcaaebfdf65b67c566ff1d34708e757f01a445bd87c55862e89383b81",
          "dweb:/ipfs/QmYNSq5oopTShdS6j4VWKqoLxmQSRKmWebCxw6K4LfmKrf"
        ],
        "license": "AGPL-3.0-only"
      },
      "node_modules/@uma/core/contracts/optimistic-oracle-v3/implementation/ClaimData.sol": {
        "keccak256": "0x6e887a70326e5ede4a8c5002d4123a8c77b477ce58cf92533c38cd3dc6142cb5",
        "urls": [
          "bzz-raw://bdafa7c59d0825da944c46664bddb1203bb4158dd0e1ddd6bbdeb276e66be0f8",
          "dweb:/ipfs/QmVb496JWqBib55HX6G3iPkAMv64Bj2UDegeVEYiNcYuDZ"
        ],
        "license": "AGPL-3.0-only"
      },
      "node_modules/@uma/core/contracts/optimistic-oracle-v3/interfaces/OptimisticOracleV3CallbackRecipientInterface.sol": {
        "keccak256": "0x79f90bc84ed5d394380e99f0a5d1b219abd9016bc3a02fad0099014af08af03e",
        "urls": [
          "bzz-raw://dc1b7b847eb711750bc76ab45a13294b05fc09e361294a6bdffb90cb15f50b63",
          "dweb:/ipfs/QmQSs2R7mmGojGdNkqP75Vf7LajRkfJ1oGuYAUCHYGmPEQ"
        ],
        "license": "AGPL-3.0-only"
      },
      "node_modules/@uma/core/contracts/optimistic-oracle-v3/interfaces/OptimisticOracleV3Interface.sol": {
        "keccak256": "0xf31322bfd64854f0bfa92051d6ec711c1eed15d8042f394f5c24c05378218367",
        "urls": [
          "bzz-raw://535bc2a6060e86a49524fd3c0062afcf83077530cefb3c1b8179b832f03ca81e",
          "dweb:/ipfs/QmQZhqn6oUiebSWEKbqcmiMGkqAb8B59WsRAyFU8WY84ct"
        ],
        "license": "AGPL-3.0-only"
      }
    },
    "version": 1
  },
  "ast": {
    "absolutePath": "contracts/CarbonUMArket.sol",
    "id": 1001,
    "exportedSymbols": {
      "Address": [
        45703
      ],
      "AddressWhitelist": [
        46522
      ],
      "AddressWhitelistInterface": [
        49852
      ],
      "CarbonUMArket": [
        1000
      ],
      "ClaimData": [
        46930
      ],
      "Context": [
        45725
      ],
      "ERC20": [
        45081
      ],
      "Exclusive": [
        49015
      ],
      "ExpandedERC20": [
        47153
      ],
      "ExpandedIERC20": [
        49900
      ],
      "FinderInterface": [
        50474
      ],
      "IERC20": [
        45159
      ],
      "IERC20Metadata": [
        45184
      ],
      "Lockable": [
        48863
      ],
      "MultiRole": [
        49567
      ],
      "OptimisticOracleConstraints": [
        49954
      ],
      "OptimisticOracleV3CallbackRecipientInterface": [
        52517
      ],
      "OptimisticOracleV3Interface": [
        52707
      ],
      "OracleInterfaces": [
        49949
      ],
      "Ownable": [
        44493
      ],
      "SafeERC20": [
        45408
      ],
      "Shared": [
        49111
      ],
      "Strings": [
        45928
      ]
    },
    "nodeType": "SourceUnit",
    "src": "42:13431:0",
    "nodes": [
      {
        "id": 1,
        "nodeType": "PragmaDirective",
        "src": "42:24:0",
        "nodes": [],
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".12"
        ]
      },
      {
        "id": 2,
        "nodeType": "ImportDirective",
        "src": "68:72:0",
        "nodes": [],
        "absolutePath": "node_modules/@uma/core/contracts/common/implementation/AddressWhitelist.sol",
        "file": "@uma/core/contracts/common/implementation/AddressWhitelist.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 1001,
        "sourceUnit": 46523,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 3,
        "nodeType": "ImportDirective",
        "src": "141:69:0",
        "nodes": [],
        "absolutePath": "node_modules/@uma/core/contracts/common/implementation/ExpandedERC20.sol",
        "file": "@uma/core/contracts/common/implementation/ExpandedERC20.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 1001,
        "sourceUnit": 47154,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 4,
        "nodeType": "ImportDirective",
        "src": "211:86:0",
        "nodes": [],
        "absolutePath": "node_modules/@uma/core/contracts/data-verification-mechanism/implementation/Constants.sol",
        "file": "@uma/core/contracts/data-verification-mechanism/implementation/Constants.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 1001,
        "sourceUnit": 49955,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 5,
        "nodeType": "ImportDirective",
        "src": "298:88:0",
        "nodes": [],
        "absolutePath": "node_modules/@uma/core/contracts/data-verification-mechanism/interfaces/FinderInterface.sol",
        "file": "@uma/core/contracts/data-verification-mechanism/interfaces/FinderInterface.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 1001,
        "sourceUnit": 50475,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 6,
        "nodeType": "ImportDirective",
        "src": "387:79:0",
        "nodes": [],
        "absolutePath": "node_modules/@uma/core/contracts/optimistic-oracle-v3/implementation/ClaimData.sol",
        "file": "@uma/core/contracts/optimistic-oracle-v3/implementation/ClaimData.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 1001,
        "sourceUnit": 51016,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 7,
        "nodeType": "ImportDirective",
        "src": "467:93:0",
        "nodes": [],
        "absolutePath": "node_modules/@uma/core/contracts/optimistic-oracle-v3/interfaces/OptimisticOracleV3Interface.sol",
        "file": "@uma/core/contracts/optimistic-oracle-v3/interfaces/OptimisticOracleV3Interface.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 1001,
        "sourceUnit": 52708,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 8,
        "nodeType": "ImportDirective",
        "src": "561:110:0",
        "nodes": [],
        "absolutePath": "node_modules/@uma/core/contracts/optimistic-oracle-v3/interfaces/OptimisticOracleV3CallbackRecipientInterface.sol",
        "file": "@uma/core/contracts/optimistic-oracle-v3/interfaces/OptimisticOracleV3CallbackRecipientInterface.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 1001,
        "sourceUnit": 52518,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 9,
        "nodeType": "ImportDirective",
        "src": "672:65:0",
        "nodes": [],
        "absolutePath": "node_modules/@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
        "file": "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 1001,
        "sourceUnit": 45409,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 10,
        "nodeType": "ImportDirective",
        "src": "738:51:0",
        "nodes": [],
        "absolutePath": "node_modules/@openzeppelin/contracts/utils/Strings.sol",
        "file": "@openzeppelin/contracts/utils/Strings.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 1001,
        "sourceUnit": 45929,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 1000,
        "nodeType": "ContractDefinition",
        "src": "823:12649:0",
        "nodes": [
          {
            "id": 16,
            "nodeType": "UsingForDirective",
            "src": "900:27:0",
            "nodes": [],
            "global": false,
            "libraryName": {
              "id": 13,
              "name": "SafeERC20",
              "nameLocations": [
                "906:9:0"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 45408,
              "src": "906:9:0"
            },
            "typeName": {
              "id": 15,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 14,
                "name": "IERC20",
                "nameLocations": [
                  "920:6:0"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 45159,
                "src": "920:6:0"
              },
              "referencedDeclaration": 45159,
              "src": "920:6:0",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IERC20_$45159",
                "typeString": "contract IERC20"
              }
            }
          },
          {
            "id": 19,
            "nodeType": "VariableDeclaration",
            "src": "980:32:0",
            "nodes": [],
            "constant": false,
            "functionSelector": "e5a6b10f",
            "mutability": "immutable",
            "name": "currency",
            "nameLocation": "1004:8:0",
            "scope": 1000,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_IERC20_$45159",
              "typeString": "contract IERC20"
            },
            "typeName": {
              "id": 18,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 17,
                "name": "IERC20",
                "nameLocations": [
                  "980:6:0"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 45159,
                "src": "980:6:0"
              },
              "referencedDeclaration": 45159,
              "src": "980:6:0",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IERC20_$45159",
                "typeString": "contract IERC20"
              }
            },
            "visibility": "public"
          },
          {
            "id": 22,
            "nodeType": "VariableDeclaration",
            "src": "1018:47:0",
            "nodes": [],
            "constant": false,
            "functionSelector": "8921a614",
            "mutability": "immutable",
            "name": "oo",
            "nameLocation": "1063:2:0",
            "scope": 1000,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_OptimisticOracleV3Interface_$52707",
              "typeString": "contract OptimisticOracleV3Interface"
            },
            "typeName": {
              "id": 21,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 20,
                "name": "OptimisticOracleV3Interface",
                "nameLocations": [
                  "1018:27:0"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 52707,
                "src": "1018:27:0"
              },
              "referencedDeclaration": 52707,
              "src": "1018:27:0",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_OptimisticOracleV3Interface_$52707",
                "typeString": "contract OptimisticOracleV3Interface"
              }
            },
            "visibility": "public"
          },
          {
            "id": 25,
            "nodeType": "VariableDeclaration",
            "src": "1071:42:0",
            "nodes": [],
            "constant": false,
            "functionSelector": "af2b57ce",
            "mutability": "mutable",
            "name": "data_oo",
            "nameLocation": "1106:7:0",
            "scope": 1000,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_OptimisticOracleV3Interface_$52707",
              "typeString": "contract OptimisticOracleV3Interface"
            },
            "typeName": {
              "id": 24,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 23,
                "name": "OptimisticOracleV3Interface",
                "nameLocations": [
                  "1071:27:0"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 52707,
                "src": "1071:27:0"
              },
              "referencedDeclaration": 52707,
              "src": "1071:27:0",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_OptimisticOracleV3Interface_$52707",
                "typeString": "contract OptimisticOracleV3Interface"
              }
            },
            "visibility": "public"
          },
          {
            "id": 28,
            "nodeType": "VariableDeclaration",
            "src": "1119:52:0",
            "nodes": [],
            "constant": true,
            "functionSelector": "b75d4e24",
            "mutability": "constant",
            "name": "assertionLiveness",
            "nameLocation": "1142:17:0",
            "scope": 1000,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint64",
              "typeString": "uint64"
            },
            "typeName": {
              "id": 26,
              "name": "uint64",
              "nodeType": "ElementaryTypeName",
              "src": "1119:6:0",
              "typeDescriptions": {
                "typeIdentifier": "t_uint64",
                "typeString": "uint64"
              }
            },
            "value": {
              "hexValue": "32",
              "id": 27,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "1162:9:0",
              "subdenomination": "minutes",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_120_by_1",
                "typeString": "int_const 120"
              },
              "value": "2"
            },
            "visibility": "public"
          },
          {
            "id": 31,
            "nodeType": "VariableDeclaration",
            "src": "1177:46:0",
            "nodes": [],
            "constant": true,
            "functionSelector": "3f6d8256",
            "mutability": "constant",
            "name": "validatorFee",
            "nameLocation": "1200:12:0",
            "scope": 1000,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint64",
              "typeString": "uint64"
            },
            "typeName": {
              "id": 29,
              "name": "uint64",
              "nodeType": "ElementaryTypeName",
              "src": "1177:6:0",
              "typeDescriptions": {
                "typeIdentifier": "t_uint64",
                "typeString": "uint64"
              }
            },
            "value": {
              "hexValue": "302e303031653138",
              "id": 30,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "1215:8:0",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_1000000000000000_by_1",
                "typeString": "int_const 1000000000000000"
              },
              "value": "0.001e18"
            },
            "visibility": "public"
          },
          {
            "id": 33,
            "nodeType": "VariableDeclaration",
            "src": "1229:42:0",
            "nodes": [],
            "constant": false,
            "functionSelector": "d509b017",
            "mutability": "immutable",
            "name": "defaultIdentifier",
            "nameLocation": "1254:17:0",
            "scope": 1000,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bytes32",
              "typeString": "bytes32"
            },
            "typeName": {
              "id": 32,
              "name": "bytes32",
              "nodeType": "ElementaryTypeName",
              "src": "1229:7:0",
              "typeDescriptions": {
                "typeIdentifier": "t_bytes32",
                "typeString": "bytes32"
              }
            },
            "visibility": "public"
          },
          {
            "id": 57,
            "nodeType": "StructDefinition",
            "src": "1283:780:0",
            "nodes": [],
            "canonicalName": "CarbonUMArket.Market",
            "members": [
              {
                "constant": false,
                "id": 35,
                "mutability": "mutable",
                "name": "owner",
                "nameLocation": "1315:5:0",
                "nodeType": "VariableDeclaration",
                "scope": 57,
                "src": "1307:13:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                },
                "typeName": {
                  "id": 34,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "1307:7:0",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 37,
                "mutability": "mutable",
                "name": "requiredBond",
                "nameLocation": "1338:12:0",
                "nodeType": "VariableDeclaration",
                "scope": 57,
                "src": "1330:20:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 36,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "1330:7:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 39,
                "mutability": "mutable",
                "name": "reward",
                "nameLocation": "1368:6:0",
                "nodeType": "VariableDeclaration",
                "scope": 57,
                "src": "1360:14:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 38,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "1360:7:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 41,
                "mutability": "mutable",
                "name": "creditCap",
                "nameLocation": "1475:9:0",
                "nodeType": "VariableDeclaration",
                "scope": 57,
                "src": "1467:17:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 40,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "1467:7:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 44,
                "mutability": "mutable",
                "name": "carbonCredit",
                "nameLocation": "1518:12:0",
                "nodeType": "VariableDeclaration",
                "scope": 57,
                "src": "1503:27:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_contract$_ExpandedIERC20_$49900",
                  "typeString": "contract ExpandedIERC20"
                },
                "typeName": {
                  "id": 43,
                  "nodeType": "UserDefinedTypeName",
                  "pathNode": {
                    "id": 42,
                    "name": "ExpandedIERC20",
                    "nameLocations": [
                      "1503:14:0"
                    ],
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 49900,
                    "src": "1503:14:0"
                  },
                  "referencedDeclaration": 49900,
                  "src": "1503:14:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_ExpandedIERC20_$49900",
                    "typeString": "contract ExpandedIERC20"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 47,
                "mutability": "mutable",
                "name": "convertibleCarbonCredit",
                "nameLocation": "1626:23:0",
                "nodeType": "VariableDeclaration",
                "scope": 57,
                "src": "1611:38:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_contract$_ExpandedIERC20_$49900",
                  "typeString": "contract ExpandedIERC20"
                },
                "typeName": {
                  "id": 46,
                  "nodeType": "UserDefinedTypeName",
                  "pathNode": {
                    "id": 45,
                    "name": "ExpandedIERC20",
                    "nameLocations": [
                      "1611:14:0"
                    ],
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 49900,
                    "src": "1611:14:0"
                  },
                  "referencedDeclaration": 49900,
                  "src": "1611:14:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_ExpandedIERC20_$49900",
                    "typeString": "contract ExpandedIERC20"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 50,
                "mutability": "mutable",
                "name": "validatorToken",
                "nameLocation": "1755:14:0",
                "nodeType": "VariableDeclaration",
                "scope": 57,
                "src": "1740:29:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_contract$_ExpandedIERC20_$49900",
                  "typeString": "contract ExpandedIERC20"
                },
                "typeName": {
                  "id": 49,
                  "nodeType": "UserDefinedTypeName",
                  "pathNode": {
                    "id": 48,
                    "name": "ExpandedIERC20",
                    "nameLocations": [
                      "1740:14:0"
                    ],
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 49900,
                    "src": "1740:14:0"
                  },
                  "referencedDeclaration": 49900,
                  "src": "1740:14:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_ExpandedIERC20_$49900",
                    "typeString": "contract ExpandedIERC20"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 52,
                "mutability": "mutable",
                "name": "description",
                "nameLocation": "1876:11:0",
                "nodeType": "VariableDeclaration",
                "scope": 57,
                "src": "1869:18:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage_ptr",
                  "typeString": "string"
                },
                "typeName": {
                  "id": 51,
                  "name": "string",
                  "nodeType": "ElementaryTypeName",
                  "src": "1869:6:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_storage_ptr",
                    "typeString": "string"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 54,
                "mutability": "mutable",
                "name": "promiseDelivered",
                "nameLocation": "1902:16:0",
                "nodeType": "VariableDeclaration",
                "scope": 57,
                "src": "1897:21:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                },
                "typeName": {
                  "id": 53,
                  "name": "bool",
                  "nodeType": "ElementaryTypeName",
                  "src": "1897:4:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 56,
                "mutability": "mutable",
                "name": "marketState",
                "nameLocation": "1935:11:0",
                "nodeType": "VariableDeclaration",
                "scope": 57,
                "src": "1928:18:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint64",
                  "typeString": "uint64"
                },
                "typeName": {
                  "id": 55,
                  "name": "uint64",
                  "nodeType": "ElementaryTypeName",
                  "src": "1928:6:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint64",
                    "typeString": "uint64"
                  }
                },
                "visibility": "internal"
              }
            ],
            "name": "Market",
            "nameLocation": "1290:6:0",
            "scope": 1000,
            "visibility": "public"
          },
          {
            "id": 62,
            "nodeType": "StructDefinition",
            "src": "2069:81:0",
            "nodes": [],
            "canonicalName": "CarbonUMArket.AssertedMarket",
            "members": [
              {
                "constant": false,
                "id": 59,
                "mutability": "mutable",
                "name": "asserter",
                "nameLocation": "2109:8:0",
                "nodeType": "VariableDeclaration",
                "scope": 62,
                "src": "2101:16:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                },
                "typeName": {
                  "id": 58,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "2101:7:0",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 61,
                "mutability": "mutable",
                "name": "marketId",
                "nameLocation": "2135:8:0",
                "nodeType": "VariableDeclaration",
                "scope": 62,
                "src": "2127:16:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_bytes32",
                  "typeString": "bytes32"
                },
                "typeName": {
                  "id": 60,
                  "name": "bytes32",
                  "nodeType": "ElementaryTypeName",
                  "src": "2127:7:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  }
                },
                "visibility": "internal"
              }
            ],
            "name": "AssertedMarket",
            "nameLocation": "2076:14:0",
            "scope": 1000,
            "visibility": "public"
          },
          {
            "id": 67,
            "nodeType": "VariableDeclaration",
            "src": "2156:42:0",
            "nodes": [],
            "constant": false,
            "functionSelector": "7564912b",
            "mutability": "mutable",
            "name": "markets",
            "nameLocation": "2191:7:0",
            "scope": 1000,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_Market_$57_storage_$",
              "typeString": "mapping(bytes32 => struct CarbonUMArket.Market)"
            },
            "typeName": {
              "id": 66,
              "keyType": {
                "id": 63,
                "name": "bytes32",
                "nodeType": "ElementaryTypeName",
                "src": "2165:7:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_bytes32",
                  "typeString": "bytes32"
                }
              },
              "nodeType": "Mapping",
              "src": "2156:27:0",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_Market_$57_storage_$",
                "typeString": "mapping(bytes32 => struct CarbonUMArket.Market)"
              },
              "valueType": {
                "id": 65,
                "nodeType": "UserDefinedTypeName",
                "pathNode": {
                  "id": 64,
                  "name": "Market",
                  "nameLocations": [
                    "2176:6:0"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 57,
                  "src": "2176:6:0"
                },
                "referencedDeclaration": 57,
                "src": "2176:6:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_Market_$57_storage_ptr",
                  "typeString": "struct CarbonUMArket.Market"
                }
              }
            },
            "visibility": "public"
          },
          {
            "id": 72,
            "nodeType": "VariableDeclaration",
            "src": "2205:58:0",
            "nodes": [],
            "constant": false,
            "functionSelector": "d4107645",
            "mutability": "mutable",
            "name": "assertedMarkets",
            "nameLocation": "2248:15:0",
            "scope": 1000,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_AssertedMarket_$62_storage_$",
              "typeString": "mapping(bytes32 => struct CarbonUMArket.AssertedMarket)"
            },
            "typeName": {
              "id": 71,
              "keyType": {
                "id": 68,
                "name": "bytes32",
                "nodeType": "ElementaryTypeName",
                "src": "2214:7:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_bytes32",
                  "typeString": "bytes32"
                }
              },
              "nodeType": "Mapping",
              "src": "2205:35:0",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_AssertedMarket_$62_storage_$",
                "typeString": "mapping(bytes32 => struct CarbonUMArket.AssertedMarket)"
              },
              "valueType": {
                "id": 70,
                "nodeType": "UserDefinedTypeName",
                "pathNode": {
                  "id": 69,
                  "name": "AssertedMarket",
                  "nameLocations": [
                    "2225:14:0"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 62,
                  "src": "2225:14:0"
                },
                "referencedDeclaration": 62,
                "src": "2225:14:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_AssertedMarket_$62_storage_ptr",
                  "typeString": "struct CarbonUMArket.AssertedMarket"
                }
              }
            },
            "visibility": "public"
          },
          {
            "id": 84,
            "nodeType": "EventDefinition",
            "src": "2270:169:0",
            "nodes": [],
            "anonymous": false,
            "eventSelector": "1a49307b6f6ab1604ebafd15886fc4caa9e917f99e76d07d6b73e45f5713a22d",
            "name": "MarketInitialized",
            "nameLocation": "2276:17:0",
            "parameters": {
              "id": 83,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 74,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "marketId",
                  "nameLocation": "2319:8:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 84,
                  "src": "2303:24:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 73,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "2303:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 76,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "description",
                  "nameLocation": "2344:11:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 84,
                  "src": "2337:18:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 75,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "2337:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 78,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "reward",
                  "nameLocation": "2373:6:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 84,
                  "src": "2365:14:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 77,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2365:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 80,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "requiredBond",
                  "nameLocation": "2397:12:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 84,
                  "src": "2389:20:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 79,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2389:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 82,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "owner",
                  "nameLocation": "2427:5:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 84,
                  "src": "2419:13:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 81,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2419:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2293:145:0"
            }
          },
          {
            "id": 90,
            "nodeType": "EventDefinition",
            "src": "2445:105:0",
            "nodes": [],
            "anonymous": false,
            "eventSelector": "584cc08a71081fce3cb80c249a3f322d34332812916fce18435e2d1a4468fa70",
            "name": "FalsePromisedDeclared",
            "nameLocation": "2451:21:0",
            "parameters": {
              "id": 89,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 86,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "marketId",
                  "nameLocation": "2498:8:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 90,
                  "src": "2482:24:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 85,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "2482:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 88,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "assertionId",
                  "nameLocation": "2532:11:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 90,
                  "src": "2516:27:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 87,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "2516:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2472:77:0"
            }
          },
          {
            "id": 94,
            "nodeType": "EventDefinition",
            "src": "2556:47:0",
            "nodes": [],
            "anonymous": false,
            "eventSelector": "e9146184308c5e4b8f243047cc6f81dce88e004d7980502e123b02f887ab5144",
            "name": "MarketResolved",
            "nameLocation": "2562:14:0",
            "parameters": {
              "id": 93,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 92,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "marketId",
                  "nameLocation": "2593:8:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 94,
                  "src": "2577:24:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 91,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "2577:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2576:26:0"
            }
          },
          {
            "id": 102,
            "nodeType": "EventDefinition",
            "src": "2609:94:0",
            "nodes": [],
            "anonymous": false,
            "eventSelector": "b33c99b82010ff18b32d024f038afefb8096ad49050d8896e20cdd6df4e401ee",
            "name": "CreditsMinted",
            "nameLocation": "2615:13:0",
            "parameters": {
              "id": 101,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 96,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "marketId",
                  "nameLocation": "2645:8:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 102,
                  "src": "2629:24:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 95,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "2629:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 98,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "account",
                  "nameLocation": "2671:7:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 102,
                  "src": "2655:23:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 97,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2655:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 100,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "creditsMinted",
                  "nameLocation": "2688:13:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 102,
                  "src": "2680:21:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 99,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2680:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2628:74:0"
            }
          },
          {
            "id": 108,
            "nodeType": "EventDefinition",
            "src": "2709:77:0",
            "nodes": [],
            "anonymous": false,
            "eventSelector": "d2eefd4ce8a0e3945e0e703d5d36e37c6dfaa66a08807564ef3d863f76400a91",
            "name": "ValidatorRegistered",
            "nameLocation": "2715:19:0",
            "parameters": {
              "id": 107,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 104,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "marketId",
                  "nameLocation": "2751:8:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 108,
                  "src": "2735:24:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 103,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "2735:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 106,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "account",
                  "nameLocation": "2777:7:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 108,
                  "src": "2761:23:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 105,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2761:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2734:51:0"
            }
          },
          {
            "id": 118,
            "nodeType": "EventDefinition",
            "src": "2792:121:0",
            "nodes": [],
            "anonymous": false,
            "eventSelector": "64e88f38de745da960b2de2db645d82947a21a405c4943480e05ee1ca974a907",
            "name": "MarketSettled",
            "nameLocation": "2798:13:0",
            "parameters": {
              "id": 117,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 110,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "marketId",
                  "nameLocation": "2828:8:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 118,
                  "src": "2812:24:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 109,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "2812:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 112,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "account",
                  "nameLocation": "2854:7:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 118,
                  "src": "2838:23:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 111,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2838:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 114,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "individualReward",
                  "nameLocation": "2871:16:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 118,
                  "src": "2863:24:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 113,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2863:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 116,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "creditReceived",
                  "nameLocation": "2897:14:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 118,
                  "src": "2889:22:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 115,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2889:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2811:101:0"
            }
          },
          {
            "id": 144,
            "nodeType": "FunctionDefinition",
            "src": "2919:315:0",
            "nodes": [],
            "body": {
              "id": 143,
              "nodeType": "Block",
              "src": "3028:206:0",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 129,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 125,
                      "name": "currency",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 19,
                      "src": "3084:8:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20_$45159",
                        "typeString": "contract IERC20"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 127,
                          "name": "_currency",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 120,
                          "src": "3102:9:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 126,
                        "name": "IERC20",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 45159,
                        "src": "3095:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_IERC20_$45159_$",
                          "typeString": "type(contract IERC20)"
                        }
                      },
                      "id": 128,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "3095:17:0",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20_$45159",
                        "typeString": "contract IERC20"
                      }
                    },
                    "src": "3084:28:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$45159",
                      "typeString": "contract IERC20"
                    }
                  },
                  "id": 130,
                  "nodeType": "ExpressionStatement",
                  "src": "3084:28:0"
                },
                {
                  "expression": {
                    "id": 135,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 131,
                      "name": "oo",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 22,
                      "src": "3122:2:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_OptimisticOracleV3Interface_$52707",
                        "typeString": "contract OptimisticOracleV3Interface"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 133,
                          "name": "_optimisticOracleV3",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 122,
                          "src": "3155:19:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 132,
                        "name": "OptimisticOracleV3Interface",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 52707,
                        "src": "3127:27:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_OptimisticOracleV3Interface_$52707_$",
                          "typeString": "type(contract OptimisticOracleV3Interface)"
                        }
                      },
                      "id": 134,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "3127:48:0",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_OptimisticOracleV3Interface_$52707",
                        "typeString": "contract OptimisticOracleV3Interface"
                      }
                    },
                    "src": "3122:53:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_OptimisticOracleV3Interface_$52707",
                      "typeString": "contract OptimisticOracleV3Interface"
                    }
                  },
                  "id": 136,
                  "nodeType": "ExpressionStatement",
                  "src": "3122:53:0"
                },
                {
                  "expression": {
                    "id": 141,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 137,
                      "name": "defaultIdentifier",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 33,
                      "src": "3185:17:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "expression": {
                          "id": 138,
                          "name": "oo",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 22,
                          "src": "3205:2:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_OptimisticOracleV3Interface_$52707",
                            "typeString": "contract OptimisticOracleV3Interface"
                          }
                        },
                        "id": 139,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "3208:17:0",
                        "memberName": "defaultIdentifier",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 52570,
                        "src": "3205:20:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_view$__$returns$_t_bytes32_$",
                          "typeString": "function () view external returns (bytes32)"
                        }
                      },
                      "id": 140,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "3205:22:0",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "src": "3185:42:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "id": 142,
                  "nodeType": "ExpressionStatement",
                  "src": "3185:42:0"
                }
              ]
            },
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "parameters": {
              "id": 123,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 120,
                  "mutability": "mutable",
                  "name": "_currency",
                  "nameLocation": "2976:9:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 144,
                  "src": "2968:17:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 119,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2968:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 122,
                  "mutability": "mutable",
                  "name": "_optimisticOracleV3",
                  "nameLocation": "3003:19:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 144,
                  "src": "2995:27:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 121,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2995:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2930:98:0"
            },
            "returnParameters": {
              "id": 124,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3028:0:0"
            },
            "scope": 1000,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 157,
            "nodeType": "FunctionDefinition",
            "src": "3240:114:0",
            "nodes": [],
            "body": {
              "id": 156,
              "nodeType": "Block",
              "src": "3313:41:0",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "baseExpression": {
                      "id": 152,
                      "name": "markets",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 67,
                      "src": "3330:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_Market_$57_storage_$",
                        "typeString": "mapping(bytes32 => struct CarbonUMArket.Market storage ref)"
                      }
                    },
                    "id": 154,
                    "indexExpression": {
                      "id": 153,
                      "name": "marketId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 146,
                      "src": "3338:8:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "3330:17:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Market_$57_storage",
                      "typeString": "struct CarbonUMArket.Market storage ref"
                    }
                  },
                  "functionReturnParameters": 151,
                  "id": 155,
                  "nodeType": "Return",
                  "src": "3323:24:0"
                }
              ]
            },
            "functionSelector": "c3c95c7b",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getMarket",
            "nameLocation": "3249:9:0",
            "parameters": {
              "id": 147,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 146,
                  "mutability": "mutable",
                  "name": "marketId",
                  "nameLocation": "3267:8:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 157,
                  "src": "3259:16:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 145,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "3259:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3258:18:0"
            },
            "returnParameters": {
              "id": 151,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 150,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 157,
                  "src": "3298:13:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Market_$57_memory_ptr",
                    "typeString": "struct CarbonUMArket.Market"
                  },
                  "typeName": {
                    "id": 149,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 148,
                      "name": "Market",
                      "nameLocations": [
                        "3298:6:0"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 57,
                      "src": "3298:6:0"
                    },
                    "referencedDeclaration": 57,
                    "src": "3298:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Market_$57_storage_ptr",
                      "typeString": "struct CarbonUMArket.Market"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3297:15:0"
            },
            "scope": 1000,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 349,
            "nodeType": "FunctionDefinition",
            "src": "3360:1955:0",
            "nodes": [],
            "body": {
              "id": 348,
              "nodeType": "Block",
              "src": "3701:1614:0",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 182,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 170,
                      "name": "marketId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 168,
                      "src": "3711:8:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "expression": {
                                "id": 174,
                                "name": "block",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -4,
                                "src": "3743:5:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_block",
                                  "typeString": "block"
                                }
                              },
                              "id": 175,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "3749:6:0",
                              "memberName": "number",
                              "nodeType": "MemberAccess",
                              "src": "3743:12:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "id": 176,
                              "name": "_creditCap",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 163,
                              "src": "3757:10:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "expression": {
                                "id": 177,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "3769:3:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 178,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "3773:6:0",
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "3769:10:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 179,
                              "name": "_description",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 165,
                              "src": "3781:12:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              }
                            ],
                            "expression": {
                              "id": 172,
                              "name": "abi",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -1,
                              "src": "3732:3:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_abi",
                                "typeString": "abi"
                              }
                            },
                            "id": 173,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberLocation": "3736:6:0",
                            "memberName": "encode",
                            "nodeType": "MemberAccess",
                            "src": "3732:10:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$",
                              "typeString": "function () pure returns (bytes memory)"
                            }
                          },
                          "id": 180,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3732:62:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_memory_ptr",
                            "typeString": "bytes memory"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_bytes_memory_ptr",
                            "typeString": "bytes memory"
                          }
                        ],
                        "id": 171,
                        "name": "keccak256",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -8,
                        "src": "3722:9:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                          "typeString": "function (bytes memory) pure returns (bytes32)"
                        }
                      },
                      "id": 181,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "3722:73:0",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "src": "3711:84:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "id": 183,
                  "nodeType": "ExpressionStatement",
                  "src": "3711:84:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 193,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "baseExpression": {
                              "id": 185,
                              "name": "markets",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 67,
                              "src": "3813:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_Market_$57_storage_$",
                                "typeString": "mapping(bytes32 => struct CarbonUMArket.Market storage ref)"
                              }
                            },
                            "id": 187,
                            "indexExpression": {
                              "id": 186,
                              "name": "marketId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 168,
                              "src": "3821:8:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "3813:17:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Market_$57_storage",
                              "typeString": "struct CarbonUMArket.Market storage ref"
                            }
                          },
                          "id": 188,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "3831:5:0",
                          "memberName": "owner",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 35,
                          "src": "3813:23:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 191,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "3848:1:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 190,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "3840:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 189,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "3840:7:0",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 192,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3840:10:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "3813:37:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4d61726b657420616c726561647920657869737473",
                        "id": 194,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3852:23:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_46ed0acc43a739f69f3ca66bde80e2f591498fec7f2def66fe3bfb78561afc27",
                          "typeString": "literal_string \"Market already exists\""
                        },
                        "value": "Market already exists"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_46ed0acc43a739f69f3ca66bde80e2f591498fec7f2def66fe3bfb78561afc27",
                          "typeString": "literal_string \"Market already exists\""
                        }
                      ],
                      "id": 184,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "3805:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 195,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3805:71:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 196,
                  "nodeType": "ExpressionStatement",
                  "src": "3805:71:0"
                },
                {
                  "assignments": [
                    199
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 199,
                      "mutability": "mutable",
                      "name": "carbonCredit",
                      "nameLocation": "3910:12:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 348,
                      "src": "3895:27:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ExpandedIERC20_$49900",
                        "typeString": "contract ExpandedIERC20"
                      },
                      "typeName": {
                        "id": 198,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 197,
                          "name": "ExpandedIERC20",
                          "nameLocations": [
                            "3895:14:0"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 49900,
                          "src": "3895:14:0"
                        },
                        "referencedDeclaration": 49900,
                        "src": "3895:14:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ExpandedIERC20_$49900",
                          "typeString": "contract ExpandedIERC20"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 214,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "id": 207,
                                "name": "_description",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 165,
                                "src": "3967:12:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_string_memory_ptr",
                                  "typeString": "string memory"
                                }
                              },
                              {
                                "hexValue": "20437265646974",
                                "id": 208,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "string",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "3981:9:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_stringliteral_424540d8d72b4ea1b95d74c4e6d495aefbf3ebfe119210b86c59c07a76cec992",
                                  "typeString": "literal_string \" Credit\""
                                },
                                "value": " Credit"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_string_memory_ptr",
                                  "typeString": "string memory"
                                },
                                {
                                  "typeIdentifier": "t_stringliteral_424540d8d72b4ea1b95d74c4e6d495aefbf3ebfe119210b86c59c07a76cec992",
                                  "typeString": "literal_string \" Credit\""
                                }
                              ],
                              "expression": {
                                "id": 205,
                                "name": "abi",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -1,
                                "src": "3950:3:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_abi",
                                  "typeString": "abi"
                                }
                              },
                              "id": 206,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "memberLocation": "3954:12:0",
                              "memberName": "encodePacked",
                              "nodeType": "MemberAccess",
                              "src": "3950:16:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                                "typeString": "function () pure returns (bytes memory)"
                              }
                            },
                            "id": 209,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "3950:41:0",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          ],
                          "id": 204,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "3943:6:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_string_storage_ptr_$",
                            "typeString": "type(string storage pointer)"
                          },
                          "typeName": {
                            "id": 203,
                            "name": "string",
                            "nodeType": "ElementaryTypeName",
                            "src": "3943:6:0",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 210,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3943:49:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      {
                        "hexValue": "4343",
                        "id": 211,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3994:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_56d96069d0c85d21b8d789da2cd39ba97ceec51143707e32ecb8343eb4258a9c",
                          "typeString": "literal_string \"CC\""
                        },
                        "value": "CC"
                      },
                      {
                        "hexValue": "31",
                        "id": 212,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4000:1:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_56d96069d0c85d21b8d789da2cd39ba97ceec51143707e32ecb8343eb4258a9c",
                          "typeString": "literal_string \"CC\""
                        },
                        {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        }
                      ],
                      "id": 202,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "NewExpression",
                      "src": "3925:17:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_creation_nonpayable$_t_string_memory_ptr_$_t_string_memory_ptr_$_t_uint8_$returns$_t_contract$_ExpandedERC20_$47153_$",
                        "typeString": "function (string memory,string memory,uint8) returns (contract ExpandedERC20)"
                      },
                      "typeName": {
                        "id": 201,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 200,
                          "name": "ExpandedERC20",
                          "nameLocations": [
                            "3929:13:0"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 47153,
                          "src": "3929:13:0"
                        },
                        "referencedDeclaration": 47153,
                        "src": "3929:13:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ExpandedERC20_$47153",
                          "typeString": "contract ExpandedERC20"
                        }
                      }
                    },
                    "id": 213,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3925:77:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ExpandedERC20_$47153",
                      "typeString": "contract ExpandedERC20"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3895:107:0"
                },
                {
                  "assignments": [
                    217
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 217,
                      "mutability": "mutable",
                      "name": "convertibleCarbonCredit",
                      "nameLocation": "4027:23:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 348,
                      "src": "4012:38:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ExpandedIERC20_$49900",
                        "typeString": "contract ExpandedIERC20"
                      },
                      "typeName": {
                        "id": 216,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 215,
                          "name": "ExpandedIERC20",
                          "nameLocations": [
                            "4012:14:0"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 49900,
                          "src": "4012:14:0"
                        },
                        "referencedDeclaration": 49900,
                        "src": "4012:14:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ExpandedIERC20_$49900",
                          "typeString": "contract ExpandedIERC20"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 232,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "id": 225,
                                "name": "_description",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 165,
                                "src": "4095:12:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_string_memory_ptr",
                                  "typeString": "string memory"
                                }
                              },
                              {
                                "hexValue": "20436f6e7665727469626c6520437265646974",
                                "id": 226,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "string",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "4109:21:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_stringliteral_2546059d5732cbcc857546a8a27cd3a6c65f15ee2f244e67cd7becebf076d2a4",
                                  "typeString": "literal_string \" Convertible Credit\""
                                },
                                "value": " Convertible Credit"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_string_memory_ptr",
                                  "typeString": "string memory"
                                },
                                {
                                  "typeIdentifier": "t_stringliteral_2546059d5732cbcc857546a8a27cd3a6c65f15ee2f244e67cd7becebf076d2a4",
                                  "typeString": "literal_string \" Convertible Credit\""
                                }
                              ],
                              "expression": {
                                "id": 223,
                                "name": "abi",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -1,
                                "src": "4078:3:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_abi",
                                  "typeString": "abi"
                                }
                              },
                              "id": 224,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "memberLocation": "4082:12:0",
                              "memberName": "encodePacked",
                              "nodeType": "MemberAccess",
                              "src": "4078:16:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                                "typeString": "function () pure returns (bytes memory)"
                              }
                            },
                            "id": 227,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "4078:53:0",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          ],
                          "id": 222,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "4071:6:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_string_storage_ptr_$",
                            "typeString": "type(string storage pointer)"
                          },
                          "typeName": {
                            "id": 221,
                            "name": "string",
                            "nodeType": "ElementaryTypeName",
                            "src": "4071:6:0",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 228,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4071:61:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      {
                        "hexValue": "434343",
                        "id": 229,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4134:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_2a696f0da6ad70d56f54aa53d0287d8d7fc5a236636c48db25d77485f1e76fb4",
                          "typeString": "literal_string \"CCC\""
                        },
                        "value": "CCC"
                      },
                      {
                        "hexValue": "31",
                        "id": 230,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4141:1:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_2a696f0da6ad70d56f54aa53d0287d8d7fc5a236636c48db25d77485f1e76fb4",
                          "typeString": "literal_string \"CCC\""
                        },
                        {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        }
                      ],
                      "id": 220,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "NewExpression",
                      "src": "4053:17:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_creation_nonpayable$_t_string_memory_ptr_$_t_string_memory_ptr_$_t_uint8_$returns$_t_contract$_ExpandedERC20_$47153_$",
                        "typeString": "function (string memory,string memory,uint8) returns (contract ExpandedERC20)"
                      },
                      "typeName": {
                        "id": 219,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 218,
                          "name": "ExpandedERC20",
                          "nameLocations": [
                            "4057:13:0"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 47153,
                          "src": "4057:13:0"
                        },
                        "referencedDeclaration": 47153,
                        "src": "4057:13:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ExpandedERC20_$47153",
                          "typeString": "contract ExpandedERC20"
                        }
                      }
                    },
                    "id": 231,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4053:90:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ExpandedERC20_$47153",
                      "typeString": "contract ExpandedERC20"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4012:131:0"
                },
                {
                  "assignments": [
                    235
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 235,
                      "mutability": "mutable",
                      "name": "validatorToken",
                      "nameLocation": "4168:14:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 348,
                      "src": "4153:29:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ExpandedIERC20_$49900",
                        "typeString": "contract ExpandedIERC20"
                      },
                      "typeName": {
                        "id": 234,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 233,
                          "name": "ExpandedIERC20",
                          "nameLocations": [
                            "4153:14:0"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 49900,
                          "src": "4153:14:0"
                        },
                        "referencedDeclaration": 49900,
                        "src": "4153:14:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ExpandedIERC20_$49900",
                          "typeString": "contract ExpandedIERC20"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 250,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "id": 243,
                                "name": "_description",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 165,
                                "src": "4227:12:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_string_memory_ptr",
                                  "typeString": "string memory"
                                }
                              },
                              {
                                "hexValue": "2056616c696461746f7220546f6b656e",
                                "id": 244,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "string",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "4241:18:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_stringliteral_ed13702698f546a5fbffb712c8493cea018bcc92439c2680fa6a578a2f2de71b",
                                  "typeString": "literal_string \" Validator Token\""
                                },
                                "value": " Validator Token"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_string_memory_ptr",
                                  "typeString": "string memory"
                                },
                                {
                                  "typeIdentifier": "t_stringliteral_ed13702698f546a5fbffb712c8493cea018bcc92439c2680fa6a578a2f2de71b",
                                  "typeString": "literal_string \" Validator Token\""
                                }
                              ],
                              "expression": {
                                "id": 241,
                                "name": "abi",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -1,
                                "src": "4210:3:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_abi",
                                  "typeString": "abi"
                                }
                              },
                              "id": 242,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "memberLocation": "4214:12:0",
                              "memberName": "encodePacked",
                              "nodeType": "MemberAccess",
                              "src": "4210:16:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                                "typeString": "function () pure returns (bytes memory)"
                              }
                            },
                            "id": 245,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "4210:50:0",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          ],
                          "id": 240,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "4203:6:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_string_storage_ptr_$",
                            "typeString": "type(string storage pointer)"
                          },
                          "typeName": {
                            "id": 239,
                            "name": "string",
                            "nodeType": "ElementaryTypeName",
                            "src": "4203:6:0",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 246,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4203:58:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      {
                        "hexValue": "5654",
                        "id": 247,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4263:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_fb5bac070e56bbdb9efaedc013f6db4d6a9a7aa99ac0c2ecd00a4ebddcf8275b",
                          "typeString": "literal_string \"VT\""
                        },
                        "value": "VT"
                      },
                      {
                        "hexValue": "31",
                        "id": 248,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4269:1:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_fb5bac070e56bbdb9efaedc013f6db4d6a9a7aa99ac0c2ecd00a4ebddcf8275b",
                          "typeString": "literal_string \"VT\""
                        },
                        {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        }
                      ],
                      "id": 238,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "NewExpression",
                      "src": "4185:17:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_creation_nonpayable$_t_string_memory_ptr_$_t_string_memory_ptr_$_t_uint8_$returns$_t_contract$_ExpandedERC20_$47153_$",
                        "typeString": "function (string memory,string memory,uint8) returns (contract ExpandedERC20)"
                      },
                      "typeName": {
                        "id": 237,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 236,
                          "name": "ExpandedERC20",
                          "nameLocations": [
                            "4189:13:0"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 47153,
                          "src": "4189:13:0"
                        },
                        "referencedDeclaration": 47153,
                        "src": "4189:13:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ExpandedERC20_$47153",
                          "typeString": "contract ExpandedERC20"
                        }
                      }
                    },
                    "id": 249,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4185:86:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ExpandedERC20_$47153",
                      "typeString": "contract ExpandedERC20"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4153:118:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 256,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "4313:4:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_CarbonUMArket_$1000",
                              "typeString": "contract CarbonUMArket"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_CarbonUMArket_$1000",
                              "typeString": "contract CarbonUMArket"
                            }
                          ],
                          "id": 255,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "4305:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 254,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "4305:7:0",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 257,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4305:13:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 251,
                        "name": "carbonCredit",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 199,
                        "src": "4282:12:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ExpandedIERC20_$49900",
                          "typeString": "contract ExpandedIERC20"
                        }
                      },
                      "id": 253,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "4295:9:0",
                      "memberName": "addMinter",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 49889,
                      "src": "4282:22:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 258,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4282:37:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 259,
                  "nodeType": "ExpressionStatement",
                  "src": "4282:37:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 265,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "4371:4:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_CarbonUMArket_$1000",
                              "typeString": "contract CarbonUMArket"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_CarbonUMArket_$1000",
                              "typeString": "contract CarbonUMArket"
                            }
                          ],
                          "id": 264,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "4363:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 263,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "4363:7:0",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 266,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4363:13:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 260,
                        "name": "convertibleCarbonCredit",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 217,
                        "src": "4329:23:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ExpandedIERC20_$49900",
                          "typeString": "contract ExpandedIERC20"
                        }
                      },
                      "id": 262,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "4353:9:0",
                      "memberName": "addMinter",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 49889,
                      "src": "4329:33:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 267,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4329:48:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 268,
                  "nodeType": "ExpressionStatement",
                  "src": "4329:48:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 274,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "4420:4:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_CarbonUMArket_$1000",
                              "typeString": "contract CarbonUMArket"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_CarbonUMArket_$1000",
                              "typeString": "contract CarbonUMArket"
                            }
                          ],
                          "id": 273,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "4412:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 272,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "4412:7:0",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 275,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4412:13:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 269,
                        "name": "validatorToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 235,
                        "src": "4387:14:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ExpandedIERC20_$49900",
                          "typeString": "contract ExpandedIERC20"
                        }
                      },
                      "id": 271,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "4402:9:0",
                      "memberName": "addMinter",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 49889,
                      "src": "4387:24:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 276,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4387:39:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 277,
                  "nodeType": "ExpressionStatement",
                  "src": "4387:39:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 283,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "4476:4:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_CarbonUMArket_$1000",
                              "typeString": "contract CarbonUMArket"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_CarbonUMArket_$1000",
                              "typeString": "contract CarbonUMArket"
                            }
                          ],
                          "id": 282,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "4468:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 281,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "4468:7:0",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 284,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4468:13:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 278,
                        "name": "carbonCredit",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 199,
                        "src": "4445:12:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ExpandedIERC20_$49900",
                          "typeString": "contract ExpandedIERC20"
                        }
                      },
                      "id": 280,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "4458:9:0",
                      "memberName": "addBurner",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 49894,
                      "src": "4445:22:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 285,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4445:37:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 286,
                  "nodeType": "ExpressionStatement",
                  "src": "4445:37:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 292,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "4534:4:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_CarbonUMArket_$1000",
                              "typeString": "contract CarbonUMArket"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_CarbonUMArket_$1000",
                              "typeString": "contract CarbonUMArket"
                            }
                          ],
                          "id": 291,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "4526:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 290,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "4526:7:0",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 293,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4526:13:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 287,
                        "name": "convertibleCarbonCredit",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 217,
                        "src": "4492:23:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ExpandedIERC20_$49900",
                          "typeString": "contract ExpandedIERC20"
                        }
                      },
                      "id": 289,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "4516:9:0",
                      "memberName": "addBurner",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 49894,
                      "src": "4492:33:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 294,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4492:48:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 295,
                  "nodeType": "ExpressionStatement",
                  "src": "4492:48:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 301,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "4583:4:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_CarbonUMArket_$1000",
                              "typeString": "contract CarbonUMArket"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_CarbonUMArket_$1000",
                              "typeString": "contract CarbonUMArket"
                            }
                          ],
                          "id": 300,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "4575:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 299,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "4575:7:0",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 302,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4575:13:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 296,
                        "name": "validatorToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 235,
                        "src": "4550:14:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ExpandedIERC20_$49900",
                          "typeString": "contract ExpandedIERC20"
                        }
                      },
                      "id": 298,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "4565:9:0",
                      "memberName": "addBurner",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 49894,
                      "src": "4550:24:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 303,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4550:39:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 304,
                  "nodeType": "ExpressionStatement",
                  "src": "4550:39:0"
                },
                {
                  "expression": {
                    "id": 321,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 305,
                        "name": "markets",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 67,
                        "src": "4601:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_Market_$57_storage_$",
                          "typeString": "mapping(bytes32 => struct CarbonUMArket.Market storage ref)"
                        }
                      },
                      "id": 307,
                      "indexExpression": {
                        "id": 306,
                        "name": "marketId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 168,
                        "src": "4609:8:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "4601:17:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Market_$57_storage",
                        "typeString": "struct CarbonUMArket.Market storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "expression": {
                            "id": 309,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "4649:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 310,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "4653:6:0",
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "4649:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        {
                          "id": 311,
                          "name": "_requiredBond",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 161,
                          "src": "4687:13:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "id": 312,
                          "name": "_reward",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 159,
                          "src": "4722:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "id": 313,
                          "name": "_creditCap",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 163,
                          "src": "4754:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "id": 314,
                          "name": "carbonCredit",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 199,
                          "src": "4792:12:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_ExpandedIERC20_$49900",
                            "typeString": "contract ExpandedIERC20"
                          }
                        },
                        {
                          "id": 315,
                          "name": "convertibleCarbonCredit",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 217,
                          "src": "4843:23:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_ExpandedIERC20_$49900",
                            "typeString": "contract ExpandedIERC20"
                          }
                        },
                        {
                          "id": 316,
                          "name": "validatorToken",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 235,
                          "src": "4896:14:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_ExpandedIERC20_$49900",
                            "typeString": "contract ExpandedIERC20"
                          }
                        },
                        {
                          "id": 317,
                          "name": "_description",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 165,
                          "src": "4937:12:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_memory_ptr",
                            "typeString": "string memory"
                          }
                        },
                        {
                          "hexValue": "74727565",
                          "id": 318,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "4981:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "true"
                        },
                        {
                          "hexValue": "30",
                          "id": 319,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "5012:1:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_contract$_ExpandedIERC20_$49900",
                            "typeString": "contract ExpandedIERC20"
                          },
                          {
                            "typeIdentifier": "t_contract$_ExpandedIERC20_$49900",
                            "typeString": "contract ExpandedIERC20"
                          },
                          {
                            "typeIdentifier": "t_contract$_ExpandedIERC20_$49900",
                            "typeString": "contract ExpandedIERC20"
                          },
                          {
                            "typeIdentifier": "t_string_memory_ptr",
                            "typeString": "string memory"
                          },
                          {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          }
                        ],
                        "id": 308,
                        "name": "Market",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 57,
                        "src": "4621:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_struct$_Market_$57_storage_ptr_$",
                          "typeString": "type(struct CarbonUMArket.Market storage pointer)"
                        }
                      },
                      "id": 320,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "structConstructorCall",
                      "lValueRequested": false,
                      "nameLocations": [
                        "4642:5:0",
                        "4673:12:0",
                        "4714:6:0",
                        "4743:9:0",
                        "4778:12:0",
                        "4818:23:0",
                        "4880:14:0",
                        "4924:11:0",
                        "4963:16:0",
                        "4999:11:0"
                      ],
                      "names": [
                        "owner",
                        "requiredBond",
                        "reward",
                        "creditCap",
                        "carbonCredit",
                        "convertibleCarbonCredit",
                        "validatorToken",
                        "description",
                        "promiseDelivered",
                        "marketState"
                      ],
                      "nodeType": "FunctionCall",
                      "src": "4621:403:0",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Market_$57_memory_ptr",
                        "typeString": "struct CarbonUMArket.Market memory"
                      }
                    },
                    "src": "4601:423:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Market_$57_storage",
                      "typeString": "struct CarbonUMArket.Market storage ref"
                    }
                  },
                  "id": 322,
                  "nodeType": "ExpressionStatement",
                  "src": "4601:423:0"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 325,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 323,
                      "name": "_requiredBond",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 161,
                      "src": "5039:13:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 324,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "5055:1:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "5039:17:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 338,
                  "nodeType": "IfStatement",
                  "src": "5035:90:0",
                  "trueBody": {
                    "expression": {
                      "arguments": [
                        {
                          "expression": {
                            "id": 329,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "5084:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 330,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "5088:6:0",
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "5084:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        {
                          "arguments": [
                            {
                              "id": 333,
                              "name": "this",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -28,
                              "src": "5104:4:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_CarbonUMArket_$1000",
                                "typeString": "contract CarbonUMArket"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_CarbonUMArket_$1000",
                                "typeString": "contract CarbonUMArket"
                              }
                            ],
                            "id": 332,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "5096:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 331,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "5096:7:0",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 334,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5096:13:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        {
                          "id": 335,
                          "name": "_requiredBond",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 161,
                          "src": "5111:13:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "id": 326,
                          "name": "currency",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 19,
                          "src": "5058:8:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IERC20_$45159",
                            "typeString": "contract IERC20"
                          }
                        },
                        "id": 328,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "5067:16:0",
                        "memberName": "safeTransferFrom",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 45241,
                        "src": "5058:25:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$45159_$_t_address_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20_$45159_$",
                          "typeString": "function (contract IERC20,address,address,uint256)"
                        }
                      },
                      "id": 336,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "5058:67:0",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$__$",
                        "typeString": "tuple()"
                      }
                    },
                    "id": 337,
                    "nodeType": "ExpressionStatement",
                    "src": "5058:67:0"
                  }
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 340,
                        "name": "marketId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 168,
                        "src": "5188:8:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "id": 341,
                        "name": "_description",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 165,
                        "src": "5211:12:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      {
                        "id": 342,
                        "name": "_reward",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 159,
                        "src": "5237:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 343,
                        "name": "_requiredBond",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 161,
                        "src": "5259:13:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "expression": {
                          "id": 344,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "5287:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 345,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "5291:6:0",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "5287:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 339,
                      "name": "MarketInitialized",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 84,
                      "src": "5157:17:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_bytes32_$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$_t_address_$returns$__$",
                        "typeString": "function (bytes32,string memory,uint256,uint256,address)"
                      }
                    },
                    "id": 346,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5157:151:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 347,
                  "nodeType": "EmitStatement",
                  "src": "5152:156:0"
                }
              ]
            },
            "functionSelector": "2a98b03d",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "initializeMarket",
            "nameLocation": "3369:16:0",
            "parameters": {
              "id": 166,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 159,
                  "mutability": "mutable",
                  "name": "_reward",
                  "nameLocation": "3403:7:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 349,
                  "src": "3395:15:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 158,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3395:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 161,
                  "mutability": "mutable",
                  "name": "_requiredBond",
                  "nameLocation": "3512:13:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 349,
                  "src": "3504:21:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 160,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3504:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 163,
                  "mutability": "mutable",
                  "name": "_creditCap",
                  "nameLocation": "3614:10:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 349,
                  "src": "3606:18:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 162,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3606:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 165,
                  "mutability": "mutable",
                  "name": "_description",
                  "nameLocation": "3648:12:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 349,
                  "src": "3634:26:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 164,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "3634:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3385:281:0"
            },
            "returnParameters": {
              "id": 169,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 168,
                  "mutability": "mutable",
                  "name": "marketId",
                  "nameLocation": "3691:8:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 349,
                  "src": "3683:16:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 167,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "3683:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3682:18:0"
            },
            "scope": 1000,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 366,
            "nodeType": "FunctionDefinition",
            "src": "5321:153:0",
            "nodes": [],
            "body": {
              "id": 365,
              "nodeType": "Block",
              "src": "5398:76:0",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 361,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "5456:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 362,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "5460:6:0",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "5456:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "expression": {
                          "baseExpression": {
                            "id": 356,
                            "name": "markets",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 67,
                            "src": "5415:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_Market_$57_storage_$",
                              "typeString": "mapping(bytes32 => struct CarbonUMArket.Market storage ref)"
                            }
                          },
                          "id": 358,
                          "indexExpression": {
                            "id": 357,
                            "name": "marketId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 351,
                            "src": "5423:8:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "5415:17:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Market_$57_storage",
                            "typeString": "struct CarbonUMArket.Market storage ref"
                          }
                        },
                        "id": 359,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "5433:12:0",
                        "memberName": "carbonCredit",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 44,
                        "src": "5415:30:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ExpandedIERC20_$49900",
                          "typeString": "contract ExpandedIERC20"
                        }
                      },
                      "id": 360,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "5446:9:0",
                      "memberName": "balanceOf",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 45098,
                      "src": "5415:40:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) view external returns (uint256)"
                      }
                    },
                    "id": 363,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5415:52:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 355,
                  "id": 364,
                  "nodeType": "Return",
                  "src": "5408:59:0"
                }
              ]
            },
            "functionSelector": "82f7b9ac",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "carbonCreditBalance",
            "nameLocation": "5330:19:0",
            "parameters": {
              "id": 352,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 351,
                  "mutability": "mutable",
                  "name": "marketId",
                  "nameLocation": "5358:8:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 366,
                  "src": "5350:16:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 350,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "5350:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5349:18:0"
            },
            "returnParameters": {
              "id": 355,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 354,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 366,
                  "src": "5389:7:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 353,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5389:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5388:9:0"
            },
            "scope": 1000,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 383,
            "nodeType": "FunctionDefinition",
            "src": "5480:175:0",
            "nodes": [],
            "body": {
              "id": 382,
              "nodeType": "Block",
              "src": "5568:87:0",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 378,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "5637:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 379,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "5641:6:0",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "5637:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "expression": {
                          "baseExpression": {
                            "id": 373,
                            "name": "markets",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 67,
                            "src": "5585:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_Market_$57_storage_$",
                              "typeString": "mapping(bytes32 => struct CarbonUMArket.Market storage ref)"
                            }
                          },
                          "id": 375,
                          "indexExpression": {
                            "id": 374,
                            "name": "marketId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 368,
                            "src": "5593:8:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "5585:17:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Market_$57_storage",
                            "typeString": "struct CarbonUMArket.Market storage ref"
                          }
                        },
                        "id": 376,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "5603:23:0",
                        "memberName": "convertibleCarbonCredit",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 47,
                        "src": "5585:41:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ExpandedIERC20_$49900",
                          "typeString": "contract ExpandedIERC20"
                        }
                      },
                      "id": 377,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "5627:9:0",
                      "memberName": "balanceOf",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 45098,
                      "src": "5585:51:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) view external returns (uint256)"
                      }
                    },
                    "id": 380,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5585:63:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 372,
                  "id": 381,
                  "nodeType": "Return",
                  "src": "5578:70:0"
                }
              ]
            },
            "functionSelector": "bac6d3c1",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "convertibleCarbonCreditBalance",
            "nameLocation": "5489:30:0",
            "parameters": {
              "id": 369,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 368,
                  "mutability": "mutable",
                  "name": "marketId",
                  "nameLocation": "5528:8:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 383,
                  "src": "5520:16:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 367,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "5520:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5519:18:0"
            },
            "returnParameters": {
              "id": 372,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 371,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 383,
                  "src": "5559:7:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 370,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5559:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5558:9:0"
            },
            "scope": 1000,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 395,
            "nodeType": "FunctionDefinition",
            "src": "5661:110:0",
            "nodes": [],
            "body": {
              "id": 394,
              "nodeType": "Block",
              "src": "5717:54:0",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 390,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "5753:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 391,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "5757:6:0",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "5753:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 388,
                        "name": "currency",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 19,
                        "src": "5734:8:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$45159",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 389,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "5743:9:0",
                      "memberName": "balanceOf",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 45098,
                      "src": "5734:18:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) view external returns (uint256)"
                      }
                    },
                    "id": 392,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5734:30:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 387,
                  "id": 393,
                  "nodeType": "Return",
                  "src": "5727:37:0"
                }
              ]
            },
            "functionSelector": "b0a1c1c4",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "accountBalance",
            "nameLocation": "5670:14:0",
            "parameters": {
              "id": 384,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5684:2:0"
            },
            "returnParameters": {
              "id": 387,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 386,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 395,
                  "src": "5708:7:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 385,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5708:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5707:9:0"
            },
            "scope": 1000,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 428,
            "nodeType": "FunctionDefinition",
            "src": "5777:260:0",
            "nodes": [],
            "body": {
              "id": 427,
              "nodeType": "Block",
              "src": "5843:194:0",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 409,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "baseExpression": {
                              "id": 403,
                              "name": "markets",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 67,
                              "src": "5861:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_Market_$57_storage_$",
                                "typeString": "mapping(bytes32 => struct CarbonUMArket.Market storage ref)"
                              }
                            },
                            "id": 405,
                            "indexExpression": {
                              "id": 404,
                              "name": "marketId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 397,
                              "src": "5869:8:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "5861:17:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Market_$57_storage",
                              "typeString": "struct CarbonUMArket.Market storage ref"
                            }
                          },
                          "id": 406,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "5879:5:0",
                          "memberName": "owner",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 35,
                          "src": "5861:23:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "expression": {
                            "id": 407,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "5888:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 408,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "5892:6:0",
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "5888:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "5861:37:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4f6e6c79206f776e65722063616e206368616e6765206d61726b6574207374617465",
                        "id": 410,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5900:36:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_3eeb38566e568aaf291a5371698df5b4ccce153c57a2c3f65ffc31c685eab49d",
                          "typeString": "literal_string \"Only owner can change market state\""
                        },
                        "value": "Only owner can change market state"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_3eeb38566e568aaf291a5371698df5b4ccce153c57a2c3f65ffc31c685eab49d",
                          "typeString": "literal_string \"Only owner can change market state\""
                        }
                      ],
                      "id": 402,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "5853:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 411,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5853:84:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 412,
                  "nodeType": "ExpressionStatement",
                  "src": "5853:84:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint64",
                          "typeString": "uint64"
                        },
                        "id": 416,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 414,
                          "name": "state",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 399,
                          "src": "5955:5:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint64",
                            "typeString": "uint64"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<=",
                        "rightExpression": {
                          "hexValue": "32",
                          "id": 415,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "5964:1:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_2_by_1",
                            "typeString": "int_const 2"
                          },
                          "value": "2"
                        },
                        "src": "5955:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "496e76616c6964207374617465",
                        "id": 417,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5967:15:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_93c7bfb09523d58f01b6a32948850d1d1f88882bc86f0ef13b8b0537eea45f60",
                          "typeString": "literal_string \"Invalid state\""
                        },
                        "value": "Invalid state"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_93c7bfb09523d58f01b6a32948850d1d1f88882bc86f0ef13b8b0537eea45f60",
                          "typeString": "literal_string \"Invalid state\""
                        }
                      ],
                      "id": 413,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "5947:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 418,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5947:36:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 419,
                  "nodeType": "ExpressionStatement",
                  "src": "5947:36:0"
                },
                {
                  "expression": {
                    "id": 425,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "baseExpression": {
                          "id": 420,
                          "name": "markets",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 67,
                          "src": "5993:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_Market_$57_storage_$",
                            "typeString": "mapping(bytes32 => struct CarbonUMArket.Market storage ref)"
                          }
                        },
                        "id": 422,
                        "indexExpression": {
                          "id": 421,
                          "name": "marketId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 397,
                          "src": "6001:8:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "5993:17:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Market_$57_storage",
                          "typeString": "struct CarbonUMArket.Market storage ref"
                        }
                      },
                      "id": 423,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberLocation": "6011:11:0",
                      "memberName": "marketState",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 56,
                      "src": "5993:29:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint64",
                        "typeString": "uint64"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 424,
                      "name": "state",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 399,
                      "src": "6025:5:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint64",
                        "typeString": "uint64"
                      }
                    },
                    "src": "5993:37:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint64",
                      "typeString": "uint64"
                    }
                  },
                  "id": 426,
                  "nodeType": "ExpressionStatement",
                  "src": "5993:37:0"
                }
              ]
            },
            "functionSelector": "481e9c6b",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "changeMarketState",
            "nameLocation": "5786:17:0",
            "parameters": {
              "id": 400,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 397,
                  "mutability": "mutable",
                  "name": "marketId",
                  "nameLocation": "5812:8:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 428,
                  "src": "5804:16:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 396,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "5804:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 399,
                  "mutability": "mutable",
                  "name": "state",
                  "nameLocation": "5829:5:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 428,
                  "src": "5822:12:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint64",
                    "typeString": "uint64"
                  },
                  "typeName": {
                    "id": 398,
                    "name": "uint64",
                    "nodeType": "ElementaryTypeName",
                    "src": "5822:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint64",
                      "typeString": "uint64"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5803:32:0"
            },
            "returnParameters": {
              "id": 401,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5843:0:0"
            },
            "scope": 1000,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 558,
            "nodeType": "FunctionDefinition",
            "src": "6043:1449:0",
            "nodes": [],
            "body": {
              "id": 557,
              "nodeType": "Block",
              "src": "6126:1366:0",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    437
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 437,
                      "mutability": "mutable",
                      "name": "market",
                      "nameLocation": "6151:6:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 557,
                      "src": "6136:21:0",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Market_$57_storage_ptr",
                        "typeString": "struct CarbonUMArket.Market"
                      },
                      "typeName": {
                        "id": 436,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 435,
                          "name": "Market",
                          "nameLocations": [
                            "6136:6:0"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 57,
                          "src": "6136:6:0"
                        },
                        "referencedDeclaration": 57,
                        "src": "6136:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Market_$57_storage_ptr",
                          "typeString": "struct CarbonUMArket.Market"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 441,
                  "initialValue": {
                    "baseExpression": {
                      "id": 438,
                      "name": "markets",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 67,
                      "src": "6160:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_Market_$57_storage_$",
                        "typeString": "mapping(bytes32 => struct CarbonUMArket.Market storage ref)"
                      }
                    },
                    "id": 440,
                    "indexExpression": {
                      "id": 439,
                      "name": "marketId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 430,
                      "src": "6168:8:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "6160:17:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Market_$57_storage",
                      "typeString": "struct CarbonUMArket.Market storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "6136:41:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint64",
                          "typeString": "uint64"
                        },
                        "id": 446,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 443,
                            "name": "market",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 437,
                            "src": "6205:6:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Market_$57_storage_ptr",
                              "typeString": "struct CarbonUMArket.Market storage pointer"
                            }
                          },
                          "id": 444,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "6212:11:0",
                          "memberName": "marketState",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 56,
                          "src": "6205:18:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint64",
                            "typeString": "uint64"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "hexValue": "31",
                          "id": 445,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "6227:1:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          },
                          "value": "1"
                        },
                        "src": "6205:23:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "50726f6a656374206973206e6f7420726561647920666f722061756469742079657421",
                        "id": 447,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6230:37:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c53e728b62b741ee175d6c5281b04a10473eec5e937891c9646bf92609a60671",
                          "typeString": "literal_string \"Project is not ready for audit yet!\""
                        },
                        "value": "Project is not ready for audit yet!"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_c53e728b62b741ee175d6c5281b04a10473eec5e937891c9646bf92609a60671",
                          "typeString": "literal_string \"Project is not ready for audit yet!\""
                        }
                      ],
                      "id": 442,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "6196:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 448,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6196:72:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 449,
                  "nodeType": "ExpressionStatement",
                  "src": "6196:72:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 457,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 451,
                            "name": "market",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 437,
                            "src": "6286:6:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Market_$57_storage_ptr",
                              "typeString": "struct CarbonUMArket.Market storage pointer"
                            }
                          },
                          "id": 452,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "6293:5:0",
                          "memberName": "owner",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 35,
                          "src": "6286:12:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 455,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "6310:1:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 454,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "6302:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 453,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "6302:7:0",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 456,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6302:10:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "6286:26:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4d61726b6574206e6f7420696e697469616c697a6564",
                        "id": 458,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6314:24:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_164eebb807dff45efd6d5720746c07bf7eb5f76debf860059225594abc768c14",
                          "typeString": "literal_string \"Market not initialized\""
                        },
                        "value": "Market not initialized"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_164eebb807dff45efd6d5720746c07bf7eb5f76debf860059225594abc768c14",
                          "typeString": "literal_string \"Market not initialized\""
                        }
                      ],
                      "id": 450,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "6278:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 459,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6278:61:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 460,
                  "nodeType": "ExpressionStatement",
                  "src": "6278:61:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 470,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "baseExpression": {
                              "id": 462,
                              "name": "assertedMarkets",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 72,
                              "src": "6358:15:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_AssertedMarket_$62_storage_$",
                                "typeString": "mapping(bytes32 => struct CarbonUMArket.AssertedMarket storage ref)"
                              }
                            },
                            "id": 464,
                            "indexExpression": {
                              "id": 463,
                              "name": "marketId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 430,
                              "src": "6374:8:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "6358:25:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_AssertedMarket_$62_storage",
                              "typeString": "struct CarbonUMArket.AssertedMarket storage ref"
                            }
                          },
                          "id": 465,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "6384:8:0",
                          "memberName": "asserter",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 59,
                          "src": "6358:34:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 468,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "6404:1:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 467,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "6396:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 466,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "6396:7:0",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 469,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6396:10:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "6358:48:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4d61726b657420616c7265616479206173736572746564",
                        "id": 471,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6408:25:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_d511bbfb79b029838ef29b7f5cbd550daa7f6f933c8eab8d2404f9e83f5deb2c",
                          "typeString": "literal_string \"Market already asserted\""
                        },
                        "value": "Market already asserted"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_d511bbfb79b029838ef29b7f5cbd550daa7f6f933c8eab8d2404f9e83f5deb2c",
                          "typeString": "literal_string \"Market already asserted\""
                        }
                      ],
                      "id": 461,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "6350:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 472,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6350:84:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 473,
                  "nodeType": "ExpressionStatement",
                  "src": "6350:84:0"
                },
                {
                  "assignments": [
                    475
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 475,
                      "mutability": "mutable",
                      "name": "minimumBond",
                      "nameLocation": "6528:11:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 557,
                      "src": "6520:19:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 474,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "6520:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 483,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 480,
                            "name": "currency",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 19,
                            "src": "6568:8:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IERC20_$45159",
                              "typeString": "contract IERC20"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_IERC20_$45159",
                              "typeString": "contract IERC20"
                            }
                          ],
                          "id": 479,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "6560:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 478,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "6560:7:0",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 481,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6560:17:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 476,
                        "name": "oo",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 22,
                        "src": "6542:2:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_OptimisticOracleV3Interface_$52707",
                          "typeString": "contract OptimisticOracleV3Interface"
                        }
                      },
                      "id": 477,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "6545:14:0",
                      "memberName": "getMinimumBond",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 52652,
                      "src": "6542:17:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) view external returns (uint256)"
                      }
                    },
                    "id": 482,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6542:36:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "6520:58:0"
                },
                {
                  "assignments": [
                    485
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 485,
                      "mutability": "mutable",
                      "name": "bond",
                      "nameLocation": "6631:4:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 557,
                      "src": "6623:12:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 484,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "6623:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 494,
                  "initialValue": {
                    "condition": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 489,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "expression": {
                          "id": 486,
                          "name": "market",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 437,
                          "src": "6638:6:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Market_$57_storage_ptr",
                            "typeString": "struct CarbonUMArket.Market storage pointer"
                          }
                        },
                        "id": 487,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "6645:12:0",
                        "memberName": "requiredBond",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 37,
                        "src": "6638:19:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": ">",
                      "rightExpression": {
                        "id": 488,
                        "name": "minimumBond",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 475,
                        "src": "6660:11:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "6638:33:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "falseExpression": {
                      "id": 492,
                      "name": "minimumBond",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 475,
                      "src": "6696:11:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 493,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "Conditional",
                    "src": "6638:69:0",
                    "trueExpression": {
                      "expression": {
                        "id": 490,
                        "name": "market",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 437,
                        "src": "6674:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Market_$57_storage_ptr",
                          "typeString": "struct CarbonUMArket.Market storage pointer"
                        }
                      },
                      "id": 491,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "6681:12:0",
                      "memberName": "requiredBond",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 37,
                      "src": "6674:19:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "6623:84:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 498,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "6780:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 499,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "6784:6:0",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "6780:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 502,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "6800:4:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_CarbonUMArket_$1000",
                              "typeString": "contract CarbonUMArket"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_CarbonUMArket_$1000",
                              "typeString": "contract CarbonUMArket"
                            }
                          ],
                          "id": 501,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "6792:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 500,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "6792:7:0",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 503,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6792:13:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 504,
                        "name": "bond",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 485,
                        "src": "6807:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 495,
                        "name": "currency",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 19,
                        "src": "6754:8:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$45159",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 497,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "6763:16:0",
                      "memberName": "safeTransferFrom",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 45241,
                      "src": "6754:25:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$45159_$_t_address_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20_$45159_$",
                        "typeString": "function (contract IERC20,address,address,uint256)"
                      }
                    },
                    "id": 505,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6754:58:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 506,
                  "nodeType": "ExpressionStatement",
                  "src": "6754:58:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 512,
                            "name": "oo",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 22,
                            "src": "6851:2:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_OptimisticOracleV3Interface_$52707",
                              "typeString": "contract OptimisticOracleV3Interface"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_OptimisticOracleV3Interface_$52707",
                              "typeString": "contract OptimisticOracleV3Interface"
                            }
                          ],
                          "id": 511,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "6843:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 510,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "6843:7:0",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 513,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6843:11:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 514,
                        "name": "bond",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 485,
                        "src": "6856:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 507,
                        "name": "currency",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 19,
                        "src": "6822:8:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$45159",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 509,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "6831:11:0",
                      "memberName": "safeApprove",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 45285,
                      "src": "6822:20:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$45159_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20_$45159_$",
                        "typeString": "function (contract IERC20,address,uint256)"
                      }
                    },
                    "id": 515,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6822:39:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 516,
                  "nodeType": "ExpressionStatement",
                  "src": "6822:39:0"
                },
                {
                  "expression": {
                    "id": 540,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 517,
                      "name": "assertionId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 433,
                      "src": "6879:11:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "hexValue": "54686520696e737469747574696f6e2063616e6e6f742064656c69766572207468652070726f6d6973656420616d6f756e74206f6620636172626f6e20637265646974",
                          "id": 520,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "string",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "6921:69:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_stringliteral_54ec24c240053f511d90ebd1a99b7fee571509c4555764d7be12c6fdd5b4dc55",
                            "typeString": "literal_string \"The institution cannot deliver the promised amount of carbon credit\""
                          },
                          "value": "The institution cannot deliver the promised amount of carbon credit"
                        },
                        {
                          "expression": {
                            "id": 521,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "7004:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 522,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "7008:6:0",
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "7004:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        {
                          "arguments": [
                            {
                              "id": 525,
                              "name": "this",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -28,
                              "src": "7048:4:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_CarbonUMArket_$1000",
                                "typeString": "contract CarbonUMArket"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_CarbonUMArket_$1000",
                                "typeString": "contract CarbonUMArket"
                              }
                            ],
                            "id": 524,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "7040:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 523,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "7040:7:0",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 526,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "7040:13:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 529,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "7113:1:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 528,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "7105:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 527,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "7105:7:0",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 530,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "7105:10:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        {
                          "id": 531,
                          "name": "assertionLiveness",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 28,
                          "src": "7155:17:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint64",
                            "typeString": "uint64"
                          }
                        },
                        {
                          "id": 532,
                          "name": "currency",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 19,
                          "src": "7186:8:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IERC20_$45159",
                            "typeString": "contract IERC20"
                          }
                        },
                        {
                          "id": 533,
                          "name": "bond",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 485,
                          "src": "7208:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "id": 534,
                          "name": "defaultIdentifier",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 33,
                          "src": "7226:17:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 537,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "7265:1:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 536,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "7257:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_bytes32_$",
                              "typeString": "type(bytes32)"
                            },
                            "typeName": {
                              "id": 535,
                              "name": "bytes32",
                              "nodeType": "ElementaryTypeName",
                              "src": "7257:7:0",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 538,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "7257:10:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_stringliteral_54ec24c240053f511d90ebd1a99b7fee571509c4555764d7be12c6fdd5b4dc55",
                            "typeString": "literal_string \"The institution cannot deliver the promised amount of carbon credit\""
                          },
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          {
                            "typeIdentifier": "t_uint64",
                            "typeString": "uint64"
                          },
                          {
                            "typeIdentifier": "t_contract$_IERC20_$45159",
                            "typeString": "contract IERC20"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          },
                          {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        ],
                        "expression": {
                          "id": 518,
                          "name": "oo",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 22,
                          "src": "6893:2:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_OptimisticOracleV3Interface_$52707",
                            "typeString": "contract OptimisticOracleV3Interface"
                          }
                        },
                        "id": 519,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "6896:11:0",
                        "memberName": "assertTruth",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 52614,
                        "src": "6893:14:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_nonpayable$_t_bytes_memory_ptr_$_t_address_$_t_address_$_t_address_$_t_uint64_$_t_contract$_IERC20_$45159_$_t_uint256_$_t_bytes32_$_t_bytes32_$returns$_t_bytes32_$",
                          "typeString": "function (bytes memory,address,address,address,uint64,contract IERC20,uint256,bytes32,bytes32) external returns (bytes32)"
                        }
                      },
                      "id": 539,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "6893:398:0",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "src": "6879:412:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "id": 541,
                  "nodeType": "ExpressionStatement",
                  "src": "6879:412:0"
                },
                {
                  "expression": {
                    "id": 550,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 542,
                        "name": "assertedMarkets",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 72,
                        "src": "7302:15:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_AssertedMarket_$62_storage_$",
                          "typeString": "mapping(bytes32 => struct CarbonUMArket.AssertedMarket storage ref)"
                        }
                      },
                      "id": 544,
                      "indexExpression": {
                        "id": 543,
                        "name": "assertionId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 433,
                        "src": "7318:11:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "7302:28:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_AssertedMarket_$62_storage",
                        "typeString": "struct CarbonUMArket.AssertedMarket storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "expression": {
                            "id": 546,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "7372:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 547,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "7376:6:0",
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "7372:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        {
                          "id": 548,
                          "name": "marketId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 430,
                          "src": "7406:8:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        ],
                        "id": 545,
                        "name": "AssertedMarket",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 62,
                        "src": "7333:14:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_struct$_AssertedMarket_$62_storage_ptr_$",
                          "typeString": "type(struct CarbonUMArket.AssertedMarket storage pointer)"
                        }
                      },
                      "id": 549,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "structConstructorCall",
                      "lValueRequested": false,
                      "nameLocations": [
                        "7362:8:0",
                        "7396:8:0"
                      ],
                      "names": [
                        "asserter",
                        "marketId"
                      ],
                      "nodeType": "FunctionCall",
                      "src": "7333:92:0",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_AssertedMarket_$62_memory_ptr",
                        "typeString": "struct CarbonUMArket.AssertedMarket memory"
                      }
                    },
                    "src": "7302:123:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_AssertedMarket_$62_storage",
                      "typeString": "struct CarbonUMArket.AssertedMarket storage ref"
                    }
                  },
                  "id": 551,
                  "nodeType": "ExpressionStatement",
                  "src": "7302:123:0"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 553,
                        "name": "marketId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 430,
                        "src": "7463:8:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "id": 554,
                        "name": "assertionId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 433,
                        "src": "7473:11:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      ],
                      "id": 552,
                      "name": "FalsePromisedDeclared",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 90,
                      "src": "7441:21:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_bytes32_$_t_bytes32_$returns$__$",
                        "typeString": "function (bytes32,bytes32)"
                      }
                    },
                    "id": 555,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7441:44:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 556,
                  "nodeType": "EmitStatement",
                  "src": "7436:49:0"
                }
              ]
            },
            "functionSelector": "1122cca3",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "declareFalsePromise",
            "nameLocation": "6052:19:0",
            "parameters": {
              "id": 431,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 430,
                  "mutability": "mutable",
                  "name": "marketId",
                  "nameLocation": "6080:8:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 558,
                  "src": "6072:16:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 429,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "6072:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6071:18:0"
            },
            "returnParameters": {
              "id": 434,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 433,
                  "mutability": "mutable",
                  "name": "assertionId",
                  "nameLocation": "6114:11:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 558,
                  "src": "6106:19:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 432,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "6106:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6105:21:0"
            },
            "scope": 1000,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 655,
            "nodeType": "FunctionDefinition",
            "src": "7498:872:0",
            "nodes": [],
            "body": {
              "id": 654,
              "nodeType": "Block",
              "src": "7587:783:0",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 572,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 566,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "7605:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 567,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "7609:6:0",
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "7605:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "arguments": [
                            {
                              "id": 570,
                              "name": "oo",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 22,
                              "src": "7627:2:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_OptimisticOracleV3Interface_$52707",
                                "typeString": "contract OptimisticOracleV3Interface"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_OptimisticOracleV3Interface_$52707",
                                "typeString": "contract OptimisticOracleV3Interface"
                              }
                            ],
                            "id": 569,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "7619:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 568,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "7619:7:0",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 571,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "7619:11:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "7605:25:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4f6e6c79204f4f76332063616e2063616c6c20746869732066756e6374696f6e",
                        "id": 573,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7632:34:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_55f7cd8e3d29a5df364596edec7d862e0510e2e14e392755269785b4162ad535",
                          "typeString": "literal_string \"Only OOv3 can call this function\""
                        },
                        "value": "Only OOv3 can call this function"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_55f7cd8e3d29a5df364596edec7d862e0510e2e14e392755269785b4162ad535",
                          "typeString": "literal_string \"Only OOv3 can call this function\""
                        }
                      ],
                      "id": 565,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "7597:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 574,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7597:70:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 575,
                  "nodeType": "ExpressionStatement",
                  "src": "7597:70:0"
                },
                {
                  "assignments": [
                    578
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 578,
                      "mutability": "mutable",
                      "name": "market",
                      "nameLocation": "7692:6:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 654,
                      "src": "7677:21:0",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Market_$57_storage_ptr",
                        "typeString": "struct CarbonUMArket.Market"
                      },
                      "typeName": {
                        "id": 577,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 576,
                          "name": "Market",
                          "nameLocations": [
                            "7677:6:0"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 57,
                          "src": "7677:6:0"
                        },
                        "referencedDeclaration": 57,
                        "src": "7677:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Market_$57_storage_ptr",
                          "typeString": "struct CarbonUMArket.Market"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 585,
                  "initialValue": {
                    "baseExpression": {
                      "id": 579,
                      "name": "markets",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 67,
                      "src": "7701:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_Market_$57_storage_$",
                        "typeString": "mapping(bytes32 => struct CarbonUMArket.Market storage ref)"
                      }
                    },
                    "id": 584,
                    "indexExpression": {
                      "expression": {
                        "baseExpression": {
                          "id": 580,
                          "name": "assertedMarkets",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 72,
                          "src": "7709:15:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_AssertedMarket_$62_storage_$",
                            "typeString": "mapping(bytes32 => struct CarbonUMArket.AssertedMarket storage ref)"
                          }
                        },
                        "id": 582,
                        "indexExpression": {
                          "id": 581,
                          "name": "assertionId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 560,
                          "src": "7725:11:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "7709:28:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_AssertedMarket_$62_storage",
                          "typeString": "struct CarbonUMArket.AssertedMarket storage ref"
                        }
                      },
                      "id": 583,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "7738:8:0",
                      "memberName": "marketId",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 61,
                      "src": "7709:37:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "7701:46:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Market_$57_storage",
                      "typeString": "struct CarbonUMArket.Market storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "7677:70:0"
                },
                {
                  "condition": {
                    "id": 586,
                    "name": "assertedTruthfully",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 562,
                    "src": "7770:18:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 640,
                  "nodeType": "IfStatement",
                  "src": "7766:497:0",
                  "trueBody": {
                    "id": 639,
                    "nodeType": "Block",
                    "src": "7790:473:0",
                    "statements": [
                      {
                        "expression": {
                          "id": 591,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "expression": {
                              "id": 587,
                              "name": "market",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 578,
                              "src": "7804:6:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Market_$57_storage_ptr",
                                "typeString": "struct CarbonUMArket.Market storage pointer"
                              }
                            },
                            "id": 589,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberLocation": "7811:16:0",
                            "memberName": "promiseDelivered",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 54,
                            "src": "7804:23:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "hexValue": "66616c7365",
                            "id": 590,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "bool",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "7830:5:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "value": "false"
                          },
                          "src": "7804:31:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 592,
                        "nodeType": "ExpressionStatement",
                        "src": "7804:31:0"
                      },
                      {
                        "assignments": [
                          594
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 594,
                            "mutability": "mutable",
                            "name": "minimumBond",
                            "nameLocation": "7869:11:0",
                            "nodeType": "VariableDeclaration",
                            "scope": 639,
                            "src": "7861:19:0",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 593,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "7861:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 602,
                        "initialValue": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "id": 599,
                                  "name": "currency",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 19,
                                  "src": "7909:8:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_IERC20_$45159",
                                    "typeString": "contract IERC20"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_IERC20_$45159",
                                    "typeString": "contract IERC20"
                                  }
                                ],
                                "id": 598,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "7901:7:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 597,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "7901:7:0",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 600,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "7901:17:0",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "expression": {
                              "id": 595,
                              "name": "oo",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 22,
                              "src": "7883:2:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_OptimisticOracleV3Interface_$52707",
                                "typeString": "contract OptimisticOracleV3Interface"
                              }
                            },
                            "id": 596,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "7886:14:0",
                            "memberName": "getMinimumBond",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 52652,
                            "src": "7883:17:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                              "typeString": "function (address) view external returns (uint256)"
                            }
                          },
                          "id": 601,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "7883:36:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "7861:58:0"
                      },
                      {
                        "assignments": [
                          604
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 604,
                            "mutability": "mutable",
                            "name": "bond",
                            "nameLocation": "7976:4:0",
                            "nodeType": "VariableDeclaration",
                            "scope": 639,
                            "src": "7968:12:0",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 603,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "7968:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 613,
                        "initialValue": {
                          "condition": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 608,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "expression": {
                                "id": 605,
                                "name": "market",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 578,
                                "src": "7983:6:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Market_$57_storage_ptr",
                                  "typeString": "struct CarbonUMArket.Market storage pointer"
                                }
                              },
                              "id": 606,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "7990:12:0",
                              "memberName": "requiredBond",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 37,
                              "src": "7983:19:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": ">",
                            "rightExpression": {
                              "id": 607,
                              "name": "minimumBond",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 594,
                              "src": "8005:11:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "7983:33:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "falseExpression": {
                            "id": 611,
                            "name": "minimumBond",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 594,
                            "src": "8041:11:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 612,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "Conditional",
                          "src": "7983:69:0",
                          "trueExpression": {
                            "expression": {
                              "id": 609,
                              "name": "market",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 578,
                              "src": "8019:6:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Market_$57_storage_ptr",
                                "typeString": "struct CarbonUMArket.Market storage pointer"
                              }
                            },
                            "id": 610,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "8026:12:0",
                            "memberName": "requiredBond",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 37,
                            "src": "8019:19:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "7968:84:0"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "id": 621,
                                  "name": "this",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -28,
                                  "src": "8103:4:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_CarbonUMArket_$1000",
                                    "typeString": "contract CarbonUMArket"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_CarbonUMArket_$1000",
                                    "typeString": "contract CarbonUMArket"
                                  }
                                ],
                                "id": 620,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "8095:7:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 619,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "8095:7:0",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 622,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "8095:13:0",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "arguments": [],
                              "expression": {
                                "argumentTypes": [],
                                "expression": {
                                  "expression": {
                                    "id": 623,
                                    "name": "market",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 578,
                                    "src": "8110:6:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_Market_$57_storage_ptr",
                                      "typeString": "struct CarbonUMArket.Market storage pointer"
                                    }
                                  },
                                  "id": 624,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberLocation": "8117:12:0",
                                  "memberName": "carbonCredit",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 44,
                                  "src": "8110:19:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_ExpandedIERC20_$49900",
                                    "typeString": "contract ExpandedIERC20"
                                  }
                                },
                                "id": 625,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "8130:11:0",
                                "memberName": "totalSupply",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 45090,
                                "src": "8110:31:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$",
                                  "typeString": "function () view external returns (uint256)"
                                }
                              },
                              "id": 626,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "8110:33:0",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "expression": {
                                "id": 614,
                                "name": "market",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 578,
                                "src": "8066:6:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Market_$57_storage_ptr",
                                  "typeString": "struct CarbonUMArket.Market storage pointer"
                                }
                              },
                              "id": 617,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "8073:12:0",
                              "memberName": "carbonCredit",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 44,
                              "src": "8066:19:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_ExpandedIERC20_$49900",
                                "typeString": "contract ExpandedIERC20"
                              }
                            },
                            "id": 618,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "8086:8:0",
                            "memberName": "burnFrom",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 49874,
                            "src": "8066:28:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                              "typeString": "function (address,uint256) external returns (bool)"
                            }
                          },
                          "id": 627,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "8066:78:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 628,
                        "nodeType": "ExpressionStatement",
                        "src": "8066:78:0"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "expression": {
                                "baseExpression": {
                                  "id": 632,
                                  "name": "assertedMarkets",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 72,
                                  "src": "8180:15:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_AssertedMarket_$62_storage_$",
                                    "typeString": "mapping(bytes32 => struct CarbonUMArket.AssertedMarket storage ref)"
                                  }
                                },
                                "id": 634,
                                "indexExpression": {
                                  "id": 633,
                                  "name": "assertionId",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 560,
                                  "src": "8196:11:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes32",
                                    "typeString": "bytes32"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "8180:28:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_AssertedMarket_$62_storage",
                                  "typeString": "struct CarbonUMArket.AssertedMarket storage ref"
                                }
                              },
                              "id": 635,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "8209:8:0",
                              "memberName": "asserter",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 59,
                              "src": "8180:37:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 636,
                              "name": "bond",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 604,
                              "src": "8219:4:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "id": 629,
                              "name": "currency",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 19,
                              "src": "8158:8:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC20_$45159",
                                "typeString": "contract IERC20"
                              }
                            },
                            "id": 631,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "8167:12:0",
                            "memberName": "safeTransfer",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 45215,
                            "src": "8158:21:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$45159_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20_$45159_$",
                              "typeString": "function (contract IERC20,address,uint256)"
                            }
                          },
                          "id": 637,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "8158:66:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 638,
                        "nodeType": "ExpressionStatement",
                        "src": "8158:66:0"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "id": 645,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 641,
                        "name": "market",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 578,
                        "src": "8272:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Market_$57_storage_ptr",
                          "typeString": "struct CarbonUMArket.Market storage pointer"
                        }
                      },
                      "id": 643,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberLocation": "8279:11:0",
                      "memberName": "marketState",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 56,
                      "src": "8272:18:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint64",
                        "typeString": "uint64"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "32",
                      "id": 644,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "8293:1:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_2_by_1",
                        "typeString": "int_const 2"
                      },
                      "value": "2"
                    },
                    "src": "8272:22:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint64",
                      "typeString": "uint64"
                    }
                  },
                  "id": 646,
                  "nodeType": "ExpressionStatement",
                  "src": "8272:22:0"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "expression": {
                          "baseExpression": {
                            "id": 648,
                            "name": "assertedMarkets",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 72,
                            "src": "8325:15:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_AssertedMarket_$62_storage_$",
                              "typeString": "mapping(bytes32 => struct CarbonUMArket.AssertedMarket storage ref)"
                            }
                          },
                          "id": 650,
                          "indexExpression": {
                            "id": 649,
                            "name": "assertionId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 560,
                            "src": "8341:11:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "8325:28:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_AssertedMarket_$62_storage",
                            "typeString": "struct CarbonUMArket.AssertedMarket storage ref"
                          }
                        },
                        "id": 651,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "8354:8:0",
                        "memberName": "marketId",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 61,
                        "src": "8325:37:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      ],
                      "id": 647,
                      "name": "MarketResolved",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 94,
                      "src": "8310:14:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_bytes32_$returns$__$",
                        "typeString": "function (bytes32)"
                      }
                    },
                    "id": 652,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8310:53:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 653,
                  "nodeType": "EmitStatement",
                  "src": "8305:58:0"
                }
              ]
            },
            "baseFunctions": [
              52510
            ],
            "functionSelector": "f1b156b2",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "assertionResolvedCallback",
            "nameLocation": "7507:25:0",
            "parameters": {
              "id": 563,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 560,
                  "mutability": "mutable",
                  "name": "assertionId",
                  "nameLocation": "7542:11:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 655,
                  "src": "7534:19:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 559,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "7534:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 562,
                  "mutability": "mutable",
                  "name": "assertedTruthfully",
                  "nameLocation": "7560:18:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 655,
                  "src": "7555:23:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 561,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "7555:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7532:47:0"
            },
            "returnParameters": {
              "id": 564,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7587:0:0"
            },
            "scope": 1000,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 661,
            "nodeType": "FunctionDefinition",
            "src": "8414:65:0",
            "nodes": [],
            "body": {
              "id": 660,
              "nodeType": "Block",
              "src": "8477:2:0",
              "nodes": [],
              "statements": []
            },
            "baseFunctions": [
              52516
            ],
            "functionSelector": "d448a4ec",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "assertionDisputedCallback",
            "nameLocation": "8423:25:0",
            "parameters": {
              "id": 658,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 657,
                  "mutability": "mutable",
                  "name": "assertionId",
                  "nameLocation": "8457:11:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 661,
                  "src": "8449:19:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 656,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "8449:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8448:21:0"
            },
            "returnParameters": {
              "id": 659,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "8477:0:0"
            },
            "scope": 1000,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 772,
            "nodeType": "FunctionDefinition",
            "src": "8485:921:0",
            "nodes": [],
            "body": {
              "id": 771,
              "nodeType": "Block",
              "src": "8554:852:0",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    670
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 670,
                      "mutability": "mutable",
                      "name": "market",
                      "nameLocation": "8579:6:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 771,
                      "src": "8564:21:0",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Market_$57_storage_ptr",
                        "typeString": "struct CarbonUMArket.Market"
                      },
                      "typeName": {
                        "id": 669,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 668,
                          "name": "Market",
                          "nameLocations": [
                            "8564:6:0"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 57,
                          "src": "8564:6:0"
                        },
                        "referencedDeclaration": 57,
                        "src": "8564:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Market_$57_storage_ptr",
                          "typeString": "struct CarbonUMArket.Market"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 674,
                  "initialValue": {
                    "baseExpression": {
                      "id": 671,
                      "name": "markets",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 67,
                      "src": "8588:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_Market_$57_storage_$",
                        "typeString": "mapping(bytes32 => struct CarbonUMArket.Market storage ref)"
                      }
                    },
                    "id": 673,
                    "indexExpression": {
                      "id": 672,
                      "name": "marketId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 663,
                      "src": "8596:8:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "8588:17:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Market_$57_storage",
                      "typeString": "struct CarbonUMArket.Market storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "8564:41:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint64",
                          "typeString": "uint64"
                        },
                        "id": 679,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 676,
                            "name": "market",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 670,
                            "src": "8624:6:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Market_$57_storage_ptr",
                              "typeString": "struct CarbonUMArket.Market storage pointer"
                            }
                          },
                          "id": 677,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "8631:11:0",
                          "memberName": "marketState",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 56,
                          "src": "8624:18:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint64",
                            "typeString": "uint64"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 678,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "8646:1:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "8624:23:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4d61726b657420697320636c6f73656421",
                        "id": 680,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "8649:19:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_2a7da93754b5997e873feeb9865851f9c3987117a70a3b2400729ae8c7bd5905",
                          "typeString": "literal_string \"Market is closed!\""
                        },
                        "value": "Market is closed!"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_2a7da93754b5997e873feeb9865851f9c3987117a70a3b2400729ae8c7bd5905",
                          "typeString": "literal_string \"Market is closed!\""
                        }
                      ],
                      "id": 675,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "8615:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 681,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8615:54:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 682,
                  "nodeType": "ExpressionStatement",
                  "src": "8615:54:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 690,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 684,
                            "name": "market",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 670,
                            "src": "8687:6:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Market_$57_storage_ptr",
                              "typeString": "struct CarbonUMArket.Market storage pointer"
                            }
                          },
                          "id": 685,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "8694:5:0",
                          "memberName": "owner",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 35,
                          "src": "8687:12:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 688,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "8711:1:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 687,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "8703:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 686,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "8703:7:0",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 689,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "8703:10:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "8687:26:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4d61726b6574206973206e6f7420696e697469616c697a6564",
                        "id": 691,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "8715:27:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_808af0af2523cbb6cb28126d69a5d2969c0ea69f4e938ad0e828598d140f1628",
                          "typeString": "literal_string \"Market is not initialized\""
                        },
                        "value": "Market is not initialized"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_808af0af2523cbb6cb28126d69a5d2969c0ea69f4e938ad0e828598d140f1628",
                          "typeString": "literal_string \"Market is not initialized\""
                        }
                      ],
                      "id": 683,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "8679:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 692,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8679:64:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 693,
                  "nodeType": "ExpressionStatement",
                  "src": "8679:64:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 697,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 695,
                          "name": "creditToCreate",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 665,
                          "src": "8761:14:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 696,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "8778:1:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "8761:18:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "546865206e756d626572206f66206372656469742067656e6572617465642073686f756c6420626520626967676572207468616e2030",
                        "id": 698,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "8781:56:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_7f70e9528b0264b91c93e018ea374adf5a68d0fa447317535dd41b8704ccb06b",
                          "typeString": "literal_string \"The number of credit generated should be bigger than 0\""
                        },
                        "value": "The number of credit generated should be bigger than 0"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_7f70e9528b0264b91c93e018ea374adf5a68d0fa447317535dd41b8704ccb06b",
                          "typeString": "literal_string \"The number of credit generated should be bigger than 0\""
                        }
                      ],
                      "id": 694,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "8753:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 699,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8753:85:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 700,
                  "nodeType": "ExpressionStatement",
                  "src": "8753:85:0"
                },
                {
                  "assignments": [
                    702
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 702,
                      "mutability": "mutable",
                      "name": "totalSupplyOfCarbonCredit",
                      "nameLocation": "8856:25:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 771,
                      "src": "8848:33:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 701,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "8848:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 707,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "expression": {
                          "id": 703,
                          "name": "market",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 670,
                          "src": "8884:6:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Market_$57_storage_ptr",
                            "typeString": "struct CarbonUMArket.Market storage pointer"
                          }
                        },
                        "id": 704,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "8891:12:0",
                        "memberName": "carbonCredit",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 44,
                        "src": "8884:19:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ExpandedIERC20_$49900",
                          "typeString": "contract ExpandedIERC20"
                        }
                      },
                      "id": 705,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "8904:11:0",
                      "memberName": "totalSupply",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 45090,
                      "src": "8884:31:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$",
                        "typeString": "function () view external returns (uint256)"
                      }
                    },
                    "id": 706,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8884:33:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "8848:69:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 714,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 711,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 709,
                            "name": "totalSupplyOfCarbonCredit",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 702,
                            "src": "8935:25:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "+",
                          "rightExpression": {
                            "id": 710,
                            "name": "creditToCreate",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 665,
                            "src": "8963:14:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "8935:42:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<=",
                        "rightExpression": {
                          "expression": {
                            "id": 712,
                            "name": "market",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 670,
                            "src": "8981:6:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Market_$57_storage_ptr",
                              "typeString": "struct CarbonUMArket.Market storage pointer"
                            }
                          },
                          "id": 713,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "8988:9:0",
                          "memberName": "creditCap",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 41,
                          "src": "8981:16:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "8935:62:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "hexValue": "4f6e6c7920",
                            "id": 718,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "string",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "9013:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_stringliteral_f75c09dcaed3e77d5e0fd731099ac5b856e283255484bb26ac8acc677b09f88c",
                              "typeString": "literal_string \"Only \""
                            },
                            "value": "Only "
                          },
                          {
                            "arguments": [
                              {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 724,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "expression": {
                                    "id": 721,
                                    "name": "market",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 670,
                                    "src": "9039:6:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_Market_$57_storage_ptr",
                                      "typeString": "struct CarbonUMArket.Market storage pointer"
                                    }
                                  },
                                  "id": 722,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberLocation": "9046:9:0",
                                  "memberName": "creditCap",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 41,
                                  "src": "9039:16:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "-",
                                "rightExpression": {
                                  "id": 723,
                                  "name": "totalSupplyOfCarbonCredit",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 702,
                                  "src": "9058:25:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "9039:44:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "expression": {
                                "id": 719,
                                "name": "Strings",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 45928,
                                "src": "9022:7:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_Strings_$45928_$",
                                  "typeString": "type(library Strings)"
                                }
                              },
                              "id": 720,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "9030:8:0",
                              "memberName": "toString",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 45810,
                              "src": "9022:16:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$",
                                "typeString": "function (uint256) pure returns (string memory)"
                              }
                            },
                            "id": 725,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "9022:62:0",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            }
                          },
                          {
                            "hexValue": "20746f6b656e73206c65667421",
                            "id": 726,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "string",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "9086:15:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_stringliteral_4fa471dd76af46a433f1bb0fde3358b7332fe584c534b38df0d3623a0d204d20",
                              "typeString": "literal_string \" tokens left!\""
                            },
                            "value": " tokens left!"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_stringliteral_f75c09dcaed3e77d5e0fd731099ac5b856e283255484bb26ac8acc677b09f88c",
                              "typeString": "literal_string \"Only \""
                            },
                            {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            },
                            {
                              "typeIdentifier": "t_stringliteral_4fa471dd76af46a433f1bb0fde3358b7332fe584c534b38df0d3623a0d204d20",
                              "typeString": "literal_string \" tokens left!\""
                            }
                          ],
                          "expression": {
                            "id": 716,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "8999:6:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_string_storage_ptr_$",
                              "typeString": "type(string storage pointer)"
                            },
                            "typeName": {
                              "id": 715,
                              "name": "string",
                              "nodeType": "ElementaryTypeName",
                              "src": "8999:6:0",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 717,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "9006:6:0",
                          "memberName": "concat",
                          "nodeType": "MemberAccess",
                          "src": "8999:13:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_stringconcat_pure$__$returns$_t_string_memory_ptr_$",
                            "typeString": "function () pure returns (string memory)"
                          }
                        },
                        "id": 727,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "8999:103:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      ],
                      "id": 708,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "8927:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 728,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8927:176:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 729,
                  "nodeType": "ExpressionStatement",
                  "src": "8927:176:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 733,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "9140:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 734,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "9144:6:0",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "9140:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "id": 735,
                          "name": "market",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 670,
                          "src": "9152:6:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Market_$57_storage_ptr",
                            "typeString": "struct CarbonUMArket.Market storage pointer"
                          }
                        },
                        "id": 736,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "9159:5:0",
                        "memberName": "owner",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 35,
                        "src": "9152:12:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 739,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 737,
                          "name": "creditToCreate",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 665,
                          "src": "9166:14:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "*",
                        "rightExpression": {
                          "hexValue": "31653132",
                          "id": 738,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "9181:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1000000000000_by_1",
                            "typeString": "int_const 1000000000000"
                          },
                          "value": "1e12"
                        },
                        "src": "9166:19:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 730,
                        "name": "currency",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 19,
                        "src": "9114:8:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$45159",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 732,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "9123:16:0",
                      "memberName": "safeTransferFrom",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 45241,
                      "src": "9114:25:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$45159_$_t_address_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20_$45159_$",
                        "typeString": "function (contract IERC20,address,address,uint256)"
                      }
                    },
                    "id": 740,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9114:72:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 741,
                  "nodeType": "ExpressionStatement",
                  "src": "9114:72:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 749,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "9229:4:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_CarbonUMArket_$1000",
                              "typeString": "contract CarbonUMArket"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_CarbonUMArket_$1000",
                              "typeString": "contract CarbonUMArket"
                            }
                          ],
                          "id": 748,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "9221:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 747,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "9221:7:0",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 750,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "9221:13:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 751,
                        "name": "creditToCreate",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 665,
                        "src": "9236:14:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "expression": {
                          "id": 742,
                          "name": "market",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 670,
                          "src": "9196:6:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Market_$57_storage_ptr",
                            "typeString": "struct CarbonUMArket.Market storage pointer"
                          }
                        },
                        "id": 745,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "9203:12:0",
                        "memberName": "carbonCredit",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 44,
                        "src": "9196:19:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ExpandedIERC20_$49900",
                          "typeString": "contract ExpandedIERC20"
                        }
                      },
                      "id": 746,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "9216:4:0",
                      "memberName": "mint",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 49884,
                      "src": "9196:24:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,uint256) external returns (bool)"
                      }
                    },
                    "id": 752,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9196:55:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 753,
                  "nodeType": "ExpressionStatement",
                  "src": "9196:55:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 759,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "9297:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 760,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "9301:6:0",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "9297:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 761,
                        "name": "creditToCreate",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 665,
                        "src": "9309:14:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "expression": {
                          "id": 754,
                          "name": "market",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 670,
                          "src": "9261:6:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Market_$57_storage_ptr",
                            "typeString": "struct CarbonUMArket.Market storage pointer"
                          }
                        },
                        "id": 757,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "9268:23:0",
                        "memberName": "convertibleCarbonCredit",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 47,
                        "src": "9261:30:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ExpandedIERC20_$49900",
                          "typeString": "contract ExpandedIERC20"
                        }
                      },
                      "id": 758,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "9292:4:0",
                      "memberName": "mint",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 49884,
                      "src": "9261:35:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,uint256) external returns (bool)"
                      }
                    },
                    "id": 762,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9261:63:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 763,
                  "nodeType": "ExpressionStatement",
                  "src": "9261:63:0"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 765,
                        "name": "marketId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 663,
                        "src": "9362:8:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "expression": {
                          "id": 766,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "9372:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 767,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "9376:6:0",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "9372:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 768,
                        "name": "creditToCreate",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 665,
                        "src": "9384:14:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 764,
                      "name": "CreditsMinted",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 102,
                      "src": "9348:13:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_bytes32_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (bytes32,address,uint256)"
                      }
                    },
                    "id": 769,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9348:51:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 770,
                  "nodeType": "EmitStatement",
                  "src": "9343:56:0"
                }
              ]
            },
            "functionSelector": "a7f0de81",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "mintCredit",
            "nameLocation": "8494:10:0",
            "parameters": {
              "id": 666,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 663,
                  "mutability": "mutable",
                  "name": "marketId",
                  "nameLocation": "8513:8:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 772,
                  "src": "8505:16:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 662,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "8505:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 665,
                  "mutability": "mutable",
                  "name": "creditToCreate",
                  "nameLocation": "8531:14:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 772,
                  "src": "8523:22:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 664,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "8523:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8504:42:0"
            },
            "returnParameters": {
              "id": 667,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "8554:0:0"
            },
            "scope": 1000,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 844,
            "nodeType": "FunctionDefinition",
            "src": "9412:548:0",
            "nodes": [],
            "body": {
              "id": 843,
              "nodeType": "Block",
              "src": "9464:496:0",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    779
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 779,
                      "mutability": "mutable",
                      "name": "market",
                      "nameLocation": "9489:6:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 843,
                      "src": "9474:21:0",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Market_$57_storage_ptr",
                        "typeString": "struct CarbonUMArket.Market"
                      },
                      "typeName": {
                        "id": 778,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 777,
                          "name": "Market",
                          "nameLocations": [
                            "9474:6:0"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 57,
                          "src": "9474:6:0"
                        },
                        "referencedDeclaration": 57,
                        "src": "9474:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Market_$57_storage_ptr",
                          "typeString": "struct CarbonUMArket.Market"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 783,
                  "initialValue": {
                    "baseExpression": {
                      "id": 780,
                      "name": "markets",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 67,
                      "src": "9498:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_Market_$57_storage_$",
                        "typeString": "mapping(bytes32 => struct CarbonUMArket.Market storage ref)"
                      }
                    },
                    "id": 782,
                    "indexExpression": {
                      "id": 781,
                      "name": "marketId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 774,
                      "src": "9506:8:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "9498:17:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Market_$57_storage",
                      "typeString": "struct CarbonUMArket.Market storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "9474:41:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint64",
                          "typeString": "uint64"
                        },
                        "id": 788,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 785,
                            "name": "market",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 779,
                            "src": "9533:6:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Market_$57_storage_ptr",
                              "typeString": "struct CarbonUMArket.Market storage pointer"
                            }
                          },
                          "id": 786,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "9540:11:0",
                          "memberName": "marketState",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 56,
                          "src": "9533:18:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint64",
                            "typeString": "uint64"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<",
                        "rightExpression": {
                          "hexValue": "32",
                          "id": 787,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "9554:1:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_2_by_1",
                            "typeString": "int_const 2"
                          },
                          "value": "2"
                        },
                        "src": "9533:22:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4d61726b6574206973206175646974656421",
                        "id": 789,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "9557:20:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_aec570d71594aed0773dd9b60b98f40511a3c404149d1dcf6759d097b8f2a069",
                          "typeString": "literal_string \"Market is audited!\""
                        },
                        "value": "Market is audited!"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_aec570d71594aed0773dd9b60b98f40511a3c404149d1dcf6759d097b8f2a069",
                          "typeString": "literal_string \"Market is audited!\""
                        }
                      ],
                      "id": 784,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "9525:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 790,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9525:53:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 791,
                  "nodeType": "ExpressionStatement",
                  "src": "9525:53:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 799,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 793,
                            "name": "market",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 779,
                            "src": "9596:6:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Market_$57_storage_ptr",
                              "typeString": "struct CarbonUMArket.Market storage pointer"
                            }
                          },
                          "id": 794,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "9603:5:0",
                          "memberName": "owner",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 35,
                          "src": "9596:12:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 797,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "9620:1:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 796,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "9612:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 795,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "9612:7:0",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 798,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "9612:10:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "9596:26:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4d61726b6574206973206e6f7420696e697469616c697a6564",
                        "id": 800,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "9624:27:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_808af0af2523cbb6cb28126d69a5d2969c0ea69f4e938ad0e828598d140f1628",
                          "typeString": "literal_string \"Market is not initialized\""
                        },
                        "value": "Market is not initialized"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_808af0af2523cbb6cb28126d69a5d2969c0ea69f4e938ad0e828598d140f1628",
                          "typeString": "literal_string \"Market is not initialized\""
                        }
                      ],
                      "id": 792,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "9588:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 801,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9588:64:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 802,
                  "nodeType": "ExpressionStatement",
                  "src": "9588:64:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 811,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 807,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "9702:3:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 808,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "9706:6:0",
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "9702:10:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "expression": {
                              "expression": {
                                "id": 804,
                                "name": "market",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 779,
                                "src": "9670:6:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Market_$57_storage_ptr",
                                  "typeString": "struct CarbonUMArket.Market storage pointer"
                                }
                              },
                              "id": 805,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "9677:14:0",
                              "memberName": "validatorToken",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 50,
                              "src": "9670:21:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_ExpandedIERC20_$49900",
                                "typeString": "contract ExpandedIERC20"
                              }
                            },
                            "id": 806,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "9692:9:0",
                            "memberName": "balanceOf",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 45098,
                            "src": "9670:31:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                              "typeString": "function (address) view external returns (uint256)"
                            }
                          },
                          "id": 809,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "9670:43:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 810,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "9717:1:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "9670:48:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "56616c696461746f722063616e207265676973746572206f6e6c79206f6e652074696d65",
                        "id": 812,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "9720:38:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_6fcc0c9cd483a7e2670ee8abf87503df035f79dc871c2da96580b17318960826",
                          "typeString": "literal_string \"Validator can register only one time\""
                        },
                        "value": "Validator can register only one time"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_6fcc0c9cd483a7e2670ee8abf87503df035f79dc871c2da96580b17318960826",
                          "typeString": "literal_string \"Validator can register only one time\""
                        }
                      ],
                      "id": 803,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "9662:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 813,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9662:97:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 814,
                  "nodeType": "ExpressionStatement",
                  "src": "9662:97:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 820,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "9796:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 821,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "9800:6:0",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "9796:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "31",
                        "id": 822,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "9808:1:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        }
                      ],
                      "expression": {
                        "expression": {
                          "id": 815,
                          "name": "market",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 779,
                          "src": "9769:6:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Market_$57_storage_ptr",
                            "typeString": "struct CarbonUMArket.Market storage pointer"
                          }
                        },
                        "id": 818,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "9776:14:0",
                        "memberName": "validatorToken",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 50,
                        "src": "9769:21:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ExpandedIERC20_$49900",
                          "typeString": "contract ExpandedIERC20"
                        }
                      },
                      "id": 819,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "9791:4:0",
                      "memberName": "mint",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 49884,
                      "src": "9769:26:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,uint256) external returns (bool)"
                      }
                    },
                    "id": 823,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9769:41:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 824,
                  "nodeType": "ExpressionStatement",
                  "src": "9769:41:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 828,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "9847:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 829,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "9851:6:0",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "9847:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 832,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "9867:4:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_CarbonUMArket_$1000",
                              "typeString": "contract CarbonUMArket"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_CarbonUMArket_$1000",
                              "typeString": "contract CarbonUMArket"
                            }
                          ],
                          "id": 831,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "9859:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 830,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "9859:7:0",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 833,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "9859:13:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 834,
                        "name": "validatorFee",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 31,
                        "src": "9874:12:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint64",
                          "typeString": "uint64"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint64",
                          "typeString": "uint64"
                        }
                      ],
                      "expression": {
                        "id": 825,
                        "name": "currency",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 19,
                        "src": "9821:8:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$45159",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 827,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "9830:16:0",
                      "memberName": "safeTransferFrom",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 45241,
                      "src": "9821:25:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$45159_$_t_address_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20_$45159_$",
                        "typeString": "function (contract IERC20,address,address,uint256)"
                      }
                    },
                    "id": 835,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9821:66:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 836,
                  "nodeType": "ExpressionStatement",
                  "src": "9821:66:0"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 838,
                        "name": "marketId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 774,
                        "src": "9932:8:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "expression": {
                          "id": 839,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "9942:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 840,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "9946:6:0",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "9942:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 837,
                      "name": "ValidatorRegistered",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 108,
                      "src": "9912:19:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_bytes32_$_t_address_$returns$__$",
                        "typeString": "function (bytes32,address)"
                      }
                    },
                    "id": 841,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9912:41:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 842,
                  "nodeType": "EmitStatement",
                  "src": "9907:46:0"
                }
              ]
            },
            "functionSelector": "607049d8",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "registerValidator",
            "nameLocation": "9421:17:0",
            "parameters": {
              "id": 775,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 774,
                  "mutability": "mutable",
                  "name": "marketId",
                  "nameLocation": "9447:8:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 844,
                  "src": "9439:16:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 773,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "9439:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "9438:18:0"
            },
            "returnParameters": {
              "id": 776,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "9464:0:0"
            },
            "scope": 1000,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 863,
            "nodeType": "FunctionDefinition",
            "src": "9966:148:0",
            "nodes": [],
            "body": {
              "id": 862,
              "nodeType": "Block",
              "src": "10032:82:0",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 860,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "arguments": [
                        {
                          "expression": {
                            "id": 856,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "10092:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 857,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "10096:6:0",
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "10092:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "expression": {
                          "expression": {
                            "baseExpression": {
                              "id": 851,
                              "name": "markets",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 67,
                              "src": "10049:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_Market_$57_storage_$",
                                "typeString": "mapping(bytes32 => struct CarbonUMArket.Market storage ref)"
                              }
                            },
                            "id": 853,
                            "indexExpression": {
                              "id": 852,
                              "name": "marketId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 846,
                              "src": "10057:8:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "10049:17:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Market_$57_storage",
                              "typeString": "struct CarbonUMArket.Market storage ref"
                            }
                          },
                          "id": 854,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "10067:14:0",
                          "memberName": "validatorToken",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 50,
                          "src": "10049:32:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_ExpandedIERC20_$49900",
                            "typeString": "contract ExpandedIERC20"
                          }
                        },
                        "id": 855,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "10082:9:0",
                        "memberName": "balanceOf",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 45098,
                        "src": "10049:42:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                          "typeString": "function (address) view external returns (uint256)"
                        }
                      },
                      "id": 858,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "10049:54:0",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 859,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "10106:1:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "10049:58:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 850,
                  "id": 861,
                  "nodeType": "Return",
                  "src": "10042:65:0"
                }
              ]
            },
            "functionSelector": "9d37c680",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "isValidator",
            "nameLocation": "9975:11:0",
            "parameters": {
              "id": 847,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 846,
                  "mutability": "mutable",
                  "name": "marketId",
                  "nameLocation": "9995:8:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 863,
                  "src": "9987:16:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 845,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "9987:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "9986:18:0"
            },
            "returnParameters": {
              "id": 850,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 849,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 863,
                  "src": "10026:4:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 848,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "10026:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "10025:6:0"
            },
            "scope": 1000,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 999,
            "nodeType": "FunctionDefinition",
            "src": "12215:1255:0",
            "nodes": [],
            "body": {
              "id": 998,
              "nodeType": "Block",
              "src": "12281:1189:0",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    872
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 872,
                      "mutability": "mutable",
                      "name": "market",
                      "nameLocation": "12306:6:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 998,
                      "src": "12291:21:0",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Market_$57_storage_ptr",
                        "typeString": "struct CarbonUMArket.Market"
                      },
                      "typeName": {
                        "id": 871,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 870,
                          "name": "Market",
                          "nameLocations": [
                            "12291:6:0"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 57,
                          "src": "12291:6:0"
                        },
                        "referencedDeclaration": 57,
                        "src": "12291:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Market_$57_storage_ptr",
                          "typeString": "struct CarbonUMArket.Market"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 876,
                  "initialValue": {
                    "baseExpression": {
                      "id": 873,
                      "name": "markets",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 67,
                      "src": "12315:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_Market_$57_storage_$",
                        "typeString": "mapping(bytes32 => struct CarbonUMArket.Market storage ref)"
                      }
                    },
                    "id": 875,
                    "indexExpression": {
                      "id": 874,
                      "name": "marketId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 865,
                      "src": "12323:8:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "12315:17:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Market_$57_storage",
                      "typeString": "struct CarbonUMArket.Market storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "12291:41:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint64",
                          "typeString": "uint64"
                        },
                        "id": 881,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 878,
                            "name": "market",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 872,
                            "src": "12350:6:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Market_$57_storage_ptr",
                              "typeString": "struct CarbonUMArket.Market storage pointer"
                            }
                          },
                          "id": 879,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "12357:11:0",
                          "memberName": "marketState",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 56,
                          "src": "12350:18:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint64",
                            "typeString": "uint64"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "hexValue": "32",
                          "id": 880,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "12372:1:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_2_by_1",
                            "typeString": "int_const 2"
                          },
                          "value": "2"
                        },
                        "src": "12350:23:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4d61726b6574206e6f7420726561647920666f7220736574746c6521",
                        "id": 882,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "12392:30:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_7420b72c2fec7566e66e88ba06dcf0187bbe1cc20b84203a2670fc029d5d6170",
                          "typeString": "literal_string \"Market not ready for settle!\""
                        },
                        "value": "Market not ready for settle!"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_7420b72c2fec7566e66e88ba06dcf0187bbe1cc20b84203a2670fc029d5d6170",
                          "typeString": "literal_string \"Market not ready for settle!\""
                        }
                      ],
                      "id": 877,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "12342:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 883,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12342:81:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 884,
                  "nodeType": "ExpressionStatement",
                  "src": "12342:81:0"
                },
                {
                  "assignments": [
                    886
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 886,
                      "mutability": "mutable",
                      "name": "creditBalance",
                      "nameLocation": "12442:13:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 998,
                      "src": "12434:21:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 885,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "12434:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 895,
                  "initialValue": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 892,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "12507:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 893,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "12511:6:0",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "12507:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "expression": {
                              "id": 888,
                              "name": "market",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 872,
                              "src": "12465:6:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Market_$57_storage_ptr",
                                "typeString": "struct CarbonUMArket.Market storage pointer"
                              }
                            },
                            "id": 889,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "12472:23:0",
                            "memberName": "convertibleCarbonCredit",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 47,
                            "src": "12465:30:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ExpandedIERC20_$49900",
                              "typeString": "contract ExpandedIERC20"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_ExpandedIERC20_$49900",
                              "typeString": "contract ExpandedIERC20"
                            }
                          ],
                          "id": 887,
                          "name": "IERC20",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 45159,
                          "src": "12458:6:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IERC20_$45159_$",
                            "typeString": "type(contract IERC20)"
                          }
                        },
                        "id": 890,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "12458:38:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$45159",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 891,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "12497:9:0",
                      "memberName": "balanceOf",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 45098,
                      "src": "12458:48:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) view external returns (uint256)"
                      }
                    },
                    "id": 894,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12458:60:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "12434:84:0"
                },
                {
                  "assignments": [
                    897
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 897,
                      "mutability": "mutable",
                      "name": "creditDelivered",
                      "nameLocation": "12536:15:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 998,
                      "src": "12528:23:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 896,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "12528:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 899,
                  "initialValue": {
                    "hexValue": "30",
                    "id": 898,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "12554:1:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_0_by_1",
                      "typeString": "int_const 0"
                    },
                    "value": "0"
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "12528:27:0"
                },
                {
                  "assignments": [
                    901
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 901,
                      "mutability": "mutable",
                      "name": "individualReward",
                      "nameLocation": "12573:16:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 998,
                      "src": "12565:24:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 900,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "12565:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 903,
                  "initialValue": {
                    "hexValue": "30",
                    "id": 902,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "12592:1:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_0_by_1",
                      "typeString": "int_const 0"
                    },
                    "value": "0"
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "12565:28:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 909,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "12662:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 910,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "12666:6:0",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "12662:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 911,
                        "name": "creditBalance",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 886,
                        "src": "12674:13:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "expression": {
                          "id": 904,
                          "name": "market",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 872,
                          "src": "12622:6:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Market_$57_storage_ptr",
                            "typeString": "struct CarbonUMArket.Market storage pointer"
                          }
                        },
                        "id": 907,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "12629:23:0",
                        "memberName": "convertibleCarbonCredit",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 47,
                        "src": "12622:30:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ExpandedIERC20_$49900",
                          "typeString": "contract ExpandedIERC20"
                        }
                      },
                      "id": 908,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "12653:8:0",
                      "memberName": "burnFrom",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 49874,
                      "src": "12622:39:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,uint256) external returns (bool)"
                      }
                    },
                    "id": 912,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12622:66:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 913,
                  "nodeType": "ExpressionStatement",
                  "src": "12622:66:0"
                },
                {
                  "condition": {
                    "expression": {
                      "id": 914,
                      "name": "market",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 872,
                      "src": "12706:6:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Market_$57_storage_ptr",
                        "typeString": "struct CarbonUMArket.Market storage pointer"
                      }
                    },
                    "id": 915,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberLocation": "12713:16:0",
                    "memberName": "promiseDelivered",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 54,
                    "src": "12706:23:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 988,
                    "nodeType": "Block",
                    "src": "12943:422:0",
                    "statements": [
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 943,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "arguments": [
                              {
                                "expression": {
                                  "id": 939,
                                  "name": "msg",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -15,
                                  "src": "12993:3:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_message",
                                    "typeString": "msg"
                                  }
                                },
                                "id": 940,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "12997:6:0",
                                "memberName": "sender",
                                "nodeType": "MemberAccess",
                                "src": "12993:10:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "expression": {
                                "expression": {
                                  "id": 936,
                                  "name": "market",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 872,
                                  "src": "12961:6:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_Market_$57_storage_ptr",
                                    "typeString": "struct CarbonUMArket.Market storage pointer"
                                  }
                                },
                                "id": 937,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "12968:14:0",
                                "memberName": "validatorToken",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 50,
                                "src": "12961:21:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_ExpandedIERC20_$49900",
                                  "typeString": "contract ExpandedIERC20"
                                }
                              },
                              "id": 938,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "12983:9:0",
                              "memberName": "balanceOf",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 45098,
                              "src": "12961:31:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                                "typeString": "function (address) view external returns (uint256)"
                              }
                            },
                            "id": 941,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "12961:43:0",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": ">",
                          "rightExpression": {
                            "hexValue": "30",
                            "id": 942,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "13007:1:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "src": "12961:47:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 987,
                        "nodeType": "IfStatement",
                        "src": "12957:398:0",
                        "trueBody": {
                          "id": 986,
                          "nodeType": "Block",
                          "src": "13010:345:0",
                          "statements": [
                            {
                              "expression": {
                                "id": 959,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "id": 944,
                                  "name": "individualReward",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 901,
                                  "src": "13027:16:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "condition": {
                                    "commonType": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    "id": 950,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftExpression": {
                                      "arguments": [],
                                      "expression": {
                                        "argumentTypes": [],
                                        "expression": {
                                          "expression": {
                                            "id": 945,
                                            "name": "market",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 872,
                                            "src": "13046:6:0",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_struct$_Market_$57_storage_ptr",
                                              "typeString": "struct CarbonUMArket.Market storage pointer"
                                            }
                                          },
                                          "id": 946,
                                          "isConstant": false,
                                          "isLValue": true,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "memberLocation": "13053:14:0",
                                          "memberName": "validatorToken",
                                          "nodeType": "MemberAccess",
                                          "referencedDeclaration": 50,
                                          "src": "13046:21:0",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_contract$_ExpandedIERC20_$49900",
                                            "typeString": "contract ExpandedIERC20"
                                          }
                                        },
                                        "id": 947,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "memberLocation": "13068:11:0",
                                        "memberName": "totalSupply",
                                        "nodeType": "MemberAccess",
                                        "referencedDeclaration": 45090,
                                        "src": "13046:33:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$",
                                          "typeString": "function () view external returns (uint256)"
                                        }
                                      },
                                      "id": 948,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "kind": "functionCall",
                                      "lValueRequested": false,
                                      "nameLocations": [],
                                      "names": [],
                                      "nodeType": "FunctionCall",
                                      "src": "13046:35:0",
                                      "tryCall": false,
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "nodeType": "BinaryOperation",
                                    "operator": ">",
                                    "rightExpression": {
                                      "hexValue": "30",
                                      "id": 949,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "kind": "number",
                                      "lValueRequested": false,
                                      "nodeType": "Literal",
                                      "src": "13084:1:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_rational_0_by_1",
                                        "typeString": "int_const 0"
                                      },
                                      "value": "0"
                                    },
                                    "src": "13046:39:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    }
                                  },
                                  "falseExpression": {
                                    "hexValue": "30",
                                    "id": 957,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "13125:1:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    },
                                    "value": "0"
                                  },
                                  "id": 958,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "Conditional",
                                  "src": "13046:80:0",
                                  "trueExpression": {
                                    "commonType": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    "id": 956,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftExpression": {
                                      "commonType": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      },
                                      "id": 954,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "leftExpression": {
                                        "expression": {
                                          "id": 951,
                                          "name": "market",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 872,
                                          "src": "13088:6:0",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_struct$_Market_$57_storage_ptr",
                                            "typeString": "struct CarbonUMArket.Market storage pointer"
                                          }
                                        },
                                        "id": 952,
                                        "isConstant": false,
                                        "isLValue": true,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "memberLocation": "13095:6:0",
                                        "memberName": "reward",
                                        "nodeType": "MemberAccess",
                                        "referencedDeclaration": 39,
                                        "src": "13088:13:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "nodeType": "BinaryOperation",
                                      "operator": "*",
                                      "rightExpression": {
                                        "id": 953,
                                        "name": "proportion",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 867,
                                        "src": "13104:10:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint64",
                                          "typeString": "uint64"
                                        }
                                      },
                                      "src": "13088:26:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "nodeType": "BinaryOperation",
                                    "operator": "/",
                                    "rightExpression": {
                                      "hexValue": "3130303030",
                                      "id": 955,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "kind": "number",
                                      "lValueRequested": false,
                                      "nodeType": "Literal",
                                      "src": "13117:5:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_rational_10000_by_1",
                                        "typeString": "int_const 10000"
                                      },
                                      "value": "10000"
                                    },
                                    "src": "13088:34:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "13027:99:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 960,
                              "nodeType": "ExpressionStatement",
                              "src": "13027:99:0"
                            },
                            {
                              "condition": {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 963,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "id": 961,
                                  "name": "individualReward",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 901,
                                  "src": "13147:16:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": ">",
                                "rightExpression": {
                                  "hexValue": "30",
                                  "id": 962,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "13166:1:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  },
                                  "value": "0"
                                },
                                "src": "13147:20:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "id": 975,
                              "nodeType": "IfStatement",
                              "src": "13144:134:0",
                              "trueBody": {
                                "id": 974,
                                "nodeType": "Block",
                                "src": "13168:110:0",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "expression": {
                                            "id": 967,
                                            "name": "market",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 872,
                                            "src": "13216:6:0",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_struct$_Market_$57_storage_ptr",
                                              "typeString": "struct CarbonUMArket.Market storage pointer"
                                            }
                                          },
                                          "id": 968,
                                          "isConstant": false,
                                          "isLValue": true,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "memberLocation": "13223:5:0",
                                          "memberName": "owner",
                                          "nodeType": "MemberAccess",
                                          "referencedDeclaration": 35,
                                          "src": "13216:12:0",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                          }
                                        },
                                        {
                                          "expression": {
                                            "id": 969,
                                            "name": "msg",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": -15,
                                            "src": "13230:3:0",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_magic_message",
                                              "typeString": "msg"
                                            }
                                          },
                                          "id": 970,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "memberLocation": "13234:6:0",
                                          "memberName": "sender",
                                          "nodeType": "MemberAccess",
                                          "src": "13230:10:0",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                          }
                                        },
                                        {
                                          "id": 971,
                                          "name": "individualReward",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 901,
                                          "src": "13242:16:0",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        }
                                      ],
                                      "expression": {
                                        "argumentTypes": [
                                          {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                          },
                                          {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                          },
                                          {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        ],
                                        "expression": {
                                          "id": 964,
                                          "name": "currency",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 19,
                                          "src": "13190:8:0",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_contract$_IERC20_$45159",
                                            "typeString": "contract IERC20"
                                          }
                                        },
                                        "id": 966,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "memberLocation": "13199:16:0",
                                        "memberName": "safeTransferFrom",
                                        "nodeType": "MemberAccess",
                                        "referencedDeclaration": 45241,
                                        "src": "13190:25:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$45159_$_t_address_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20_$45159_$",
                                          "typeString": "function (contract IERC20,address,address,uint256)"
                                        }
                                      },
                                      "id": 972,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "kind": "functionCall",
                                      "lValueRequested": false,
                                      "nameLocations": [],
                                      "names": [],
                                      "nodeType": "FunctionCall",
                                      "src": "13190:69:0",
                                      "tryCall": false,
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_tuple$__$",
                                        "typeString": "tuple()"
                                      }
                                    },
                                    "id": 973,
                                    "nodeType": "ExpressionStatement",
                                    "src": "13190:69:0"
                                  }
                                ]
                              }
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "expression": {
                                      "id": 981,
                                      "name": "msg",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": -15,
                                      "src": "13326:3:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_magic_message",
                                        "typeString": "msg"
                                      }
                                    },
                                    "id": 982,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberLocation": "13330:6:0",
                                    "memberName": "sender",
                                    "nodeType": "MemberAccess",
                                    "src": "13326:10:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  {
                                    "hexValue": "31",
                                    "id": 983,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "13338:1:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_1_by_1",
                                      "typeString": "int_const 1"
                                    },
                                    "value": "1"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    },
                                    {
                                      "typeIdentifier": "t_rational_1_by_1",
                                      "typeString": "int_const 1"
                                    }
                                  ],
                                  "expression": {
                                    "expression": {
                                      "id": 976,
                                      "name": "market",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 872,
                                      "src": "13295:6:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_Market_$57_storage_ptr",
                                        "typeString": "struct CarbonUMArket.Market storage pointer"
                                      }
                                    },
                                    "id": 979,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberLocation": "13302:14:0",
                                    "memberName": "validatorToken",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 50,
                                    "src": "13295:21:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_ExpandedIERC20_$49900",
                                      "typeString": "contract ExpandedIERC20"
                                    }
                                  },
                                  "id": 980,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberLocation": "13317:8:0",
                                  "memberName": "burnFrom",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 49874,
                                  "src": "13295:30:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                                    "typeString": "function (address,uint256) external returns (bool)"
                                  }
                                },
                                "id": 984,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "13295:45:0",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "id": 985,
                              "nodeType": "ExpressionStatement",
                              "src": "13295:45:0"
                            }
                          ]
                        }
                      }
                    ]
                  },
                  "id": 989,
                  "nodeType": "IfStatement",
                  "src": "12703:662:0",
                  "trueBody": {
                    "id": 935,
                    "nodeType": "Block",
                    "src": "12730:208:0",
                    "statements": [
                      {
                        "expression": {
                          "id": 918,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 916,
                            "name": "creditDelivered",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 897,
                            "src": "12744:15:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 917,
                            "name": "creditBalance",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 886,
                            "src": "12762:13:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "12744:31:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 919,
                        "nodeType": "ExpressionStatement",
                        "src": "12744:31:0"
                      },
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 922,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 920,
                            "name": "creditDelivered",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 897,
                            "src": "12793:15:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": ">",
                          "rightExpression": {
                            "hexValue": "30",
                            "id": 921,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "12811:1:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "src": "12793:19:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 934,
                        "nodeType": "IfStatement",
                        "src": "12789:127:0",
                        "trueBody": {
                          "id": 933,
                          "nodeType": "Block",
                          "src": "12814:102:0",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "expression": {
                                      "id": 928,
                                      "name": "msg",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": -15,
                                      "src": "12873:3:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_magic_message",
                                        "typeString": "msg"
                                      }
                                    },
                                    "id": 929,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberLocation": "12877:6:0",
                                    "memberName": "sender",
                                    "nodeType": "MemberAccess",
                                    "src": "12873:10:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  {
                                    "id": 930,
                                    "name": "creditDelivered",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 897,
                                    "src": "12885:15:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    },
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  ],
                                  "expression": {
                                    "arguments": [
                                      {
                                        "expression": {
                                          "id": 924,
                                          "name": "market",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 872,
                                          "src": "12839:6:0",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_struct$_Market_$57_storage_ptr",
                                            "typeString": "struct CarbonUMArket.Market storage pointer"
                                          }
                                        },
                                        "id": 925,
                                        "isConstant": false,
                                        "isLValue": true,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "memberLocation": "12846:12:0",
                                        "memberName": "carbonCredit",
                                        "nodeType": "MemberAccess",
                                        "referencedDeclaration": 44,
                                        "src": "12839:19:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_contract$_ExpandedIERC20_$49900",
                                          "typeString": "contract ExpandedIERC20"
                                        }
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_contract$_ExpandedIERC20_$49900",
                                          "typeString": "contract ExpandedIERC20"
                                        }
                                      ],
                                      "id": 923,
                                      "name": "IERC20",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 45159,
                                      "src": "12832:6:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_contract$_IERC20_$45159_$",
                                        "typeString": "type(contract IERC20)"
                                      }
                                    },
                                    "id": 926,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "typeConversion",
                                    "lValueRequested": false,
                                    "nameLocations": [],
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "12832:27:0",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_IERC20_$45159",
                                      "typeString": "contract IERC20"
                                    }
                                  },
                                  "id": 927,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberLocation": "12860:12:0",
                                  "memberName": "safeTransfer",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 45215,
                                  "src": "12832:40:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$45159_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20_$45159_$",
                                    "typeString": "function (contract IERC20,address,uint256)"
                                  }
                                },
                                "id": 931,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "12832:69:0",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 932,
                              "nodeType": "ExpressionStatement",
                              "src": "12832:69:0"
                            }
                          ]
                        }
                      }
                    ]
                  }
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 991,
                        "name": "marketId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 865,
                        "src": "13403:8:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "expression": {
                          "id": 992,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "13413:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 993,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "13417:6:0",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "13413:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 994,
                        "name": "individualReward",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 901,
                        "src": "13425:16:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 995,
                        "name": "creditDelivered",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 897,
                        "src": "13443:15:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 990,
                      "name": "MarketSettled",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 118,
                      "src": "13389:13:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_bytes32_$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (bytes32,address,uint256,uint256)"
                      }
                    },
                    "id": 996,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "13389:70:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 997,
                  "nodeType": "EmitStatement",
                  "src": "13384:75:0"
                }
              ]
            },
            "functionSelector": "5a682986",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "settleMarket",
            "nameLocation": "12224:12:0",
            "parameters": {
              "id": 868,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 865,
                  "mutability": "mutable",
                  "name": "marketId",
                  "nameLocation": "12245:8:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 999,
                  "src": "12237:16:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 864,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "12237:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 867,
                  "mutability": "mutable",
                  "name": "proportion",
                  "nameLocation": "12262:10:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 999,
                  "src": "12255:17:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint64",
                    "typeString": "uint64"
                  },
                  "typeName": {
                    "id": 866,
                    "name": "uint64",
                    "nodeType": "ElementaryTypeName",
                    "src": "12255:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint64",
                      "typeString": "uint64"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "12236:37:0"
            },
            "returnParameters": {
              "id": 869,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "12281:0:0"
            },
            "scope": 1000,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 11,
              "name": "OptimisticOracleV3CallbackRecipientInterface",
              "nameLocations": [
                "849:44:0"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 52517,
              "src": "849:44:0"
            },
            "id": 12,
            "nodeType": "InheritanceSpecifier",
            "src": "849:44:0"
          }
        ],
        "canonicalName": "CarbonUMArket",
        "contractDependencies": [
          47153
        ],
        "contractKind": "contract",
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          1000,
          52517
        ],
        "name": "CarbonUMArket",
        "nameLocation": "832:13:0",
        "scope": 1001,
        "usedErrors": []
      }
    ],
    "license": "AGPL-3.0-only"
  },
  "id": 0
}